{"sha": "38b2e2980e6e30eca28d059428cd6eec3182ef9b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4YjJlMjk4MGU2ZTMwZWNhMjhkMDU5NDI4Y2Q2ZWVjMzE4MmVmOWI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-08-11T17:34:18Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-08-11T17:59:46Z"}, "message": "Misc small cleanups", "tree": {"sha": "5a7106f66ed9714c755bec603b8cd78e5f94efd7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a7106f66ed9714c755bec603b8cd78e5f94efd7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38b2e2980e6e30eca28d059428cd6eec3182ef9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38b2e2980e6e30eca28d059428cd6eec3182ef9b", "html_url": "https://github.com/rust-lang/rust/commit/38b2e2980e6e30eca28d059428cd6eec3182ef9b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38b2e2980e6e30eca28d059428cd6eec3182ef9b/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6fe59bf8776f8913aacfb00a2281c94a117b95d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/6fe59bf8776f8913aacfb00a2281c94a117b95d1", "html_url": "https://github.com/rust-lang/rust/commit/6fe59bf8776f8913aacfb00a2281c94a117b95d1"}], "stats": {"total": 10, "additions": 1, "deletions": 9}, "files": [{"sha": "659872be25e695cb89a1b9b9287d089bc941bcde", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/38b2e2980e6e30eca28d059428cd6eec3182ef9b/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38b2e2980e6e30eca28d059428cd6eec3182ef9b/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=38b2e2980e6e30eca28d059428cd6eec3182ef9b", "patch": "@@ -2406,12 +2406,7 @@ pub fn fill_fn_pair(bcx: @mut Block, pair: ValueRef, llfn: ValueRef,\n }\n \n pub fn item_path(ccx: &CrateContext, id: &ast::NodeId) -> path {\n-    match ccx.tcx.items.get_copy(id) {\n-        ast_map::node_item(i, p) =>\n-            vec::append((*p).clone(), [path_name(i.ident)]),\n-        // separate map for paths?\n-        _ => fail!(\"item_path\")\n-    }\n+    ty::item_path(ccx.tcx, ast_util::local_def(*id))\n }\n \n fn exported_name(ccx: @mut CrateContext, path: path, ty: ty::t, attrs: &[ast::Attribute]) -> ~str {"}, {"sha": "bf3dea06ee260ebd310646df80e2c62fd4fde5b9", "filename": "src/librustc/middle/trans/common.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/38b2e2980e6e30eca28d059428cd6eec3182ef9b/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38b2e2980e6e30eca28d059428cd6eec3182ef9b/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs?ref=38b2e2980e6e30eca28d059428cd6eec3182ef9b", "patch": "@@ -687,7 +687,6 @@ pub fn tuplify_box_ty(tcx: ty::ctxt, t: ty::t) -> ty::t {\n                          t]);\n }\n \n-\n // LLVM constant constructors.\n pub fn C_null(t: Type) -> ValueRef {\n     unsafe {"}, {"sha": "76d97daceb6bad2b58932ec5949350c72194cd0f", "filename": "src/librustc/middle/trans/foreign.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38b2e2980e6e30eca28d059428cd6eec3182ef9b/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38b2e2980e6e30eca28d059428cd6eec3182ef9b/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs?ref=38b2e2980e6e30eca28d059428cd6eec3182ef9b", "patch": "@@ -839,8 +839,6 @@ pub fn trans_intrinsic(ccx: @mut CrateContext,\n         \"visit_tydesc\" => {\n             let td = get_param(decl, first_real_arg);\n             let visitor = get_param(decl, first_real_arg + 1u);\n-            //let llvisitorptr = alloca(bcx, val_ty(visitor));\n-            //Store(bcx, visitor, llvisitorptr);\n             let td = PointerCast(bcx, td, ccx.tydesc_type.ptr_to());\n             glue::call_tydesc_glue_full(bcx, visitor, td,\n                                         abi::tydesc_field_visit_glue, None);"}]}