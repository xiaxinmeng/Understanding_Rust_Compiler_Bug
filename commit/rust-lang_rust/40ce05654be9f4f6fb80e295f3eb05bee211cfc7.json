{"sha": "40ce05654be9f4f6fb80e295f3eb05bee211cfc7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwY2UwNTY1NGJlOWY0ZjZmYjgwZTI5NWYzZWIwNWJlZTIxMWNmYzc=", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-02-05T20:55:09Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-02-06T22:35:38Z"}, "message": "Eat dogfood", "tree": {"sha": "a47e93f172348b89466476fcb3649093975df42a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a47e93f172348b89466476fcb3649093975df42a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40ce05654be9f4f6fb80e295f3eb05bee211cfc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40ce05654be9f4f6fb80e295f3eb05bee211cfc7", "html_url": "https://github.com/rust-lang/rust/commit/40ce05654be9f4f6fb80e295f3eb05bee211cfc7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40ce05654be9f4f6fb80e295f3eb05bee211cfc7/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac5e9c8d2691da5a3872a8eec97ce694193c1e5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac5e9c8d2691da5a3872a8eec97ce694193c1e5c", "html_url": "https://github.com/rust-lang/rust/commit/ac5e9c8d2691da5a3872a8eec97ce694193c1e5c"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "d13c27a1957d60170f48f866120e17d070376fd1", "filename": "clippy_dev/src/serve.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/40ce05654be9f4f6fb80e295f3eb05bee211cfc7/clippy_dev%2Fsrc%2Fserve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40ce05654be9f4f6fb80e295f3eb05bee211cfc7/clippy_dev%2Fsrc%2Fserve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fserve.rs?ref=40ce05654be9f4f6fb80e295f3eb05bee211cfc7", "patch": "@@ -34,7 +34,7 @@ pub fn run(port: u16, lint: Option<&str>) -> ! {\n                 // Give some time for python to start\n                 thread::sleep(Duration::from_millis(500));\n                 // Launch browser after first export.py has completed and http.server is up\n-                let _ = opener::open(url);\n+                let _result = opener::open(url);\n             });\n         }\n         thread::sleep(Duration::from_millis(1000));"}, {"sha": "40f04bd677d52e89287e2b4bb4e56d7d0c575c16", "filename": "clippy_lints/src/macro_use.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/40ce05654be9f4f6fb80e295f3eb05bee211cfc7/clippy_lints%2Fsrc%2Fmacro_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40ce05654be9f4f6fb80e295f3eb05bee211cfc7/clippy_lints%2Fsrc%2Fmacro_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmacro_use.rs?ref=40ce05654be9f4f6fb80e295f3eb05bee211cfc7", "patch": "@@ -160,7 +160,7 @@ impl<'tcx> LateLintPass<'tcx> for MacroUseImports {\n             let found_idx = self.mac_refs.iter().position(|mac| import.ends_with(&mac.name));\n \n             if let Some(idx) = found_idx {\n-                let _ = self.mac_refs.remove(idx);\n+                self.mac_refs.remove(idx);\n                 let seg = import.split(\"::\").collect::<Vec<_>>();\n \n                 match seg.as_slice() {"}, {"sha": "b4423ce9ec7dce6f595effcc748ba998790f7dd6", "filename": "src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/40ce05654be9f4f6fb80e295f3eb05bee211cfc7/src%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40ce05654be9f4f6fb80e295f3eb05bee211cfc7/src%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain.rs?ref=40ce05654be9f4f6fb80e295f3eb05bee211cfc7", "patch": "@@ -195,7 +195,7 @@ mod tests {\n     #[should_panic]\n     fn fix_without_unstable() {\n         let args = \"cargo clippy --fix\".split_whitespace().map(ToString::to_string);\n-        let _ = ClippyCmd::new(args);\n+        ClippyCmd::new(args);\n     }\n \n     #[test]"}]}