{"sha": "1d110f8c2e2221f1ea6a8c51d1d79cc8a3b65115", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkMTEwZjhjMmUyMjIxZjFlYTZhOGM1MWQxZDc5Y2M4YTNiNjUxMTU=", "commit": {"author": {"name": "Devin Ragotzy", "email": "devin.ragotzy@gmail.com", "date": "2021-07-04T11:06:23Z"}, "committer": {"name": "Devin Ragotzy", "email": "devin.ragotzy@gmail.com", "date": "2021-07-04T11:06:23Z"}, "message": "Fix emitting in nested (proc_)macros for nonstandard_macro_braces lint", "tree": {"sha": "e509fe25eb7c85b10c0996c9293b726b719271d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e509fe25eb7c85b10c0996c9293b726b719271d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d110f8c2e2221f1ea6a8c51d1d79cc8a3b65115", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d110f8c2e2221f1ea6a8c51d1d79cc8a3b65115", "html_url": "https://github.com/rust-lang/rust/commit/1d110f8c2e2221f1ea6a8c51d1d79cc8a3b65115", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d110f8c2e2221f1ea6a8c51d1d79cc8a3b65115/comments", "author": {"login": "DevinR528", "id": 29749111, "node_id": "MDQ6VXNlcjI5NzQ5MTEx", "avatar_url": "https://avatars.githubusercontent.com/u/29749111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DevinR528", "html_url": "https://github.com/DevinR528", "followers_url": "https://api.github.com/users/DevinR528/followers", "following_url": "https://api.github.com/users/DevinR528/following{/other_user}", "gists_url": "https://api.github.com/users/DevinR528/gists{/gist_id}", "starred_url": "https://api.github.com/users/DevinR528/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DevinR528/subscriptions", "organizations_url": "https://api.github.com/users/DevinR528/orgs", "repos_url": "https://api.github.com/users/DevinR528/repos", "events_url": "https://api.github.com/users/DevinR528/events{/privacy}", "received_events_url": "https://api.github.com/users/DevinR528/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DevinR528", "id": 29749111, "node_id": "MDQ6VXNlcjI5NzQ5MTEx", "avatar_url": "https://avatars.githubusercontent.com/u/29749111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DevinR528", "html_url": "https://github.com/DevinR528", "followers_url": "https://api.github.com/users/DevinR528/followers", "following_url": "https://api.github.com/users/DevinR528/following{/other_user}", "gists_url": "https://api.github.com/users/DevinR528/gists{/gist_id}", "starred_url": "https://api.github.com/users/DevinR528/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DevinR528/subscriptions", "organizations_url": "https://api.github.com/users/DevinR528/orgs", "repos_url": "https://api.github.com/users/DevinR528/repos", "events_url": "https://api.github.com/users/DevinR528/events{/privacy}", "received_events_url": "https://api.github.com/users/DevinR528/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84209994ad8039a590332de390b68b52e79c29b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/84209994ad8039a590332de390b68b52e79c29b2", "html_url": "https://github.com/rust-lang/rust/commit/84209994ad8039a590332de390b68b52e79c29b2"}], "stats": {"total": 66, "additions": 48, "deletions": 18}, "files": [{"sha": "043e7fa30d6e96867dec515ecc2c5ed6800de8dc", "filename": "clippy_lints/src/nonstandard_macro_braces.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1d110f8c2e2221f1ea6a8c51d1d79cc8a3b65115/clippy_lints%2Fsrc%2Fnonstandard_macro_braces.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d110f8c2e2221f1ea6a8c51d1d79cc8a3b65115/clippy_lints%2Fsrc%2Fnonstandard_macro_braces.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnonstandard_macro_braces.rs?ref=1d110f8c2e2221f1ea6a8c51d1d79cc8a3b65115", "patch": "@@ -92,14 +92,18 @@ impl EarlyLintPass for MacroBraces {\n     }\n }\n \n-fn is_offending_macro<'a>(cx: &EarlyContext<'_>, span: Span, this: &'a MacroBraces) -> Option<MacroInfo<'a>> {\n+fn is_offending_macro<'a>(cx: &EarlyContext<'_>, span: Span, mac_braces: &'a MacroBraces) -> Option<MacroInfo<'a>> {\n     if_chain! {\n         if in_macro(span);\n-        if let Some((name, braces)) = find_matching_macro(span, &this.macro_braces);\n+        if let Some((name, braces)) = find_matching_macro(span, &mac_braces.macro_braces);\n         if let Some(snip) = snippet_opt(cx, span.ctxt().outer_expn_data().call_site);\n-        let c = snip.replace(\" \", \"\"); // make formatting consistent\n+        // we must check only invocation sites\n+        // https://github.com/rust-lang/rust-clippy/issues/7422\n+        if snip.starts_with(name);\n+        // make formatting consistent\n+        let c = snip.replace(\" \", \"\");\n         if !c.starts_with(&format!(\"{}!{}\", name, braces.0));\n-        if !this.done.contains(&span.ctxt().outer_expn_data().call_site);\n+        if !mac_braces.done.contains(&span.ctxt().outer_expn_data().call_site);\n         then {\n             Some((name, braces, snip))\n         } else {"}, {"sha": "6452189a4615b818d8935e30471f448ab080b976", "filename": "tests/ui-toml/nonstandard_macro_braces/auxiliary/proc_macro_derive.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/1d110f8c2e2221f1ea6a8c51d1d79cc8a3b65115/tests%2Fui-toml%2Fnonstandard_macro_braces%2Fauxiliary%2Fproc_macro_derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d110f8c2e2221f1ea6a8c51d1d79cc8a3b65115/tests%2Fui-toml%2Fnonstandard_macro_braces%2Fauxiliary%2Fproc_macro_derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fnonstandard_macro_braces%2Fauxiliary%2Fproc_macro_derive.rs?ref=1d110f8c2e2221f1ea6a8c51d1d79cc8a3b65115", "patch": "@@ -0,0 +1,18 @@\n+// compile-flags: --emit=link\n+// no-prefer-dynamic\n+\n+#![crate_type = \"proc-macro\"]\n+\n+extern crate proc_macro;\n+\n+use proc_macro::TokenStream;\n+\n+#[proc_macro_derive(DeriveSomething)]\n+pub fn derive(_: TokenStream) -> TokenStream {\n+    \"fn _f() -> Vec<u8> { vec![] }\".parse().unwrap()\n+}\n+\n+#[proc_macro]\n+pub fn foo_bar(_: TokenStream) -> TokenStream {\n+    \"fn issue_7422() { eprintln!(); }\".parse().unwrap()\n+}"}, {"sha": "e9f042ddefcde5711e361c3979854c555c2272f5", "filename": "tests/ui-toml/nonstandard_macro_braces/conf_nonstandard_macro_braces.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1d110f8c2e2221f1ea6a8c51d1d79cc8a3b65115/tests%2Fui-toml%2Fnonstandard_macro_braces%2Fconf_nonstandard_macro_braces.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d110f8c2e2221f1ea6a8c51d1d79cc8a3b65115/tests%2Fui-toml%2Fnonstandard_macro_braces%2Fconf_nonstandard_macro_braces.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fnonstandard_macro_braces%2Fconf_nonstandard_macro_braces.rs?ref=1d110f8c2e2221f1ea6a8c51d1d79cc8a3b65115", "patch": "@@ -1,9 +1,17 @@\n+// aux-build:proc_macro_derive.rs\n+\n #![warn(clippy::nonstandard_macro_braces)]\n \n+extern crate proc_macro_derive;\n extern crate quote;\n \n use quote::quote;\n \n+#[derive(proc_macro_derive::DeriveSomething)]\n+pub struct S;\n+\n+proc_macro_derive::foo_bar!();\n+\n #[rustfmt::skip]\n macro_rules! test {\n     () => {"}, {"sha": "86063a08280867dd59589b58ecf021ad35b608f4", "filename": "tests/ui-toml/nonstandard_macro_braces/conf_nonstandard_macro_braces.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/1d110f8c2e2221f1ea6a8c51d1d79cc8a3b65115/tests%2Fui-toml%2Fnonstandard_macro_braces%2Fconf_nonstandard_macro_braces.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1d110f8c2e2221f1ea6a8c51d1d79cc8a3b65115/tests%2Fui-toml%2Fnonstandard_macro_braces%2Fconf_nonstandard_macro_braces.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fnonstandard_macro_braces%2Fconf_nonstandard_macro_braces.stderr?ref=1d110f8c2e2221f1ea6a8c51d1d79cc8a3b65115", "patch": "@@ -1,54 +1,54 @@\n error: use of irregular braces for `vec!` macro\n-  --> $DIR/conf_nonstandard_macro_braces.rs:29:13\n+  --> $DIR/conf_nonstandard_macro_braces.rs:37:13\n    |\n LL |     let _ = vec! {1, 2, 3};\n    |             ^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::nonstandard-macro-braces` implied by `-D warnings`\n help: consider writing `vec![1, 2, 3]`\n-  --> $DIR/conf_nonstandard_macro_braces.rs:29:13\n+  --> $DIR/conf_nonstandard_macro_braces.rs:37:13\n    |\n LL |     let _ = vec! {1, 2, 3};\n    |             ^^^^^^^^^^^^^^\n \n error: use of irregular braces for `format!` macro\n-  --> $DIR/conf_nonstandard_macro_braces.rs:30:13\n+  --> $DIR/conf_nonstandard_macro_braces.rs:38:13\n    |\n LL |     let _ = format![\"ugh {} stop being such a good compiler\", \"hello\"];\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n help: consider writing `format!(\"ugh () stop being such a good compiler\", \"hello\")`\n-  --> $DIR/conf_nonstandard_macro_braces.rs:30:13\n+  --> $DIR/conf_nonstandard_macro_braces.rs:38:13\n    |\n LL |     let _ = format![\"ugh {} stop being such a good compiler\", \"hello\"];\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of irregular braces for `quote!` macro\n-  --> $DIR/conf_nonstandard_macro_braces.rs:31:13\n+  --> $DIR/conf_nonstandard_macro_braces.rs:39:13\n    |\n LL |     let _ = quote!(let x = 1;);\n    |             ^^^^^^^^^^^^^^^^^^\n    |\n help: consider writing `quote! {let x = 1;}`\n-  --> $DIR/conf_nonstandard_macro_braces.rs:31:13\n+  --> $DIR/conf_nonstandard_macro_braces.rs:39:13\n    |\n LL |     let _ = quote!(let x = 1;);\n    |             ^^^^^^^^^^^^^^^^^^\n \n error: use of irregular braces for `quote::quote!` macro\n-  --> $DIR/conf_nonstandard_macro_braces.rs:32:13\n+  --> $DIR/conf_nonstandard_macro_braces.rs:40:13\n    |\n LL |     let _ = quote::quote!(match match match);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n help: consider writing `quote::quote! {match match match}`\n-  --> $DIR/conf_nonstandard_macro_braces.rs:32:13\n+  --> $DIR/conf_nonstandard_macro_braces.rs:40:13\n    |\n LL |     let _ = quote::quote!(match match match);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of irregular braces for `vec!` macro\n-  --> $DIR/conf_nonstandard_macro_braces.rs:10:9\n+  --> $DIR/conf_nonstandard_macro_braces.rs:18:9\n    |\n LL |         vec!{0, 0, 0}\n    |         ^^^^^^^^^^^^^\n@@ -57,7 +57,7 @@ LL |     let _ = test!();\n    |             ------- in this macro invocation\n    |\n help: consider writing `vec![0, 0, 0]`\n-  --> $DIR/conf_nonstandard_macro_braces.rs:10:9\n+  --> $DIR/conf_nonstandard_macro_braces.rs:18:9\n    |\n LL |         vec!{0, 0, 0}\n    |         ^^^^^^^^^^^^^\n@@ -67,25 +67,25 @@ LL |     let _ = test!();\n    = note: this error originates in the macro `test` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: use of irregular braces for `type_pos!` macro\n-  --> $DIR/conf_nonstandard_macro_braces.rs:41:12\n+  --> $DIR/conf_nonstandard_macro_braces.rs:49:12\n    |\n LL |     let _: type_pos!(usize) = vec![];\n    |            ^^^^^^^^^^^^^^^^\n    |\n help: consider writing `type_pos![usize]`\n-  --> $DIR/conf_nonstandard_macro_braces.rs:41:12\n+  --> $DIR/conf_nonstandard_macro_braces.rs:49:12\n    |\n LL |     let _: type_pos!(usize) = vec![];\n    |            ^^^^^^^^^^^^^^^^\n \n error: use of irregular braces for `eprint!` macro\n-  --> $DIR/conf_nonstandard_macro_braces.rs:43:5\n+  --> $DIR/conf_nonstandard_macro_braces.rs:51:5\n    |\n LL |     eprint!(\"test if user config overrides defaults\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n help: consider writing `eprint![\"test if user config overrides defaults\"];`\n-  --> $DIR/conf_nonstandard_macro_braces.rs:43:5\n+  --> $DIR/conf_nonstandard_macro_braces.rs:51:5\n    |\n LL |     eprint!(\"test if user config overrides defaults\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}]}