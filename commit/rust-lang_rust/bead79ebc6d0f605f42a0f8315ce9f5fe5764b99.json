{"sha": "bead79ebc6d0f605f42a0f8315ce9f5fe5764b99", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlYWQ3OWViYzZkMGY2MDVmNDJhMGY4MzE1Y2U5ZjVmZTU3NjRiOTk=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2020-02-22T02:35:24Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2020-02-22T11:34:29Z"}, "message": "Add note regarding argument ordering", "tree": {"sha": "bcb99add3610d34e1db29924d8579140d684e15b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bcb99add3610d34e1db29924d8579140d684e15b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bead79ebc6d0f605f42a0f8315ce9f5fe5764b99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bead79ebc6d0f605f42a0f8315ce9f5fe5764b99", "html_url": "https://github.com/rust-lang/rust/commit/bead79ebc6d0f605f42a0f8315ce9f5fe5764b99", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bead79ebc6d0f605f42a0f8315ce9f5fe5764b99/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e372ad48001920a77464c94cb2f48702af7e9ad3", "url": "https://api.github.com/repos/rust-lang/rust/commits/e372ad48001920a77464c94cb2f48702af7e9ad3", "html_url": "https://github.com/rust-lang/rust/commit/e372ad48001920a77464c94cb2f48702af7e9ad3"}], "stats": {"total": 32, "additions": 21, "deletions": 11}, "files": [{"sha": "49f38d86d916133cd21caa44da9963d3506dd880", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bead79ebc6d0f605f42a0f8315ce9f5fe5764b99/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bead79ebc6d0f605f42a0f8315ce9f5fe5764b99/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=bead79ebc6d0f605f42a0f8315ce9f5fe5764b99", "patch": "@@ -464,15 +464,17 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n     /// Report an error that a generic argument did not match the generic parameter that was\n     /// expected.\n     fn generic_arg_mismatch_err(sess: &Session, arg: &GenericArg<'_>, kind: &'static str) {\n-        struct_span_err!(\n+        let mut err = struct_span_err!(\n             sess,\n             arg.span(),\n             E0747,\n             \"{} provided when a {} was expected\",\n             arg.descr(),\n             kind,\n-        )\n-        .emit();\n+        );\n+        // This note will be true as long as generic parameters are strictly ordered by their kind.\n+        err.note(&format!(\"{} arguments must be provided before {} arguments\", kind, arg.descr()));\n+        err.emit();\n     }\n \n     /// Creates the relevant generic argument substitutions"}, {"sha": "150a6011c2c13bc8171a8daadceef8cbe38bf47f", "filename": "src/test/ui/const-generics/const-arg-type-arg-misordered.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bead79ebc6d0f605f42a0f8315ce9f5fe5764b99/src%2Ftest%2Fui%2Fconst-generics%2Fconst-arg-type-arg-misordered.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bead79ebc6d0f605f42a0f8315ce9f5fe5764b99/src%2Ftest%2Fui%2Fconst-generics%2Fconst-arg-type-arg-misordered.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-arg-type-arg-misordered.stderr?ref=bead79ebc6d0f605f42a0f8315ce9f5fe5764b99", "patch": "@@ -11,6 +11,8 @@ error[E0747]: constant provided when a type was expected\n    |\n LL | fn foo<const N: usize>() -> Array<N, ()> {\n    |                                   ^\n+   |\n+   = note: type arguments must be provided before constant arguments\n \n error: aborting due to previous error\n "}, {"sha": "9b18b8c79edda7b50a79597c7a2ca3f3c0f950ca", "filename": "src/test/ui/const-generics/const-param-before-other-params.stderr", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bead79ebc6d0f605f42a0f8315ce9f5fe5764b99/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-before-other-params.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bead79ebc6d0f605f42a0f8315ce9f5fe5764b99/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-before-other-params.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-before-other-params.stderr?ref=bead79ebc6d0f605f42a0f8315ce9f5fe5764b99", "patch": "@@ -10,13 +10,5 @@ error: type parameters must be declared prior to const parameters\n LL | fn foo<const X: (), T>(_: &T) {\n    |       --------------^- help: reorder the parameters: lifetimes, then types, then consts: `<T, const X: ()>`\n \n-warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n-  --> $DIR/const-param-before-other-params.rs:1:12\n-   |\n-LL | #![feature(const_generics)]\n-   |            ^^^^^^^^^^^^^^\n-   |\n-   = note: `#[warn(incomplete_features)]` on by default\n-\n error: aborting due to 2 previous errors\n "}, {"sha": "109542237130a19c36ed4d75a0dcb3d176cb6467", "filename": "src/test/ui/parser/issue-14303-fncall.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bead79ebc6d0f605f42a0f8315ce9f5fe5764b99/src%2Ftest%2Fui%2Fparser%2Fissue-14303-fncall.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bead79ebc6d0f605f42a0f8315ce9f5fe5764b99/src%2Ftest%2Fui%2Fparser%2Fissue-14303-fncall.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-fncall.stderr?ref=bead79ebc6d0f605f42a0f8315ce9f5fe5764b99", "patch": "@@ -3,6 +3,8 @@ error[E0747]: type provided when a lifetime was expected\n    |\n LL |         .collect::<Vec<S<_, 'a>>>();\n    |                          ^\n+   |\n+   = note: lifetime arguments must be provided before type arguments\n \n error: aborting due to previous error\n "}, {"sha": "c1ad2332b5bfa8b21b3e0d614079906c225c650b", "filename": "src/test/ui/parser/issue-14303-path.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bead79ebc6d0f605f42a0f8315ce9f5fe5764b99/src%2Ftest%2Fui%2Fparser%2Fissue-14303-path.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bead79ebc6d0f605f42a0f8315ce9f5fe5764b99/src%2Ftest%2Fui%2Fparser%2Fissue-14303-path.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-path.stderr?ref=bead79ebc6d0f605f42a0f8315ce9f5fe5764b99", "patch": "@@ -3,6 +3,8 @@ error[E0747]: type provided when a lifetime was expected\n    |\n LL | fn bar<'a, 'b, 'c, T>(x: foo::X<'a, T, 'b, 'c>) {}\n    |                                     ^\n+   |\n+   = note: lifetime arguments must be provided before type arguments\n \n error: aborting due to previous error\n "}, {"sha": "ac91813f928396bcd5f9b7da113d02464b009520", "filename": "src/test/ui/suggestions/suggest-move-types.stderr", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bead79ebc6d0f605f42a0f8315ce9f5fe5764b99/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bead79ebc6d0f605f42a0f8315ce9f5fe5764b99/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-types.stderr?ref=bead79ebc6d0f605f42a0f8315ce9f5fe5764b99", "patch": "@@ -79,24 +79,32 @@ error[E0747]: type provided when a lifetime was expected\n    |\n LL | struct Al<'a, T, M: OneWithLifetime<A=(), T, 'a>> {\n    |                                           ^\n+   |\n+   = note: lifetime arguments must be provided before type arguments\n \n error[E0747]: type provided when a lifetime was expected\n   --> $DIR/suggest-move-types.rs:48:71\n    |\n LL | struct Bl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<A=(), B=(), C=(), T, U, V, 'a, 'b, 'c>> {\n    |                                                                       ^\n+   |\n+   = note: lifetime arguments must be provided before type arguments\n \n error[E0747]: lifetime provided when a type was expected\n   --> $DIR/suggest-move-types.rs:64:56\n    |\n LL | struct Cl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<T, 'a, A=(), B=(), C=(), U, 'b, V, 'c>> {\n    |                                                        ^^\n+   |\n+   = note: type arguments must be provided before lifetime arguments\n \n error[E0747]: lifetime provided when a type was expected\n   --> $DIR/suggest-move-types.rs:80:56\n    |\n LL | struct Dl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<T, 'a, A=(), B=(), U, 'b, C=(), V, 'c>> {\n    |                                                        ^^\n+   |\n+   = note: type arguments must be provided before lifetime arguments\n \n error: aborting due to 12 previous errors\n "}, {"sha": "04529fb8cfab3caa1e61ddf2519acd2d91a55be3", "filename": "src/test/ui/traits/trait-object-vs-lifetime.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bead79ebc6d0f605f42a0f8315ce9f5fe5764b99/src%2Ftest%2Fui%2Ftraits%2Ftrait-object-vs-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bead79ebc6d0f605f42a0f8315ce9f5fe5764b99/src%2Ftest%2Fui%2Ftraits%2Ftrait-object-vs-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-object-vs-lifetime.stderr?ref=bead79ebc6d0f605f42a0f8315ce9f5fe5764b99", "patch": "@@ -27,6 +27,8 @@ error[E0747]: type provided when a lifetime was expected\n    |\n LL |     let _: S<dyn 'static +, 'static>;\n    |              ^^^^^^^^^^^^^\n+   |\n+   = note: lifetime arguments must be provided before type arguments\n \n error: aborting due to 5 previous errors\n "}]}