{"sha": "4eb08bb2ab43f0ad80071469771381a4dd03603d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlYjA4YmIyYWI0M2YwYWQ4MDA3MTQ2OTc3MTM4MWE0ZGQwMzYwM2Q=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-08-23T03:21:17Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-08-25T20:41:32Z"}, "message": "Refactor away `AttrNestedMetaItemMethods`.", "tree": {"sha": "8669ce3afa99114fbbdd7fa391d20b9da1521460", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8669ce3afa99114fbbdd7fa391d20b9da1521460"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4eb08bb2ab43f0ad80071469771381a4dd03603d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4eb08bb2ab43f0ad80071469771381a4dd03603d", "html_url": "https://github.com/rust-lang/rust/commit/4eb08bb2ab43f0ad80071469771381a4dd03603d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4eb08bb2ab43f0ad80071469771381a4dd03603d/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8250a26b5bcea9190ac63e756c35d8a54bf9da0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/8250a26b5bcea9190ac63e756c35d8a54bf9da0c", "html_url": "https://github.com/rust-lang/rust/commit/8250a26b5bcea9190ac63e756c35d8a54bf9da0c"}], "stats": {"total": 109, "additions": 50, "deletions": 59}, "files": [{"sha": "42f293577b3bec979165240fcfe60bc78fcd28cc", "filename": "src/librustc/hir/check_attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fcheck_attr.rs?ref=4eb08bb2ab43f0ad80071469771381a4dd03603d", "patch": "@@ -11,7 +11,7 @@\n use session::Session;\n \n use syntax::ast;\n-use syntax::attr::{AttrNestedMetaItemMethods, AttrMetaMethods};\n+use syntax::attr::AttrMetaMethods;\n use syntax::visit;\n use syntax::visit::Visitor;\n "}, {"sha": "ed812471594ed12aafaadec581ee41abf926f6a4", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=4eb08bb2ab43f0ad80071469771381a4dd03603d", "patch": "@@ -38,7 +38,7 @@ use util::nodemap::FnvHashMap;\n use std::cmp;\n use std::default::Default as StdDefault;\n use std::mem;\n-use syntax::attr::{self, AttrMetaMethods, AttrNestedMetaItemMethods};\n+use syntax::attr::{self, AttrMetaMethods};\n use syntax::parse::token::InternedString;\n use syntax::ast;\n use syntax_pos::Span;"}, {"sha": "3285cecb79c4d01eb0ab6e77e90369f443aa5f6f", "filename": "src/librustc_borrowck/borrowck/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fmod.rs?ref=4eb08bb2ab43f0ad80071469771381a4dd03603d", "patch": "@@ -11,7 +11,7 @@\n use borrowck::BorrowckCtxt;\n \n use syntax::ast::{self, MetaItem};\n-use syntax::attr::{AttrMetaMethods, AttrNestedMetaItemMethods};\n+use syntax::attr::AttrMetaMethods;\n use syntax::ptr::P;\n use syntax_pos::{Span, DUMMY_SP};\n "}, {"sha": "7ab61d494b5cf46b5a416349bf3492b5d050dd20", "filename": "src/librustc_incremental/assert_dep_graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibrustc_incremental%2Fassert_dep_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibrustc_incremental%2Fassert_dep_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fassert_dep_graph.rs?ref=4eb08bb2ab43f0ad80071469771381a4dd03603d", "patch": "@@ -56,7 +56,7 @@ use std::env;\n use std::fs::File;\n use std::io::Write;\n use syntax::ast;\n-use syntax::attr::{AttrNestedMetaItemMethods, AttrMetaMethods};\n+use syntax::attr::AttrMetaMethods;\n use syntax::parse::token::InternedString;\n use syntax_pos::Span;\n "}, {"sha": "0a87c0833188b2db27ee4a453b2c2b057f0036ac", "filename": "src/librustc_incremental/persist/dirty_clean.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs?ref=4eb08bb2ab43f0ad80071469771381a4dd03603d", "patch": "@@ -32,7 +32,7 @@ use rustc::hir::def_id::DefId;\n use rustc::hir::intravisit::Visitor;\n use rustc_data_structures::fnv::FnvHashSet;\n use syntax::ast::{self, Attribute, NestedMetaItem};\n-use syntax::attr::{AttrNestedMetaItemMethods, AttrMetaMethods};\n+use syntax::attr::AttrMetaMethods;\n use syntax::parse::token::InternedString;\n use rustc::ty::TyCtxt;\n "}, {"sha": "57afcc47d6784de815b1690b8df54e41f143c00f", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=4eb08bb2ab43f0ad80071469771381a4dd03603d", "patch": "@@ -44,7 +44,7 @@ use lint::{LintPass, LateLintPass};\n use std::collections::HashSet;\n \n use syntax::{ast};\n-use syntax::attr::{self, AttrMetaMethods, AttrNestedMetaItemMethods, AttributeMethods};\n+use syntax::attr::{self, AttrMetaMethods, AttributeMethods};\n use syntax_pos::{Span};\n \n use rustc::hir::{self, PatKind};"}, {"sha": "91b7acff03f1f985339315b40e33301ede4de58f", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=4eb08bb2ab43f0ad80071469771381a4dd03603d", "patch": "@@ -35,7 +35,7 @@ use syntax::ast;\n use syntax::abi::Abi;\n use syntax::codemap;\n use syntax::parse;\n-use syntax::attr::{self, AttrMetaMethods, AttrNestedMetaItemMethods};\n+use syntax::attr::{self, AttrMetaMethods};\n use syntax::parse::token::InternedString;\n use syntax::visit;\n use syntax_pos::{self, Span, mk_sp, Pos};"}, {"sha": "2482a53fe48b9d3b74ce041c459ebd83eee01924", "filename": "src/librustc_metadata/macro_import.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibrustc_metadata%2Fmacro_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibrustc_metadata%2Fmacro_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fmacro_import.rs?ref=4eb08bb2ab43f0ad80071469771381a4dd03603d", "patch": "@@ -18,7 +18,7 @@ use rustc::session::Session;\n use std::collections::{HashSet, HashMap};\n use syntax::parse::token;\n use syntax::ast;\n-use syntax::attr::{self, AttrNestedMetaItemMethods, AttrMetaMethods};\n+use syntax::attr::{self, AttrMetaMethods};\n use syntax::ext;\n use syntax_pos::Span;\n "}, {"sha": "895645a76cba276d318d1713ee8e5720f0b5bcbb", "filename": "src/librustc_plugin/load.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibrustc_plugin%2Fload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibrustc_plugin%2Fload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin%2Fload.rs?ref=4eb08bb2ab43f0ad80071469771381a4dd03603d", "patch": "@@ -20,7 +20,7 @@ use std::env;\n use std::mem;\n use std::path::PathBuf;\n use syntax::ast;\n-use syntax::attr::{AttrMetaMethods, AttrNestedMetaItemMethods};\n+use syntax::attr::{AttrMetaMethods};\n use syntax_pos::{Span, COMMAND_LINE_SP};\n \n /// Pointer to a registrar function."}, {"sha": "e0532e7476f511545d0bf7ac2ae98ac307d4548c", "filename": "src/librustc_trans/assert_module_sources.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibrustc_trans%2Fassert_module_sources.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibrustc_trans%2Fassert_module_sources.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fassert_module_sources.rs?ref=4eb08bb2ab43f0ad80071469771381a4dd03603d", "patch": "@@ -29,7 +29,7 @@\n \n use rustc::ty::TyCtxt;\n use syntax::ast;\n-use syntax::attr::{AttrMetaMethods, AttrNestedMetaItemMethods};\n+use syntax::attr::AttrMetaMethods;\n use syntax::parse::token::InternedString;\n \n use {ModuleSource, ModuleTranslation};"}, {"sha": "79c0bfaaa344813d9b103f7ed4c18577b431bee8", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=4eb08bb2ab43f0ad80071469771381a4dd03603d", "patch": "@@ -26,7 +26,7 @@ pub use self::Visibility::*;\n use syntax::abi::Abi;\n use syntax::ast;\n use syntax::attr;\n-use syntax::attr::{AttributeMethods, AttrMetaMethods, AttrNestedMetaItemMethods};\n+use syntax::attr::{AttributeMethods, AttrMetaMethods};\n use syntax::codemap::Spanned;\n use syntax::parse::token::{self, InternedString, keywords};\n use syntax::ptr::P;\n@@ -542,7 +542,7 @@ impl Clean<Attribute> for ast::Attribute {\n }\n \n // This is a rough approximation that gets us what we want.\n-impl attr::AttrNestedMetaItemMethods for Attribute {\n+impl Attribute {\n     fn check_name(&self, name: &str) -> bool {\n         self.name().map_or(false, |mi_name| &*mi_name == name)\n     }"}, {"sha": "caf05a947d366726245e0d7c3d5a1eb8a5373769", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=4eb08bb2ab43f0ad80071469771381a4dd03603d", "patch": "@@ -141,7 +141,6 @@ pub fn run(input: &str,\n // Look for #![doc(test(no_crate_inject))], used by crates in the std facade\n fn scrape_test_config(krate: &::rustc::hir::Crate) -> TestOptions {\n     use syntax::attr::AttrMetaMethods;\n-    use syntax::attr::AttrNestedMetaItemMethods;\n     use syntax::print::pprust;\n \n     let mut opts = TestOptions {"}, {"sha": "d3397a04b3a53eb85c972b151e9a6fa3a9f81157", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=4eb08bb2ab43f0ad80071469771381a4dd03603d", "patch": "@@ -17,7 +17,7 @@ use std::mem;\n use syntax::abi;\n use syntax::ast;\n use syntax::attr;\n-use syntax::attr::{AttrMetaMethods, AttrNestedMetaItemMethods};\n+use syntax::attr::AttrMetaMethods;\n use syntax_pos::Span;\n \n use rustc::hir::map as hir_map;"}, {"sha": "f1a820ce1d4209203f941a2b41a2a4835cb3821b", "filename": "src/libsyntax/attr.rs", "status": "modified", "additions": 33, "deletions": 41, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibsyntax%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibsyntax%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr.rs?ref=4eb08bb2ab43f0ad80071469771381a4dd03603d", "patch": "@@ -81,32 +81,47 @@ pub fn is_used(attr: &Attribute) -> bool {\n     })\n }\n \n-pub trait AttrNestedMetaItemMethods {\n+impl NestedMetaItem {\n+    /// Returns the MetaItem if self is a NestedMetaItemKind::MetaItem.\n+    pub fn meta_item(&self) -> Option<&P<MetaItem>> {\n+        match self.node {\n+            NestedMetaItemKind::MetaItem(ref item) => Some(&item),\n+            _ => None\n+        }\n+    }\n+\n+    /// Returns the Lit if self is a NestedMetaItemKind::Literal.\n+    pub fn literal(&self) -> Option<&Lit> {\n+        match self.node {\n+            NestedMetaItemKind::Literal(ref lit) => Some(&lit),\n+            _ => None\n+        }\n+    }\n+\n+    /// Returns the Span for `self`.\n+    pub fn span(&self) -> Span {\n+        self.span\n+    }\n+\n     /// Returns true if this list item is a MetaItem with a name of `name`.\n-    fn check_name(&self, name: &str) -> bool {\n+    pub fn check_name(&self, name: &str) -> bool {\n         self.meta_item().map_or(false, |meta_item| meta_item.check_name(name))\n     }\n \n     /// Returns the name of the meta item, e.g. `foo` in `#[foo]`,\n     /// `#[foo=\"bar\"]` and `#[foo(bar)]`, if self is a MetaItem\n-    fn name(&self) -> Option<InternedString> {\n+    pub fn name(&self) -> Option<InternedString> {\n         self.meta_item().and_then(|meta_item| Some(meta_item.name()))\n     }\n \n-    /// Returns the MetaItem if self is a NestedMetaItemKind::MetaItem.\n-    fn meta_item(&self) -> Option<&P<MetaItem>>;\n-\n-    /// Returns the Lit if self is a NestedMetaItemKind::Literal.\n-    fn literal(&self) -> Option<&Lit>;\n-\n     /// Gets the string value if self is a MetaItem and the MetaItem is a\n     /// MetaItemKind::NameValue variant containing a string, otherwise None.\n-    fn value_str(&self) -> Option<InternedString> {\n+    pub fn value_str(&self) -> Option<InternedString> {\n         self.meta_item().and_then(|meta_item| meta_item.value_str())\n     }\n \n     /// Returns a MetaItem if self is a MetaItem with Kind Word.\n-    fn word(&self) -> Option<&P<MetaItem>> {\n+    pub fn word(&self) -> Option<&P<MetaItem>> {\n         self.meta_item().and_then(|meta_item| if meta_item.is_word() {\n             Some(meta_item)\n         } else {\n@@ -115,57 +130,34 @@ pub trait AttrNestedMetaItemMethods {\n     }\n \n     /// Gets a list of inner meta items from a list MetaItem type.\n-    fn meta_item_list(&self) -> Option<&[NestedMetaItem]> {\n+    pub fn meta_item_list(&self) -> Option<&[NestedMetaItem]> {\n         self.meta_item().and_then(|meta_item| meta_item.meta_item_list())\n     }\n \n     /// Returns `true` if the variant is MetaItem.\n-    fn is_meta_item(&self) -> bool {\n+    pub fn is_meta_item(&self) -> bool {\n         self.meta_item().is_some()\n     }\n \n     /// Returns `true` if the variant is Literal.\n-    fn is_literal(&self) -> bool {\n+    pub fn is_literal(&self) -> bool {\n         self.literal().is_some()\n     }\n \n     /// Returns `true` if self is a MetaItem and the meta item is a word.\n-    fn is_word(&self) -> bool {\n+    pub fn is_word(&self) -> bool {\n         self.word().is_some()\n     }\n \n     /// Returns `true` if self is a MetaItem and the meta item is a ValueString.\n-    fn is_value_str(&self) -> bool {\n+    pub fn is_value_str(&self) -> bool {\n         self.value_str().is_some()\n     }\n \n     /// Returns `true` if self is a MetaItem and the meta item is a list.\n-    fn is_meta_item_list(&self) -> bool {\n+    pub fn is_meta_item_list(&self) -> bool {\n         self.meta_item_list().is_some()\n     }\n-\n-    /// Returns the Span for `self`.\n-    fn span(&self) -> Span;\n-}\n-\n-impl AttrNestedMetaItemMethods for NestedMetaItem {\n-    fn meta_item(&self) -> Option<&P<MetaItem>> {\n-        match self.node {\n-            NestedMetaItemKind::MetaItem(ref item) => Some(&item),\n-            _ => None\n-        }\n-    }\n-\n-    fn literal(&self) -> Option<&Lit> {\n-        match self.node {\n-            NestedMetaItemKind::Literal(ref lit) => Some(&lit),\n-            _ => None\n-        }\n-    }\n-\n-    fn span(&self) -> Span {\n-        self.span\n-    }\n }\n \n pub trait AttrMetaMethods {\n@@ -431,7 +423,7 @@ pub fn contains(haystack: &[P<MetaItem>], needle: &MetaItem) -> bool {\n     })\n }\n \n-pub fn list_contains_name<AM: AttrNestedMetaItemMethods>(items: &[AM], name: &str) -> bool {\n+pub fn list_contains_name(items: &[NestedMetaItem], name: &str) -> bool {\n     debug!(\"attr::list_contains_name (name={})\", name);\n     items.iter().any(|item| {\n         debug!(\"  testing: {:?}\", item.name());"}, {"sha": "ed05dc243b32f08a4e7166c088d7d484b4812af0", "filename": "src/libsyntax/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibsyntax%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibsyntax%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fconfig.rs?ref=4eb08bb2ab43f0ad80071469771381a4dd03603d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use attr::{AttrMetaMethods, AttrNestedMetaItemMethods, HasAttrs};\n+use attr::{AttrMetaMethods, HasAttrs};\n use feature_gate::{emit_feature_err, EXPLAIN_STMT_ATTR_SYNTAX, Features, get_features, GateIssue};\n use fold::Folder;\n use {fold, attr};"}, {"sha": "d2aa9a4cb6bff247eaf508c2da0257665bde15eb", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=4eb08bb2ab43f0ad80071469771381a4dd03603d", "patch": "@@ -27,7 +27,7 @@ use self::AttributeGate::*;\n \n use abi::Abi;\n use ast::{self, NodeId, PatKind};\n-use attr::{self, AttrMetaMethods, AttrNestedMetaItemMethods};\n+use attr::{self, AttrMetaMethods};\n use codemap::CodeMap;\n use syntax_pos::Span;\n use errors::Handler;"}, {"sha": "0a14eae7d35329a302372c450e4beacd0f63674b", "filename": "src/libsyntax/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibsyntax%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibsyntax%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftest.rs?ref=4eb08bb2ab43f0ad80071469771381a4dd03603d", "patch": "@@ -19,7 +19,7 @@ use std::iter;\n use std::slice;\n use std::mem;\n use std::vec;\n-use attr::{self, AttrMetaMethods, AttrNestedMetaItemMethods};\n+use attr::{self, AttrMetaMethods};\n use syntax_pos::{self, DUMMY_SP, NO_EXPANSION, Span, FileMap, BytePos};\n use std::rc::Rc;\n "}, {"sha": "fae17c0465bf50df634aeb8ac25a9518a89ba99d", "filename": "src/libsyntax_ext/deriving/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibsyntax_ext%2Fderiving%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4eb08bb2ab43f0ad80071469771381a4dd03603d/src%2Flibsyntax_ext%2Fderiving%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fmod.rs?ref=4eb08bb2ab43f0ad80071469771381a4dd03603d", "patch": "@@ -11,7 +11,7 @@\n //! The compiler code necessary to implement the `#[derive]` extensions.\n \n use syntax::ast::{self, MetaItem};\n-use syntax::attr::{AttrNestedMetaItemMethods, AttrMetaMethods};\n+use syntax::attr::AttrMetaMethods;\n use syntax::ext::base::{Annotatable, ExtCtxt, SyntaxEnv};\n use syntax::ext::base::{MultiDecorator, MultiItemDecorator, MultiModifier};\n use syntax::ext::build::AstBuilder;"}]}