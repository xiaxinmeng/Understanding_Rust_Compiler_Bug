{"sha": "8e743b2981754f1aa7e0eb5b57d79e5a8ad7d172", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlNzQzYjI5ODE3NTRmMWFhN2UwZWI1YjU3ZDc5ZTVhOGFkN2QxNzI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-29T05:43:19Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-29T07:20:05Z"}, "message": "core: Improve docs for str::reserve", "tree": {"sha": "5e5d3962225de063589543b21989a785bcac5847", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e5d3962225de063589543b21989a785bcac5847"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e743b2981754f1aa7e0eb5b57d79e5a8ad7d172", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e743b2981754f1aa7e0eb5b57d79e5a8ad7d172", "html_url": "https://github.com/rust-lang/rust/commit/8e743b2981754f1aa7e0eb5b57d79e5a8ad7d172", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e743b2981754f1aa7e0eb5b57d79e5a8ad7d172/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1446534271f01d38ff021cb7f92eb79551f1227b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1446534271f01d38ff021cb7f92eb79551f1227b", "html_url": "https://github.com/rust-lang/rust/commit/1446534271f01d38ff021cb7f92eb79551f1227b"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "fa281daa1fa5b407871ad6905afe188e25554949", "filename": "src/libcore/str.rs", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/8e743b2981754f1aa7e0eb5b57d79e5a8ad7d172/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e743b2981754f1aa7e0eb5b57d79e5a8ad7d172/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=8e743b2981754f1aa7e0eb5b57d79e5a8ad7d172", "patch": "@@ -1485,9 +1485,24 @@ fn as_c_str<T>(s: str, f: fn(*libc::c_char) -> T) -> T unsafe {\n     as_buf(s) {|buf| f(buf as *libc::c_char) }\n }\n \n-#[doc = \"Allocate more memory for a string, up to `nn` + 1 bytes\"]\n-fn reserve(&ss: str, nn: uint) {\n-    rustrt::str_reserve_shared(ss, nn);\n+#[doc = \"\n+Reserves capacity for exactly `n` bytes in the given string, not including\n+the null terminator.\n+\n+Assuming single-byte characters, the resulting string will be large\n+enough to hold a string of length `n`. To account for the null terminator,\n+the underlying buffer will have the size `n` + 1.\n+\n+If the capacity for `s` is already equal to or greater than the requested\n+capacity, then no action is taken.\n+\n+# Arguments\n+\n+* s - A string\n+* n - The number of bytes to reserve space for\n+\"]\n+fn reserve(&s: str, n: uint) {\n+    rustrt::str_reserve_shared(s, n);\n }\n \n #[doc = \"Unsafe operations\"]"}]}