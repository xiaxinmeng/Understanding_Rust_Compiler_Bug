{"sha": "8d1575365dd9c3260d0aa44203b9ad169f0b5d74", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkMTU3NTM2NWRkOWMzMjYwZDBhYTQ0MjAzYjlhZDE2OWYwYjVkNzQ=", "commit": {"author": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2020-11-07T20:43:47Z"}, "committer": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2020-11-07T21:20:26Z"}, "message": "Remove useless bound checks from into_sorted_vec", "tree": {"sha": "5e5da8795bad3e41145b1bb04ed881bf655edc5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e5da8795bad3e41145b1bb04ed881bf655edc5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d1575365dd9c3260d0aa44203b9ad169f0b5d74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d1575365dd9c3260d0aa44203b9ad169f0b5d74", "html_url": "https://github.com/rust-lang/rust/commit/8d1575365dd9c3260d0aa44203b9ad169f0b5d74", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d1575365dd9c3260d0aa44203b9ad169f0b5d74/comments", "author": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25b3f61c3821fd597961f9dd394482b71600e859", "url": "https://api.github.com/repos/rust-lang/rust/commits/25b3f61c3821fd597961f9dd394482b71600e859", "html_url": "https://github.com/rust-lang/rust/commit/25b3f61c3821fd597961f9dd394482b71600e859"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "17f0668c0ea350e90495c28d65d9ab8c3e4071e9", "filename": "library/alloc/src/collections/binary_heap.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8d1575365dd9c3260d0aa44203b9ad169f0b5d74/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d1575365dd9c3260d0aa44203b9ad169f0b5d74/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs?ref=8d1575365dd9c3260d0aa44203b9ad169f0b5d74", "patch": "@@ -495,7 +495,10 @@ impl<T: Ord> BinaryHeap<T> {\n         let mut end = self.len();\n         while end > 1 {\n             end -= 1;\n-            self.data.swap(0, end);\n+            unsafe {\n+                let ptr = self.data.as_mut_ptr();\n+                ptr::swap(ptr, ptr.add(end));\n+            }\n             self.sift_down_range(0, end);\n         }\n         self.into_vec()"}]}