{"sha": "1141136b90663cf9d5ee6325b2f9e47f02e70746", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExNDExMzZiOTA2NjNjZjlkNWVlNjMyNWIyZjllNDdmMDJlNzA3NDY=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2019-07-16T07:17:35Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2019-08-16T15:11:18Z"}, "message": "Use ManuallyDrop instead of mem::forget\n\nPer https://github.com/rust-lang/rust/pull/62451#discussion_r303197278", "tree": {"sha": "50adf3d58f4e732b4767df192dd8315e03ca7714", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50adf3d58f4e732b4767df192dd8315e03ca7714"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1141136b90663cf9d5ee6325b2f9e47f02e70746", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1141136b90663cf9d5ee6325b2f9e47f02e70746", "html_url": "https://github.com/rust-lang/rust/commit/1141136b90663cf9d5ee6325b2f9e47f02e70746", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1141136b90663cf9d5ee6325b2f9e47f02e70746/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dab967afdc76904c971d5ac5f5f46e31272a9827", "url": "https://api.github.com/repos/rust-lang/rust/commits/dab967afdc76904c971d5ac5f5f46e31272a9827", "html_url": "https://github.com/rust-lang/rust/commit/dab967afdc76904c971d5ac5f5f46e31272a9827"}], "stats": {"total": 16, "additions": 4, "deletions": 12}, "files": [{"sha": "c76c4b50c64fa9b477d3820f4b72e7d99a236b9b", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1141136b90663cf9d5ee6325b2f9e47f02e70746/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1141136b90663cf9d5ee6325b2f9e47f02e70746/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=1141136b90663cf9d5ee6325b2f9e47f02e70746", "patch": "@@ -495,10 +495,8 @@ impl<T> Rc<mem::MaybeUninit<T>> {\n     #[unstable(feature = \"new_uninit\", issue = \"0\")]\n     #[inline]\n     pub unsafe fn assume_init(self) -> Rc<T> {\n-        let ptr = self.ptr.cast();\n-        mem::forget(self);\n         Rc {\n-            ptr,\n+            ptr: mem::ManuallyDrop::new(self).ptr.cast(),\n             phantom: PhantomData,\n         }\n     }\n@@ -541,10 +539,8 @@ impl<T> Rc<[mem::MaybeUninit<T>]> {\n     #[unstable(feature = \"new_uninit\", issue = \"0\")]\n     #[inline]\n     pub unsafe fn assume_init(self) -> Rc<[T]> {\n-        let ptr = NonNull::new_unchecked(self.ptr.as_ptr() as _);\n-        mem::forget(self);\n         Rc {\n-            ptr,\n+            ptr: NonNull::new_unchecked(mem::ManuallyDrop::new(self).ptr.as_ptr() as _),\n             phantom: PhantomData,\n         }\n     }"}, {"sha": "bc3acd27e8b4db1334cf2165509e6588b6b037d2", "filename": "src/liballoc/sync.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1141136b90663cf9d5ee6325b2f9e47f02e70746/src%2Fliballoc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1141136b90663cf9d5ee6325b2f9e47f02e70746/src%2Fliballoc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fsync.rs?ref=1141136b90663cf9d5ee6325b2f9e47f02e70746", "patch": "@@ -479,10 +479,8 @@ impl<T> Arc<mem::MaybeUninit<T>> {\n     #[unstable(feature = \"new_uninit\", issue = \"0\")]\n     #[inline]\n     pub unsafe fn assume_init(self) -> Arc<T> {\n-        let ptr = self.ptr.cast();\n-        mem::forget(self);\n         Arc {\n-            ptr,\n+            ptr: mem::ManuallyDrop::new(self).ptr.cast(),\n             phantom: PhantomData,\n         }\n     }\n@@ -525,10 +523,8 @@ impl<T> Arc<[mem::MaybeUninit<T>]> {\n     #[unstable(feature = \"new_uninit\", issue = \"0\")]\n     #[inline]\n     pub unsafe fn assume_init(self) -> Arc<[T]> {\n-        let ptr = NonNull::new_unchecked(self.ptr.as_ptr() as _);\n-        mem::forget(self);\n         Arc {\n-            ptr,\n+            ptr: NonNull::new_unchecked(mem::ManuallyDrop::new(self).ptr.as_ptr() as _),\n             phantom: PhantomData,\n         }\n     }"}]}