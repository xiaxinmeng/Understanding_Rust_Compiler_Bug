{"sha": "2bf67b6e5ca48479e5de9a14c49bd385d3d8285c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiZjY3YjZlNWNhNDg0NzllNWRlOWExNGM0OWJkMzg1ZDNkODI4NWM=", "commit": {"author": {"name": "rChaser53", "email": "tayoshizawa29@gmail.com", "date": "2019-09-04T14:00:26Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2019-09-04T14:00:26Z"}, "message": "fix TrailingWhitespace when using line breaks in macros arguments (#3768)", "tree": {"sha": "a382aa9ff64612ae4ca7903bfad883886757d451", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a382aa9ff64612ae4ca7903bfad883886757d451"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2bf67b6e5ca48479e5de9a14c49bd385d3d8285c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2bf67b6e5ca48479e5de9a14c49bd385d3d8285c", "html_url": "https://github.com/rust-lang/rust/commit/2bf67b6e5ca48479e5de9a14c49bd385d3d8285c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2bf67b6e5ca48479e5de9a14c49bd385d3d8285c/comments", "author": {"login": "rchaser53", "id": 9676954, "node_id": "MDQ6VXNlcjk2NzY5NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/9676954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rchaser53", "html_url": "https://github.com/rchaser53", "followers_url": "https://api.github.com/users/rchaser53/followers", "following_url": "https://api.github.com/users/rchaser53/following{/other_user}", "gists_url": "https://api.github.com/users/rchaser53/gists{/gist_id}", "starred_url": "https://api.github.com/users/rchaser53/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rchaser53/subscriptions", "organizations_url": "https://api.github.com/users/rchaser53/orgs", "repos_url": "https://api.github.com/users/rchaser53/repos", "events_url": "https://api.github.com/users/rchaser53/events{/privacy}", "received_events_url": "https://api.github.com/users/rchaser53/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad5d9fba9b6d5482e504e4996e2aea54defb9ed6", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad5d9fba9b6d5482e504e4996e2aea54defb9ed6", "html_url": "https://github.com/rust-lang/rust/commit/ad5d9fba9b6d5482e504e4996e2aea54defb9ed6"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "b58911705c0afec4123ffbc9f8beaba4b31bf0f8", "filename": "src/formatting.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2bf67b6e5ca48479e5de9a14c49bd385d3d8285c/src%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bf67b6e5ca48479e5de9a14c49bd385d3d8285c/src%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fformatting.rs?ref=2bf67b6e5ca48479e5de9a14c49bd385d3d8285c", "patch": "@@ -188,7 +188,7 @@ impl<'a, T: FormatHandler + 'a> FormatContext<'a, T> {\n         format_lines(\n             &mut visitor.buffer,\n             &path,\n-            &visitor.skipped_range,\n+            &visitor.skipped_range.borrow(),\n             &self.config,\n             &self.report,\n         );\n@@ -203,7 +203,7 @@ impl<'a, T: FormatHandler + 'a> FormatContext<'a, T> {\n             self.report.add_macro_format_failure();\n         }\n         self.report\n-            .add_non_formatted_ranges(visitor.skipped_range.clone());\n+            .add_non_formatted_ranges(visitor.skipped_range.borrow().clone());\n \n         self.handler.handle_formatted_file(\n             self.parse_session.source_map(),"}, {"sha": "583844f1c5dc84d145c49a8652fe5f8bcb7ad86a", "filename": "src/macros.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2bf67b6e5ca48479e5de9a14c49bd385d3d8285c/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bf67b6e5ca48479e5de9a14c49bd385d3d8285c/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=2bf67b6e5ca48479e5de9a14c49bd385d3d8285c", "patch": "@@ -181,6 +181,11 @@ fn return_macro_parse_failure_fallback(\n         return trim_left_preserve_layout(context.snippet(span), indent, &context.config);\n     }\n \n+    context.skipped_range.borrow_mut().push((\n+        context.source_map.lookup_line(span.lo()).unwrap().line,\n+        context.source_map.lookup_line(span.hi()).unwrap().line,\n+    ));\n+\n     // Return the snippet unmodified if the macro is not block-like\n     Some(context.snippet(span).to_owned())\n }"}, {"sha": "6f79cb14c6006359ca7101a5c2b8a8dc3c6e5402", "filename": "src/rewrite.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2bf67b6e5ca48479e5de9a14c49bd385d3d8285c/src%2Frewrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bf67b6e5ca48479e5de9a14c49bd385d3d8285c/src%2Frewrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frewrite.rs?ref=2bf67b6e5ca48479e5de9a14c49bd385d3d8285c", "patch": "@@ -1,6 +1,7 @@\n // A generic trait to abstract the rewriting of an element (of the AST).\n \n use std::cell::RefCell;\n+use std::rc::Rc;\n \n use syntax::parse::ParseSess;\n use syntax::ptr;\n@@ -41,6 +42,7 @@ pub(crate) struct RewriteContext<'a> {\n     pub(crate) macro_rewrite_failure: RefCell<bool>,\n     pub(crate) report: FormatReport,\n     pub(crate) skip_context: SkipContext,\n+    pub(crate) skipped_range: Rc<RefCell<Vec<(usize, usize)>>>,\n }\n \n impl<'a> RewriteContext<'a> {"}, {"sha": "10c4e88756fe95a681f43aca09fd5ceeaa8a0808", "filename": "src/visitor.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2bf67b6e5ca48479e5de9a14c49bd385d3d8285c/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bf67b6e5ca48479e5de9a14c49bd385d3d8285c/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=2bf67b6e5ca48479e5de9a14c49bd385d3d8285c", "patch": "@@ -1,4 +1,5 @@\n use std::cell::RefCell;\n+use std::rc::Rc;\n \n use syntax::parse::ParseSess;\n use syntax::source_map::{self, BytePos, Pos, SourceMap, Span};\n@@ -65,7 +66,7 @@ pub(crate) struct FmtVisitor<'a> {\n     pub(crate) line_number: usize,\n     /// List of 1-based line ranges which were annotated with skip\n     /// Both bounds are inclusifs.\n-    pub(crate) skipped_range: Vec<(usize, usize)>,\n+    pub(crate) skipped_range: Rc<RefCell<Vec<(usize, usize)>>>,\n     pub(crate) macro_rewrite_failure: bool,\n     pub(crate) report: FormatReport,\n     pub(crate) skip_context: SkipContext,\n@@ -652,7 +653,7 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n         let lo = std::cmp::min(attrs_end + 1, first_line);\n         self.push_rewrite_inner(item_span, None);\n         let hi = self.line_number + 1;\n-        self.skipped_range.push((lo, hi));\n+        self.skipped_range.borrow_mut().push((lo, hi));\n     }\n \n     pub(crate) fn from_context(ctx: &'a RewriteContext<'_>) -> FmtVisitor<'a> {\n@@ -684,7 +685,7 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n             is_if_else_block: false,\n             snippet_provider,\n             line_number: 0,\n-            skipped_range: vec![],\n+            skipped_range: Rc::new(RefCell::new(vec![])),\n             macro_rewrite_failure: false,\n             report,\n             skip_context: Default::default(),\n@@ -877,6 +878,7 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n             macro_rewrite_failure: RefCell::new(false),\n             report: self.report.clone(),\n             skip_context: self.skip_context.clone(),\n+            skipped_range: self.skipped_range.clone(),\n         }\n     }\n }"}, {"sha": "5a6471ca8633d5a1056288931e9ad6d1d3d40b44", "filename": "tests/target/issue-2916.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2bf67b6e5ca48479e5de9a14c49bd385d3d8285c/tests%2Ftarget%2Fissue-2916.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bf67b6e5ca48479e5de9a14c49bd385d3d8285c/tests%2Ftarget%2Fissue-2916.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-2916.rs?ref=2bf67b6e5ca48479e5de9a14c49bd385d3d8285c", "patch": "@@ -0,0 +1,2 @@\n+a_macro!(name<Param1, Param2>, \n+);"}]}