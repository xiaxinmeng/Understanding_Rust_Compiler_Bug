{"sha": "03007dee7994ebb874614c33ecc2c0aab22f07b0", "node_id": "C_kwDOAAsO6NoAKDAzMDA3ZGVlNzk5NGViYjg3NDYxNGMzM2VjYzJjMGFhYjIyZjA3YjA", "commit": {"author": {"name": "Ken Matsui", "email": "26405363+ken-matsui@users.noreply.github.com", "date": "2022-05-02T21:46:25Z"}, "committer": {"name": "Ken Matsui", "email": "26405363+ken-matsui@users.noreply.github.com", "date": "2022-05-16T21:50:07Z"}, "message": "Omit unnecessary help to add `#[cfg(test)]` when already annotated", "tree": {"sha": "4a330671df7ab2c4145a5123afa96dcb196483a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a330671df7ab2c4145a5123afa96dcb196483a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03007dee7994ebb874614c33ecc2c0aab22f07b0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENhGM023oMzS0St3kEDNgsymO5DMFAmKCxw8ACgkQEDNgsymO\n5DMETQ//VkdiHwVEQ58hB4wJ5E0kEW4X04Xlf2Tknk/+a5b6Pl6/D9wIyK3KDB3K\nt/PX5wyASe/F5zTMoaN3g16J5m8TXEukXW9WCWGZQIWygEQzM/C8Cfbc79PLXLzD\n3CRaEHwKt27Pa7/QQdmKWLD1KGMn9SdTrWlA19UeMA0XjPZl9lQc0Q9c0MgigQ4x\nlq7WwpTgNaVZQyNCCbVSlZm0/N3083S/dzhDjm2jk0JOMJsWog3Lgfn0FSdeGXJY\nOCdu44qwDw/usPs7XjPQ6kZs1I1OWMJxhOCyJNhVxsSg8fGg4USj6Otdj/kWW6dP\nTfk+Rw/VvwpCdmj/HOnXGmDOBDhNF7/KnBE1wM2TGTxuYksAybFjB3pUDY0dPq3Q\n8hrtf7TMnVzepLghdYyFoINo4XeQjWF4BaVBE2r39RDF7A3OMFR3ZQCACwtlHH4Z\ngE2UsKNNRGAlhnaakyJr85472sL0mv47sMTbVOsOJMM5DaRz5jgKngbOmJkoln7P\nFp6QNKpHokYs8mS+/tAFqdNNvLsKI0Fmc2fM1YoqmfKRj+f4MoF2NO+iQ0poeSVv\nr/7/N6XtoYE5cEDw67YJJgw0H5IG4DcKu1eCZ9Uo7fA2tHkvW/1Bpb/VXpMaXoA+\nmorgMrGS/6LAcEiAE4QR11hOe/TpLopqY3FqeZ34L0wydY5viME=\n=PvNT\n-----END PGP SIGNATURE-----", "payload": "tree 4a330671df7ab2c4145a5123afa96dcb196483a5\nparent 4dd8b420c027001e47b0d811a7e55e2fe1de1395\nauthor Ken Matsui <26405363+ken-matsui@users.noreply.github.com> 1651527985 +0900\ncommitter Ken Matsui <26405363+ken-matsui@users.noreply.github.com> 1652737807 +0900\n\nOmit unnecessary help to add `#[cfg(test)]` when already annotated\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03007dee7994ebb874614c33ecc2c0aab22f07b0", "html_url": "https://github.com/rust-lang/rust/commit/03007dee7994ebb874614c33ecc2c0aab22f07b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03007dee7994ebb874614c33ecc2c0aab22f07b0/comments", "author": {"login": "ken-matsui", "id": 26405363, "node_id": "MDQ6VXNlcjI2NDA1MzYz", "avatar_url": "https://avatars.githubusercontent.com/u/26405363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ken-matsui", "html_url": "https://github.com/ken-matsui", "followers_url": "https://api.github.com/users/ken-matsui/followers", "following_url": "https://api.github.com/users/ken-matsui/following{/other_user}", "gists_url": "https://api.github.com/users/ken-matsui/gists{/gist_id}", "starred_url": "https://api.github.com/users/ken-matsui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ken-matsui/subscriptions", "organizations_url": "https://api.github.com/users/ken-matsui/orgs", "repos_url": "https://api.github.com/users/ken-matsui/repos", "events_url": "https://api.github.com/users/ken-matsui/events{/privacy}", "received_events_url": "https://api.github.com/users/ken-matsui/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ken-matsui", "id": 26405363, "node_id": "MDQ6VXNlcjI2NDA1MzYz", "avatar_url": "https://avatars.githubusercontent.com/u/26405363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ken-matsui", "html_url": "https://github.com/ken-matsui", "followers_url": "https://api.github.com/users/ken-matsui/followers", "following_url": "https://api.github.com/users/ken-matsui/following{/other_user}", "gists_url": "https://api.github.com/users/ken-matsui/gists{/gist_id}", "starred_url": "https://api.github.com/users/ken-matsui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ken-matsui/subscriptions", "organizations_url": "https://api.github.com/users/ken-matsui/orgs", "repos_url": "https://api.github.com/users/ken-matsui/repos", "events_url": "https://api.github.com/users/ken-matsui/events{/privacy}", "received_events_url": "https://api.github.com/users/ken-matsui/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4dd8b420c027001e47b0d811a7e55e2fe1de1395", "url": "https://api.github.com/repos/rust-lang/rust/commits/4dd8b420c027001e47b0d811a7e55e2fe1de1395", "html_url": "https://github.com/rust-lang/rust/commit/4dd8b420c027001e47b0d811a7e55e2fe1de1395"}], "stats": {"total": 241, "additions": 227, "deletions": 14}, "files": [{"sha": "ec3b14ace4df21553bf957af963496708022c8ef", "filename": "compiler/rustc_resolve/src/check_unused.rs", "status": "modified", "additions": 21, "deletions": 14, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/03007dee7994ebb874614c33ecc2c0aab22f07b0/compiler%2Frustc_resolve%2Fsrc%2Fcheck_unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03007dee7994ebb874614c33ecc2c0aab22f07b0/compiler%2Frustc_resolve%2Fsrc%2Fcheck_unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fcheck_unused.rs?ref=03007dee7994ebb874614c33ecc2c0aab22f07b0", "patch": "@@ -315,21 +315,28 @@ impl Resolver<'_> {\n                 \"remove the unused import\"\n             };\n \n-            let parent_module = visitor.r.get_nearest_non_block_module(\n-                visitor.r.local_def_id(unused.use_tree_id).to_def_id(),\n-            );\n-            let test_module_span = match module_to_string(parent_module) {\n-                Some(module)\n-                    if module == \"test\"\n-                        || module == \"tests\"\n-                        || module.starts_with(\"test_\")\n-                        || module.starts_with(\"tests_\")\n-                        || module.ends_with(\"_test\")\n-                        || module.ends_with(\"_tests\") =>\n-                {\n-                    Some(parent_module.span)\n+            // If we are in the `--test` mode, suppress a help that adds the `#[cfg(test)]`\n+            // attribute; however, if not, suggest adding the attribute. There is no way to\n+            // retrieve attributes here because we do not have a `TyCtxt` yet.\n+            let test_module_span = if visitor.r.session.opts.test {\n+                None\n+            } else {\n+                let parent_module = visitor.r.get_nearest_non_block_module(\n+                    visitor.r.local_def_id(unused.use_tree_id).to_def_id(),\n+                );\n+                match module_to_string(parent_module) {\n+                    Some(module)\n+                        if module == \"test\"\n+                            || module == \"tests\"\n+                            || module.starts_with(\"test_\")\n+                            || module.starts_with(\"tests_\")\n+                            || module.ends_with(\"_test\")\n+                            || module.ends_with(\"_tests\") =>\n+                    {\n+                        Some(parent_module.span)\n+                    }\n+                    _ => None,\n                 }\n-                _ => None,\n             };\n \n             visitor.r.lint_buffer.buffer_lint_with_diagnostic("}, {"sha": "ed0bb65b3aa91634030de0886a12aff4f671fa9e", "filename": "src/test/ui/imports/unused-imports-in-test-mode.rs", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/03007dee7994ebb874614c33ecc2c0aab22f07b0/src%2Ftest%2Fui%2Fimports%2Funused-imports-in-test-mode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03007dee7994ebb874614c33ecc2c0aab22f07b0/src%2Ftest%2Fui%2Fimports%2Funused-imports-in-test-mode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Funused-imports-in-test-mode.rs?ref=03007dee7994ebb874614c33ecc2c0aab22f07b0", "patch": "@@ -0,0 +1,84 @@\n+// compile-flags: --test\n+\n+#![deny(unused_imports)]\n+\n+use std::io::BufRead; //~ ERROR unused import: `std::io::BufRead`\n+\n+fn a() {}\n+fn b() {}\n+\n+mod test {\n+    use super::a;  //~ ERROR unused import: `super::a`\n+\n+    fn foo() {\n+        use crate::b;  //~ ERROR unused import: `crate::b`\n+    }\n+}\n+\n+mod tests {\n+    use super::a;  //~ ERROR unused import: `super::a`\n+\n+    fn foo() {\n+        use crate::b;  //~ ERROR unused import: `crate::b`\n+    }\n+}\n+\n+mod test_a {\n+    use super::a;  //~ ERROR unused import: `super::a`\n+\n+    fn foo() {\n+        use crate::b;  //~ ERROR unused import: `crate::b`\n+    }\n+}\n+\n+mod a_test {\n+    use super::a;  //~ ERROR unused import: `super::a`\n+\n+    fn foo() {\n+        use crate::b;  //~ ERROR unused import: `crate::b`\n+    }\n+}\n+\n+mod tests_a {\n+    use super::a;  //~ ERROR unused import: `super::a`\n+\n+    fn foo() {\n+        use crate::b;  //~ ERROR unused import: `crate::b`\n+    }\n+}\n+\n+mod a_tests {\n+    use super::a;  //~ ERROR unused import: `super::a`\n+\n+    fn foo() {\n+        use crate::b;  //~ ERROR unused import: `crate::b`\n+    }\n+}\n+\n+mod fastest_search {\n+    use super::a;  //~ ERROR unused import: `super::a`\n+\n+    fn foo() {\n+        use crate::b;  //~ ERROR unused import: `crate::b`\n+    }\n+}\n+\n+#[cfg(test)]\n+mod test_has_attr {\n+    use super::a;  //~ ERROR unused import: `super::a`\n+\n+    fn foo() {\n+        use crate::b;  //~ ERROR unused import: `crate::b`\n+    }\n+}\n+\n+mod test_has_no_attr {\n+    #[cfg(test)]\n+    use super::a;  //~ ERROR unused import: `super::a`\n+\n+    fn foo() {\n+        use crate::b;  //~ ERROR unused import: `crate::b`\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "1847abd64b4f22c60db0e1cad5759d944e73f5ed", "filename": "src/test/ui/imports/unused-imports-in-test-mode.stderr", "status": "added", "additions": 122, "deletions": 0, "changes": 122, "blob_url": "https://github.com/rust-lang/rust/blob/03007dee7994ebb874614c33ecc2c0aab22f07b0/src%2Ftest%2Fui%2Fimports%2Funused-imports-in-test-mode.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/03007dee7994ebb874614c33ecc2c0aab22f07b0/src%2Ftest%2Fui%2Fimports%2Funused-imports-in-test-mode.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Funused-imports-in-test-mode.stderr?ref=03007dee7994ebb874614c33ecc2c0aab22f07b0", "patch": "@@ -0,0 +1,122 @@\n+error: unused import: `std::io::BufRead`\n+  --> $DIR/unused-imports-in-test-mode.rs:5:5\n+   |\n+LL | use std::io::BufRead;\n+   |     ^^^^^^^^^^^^^^^^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/unused-imports-in-test-mode.rs:3:9\n+   |\n+LL | #![deny(unused_imports)]\n+   |         ^^^^^^^^^^^^^^\n+\n+error: unused import: `super::a`\n+  --> $DIR/unused-imports-in-test-mode.rs:11:9\n+   |\n+LL |     use super::a;\n+   |         ^^^^^^^^\n+\n+error: unused import: `crate::b`\n+  --> $DIR/unused-imports-in-test-mode.rs:14:13\n+   |\n+LL |         use crate::b;\n+   |             ^^^^^^^^\n+\n+error: unused import: `super::a`\n+  --> $DIR/unused-imports-in-test-mode.rs:19:9\n+   |\n+LL |     use super::a;\n+   |         ^^^^^^^^\n+\n+error: unused import: `crate::b`\n+  --> $DIR/unused-imports-in-test-mode.rs:22:13\n+   |\n+LL |         use crate::b;\n+   |             ^^^^^^^^\n+\n+error: unused import: `super::a`\n+  --> $DIR/unused-imports-in-test-mode.rs:27:9\n+   |\n+LL |     use super::a;\n+   |         ^^^^^^^^\n+\n+error: unused import: `crate::b`\n+  --> $DIR/unused-imports-in-test-mode.rs:30:13\n+   |\n+LL |         use crate::b;\n+   |             ^^^^^^^^\n+\n+error: unused import: `super::a`\n+  --> $DIR/unused-imports-in-test-mode.rs:35:9\n+   |\n+LL |     use super::a;\n+   |         ^^^^^^^^\n+\n+error: unused import: `crate::b`\n+  --> $DIR/unused-imports-in-test-mode.rs:38:13\n+   |\n+LL |         use crate::b;\n+   |             ^^^^^^^^\n+\n+error: unused import: `super::a`\n+  --> $DIR/unused-imports-in-test-mode.rs:43:9\n+   |\n+LL |     use super::a;\n+   |         ^^^^^^^^\n+\n+error: unused import: `crate::b`\n+  --> $DIR/unused-imports-in-test-mode.rs:46:13\n+   |\n+LL |         use crate::b;\n+   |             ^^^^^^^^\n+\n+error: unused import: `super::a`\n+  --> $DIR/unused-imports-in-test-mode.rs:51:9\n+   |\n+LL |     use super::a;\n+   |         ^^^^^^^^\n+\n+error: unused import: `crate::b`\n+  --> $DIR/unused-imports-in-test-mode.rs:54:13\n+   |\n+LL |         use crate::b;\n+   |             ^^^^^^^^\n+\n+error: unused import: `super::a`\n+  --> $DIR/unused-imports-in-test-mode.rs:59:9\n+   |\n+LL |     use super::a;\n+   |         ^^^^^^^^\n+\n+error: unused import: `crate::b`\n+  --> $DIR/unused-imports-in-test-mode.rs:62:13\n+   |\n+LL |         use crate::b;\n+   |             ^^^^^^^^\n+\n+error: unused import: `super::a`\n+  --> $DIR/unused-imports-in-test-mode.rs:68:9\n+   |\n+LL |     use super::a;\n+   |         ^^^^^^^^\n+\n+error: unused import: `crate::b`\n+  --> $DIR/unused-imports-in-test-mode.rs:71:13\n+   |\n+LL |         use crate::b;\n+   |             ^^^^^^^^\n+\n+error: unused import: `super::a`\n+  --> $DIR/unused-imports-in-test-mode.rs:77:9\n+   |\n+LL |     use super::a;\n+   |         ^^^^^^^^\n+\n+error: unused import: `crate::b`\n+  --> $DIR/unused-imports-in-test-mode.rs:80:13\n+   |\n+LL |         use crate::b;\n+   |             ^^^^^^^^\n+\n+error: aborting due to 19 previous errors\n+"}]}