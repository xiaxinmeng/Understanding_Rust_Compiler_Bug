{"sha": "643e71e2e125a1859793f729bdb2149bc0e6b23c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0M2U3MWUyZTEyNWExODU5NzkzZjcyOWJkYjIxNDliYzBlNmIyM2M=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-12-03T13:10:04Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-01-21T13:13:39Z"}, "message": "Remove the IGNORED_ATTR_NAMES thread local", "tree": {"sha": "28eca0b4e7357cfd2e4518378575d7a0977f803a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28eca0b4e7357cfd2e4518378575d7a0977f803a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/643e71e2e125a1859793f729bdb2149bc0e6b23c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/643e71e2e125a1859793f729bdb2149bc0e6b23c", "html_url": "https://github.com/rust-lang/rust/commit/643e71e2e125a1859793f729bdb2149bc0e6b23c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/643e71e2e125a1859793f729bdb2149bc0e6b23c/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d3e93beae9562f8b32b7f82c3824389f6ac5bad", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d3e93beae9562f8b32b7f82c3824389f6ac5bad", "html_url": "https://github.com/rust-lang/rust/commit/8d3e93beae9562f8b32b7f82c3824389f6ac5bad"}], "stats": {"total": 29, "additions": 13, "deletions": 16}, "files": [{"sha": "67f6c0c2e49e88dda4be510bb45b63ad9e5e3caf", "filename": "src/librustc/ich/hcx.rs", "status": "modified", "additions": 6, "deletions": 15, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/643e71e2e125a1859793f729bdb2149bc0e6b23c/src%2Flibrustc%2Fich%2Fhcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/643e71e2e125a1859793f729bdb2149bc0e6b23c/src%2Flibrustc%2Fich%2Fhcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fhcx.rs?ref=643e71e2e125a1859793f729bdb2149bc0e6b23c", "patch": "@@ -19,8 +19,8 @@ use session::Session;\n \n use std::cmp::Ord;\n use std::hash as std_hash;\n-use std::cell::RefCell;\n use std::collections::HashMap;\n+use std::cell::RefCell;\n \n use syntax::ast;\n \n@@ -36,8 +36,10 @@ use rustc_data_structures::stable_hasher::{HashStable, StableHashingContextProvi\n use rustc_data_structures::accumulate_vec::AccumulateVec;\n use rustc_data_structures::fx::{FxHashSet, FxHashMap};\n \n-thread_local!(static IGNORED_ATTR_NAMES: RefCell<FxHashSet<Symbol>> =\n-    RefCell::new(FxHashSet()));\n+pub fn compute_ignored_attr_names() -> FxHashSet<Symbol> {\n+    debug_assert!(ich::IGNORED_ATTRIBUTES.len() > 0);\n+    ich::IGNORED_ATTRIBUTES.iter().map(|&s| Symbol::intern(s)).collect()\n+}\n \n /// This is the context state available during incr. comp. hashing. It contains\n /// enough information to transform DefIds and HirIds into stable DefPaths (i.e.\n@@ -90,15 +92,6 @@ impl<'gcx> StableHashingContext<'gcx> {\n                -> Self {\n         let hash_spans_initial = !sess.opts.debugging_opts.incremental_ignore_spans;\n \n-        debug_assert!(ich::IGNORED_ATTRIBUTES.len() > 0);\n-        IGNORED_ATTR_NAMES.with(|names| {\n-            let mut names = names.borrow_mut();\n-            if names.is_empty() {\n-                names.extend(ich::IGNORED_ATTRIBUTES.iter()\n-                                                    .map(|&s| Symbol::intern(s)));\n-            }\n-        });\n-\n         StableHashingContext {\n             sess,\n             body_resolver: BodyResolver(krate),\n@@ -186,9 +179,7 @@ impl<'gcx> StableHashingContext<'gcx> {\n \n     #[inline]\n     pub fn is_ignored_attr(&self, name: Symbol) -> bool {\n-        IGNORED_ATTR_NAMES.with(|names| {\n-            names.borrow().contains(&name)\n-        })\n+        self.sess.ignored_attr_names.contains(&name)\n     }\n \n     pub fn hash_hir_item_like<F: FnOnce(&mut Self)>(&mut self, f: F) {"}, {"sha": "ce1bd07b14ce0b7a139a41d7df0b0212f50fb306", "filename": "src/librustc/ich/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/643e71e2e125a1859793f729bdb2149bc0e6b23c/src%2Flibrustc%2Fich%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/643e71e2e125a1859793f729bdb2149bc0e6b23c/src%2Flibrustc%2Fich%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fmod.rs?ref=643e71e2e125a1859793f729bdb2149bc0e6b23c", "patch": "@@ -13,7 +13,7 @@\n pub use self::fingerprint::Fingerprint;\n pub use self::caching_codemap_view::CachingCodemapView;\n pub use self::hcx::{StableHashingContext, NodeIdHashingMode,\n-                    hash_stable_trait_impls};\n+                    hash_stable_trait_impls, compute_ignored_attr_names};\n mod fingerprint;\n mod caching_codemap_view;\n mod hcx;"}, {"sha": "36f716a4a76942c8e85364c640f18bb68ff95440", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/643e71e2e125a1859793f729bdb2149bc0e6b23c/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/643e71e2e125a1859793f729bdb2149bc0e6b23c/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=643e71e2e125a1859793f729bdb2149bc0e6b23c", "patch": "@@ -14,6 +14,7 @@ pub use self::code_stats::{SizeKind, TypeSizeInfo, VariantInfo};\n use hir::def_id::CrateNum;\n use ich::Fingerprint;\n \n+use ich;\n use lint;\n use middle::allocator::AllocatorKind;\n use middle::dependency_format;\n@@ -28,6 +29,7 @@ use errors::{self, DiagnosticBuilder, DiagnosticId};\n use errors::emitter::{Emitter, EmitterWriter};\n use syntax::json::JsonEmitter;\n use syntax::feature_gate;\n+use syntax::symbol::Symbol;\n use syntax::parse;\n use syntax::parse::ParseSess;\n use syntax::{ast, codemap};\n@@ -112,6 +114,9 @@ pub struct Session {\n \n     incr_comp_session: RefCell<IncrCompSession>,\n \n+    /// A cache of attributes ignored by StableHashingContext\n+    pub ignored_attr_names: FxHashSet<Symbol>,\n+\n     /// Some measurements that are being gathered during compilation.\n     pub perf_stats: PerfStats,\n \n@@ -975,6 +980,7 @@ pub fn build_session_(sopts: config::Options,\n         injected_panic_runtime: Cell::new(None),\n         imported_macro_spans: RefCell::new(HashMap::new()),\n         incr_comp_session: RefCell::new(IncrCompSession::NotInitialized),\n+        ignored_attr_names: ich::compute_ignored_attr_names(),\n         perf_stats: PerfStats {\n             svh_time: Cell::new(Duration::from_secs(0)),\n             incr_comp_hashes_time: Cell::new(Duration::from_secs(0)),"}]}