{"sha": "81ecd272d349a744a3a5f21b7eb4ef3c79d9188f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxZWNkMjcyZDM0OWE3NDRhM2E1ZjIxYjdlYjRlZjNjNzlkOTE4OGY=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-07-13T01:20:39Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-07-13T02:06:08Z"}, "message": "Comments only: TODOs to FIXME in the runtime", "tree": {"sha": "a0fb57f645e37cdb918817b9a3d859b9c6b473b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0fb57f645e37cdb918817b9a3d859b9c6b473b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81ecd272d349a744a3a5f21b7eb4ef3c79d9188f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81ecd272d349a744a3a5f21b7eb4ef3c79d9188f", "html_url": "https://github.com/rust-lang/rust/commit/81ecd272d349a744a3a5f21b7eb4ef3c79d9188f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81ecd272d349a744a3a5f21b7eb4ef3c79d9188f/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe77e962a826ac41354a7b1b4afa08c527e86e8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe77e962a826ac41354a7b1b4afa08c527e86e8c", "html_url": "https://github.com/rust-lang/rust/commit/fe77e962a826ac41354a7b1b4afa08c527e86e8c"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "02a29c289660892a6018957bebf8b7f434156e6b", "filename": "src/libcore/task.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/81ecd272d349a744a3a5f21b7eb4ef3c79d9188f/src%2Flibcore%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81ecd272d349a744a3a5f21b7eb4ef3c79d9188f/src%2Flibcore%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftask.rs?ref=81ecd272d349a744a3a5f21b7eb4ef3c79d9188f", "patch": "@@ -181,7 +181,7 @@ type task_opts = {\n // sidestep that whole issue by making builders uncopyable and making\n // the run function move them in.\n enum builder {\n-    builder_({\n+  builder_({\n         mut opts: task_opts,\n         mut gen_body: fn@(+fn~()) -> fn~(),\n         can_not_copy: option<comm::port<()>>"}, {"sha": "8de42bb666617305b20973dd87809c81be309c91", "filename": "src/rt/rust_abi.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/81ecd272d349a744a3a5f21b7eb4ef3c79d9188f/src%2Frt%2Frust_abi.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/81ecd272d349a744a3a5f21b7eb4ef3c79d9188f/src%2Frt%2Frust_abi.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_abi.cpp?ref=81ecd272d349a744a3a5f21b7eb4ef3c79d9188f", "patch": "@@ -11,7 +11,7 @@\n #define HAVE_DLFCN_H\n #include <dlfcn.h>\n #elif defined(_WIN32)\n-// TODO\n+// FIXME #2889\n #endif\n \n #define END_OF_STACK_RA     (void (*)())0xdeadbeef"}, {"sha": "ffba7b0da6a7ef2d29eeea144a2a12c3ef58cf33", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/81ecd272d349a744a3a5f21b7eb4ef3c79d9188f/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/81ecd272d349a744a3a5f21b7eb4ef3c79d9188f/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=81ecd272d349a744a3a5f21b7eb4ef3c79d9188f", "patch": "@@ -938,8 +938,8 @@ task_clear_event_reject(rust_task *task) {\n // task.\n extern \"C\" void *\n task_wait_event(rust_task *task, bool *killed) {\n-    // TODO: we should assert that the passed in task is the currently running\n-    // task. We wouldn't want to wait some other task.\n+    // FIXME #2890: we should assert that the passed in task is the currently\n+    // running task. We wouldn't want to wait some other task.\n \n     return task->wait_event(killed);\n }"}, {"sha": "4b94968d7c0e868d8cf7edb43e703c79dc0b2894", "filename": "src/rt/rust_sched_loop.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/81ecd272d349a744a3a5f21b7eb4ef3c79d9188f/src%2Frt%2Frust_sched_loop.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/81ecd272d349a744a3a5f21b7eb4ef3c79d9188f/src%2Frt%2Frust_sched_loop.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_sched_loop.cpp?ref=81ecd272d349a744a3a5f21b7eb4ef3c79d9188f", "patch": "@@ -25,7 +25,7 @@ rust_sched_loop::rust_sched_loop(rust_scheduler *sched,int id) :\n     log_lvl(log_debug),\n     min_stack_size(kernel->env->min_stack_size),\n     local_region(kernel->env, false),\n-    // TODO: calculate a per scheduler name.\n+    // FIXME #2891: calculate a per-scheduler name.\n     name(\"main\")\n {\n     LOGPTR(this, \"new dom\", (uintptr_t)this);"}, {"sha": "bfe4b97936afea575e2d135ea7f428509193f852", "filename": "src/rt/rust_shape.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/81ecd272d349a744a3a5f21b7eb4ef3c79d9188f/src%2Frt%2Frust_shape.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/81ecd272d349a744a3a5f21b7eb4ef3c79d9188f/src%2Frt%2Frust_shape.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_shape.cpp?ref=81ecd272d349a744a3a5f21b7eb4ef3c79d9188f", "patch": "@@ -160,7 +160,7 @@ size_of::walk_struct1(const uint8_t *end_sp) {\n #if 0\n \n class copy : public data<copy,uint8_t *> {\n-    // TODO\n+    // FIXME #2892\n };\n \n #endif"}, {"sha": "ffbe61174223f31a29853c5879e000f643a8d5cd", "filename": "src/rt/rust_shape.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/81ecd272d349a744a3a5f21b7eb4ef3c79d9188f/src%2Frt%2Frust_shape.h", "raw_url": "https://github.com/rust-lang/rust/raw/81ecd272d349a744a3a5f21b7eb4ef3c79d9188f/src%2Frt%2Frust_shape.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_shape.h?ref=81ecd272d349a744a3a5f21b7eb4ef3c79d9188f", "patch": "@@ -570,7 +570,7 @@ class print : public ctxt<print> {\n // Size-of (which also computes alignment). Be warned: this is an expensive\n // operation.\n //\n-// TODO: Maybe dynamic_size_of() should call into this somehow?\n+// FIXME #2894: Maybe dynamic_size_of() should call into this somehow?\n //\n \n class size_of : public ctxt<size_of> {\n@@ -612,7 +612,7 @@ class size_of : public ctxt<size_of> {\n     }\n \n     void walk_res1(const rust_fn *dtor, const uint8_t *end_sp) {\n-        abort();    // TODO\n+        abort();    // FIXME #2895\n     }\n \n     void walk_fixedvec1(uint16_t n_elts, bool is_pod) {"}, {"sha": "b1c13205f2bc25440ca1bf3005312ebb41d81485", "filename": "src/rt/sync/lock_and_signal.cpp", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/81ecd272d349a744a3a5f21b7eb4ef3c79d9188f/src%2Frt%2Fsync%2Flock_and_signal.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/81ecd272d349a744a3a5f21b7eb4ef3c79d9188f/src%2Frt%2Fsync%2Flock_and_signal.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fsync%2Flock_and_signal.cpp?ref=81ecd272d349a744a3a5f21b7eb4ef3c79d9188f", "patch": "@@ -29,7 +29,8 @@ lock_and_signal::lock_and_signal()\n     const DWORD SPIN_COUNT = 4000;\n     CHECKED(!InitializeCriticalSectionAndSpinCount(&_cs, SPIN_COUNT));\n \n-    // TODO? Consider checking GetProcAddress(\"InitializeCriticalSectionEx\")\n+    // FIXME #2893 Consider checking\n+    // GetProcAddress(\"InitializeCriticalSectionEx\")\n     // so Windows >= Vista we can use CRITICAL_SECTION_NO_DEBUG_INFO to avoid\n     // allocating CRITICAL_SECTION debug info that is never released. See:\n     // http://stackoverflow.com/questions/804848/"}]}