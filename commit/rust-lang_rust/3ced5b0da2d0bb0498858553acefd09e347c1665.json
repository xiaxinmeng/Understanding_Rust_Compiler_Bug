{"sha": "3ced5b0da2d0bb0498858553acefd09e347c1665", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjZWQ1YjBkYTJkMGJiMDQ5ODg1ODU1M2FjZWZkMDllMzQ3YzE2NjU=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-07-02T20:47:55Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-07-02T20:47:55Z"}, "message": "add dlist.rs should_fail tests", "tree": {"sha": "2a13e30372ce08fd5c5569f07918decb80f0f935", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a13e30372ce08fd5c5569f07918decb80f0f935"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ced5b0da2d0bb0498858553acefd09e347c1665", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ced5b0da2d0bb0498858553acefd09e347c1665", "html_url": "https://github.com/rust-lang/rust/commit/3ced5b0da2d0bb0498858553acefd09e347c1665", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ced5b0da2d0bb0498858553acefd09e347c1665/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "510af4dadbb33997bab589740ca111cb2a9a7f99", "url": "https://api.github.com/repos/rust-lang/rust/commits/510af4dadbb33997bab589740ca111cb2a9a7f99", "html_url": "https://github.com/rust-lang/rust/commit/510af4dadbb33997bab589740ca111cb2a9a7f99"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "ba71e6b21caa5a8fd5315a3a412058ce31cf3755", "filename": "src/libcore/dlist.rs", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/3ced5b0da2d0bb0498858553acefd09e347c1665/src%2Flibcore%2Fdlist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ced5b0da2d0bb0498858553acefd09e347c1665/src%2Flibcore%2Fdlist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fdlist.rs?ref=3ced5b0da2d0bb0498858553acefd09e347c1665", "patch": "@@ -590,4 +590,54 @@ mod tests {\n         l.assert_consistent(); assert l.pop().get() == 3;\n         l.assert_consistent(); assert l.is_empty();\n     }\n+    #[test] #[should_fail]\n+    fn test_asymmetric_link() {\n+        let l = create::<int>();\n+        let one = l.push_n(1);\n+        let two = l.push_n(2);\n+        two.prev = none;\n+        l.assert_consistent();\n+    }\n+    #[test] #[should_fail]\n+    fn test_cyclic_list() {\n+        let l = create::<int>();\n+        let one = l.push_n(1);\n+        let _two = l.push_n(2);\n+        let three = l.push_n(3);\n+        three.next = some(one);\n+        one.prev = some(three);\n+        l.assert_consistent();\n+    }\n+    #[test] #[should_fail]\n+    fn test_headless() {\n+        create::<int>().head();\n+    }\n+    #[test] #[should_fail]\n+    fn test_insert_already_present_before() {\n+        let l = create::<int>();\n+        let one = l.push_n(1);\n+        let two = l.push_n(2);\n+        l.insert_n_before(two, one);\n+    }\n+    #[test] #[should_fail]\n+    fn test_insert_already_present_after() {\n+        let l = create::<int>();\n+        let one = l.push_n(1);\n+        let two = l.push_n(2);\n+        l.insert_n_after(one, two);\n+    }\n+    #[test] #[should_fail]\n+    fn test_insert_before_orphan() {\n+        let l = create::<int>();\n+        let one = create_node(1);\n+        let two = create_node(2);\n+        l.insert_n_before(one, two);\n+    }\n+    #[test] #[should_fail]\n+    fn test_insert_after_orphan() {\n+        let l = create::<int>();\n+        let one = create_node(1);\n+        let two = create_node(2);\n+        l.insert_n_after(two, one);\n+    }\n }"}]}