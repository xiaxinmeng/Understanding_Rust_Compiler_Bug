{"sha": "3195d6c2b7fd2f958d823eb32bce0fb350bf6ec5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxOTVkNmMyYjdmZDJmOTU4ZDgyM2ViMzJiY2UwZmIzNTBiZjZlYzU=", "commit": {"author": {"name": "Ayaz Hafiz", "email": "ayaz.hafiz.1@gmail.com", "date": "2020-07-03T04:33:46Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2021-08-18T02:55:26Z"}, "message": "docs: Preserve updated query param content and add config option links\n\n- Preserve search and version parameter updates in the url\n- Render headings with an anchor to itself for easier linking to config\n  options, variants, etc.\n\nDemo: https://5efeb81ca3f0d.htmlsave.net/", "tree": {"sha": "2ddb565a8e5b036f8b06911142e3527b0a215af1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ddb565a8e5b036f8b06911142e3527b0a215af1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3195d6c2b7fd2f958d823eb32bce0fb350bf6ec5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3195d6c2b7fd2f958d823eb32bce0fb350bf6ec5", "html_url": "https://github.com/rust-lang/rust/commit/3195d6c2b7fd2f958d823eb32bce0fb350bf6ec5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3195d6c2b7fd2f958d823eb32bce0fb350bf6ec5/comments", "author": {"login": "ayazhafiz", "id": 20735482, "node_id": "MDQ6VXNlcjIwNzM1NDgy", "avatar_url": "https://avatars.githubusercontent.com/u/20735482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ayazhafiz", "html_url": "https://github.com/ayazhafiz", "followers_url": "https://api.github.com/users/ayazhafiz/followers", "following_url": "https://api.github.com/users/ayazhafiz/following{/other_user}", "gists_url": "https://api.github.com/users/ayazhafiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ayazhafiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ayazhafiz/subscriptions", "organizations_url": "https://api.github.com/users/ayazhafiz/orgs", "repos_url": "https://api.github.com/users/ayazhafiz/repos", "events_url": "https://api.github.com/users/ayazhafiz/events{/privacy}", "received_events_url": "https://api.github.com/users/ayazhafiz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31c97ce0f067ddf5c01217cf172ef1ff260ca564", "url": "https://api.github.com/repos/rust-lang/rust/commits/31c97ce0f067ddf5c01217cf172ef1ff260ca564", "html_url": "https://github.com/rust-lang/rust/commit/31c97ce0f067ddf5c01217cf172ef1ff260ca564"}], "stats": {"total": 42, "additions": 34, "deletions": 8}, "files": [{"sha": "40fafd44428bb7791e51b92f13ca42079232b1dc", "filename": "docs/index.html", "status": "modified", "additions": 34, "deletions": 8, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/3195d6c2b7fd2f958d823eb32bce0fb350bf6ec5/docs%2Findex.html", "raw_url": "https://github.com/rust-lang/rust/raw/3195d6c2b7fd2f958d823eb32bce0fb350bf6ec5/docs%2Findex.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Findex.html?ref=3195d6c2b7fd2f958d823eb32bce0fb350bf6ec5", "patch": "@@ -41,6 +41,15 @@\n         .searchCondition > div {\n           margin-right: 30px;\n         }\n+        .header-link {\n+          position: relative;\n+        }\n+        .header-link:hover::before {\n+          position: absolute;\n+          left: -2em;\n+          padding-right: 0.5em;\n+          content: '\\2002\\00a7\\2002';\n+        }\n       </style>\n     </head>\n     <body>\n@@ -137,12 +146,27 @@\n                       }, []);\n                   ast.links = {};\n \n+                  queryParams.set('version', this.version);\n+                  queryParams.set('search', this.searchCondition);\n+                  const curUrl = window.location.pathname +\n+                    '?' + queryParams.toString() + window.location.hash;\n+                  history.pushState(null, '', curUrl);\n+\n+                  const renderer = new marked.Renderer();\n+                  renderer.heading = function(text, level) {\n+                    const id = htmlToId(text);\n+                    return `<h${level}>\n+                              <a href=\"#${id}\" name=\"${id}\" class=\"header-link\">${text}</a>\n+                            </h${level}>`;\n+                  };\n+\n                   return marked.parser(ast, {\n                     highlight(code, lang) {\n                       return hljs.highlight(lang ? lang : 'rust', code).value;\n                     },\n                     headerIds: true,\n-                    headerPrefix: ''\n+                    headerPrefix: '',\n+                    renderer,\n                   });\n                 }\n               },\n@@ -156,13 +180,10 @@\n               },\n               mounted() {\n                 if (UrlHash === '') return;\n-                const interval = setInterval(() => {\n-                  const target = document.querySelector(`#${UrlHash}`);\n-                  if (target != null) {\n-                    target.scrollIntoView(true);\n-                    clearInterval(interval);\n-                  }\n-                }, 100);\n+                const target = document.querySelector(`#${UrlHash}`);\n+                if (target != null) {\n+                  target.scrollIntoView(true);\n+                }\n               }\n             });\n             const extractDepthOnes = (ast) => {\n@@ -228,6 +249,11 @@\n                 configurationDescriptions\n               };\n             }\n+            function htmlToId(text) {\n+              const tmpl = document.createElement('template');\n+              tmpl.innerHTML = text.trim();\n+              return encodeURIComponent(CSS.escape(tmpl.content.textContent));\n+            }\n         </script>\n     </body>\n </html>"}]}