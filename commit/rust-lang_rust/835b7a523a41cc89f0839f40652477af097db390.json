{"sha": "835b7a523a41cc89f0839f40652477af097db390", "node_id": "C_kwDOAAsO6NoAKDgzNWI3YTUyM2E0MWNjODlmMDgzOWY0MDY1MjQ3N2FmMDk3ZGIzOTA", "commit": {"author": {"name": "Vincenzo Palazzo", "email": "vincenzopalazzodev@gmail.com", "date": "2022-06-29T23:31:10Z"}, "committer": {"name": "Vincenzo Palazzo", "email": "vincenzopalazzodev@gmail.com", "date": "2022-06-30T18:59:36Z"}, "message": "ui: improve suggestion test by addig the help message\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>", "tree": {"sha": "9b361a36248ceaffa2cd465d46f7b409419edaf9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b361a36248ceaffa2cd465d46f7b409419edaf9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/835b7a523a41cc89f0839f40652477af097db390", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/835b7a523a41cc89f0839f40652477af097db390", "html_url": "https://github.com/rust-lang/rust/commit/835b7a523a41cc89f0839f40652477af097db390", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/835b7a523a41cc89f0839f40652477af097db390/comments", "author": {"login": "vincenzopalazzo", "id": 17150045, "node_id": "MDQ6VXNlcjE3MTUwMDQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vincenzopalazzo", "html_url": "https://github.com/vincenzopalazzo", "followers_url": "https://api.github.com/users/vincenzopalazzo/followers", "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}", "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions", "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs", "repos_url": "https://api.github.com/users/vincenzopalazzo/repos", "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}", "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vincenzopalazzo", "id": 17150045, "node_id": "MDQ6VXNlcjE3MTUwMDQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vincenzopalazzo", "html_url": "https://github.com/vincenzopalazzo", "followers_url": "https://api.github.com/users/vincenzopalazzo/followers", "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}", "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions", "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs", "repos_url": "https://api.github.com/users/vincenzopalazzo/repos", "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}", "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86c1a734f5b915685560baeebac9b773d7108ccf", "url": "https://api.github.com/repos/rust-lang/rust/commits/86c1a734f5b915685560baeebac9b773d7108ccf", "html_url": "https://github.com/rust-lang/rust/commit/86c1a734f5b915685560baeebac9b773d7108ccf"}], "stats": {"total": 67, "additions": 39, "deletions": 28}, "files": [{"sha": "37958cc0f40324fb0756baaa3f37277cd62dd542", "filename": "compiler/rustc_typeck/src/astconv/mod.rs", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/835b7a523a41cc89f0839f40652477af097db390/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/835b7a523a41cc89f0839f40652477af097db390/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs?ref=835b7a523a41cc89f0839f40652477af097db390", "patch": "@@ -3015,7 +3015,6 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n             let param_name = generics.params.next_type_param_name(None);\n \n             let add_generic_sugg = if let Some(span) = generics.span_for_param_suggestion() {\n-                let param_name = generics.params.next_type_param_name(Some(&impl_trait_name));\n                 (span, format!(\", {}: {}\", param_name, impl_trait_name))\n             } else {\n                 (generics.span, format!(\"<{}: {}>\", param_name, impl_trait_name))\n@@ -3047,11 +3046,6 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                     .map_or(false, |s| s.trim_end().ends_with('<'));\n \n             let is_global = poly_trait_ref.trait_ref.path.is_global();\n-            let is_local = if let Some(def_id) = poly_trait_ref.trait_ref.trait_def_id() {\n-                def_id.is_local()\n-            } else {\n-                false\n-            };\n             let sugg = Vec::from_iter([\n                 (\n                     self_ty.span.shrink_to_lo(),\n@@ -3077,9 +3071,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                     rustc_errors::struct_span_err!(tcx.sess, self_ty.span, E0782, \"{}\", msg);\n                 diag.multipart_suggestion_verbose(label, sugg, Applicability::MachineApplicable);\n                 // check if the impl trait that we are considering is a impl of a local trait\n-                if is_local {\n-                    self.maybe_lint_blanket_trait_impl(&self_ty, &mut diag);\n-                }\n+                self.maybe_lint_blanket_trait_impl(&self_ty, &mut diag);\n                 diag.emit();\n             } else {\n                 let msg = \"trait objects without an explicit `dyn` are deprecated\";\n@@ -3094,10 +3086,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                             sugg,\n                             Applicability::MachineApplicable,\n                         );\n-                        // check if the impl trait that we are considering is a impl of a local trait\n-                        if is_local {\n-                            self.maybe_lint_blanket_trait_impl::<()>(&self_ty, &mut diag);\n-                        }\n+                        self.maybe_lint_blanket_trait_impl::<()>(&self_ty, &mut diag);\n                         diag.emit();\n                     },\n                 );"}, {"sha": "7cf536f7966e0c342df53f2671cf10ffd0103523", "filename": "src/test/ui/suggestions/suggest-blanket-impl-local-trait.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/835b7a523a41cc89f0839f40652477af097db390/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-blanket-impl-local-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/835b7a523a41cc89f0839f40652477af097db390/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-blanket-impl-local-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-blanket-impl-local-trait.rs?ref=835b7a523a41cc89f0839f40652477af097db390", "patch": "@@ -12,33 +12,47 @@ trait GenericTrait<T> {}\n \n impl LocalTraitTwo for LocalTraitOne {}\n //~^ ERROR trait objects must include the `dyn` keyword\n+//~| HELP add `dyn` keyword before this trait\n+//~| HELP alternatively use a blanket implementation to implement `LocalTraitTwo` for all types that also implement `LocalTraitOne`\n \n impl fmt::Display for LocalTraitOne {\n //~^ ERROR trait objects must include the `dyn` keyword\n+//~| HELP add `dyn` keyword before this trait\n     fn fmt(&self, _f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         todo!();\n     }\n }\n \n impl fmt::Display for LocalTraitTwo + Send {\n //~^ ERROR trait objects must include the `dyn` keyword\n+//~| HELP add `dyn` keyword before this trait\n     fn fmt(&self, _f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         todo!();\n     }\n }\n \n impl LocalTraitOne for fmt::Display {}\n //~^ ERROR trait objects must include the `dyn` keyword\n+//~| HELP add `dyn` keyword before this trait\n+//~| HELP alternatively use a blanket implementation to implement `LocalTraitOne` for all types that also implement `fmt::Display`\n+\n \n impl LocalTraitOne for fmt::Display + Send {}\n //~^ ERROR trait objects must include the `dyn` keyword\n+//~| HELP add `dyn` keyword before this trait\n+//~| HELP alternatively use a blanket implementation to implement `LocalTraitOne` for all types that also implement `fmt::Display + Send`\n+\n \n impl<E> GenericTrait<E> for LocalTraitOne {}\n //~^ ERROR trait objects must include the `dyn` keyword\n+//~| HELP add `dyn` keyword before this trait\n+//~| HELP alternatively use a blanket implementation to implement `GenericTrait<E>` for all types that also implement `LocalTraitOne`\n \n trait GenericTraitTwo<T> {}\n \n impl<T, E> GenericTraitTwo<E> for GenericTrait<T> {}\n //~^ ERROR trait objects must include the `dyn` keyword\n+//~| HELP add `dyn` keyword before this trait\n+//~| HELP alternatively use a blanket implementation to implement `GenericTraitTwo<E>` for all types that also implement `GenericTrait<T>`\n \n fn main() {}"}, {"sha": "d739a8272f1520826951aaeb2e3b12c31853f7d3", "filename": "src/test/ui/suggestions/suggest-blanket-impl-local-trait.stderr", "status": "modified", "additions": 23, "deletions": 15, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/835b7a523a41cc89f0839f40652477af097db390/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-blanket-impl-local-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/835b7a523a41cc89f0839f40652477af097db390/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-blanket-impl-local-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-blanket-impl-local-trait.stderr?ref=835b7a523a41cc89f0839f40652477af097db390", "patch": "@@ -8,14 +8,14 @@ help: add `dyn` keyword before this trait\n    |\n LL - impl LocalTraitTwo for LocalTraitOne {}\n LL + impl LocalTraitTwo for dyn LocalTraitOne {}\n-   | \n+   |\n help: alternatively use a blanket implementation to implement `LocalTraitTwo` for all types that also implement `LocalTraitOne`\n    |\n LL | impl<T: LocalTraitOne> LocalTraitTwo for T {}\n    |     ++++++++++++++++++                   ~\n \n error[E0782]: trait objects must include the `dyn` keyword\n-  --> $DIR/suggest-blanket-impl-local-trait.rs:16:23\n+  --> $DIR/suggest-blanket-impl-local-trait.rs:18:23\n    |\n LL | impl fmt::Display for LocalTraitOne {\n    |                       ^^^^^^^^^^^^^\n@@ -24,10 +24,10 @@ help: add `dyn` keyword before this trait\n    |\n LL - impl fmt::Display for LocalTraitOne {\n LL + impl fmt::Display for dyn LocalTraitOne {\n-   | \n+   |\n \n error[E0782]: trait objects must include the `dyn` keyword\n-  --> $DIR/suggest-blanket-impl-local-trait.rs:23:23\n+  --> $DIR/suggest-blanket-impl-local-trait.rs:26:23\n    |\n LL | impl fmt::Display for LocalTraitTwo + Send {\n    |                       ^^^^^^^^^^^^^^^^^^^^\n@@ -36,10 +36,10 @@ help: add `dyn` keyword before this trait\n    |\n LL - impl fmt::Display for LocalTraitTwo + Send {\n LL + impl fmt::Display for dyn LocalTraitTwo + Send {\n-   | \n+   |\n \n error[E0782]: trait objects must include the `dyn` keyword\n-  --> $DIR/suggest-blanket-impl-local-trait.rs:30:24\n+  --> $DIR/suggest-blanket-impl-local-trait.rs:34:24\n    |\n LL | impl LocalTraitOne for fmt::Display {}\n    |                        ^^^^^^^^^^^^\n@@ -48,10 +48,14 @@ help: add `dyn` keyword before this trait\n    |\n LL - impl LocalTraitOne for fmt::Display {}\n LL + impl LocalTraitOne for dyn fmt::Display {}\n-   | \n+   |\n+help: alternatively use a blanket implementation to implement `LocalTraitOne` for all types that also implement `fmt::Display`\n+   |\n+LL | impl<T: fmt::Display> LocalTraitOne for T {}\n+   |     +++++++++++++++++                   ~\n \n error[E0782]: trait objects must include the `dyn` keyword\n-  --> $DIR/suggest-blanket-impl-local-trait.rs:33:24\n+  --> $DIR/suggest-blanket-impl-local-trait.rs:40:24\n    |\n LL | impl LocalTraitOne for fmt::Display + Send {}\n    |                        ^^^^^^^^^^^^^^^^^^^\n@@ -60,10 +64,14 @@ help: add `dyn` keyword before this trait\n    |\n LL - impl LocalTraitOne for fmt::Display + Send {}\n LL + impl LocalTraitOne for dyn fmt::Display + Send {}\n-   | \n+   |\n+help: alternatively use a blanket implementation to implement `LocalTraitOne` for all types that also implement `fmt::Display + Send`\n+   |\n+LL | impl<T: fmt::Display + Send> LocalTraitOne for T {}\n+   |     ++++++++++++++++++++++++                   ~\n \n error[E0782]: trait objects must include the `dyn` keyword\n-  --> $DIR/suggest-blanket-impl-local-trait.rs:36:29\n+  --> $DIR/suggest-blanket-impl-local-trait.rs:46:29\n    |\n LL | impl<E> GenericTrait<E> for LocalTraitOne {}\n    |                             ^^^^^^^^^^^^^\n@@ -72,14 +80,14 @@ help: add `dyn` keyword before this trait\n    |\n LL - impl<E> GenericTrait<E> for LocalTraitOne {}\n LL + impl<E> GenericTrait<E> for dyn LocalTraitOne {}\n-   | \n+   |\n help: alternatively use a blanket implementation to implement `GenericTrait<E>` for all types that also implement `LocalTraitOne`\n    |\n-LL | impl<E, L: LocalTraitOne> GenericTrait<E> for T {}\n+LL | impl<E, T: LocalTraitOne> GenericTrait<E> for T {}\n    |       ++++++++++++++++++                      ~\n \n error[E0782]: trait objects must include the `dyn` keyword\n-  --> $DIR/suggest-blanket-impl-local-trait.rs:41:35\n+  --> $DIR/suggest-blanket-impl-local-trait.rs:53:35\n    |\n LL | impl<T, E> GenericTraitTwo<E> for GenericTrait<T> {}\n    |                                   ^^^^^^^^^^^^^^^\n@@ -88,10 +96,10 @@ help: add `dyn` keyword before this trait\n    |\n LL - impl<T, E> GenericTraitTwo<E> for GenericTrait<T> {}\n LL + impl<T, E> GenericTraitTwo<E> for dyn GenericTrait<T> {}\n-   | \n+   |\n help: alternatively use a blanket implementation to implement `GenericTraitTwo<E>` for all types that also implement `GenericTrait<T>`\n    |\n-LL | impl<T, E, G: GenericTrait<T>> GenericTraitTwo<E> for U {}\n+LL | impl<T, E, U: GenericTrait<T>> GenericTraitTwo<E> for U {}\n    |          ++++++++++++++++++++                         ~\n \n error: aborting due to 7 previous errors"}, {"sha": "0a357e006c3573ed6279ee359d93dd788baec86a", "filename": "suggest-blanket-impl-local-trait", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/835b7a523a41cc89f0839f40652477af097db390/suggest-blanket-impl-local-trait", "raw_url": "https://github.com/rust-lang/rust/raw/835b7a523a41cc89f0839f40652477af097db390/suggest-blanket-impl-local-trait", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/suggest-blanket-impl-local-trait?ref=835b7a523a41cc89f0839f40652477af097db390"}]}