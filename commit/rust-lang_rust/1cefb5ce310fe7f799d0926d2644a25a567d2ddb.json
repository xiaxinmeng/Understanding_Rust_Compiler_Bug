{"sha": "1cefb5ce310fe7f799d0926d2644a25a567d2ddb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjZWZiNWNlMzEwZmU3Zjc5OWQwOTI2ZDI2NDRhMjVhNTY3ZDJkZGI=", "commit": {"author": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2018-05-02T21:53:40Z"}, "committer": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2018-05-02T21:53:40Z"}, "message": "nano-optimization for memchr::repeat_byte", "tree": {"sha": "1ec19184d2f65c33d9b8342dcc3a53971977e064", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ec19184d2f65c33d9b8342dcc3a53971977e064"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1cefb5ce310fe7f799d0926d2644a25a567d2ddb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1cefb5ce310fe7f799d0926d2644a25a567d2ddb", "html_url": "https://github.com/rust-lang/rust/commit/1cefb5ce310fe7f799d0926d2644a25a567d2ddb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1cefb5ce310fe7f799d0926d2644a25a567d2ddb/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3eadd754730923936ca2ce9c2d303fcac9af099f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3eadd754730923936ca2ce9c2d303fcac9af099f", "html_url": "https://github.com/rust-lang/rust/commit/3eadd754730923936ca2ce9c2d303fcac9af099f"}], "stats": {"total": 15, "additions": 2, "deletions": 13}, "files": [{"sha": "469404f7f6bb080d7c55209bc89cd6c884ff4597", "filename": "src/libcore/slice/memchr.rs", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1cefb5ce310fe7f799d0926d2644a25a567d2ddb/src%2Flibcore%2Fslice%2Fmemchr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cefb5ce310fe7f799d0926d2644a25a567d2ddb/src%2Flibcore%2Fslice%2Fmemchr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmemchr.rs?ref=1cefb5ce310fe7f799d0926d2644a25a567d2ddb", "patch": "@@ -39,21 +39,10 @@ fn repeat_byte(b: u8) -> usize {\n     (b as usize) << 8 | b as usize\n }\n \n-#[cfg(target_pointer_width = \"32\")]\n+#[cfg(not(target_pointer_width = \"16\"))]\n #[inline]\n fn repeat_byte(b: u8) -> usize {\n-    let mut rep = (b as usize) << 8 | b as usize;\n-    rep = rep << 16 | rep;\n-    rep\n-}\n-\n-#[cfg(target_pointer_width = \"64\")]\n-#[inline]\n-fn repeat_byte(b: u8) -> usize {\n-    let mut rep = (b as usize) << 8 | b as usize;\n-    rep = rep << 16 | rep;\n-    rep = rep << 32 | rep;\n-    rep\n+    (b as usize) * (::usize::MAX / 255)\n }\n \n /// Return the first index matching the byte `x` in `text`."}]}