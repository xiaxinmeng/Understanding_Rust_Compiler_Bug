{"sha": "7ae2228039819b7a8f2ef74c9e607ff35d121ee3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhZTIyMjgwMzk4MTliN2E4ZjJlZjc0YzllNjA3ZmYzNWQxMjFlZTM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-06-09T08:48:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-09T08:48:56Z"}, "message": "Merge #4805\n\n4805: Finish JsonProject transition to cfgs from the separate atoms and features. r=matklad a=woody77\n\nHere's the rest of the transition.\n\nCo-authored-by: Aaron Wood <aaronwood@google.com>", "tree": {"sha": "66209571f96a59d425cfc0f22c4398283498f00d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66209571f96a59d425cfc0f22c4398283498f00d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ae2228039819b7a8f2ef74c9e607ff35d121ee3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe30z4CRBK7hj4Ov3rIwAAdHIIAKx6awkay4gP+0+aR7+7YTsF\nFG+B8qFccCI4Cb2dNmudaaUw3j3H+ewUDWSU3clC+UIF3To1aCVSCqfYx0rbTHyD\nD/IA2FGLednQZLDksj20i0d24bYTyCfZX0F16V3c/q1/QDm0VKs/H16ews6+ILnF\nzmPcY3XZIW2j5as14UpXl54ZK/BQOpEETPFipvWX4Lj3vIjHYwXO9FpurPZWPsxm\nAY41GdhoWRT7/EW50lMQuti4/WtzTKdHrNvlNWntrqRRtL5tawbxcpDTKsVr8UTy\ng2ax6eTXVyQTzJJ67GVkAKl621jOazUxHR10idjo9STROVDfayH6pCRe+DaPLng=\n=Q6mo\n-----END PGP SIGNATURE-----\n", "payload": "tree 66209571f96a59d425cfc0f22c4398283498f00d\nparent 733ef3163c7423d8307d2df4503c08870b5a35b7\nparent 055b9b64bce2808ed31eb4547cea16ec282d6897\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1591692536 +0000\ncommitter GitHub <noreply@github.com> 1591692536 +0000\n\nMerge #4805\n\n4805: Finish JsonProject transition to cfgs from the separate atoms and features. r=matklad a=woody77\n\nHere's the rest of the transition.\n\nCo-authored-by: Aaron Wood <aaronwood@google.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ae2228039819b7a8f2ef74c9e607ff35d121ee3", "html_url": "https://github.com/rust-lang/rust/commit/7ae2228039819b7a8f2ef74c9e607ff35d121ee3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ae2228039819b7a8f2ef74c9e607ff35d121ee3/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "733ef3163c7423d8307d2df4503c08870b5a35b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/733ef3163c7423d8307d2df4503c08870b5a35b7", "html_url": "https://github.com/rust-lang/rust/commit/733ef3163c7423d8307d2df4503c08870b5a35b7"}, {"sha": "055b9b64bce2808ed31eb4547cea16ec282d6897", "url": "https://api.github.com/repos/rust-lang/rust/commits/055b9b64bce2808ed31eb4547cea16ec282d6897", "html_url": "https://github.com/rust-lang/rust/commit/055b9b64bce2808ed31eb4547cea16ec282d6897"}], "stats": {"total": 48, "additions": 1, "deletions": 47}, "files": [{"sha": "ee2de4c2569165561ccaab17ac1d86f7c88ee4aa", "filename": "crates/ra_project_model/src/json_project.rs", "status": "modified", "additions": 1, "deletions": 41, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/7ae2228039819b7a8f2ef74c9e607ff35d121ee3/crates%2Fra_project_model%2Fsrc%2Fjson_project.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ae2228039819b7a8f2ef74c9e607ff35d121ee3/crates%2Fra_project_model%2Fsrc%2Fjson_project.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Fjson_project.rs?ref=7ae2228039819b7a8f2ef74c9e607ff35d121ee3", "patch": "@@ -2,7 +2,7 @@\n \n use std::path::PathBuf;\n \n-use rustc_hash::{FxHashMap, FxHashSet};\n+use rustc_hash::FxHashSet;\n use serde::Deserialize;\n \n /// Roots and crates that compose this Rust project.\n@@ -28,16 +28,9 @@ pub struct Crate {\n     pub(crate) edition: Edition,\n     pub(crate) deps: Vec<Dep>,\n \n-    // This is the preferred method of providing cfg options.\n     #[serde(default)]\n     pub(crate) cfg: FxHashSet<String>,\n \n-    // These two are here for transition only.\n-    #[serde(default)]\n-    pub(crate) atom_cfgs: FxHashSet<String>,\n-    #[serde(default)]\n-    pub(crate) key_value_cfgs: FxHashMap<String, String>,\n-\n     pub(crate) out_dir: Option<PathBuf>,\n     pub(crate) proc_macro_dylib_path: Option<PathBuf>,\n }\n@@ -99,37 +92,4 @@ mod tests {\n         assert!(krate.cfg.contains(&\"feature=feature_2\".to_string()));\n         assert!(krate.cfg.contains(&\"other=value\".to_string()));\n     }\n-\n-    #[test]\n-    fn test_crate_deserialization_old_json() {\n-        let raw_json = json!(    {\n-           \"crate_id\": 2,\n-           \"root_module\": \"this/is/a/file/path.rs\",\n-           \"deps\": [\n-             {\n-               \"crate\": 1,\n-               \"name\": \"some_dep_crate\"\n-             },\n-           ],\n-           \"edition\": \"2015\",\n-           \"atom_cfgs\": [\n-             \"atom_1\",\n-             \"atom_2\",\n-           ],\n-           \"key_value_cfgs\": {\n-             \"feature\": \"feature_1\",\n-             \"feature\": \"feature_2\",\n-             \"other\": \"value\",\n-           },\n-        });\n-\n-        let krate: Crate = serde_json::from_value(raw_json).unwrap();\n-\n-        assert!(krate.atom_cfgs.contains(&\"atom_1\".to_string()));\n-        assert!(krate.atom_cfgs.contains(&\"atom_2\".to_string()));\n-        assert!(krate.key_value_cfgs.contains_key(&\"feature\".to_string()));\n-        assert_eq!(krate.key_value_cfgs.get(\"feature\"), Some(&\"feature_2\".to_string()));\n-        assert!(krate.key_value_cfgs.contains_key(&\"other\".to_string()));\n-        assert_eq!(krate.key_value_cfgs.get(\"other\"), Some(&\"value\".to_string()));\n-    }\n }"}, {"sha": "47fa34ddfb8444a0e9038f55a4833488bfa612d6", "filename": "crates/ra_project_model/src/lib.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7ae2228039819b7a8f2ef74c9e607ff35d121ee3/crates%2Fra_project_model%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ae2228039819b7a8f2ef74c9e607ff35d121ee3/crates%2Fra_project_model%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Flib.rs?ref=7ae2228039819b7a8f2ef74c9e607ff35d121ee3", "patch": "@@ -280,12 +280,6 @@ impl ProjectWorkspace {\n                                     }\n                                 }\n                             }\n-                            for name in &krate.atom_cfgs {\n-                                opts.insert_atom(name.into());\n-                            }\n-                            for (key, value) in &krate.key_value_cfgs {\n-                                opts.insert_key_value(key.into(), value.into());\n-                            }\n                             opts\n                         };\n "}]}