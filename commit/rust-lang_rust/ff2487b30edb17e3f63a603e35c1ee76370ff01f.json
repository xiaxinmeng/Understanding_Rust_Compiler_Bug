{"sha": "ff2487b30edb17e3f63a603e35c1ee76370ff01f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmMjQ4N2IzMGVkYjE3ZTNmNjNhNjAzZTM1YzFlZTc2MzcwZmYwMWY=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2016-12-02T18:23:30Z"}, "committer": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2016-12-02T18:23:30Z"}, "message": "permit more equalities", "tree": {"sha": "830d758dffa191f037d5fd6aec83a526b198e21f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/830d758dffa191f037d5fd6aec83a526b198e21f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff2487b30edb17e3f63a603e35c1ee76370ff01f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff2487b30edb17e3f63a603e35c1ee76370ff01f", "html_url": "https://github.com/rust-lang/rust/commit/ff2487b30edb17e3f63a603e35c1ee76370ff01f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff2487b30edb17e3f63a603e35c1ee76370ff01f/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf1fa94be1e98dba2ce1755e1c86acef50daf599", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf1fa94be1e98dba2ce1755e1c86acef50daf599", "html_url": "https://github.com/rust-lang/rust/commit/cf1fa94be1e98dba2ce1755e1c86acef50daf599"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "487a3034b3ad5903e3885d1a7b0e52da8f22f70a", "filename": "clippy_lints/src/utils/hir.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ff2487b30edb17e3f63a603e35c1ee76370ff01f/clippy_lints%2Fsrc%2Futils%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff2487b30edb17e3f63a603e35c1ee76370ff01f/clippy_lints%2Fsrc%2Futils%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhir.rs?ref=ff2487b30edb17e3f63a603e35c1ee76370ff01f", "patch": "@@ -101,8 +101,8 @@ impl<'a, 'tcx: 'a> SpanlessEq<'a, 'tcx> {\n                 self.eq_expr(lc, rc) && self.eq_block(lt, rt) && both(le, re, |l, r| self.eq_expr(l, r))\n             }\n             (&ExprLit(ref l), &ExprLit(ref r)) => l.node == r.node,\n-            (&ExprLoop(ref lb, ref ll, ref lls), &ExprLoop(ref rb, ref rl, ref rls)) => {\n-                self.eq_block(lb, rb) && both(ll, rl, |l, r| l.node.as_str() == r.node.as_str()) && lls == rls\n+            (&ExprLoop(ref lb, ref ll, _), &ExprLoop(ref rb, ref rl, _)) => {\n+                self.eq_block(lb, rb) && both(ll, rl, |l, r| l.node.as_str() == r.node.as_str())\n             }\n             (&ExprMatch(ref le, ref la, _), &ExprMatch(ref re, ref ra, _)) => {\n                 self.eq_expr(le, re) &&\n@@ -380,14 +380,13 @@ impl<'a, 'tcx: 'a> SpanlessHash<'a, 'tcx> {\n                 c.hash(&mut self.s);\n                 l.hash(&mut self.s);\n             }\n-            ExprLoop(ref b, ref i, ref j) => {\n+            ExprLoop(ref b, ref i, _) => {\n                 let c: fn(_, _, _) -> _ = ExprLoop;\n                 c.hash(&mut self.s);\n                 self.hash_block(b);\n                 if let Some(i) = *i {\n                     self.hash_name(&i.node);\n                 }\n-                j.hash(&mut self.s);\n             }\n             ExprMatch(ref e, ref arms, _) => {\n                 let c: fn(_, _, _) -> _ = ExprMatch;"}]}