{"sha": "cd5b5e7a8022f419af649455bf047384e71922fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkNWI1ZTdhODAyMmY0MTlhZjY0OTQ1NWJmMDQ3Mzg0ZTcxOTIyZmQ=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2019-02-18T14:00:59Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2019-02-24T06:50:46Z"}, "message": "hir: remove NodeId from WhereClause", "tree": {"sha": "3e68b63399727fd6871c567d3ddd50f10e06cc26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e68b63399727fd6871c567d3ddd50f10e06cc26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd5b5e7a8022f419af649455bf047384e71922fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd5b5e7a8022f419af649455bf047384e71922fd", "html_url": "https://github.com/rust-lang/rust/commit/cd5b5e7a8022f419af649455bf047384e71922fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd5b5e7a8022f419af649455bf047384e71922fd/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4f8a6bcc1ecc3715a025c3a56ebf06c117ba767", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4f8a6bcc1ecc3715a025c3a56ebf06c117ba767", "html_url": "https://github.com/rust-lang/rust/commit/e4f8a6bcc1ecc3715a025c3a56ebf06c117ba767"}], "stats": {"total": 12, "additions": 3, "deletions": 9}, "files": [{"sha": "182dfdb60e368674c1c94f98a027c79d7456b6cf", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cd5b5e7a8022f419af649455bf047384e71922fd/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd5b5e7a8022f419af649455bf047384e71922fd/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=cd5b5e7a8022f419af649455bf047384e71922fd", "patch": "@@ -1391,12 +1391,11 @@ impl<'a> LoweringContext<'a> {\n         );\n \n         self.with_hir_id_owner(exist_ty_node_id, |lctx| {\n-            let LoweredNodeId { node_id, hir_id } = lctx.next_id();\n+            let LoweredNodeId { node_id: _, hir_id } = lctx.next_id();\n             let exist_ty_item_kind = hir::ItemKind::Existential(hir::ExistTy {\n                 generics: hir::Generics {\n                     params: lifetime_defs,\n                     where_clause: hir::WhereClause {\n-                        id: node_id,\n                         hir_id,\n                         predicates: Vec::new().into(),\n                     },\n@@ -2599,10 +2598,9 @@ impl<'a> LoweringContext<'a> {\n         self.with_anonymous_lifetime_mode(\n             AnonymousLifetimeMode::ReportError,\n             |this| {\n-                let LoweredNodeId { node_id, hir_id } = this.lower_node_id(wc.id);\n+                let LoweredNodeId { node_id: _, hir_id } = this.lower_node_id(wc.id);\n \n                 hir::WhereClause {\n-                    id: node_id,\n                     hir_id,\n                     predicates: wc.predicates\n                         .iter()"}, {"sha": "37e45ebe7f4f024e2bc7521f92d035e5df8a137d", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cd5b5e7a8022f419af649455bf047384e71922fd/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd5b5e7a8022f419af649455bf047384e71922fd/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=cd5b5e7a8022f419af649455bf047384e71922fd", "patch": "@@ -19,7 +19,7 @@ use errors::FatalError;\n use syntax_pos::{Span, DUMMY_SP, symbol::InternedString};\n use syntax::source_map::Spanned;\n use rustc_target::spec::abi::Abi;\n-use syntax::ast::{self, CrateSugar, Ident, Name, NodeId, DUMMY_NODE_ID, AsmDialect};\n+use syntax::ast::{self, CrateSugar, Ident, Name, NodeId, AsmDialect};\n use syntax::ast::{Attribute, Label, Lit, StrStyle, FloatTy, IntTy, UintTy};\n use syntax::attr::{InlineAttr, OptimizeAttr};\n use syntax::ext::hygiene::SyntaxContext;\n@@ -583,7 +583,6 @@ impl Generics {\n         Generics {\n             params: HirVec::new(),\n             where_clause: WhereClause {\n-                id: DUMMY_NODE_ID,\n                 hir_id: DUMMY_HIR_ID,\n                 predicates: HirVec::new(),\n             },\n@@ -628,7 +627,6 @@ pub enum SyntheticTyParamKind {\n /// A where-clause in a definition.\n #[derive(Clone, RustcEncodable, RustcDecodable, Debug)]\n pub struct WhereClause {\n-    pub id: NodeId,\n     pub hir_id: HirId,\n     pub predicates: HirVec<WherePredicate>,\n }"}, {"sha": "17d374884134a86f429dba2f548f10d2dbce9732", "filename": "src/librustc/hir/print.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cd5b5e7a8022f419af649455bf047384e71922fd/src%2Flibrustc%2Fhir%2Fprint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd5b5e7a8022f419af649455bf047384e71922fd/src%2Flibrustc%2Fhir%2Fprint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fprint.rs?ref=cd5b5e7a8022f419af649455bf047384e71922fd", "patch": "@@ -2248,7 +2248,6 @@ impl<'a> State<'a> {\n         let generics = hir::Generics {\n             params: hir::HirVec::new(),\n             where_clause: hir::WhereClause {\n-                id: ast::DUMMY_NODE_ID,\n                 hir_id: hir::DUMMY_HIR_ID,\n                 predicates: hir::HirVec::new(),\n             },"}, {"sha": "97d5abd28fa195c2f5c7dd7d755a88c2e40c9f9b", "filename": "src/librustc/ich/impls_hir.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cd5b5e7a8022f419af649455bf047384e71922fd/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd5b5e7a8022f419af649455bf047384e71922fd/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_hir.rs?ref=cd5b5e7a8022f419af649455bf047384e71922fd", "patch": "@@ -253,7 +253,6 @@ impl_stable_hash_for!(enum hir::SyntheticTyParamKind {\n });\n \n impl_stable_hash_for!(struct hir::WhereClause {\n-    id,\n     hir_id,\n     predicates\n });"}]}