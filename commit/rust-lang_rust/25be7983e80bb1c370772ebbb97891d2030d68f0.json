{"sha": "25be7983e80bb1c370772ebbb97891d2030d68f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1YmU3OTgzZTgwYmIxYzM3MDc3MmViYmI5Nzg5MWQyMDMwZDY4ZjA=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-05-02T17:58:49Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-05-02T20:21:58Z"}, "message": "remove `mir_passes` from `Session` and add a FIXME", "tree": {"sha": "9962fe334f683ffb40ee9d57439239d990ad80b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9962fe334f683ffb40ee9d57439239d990ad80b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25be7983e80bb1c370772ebbb97891d2030d68f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25be7983e80bb1c370772ebbb97891d2030d68f0", "html_url": "https://github.com/rust-lang/rust/commit/25be7983e80bb1c370772ebbb97891d2030d68f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25be7983e80bb1c370772ebbb97891d2030d68f0/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "afc5acd84ba97e1e767dc489ebcc07c0bfc2c5cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/afc5acd84ba97e1e767dc489ebcc07c0bfc2c5cb", "html_url": "https://github.com/rust-lang/rust/commit/afc5acd84ba97e1e767dc489ebcc07c0bfc2c5cb"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "aa91123ef6952ac044781b2aac0369725292fd5e", "filename": "src/librustc/mir/transform.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/25be7983e80bb1c370772ebbb97891d2030d68f0/src%2Flibrustc%2Fmir%2Ftransform.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25be7983e80bb1c370772ebbb97891d2030d68f0/src%2Flibrustc%2Fmir%2Ftransform.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Ftransform.rs?ref=25be7983e80bb1c370772ebbb97891d2030d68f0", "patch": "@@ -134,6 +134,8 @@ pub trait MirPass {\n }\n \n /// A manager for MIR passes.\n+///\n+/// FIXME(#41712) -- it is unclear whether we should have this struct.\n #[derive(Clone)]\n pub struct Passes {\n     pass_hooks: Vec<Rc<PassHook>>,"}, {"sha": "ec3eaa124c3078a253f804317843f0451aa16dda", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/25be7983e80bb1c370772ebbb97891d2030d68f0/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25be7983e80bb1c370772ebbb97891d2030d68f0/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=25be7983e80bb1c370772ebbb97891d2030d68f0", "patch": "@@ -21,7 +21,6 @@ use session::config::DebugInfoLevel;\n use ty::tls;\n use util::nodemap::{FxHashMap, FxHashSet};\n use util::common::duration_to_secs_str;\n-use mir::transform as mir_pass;\n \n use syntax::ast::NodeId;\n use errors::{self, DiagnosticBuilder};\n@@ -85,7 +84,6 @@ pub struct Session {\n     /// redundantly verbose output (Issue #24690).\n     pub one_time_diagnostics: RefCell<FxHashSet<(lint::LintId, Span, String)>>,\n     pub plugin_llvm_passes: RefCell<Vec<String>>,\n-    pub mir_passes: RefCell<mir_pass::Passes>,\n     pub plugin_attributes: RefCell<Vec<(String, AttributeType)>>,\n     pub crate_types: RefCell<Vec<config::CrateType>>,\n     pub dependency_formats: RefCell<dependency_format::Dependencies>,\n@@ -670,7 +668,6 @@ pub fn build_session_(sopts: config::Options,\n         lints: RefCell::new(lint::LintTable::new()),\n         one_time_diagnostics: RefCell::new(FxHashSet()),\n         plugin_llvm_passes: RefCell::new(Vec::new()),\n-        mir_passes: RefCell::new(mir_pass::Passes::new()),\n         plugin_attributes: RefCell::new(Vec::new()),\n         crate_types: RefCell::new(Vec::new()),\n         dependency_formats: RefCell::new(FxHashMap()),"}, {"sha": "9f0f567b6cee1b5519db89074683098de89e1d4a", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/25be7983e80bb1c370772ebbb97891d2030d68f0/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25be7983e80bb1c370772ebbb97891d2030d68f0/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=25be7983e80bb1c370772ebbb97891d2030d68f0", "patch": "@@ -20,7 +20,7 @@ use rustc::session::search_paths::PathKind;\n use rustc::lint;\n use rustc::middle::{self, dependency_format, stability, reachable};\n use rustc::middle::privacy::AccessLevels;\n-use rustc::mir::transform::{MIR_CONST, MIR_VALIDATED, MIR_OPTIMIZED};\n+use rustc::mir::transform::{MIR_CONST, MIR_VALIDATED, MIR_OPTIMIZED, Passes};\n use rustc::ty::{self, TyCtxt, Resolutions, GlobalArenas};\n use rustc::util::common::time;\n use rustc::util::nodemap::NodeSet;\n@@ -904,7 +904,7 @@ pub fn phase_3_run_analysis_passes<'tcx, F, R>(sess: &'tcx Session,\n     rustc_const_eval::provide(&mut extern_providers);\n \n     // Setup the MIR passes that we want to run.\n-    let mut passes = sess.mir_passes.borrow().clone();\n+    let mut passes = Passes::new();\n     passes.push_hook(mir::transform::dump_mir::DumpMir);\n \n     // What we need to do constant evaluation."}, {"sha": "8b95be00fa752cb50bf6c90b00641aff783579e4", "filename": "src/librustc_driver/test.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/25be7983e80bb1c370772ebbb97891d2030d68f0/src%2Flibrustc_driver%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25be7983e80bb1c370772ebbb97891d2030d68f0/src%2Flibrustc_driver%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Ftest.rs?ref=25be7983e80bb1c370772ebbb97891d2030d68f0", "patch": "@@ -27,6 +27,7 @@ use rustc::infer::{self, InferOk, InferResult};\n use rustc::infer::type_variable::TypeVariableOrigin;\n use rustc_metadata::cstore::CStore;\n use rustc::hir::map as hir_map;\n+use rustc::mir::transform::Passes;\n use rustc::session::{self, config};\n use std::rc::Rc;\n use syntax::ast;\n@@ -141,7 +142,7 @@ fn test_env<F>(source_string: &str,\n     TyCtxt::create_and_enter(&sess,\n                              ty::maps::Providers::default(),\n                              ty::maps::Providers::default(),\n-                             Rc::new(sess.mir_passes.borrow().clone()),\n+                             Rc::new(Passes::new()),\n                              &arenas,\n                              &arena,\n                              resolutions,"}]}