{"sha": "18ac341413cbac544ee16be0a0dbab865947fb63", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4YWMzNDE0MTNjYmFjNTQ0ZWUxNmJlMGEwZGJhYjg2NTk0N2ZiNjM=", "commit": {"author": {"name": "Anthony Deschamps", "email": "anthony.j.deschamps@gmail.com", "date": "2017-11-04T19:24:41Z"}, "committer": {"name": "Anthony Deschamps", "email": "anthony.j.deschamps@gmail.com", "date": "2017-11-04T19:25:09Z"}, "message": "Handle case where there is a where clause but no generic parameters.\n\nFixes #2103", "tree": {"sha": "9049a714a22fe10c36b2a87c9806be9202bf63de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9049a714a22fe10c36b2a87c9806be9202bf63de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18ac341413cbac544ee16be0a0dbab865947fb63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18ac341413cbac544ee16be0a0dbab865947fb63", "html_url": "https://github.com/rust-lang/rust/commit/18ac341413cbac544ee16be0a0dbab865947fb63", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18ac341413cbac544ee16be0a0dbab865947fb63/comments", "author": {"login": "adeschamps", "id": 3701316, "node_id": "MDQ6VXNlcjM3MDEzMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/3701316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adeschamps", "html_url": "https://github.com/adeschamps", "followers_url": "https://api.github.com/users/adeschamps/followers", "following_url": "https://api.github.com/users/adeschamps/following{/other_user}", "gists_url": "https://api.github.com/users/adeschamps/gists{/gist_id}", "starred_url": "https://api.github.com/users/adeschamps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adeschamps/subscriptions", "organizations_url": "https://api.github.com/users/adeschamps/orgs", "repos_url": "https://api.github.com/users/adeschamps/repos", "events_url": "https://api.github.com/users/adeschamps/events{/privacy}", "received_events_url": "https://api.github.com/users/adeschamps/received_events", "type": "User", "site_admin": false}, "committer": {"login": "adeschamps", "id": 3701316, "node_id": "MDQ6VXNlcjM3MDEzMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/3701316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adeschamps", "html_url": "https://github.com/adeschamps", "followers_url": "https://api.github.com/users/adeschamps/followers", "following_url": "https://api.github.com/users/adeschamps/following{/other_user}", "gists_url": "https://api.github.com/users/adeschamps/gists{/gist_id}", "starred_url": "https://api.github.com/users/adeschamps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adeschamps/subscriptions", "organizations_url": "https://api.github.com/users/adeschamps/orgs", "repos_url": "https://api.github.com/users/adeschamps/repos", "events_url": "https://api.github.com/users/adeschamps/events{/privacy}", "received_events_url": "https://api.github.com/users/adeschamps/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0af8825eb104e6c7b9444693d583b5fa0bd55ceb", "url": "https://api.github.com/repos/rust-lang/rust/commits/0af8825eb104e6c7b9444693d583b5fa0bd55ceb", "html_url": "https://github.com/rust-lang/rust/commit/0af8825eb104e6c7b9444693d583b5fa0bd55ceb"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "8fe51f7855cca06b3d42880226fd25e76872a063", "filename": "src/items.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/18ac341413cbac544ee16be0a0dbab865947fb63/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18ac341413cbac544ee16be0a0dbab865947fb63/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=18ac341413cbac544ee16be0a0dbab865947fb63", "patch": "@@ -1070,6 +1070,7 @@ pub fn format_struct_struct(\n     let header_str = format_header(item_name, ident, vis);\n     result.push_str(&header_str);\n \n+    let header_hi = span.lo() + BytePos(header_str.len() as u32);\n     let body_lo = context.codemap.span_after(span, \"{\");\n \n     let generics_str = match generics {\n@@ -1081,7 +1082,7 @@ pub fn format_struct_struct(\n             context.config.item_brace_style(),\n             fields.is_empty(),\n             offset,\n-            mk_sp(span.lo(), body_lo),\n+            mk_sp(header_hi, body_lo),\n             last_line_width(&result),\n         )?,\n         None => {\n@@ -2663,6 +2664,13 @@ fn format_generics(\n     let same_line_brace = if !generics.where_clause.predicates.is_empty() || result.contains('\\n') {\n         let budget = context.budget(last_line_used_width(&result, offset.width()));\n         let option = WhereClauseOption::snuggled(&result);\n+        // If the generics are not parameterized then generics.span.hi() == 0,\n+        // so we use span.lo(), which is the position after `struct Foo`.\n+        let span_end_before_where = if generics.is_parameterized() {\n+            generics.span.hi()\n+        } else {\n+            span.lo()\n+        };\n         let where_clause_str = rewrite_where_clause(\n             context,\n             &generics.where_clause,\n@@ -2671,7 +2679,7 @@ fn format_generics(\n             Density::Tall,\n             terminator,\n             Some(span.hi()),\n-            generics.span.hi(),\n+            span_end_before_where,\n             option,\n         )?;\n         result.push_str(&where_clause_str);"}, {"sha": "5a043d54b75baf8ee80bed671f1f719da81342ef", "filename": "tests/target/issue-2103.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/18ac341413cbac544ee16be0a0dbab865947fb63/tests%2Ftarget%2Fissue-2103.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18ac341413cbac544ee16be0a0dbab865947fb63/tests%2Ftarget%2Fissue-2103.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-2103.rs?ref=18ac341413cbac544ee16be0a0dbab865947fb63", "patch": "@@ -0,0 +1,14 @@\n+struct X\n+where\n+    i32: Sized,\n+{\n+    x: i32,\n+}\n+\n+struct X\n+// with comment\n+where\n+    i32: Sized,\n+{\n+    x: i32,\n+}"}]}