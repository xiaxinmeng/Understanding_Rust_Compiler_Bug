{"sha": "1e79917bda90d3b7ea53fc08b0c0c4862dfdca53", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlNzk5MTdiZGE5MGQzYjdlYTUzZmMwOGIwYzBjNDg2MmRmZGNhNTM=", "commit": {"author": {"name": "Peter Atashian", "email": "retep998@gmail.com", "date": "2015-07-20T17:24:34Z"}, "committer": {"name": "Peter Atashian", "email": "retep998@gmail.com", "date": "2015-07-20T17:24:34Z"}, "message": "Improve Debug impl for File on Windows\nAdds a path field if a path could be obtained\n\nSigned-off-by: Peter Atashian <retep998@gmail.com>", "tree": {"sha": "92539f2019d30946d1650a09847b1bf9dd9ce0cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92539f2019d30946d1650a09847b1bf9dd9ce0cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e79917bda90d3b7ea53fc08b0c0c4862dfdca53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e79917bda90d3b7ea53fc08b0c0c4862dfdca53", "html_url": "https://github.com/rust-lang/rust/commit/1e79917bda90d3b7ea53fc08b0c0c4862dfdca53", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e79917bda90d3b7ea53fc08b0c0c4862dfdca53/comments", "author": {"login": "retep998", "id": 666308, "node_id": "MDQ6VXNlcjY2NjMwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/666308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retep998", "html_url": "https://github.com/retep998", "followers_url": "https://api.github.com/users/retep998/followers", "following_url": "https://api.github.com/users/retep998/following{/other_user}", "gists_url": "https://api.github.com/users/retep998/gists{/gist_id}", "starred_url": "https://api.github.com/users/retep998/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retep998/subscriptions", "organizations_url": "https://api.github.com/users/retep998/orgs", "repos_url": "https://api.github.com/users/retep998/repos", "events_url": "https://api.github.com/users/retep998/events{/privacy}", "received_events_url": "https://api.github.com/users/retep998/received_events", "type": "User", "site_admin": false}, "committer": {"login": "retep998", "id": 666308, "node_id": "MDQ6VXNlcjY2NjMwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/666308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retep998", "html_url": "https://github.com/retep998", "followers_url": "https://api.github.com/users/retep998/followers", "following_url": "https://api.github.com/users/retep998/following{/other_user}", "gists_url": "https://api.github.com/users/retep998/gists{/gist_id}", "starred_url": "https://api.github.com/users/retep998/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retep998/subscriptions", "organizations_url": "https://api.github.com/users/retep998/orgs", "repos_url": "https://api.github.com/users/retep998/repos", "events_url": "https://api.github.com/users/retep998/events{/privacy}", "received_events_url": "https://api.github.com/users/retep998/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32a12c8dd080034d0242958716de37beb2a67ab5", "url": "https://api.github.com/repos/rust-lang/rust/commits/32a12c8dd080034d0242958716de37beb2a67ab5", "html_url": "https://github.com/rust-lang/rust/commit/32a12c8dd080034d0242958716de37beb2a67ab5"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "424d24ea620dfcefc0d047f2958d6bbf0b03e2a8", "filename": "src/libstd/sys/windows/fs.rs", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/1e79917bda90d3b7ea53fc08b0c0c4862dfdca53/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e79917bda90d3b7ea53fc08b0c0c4862dfdca53/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs?ref=1e79917bda90d3b7ea53fc08b0c0c4862dfdca53", "patch": "@@ -369,10 +369,13 @@ impl FromInner<libc::HANDLE> for File {\n \n impl fmt::Debug for File {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        // FIXME(#24570): add more info here (e.g. path, mode)\n-        f.debug_struct(\"File\")\n-            .field(\"handle\", &self.handle.raw())\n-            .finish()\n+        // FIXME(#24570): add more info here (e.g. mode)\n+        let mut b = f.debug_struct(\"File\");\n+        b.field(\"handle\", &self.handle.raw());\n+        if let Ok(path) = get_path(&self) {\n+            b.field(\"path\", &path);\n+        }\n+        b.finish()\n     }\n }\n \n@@ -582,11 +585,7 @@ pub fn utimes(p: &Path, atime: u64, mtime: u64) -> io::Result<()> {\n     Ok(())\n }\n \n-pub fn canonicalize(p: &Path) -> io::Result<PathBuf> {\n-\n-    let mut opts = OpenOptions::new();\n-    opts.read(true);\n-    let f = try!(File::open(p, &opts));\n+fn get_path(f: &File) -> io::Result<PathBuf> {\n     super::fill_utf16_buf(|buf, sz| unsafe {\n         c::GetFinalPathNameByHandleW(f.handle.raw(), buf, sz,\n                                      libc::VOLUME_NAME_DOS)\n@@ -595,6 +594,13 @@ pub fn canonicalize(p: &Path) -> io::Result<PathBuf> {\n     })\n }\n \n+pub fn canonicalize(p: &Path) -> io::Result<PathBuf> {\n+    let mut opts = OpenOptions::new();\n+    opts.read(true);\n+    let f = try!(File::open(p, &opts));\n+    get_path(&f)\n+}\n+\n pub fn copy(from: &Path, to: &Path) -> io::Result<u64> {\n     unsafe extern \"system\" fn callback(\n         _TotalFileSize: libc::LARGE_INTEGER,"}]}