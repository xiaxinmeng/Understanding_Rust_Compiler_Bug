{"sha": "3a1d3241b4f998d136afe188072dc36f006d026c", "node_id": "C_kwDOAAsO6NoAKDNhMWQzMjQxYjRmOTk4ZDEzNmFmZTE4ODA3MmRjMzZmMDA2ZDAyNmM", "commit": {"author": {"name": "Jeremy Stucki", "email": "dev@jeremystucki.ch", "date": "2022-12-20T21:34:42Z"}, "committer": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2023-03-01T02:59:38Z"}, "message": "Add missing anonymous lifetime", "tree": {"sha": "3fc962beb92c8c793fc274d9756b258bd5407c42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3fc962beb92c8c793fc274d9756b258bd5407c42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a1d3241b4f998d136afe188072dc36f006d026c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a1d3241b4f998d136afe188072dc36f006d026c", "html_url": "https://github.com/rust-lang/rust/commit/3a1d3241b4f998d136afe188072dc36f006d026c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a1d3241b4f998d136afe188072dc36f006d026c/comments", "author": {"login": "jeremystucki", "id": 7629727, "node_id": "MDQ6VXNlcjc2Mjk3Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/7629727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremystucki", "html_url": "https://github.com/jeremystucki", "followers_url": "https://api.github.com/users/jeremystucki/followers", "following_url": "https://api.github.com/users/jeremystucki/following{/other_user}", "gists_url": "https://api.github.com/users/jeremystucki/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremystucki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremystucki/subscriptions", "organizations_url": "https://api.github.com/users/jeremystucki/orgs", "repos_url": "https://api.github.com/users/jeremystucki/repos", "events_url": "https://api.github.com/users/jeremystucki/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremystucki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "888137d7d27405ce0d41ae134088f814a2ec92a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/888137d7d27405ce0d41ae134088f814a2ec92a2", "html_url": "https://github.com/rust-lang/rust/commit/888137d7d27405ce0d41ae134088f814a2ec92a2"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "0c7d9697d3992945745f6f2267d91a728fdd3988", "filename": "src/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a1d3241b4f998d136afe188072dc36f006d026c/src%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a1d3241b4f998d136afe188072dc36f006d026c/src%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcommon.rs?ref=3a1d3241b4f998d136afe188072dc36f006d026c", "patch": "@@ -44,7 +44,7 @@ pub fn bytes_in_context<'gcc, 'tcx>(cx: &CodegenCx<'gcc, 'tcx>, bytes: &[u8]) ->\n     context.new_array_constructor(None, typ, &elements)\n }\n \n-pub fn type_is_pointer(typ: Type) -> bool {\n+pub fn type_is_pointer(typ: Type<'_>) -> bool {\n     typ.get_pointee().is_some()\n }\n "}]}