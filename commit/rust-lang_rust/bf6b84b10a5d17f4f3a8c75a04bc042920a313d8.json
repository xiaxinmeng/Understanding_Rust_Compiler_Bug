{"sha": "bf6b84b10a5d17f4f3a8c75a04bc042920a313d8", "node_id": "C_kwDOAAsO6NoAKGJmNmI4NGIxMGE1ZDE3ZjRmM2E4Yzc1YTA0YmMwNDI5MjBhMzEzZDg", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-11-15T18:27:21Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2023-04-06T08:34:16Z"}, "message": "Fix new usage of old api", "tree": {"sha": "2135175b7fde07dd323a941dc2ea2642d8f0d8a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2135175b7fde07dd323a941dc2ea2642d8f0d8a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf6b84b10a5d17f4f3a8c75a04bc042920a313d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf6b84b10a5d17f4f3a8c75a04bc042920a313d8", "html_url": "https://github.com/rust-lang/rust/commit/bf6b84b10a5d17f4f3a8c75a04bc042920a313d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf6b84b10a5d17f4f3a8c75a04bc042920a313d8/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5cbda2a55e40c9d978850ebc3175d9a9e1dbea92", "url": "https://api.github.com/repos/rust-lang/rust/commits/5cbda2a55e40c9d978850ebc3175d9a9e1dbea92", "html_url": "https://github.com/rust-lang/rust/commit/5cbda2a55e40c9d978850ebc3175d9a9e1dbea92"}], "stats": {"total": 17, "additions": 7, "deletions": 10}, "files": [{"sha": "98bebc9b13bc505df2753921013d8284610cdab4", "filename": "compiler/rustc_mir_dataflow/src/value_analysis.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf6b84b10a5d17f4f3a8c75a04bc042920a313d8/compiler%2Frustc_mir_dataflow%2Fsrc%2Fvalue_analysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf6b84b10a5d17f4f3a8c75a04bc042920a313d8/compiler%2Frustc_mir_dataflow%2Fsrc%2Fvalue_analysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_dataflow%2Fsrc%2Fvalue_analysis.rs?ref=bf6b84b10a5d17f4f3a8c75a04bc042920a313d8", "patch": "@@ -238,7 +238,7 @@ pub trait ValueAnalysis<'tcx> {\n             TerminatorKind::Goto { .. }\n             | TerminatorKind::SwitchInt { .. }\n             | TerminatorKind::Resume\n-            | TerminatorKind::Abort\n+            | TerminatorKind::Terminate\n             | TerminatorKind::Return\n             | TerminatorKind::Unreachable\n             | TerminatorKind::Assert { .. }"}, {"sha": "8086a4557b70f555aaa27224cd223030ccc930a5", "filename": "compiler/rustc_mir_transform/src/check_alignment.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf6b84b10a5d17f4f3a8c75a04bc042920a313d8/compiler%2Frustc_mir_transform%2Fsrc%2Fcheck_alignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf6b84b10a5d17f4f3a8c75a04bc042920a313d8/compiler%2Frustc_mir_transform%2Fsrc%2Fcheck_alignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fcheck_alignment.rs?ref=bf6b84b10a5d17f4f3a8c75a04bc042920a313d8", "patch": "@@ -221,7 +221,7 @@ fn insert_alignment_check<'tcx>(\n                 required: Operand::Copy(alignment),\n                 found: Operand::Copy(addr),\n             },\n-            cleanup: None,\n+            unwind: UnwindAction::Terminate,\n         },\n     });\n }"}, {"sha": "d4db7e2de4039bba697128bef9fa3394e0376af2", "filename": "compiler/rustc_mir_transform/src/dataflow_const_prop.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bf6b84b10a5d17f4f3a8c75a04bc042920a313d8/compiler%2Frustc_mir_transform%2Fsrc%2Fdataflow_const_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf6b84b10a5d17f4f3a8c75a04bc042920a313d8/compiler%2Frustc_mir_transform%2Fsrc%2Fdataflow_const_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fdataflow_const_prop.rs?ref=bf6b84b10a5d17f4f3a8c75a04bc042920a313d8", "patch": "@@ -567,7 +567,7 @@ impl<'mir, 'tcx> rustc_const_eval::interpret::Machine<'mir, 'tcx> for DummyMachi\n         _args: &[rustc_const_eval::interpret::OpTy<'tcx, Self::Provenance>],\n         _destination: &rustc_const_eval::interpret::PlaceTy<'tcx, Self::Provenance>,\n         _target: Option<BasicBlock>,\n-        _unwind: rustc_const_eval::interpret::StackPopUnwind,\n+        _unwind: UnwindAction,\n     ) -> interpret::InterpResult<'tcx, Option<(&'mir Body<'tcx>, ty::Instance<'tcx>)>> {\n         unimplemented!()\n     }\n@@ -578,15 +578,15 @@ impl<'mir, 'tcx> rustc_const_eval::interpret::Machine<'mir, 'tcx> for DummyMachi\n         _args: &[rustc_const_eval::interpret::OpTy<'tcx, Self::Provenance>],\n         _destination: &rustc_const_eval::interpret::PlaceTy<'tcx, Self::Provenance>,\n         _target: Option<BasicBlock>,\n-        _unwind: rustc_const_eval::interpret::StackPopUnwind,\n+        _unwind: UnwindAction,\n     ) -> interpret::InterpResult<'tcx> {\n         unimplemented!()\n     }\n \n     fn assert_panic(\n         _ecx: &mut InterpCx<'mir, 'tcx, Self>,\n         _msg: &rustc_middle::mir::AssertMessage<'tcx>,\n-        _unwind: Option<BasicBlock>,\n+        _unwind: UnwindAction,\n     ) -> interpret::InterpResult<'tcx> {\n         unimplemented!()\n     }"}, {"sha": "0befff894ef31e6f28a4c9cd6df15a90116708cf", "filename": "compiler/rustc_smir/src/rustc_smir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf6b84b10a5d17f4f3a8c75a04bc042920a313d8/compiler%2Frustc_smir%2Fsrc%2Frustc_smir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf6b84b10a5d17f4f3a8c75a04bc042920a313d8/compiler%2Frustc_smir%2Fsrc%2Frustc_smir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_smir%2Fsrc%2Frustc_smir%2Fmod.rs?ref=bf6b84b10a5d17f4f3a8c75a04bc042920a313d8", "patch": "@@ -143,7 +143,7 @@ fn rustc_terminator_to_terminator(\n             otherwise: targets.otherwise().as_usize(),\n         },\n         Resume => Terminator::Resume,\n-        Abort => Terminator::Abort,\n+        Terminate => Terminator::Abort,\n         Return => Terminator::Return,\n         Unreachable => Terminator::Unreachable,\n         Drop { .. } => todo!(),"}, {"sha": "2cca2f3f3914d7fab6d02e032ae331b5d5805f94", "filename": "src/tools/miri/src/shims/panic.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bf6b84b10a5d17f4f3a8c75a04bc042920a313d8/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf6b84b10a5d17f4f3a8c75a04bc042920a313d8/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fpanic.rs?ref=bf6b84b10a5d17f4f3a8c75a04bc042920a313d8", "patch": "@@ -237,10 +237,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriInterpCxExt<'mir, 'tcx> {\n                     None,\n                     StackPopCleanup::Goto {\n                         ret: None,\n-                        unwind: match unwind {\n-                            Some(cleanup) => StackPopUnwind::Cleanup(cleanup),\n-                            None => StackPopUnwind::Skip,\n-                        },\n+                        unwind,\n                     },\n                 )?;\n             }"}]}