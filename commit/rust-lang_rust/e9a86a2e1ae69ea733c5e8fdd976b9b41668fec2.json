{"sha": "e9a86a2e1ae69ea733c5e8fdd976b9b41668fec2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5YTg2YTJlMWFlNjllYTczM2M1ZThmZGQ5NzZiOWI0MTY2OGZlYzI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-07T09:22:45Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-07T09:23:30Z"}, "message": "fix link label; use more https", "tree": {"sha": "43a07cc21785b4bf0882edb1747bea50fb9d5ea3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43a07cc21785b4bf0882edb1747bea50fb9d5ea3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9a86a2e1ae69ea733c5e8fdd976b9b41668fec2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9a86a2e1ae69ea733c5e8fdd976b9b41668fec2", "html_url": "https://github.com/rust-lang/rust/commit/e9a86a2e1ae69ea733c5e8fdd976b9b41668fec2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9a86a2e1ae69ea733c5e8fdd976b9b41668fec2/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "621d06481d508facae89d6404792db57e9a837f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/621d06481d508facae89d6404792db57e9a837f5", "html_url": "https://github.com/rust-lang/rust/commit/621d06481d508facae89d6404792db57e9a837f5"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "3f35067f4f55bf866748f3845c0de0b36d5e2565", "filename": "src/libcore/sync/atomic.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/e9a86a2e1ae69ea733c5e8fdd976b9b41668fec2/src%2Flibcore%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9a86a2e1ae69ea733c5e8fdd976b9b41668fec2/src%2Flibcore%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fsync%2Fatomic.rs?ref=e9a86a2e1ae69ea733c5e8fdd976b9b41668fec2", "patch": "@@ -29,7 +29,7 @@\n //!\n //! [`Ordering`]: enum.Ordering.html\n //!\n-//! [1]: http://llvm.org/docs/LangRef.html#memory-model-for-concurrent-operations\n+//! [1]: https://llvm.org/docs/LangRef.html#memory-model-for-concurrent-operations\n //! [2]: ../../../nomicon/atomics.html\n //!\n //! Atomic variables are safe to share between threads (they implement [`Sync`])\n@@ -178,7 +178,7 @@ unsafe impl<T> Sync for AtomicPtr<T> {}\n /// \"relaxed\" atomics allow all reorderings.\n ///\n /// Rust's memory orderings are [the same as\n-/// LLVM's](http://llvm.org/docs/LangRef.html#memory-model-for-concurrent-operations).\n+/// LLVM's](https://llvm.org/docs/LangRef.html#memory-model-for-concurrent-operations).\n ///\n /// For more information see the [nomicon].\n ///\n@@ -190,7 +190,7 @@ pub enum Ordering {\n     ///\n     /// Corresponds to LLVM's [`Monotonic`] ordering.\n     ///\n-    /// [`Monotonic`]: http://llvm.org/docs/Atomics.html#monotonic\n+    /// [`Monotonic`]: https://llvm.org/docs/Atomics.html#monotonic\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     Relaxed,\n     /// When coupled with a store, all previous operations become ordered\n@@ -205,8 +205,8 @@ pub enum Ordering {\n     ///\n     /// Corresponds to LLVM's [`Release`] ordering.\n     ///\n-    /// [`Release`]: http://llvm.org/docs/Atomics.html#release\n-    /// [`Acquire`]: http://llvm.org/docs/Atomics.html#acquire\n+    /// [`Release`]: https://llvm.org/docs/Atomics.html#release\n+    /// [`Acquire`]: https://llvm.org/docs/Atomics.html#acquire\n     /// [`Relaxed`]: https://llvm.org/docs/Atomics.html#monotonic\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     Release,\n@@ -222,8 +222,8 @@ pub enum Ordering {\n     ///\n     /// Corresponds to LLVM's [`Acquire`] ordering.\n     ///\n-    /// [`Acquire`]: http://llvm.org/docs/Atomics.html#acquire\n-    /// [`Release`]: http://llvm.org/docs/Atomics.html#release\n+    /// [`Acquire`]: https://llvm.org/docs/Atomics.html#acquire\n+    /// [`Release`]: https://llvm.org/docs/Atomics.html#release\n     /// [`Relaxed`]: https://llvm.org/docs/Atomics.html#monotonic\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     Acquire,\n@@ -238,9 +238,9 @@ pub enum Ordering {\n     ///\n     /// Corresponds to LLVM's [`AcquireRelease`] ordering.\n     ///\n-    /// [`AcquireRelease`]: http://llvm.org/docs/Atomics.html#acquirerelease\n-    /// [`Acquire`]: http://llvm.org/docs/Atomics.html#acquire\n-    /// [`Release`]: http://llvm.org/docs/Atomics.html#release\n+    /// [`AcquireRelease`]: https://llvm.org/docs/Atomics.html#acquirerelease\n+    /// [`Acquire`]: https://llvm.org/docs/Atomics.html#acquire\n+    /// [`Release`]: https://llvm.org/docs/Atomics.html#release\n     /// [`Relaxed`]: https://llvm.org/docs/Atomics.html#monotonic\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     AcqRel,\n@@ -250,9 +250,9 @@ pub enum Ordering {\n     ///\n     /// Corresponds to LLVM's [`SequentiallyConsistent`] ordering.\n     ///\n-    /// [`SequentiallyConsistent`]: http://llvm.org/docs/Atomics.html#sequentiallyconsistent\n-    /// [`Acquire`]: http://llvm.org/docs/Atomics.html#acquire\n-    /// [`Release`]: http://llvm.org/docs/Atomics.html#release\n+    /// [`SequentiallyConsistent`]: https://llvm.org/docs/Atomics.html#sequentiallyconsistent\n+    /// [`Acquire`]: https://llvm.org/docs/Atomics.html#acquire\n+    /// [`Release`]: https://llvm.org/docs/Atomics.html#release\n     /// [`AcqRel`]: https://llvm.org/docs/Atomics.html#acquirerelease\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     SeqCst,\n@@ -423,7 +423,7 @@ impl AtomicBool {\n     /// might fail and hence just perform an `Acquire` load, but not have `Release` semantics.\n     ///\n     /// [`Ordering`]: enum.Ordering.html\n-    /// [`Ordering`]: enum.Ordering.html#variant.AcqRel\n+    /// [`AcqRel`]: enum.Ordering.html#variant.AcqRel\n     /// [`bool`]: ../../../std/primitive.bool.html\n     ///\n     /// # Examples"}]}