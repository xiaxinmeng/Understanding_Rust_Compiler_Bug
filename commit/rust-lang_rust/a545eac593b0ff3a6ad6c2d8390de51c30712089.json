{"sha": "a545eac593b0ff3a6ad6c2d8390de51c30712089", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1NDVlYWM1OTNiMGZmM2E2YWQ2YzJkODM5MGRlNTFjMzA3MTIwODk=", "commit": {"author": {"name": "S\u00e9bastien Marie", "email": "semarie@users.noreply.github.com", "date": "2015-12-23T10:32:02Z"}, "committer": {"name": "S\u00e9bastien Marie", "email": "semarie@users.noreply.github.com", "date": "2016-01-12T07:43:52Z"}, "message": "make siginfo_si_addr() returns a usize\n\n`siginfo_si_addr()` function is used once, and the returned value is\ncasted to `usize`. So make the function returns a `usize`.\n\nit simplifies OpenBSD case, where the return type wouldn't be a `*mut\nlibc::c_void` but a `*mut libc::c_char`.", "tree": {"sha": "9d008d3815e5aee7a14726eaf49f184f33306f8f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d008d3815e5aee7a14726eaf49f184f33306f8f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a545eac593b0ff3a6ad6c2d8390de51c30712089", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a545eac593b0ff3a6ad6c2d8390de51c30712089", "html_url": "https://github.com/rust-lang/rust/commit/a545eac593b0ff3a6ad6c2d8390de51c30712089", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a545eac593b0ff3a6ad6c2d8390de51c30712089/comments", "author": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "468959580ae9bef5996ae1d43fc9d730e4977999", "url": "https://api.github.com/repos/rust-lang/rust/commits/468959580ae9bef5996ae1d43fc9d730e4977999", "html_url": "https://github.com/rust-lang/rust/commit/468959580ae9bef5996ae1d43fc9d730e4977999"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "fc49f4257be2ace4908917a38edd0278ce04b774", "filename": "src/libstd/sys/unix/stack_overflow.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a545eac593b0ff3a6ad6c2d8390de51c30712089/src%2Flibstd%2Fsys%2Funix%2Fstack_overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a545eac593b0ff3a6ad6c2d8390de51c30712089/src%2Flibstd%2Fsys%2Funix%2Fstack_overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fstack_overflow.rs?ref=a545eac593b0ff3a6ad6c2d8390de51c30712089", "patch": "@@ -59,19 +59,19 @@ mod imp {\n     static mut PAGE_SIZE: usize = 0;\n \n     #[cfg(any(target_os = \"linux\", target_os = \"android\"))]\n-    unsafe fn siginfo_si_addr(info: *mut libc::siginfo_t) -> *mut libc::c_void {\n+    unsafe fn siginfo_si_addr(info: *mut libc::siginfo_t) -> usize {\n         #[repr(C)]\n         struct siginfo_t {\n             a: [libc::c_int; 3], // si_signo, si_code, si_errno,\n             si_addr: *mut libc::c_void,\n         }\n \n-        (*(info as *const siginfo_t)).si_addr\n+        (*(info as *const siginfo_t)).si_addr as usize\n     }\n \n     #[cfg(not(any(target_os = \"linux\", target_os = \"android\")))]\n-    unsafe fn siginfo_si_addr(info: *mut libc::siginfo_t) -> *mut libc::c_void {\n-        (*info).si_addr\n+    unsafe fn siginfo_si_addr(info: *mut libc::siginfo_t) -> usize {\n+        (*info).si_addr as usize\n     }\n \n     // Signal handler for the SIGSEGV and SIGBUS handlers. We've got guard pages\n@@ -98,7 +98,7 @@ mod imp {\n         use sys_common::util::report_overflow;\n \n         let guard = thread_info::stack_guard().unwrap_or(0);\n-        let addr = siginfo_si_addr(info) as usize;\n+        let addr = siginfo_si_addr(info);\n \n         // If the faulting address is within the guard page, then we print a\n         // message saying so."}]}