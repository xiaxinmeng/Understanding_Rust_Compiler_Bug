{"sha": "d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyNzUzZjkxYjVlMDlhOTE4NDFmYTcyOWVmNmIxNGQ3ZWYyNDllOGE=", "commit": {"author": {"name": "Gurpreet Singh", "email": "gdhuper@gmail.com", "date": "2020-08-14T06:05:01Z"}, "committer": {"name": "Gurpreet Singh", "email": "gdhuper@gmail.com", "date": "2020-08-15T20:03:11Z"}, "message": "replaced log with tracing", "tree": {"sha": "baac32eea45ab00677d9adb8e7eec899a9971def", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/baac32eea45ab00677d9adb8e7eec899a9971def"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "html_url": "https://github.com/rust-lang/rust/commit/d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/comments", "author": {"login": "gdhuper", "id": 11465335, "node_id": "MDQ6VXNlcjExNDY1MzM1", "avatar_url": "https://avatars.githubusercontent.com/u/11465335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gdhuper", "html_url": "https://github.com/gdhuper", "followers_url": "https://api.github.com/users/gdhuper/followers", "following_url": "https://api.github.com/users/gdhuper/following{/other_user}", "gists_url": "https://api.github.com/users/gdhuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/gdhuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gdhuper/subscriptions", "organizations_url": "https://api.github.com/users/gdhuper/orgs", "repos_url": "https://api.github.com/users/gdhuper/repos", "events_url": "https://api.github.com/users/gdhuper/events{/privacy}", "received_events_url": "https://api.github.com/users/gdhuper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gdhuper", "id": 11465335, "node_id": "MDQ6VXNlcjExNDY1MzM1", "avatar_url": "https://avatars.githubusercontent.com/u/11465335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gdhuper", "html_url": "https://github.com/gdhuper", "followers_url": "https://api.github.com/users/gdhuper/followers", "following_url": "https://api.github.com/users/gdhuper/following{/other_user}", "gists_url": "https://api.github.com/users/gdhuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/gdhuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gdhuper/subscriptions", "organizations_url": "https://api.github.com/users/gdhuper/orgs", "repos_url": "https://api.github.com/users/gdhuper/repos", "events_url": "https://api.github.com/users/gdhuper/events{/privacy}", "received_events_url": "https://api.github.com/users/gdhuper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5addb135edc2653b07670482a430aac9b655a86b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5addb135edc2653b07670482a430aac9b655a86b", "html_url": "https://github.com/rust-lang/rust/commit/5addb135edc2653b07670482a430aac9b655a86b"}], "stats": {"total": 213, "additions": 109, "deletions": 104}, "files": [{"sha": "73c5e33753f2934faf1412940ceb36f3ff893e33", "filename": "src/librustc_ast/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_ast%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_ast%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast%2FCargo.toml?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -11,7 +11,7 @@ doctest = false\n \n [dependencies]\n rustc_serialize = { path = \"../librustc_serialize\" }\n-log = { package = \"tracing\", version = \"0.1\" }\n+tracing = \"0.1\"\n rustc_span = { path = \"../librustc_span\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_index = { path = \"../librustc_index\" }"}, {"sha": "597e5b437fcb15c983912b200c3c7afc4e9d40d8", "filename": "src/librustc_ast/util/literal.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_ast%2Futil%2Fliteral.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_ast%2Futil%2Fliteral.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast%2Futil%2Fliteral.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -10,8 +10,8 @@ use rustc_lexer::unescape::{unescape_byte_literal, unescape_literal, Mode};\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::Span;\n \n-use log::debug;\n use std::ascii;\n+use tracing::debug;\n \n pub enum LitError {\n     NotLiteral,"}, {"sha": "46331c63113f9e6925b2f442fc112515125dfe5b", "filename": "src/librustc_driver/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_driver%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_driver%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2FCargo.toml?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -12,7 +12,7 @@ crate-type = [\"dylib\"]\n [dependencies]\n lazy_static = \"1.0\"\n libc = \"0.2\"\n-log = { package = \"tracing\", version = \"0.1.18\", features = [\"release_max_level_info\"]  }\n+tracing = { version = \"0.1.18\", features = [\"release_max_level_info\"]  }\n tracing-subscriber = { version = \"0.2.10\", default-features = false, features = [\"fmt\", \"env-filter\", \"smallvec\", \"parking_lot\", \"ansi\"] }\n rustc_middle = { path = \"../librustc_middle\" }\n rustc_ast_pretty = { path = \"../librustc_ast_pretty\" }"}, {"sha": "0897bb6bd5a9f36feeb7a7452726ff60924dc9d3", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -9,7 +9,7 @@\n #![recursion_limit = \"256\"]\n \n #[macro_use]\n-extern crate log;\n+extern crate tracing;\n #[macro_use]\n extern crate lazy_static;\n \n@@ -1224,13 +1224,13 @@ pub fn install_ice_hook() {\n }\n \n /// This allows tools to enable rust logging without having to magically match rustc's\n-/// log crate version.\n+/// tracing crate version.\n pub fn init_rustc_env_logger() {\n     init_env_logger(\"RUSTC_LOG\")\n }\n \n /// This allows tools to enable rust logging without having to magically match rustc's\n-/// log crate version. In contrast to `init_rustc_env_logger` it allows you to choose an env var\n+/// tracing crate version. In contrast to `init_rustc_env_logger` it allows you to choose an env var\n /// other than `RUSTC_LOG`.\n pub fn init_env_logger(env: &str) {\n     // Don't register a dispatcher if there's no filter to print anything"}, {"sha": "7c794bcd98f2c56d1c95f9848bc8d8dc29ab0879", "filename": "src/librustc_errors/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_errors%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_errors%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2FCargo.toml?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -10,7 +10,7 @@ path = \"lib.rs\"\n doctest = false\n \n [dependencies]\n-log = { package = \"tracing\", version = \"0.1\" }\n+tracing = \"0.1\"\n rustc_serialize = { path = \"../librustc_serialize\" }\n rustc_span = { path = \"../librustc_span\" }\n rustc_macros = { path = \"../librustc_macros\" }"}, {"sha": "dc52e29fa9bb903fcdc4a3f3774d1bd25a6a8ea0", "filename": "src/librustc_errors/diagnostic_builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_errors%2Fdiagnostic_builder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_errors%2Fdiagnostic_builder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fdiagnostic_builder.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -1,11 +1,11 @@\n use crate::{Applicability, Handler, Level, StashKey};\n use crate::{Diagnostic, DiagnosticId, DiagnosticStyledString};\n \n-use log::debug;\n use rustc_span::{MultiSpan, Span};\n use std::fmt::{self, Debug};\n use std::ops::{Deref, DerefMut};\n use std::thread::panicking;\n+use tracing::debug;\n \n /// Used for emitting structured error messages and other diagnostic information.\n ///"}, {"sha": "5a654e83aed8e1408178006f34f60dd11b70a0fc", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -18,7 +18,6 @@ use crate::{\n     pluralize, CodeSuggestion, Diagnostic, DiagnosticId, Level, SubDiagnostic, SuggestionStyle,\n };\n \n-use log::*;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::sync::Lrc;\n use rustc_span::hygiene::{ExpnKind, MacroKind};\n@@ -30,6 +29,7 @@ use std::iter;\n use std::path::Path;\n use termcolor::{Ansi, BufferWriter, ColorChoice, ColorSpec, StandardStream};\n use termcolor::{Buffer, Color, WriteColor};\n+use tracing::*;\n \n /// Default column width, used in tests and when terminal dimensions cannot be determined.\n const DEFAULT_COLUMN_WIDTH: usize = 140;"}, {"sha": "d4f0a9d83ef4e2364e8d570835b05dab921205a7", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -11,7 +11,7 @@ extern crate rustc_macros;\n \n pub use emitter::ColorConfig;\n \n-use log::debug;\n+use tracing::debug;\n use Level::*;\n \n use emitter::{is_case_difference, Emitter, EmitterWriter};"}, {"sha": "55a1862971b677cb4798ce4678e7cfd2c5d3001f", "filename": "src/librustc_expand/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_expand%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_expand%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2FCargo.toml?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -12,7 +12,7 @@ doctest = false\n \n [dependencies]\n rustc_serialize = { path = \"../librustc_serialize\" }\n-log = { package = \"tracing\", version = \"0.1\" }\n+tracing = \"0.1\"\n rustc_span = { path = \"../librustc_span\" }\n rustc_ast_pretty = { path = \"../librustc_ast_pretty\" }\n rustc_ast_passes = { path = \"../librustc_ast_passes\" }"}, {"sha": "808d77842cb22caa30240835de41909cde480801", "filename": "src/librustc_expand/mbe/macro_rules.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_expand%2Fmbe%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_expand%2Fmbe%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fmbe%2Fmacro_rules.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -25,10 +25,10 @@ use rustc_span::hygiene::Transparency;\n use rustc_span::symbol::{kw, sym, Ident, MacroRulesNormalizedIdent};\n use rustc_span::Span;\n \n-use log::debug;\n use std::borrow::Cow;\n use std::collections::hash_map::Entry;\n use std::{mem, slice};\n+use tracing::debug;\n \n crate struct ParserAnyMacro<'a> {\n     parser: Parser<'a>,"}, {"sha": "a473a8edcdd5d6d4abe02074c8950d63a1ccdd62", "filename": "src/librustc_hir/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_hir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_hir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir%2FCargo.toml?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -18,5 +18,5 @@ rustc_span = { path = \"../librustc_span\" }\n rustc_serialize = { path = \"../librustc_serialize\" }\n rustc_ast = { path = \"../librustc_ast\" }\n lazy_static = \"1\"\n-log = { package = \"tracing\", version = \"0.1\" }\n+tracing = \"0.1\"\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }"}, {"sha": "628fc93141114b63fb16ebeb8984f8b907445392", "filename": "src/librustc_hir/definitions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_hir%2Fdefinitions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_hir%2Fdefinitions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir%2Fdefinitions.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -15,9 +15,9 @@ use rustc_index::vec::IndexVec;\n use rustc_span::hygiene::ExpnId;\n use rustc_span::symbol::{sym, Symbol};\n \n-use log::debug;\n use std::fmt::Write;\n use std::hash::Hash;\n+use tracing::debug;\n \n /// The `DefPathTable` maps `DefIndex`es to `DefKey`s and vice versa.\n /// Internally the `DefPathTable` holds a tree of `DefKey`s, where each `DefKey`"}, {"sha": "1f7e3725412a2b88be9bafae2777f759933fdec9", "filename": "src/librustc_incremental/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_incremental%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_incremental%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2FCargo.toml?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -11,7 +11,7 @@ doctest = false\n \n [dependencies]\n rustc_graphviz = { path = \"../librustc_graphviz\" }\n-log = { package = \"tracing\", version = \"0.1\" }\n+tracing = \"0.1\"\n rand = \"0.7\"\n rustc_middle = { path = \"../librustc_middle\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }"}, {"sha": "ad18913805467fd071d0556281e288cb9c999085", "filename": "src/librustc_incremental/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_incremental%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_incremental%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Flib.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -8,7 +8,7 @@\n #[macro_use]\n extern crate rustc_middle;\n #[macro_use]\n-extern crate log;\n+extern crate tracing;\n \n mod assert_dep_graph;\n pub mod assert_module_sources;"}, {"sha": "e1698d66323c382f3be101faa4aedfdaacff1a1e", "filename": "src/librustc_infer/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_infer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_infer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2FCargo.toml?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -11,7 +11,7 @@ doctest = false\n \n [dependencies]\n rustc_graphviz = { path = \"../librustc_graphviz\" }\n-log = { package = \"tracing\", version = \"0.1\" }\n+tracing = \"0.1\"\n rustc_middle = { path = \"../librustc_middle\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_errors = { path = \"../librustc_errors\" }"}, {"sha": "f135bde7f8337a0b12f488f5fd52ec2cfd583233", "filename": "src/librustc_infer/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_infer%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_infer%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Flib.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -33,7 +33,7 @@ extern crate rustc_macros;\n #[macro_use]\n extern crate rustc_data_structures;\n #[macro_use]\n-extern crate log;\n+extern crate tracing;\n #[macro_use]\n extern crate rustc_middle;\n "}, {"sha": "b9837c6ade9a7fd4fd677870c8dc2074eb5a005d", "filename": "src/librustc_interface/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_interface%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_interface%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2FCargo.toml?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -11,7 +11,7 @@ doctest = false\n \n [dependencies]\n libc = \"0.2\"\n-log = { package = \"tracing\", version = \"0.1\" }\n+tracing = \"0.1\"\n rayon = { version = \"0.3.0\", package = \"rustc-rayon\" }\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }\n rustc_ast = { path = \"../librustc_ast\" }"}, {"sha": "122d6e3543cae6878ca530e6be05297ad399ff06", "filename": "src/librustc_interface/interface.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_interface%2Finterface.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_interface%2Finterface.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Finterface.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -198,7 +198,7 @@ pub fn create_compiler_and_run<R>(config: Config, f: impl FnOnce(&Compiler) -> R\n }\n \n pub fn run_compiler<R: Send>(mut config: Config, f: impl FnOnce(&Compiler) -> R + Send) -> R {\n-    log::trace!(\"run_compiler\");\n+    tracing::trace!(\"run_compiler\");\n     let stderr = config.stderr.take();\n     util::setup_callbacks_and_run_in_thread_pool_with_globals(\n         config.opts.edition,"}, {"sha": "daa7444fb9edbaaca80342d8dabfefab5f8a90b6", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -2,7 +2,6 @@ use crate::interface::{Compiler, Result};\n use crate::proc_macro_decls;\n use crate::util;\n \n-use log::{info, warn};\n use once_cell::sync::Lazy;\n use rustc_ast::mut_visit::MutVisitor;\n use rustc_ast::{self, ast, visit};\n@@ -39,6 +38,7 @@ use rustc_span::symbol::Symbol;\n use rustc_span::{FileName, RealFileName};\n use rustc_trait_selection::traits;\n use rustc_typeck as typeck;\n+use tracing::{info, warn};\n \n use rustc_serialize::json;\n use tempfile::Builder as TempFileBuilder;\n@@ -104,7 +104,7 @@ pub fn configure_and_expand(\n     krate: ast::Crate,\n     crate_name: &str,\n ) -> Result<(ast::Crate, BoxedResolver)> {\n-    log::trace!(\"configure_and_expand\");\n+    tracing::trace!(\"configure_and_expand\");\n     // Currently, we ignore the name resolution data structures for the purposes of dependency\n     // tracking. Instead we will run name resolution and include its output in the hash of each\n     // item, much like we do for macro expansion. In other words, the hash reflects not just\n@@ -229,7 +229,7 @@ fn configure_and_expand_inner<'a>(\n     resolver_arenas: &'a ResolverArenas<'a>,\n     metadata_loader: &'a MetadataLoaderDyn,\n ) -> Result<(ast::Crate, Resolver<'a>)> {\n-    log::trace!(\"configure_and_expand_inner\");\n+    tracing::trace!(\"configure_and_expand_inner\");\n     pre_expansion_lint(sess, lint_store, &krate);\n \n     let mut resolver = Resolver::new(sess, &krate, crate_name, metadata_loader, &resolver_arenas);\n@@ -342,7 +342,7 @@ fn configure_and_expand_inner<'a>(\n     });\n \n     if let Some(PpMode::PpmSource(PpSourceMode::PpmEveryBodyLoops)) = sess.opts.pretty {\n-        log::debug!(\"replacing bodies with loop {{}}\");\n+        tracing::debug!(\"replacing bodies with loop {{}}\");\n         util::ReplaceBodyWithLoop::new(&mut resolver).visit_crate(&mut krate);\n     }\n "}, {"sha": "2f32737cca00a18dcbf835c9f7b315e9d4216c85", "filename": "src/librustc_interface/queries.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_interface%2Fqueries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_interface%2Fqueries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fqueries.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -168,7 +168,7 @@ impl<'tcx> Queries<'tcx> {\n     pub fn expansion(\n         &self,\n     ) -> Result<&Query<(ast::Crate, Steal<Rc<RefCell<BoxedResolver>>>, Lrc<LintStore>)>> {\n-        log::trace!(\"expansion\");\n+        tracing::trace!(\"expansion\");\n         self.expansion.compute(|| {\n             let crate_name = self.crate_name()?.peek().clone();\n             let (krate, lint_store) = self.register_plugins()?.take();"}, {"sha": "36eaad16079b8cf4e9e5d3417b655536c768674b", "filename": "src/librustc_interface/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_interface%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_interface%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Futil.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -1,4 +1,3 @@\n-use log::info;\n use rustc_ast::ast::{AttrVec, BlockCheckMode};\n use rustc_ast::mut_visit::{visit_clobber, MutVisitor, *};\n use rustc_ast::ptr::P;\n@@ -33,6 +32,7 @@ use std::path::{Path, PathBuf};\n use std::sync::{Arc, Mutex, Once};\n #[cfg(not(parallel_compiler))]\n use std::{panic, thread};\n+use tracing::info;\n \n /// Adds `target_feature = \"...\"` cfgs for a variety of platform\n /// specific features (SSE, NEON etc.)."}, {"sha": "d779f15f19aab17d0cb171c782b4a6aa17ef03ad", "filename": "src/librustc_lint/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_lint%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_lint%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2FCargo.toml?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -9,7 +9,7 @@ name = \"rustc_lint\"\n path = \"lib.rs\"\n \n [dependencies]\n-log = { package = \"tracing\", version = \"0.1\" }\n+tracing = \"0.1\"\n unicode-security = \"0.0.5\"\n rustc_middle = { path = \"../librustc_middle\" }\n rustc_ast_pretty = { path = \"../librustc_ast_pretty\" }"}, {"sha": "3859d0f163ad5c52798eb35c2604ec8392289f96", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -51,8 +51,8 @@ use rustc_trait_selection::traits::misc::can_type_implement_copy;\n \n use crate::nonstandard_style::{method_context, MethodLateContext};\n \n-use log::{debug, trace};\n use std::fmt::Write;\n+use tracing::{debug, trace};\n \n // hardwired lints from librustc_middle\n pub use rustc_session::lint::builtin::*;"}, {"sha": "017d4e31e4a711a18a0c77e55eeb7a1444f63c05", "filename": "src/librustc_lint/early.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_lint%2Fearly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_lint%2Fearly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fearly.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -23,8 +23,8 @@ use rustc_session::Session;\n use rustc_span::symbol::Ident;\n use rustc_span::Span;\n \n-use log::debug;\n use std::slice;\n+use tracing::debug;\n \n macro_rules! run_early_pass { ($cx:expr, $f:ident, $($args:expr),*) => ({\n     $cx.pass.$f(&$cx.context, $($args),*);"}, {"sha": "6c497d02285199a1f51a5e2da88d751d6d89f5c1", "filename": "src/librustc_lint/late.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_lint%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_lint%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flate.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -28,10 +28,10 @@ use rustc_session::lint::LintPass;\n use rustc_span::symbol::Symbol;\n use rustc_span::Span;\n \n-use log::debug;\n use std::any::Any;\n use std::cell::Cell;\n use std::slice;\n+use tracing::debug;\n \n /// Extract the `LintStore` from the query context.\n /// This function exists because we've erased `LintStore` as `dyn Any` in the context."}, {"sha": "5891abcfd9cd186c6aa11fa13409c01edc87f9d2", "filename": "src/librustc_lint/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_lint%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_lint%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Ftypes.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -19,8 +19,8 @@ use rustc_target::abi::Abi;\n use rustc_target::abi::{Integer, LayoutOf, TagEncoding, VariantIdx, Variants};\n use rustc_target::spec::abi::Abi as SpecAbi;\n \n-use log::debug;\n use std::cmp;\n+use tracing::debug;\n \n declare_lint! {\n     UNUSED_COMPARISONS,"}, {"sha": "95e51b47be34b4040b17fd194b29f187b24a1c45", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -17,7 +17,7 @@ use rustc_span::symbol::Symbol;\n use rustc_span::symbol::{kw, sym};\n use rustc_span::{BytePos, Span, DUMMY_SP};\n \n-use log::debug;\n+use tracing::debug;\n \n declare_lint! {\n     pub UNUSED_MUST_USE,"}, {"sha": "af6aacfd64b44e4b65e8a4c5b3f9698a47d0eb16", "filename": "src/librustc_metadata/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_metadata%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_metadata%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2FCargo.toml?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -12,7 +12,7 @@ doctest = false\n [dependencies]\n flate2 = \"1.0\"\n libc = \"0.2\"\n-log = { package = \"tracing\", version = \"0.1\" }\n+tracing = \"0.1\"\n memmap = \"0.7\"\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }\n rustc_middle = { path = \"../librustc_middle\" }"}, {"sha": "9827b22233137277e6102d3ab3caf526b4235635", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -26,10 +26,10 @@ use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{Span, DUMMY_SP};\n use rustc_target::spec::{PanicStrategy, TargetTriple};\n \n-use log::{debug, info};\n use proc_macro::bridge::client::ProcMacro;\n use std::path::Path;\n use std::{cmp, env, fs};\n+use tracing::{debug, info};\n \n #[derive(Clone)]\n pub struct CStore {"}, {"sha": "f7454da90a396c465034f9b9a98efc4dbd1be152", "filename": "src/librustc_metadata/dependency_format.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_metadata%2Fdependency_format.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_metadata%2Fdependency_format.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fdependency_format.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -159,11 +159,11 @@ fn calculate_type(tcx: TyCtxt<'_>, ty: CrateType) -> DependencyList {\n         let name = tcx.crate_name(cnum);\n         let src = tcx.used_crate_source(cnum);\n         if src.dylib.is_some() {\n-            log::info!(\"adding dylib: {}\", name);\n+            tracing::info!(\"adding dylib: {}\", name);\n             add_library(tcx, cnum, RequireDynamic, &mut formats);\n             let deps = tcx.dylib_dependency_formats(cnum);\n             for &(depnum, style) in deps.iter() {\n-                log::info!(\"adding {:?}: {}\", style, tcx.crate_name(depnum));\n+                tracing::info!(\"adding {:?}: {}\", style, tcx.crate_name(depnum));\n                 add_library(tcx, depnum, style, &mut formats);\n             }\n         }\n@@ -191,7 +191,7 @@ fn calculate_type(tcx: TyCtxt<'_>, ty: CrateType) -> DependencyList {\n             && tcx.dep_kind(cnum) == CrateDepKind::Explicit\n         {\n             assert!(src.rlib.is_some() || src.rmeta.is_some());\n-            log::info!(\"adding staticlib: {}\", tcx.crate_name(cnum));\n+            tracing::info!(\"adding staticlib: {}\", tcx.crate_name(cnum));\n             add_library(tcx, cnum, RequireStatic, &mut formats);\n             ret[cnum.as_usize() - 1] = Linkage::Static;\n         }"}, {"sha": "bdd20a4bf6fafa57b24083aedcfeb3b23494dacc", "filename": "src/librustc_metadata/locator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_metadata%2Flocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_metadata%2Flocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flocator.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -230,11 +230,11 @@ use rustc_span::Span;\n use rustc_target::spec::{Target, TargetTriple};\n \n use flate2::read::DeflateDecoder;\n-use log::{debug, info, warn};\n use std::io::{Read, Result as IoResult, Write};\n use std::ops::Deref;\n use std::path::{Path, PathBuf};\n use std::{cmp, fmt, fs};\n+use tracing::{debug, info, warn};\n \n #[derive(Clone)]\n crate struct CrateLocator<'a> {"}, {"sha": "1e4556f5fc8efbba5aa452895d3cfdc3153b4b45", "filename": "src/librustc_metadata/rmeta/decoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -37,13 +37,13 @@ use rustc_span::source_map::{respan, Spanned};\n use rustc_span::symbol::{sym, Ident, Symbol};\n use rustc_span::{self, hygiene::MacroKind, BytePos, ExpnId, Pos, Span, SyntaxContext, DUMMY_SP};\n \n-use log::debug;\n use proc_macro::bridge::client::ProcMacro;\n use std::cell::Cell;\n use std::io;\n use std::mem;\n use std::num::NonZeroUsize;\n use std::path::Path;\n+use tracing::debug;\n \n pub use cstore_impl::{provide, provide_extern};\n use rustc_span::hygiene::HygieneDecodeContext;"}, {"sha": "0343fbeb0fad8df9c3f05325b36689f7c676d527", "filename": "src/librustc_metadata/rmeta/encoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -1,7 +1,6 @@\n use crate::rmeta::table::{FixedSizeEncoding, TableBuilder};\n use crate::rmeta::*;\n \n-use log::{debug, trace};\n use rustc_ast::ast;\n use rustc_data_structures::fingerprint::{Fingerprint, FingerprintEncoder};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet, FxIndexSet};\n@@ -37,6 +36,7 @@ use rustc_target::abi::VariantIdx;\n use std::hash::Hash;\n use std::num::NonZeroUsize;\n use std::path::Path;\n+use tracing::{debug, trace};\n \n pub(super) struct EncodeContext<'a, 'tcx> {\n     opaque: opaque::Encoder,"}, {"sha": "28858e146e48930b8100c26ccc78bdd94f7e07dc", "filename": "src/librustc_metadata/rmeta/table.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_metadata%2Frmeta%2Ftable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_metadata%2Frmeta%2Ftable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Ftable.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -1,11 +1,11 @@\n use crate::rmeta::*;\n \n-use log::debug;\n use rustc_index::vec::Idx;\n use rustc_serialize::opaque::Encoder;\n use std::convert::TryInto;\n use std::marker::PhantomData;\n use std::num::NonZeroUsize;\n+use tracing::debug;\n \n /// Helper trait, for encoding to, and decoding from, a fixed number of bytes.\n /// Used mainly for Lazy positions and lengths."}, {"sha": "311126361bc5b1c8cff6a22dff1f851bcc3c760e", "filename": "src/librustc_middle/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_middle%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_middle%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2FCargo.toml?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -12,7 +12,7 @@ doctest = false\n [dependencies]\n rustc_arena = { path = \"../librustc_arena\" }\n bitflags = \"1.2.1\"\n-log = { package = \"tracing\", version = \"0.1\" }\n+tracing = \"0.1\"\n rustc-rayon-core = \"0.3.0\"\n polonius-engine = \"0.12.0\"\n rustc_apfloat = { path = \"../librustc_apfloat\" }"}, {"sha": "ec1dcd29ef2d8180328b85073d5288af75c0253c", "filename": "src/librustc_middle/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_middle%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_middle%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Flib.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -60,7 +60,7 @@ extern crate rustc_macros;\n #[macro_use]\n extern crate rustc_data_structures;\n #[macro_use]\n-extern crate log;\n+extern crate tracing;\n #[macro_use]\n extern crate smallvec;\n "}, {"sha": "2693d29e41c4ce7071f4b1259f7f6fa2b1246942", "filename": "src/librustc_mir/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_mir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_mir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2FCargo.toml?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -13,7 +13,7 @@ doctest = false\n either = \"1.5.0\"\n rustc_graphviz = { path = \"../librustc_graphviz\" }\n itertools = \"0.8\"\n-log = { package = \"tracing\", version = \"0.1\" }\n+tracing = \"0.1\"\n log_settings = \"0.1.1\"\n polonius-engine = \"0.12.0\"\n rustc_middle = { path = \"../librustc_middle\" }"}, {"sha": "9197a83cdd07a4615d37ff1628410f35d832a538", "filename": "src/librustc_mir/borrow_check/diagnostics/outlives_suggestion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Foutlives_suggestion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Foutlives_suggestion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Foutlives_suggestion.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -3,10 +3,10 @@\n \n use std::collections::BTreeMap;\n \n-use log::debug;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::DiagnosticBuilder;\n use rustc_middle::ty::RegionVid;\n+use tracing::debug;\n \n use smallvec::SmallVec;\n "}, {"sha": "3118e7ac3ab17f57ec3e2f7076bd1b03adba385d", "filename": "src/librustc_mir/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_mir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_mir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flib.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -30,7 +30,7 @@ Rust MIR: a lowered representation of Rust.\n #![recursion_limit = \"256\"]\n \n #[macro_use]\n-extern crate log;\n+extern crate tracing;\n #[macro_use]\n extern crate rustc_middle;\n "}, {"sha": "97621f205fbb7c28f94557fc627b532b450aec5a", "filename": "src/librustc_mir_build/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_mir_build%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_mir_build%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2FCargo.toml?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -11,7 +11,7 @@ doctest = false\n \n [dependencies]\n rustc_arena = { path = \"../librustc_arena\" }\n-log = { package = \"tracing\", version = \"0.1\" }\n+tracing = \"0.1\"\n rustc_middle = { path = \"../librustc_middle\" }\n rustc_apfloat = { path = \"../librustc_apfloat\" }\n rustc_attr = { path = \"../librustc_attr\" }"}, {"sha": "313bb979a5161bdaf28a27d16c2d6492f1245e9c", "filename": "src/librustc_mir_build/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_mir_build%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_mir_build%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Flib.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -12,7 +12,7 @@\n #![recursion_limit = \"256\"]\n \n #[macro_use]\n-extern crate log;\n+extern crate tracing;\n #[macro_use]\n extern crate rustc_middle;\n "}, {"sha": "31d858849af484b66a3567643f63269d86b349b5", "filename": "src/librustc_parse/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_parse%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_parse%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2FCargo.toml?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -11,7 +11,7 @@ doctest = false\n \n [dependencies]\n bitflags = \"1.0\"\n-log = { package = \"tracing\", version = \"0.1\" }\n+tracing = \"0.1\"\n rustc_ast_pretty = { path = \"../librustc_ast_pretty\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_feature = { path = \"../librustc_feature\" }"}, {"sha": "675cfa41f10483b9a698321888ed73467328237d", "filename": "src/librustc_parse/lexer/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_parse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_parse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Flexer%2Fmod.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -8,8 +8,8 @@ use rustc_session::parse::ParseSess;\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{BytePos, Pos, Span};\n \n-use log::debug;\n use std::char;\n+use tracing::debug;\n \n mod tokentrees;\n mod unescape_error_reporting;"}, {"sha": "6f249f491a647a62b10cb41e4f581628bf97f9d5", "filename": "src/librustc_parse/lexer/unescape_error_reporting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_parse%2Flexer%2Funescape_error_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_parse%2Flexer%2Funescape_error_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Flexer%2Funescape_error_reporting.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -18,7 +18,7 @@ pub(crate) fn emit_unescape_error(\n     range: Range<usize>,\n     error: EscapeError,\n ) {\n-    log::debug!(\n+    tracing::debug!(\n         \"emit_unescape_error: {:?}, {:?}, {:?}, {:?}, {:?}\",\n         lit,\n         span_with_quotes,"}, {"sha": "829e1a97b100d422440c7647df2edb16eca3e084", "filename": "src/librustc_parse/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_parse%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_parse%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Flib.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -20,7 +20,7 @@ use std::mem;\n use std::path::Path;\n use std::str;\n \n-use log::{debug, info};\n+use tracing::{debug, info};\n \n pub const MACRO_ARGUMENTS: Option<&'static str> = Some(\"macro arguments\");\n "}, {"sha": "c942394fa7ccbd161a7dfa1812576a8ed3e6fb1f", "filename": "src/librustc_parse/parser/attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_parse%2Fparser%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_parse%2Fparser%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fattr.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -6,7 +6,7 @@ use rustc_ast_pretty::pprust;\n use rustc_errors::{error_code, PResult};\n use rustc_span::Span;\n \n-use log::debug;\n+use tracing::debug;\n \n #[derive(Debug)]\n pub(super) enum InnerAttrPolicy<'a> {"}, {"sha": "27e1bb01d528418f3b8e680178b53e40b50863a5", "filename": "src/librustc_parse/parser/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -16,7 +16,7 @@ use rustc_span::source_map::Spanned;\n use rustc_span::symbol::{kw, Ident};\n use rustc_span::{MultiSpan, Span, SpanSnippetError, DUMMY_SP};\n \n-use log::{debug, trace};\n+use tracing::{debug, trace};\n \n const TURBOFISH: &str = \"use `::<...>` instead of `<...>` to specify type arguments\";\n "}, {"sha": "0ceb588b3afe7175ed36e3ede754325876886972", "filename": "src/librustc_parse/parser/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fexpr.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -4,7 +4,6 @@ use super::{BlockMode, Parser, PathStyle, Restrictions, TokenType};\n use super::{SemiColonMode, SeqSep, TokenExpectType};\n use crate::maybe_recover_from_interpolated_ty_qpath;\n \n-use log::debug;\n use rustc_ast::ast::{self, AttrStyle, AttrVec, CaptureBy, Field, Lit, UnOp, DUMMY_NODE_ID};\n use rustc_ast::ast::{AnonConst, BinOp, BinOpKind, FnDecl, FnRetTy, MacCall, Param, Ty, TyKind};\n use rustc_ast::ast::{Arm, Async, BlockCheckMode, Expr, ExprKind, Label, Movability, RangeLimits};\n@@ -18,6 +17,7 @@ use rustc_errors::{Applicability, DiagnosticBuilder, PResult};\n use rustc_span::source_map::{self, Span, Spanned};\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n use std::mem;\n+use tracing::debug;\n \n /// Possibly accepts an `token::Interpolated` expression (a pre-parsed expression\n /// dropped into the token stream, which happens while parsing the result of"}, {"sha": "ce2dd15ab2601d10fa7c7f939dd6c463e19cc445", "filename": "src/librustc_parse/parser/item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fitem.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -20,9 +20,9 @@ use rustc_span::edition::Edition;\n use rustc_span::source_map::{self, Span};\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n \n-use log::debug;\n use std::convert::TryFrom;\n use std::mem;\n+use tracing::debug;\n \n impl<'a> Parser<'a> {\n     /// Parses a source module as a crate. This is the main entry point for the parser."}, {"sha": "a30131e4f7af49b75e8f8b81f78334576d26a326", "filename": "src/librustc_parse/parser/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_parse%2Fparser%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_parse%2Fparser%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fmod.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -13,7 +13,6 @@ use crate::lexer::UnmatchedBrace;\n use diagnostics::Error;\n pub use path::PathStyle;\n \n-use log::debug;\n use rustc_ast::ast::DUMMY_NODE_ID;\n use rustc_ast::ast::{self, AttrStyle, AttrVec, Const, CrateSugar, Extern, Unsafe};\n use rustc_ast::ast::{\n@@ -27,6 +26,7 @@ use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder, FatalError\n use rustc_session::parse::ParseSess;\n use rustc_span::source_map::{respan, Span, DUMMY_SP};\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n+use tracing::debug;\n \n use std::{cmp, mem, slice};\n "}, {"sha": "0f2b46f7e16303b3cbc1f740ec8359977f6b93e5", "filename": "src/librustc_parse/parser/path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_parse%2Fparser%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_parse%2Fparser%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fpath.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -10,8 +10,8 @@ use rustc_errors::{pluralize, Applicability, PResult};\n use rustc_span::source_map::{BytePos, Span};\n use rustc_span::symbol::{kw, sym, Ident};\n \n-use log::debug;\n use std::mem;\n+use tracing::debug;\n \n /// Specifies how to parse a path.\n #[derive(Copy, Clone, PartialEq)]"}, {"sha": "db481c0d0d4c2965eeb440f6c37a64a332b913f6", "filename": "src/librustc_passes/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_passes%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_passes%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2FCargo.toml?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -9,7 +9,7 @@ name = \"rustc_passes\"\n path = \"lib.rs\"\n \n [dependencies]\n-log = { package = \"tracing\", version = \"0.1\" }\n+tracing = \"0.1\"\n rustc_middle = { path = \"../librustc_middle\" }\n rustc_attr = { path = \"../librustc_attr\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }"}, {"sha": "be4c542ec3a1d89ea00cfde7d7c149d8b73c6d82", "filename": "src/librustc_passes/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_passes%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_passes%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Flib.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -13,7 +13,7 @@\n #[macro_use]\n extern crate rustc_middle;\n #[macro_use]\n-extern crate log;\n+extern crate tracing;\n \n use rustc_middle::ty::query::Providers;\n "}, {"sha": "3641f0f8a31170002b04f4e4dc1dd20bef075404", "filename": "src/librustc_privacy/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_privacy%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_privacy%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2FCargo.toml?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -17,4 +17,4 @@ rustc_typeck = { path = \"../librustc_typeck\" }\n rustc_session = { path = \"../librustc_session\" }\n rustc_span = { path = \"../librustc_span\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n-log = { package = \"tracing\", version = \"0.1\" }\n+tracing = \"0.1\""}, {"sha": "a3f2668691fd832107b443319420ed421dd4ec39", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -1853,7 +1853,7 @@ impl SearchInterfaceForPrivateItemsVisitor<'tcx> {\n         let ret = self.required_visibility == ty::Visibility::Public\n             && self.tcx.is_private_dep(item_id.krate);\n \n-        log::debug!(\"leaks_private_dep(item_id={:?})={}\", item_id, ret);\n+        tracing::debug!(\"leaks_private_dep(item_id={:?})={}\", item_id, ret);\n         ret\n     }\n }"}, {"sha": "1e89d379cb77cb2182846bea4fe465fe3a0f1ce0", "filename": "src/librustc_query_system/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_query_system%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_query_system%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_query_system%2FCargo.toml?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -11,7 +11,7 @@ doctest = false\n \n [dependencies]\n rustc_arena = { path = \"../librustc_arena\" }\n-log = { package = \"tracing\", version = \"0.1\" }\n+tracing = \"0.1\"\n rustc-rayon-core = \"0.3.0\"\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_errors = { path = \"../librustc_errors\" }"}, {"sha": "26b76a9c006cd1a3b93c48879672f02eb93d5c57", "filename": "src/librustc_query_system/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_query_system%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_query_system%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_query_system%2Flib.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -7,7 +7,7 @@\n #![feature(stmt_expr_attributes)]\n \n #[macro_use]\n-extern crate log;\n+extern crate tracing;\n #[macro_use]\n extern crate rustc_data_structures;\n #[macro_use]"}, {"sha": "e5260866f29e71695aa206f273e70f57ee02b8b3", "filename": "src/librustc_resolve/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_resolve%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_resolve%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2FCargo.toml?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -12,7 +12,7 @@ doctest = false\n \n [dependencies]\n bitflags = \"1.2.1\"\n-log = { package = \"tracing\", version = \"0.1\" }\n+tracing = \"0.1\"\n rustc_ast = { path = \"../librustc_ast\" }\n rustc_arena = { path = \"../librustc_arena\" }\n rustc_middle = { path = \"../librustc_middle\" }"}, {"sha": "ddc16d18952ade992a2ae0d80b7355750674e879", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -37,9 +37,9 @@ use rustc_span::source_map::{respan, Spanned};\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n use rustc_span::Span;\n \n-use log::debug;\n use std::cell::Cell;\n use std::ptr;\n+use tracing::debug;\n \n type Res = def::Res<NodeId>;\n "}, {"sha": "7dbf51aab28f19a8ddec7559d77ed15307f20496", "filename": "src/librustc_resolve/def_collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_resolve%2Fdef_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_resolve%2Fdef_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdef_collector.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -1,5 +1,4 @@\n use crate::Resolver;\n-use log::debug;\n use rustc_ast::ast::*;\n use rustc_ast::token::{self, Token};\n use rustc_ast::visit::{self, FnKind};\n@@ -11,6 +10,7 @@ use rustc_hir::definitions::*;\n use rustc_span::hygiene::ExpnId;\n use rustc_span::symbol::{kw, sym};\n use rustc_span::Span;\n+use tracing::debug;\n \n crate fn collect_definitions(\n     resolver: &mut Resolver<'_>,"}, {"sha": "1e5e937db663d9df62c2c507481f38c073faea15", "filename": "src/librustc_resolve/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_resolve%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_resolve%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdiagnostics.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -1,7 +1,6 @@\n use std::cmp::Reverse;\n use std::ptr;\n \n-use log::debug;\n use rustc_ast::ast::{self, Path};\n use rustc_ast::util::lev_distance::find_best_match_for_name;\n use rustc_ast_pretty::pprust;\n@@ -18,6 +17,7 @@ use rustc_span::hygiene::MacroKind;\n use rustc_span::source_map::SourceMap;\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n use rustc_span::{BytePos, MultiSpan, Span};\n+use tracing::debug;\n \n use crate::imports::{Import, ImportKind, ImportResolver};\n use crate::path_names_to_string;"}, {"sha": "ef51a1c73afdff9e4a1ba287aa0689933214135a", "filename": "src/librustc_resolve/imports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_resolve%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_resolve%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fimports.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -28,7 +28,7 @@ use rustc_span::hygiene::ExpnId;\n use rustc_span::symbol::{kw, Ident, Symbol};\n use rustc_span::{MultiSpan, Span};\n \n-use log::*;\n+use tracing::*;\n \n use std::cell::Cell;\n use std::{mem, ptr};"}, {"sha": "2f63257a98214bd83a4b0f0a39c0532af8eaf34a", "filename": "src/librustc_resolve/late.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_resolve%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_resolve%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -29,10 +29,10 @@ use rustc_span::symbol::{kw, sym, Ident, Symbol};\n use rustc_span::Span;\n use smallvec::{smallvec, SmallVec};\n \n-use log::debug;\n use rustc_span::source_map::{respan, Spanned};\n use std::collections::BTreeSet;\n use std::mem::{replace, take};\n+use tracing::debug;\n \n mod diagnostics;\n crate mod lifetimes;\n@@ -1732,7 +1732,12 @@ impl<'a, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n         source: PathSource<'ast>,\n         crate_lint: CrateLint,\n     ) -> PartialRes {\n-        log::debug!(\"smart_resolve_path_fragment(id={:?},qself={:?},path={:?}\", id, qself, path);\n+        tracing::debug!(\n+            \"smart_resolve_path_fragment(id={:?},qself={:?},path={:?}\",\n+            id,\n+            qself,\n+            path\n+        );\n         let ns = source.namespace();\n         let is_expected = &|res| source.is_expected(res);\n "}, {"sha": "2e606beca26b43cd247bde82c16c778ac69157bd", "filename": "src/librustc_resolve/late/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -20,7 +20,7 @@ use rustc_span::hygiene::MacroKind;\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n use rustc_span::{BytePos, Span, DUMMY_SP};\n \n-use log::debug;\n+use tracing::debug;\n \n type Res = def::Res<ast::NodeId>;\n "}, {"sha": "e2f0d388f7e5373eaa0e470017e0aa75e8c2c0d3", "filename": "src/librustc_resolve/late/lifetimes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_resolve%2Flate%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_resolve%2Flate%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate%2Flifetimes.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -26,7 +26,7 @@ use std::borrow::Cow;\n use std::cell::Cell;\n use std::mem::take;\n \n-use log::debug;\n+use tracing::debug;\n \n // This counts the no of times a lifetime is used\n #[derive(Clone, Copy, Debug)]"}, {"sha": "339a5ae6675e7178e4c8a5c1b7ea1d785397b281", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -54,10 +54,10 @@ use rustc_span::source_map::Spanned;\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n use rustc_span::{Span, DUMMY_SP};\n \n-use log::debug;\n use std::cell::{Cell, RefCell};\n use std::collections::BTreeSet;\n use std::{cmp, fmt, iter, ptr};\n+use tracing::debug;\n \n use diagnostics::{extend_span_to_previous_binding, find_span_of_binding_until_next_binding};\n use diagnostics::{ImportSuggestion, LabelSuggestion, Suggestion};"}, {"sha": "3c2edc1fa5571fae34cf5a56636400b0238451f1", "filename": "src/librustc_save_analysis/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_save_analysis%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_save_analysis%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2FCargo.toml?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -9,7 +9,7 @@ name = \"rustc_save_analysis\"\n path = \"lib.rs\"\n \n [dependencies]\n-log = { package = \"tracing\", version = \"0.1\" }\n+tracing = \"0.1\"\n rustc_middle = { path = \"../librustc_middle\" }\n rustc_ast = { path = \"../librustc_ast\" }\n rustc_ast_pretty = { path = \"../librustc_ast_pretty\" }"}, {"sha": "f33d2f46aa2699f32f673fc5a1861e0c9c8bee60", "filename": "src/librustc_save_analysis/dump_visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdump_visitor.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -45,7 +45,7 @@ use rls_data::{\n     RefKind, Relation, RelationKind, SpanData,\n };\n \n-use log::{debug, error};\n+use tracing::{debug, error};\n \n macro_rules! down_cast_data {\n     ($id:ident, $kind:ident, $sp:expr) => {"}, {"sha": "ca98ada4e57290be539c8f6052ba8ff7a6f534f5", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -45,7 +45,7 @@ use rls_data::{\n     RefKind, Relation, RelationKind, SpanData,\n };\n \n-use log::{debug, error, info};\n+use tracing::{debug, error, info};\n \n pub struct SaveContext<'tcx> {\n     tcx: TyCtxt<'tcx>,"}, {"sha": "208bba1d962282d8cd5761fb2f9123dbf1d4b612", "filename": "src/librustc_session/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_session%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_session%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2FCargo.toml?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -11,8 +11,8 @@ path = \"lib.rs\"\n [dependencies]\n bitflags = \"1.2.1\"\n getopts = \"0.2\"\n-log = { package = \"tracing\", version = \"0.1\" }\n rustc_macros = { path = \"../librustc_macros\" }\n+tracing = \"0.1\"\n rustc_errors = { path = \"../librustc_errors\" }\n rustc_feature = { path = \"../librustc_feature\" }\n rustc_target = { path = \"../librustc_target\" }"}, {"sha": "0eec12aa03f2d72c4708b9d8800e3c01dfe41ed8", "filename": "src/librustc_session/cgu_reuse_tracker.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_session%2Fcgu_reuse_tracker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_session%2Fcgu_reuse_tracker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Fcgu_reuse_tracker.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -2,10 +2,10 @@\n //! compilation. This is used for incremental compilation tests and debug\n //! output.\n \n-use log::debug;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_span::{Span, Symbol};\n use std::sync::{Arc, Mutex};\n+use tracing::debug;\n \n #[derive(Copy, Clone, Debug, PartialEq, PartialOrd)]\n pub enum CguReuse {"}, {"sha": "1808a0ca59bea7a62a96832e04950ee63a12a2e5", "filename": "src/librustc_session/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_session%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_session%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Fconfig.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -1878,7 +1878,7 @@ fn parse_pretty(\n                 }\n             }\n         };\n-        log::debug!(\"got unpretty option: {:?}\", first);\n+        tracing::debug!(\"got unpretty option: {:?}\", first);\n         first\n     }\n }"}, {"sha": "284fca652ece73b2b075d089cf76d924099f8150", "filename": "src/librustc_session/filesearch.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_session%2Ffilesearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_session%2Ffilesearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Ffilesearch.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -8,8 +8,8 @@ use std::fs;\n use std::path::{Path, PathBuf};\n \n use crate::search_paths::{PathKind, SearchPath, SearchPathFile};\n-use log::debug;\n use rustc_fs_util::fix_windows_verbatim_for_gcc;\n+use tracing::debug;\n \n #[derive(Copy, Clone)]\n pub enum FileMatch {"}, {"sha": "dd4928d4e324b41547c264105b78ce53b2074683", "filename": "src/librustc_span/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_span%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_span%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_span%2FCargo.toml?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -18,6 +18,6 @@ rustc_arena = { path = \"../librustc_arena\" }\n scoped-tls = \"1.0\"\n unicode-width = \"0.1.4\"\n cfg-if = \"0.1.2\"\n-log = { package = \"tracing\", version = \"0.1\" }\n+tracing = \"0.1\"\n sha-1 = \"0.8\"\n md-5 = \"0.8\""}, {"sha": "942c6648340ef9226a8a30b394836396eafc8ceb", "filename": "src/librustc_span/hygiene.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_span%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_span%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_span%2Fhygiene.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -30,12 +30,12 @@ use crate::SESSION_GLOBALS;\n use crate::{Span, DUMMY_SP};\n \n use crate::def_id::{CrateNum, DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n-use log::*;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::sync::{Lock, Lrc};\n use rustc_macros::HashStable_Generic;\n use rustc_serialize::{Decodable, Decoder, Encodable, Encoder};\n use std::fmt;\n+use tracing::*;\n \n /// A `SyntaxContext` represents a chain of pairs `(ExpnId, Transparency)` named \"marks\".\n #[derive(Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]"}, {"sha": "7c656db22ed8c18b6846cf8a5e18459cd49ac68e", "filename": "src/librustc_span/source_map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_span%2Fsource_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_span%2Fsource_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_span%2Fsource_map.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -19,9 +19,9 @@ use std::hash::Hash;\n use std::path::{Path, PathBuf};\n use std::sync::atomic::Ordering;\n \n-use log::debug;\n use std::fs;\n use std::io;\n+use tracing::debug;\n \n #[cfg(test)]\n mod tests;"}, {"sha": "b44c0e4e027ce92c9191bb6e7030224064c0a166", "filename": "src/librustc_symbol_mangling/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_symbol_mangling%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_symbol_mangling%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_symbol_mangling%2FCargo.toml?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -10,7 +10,7 @@ path = \"lib.rs\"\n doctest = false\n \n [dependencies]\n-log = { package = \"tracing\", version = \"0.1\" }\n+tracing = \"0.1\"\n punycode = \"0.4.0\"\n rustc-demangle = \"0.1.16\"\n "}, {"sha": "2ae13b501e9412d532d9f095917c7e4d805521d9", "filename": "src/librustc_symbol_mangling/legacy.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_symbol_mangling%2Flegacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_symbol_mangling%2Flegacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_symbol_mangling%2Flegacy.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -8,7 +8,7 @@ use rustc_middle::ty::subst::{GenericArg, GenericArgKind};\n use rustc_middle::ty::{self, Instance, Ty, TyCtxt, TypeFoldable};\n use rustc_middle::util::common::record_time;\n \n-use log::debug;\n+use tracing::debug;\n \n use std::fmt::{self, Write};\n use std::mem::{self, discriminant};"}, {"sha": "296b40c4e395da37ebb507ea61ae7668b2c8bcba", "filename": "src/librustc_symbol_mangling/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_symbol_mangling%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_symbol_mangling%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_symbol_mangling%2Flib.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -106,7 +106,7 @@ use rustc_middle::ty::subst::SubstsRef;\n use rustc_middle::ty::{self, Instance, TyCtxt};\n use rustc_session::config::SymbolManglingVersion;\n \n-use log::debug;\n+use tracing::debug;\n \n mod legacy;\n mod v0;"}, {"sha": "d2b50f44e43d9170f7dd097fc96b683db70b71b6", "filename": "src/librustc_target/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_target%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_target%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2FCargo.toml?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -10,7 +10,7 @@ path = \"lib.rs\"\n \n [dependencies]\n bitflags = \"1.2.1\"\n-log = { package = \"tracing\", version = \"0.1\" }\n+tracing = \"0.1\"\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_macros = { path = \"../librustc_macros\" }\n rustc_serialize = { path = \"../librustc_serialize\" }"}, {"sha": "5788e1e838598629e7cff3baa489f8ae5ceeb27b", "filename": "src/librustc_target/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_target%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_target%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Flib.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -20,7 +20,7 @@\n extern crate rustc_macros;\n \n #[macro_use]\n-extern crate log;\n+extern crate tracing;\n \n pub mod abi;\n pub mod asm;"}, {"sha": "444023baa695f532619f6f1f57043b70e5e7a2c6", "filename": "src/librustc_trait_selection/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_trait_selection%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_trait_selection%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2FCargo.toml?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -11,7 +11,7 @@ doctest = false\n \n [dependencies]\n rustc_parse_format = { path = \"../librustc_parse_format\" }\n-log = { package = \"tracing\", version = \"0.1\" }\n+tracing = \"0.1\"\n rustc_attr = { path = \"../librustc_attr\" }\n rustc_middle = { path = \"../librustc_middle\" }\n rustc_ast = { path = \"../librustc_ast\" }"}, {"sha": "b5882df47294ee2a83542f9c423752f22a60a099", "filename": "src/librustc_trait_selection/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_trait_selection%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_trait_selection%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Flib.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -24,7 +24,7 @@ extern crate rustc_macros;\n #[macro_use]\n extern crate rustc_data_structures;\n #[macro_use]\n-extern crate log;\n+extern crate tracing;\n #[macro_use]\n extern crate rustc_middle;\n "}, {"sha": "f5545f562938fd8b925bf17d8152256c6adddd16", "filename": "src/librustc_traits/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_traits%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_traits%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2FCargo.toml?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -9,7 +9,7 @@ name = \"rustc_traits\"\n path = \"lib.rs\"\n \n [dependencies]\n-log = { package = \"tracing\", version = \"0.1\" }\n+tracing = \"0.1\"\n rustc_middle = { path = \"../librustc_middle\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_hir = { path = \"../librustc_hir\" }"}, {"sha": "6fea4732dda3fd6a18c713f4621f16316de12a45", "filename": "src/librustc_traits/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_traits%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_traits%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Flib.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -8,7 +8,7 @@\n #![recursion_limit = \"256\"]\n \n #[macro_use]\n-extern crate log;\n+extern crate tracing;\n #[macro_use]\n extern crate rustc_middle;\n "}, {"sha": "adc9740c2c173d14579d6c4c6a7a3e4b8b6727a3", "filename": "src/librustc_ty/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_ty%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_ty%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ty%2FCargo.toml?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -9,7 +9,7 @@ name = \"rustc_ty\"\n path = \"lib.rs\"\n \n [dependencies]\n-log = { package = \"tracing\", version = \"0.1\" }\n+tracing = \"0.1\"\n rustc_middle = { path = \"../librustc_middle\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_errors = { path = \"../librustc_errors\" }"}, {"sha": "d0bd88af1ffd1f4abc376e7139e37609bcadd954", "filename": "src/librustc_ty/instance.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_ty%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_ty%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ty%2Finstance.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -8,7 +8,7 @@ use rustc_target::spec::abi::Abi;\n use rustc_trait_selection::traits;\n use traits::{translate_substs, Reveal};\n \n-use log::debug;\n+use tracing::debug;\n \n fn resolve_instance<'tcx>(\n     tcx: TyCtxt<'tcx>,"}, {"sha": "6e9042d1ba7c84518aae084c1016f4b539e076c7", "filename": "src/librustc_ty/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_ty%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_ty%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ty%2Flib.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -12,7 +12,7 @@\n #[macro_use]\n extern crate rustc_middle;\n #[macro_use]\n-extern crate log;\n+extern crate tracing;\n \n use rustc_middle::ty::query::Providers;\n "}, {"sha": "82c6ac7a0cd73a2b84003898e1c8b32db6cde517", "filename": "src/librustc_typeck/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_typeck%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_typeck%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2FCargo.toml?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -12,7 +12,7 @@ doctest = false\n \n [dependencies]\n rustc_arena = { path = \"../librustc_arena\" }\n-log = { package = \"tracing\", version = \"0.1\" }\n+tracing = \"0.1\"\n rustc_middle = { path = \"../librustc_middle\" }\n rustc_attr = { path = \"../librustc_attr\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }"}, {"sha": "4248253172598c877d82b0554e95e9faa6d0d69c", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -69,7 +69,7 @@ This API is completely unstable and subject to change.\n #![recursion_limit = \"256\"]\n \n #[macro_use]\n-extern crate log;\n+extern crate tracing;\n \n #[macro_use]\n extern crate rustc_middle;"}, {"sha": "c601084d11917acff620fb1230531e92fed0e4f8", "filename": "src/tools/compiletest/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Ftools%2Fcompiletest%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Ftools%2Fcompiletest%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2FCargo.toml?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -8,7 +8,7 @@ edition = \"2018\"\n diff = \"0.1.10\"\n env_logger = { version = \"0.7\", default-features = false }\n getopts = \"0.2\"\n-log = { package = \"tracing\", version = \"0.1\" }\n+tracing = \"0.1\"\n regex = \"1.0\"\n serde = { version = \"1.0\", features = [\"derive\"] }\n serde_json = \"1.0\""}, {"sha": "8edc9c9cd038e5c2694a613aa878988e8adac16a", "filename": "src/tools/compiletest/src/errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Ftools%2Fcompiletest%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Ftools%2Fcompiletest%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Ferrors.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -8,8 +8,8 @@ use std::path::Path;\n use std::str::FromStr;\n \n use lazy_static::lazy_static;\n-use log::*;\n use regex::Regex;\n+use tracing::*;\n \n #[derive(Clone, Debug, PartialEq)]\n pub enum ErrorKind {"}, {"sha": "90a0d8926ad94bfa88e0915422c125131baac92d", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -5,7 +5,7 @@ use std::io::prelude::*;\n use std::io::BufReader;\n use std::path::{Path, PathBuf};\n \n-use log::*;\n+use tracing::*;\n \n use crate::common::{CompareMode, Config, Debugger, FailMode, Mode, PassMode};\n use crate::extract_gdb_version;"}, {"sha": "46e16393a24c1c49e3be4fa63b98dfd621f63523", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -9,7 +9,6 @@ use crate::common::{expected_output_path, output_base_dir, output_relative_path,\n use crate::common::{CompareMode, Config, Debugger, Mode, PassMode, Pretty, TestPaths};\n use crate::util::logv;\n use getopts::Options;\n-use log::*;\n use std::env;\n use std::ffi::OsString;\n use std::fs;\n@@ -18,6 +17,7 @@ use std::path::{Path, PathBuf};\n use std::process::Command;\n use std::time::SystemTime;\n use test::ColorConfig;\n+use tracing::*;\n use walkdir::WalkDir;\n \n use self::header::EarlyProps;"}, {"sha": "03136921ad626b83f937a99c042062381043c2c5", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -30,7 +30,7 @@ use std::str;\n \n use glob::glob;\n use lazy_static::lazy_static;\n-use log::*;\n+use tracing::*;\n \n use crate::extract_gdb_version;\n use crate::is_android_gdb_target;"}, {"sha": "cc4b21f9efb450667f33c59a62b99d5cce729aae", "filename": "src/tools/compiletest/src/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2753f91b5e09a91841fa729ef6b14d7ef249e8a/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs?ref=d2753f91b5e09a91841fa729ef6b14d7ef249e8a", "patch": "@@ -3,7 +3,7 @@ use std::env;\n use std::ffi::OsStr;\n use std::path::PathBuf;\n \n-use log::*;\n+use tracing::*;\n \n #[cfg(test)]\n mod tests;"}]}