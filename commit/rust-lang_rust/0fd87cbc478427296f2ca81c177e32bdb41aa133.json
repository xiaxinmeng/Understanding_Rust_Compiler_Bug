{"sha": "0fd87cbc478427296f2ca81c177e32bdb41aa133", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmZDg3Y2JjNDc4NDI3Mjk2ZjJjYTgxYzE3N2UzMmJkYjQxYWExMzM=", "commit": {"author": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2019-01-01T11:10:08Z"}, "committer": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2019-01-01T11:10:08Z"}, "message": "Use an else if", "tree": {"sha": "e5b82bd4e6e6ddd258f503e99afd14ffb8a6d63e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5b82bd4e6e6ddd258f503e99afd14ffb8a6d63e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0fd87cbc478427296f2ca81c177e32bdb41aa133", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0fd87cbc478427296f2ca81c177e32bdb41aa133", "html_url": "https://github.com/rust-lang/rust/commit/0fd87cbc478427296f2ca81c177e32bdb41aa133", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0fd87cbc478427296f2ca81c177e32bdb41aa133/comments", "author": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72ab6f772736f35c53c738735b0c0b4b3f360a20", "url": "https://api.github.com/repos/rust-lang/rust/commits/72ab6f772736f35c53c738735b0c0b4b3f360a20", "html_url": "https://github.com/rust-lang/rust/commit/72ab6f772736f35c53c738735b0c0b4b3f360a20"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "1d6fe883752ffdbf9221e036bba7c817d999a693", "filename": "crates/ra_syntax/src/validation/char.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0fd87cbc478427296f2ca81c177e32bdb41aa133/crates%2Fra_syntax%2Fsrc%2Fvalidation%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fd87cbc478427296f2ca81c177e32bdb41aa133/crates%2Fra_syntax%2Fsrc%2Fvalidation%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fvalidation%2Fchar.rs?ref=0fd87cbc478427296f2ca81c177e32bdb41aa133", "patch": "@@ -92,12 +92,11 @@ fn validate_ascii_code_escape(text: &str, range: TextRange, errors: &mut Vec<Syn\n     if !text.is_ascii() {\n         // TODO: Give a more precise error message (say what the invalid character was)\n         errors.push(SyntaxError::new(AsciiCodeEscapeOutOfRange, range));\n-    }\n-    if text.len() < 4 {\n+    } else if text.chars().count() < 4 {\n         errors.push(SyntaxError::new(TooShortAsciiCodeEscape, range));\n     } else {\n         assert_eq!(\n-            text.len(),\n+            text.chars().count(),\n             4,\n             \"AsciiCodeEscape cannot be longer than 4 chars, but text '{}' is\",\n             text,"}]}