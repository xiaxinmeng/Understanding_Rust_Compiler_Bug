{"sha": "3b441c485f10722e58f71957b78e5950c53757d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiNDQxYzQ4NWYxMDcyMmU1OGY3MTk1N2I3OGU1OTUwYzUzNzU3ZDQ=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2013-08-06T17:42:06Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2013-08-06T17:42:06Z"}, "message": "Result::get -> Result::unwrap", "tree": {"sha": "f1c82d0de33a59db9ece3831c7debf4669a84fd1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1c82d0de33a59db9ece3831c7debf4669a84fd1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b441c485f10722e58f71957b78e5950c53757d4", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b441c485f10722e58f71957b78e5950c53757d4", "html_url": "https://github.com/rust-lang/rust/commit/3b441c485f10722e58f71957b78e5950c53757d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b441c485f10722e58f71957b78e5950c53757d4/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6176513842da1dd9e17d8536e7d76125a1bc610", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6176513842da1dd9e17d8536e7d76125a1bc610", "html_url": "https://github.com/rust-lang/rust/commit/e6176513842da1dd9e17d8536e7d76125a1bc610"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "d5345cb956b8f2004eb6d7571b27af9d7f7465b3", "filename": "src/libextra/hex.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3b441c485f10722e58f71957b78e5950c53757d4/src%2Flibextra%2Fhex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b441c485f10722e58f71957b78e5950c53757d4/src%2Flibextra%2Fhex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fhex.rs?ref=3b441c485f10722e58f71957b78e5950c53757d4", "patch": "@@ -78,7 +78,7 @@ impl<'self> FromHex for &'self str {\n      * fn main () {\n      *     let hello_str = \"Hello, World\".to_hex();\n      *     printfln!(\"%s\", hello_str);\n-     *     let bytes = hello_str.from_hex().get();\n+     *     let bytes = hello_str.from_hex().unwrap();\n      *     printfln!(\"%?\", bytes);\n      *     let result_str = str::from_bytes(bytes);\n      *     printfln!(\"%s\", result_str);\n@@ -132,9 +132,9 @@ mod tests {\n \n     #[test]\n     pub fn test_from_hex_okay() {\n-        assert_eq!(\"666f6f626172\".from_hex().get(),\n+        assert_eq!(\"666f6f626172\".from_hex().unwrap(),\n                    \"foobar\".as_bytes().to_owned());\n-        assert_eq!(\"666F6F626172\".from_hex().get(),\n+        assert_eq!(\"666F6F626172\".from_hex().unwrap(),\n                    \"foobar\".as_bytes().to_owned());\n     }\n \n@@ -151,7 +151,7 @@ mod tests {\n \n     #[test]\n     pub fn test_from_hex_ignores_whitespace() {\n-        assert_eq!(\"666f 6f6\\r\\n26172 \".from_hex().get(),\n+        assert_eq!(\"666f 6f6\\r\\n26172 \".from_hex().unwrap(),\n                    \"foobar\".as_bytes().to_owned());\n     }\n \n@@ -165,8 +165,8 @@ mod tests {\n     #[test]\n     pub fn test_from_hex_all_bytes() {\n         for i in range(0, 256) {\n-            assert_eq!(fmt!(\"%02x\", i as uint).from_hex().get(), ~[i as u8]);\n-            assert_eq!(fmt!(\"%02X\", i as uint).from_hex().get(), ~[i as u8]);\n+            assert_eq!(fmt!(\"%02x\", i as uint).from_hex().unwrap(), ~[i as u8]);\n+            assert_eq!(fmt!(\"%02X\", i as uint).from_hex().unwrap(), ~[i as u8]);\n         }\n     }\n "}]}