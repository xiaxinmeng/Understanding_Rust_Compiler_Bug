{"sha": "601eca3b53a1a66a53a296f78428c1342b5f7758", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwMWVjYTNiNTNhMWE2NmE1M2EyOTZmNzg0MjhjMTM0MmI1Zjc3NTg=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-03-25T15:36:58Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-03-26T13:08:55Z"}, "message": "Added instability markers to `POST_DROP_*` consts, and related opt-in's.\n\n(Reviewed rest of code; did not see other `pub` items that needed such\ntreatment.)\n\nDriveby: fix typo in comment in ptr.rs.", "tree": {"sha": "0909255e97ee444641f53bfb787a3299d092452a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0909255e97ee444641f53bfb787a3299d092452a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/601eca3b53a1a66a53a296f78428c1342b5f7758", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/601eca3b53a1a66a53a296f78428c1342b5f7758", "html_url": "https://github.com/rust-lang/rust/commit/601eca3b53a1a66a53a296f78428c1342b5f7758", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/601eca3b53a1a66a53a296f78428c1342b5f7758/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5733726508bbfddebf1024e41b2d34439d548bdb", "url": "https://api.github.com/repos/rust-lang/rust/commits/5733726508bbfddebf1024e41b2d34439d548bdb", "html_url": "https://github.com/rust-lang/rust/commit/5733726508bbfddebf1024e41b2d34439d548bdb"}], "stats": {"total": 35, "additions": 22, "deletions": 13}, "files": [{"sha": "b92dfa9117e6beb5745f97c106a758ebfedef1fe", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/601eca3b53a1a66a53a296f78428c1342b5f7758/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/601eca3b53a1a66a53a296f78428c1342b5f7758/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=601eca3b53a1a66a53a296f78428c1342b5f7758", "patch": "@@ -75,7 +75,7 @@\n #![feature(box_syntax)]\n #![feature(optin_builtin_traits)]\n #![feature(unboxed_closures)]\n-#![feature(unsafe_no_drop_flag)]\n+#![feature(unsafe_no_drop_flag, filling_drop)]\n #![feature(core)]\n #![feature(unique)]\n #![cfg_attr(test, feature(test, alloc, rustc_private))]"}, {"sha": "e32ee34887cec02eea13fed66b2072c3edbce17f", "filename": "src/libcollections/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/601eca3b53a1a66a53a296f78428c1342b5f7758/src%2Flibcollections%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/601eca3b53a1a66a53a296f78428c1342b5f7758/src%2Flibcollections%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flib.rs?ref=601eca3b53a1a66a53a296f78428c1342b5f7758", "patch": "@@ -36,7 +36,7 @@\n #![feature(unicode)]\n #![feature(unsafe_destructor)]\n #![feature(unique)]\n-#![feature(unsafe_no_drop_flag)]\n+#![feature(unsafe_no_drop_flag, filling_drop)]\n #![feature(step_by)]\n #![feature(str_char)]\n #![feature(convert)]"}, {"sha": "434a5d17a9254cd6cf1627cd7d2129f81808621c", "filename": "src/libcore/mem.rs", "status": "modified", "additions": 18, "deletions": 9, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/601eca3b53a1a66a53a296f78428c1342b5f7758/src%2Flibcore%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/601eca3b53a1a66a53a296f78428c1342b5f7758/src%2Flibcore%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem.rs?ref=601eca3b53a1a66a53a296f78428c1342b5f7758", "patch": "@@ -337,19 +337,28 @@ macro_rules! repeat_u8_as_u64 {\n // But having the sign bit set is a pain, so 0x1d is probably better.\n //\n // And of course, 0x00 brings back the old world of zero'ing on drop.\n-#[cfg(not(stage0))] pub const POST_DROP_U8: u8 = 0x1d;\n-#[cfg(not(stage0))] pub const POST_DROP_U32: u32 = repeat_u8_as_u32!(POST_DROP_U8);\n-#[cfg(not(stage0))] pub const POST_DROP_U64: u64 = repeat_u8_as_u64!(POST_DROP_U8);\n+#[cfg(not(stage0))] #[unstable(feature = \"filling_drop\")]\n+pub const POST_DROP_U8: u8 = 0x1d;\n+#[cfg(not(stage0))] #[unstable(feature = \"filling_drop\")]\n+pub const POST_DROP_U32: u32 = repeat_u8_as_u32!(POST_DROP_U8);\n+#[cfg(not(stage0))]  #[unstable(feature = \"filling_drop\")]\n+pub const POST_DROP_U64: u64 = repeat_u8_as_u64!(POST_DROP_U8);\n \n #[cfg(target_pointer_width = \"32\")]\n-#[cfg(not(stage0))] pub const POST_DROP_USIZE: usize = POST_DROP_U32 as usize;\n+#[cfg(not(stage0))]  #[unstable(feature = \"filling_drop\")]\n+pub const POST_DROP_USIZE: usize = POST_DROP_U32 as usize;\n #[cfg(target_pointer_width = \"64\")]\n-#[cfg(not(stage0))] pub const POST_DROP_USIZE: usize = POST_DROP_U64 as usize;\n+#[cfg(not(stage0))]  #[unstable(feature = \"filling_drop\")]\n+pub const POST_DROP_USIZE: usize = POST_DROP_U64 as usize;\n \n-#[cfg(stage0)] pub const POST_DROP_U8: u8 = 0;\n-#[cfg(stage0)] pub const POST_DROP_U32: u32 = 0;\n-#[cfg(stage0)] pub const POST_DROP_U64: u64 = 0;\n-#[cfg(stage0)] pub const POST_DROP_USIZE: usize = 0;\n+#[cfg(stage0)]  #[unstable(feature = \"filling_drop\")]\n+pub const POST_DROP_U8: u8 = 0;\n+#[cfg(stage0)]  #[unstable(feature = \"filling_drop\")]\n+pub const POST_DROP_U32: u32 = 0;\n+#[cfg(stage0)]  #[unstable(feature = \"filling_drop\")]\n+pub const POST_DROP_U64: u64 = 0;\n+#[cfg(stage0)]  #[unstable(feature = \"filling_drop\")]\n+pub const POST_DROP_USIZE: usize = 0;\n \n /// Interprets `src` as `&U`, and then reads `src` without moving the contained value.\n ///"}, {"sha": "07d018dea929651d983768c8b1f3e940ca99515f", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/601eca3b53a1a66a53a296f78428c1342b5f7758/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/601eca3b53a1a66a53a296f78428c1342b5f7758/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=601eca3b53a1a66a53a296f78428c1342b5f7758", "patch": "@@ -231,7 +231,7 @@ pub unsafe fn read_and_zero<T>(dest: *mut T) -> T {\n }\n \n /// Variant of read_and_zero that writes the specific drop-flag byte\n-/// (which may be more apropriate than zero).\n+/// (which may be more appropriate than zero).\n #[inline(always)]\n #[unstable(feature = \"core\",\n            reason = \"may play a larger role in std::ptr future extensions\")]"}, {"sha": "3724b26b2020a8d3ada9291a4fa2775af304d62a", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/601eca3b53a1a66a53a296f78428c1342b5f7758/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/601eca3b53a1a66a53a296f78428c1342b5f7758/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=601eca3b53a1a66a53a296f78428c1342b5f7758", "patch": "@@ -121,7 +121,7 @@\n #![feature(unboxed_closures)]\n #![feature(unicode)]\n #![feature(unsafe_destructor)]\n-#![feature(unsafe_no_drop_flag)]\n+#![feature(unsafe_no_drop_flag, filling_drop)]\n #![feature(macro_reexport)]\n #![feature(int_uint)]\n #![feature(unique)]"}]}