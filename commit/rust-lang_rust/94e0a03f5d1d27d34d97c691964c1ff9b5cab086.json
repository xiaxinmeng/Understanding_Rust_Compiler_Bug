{"sha": "94e0a03f5d1d27d34d97c691964c1ff9b5cab086", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0ZTBhMDNmNWQxZDI3ZDM0ZDk3YzY5MTk2NGMxZmY5YjVjYWIwODY=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2013-12-06T16:29:58Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2013-12-10T14:43:33Z"}, "message": "Add rustdoc documentation.", "tree": {"sha": "cea008159d1b872a89a720e7abcd36aee6b7b1d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cea008159d1b872a89a720e7abcd36aee6b7b1d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94e0a03f5d1d27d34d97c691964c1ff9b5cab086", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94e0a03f5d1d27d34d97c691964c1ff9b5cab086", "html_url": "https://github.com/rust-lang/rust/commit/94e0a03f5d1d27d34d97c691964c1ff9b5cab086", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94e0a03f5d1d27d34d97c691964c1ff9b5cab086/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "039a5933fb350dda5263cce824f7da8b86c473df", "url": "https://api.github.com/repos/rust-lang/rust/commits/039a5933fb350dda5263cce824f7da8b86c473df", "html_url": "https://github.com/rust-lang/rust/commit/039a5933fb350dda5263cce824f7da8b86c473df"}], "stats": {"total": 87, "additions": 84, "deletions": 3}, "files": [{"sha": "29ac2d2a2f3647433f82975ce951f506e93ff860", "filename": "doc/rustdoc.md", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/94e0a03f5d1d27d34d97c691964c1ff9b5cab086/doc%2Frustdoc.md", "raw_url": "https://github.com/rust-lang/rust/raw/94e0a03f5d1d27d34d97c691964c1ff9b5cab086/doc%2Frustdoc.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frustdoc.md?ref=94e0a03f5d1d27d34d97c691964c1ff9b5cab086", "patch": "@@ -0,0 +1,72 @@\n+% Rust Documentation\n+\n+`rustdoc` is the built-in tool for generating documentation. It integrates\n+with the compiler to provide accurate hyperlinking between usage of types and\n+their documentation. Furthermore, by not using a separate parser, it will\n+never reject your valid Rust code.\n+\n+# Creating Documentation\n+\n+Documenting Rust APIs is quite simple. To document a given item, we have \"doc\n+comments\":\n+\n+~~~\n+// the \"link\" crate attribute is currently required for rustdoc, but normally\n+// isn't needed.\n+#[link(name=\"universe\")];\n+#[crate_type=\"lib\"];\n+\n+//! Tools for dealing with universes (this is a doc comment, and is shown on\n+//! the crate index page. The ! makes it apply to the parent of the comment,\n+//! rather than what follows).\n+\n+/// Widgets are very common (this is a doc comment, and will show up on\n+/// Widget's documentation).\n+pub struct Widget {\n+\t/// All widgets have a purpose (this is a doc comment, and will show up\n+\t/// the field's documentation).\n+\tpurpose: ~str,\n+\t/// Humans are not allowed to understand some widgets\n+\tunderstandable: bool\n+}\n+\n+pub fn recalibrate() {\n+\t//! Recalibrate a pesky universe (this is also a doc comment, like above,\n+\t//! the documentation will be applied to the *parent* item, so\n+\t//! `recalibrate`).\n+\t/* ... */\n+}\n+~~~\n+\n+Then, one can run `rustdoc universe.rs`. By default, it generates a directory\n+called `doc`, with the documentation for `universe` being in\n+`doc/universe/index.html`. If you are using other crates with `extern mod`,\n+rustdoc will even link to them when you use their types, as long as their\n+documentation has already been generated by a previous run of rustdoc, or the\n+crate advertises that its documentation is hosted at a given URL.\n+\n+The generated output can be controlled with the `doc` crate attribute, which\n+is how the above advertisement works. An example from the `libstd`\n+documentation:\n+\n+~~~\n+#[doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk.png\",\n+      html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n+      html_root_url = \"http://static.rust-lang.org/doc/master\")];\n+~~~\n+\n+The `html_root_url` is the prefix that rustdoc will apply to any references to\n+that crate's types etc.\n+\n+rustdoc can also generate JSON, for consumption by other tools, with\n+`rustdoc --output-format json`, and also consume already-generated JSON with\n+`rustdoc --input-format json`.\n+\n+# Using the Documentation\n+\n+The web pages generated by rustdoc present the same logical heirarchy that one\n+writes a library with. Every kind of item (function, struct, etc) has its own\n+color, and one can always click on a colored type to jump to its\n+documentation. There is a search bar at the top, which is powered by some\n+javascript and a statically-generated search index. No special web server is\n+required for the search."}, {"sha": "f8e81ae8722c24eba275b33418f43a55072e4264", "filename": "doc/tutorial.md", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/94e0a03f5d1d27d34d97c691964c1ff9b5cab086/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/94e0a03f5d1d27d34d97c691964c1ff9b5cab086/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=94e0a03f5d1d27d34d97c691964c1ff9b5cab086", "patch": "@@ -872,9 +872,9 @@ A *destructor* is a function responsible for cleaning up the resources used by\n an object when it is no longer accessible. Destructors can be defined to handle\n the release of resources like files, sockets and heap memory.\n \n-Objects are never accessible after their destructor has been called, so there\n-are no dynamic failures from accessing freed resources. When a task fails, the\n-destructors of all objects in the task are called.\n+Objects are never accessible after their destructor has been called, so no\n+dynamic failures are possible from accessing freed resources. When a task\n+fails, destructors of all objects in the task are called.\n \n The `~` sigil represents a unique handle for a memory allocation on the heap:\n \n@@ -3254,6 +3254,7 @@ tutorials on individual topics.\n * [Containers and iterators][container]\n * [Error-handling and Conditions][conditions]\n * [Packaging up Rust code][rustpkg]\n+* [Documenting Rust code][rustdoc]\n \n There is further documentation on the [wiki], however those tend to be even\n more out of date than this document.\n@@ -3265,6 +3266,7 @@ more out of date than this document.\n [container]: tutorial-container.html\n [conditions]: tutorial-conditions.html\n [rustpkg]: tutorial-rustpkg.html\n+[rustdoc]: tutorial-rustdoc.html\n \n [wiki]: https://github.com/mozilla/rust/wiki/Docs\n [wiki-packages]: https://github.com/mozilla/rust/wiki/Doc-packages,-editors,-and-other-tools"}, {"sha": "43b7e9e30997a9fe19ade25061bf96112e1bf198", "filename": "mk/docs.mk", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/94e0a03f5d1d27d34d97c691964c1ff9b5cab086/mk%2Fdocs.mk", "raw_url": "https://github.com/rust-lang/rust/raw/94e0a03f5d1d27d34d97c691964c1ff9b5cab086/mk%2Fdocs.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fdocs.mk?ref=94e0a03f5d1d27d34d97c691964c1ff9b5cab086", "patch": "@@ -74,6 +74,13 @@ doc/rustpkg.html: rustpkg.md doc/version_info.html doc/rust.css \\\n \t$(Q)$(CFG_NODE) $(S)doc/prep.js --highlight $< | \\\n \t$(CFG_PANDOC) $(HTML_OPTS) --output=$@\n \n+DOCS += doc/rustdoc.html\n+doc/rustdoc.html: rustdoc.md doc/version_info.html doc/rust.css \\\n+\t\t\t\tdoc/favicon.inc\n+\t@$(call E, pandoc: $@)\n+\t$(Q)$(CFG_NODE) $(S)doc/prep.js --highlight $< | \\\n+\t$(CFG_PANDOC) $(HTML_OPTS) --output=$@\n+\n DOCS += doc/tutorial.html\n doc/tutorial.html: tutorial.md doc/version_info.html doc/rust.css \\\n \t\t\t\tdoc/favicon.inc"}]}