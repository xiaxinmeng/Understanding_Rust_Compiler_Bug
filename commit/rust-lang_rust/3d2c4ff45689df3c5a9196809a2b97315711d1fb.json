{"sha": "3d2c4ff45689df3c5a9196809a2b97315711d1fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkMmM0ZmY0NTY4OWRmM2M1YTkxOTY4MDlhMmI5NzMxNTcxMWQxZmI=", "commit": {"author": {"name": "Justin Ridgewell", "email": "justin@ridgewell.name", "date": "2019-05-30T03:33:35Z"}, "committer": {"name": "Justin Ridgewell", "email": "justin@ridgewell.name", "date": "2019-05-30T03:52:05Z"}, "message": "Optimize pointer alignment in utf8 validation\n\nThis uses (and reuses) the u8 arrays's inherent block alignment when checking whether the current index is block aligned.\n\nI initially thought that this would just move the expensive `align_offset` call out of the while loop and replace it with a subtraction and bitwise AND. But it appears this optimizes much better, too...\n\nbefore: https://rust.godbolt.org/z/WIPvWl\nafter: https://rust.godbolt.org/z/-jBPoW\n\nhttps://github.com/jridgewell/faster-from_utf8/tree/pointer-alignment\n\n```\ntest from_utf8_2_bytes_fast      ... bench:         310 ns/iter (+/- 42) = 1290 MB/s\ntest from_utf8_2_bytes_regular   ... bench:         309 ns/iter (+/- 24) = 1294 MB/s\n\ntest from_utf8_3_bytes_fast      ... bench:       1,027 ns/iter (+/- 62) = 1168 MB/s\ntest from_utf8_3_bytes_regular   ... bench:       1,513 ns/iter (+/- 611) = 793 MB/s\n\ntest from_utf8_4_bytes_fast      ... bench:       1,788 ns/iter (+/- 26) = 1342 MB/s\ntest from_utf8_4_bytes_regular   ... bench:       1,907 ns/iter (+/- 181) = 1258 MB/s\n\ntest from_utf8_all_bytes_fast    ... bench:       3,463 ns/iter (+/- 97) = 1155 MB/s\ntest from_utf8_all_bytes_regular ... bench:       4,083 ns/iter (+/- 89) = 979 MB/s\n\ntest from_utf8_ascii_fast        ... bench:          88 ns/iter (+/- 4) = 28988 MB/s\ntest from_utf8_ascii_regular     ... bench:          88 ns/iter (+/- 8) = 28988 MB/s\n\ntest from_utf8_cyr_fast          ... bench:       7,707 ns/iter (+/- 531) = 665 MB/s\ntest from_utf8_cyr_regular       ... bench:       8,202 ns/iter (+/- 135) = 625 MB/s\n\ntest from_utf8_enwik8_fast       ... bench:   1,135,756 ns/iter (+/- 84,450) = 8804 MB/s\ntest from_utf8_enwik8_regular    ... bench:   1,145,468 ns/iter (+/- 79,601) = 8730 MB/s\n\ntest from_utf8_jawik10_fast      ... bench:  12,723,844 ns/iter (+/- 473,247) = 785 MB/s\ntest from_utf8_jawik10_regular   ... bench:  13,384,596 ns/iter (+/- 666,997) = 747 MB/s\n\ntest from_utf8_mixed_fast        ... bench:       2,321 ns/iter (+/- 123) = 2081 MB/s\ntest from_utf8_mixed_regular     ... bench:       2,702 ns/iter (+/- 408) = 1788 MB/s\n\ntest from_utf8_mostlyasc_fast    ... bench:         249 ns/iter (+/- 10) = 14666 MB/s\ntest from_utf8_mostlyasc_regular ... bench:         276 ns/iter (+/- 5) = 13231 MB/s\n```", "tree": {"sha": "1facaee1036ee6b78aec7957dca9e10378b86b57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1facaee1036ee6b78aec7957dca9e10378b86b57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d2c4ff45689df3c5a9196809a2b97315711d1fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d2c4ff45689df3c5a9196809a2b97315711d1fb", "html_url": "https://github.com/rust-lang/rust/commit/3d2c4ff45689df3c5a9196809a2b97315711d1fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d2c4ff45689df3c5a9196809a2b97315711d1fb/comments", "author": {"login": "jridgewell", "id": 112982, "node_id": "MDQ6VXNlcjExMjk4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/112982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jridgewell", "html_url": "https://github.com/jridgewell", "followers_url": "https://api.github.com/users/jridgewell/followers", "following_url": "https://api.github.com/users/jridgewell/following{/other_user}", "gists_url": "https://api.github.com/users/jridgewell/gists{/gist_id}", "starred_url": "https://api.github.com/users/jridgewell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jridgewell/subscriptions", "organizations_url": "https://api.github.com/users/jridgewell/orgs", "repos_url": "https://api.github.com/users/jridgewell/repos", "events_url": "https://api.github.com/users/jridgewell/events{/privacy}", "received_events_url": "https://api.github.com/users/jridgewell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jridgewell", "id": 112982, "node_id": "MDQ6VXNlcjExMjk4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/112982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jridgewell", "html_url": "https://github.com/jridgewell", "followers_url": "https://api.github.com/users/jridgewell/followers", "following_url": "https://api.github.com/users/jridgewell/following{/other_user}", "gists_url": "https://api.github.com/users/jridgewell/gists{/gist_id}", "starred_url": "https://api.github.com/users/jridgewell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jridgewell/subscriptions", "organizations_url": "https://api.github.com/users/jridgewell/orgs", "repos_url": "https://api.github.com/users/jridgewell/repos", "events_url": "https://api.github.com/users/jridgewell/events{/privacy}", "received_events_url": "https://api.github.com/users/jridgewell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "413790186c65e782e2c0183e933686f7bf35e158", "url": "https://api.github.com/repos/rust-lang/rust/commits/413790186c65e782e2c0183e933686f7bf35e158", "html_url": "https://github.com/rust-lang/rust/commit/413790186c65e782e2c0183e933686f7bf35e158"}], "stats": {"total": 9, "additions": 3, "deletions": 6}, "files": [{"sha": "277dc6ff4a8ac7971ed097057f6e805bcc23f019", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3d2c4ff45689df3c5a9196809a2b97315711d1fb/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d2c4ff45689df3c5a9196809a2b97315711d1fb/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=3d2c4ff45689df3c5a9196809a2b97315711d1fb", "patch": "@@ -1417,6 +1417,7 @@ fn run_utf8_validation(v: &[u8]) -> Result<(), Utf8Error> {\n     let usize_bytes = mem::size_of::<usize>();\n     let ascii_block_size = 2 * usize_bytes;\n     let blocks_end = if len >= ascii_block_size { len - ascii_block_size + 1 } else { 0 };\n+    let align = v.as_ptr().align_offset(usize_bytes);\n \n     while index < len {\n         let old_offset = index;\n@@ -1496,12 +1497,8 @@ fn run_utf8_validation(v: &[u8]) -> Result<(), Utf8Error> {\n             // Ascii case, try to skip forward quickly.\n             // When the pointer is aligned, read 2 words of data per iteration\n             // until we find a word containing a non-ascii byte.\n-            let ptr = v.as_ptr();\n-            let align = unsafe {\n-                // the offset is safe, because `index` is guaranteed inbounds\n-                ptr.add(index).align_offset(usize_bytes)\n-            };\n-            if align == 0 {\n+            if align.wrapping_sub(index) % usize_bytes == 0 {\n+                let ptr = v.as_ptr();\n                 while index < blocks_end {\n                     unsafe {\n                         let block = ptr.add(index) as *const usize;"}]}