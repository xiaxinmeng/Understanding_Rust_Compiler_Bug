{"sha": "52e520e902cecc579910e6cabe1658720bfab132", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyZTUyMGU5MDJjZWNjNTc5OTEwZTZjYWJlMTY1ODcyMGJmYWIxMzI=", "commit": {"author": {"name": "Ruud van Asseldonk", "email": "dev@veniogames.com", "date": "2015-04-29T22:56:33Z"}, "committer": {"name": "Ruud van Asseldonk", "email": "dev@veniogames.com", "date": "2015-04-29T22:56:33Z"}, "message": "rustc: Improve misleading error message for E0282\n\nThe error can also occur in cases where a type annotation will not help.", "tree": {"sha": "b50db8d19a27b9114fb7de7a03bd423b46eb3025", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b50db8d19a27b9114fb7de7a03bd423b46eb3025"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52e520e902cecc579910e6cabe1658720bfab132", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52e520e902cecc579910e6cabe1658720bfab132", "html_url": "https://github.com/rust-lang/rust/commit/52e520e902cecc579910e6cabe1658720bfab132", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52e520e902cecc579910e6cabe1658720bfab132/comments", "author": {"login": "ruuda", "id": 506953, "node_id": "MDQ6VXNlcjUwNjk1Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/506953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruuda", "html_url": "https://github.com/ruuda", "followers_url": "https://api.github.com/users/ruuda/followers", "following_url": "https://api.github.com/users/ruuda/following{/other_user}", "gists_url": "https://api.github.com/users/ruuda/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruuda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruuda/subscriptions", "organizations_url": "https://api.github.com/users/ruuda/orgs", "repos_url": "https://api.github.com/users/ruuda/repos", "events_url": "https://api.github.com/users/ruuda/events{/privacy}", "received_events_url": "https://api.github.com/users/ruuda/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ruuda", "id": 506953, "node_id": "MDQ6VXNlcjUwNjk1Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/506953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruuda", "html_url": "https://github.com/ruuda", "followers_url": "https://api.github.com/users/ruuda/followers", "following_url": "https://api.github.com/users/ruuda/following{/other_user}", "gists_url": "https://api.github.com/users/ruuda/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruuda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruuda/subscriptions", "organizations_url": "https://api.github.com/users/ruuda/orgs", "repos_url": "https://api.github.com/users/ruuda/repos", "events_url": "https://api.github.com/users/ruuda/events{/privacy}", "received_events_url": "https://api.github.com/users/ruuda/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "551a74dddd84cf01440ee84148ebd18bc68bd7c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/551a74dddd84cf01440ee84148ebd18bc68bd7c8", "html_url": "https://github.com/rust-lang/rust/commit/551a74dddd84cf01440ee84148ebd18bc68bd7c8"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "9f87a9ad65f36b7a6d620c5e95aeba4783451bf5", "filename": "src/librustc/middle/traits/error_reporting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/52e520e902cecc579910e6cabe1658720bfab132/src%2Flibrustc%2Fmiddle%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52e520e902cecc579910e6cabe1658720bfab132/src%2Flibrustc%2Fmiddle%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Ferror_reporting.rs?ref=52e520e902cecc579910e6cabe1658720bfab132", "patch": "@@ -290,7 +290,7 @@ pub fn maybe_report_ambiguity<'a, 'tcx>(infcx: &InferCtxt<'a, 'tcx>,\n                     {\n                         span_err!(infcx.tcx.sess, obligation.cause.span, E0282,\n                                 \"unable to infer enough type information about `{}`; \\\n-                                 type annotations required\",\n+                                 type annotations or generic parameter binding required\",\n                                 self_ty.user_string(infcx.tcx));\n                     } else {\n                         span_err!(infcx.tcx.sess, obligation.cause.span, E0283,"}]}