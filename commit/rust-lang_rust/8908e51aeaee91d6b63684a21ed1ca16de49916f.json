{"sha": "8908e51aeaee91d6b63684a21ed1ca16de49916f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5MDhlNTFhZWFlZTkxZDZiNjM2ODRhMjFlZDFjYTE2ZGU0OTkxNmY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-07T11:24:03Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-07T11:24:03Z"}, "message": "full precedence", "tree": {"sha": "30fa7b9ac02c7326d3c7fbd192ebe2ef46b82d58", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30fa7b9ac02c7326d3c7fbd192ebe2ef46b82d58"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8908e51aeaee91d6b63684a21ed1ca16de49916f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8908e51aeaee91d6b63684a21ed1ca16de49916f", "html_url": "https://github.com/rust-lang/rust/commit/8908e51aeaee91d6b63684a21ed1ca16de49916f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8908e51aeaee91d6b63684a21ed1ca16de49916f/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "498098a5d968f06f08fa093f1fd5a43a9a61ecf3", "url": "https://api.github.com/repos/rust-lang/rust/commits/498098a5d968f06f08fa093f1fd5a43a9a61ecf3", "html_url": "https://github.com/rust-lang/rust/commit/498098a5d968f06f08fa093f1fd5a43a9a61ecf3"}], "stats": {"total": 704, "additions": 358, "deletions": 346}, "files": [{"sha": "0620a8b8c32b7832e8bf85cc7ba84d5e12199081", "filename": "src/grammar.ron", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8908e51aeaee91d6b63684a21ed1ca16de49916f/src%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/8908e51aeaee91d6b63684a21ed1ca16de49916f/src%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar.ron?ref=8908e51aeaee91d6b63684a21ed1ca16de49916f", "patch": "@@ -43,6 +43,10 @@ Grammar(\n         [\"-=\", \"MINUSEQ\"],\n         [\"&&\", \"AMPAMP\"],\n         [\"||\", \"PIPEPIPE\"],\n+        [\"<<\", \"SHL\"],\n+        [\">>\", \"SHR\"],\n+        [\"<<=\", \"SHLEQ\"],\n+        [\">>=\", \"SHREQ\"],\n     ],\n     keywords: [\n         \"use\",\n@@ -168,6 +172,7 @@ Grammar(\n         \"REF_EXPR\",\n         \"DEREF_EXPR\",\n         \"NOT_EXPR\",\n+        \"NEG_EXPR\",\n \n         \"RANGE_EXPR\", // just weird\n         \"BIN_EXPR\","}, {"sha": "5b722814612d93dfb31373f3714b924b802de348", "filename": "src/grammar/expressions/mod.rs", "status": "modified", "additions": 30, "deletions": 26, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/8908e51aeaee91d6b63684a21ed1ca16de49916f/src%2Fgrammar%2Fexpressions%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8908e51aeaee91d6b63684a21ed1ca16de49916f/src%2Fgrammar%2Fexpressions%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fexpressions%2Fmod.rs?ref=8908e51aeaee91d6b63684a21ed1ca16de49916f", "patch": "@@ -3,7 +3,7 @@ mod atom;\n use super::*;\n pub(super) use self::atom::literal;\n \n-const EXPR_FIRST: TokenSet = UNARY_EXPR_FIRST;\n+const EXPR_FIRST: TokenSet = LHS_FIRST;\n \n pub(super) fn expr(p: &mut Parser) {\n     let r = Restrictions { forbid_structs: false };\n@@ -38,33 +38,19 @@ enum Op {\n     Composite(SyntaxKind, u8),\n }\n \n-// test expr_binding_power\n-// fn foo() {\n-//     1 + 2 * 3 == 1 * 2 + 3;\n-//     *x = 1 + 1;\n-// }\n-\n-// test range_binding_power\n-// fn foo() {\n-//     .. 1 + 1;\n-//     .. z = 2;\n-//     x = false .. 1 == 1;\n-// }\n-\n-// test compound_ops\n-// fn foo() {\n-//     x += 1;\n-//     1 + 1 <= 2 * 3;\n-//     z -= 3 >= 0;\n-//     true || true && false;\n-// }\n fn current_op(p: &Parser) -> (u8, Op) {\n     if p.at_compound2(PLUS, EQ) {\n         return (1, Op::Composite(PLUSEQ, 2));\n     }\n     if p.at_compound2(MINUS, EQ) {\n         return (1, Op::Composite(MINUSEQ, 2));\n     }\n+    if p.at_compound3(L_ANGLE, L_ANGLE, EQ) {\n+        return (1, Op::Composite(SHLEQ, 3));\n+    }\n+    if p.at_compound3(R_ANGLE, R_ANGLE, EQ) {\n+        return (1, Op::Composite(SHREQ, 3));\n+    }\n     if p.at_compound2(PIPE, PIPE) {\n         return (3, Op::Composite(PIPEPIPE, 2));\n     }\n@@ -77,13 +63,22 @@ fn current_op(p: &Parser) -> (u8, Op) {\n     if p.at_compound2(R_ANGLE, EQ) {\n         return (5, Op::Composite(GTEQ, 2));\n     }\n+    if p.at_compound2(L_ANGLE, L_ANGLE) {\n+        return (9, Op::Composite(SHL, 2));\n+    }\n+    if p.at_compound2(R_ANGLE, R_ANGLE) {\n+        return (9, Op::Composite(SHR, 2));\n+    }\n \n     let bp = match p.current() {\n         EQ => 1,\n         DOTDOT => 2,\n         EQEQ | NEQ => 5,\n-        MINUS | PLUS => 6,\n-        STAR | SLASH => 7,\n+        PIPE => 6,\n+        CARET => 7,\n+        AMP => 8,\n+        MINUS | PLUS => 10,\n+        STAR | SLASH | PERCENT => 11,\n         _ => 0,\n     };\n     (bp, Op::Simple)\n@@ -107,13 +102,13 @@ fn expr_bp(p: &mut Parser, r: Restrictions, bp: u8) {\n                 p.bump_compound(kind, n);\n             }\n         }\n-        lhs = bin_expr(p, r, lhs, op_bp);\n+        lhs = bin_expr(p, r, lhs, op_bp + 1);\n     }\n }\n \n-const UNARY_EXPR_FIRST: TokenSet =\n+const LHS_FIRST: TokenSet =\n     token_set_union![\n-        token_set![AMP, STAR, EXCL],\n+        token_set![AMP, STAR, EXCL, DOTDOT, MINUS],\n         atom::ATOM_EXPR_FIRST,\n     ];\n \n@@ -149,6 +144,15 @@ fn lhs(p: &mut Parser, r: Restrictions) -> Option<CompletedMarker> {\n             p.bump();\n             NOT_EXPR\n         }\n+        // test neg_expr\n+        // fn foo() {\n+        //     --1;\n+        // }\n+        MINUS => {\n+            m = p.start();\n+            p.bump();\n+            NEG_EXPR\n+        }\n         DOTDOT => {\n             m = p.start();\n             p.bump();"}, {"sha": "c739b13210577d70026892cf88968bc0616fbe4e", "filename": "src/parser_api.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8908e51aeaee91d6b63684a21ed1ca16de49916f/src%2Fparser_api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8908e51aeaee91d6b63684a21ed1ca16de49916f/src%2Fparser_api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser_api.rs?ref=8908e51aeaee91d6b63684a21ed1ca16de49916f", "patch": "@@ -62,6 +62,10 @@ impl<'t> Parser<'t> {\n         self.0.at_compound2(c1, c2)\n     }\n \n+    pub(crate) fn at_compound3(&self, c1: SyntaxKind, c2: SyntaxKind, c3: SyntaxKind) -> bool {\n+        self.0.at_compound3(c1, c2, c3)\n+    }\n+\n     /// Checks if the current token is contextual keyword with text `t`.\n     pub(crate) fn at_contextual_kw(&self, t: &str) -> bool {\n         self.0.at_kw(t)"}, {"sha": "06c16cdb46153554e5c19a7c0083cee02180f7f0", "filename": "src/parser_impl/mod.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8908e51aeaee91d6b63684a21ed1ca16de49916f/src%2Fparser_impl%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8908e51aeaee91d6b63684a21ed1ca16de49916f/src%2Fparser_impl%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser_impl%2Fmod.rs?ref=8908e51aeaee91d6b63684a21ed1ca16de49916f", "patch": "@@ -70,6 +70,12 @@ impl<'t> ParserImpl<'t> {\n             && self.inp.start(self.pos + 1) == self.inp.start(self.pos) + self.inp.len(self.pos)\n     }\n \n+    pub(super) fn at_compound3(&self, c1: SyntaxKind, c2: SyntaxKind, c3: SyntaxKind) -> bool {\n+        self.inp.kind(self.pos) == c1 && self.inp.kind(self.pos + 1) == c2 && self.inp.kind(self.pos + 2) == c3\n+            && self.inp.start(self.pos + 1) == self.inp.start(self.pos) + self.inp.len(self.pos)\n+            && self.inp.start(self.pos + 2) == self.inp.start(self.pos + 1) + self.inp.len(self.pos + 1)\n+    }\n+\n     pub(super) fn nth(&self, n: u32) -> SyntaxKind {\n         self.inp.kind(self.pos + n)\n     }"}, {"sha": "db8c2000449c5f0f68357386c29e01eee5fc4274", "filename": "src/syntax_kinds/generated.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8908e51aeaee91d6b63684a21ed1ca16de49916f/src%2Fsyntax_kinds%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8908e51aeaee91d6b63684a21ed1ca16de49916f/src%2Fsyntax_kinds%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsyntax_kinds%2Fgenerated.rs?ref=8908e51aeaee91d6b63684a21ed1ca16de49916f", "patch": "@@ -46,6 +46,10 @@ pub enum SyntaxKind {\n     MINUSEQ,\n     AMPAMP,\n     PIPEPIPE,\n+    SHL,\n+    SHR,\n+    SHLEQ,\n+    SHREQ,\n     USE_KW,\n     FN_KW,\n     STRUCT_KW,\n@@ -154,6 +158,7 @@ pub enum SyntaxKind {\n     REF_EXPR,\n     DEREF_EXPR,\n     NOT_EXPR,\n+    NEG_EXPR,\n     RANGE_EXPR,\n     BIN_EXPR,\n     EXTERN_BLOCK_EXPR,\n@@ -280,6 +285,10 @@ impl SyntaxKind {\n             MINUSEQ => &SyntaxInfo { name: \"MINUSEQ\" },\n             AMPAMP => &SyntaxInfo { name: \"AMPAMP\" },\n             PIPEPIPE => &SyntaxInfo { name: \"PIPEPIPE\" },\n+            SHL => &SyntaxInfo { name: \"SHL\" },\n+            SHR => &SyntaxInfo { name: \"SHR\" },\n+            SHLEQ => &SyntaxInfo { name: \"SHLEQ\" },\n+            SHREQ => &SyntaxInfo { name: \"SHREQ\" },\n             USE_KW => &SyntaxInfo { name: \"USE_KW\" },\n             FN_KW => &SyntaxInfo { name: \"FN_KW\" },\n             STRUCT_KW => &SyntaxInfo { name: \"STRUCT_KW\" },\n@@ -388,6 +397,7 @@ impl SyntaxKind {\n             REF_EXPR => &SyntaxInfo { name: \"REF_EXPR\" },\n             DEREF_EXPR => &SyntaxInfo { name: \"DEREF_EXPR\" },\n             NOT_EXPR => &SyntaxInfo { name: \"NOT_EXPR\" },\n+            NEG_EXPR => &SyntaxInfo { name: \"NEG_EXPR\" },\n             RANGE_EXPR => &SyntaxInfo { name: \"RANGE_EXPR\" },\n             BIN_EXPR => &SyntaxInfo { name: \"BIN_EXPR\" },\n             EXTERN_BLOCK_EXPR => &SyntaxInfo { name: \"EXTERN_BLOCK_EXPR\" },\n@@ -534,6 +544,10 @@ impl SyntaxKind {\n             MINUSEQ => \"-=\",\n             AMPAMP => \"&&\",\n             PIPEPIPE => \"||\",\n+            SHL => \"<<\",\n+            SHR => \">>\",\n+            SHLEQ => \"<<=\",\n+            SHREQ => \">>=\",\n \n             USE_KW => \"use\",\n             FN_KW => \"fn\","}, {"sha": "87afb036eeebc33ad575fc269bae7c4890a0756b", "filename": "tests/data/parser/inline/0074_expr_binding_power.rs", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/498098a5d968f06f08fa093f1fd5a43a9a61ecf3/tests%2Fdata%2Fparser%2Finline%2F0074_expr_binding_power.rs", "raw_url": "https://github.com/rust-lang/rust/raw/498098a5d968f06f08fa093f1fd5a43a9a61ecf3/tests%2Fdata%2Fparser%2Finline%2F0074_expr_binding_power.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0074_expr_binding_power.rs?ref=498098a5d968f06f08fa093f1fd5a43a9a61ecf3", "patch": "@@ -1,4 +0,0 @@\n-fn foo() {\n-    1 + 2 * 3 == 1 * 2 + 3;\n-    *x = 1 + 1;\n-}"}, {"sha": "fc0831d1891cdae0e85b9d2eff97760ab0b5b499", "filename": "tests/data/parser/inline/0074_expr_binding_power.txt", "status": "removed", "additions": 0, "deletions": 72, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/498098a5d968f06f08fa093f1fd5a43a9a61ecf3/tests%2Fdata%2Fparser%2Finline%2F0074_expr_binding_power.txt", "raw_url": "https://github.com/rust-lang/rust/raw/498098a5d968f06f08fa093f1fd5a43a9a61ecf3/tests%2Fdata%2Fparser%2Finline%2F0074_expr_binding_power.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0074_expr_binding_power.txt?ref=498098a5d968f06f08fa093f1fd5a43a9a61ecf3", "patch": "@@ -1,72 +0,0 @@\n-FILE@[0; 57)\n-  FN_ITEM@[0; 56)\n-    FN_KW@[0; 2)\n-    WHITESPACE@[2; 3)\n-    NAME@[3; 6)\n-      IDENT@[3; 6) \"foo\"\n-    PARAM_LIST@[6; 8)\n-      L_PAREN@[6; 7)\n-      R_PAREN@[7; 8)\n-    WHITESPACE@[8; 9)\n-    BLOCK_EXPR@[9; 56)\n-      L_CURLY@[9; 10)\n-      WHITESPACE@[10; 15)\n-      EXPR_STMT@[15; 38)\n-        BIN_EXPR@[15; 37)\n-          BIN_EXPR@[15; 24)\n-            LITERAL@[15; 16)\n-              INT_NUMBER@[15; 16) \"1\"\n-            WHITESPACE@[16; 17)\n-            PLUS@[17; 18)\n-            WHITESPACE@[18; 19)\n-            BIN_EXPR@[19; 24)\n-              LITERAL@[19; 20)\n-                INT_NUMBER@[19; 20) \"2\"\n-              WHITESPACE@[20; 21)\n-              STAR@[21; 22)\n-              WHITESPACE@[22; 23)\n-              LITERAL@[23; 24)\n-                INT_NUMBER@[23; 24) \"3\"\n-          WHITESPACE@[24; 25)\n-          EQEQ@[25; 27)\n-          WHITESPACE@[27; 28)\n-          BIN_EXPR@[28; 37)\n-            BIN_EXPR@[28; 33)\n-              LITERAL@[28; 29)\n-                INT_NUMBER@[28; 29) \"1\"\n-              WHITESPACE@[29; 30)\n-              STAR@[30; 31)\n-              WHITESPACE@[31; 32)\n-              LITERAL@[32; 33)\n-                INT_NUMBER@[32; 33) \"2\"\n-            WHITESPACE@[33; 34)\n-            PLUS@[34; 35)\n-            WHITESPACE@[35; 36)\n-            LITERAL@[36; 37)\n-              INT_NUMBER@[36; 37) \"3\"\n-        SEMI@[37; 38)\n-      WHITESPACE@[38; 43)\n-      EXPR_STMT@[43; 54)\n-        BIN_EXPR@[43; 53)\n-          DEREF_EXPR@[43; 45)\n-            STAR@[43; 44)\n-            PATH_EXPR@[44; 45)\n-              PATH@[44; 45)\n-                PATH_SEGMENT@[44; 45)\n-                  NAME_REF@[44; 45)\n-                    IDENT@[44; 45) \"x\"\n-          WHITESPACE@[45; 46)\n-          EQ@[46; 47)\n-          WHITESPACE@[47; 48)\n-          BIN_EXPR@[48; 53)\n-            LITERAL@[48; 49)\n-              INT_NUMBER@[48; 49) \"1\"\n-            WHITESPACE@[49; 50)\n-            PLUS@[50; 51)\n-            WHITESPACE@[51; 52)\n-            LITERAL@[52; 53)\n-              INT_NUMBER@[52; 53) \"1\"\n-        SEMI@[53; 54)\n-      WHITESPACE@[54; 55)\n-      R_CURLY@[55; 56)\n-  WHITESPACE@[56; 57)"}, {"sha": "6eaed8c75e4ed0d70feb990a40100fbab6f28d27", "filename": "tests/data/parser/inline/0079_compound_ops.txt", "status": "removed", "additions": 0, "deletions": 72, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/498098a5d968f06f08fa093f1fd5a43a9a61ecf3/tests%2Fdata%2Fparser%2Finline%2F0079_compound_ops.txt", "raw_url": "https://github.com/rust-lang/rust/raw/498098a5d968f06f08fa093f1fd5a43a9a61ecf3/tests%2Fdata%2Fparser%2Finline%2F0079_compound_ops.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0079_compound_ops.txt?ref=498098a5d968f06f08fa093f1fd5a43a9a61ecf3", "patch": "@@ -1,72 +0,0 @@\n-FILE@[0; 62)\n-  FN_ITEM@[0; 62)\n-    FN_KW@[0; 2)\n-    NAME@[2; 6)\n-      WHITESPACE@[2; 3)\n-      IDENT@[3; 6) \"foo\"\n-    PARAM_LIST@[6; 9)\n-      L_PAREN@[6; 7)\n-      R_PAREN@[7; 8)\n-      WHITESPACE@[8; 9)\n-    BLOCK_EXPR@[9; 62)\n-      L_CURLY@[9; 10)\n-      EXPR_STMT@[10; 27)\n-        BIN_EXPR@[10; 21)\n-          PATH_EXPR@[10; 17)\n-            PATH@[10; 17)\n-              PATH_SEGMENT@[10; 17)\n-                NAME_REF@[10; 17)\n-                  WHITESPACE@[10; 15)\n-                  IDENT@[15; 16) \"x\"\n-                  WHITESPACE@[16; 17)\n-          PLUSEQ@[17; 19)\n-          LITERAL@[19; 21)\n-            WHITESPACE@[19; 20)\n-            INT_NUMBER@[20; 21) \"1\"\n-        SEMI@[21; 22)\n-        WHITESPACE@[22; 27)\n-      EXPR_STMT@[27; 47)\n-        BIN_EXPR@[27; 41)\n-          BIN_EXPR@[27; 33)\n-            LITERAL@[27; 29)\n-              INT_NUMBER@[27; 28) \"1\"\n-              WHITESPACE@[28; 29)\n-            PLUS@[29; 30)\n-            LITERAL@[30; 33)\n-              WHITESPACE@[30; 31)\n-              INT_NUMBER@[31; 32) \"1\"\n-              WHITESPACE@[32; 33)\n-          LTEQ@[33; 35)\n-          BIN_EXPR@[35; 41)\n-            LITERAL@[35; 38)\n-              WHITESPACE@[35; 36)\n-              INT_NUMBER@[36; 37) \"2\"\n-              WHITESPACE@[37; 38)\n-            STAR@[38; 39)\n-            LITERAL@[39; 41)\n-              WHITESPACE@[39; 40)\n-              INT_NUMBER@[40; 41) \"3\"\n-        SEMI@[41; 42)\n-        WHITESPACE@[42; 47)\n-      EXPR_STMT@[47; 60)\n-        BIN_EXPR@[47; 58)\n-          PATH_EXPR@[47; 49)\n-            PATH@[47; 49)\n-              PATH_SEGMENT@[47; 49)\n-                NAME_REF@[47; 49)\n-                  IDENT@[47; 48) \"z\"\n-                  WHITESPACE@[48; 49)\n-          MINUSEQ@[49; 51)\n-          BIN_EXPR@[51; 58)\n-            LITERAL@[51; 54)\n-              WHITESPACE@[51; 52)\n-              INT_NUMBER@[52; 53) \"3\"\n-              WHITESPACE@[53; 54)\n-            GTEQ@[54; 56)\n-            LITERAL@[56; 58)\n-              WHITESPACE@[56; 57)\n-              INT_NUMBER@[57; 58) \"0\"\n-        SEMI@[58; 59)\n-        WHITESPACE@[59; 60)\n-      R_CURLY@[60; 61)\n-      WHITESPACE@[61; 62)"}, {"sha": "259ec31e273631d1d558b77b9972aa6ba67bee2d", "filename": "tests/data/parser/inline/0082_range_binding_power.rs", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/498098a5d968f06f08fa093f1fd5a43a9a61ecf3/tests%2Fdata%2Fparser%2Finline%2F0082_range_binding_power.rs", "raw_url": "https://github.com/rust-lang/rust/raw/498098a5d968f06f08fa093f1fd5a43a9a61ecf3/tests%2Fdata%2Fparser%2Finline%2F0082_range_binding_power.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0082_range_binding_power.rs?ref=498098a5d968f06f08fa093f1fd5a43a9a61ecf3", "patch": "@@ -1,5 +0,0 @@\n-fn foo() {\n-    .. 1 + 1;\n-    .. z = 2;\n-    x = false .. 1 == 1;\n-}"}, {"sha": "72666d8f83b77d43f19a12f8401e5b906ece1ab6", "filename": "tests/data/parser/inline/0082_range_binding_power.txt", "status": "removed", "additions": 0, "deletions": 72, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/498098a5d968f06f08fa093f1fd5a43a9a61ecf3/tests%2Fdata%2Fparser%2Finline%2F0082_range_binding_power.txt", "raw_url": "https://github.com/rust-lang/rust/raw/498098a5d968f06f08fa093f1fd5a43a9a61ecf3/tests%2Fdata%2Fparser%2Finline%2F0082_range_binding_power.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0082_range_binding_power.txt?ref=498098a5d968f06f08fa093f1fd5a43a9a61ecf3", "patch": "@@ -1,72 +0,0 @@\n-FILE@[0; 66)\n-  FN_ITEM@[0; 65)\n-    FN_KW@[0; 2)\n-    WHITESPACE@[2; 3)\n-    NAME@[3; 6)\n-      IDENT@[3; 6) \"foo\"\n-    PARAM_LIST@[6; 8)\n-      L_PAREN@[6; 7)\n-      R_PAREN@[7; 8)\n-    WHITESPACE@[8; 9)\n-    BLOCK_EXPR@[9; 65)\n-      L_CURLY@[9; 10)\n-      WHITESPACE@[10; 15)\n-      EXPR_STMT@[15; 24)\n-        RANGE_EXPR@[15; 23)\n-          DOTDOT@[15; 17)\n-          WHITESPACE@[17; 18)\n-          BIN_EXPR@[18; 23)\n-            LITERAL@[18; 19)\n-              INT_NUMBER@[18; 19) \"1\"\n-            WHITESPACE@[19; 20)\n-            PLUS@[20; 21)\n-            WHITESPACE@[21; 22)\n-            LITERAL@[22; 23)\n-              INT_NUMBER@[22; 23) \"1\"\n-        SEMI@[23; 24)\n-      WHITESPACE@[24; 29)\n-      EXPR_STMT@[29; 38)\n-        BIN_EXPR@[29; 37)\n-          RANGE_EXPR@[29; 33)\n-            DOTDOT@[29; 31)\n-            WHITESPACE@[31; 32)\n-            PATH_EXPR@[32; 33)\n-              PATH@[32; 33)\n-                PATH_SEGMENT@[32; 33)\n-                  NAME_REF@[32; 33)\n-                    IDENT@[32; 33) \"z\"\n-          WHITESPACE@[33; 34)\n-          EQ@[34; 35)\n-          WHITESPACE@[35; 36)\n-          LITERAL@[36; 37)\n-            INT_NUMBER@[36; 37) \"2\"\n-        SEMI@[37; 38)\n-      WHITESPACE@[38; 43)\n-      EXPR_STMT@[43; 63)\n-        BIN_EXPR@[43; 62)\n-          PATH_EXPR@[43; 44)\n-            PATH@[43; 44)\n-              PATH_SEGMENT@[43; 44)\n-                NAME_REF@[43; 44)\n-                  IDENT@[43; 44) \"x\"\n-          WHITESPACE@[44; 45)\n-          EQ@[45; 46)\n-          WHITESPACE@[46; 47)\n-          BIN_EXPR@[47; 62)\n-            LITERAL@[47; 52)\n-              FALSE_KW@[47; 52)\n-            WHITESPACE@[52; 53)\n-            DOTDOT@[53; 55)\n-            WHITESPACE@[55; 56)\n-            BIN_EXPR@[56; 62)\n-              LITERAL@[56; 57)\n-                INT_NUMBER@[56; 57) \"1\"\n-              WHITESPACE@[57; 58)\n-              EQEQ@[58; 60)\n-              WHITESPACE@[60; 61)\n-              LITERAL@[61; 62)\n-                INT_NUMBER@[61; 62) \"1\"\n-        SEMI@[62; 63)\n-      WHITESPACE@[63; 64)\n-      R_CURLY@[64; 65)\n-  WHITESPACE@[65; 66)"}, {"sha": "04b1764f19804ac914639473dedd175e56e229d2", "filename": "tests/data/parser/inline/0084_compound_ops.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/498098a5d968f06f08fa093f1fd5a43a9a61ecf3/tests%2Fdata%2Fparser%2Finline%2F0084_compound_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/498098a5d968f06f08fa093f1fd5a43a9a61ecf3/tests%2Fdata%2Fparser%2Finline%2F0084_compound_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0084_compound_ops.rs?ref=498098a5d968f06f08fa093f1fd5a43a9a61ecf3", "patch": "@@ -1,6 +0,0 @@\n-fn foo() {\n-    x += 1;\n-    1 + 1 <= 2 * 3;\n-    z -= 3 >= 0;\n-    true || true && false;\n-}"}, {"sha": "d51f638a2dbec551065fd3a1982132e48d74aaf7", "filename": "tests/data/parser/inline/0084_compound_ops.txt", "status": "removed", "additions": 0, "deletions": 89, "changes": 89, "blob_url": "https://github.com/rust-lang/rust/blob/498098a5d968f06f08fa093f1fd5a43a9a61ecf3/tests%2Fdata%2Fparser%2Finline%2F0084_compound_ops.txt", "raw_url": "https://github.com/rust-lang/rust/raw/498098a5d968f06f08fa093f1fd5a43a9a61ecf3/tests%2Fdata%2Fparser%2Finline%2F0084_compound_ops.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0084_compound_ops.txt?ref=498098a5d968f06f08fa093f1fd5a43a9a61ecf3", "patch": "@@ -1,89 +0,0 @@\n-FILE@[0; 89)\n-  FN_ITEM@[0; 88)\n-    FN_KW@[0; 2)\n-    WHITESPACE@[2; 3)\n-    NAME@[3; 6)\n-      IDENT@[3; 6) \"foo\"\n-    PARAM_LIST@[6; 8)\n-      L_PAREN@[6; 7)\n-      R_PAREN@[7; 8)\n-    WHITESPACE@[8; 9)\n-    BLOCK_EXPR@[9; 88)\n-      L_CURLY@[9; 10)\n-      WHITESPACE@[10; 15)\n-      EXPR_STMT@[15; 22)\n-        BIN_EXPR@[15; 21)\n-          PATH_EXPR@[15; 16)\n-            PATH@[15; 16)\n-              PATH_SEGMENT@[15; 16)\n-                NAME_REF@[15; 16)\n-                  IDENT@[15; 16) \"x\"\n-          WHITESPACE@[16; 17)\n-          PLUSEQ@[17; 19)\n-          WHITESPACE@[19; 20)\n-          LITERAL@[20; 21)\n-            INT_NUMBER@[20; 21) \"1\"\n-        SEMI@[21; 22)\n-      WHITESPACE@[22; 27)\n-      EXPR_STMT@[27; 42)\n-        BIN_EXPR@[27; 41)\n-          BIN_EXPR@[27; 32)\n-            LITERAL@[27; 28)\n-              INT_NUMBER@[27; 28) \"1\"\n-            WHITESPACE@[28; 29)\n-            PLUS@[29; 30)\n-            WHITESPACE@[30; 31)\n-            LITERAL@[31; 32)\n-              INT_NUMBER@[31; 32) \"1\"\n-          WHITESPACE@[32; 33)\n-          LTEQ@[33; 35)\n-          WHITESPACE@[35; 36)\n-          BIN_EXPR@[36; 41)\n-            LITERAL@[36; 37)\n-              INT_NUMBER@[36; 37) \"2\"\n-            WHITESPACE@[37; 38)\n-            STAR@[38; 39)\n-            WHITESPACE@[39; 40)\n-            LITERAL@[40; 41)\n-              INT_NUMBER@[40; 41) \"3\"\n-        SEMI@[41; 42)\n-      WHITESPACE@[42; 47)\n-      EXPR_STMT@[47; 59)\n-        BIN_EXPR@[47; 58)\n-          PATH_EXPR@[47; 48)\n-            PATH@[47; 48)\n-              PATH_SEGMENT@[47; 48)\n-                NAME_REF@[47; 48)\n-                  IDENT@[47; 48) \"z\"\n-          WHITESPACE@[48; 49)\n-          MINUSEQ@[49; 51)\n-          WHITESPACE@[51; 52)\n-          BIN_EXPR@[52; 58)\n-            LITERAL@[52; 53)\n-              INT_NUMBER@[52; 53) \"3\"\n-            WHITESPACE@[53; 54)\n-            GTEQ@[54; 56)\n-            WHITESPACE@[56; 57)\n-            LITERAL@[57; 58)\n-              INT_NUMBER@[57; 58) \"0\"\n-        SEMI@[58; 59)\n-      WHITESPACE@[59; 64)\n-      EXPR_STMT@[64; 86)\n-        BIN_EXPR@[64; 85)\n-          LITERAL@[64; 68)\n-            TRUE_KW@[64; 68)\n-          WHITESPACE@[68; 69)\n-          PIPEPIPE@[69; 71)\n-          WHITESPACE@[71; 72)\n-          BIN_EXPR@[72; 85)\n-            LITERAL@[72; 76)\n-              TRUE_KW@[72; 76)\n-            WHITESPACE@[76; 77)\n-            AMPAMP@[77; 79)\n-            WHITESPACE@[79; 80)\n-            LITERAL@[80; 85)\n-              FALSE_KW@[80; 85)\n-        SEMI@[85; 86)\n-      WHITESPACE@[86; 87)\n-      R_CURLY@[87; 88)\n-  WHITESPACE@[88; 89)"}, {"sha": "45149d222d267d2e73f2ea1b4585623eac7be4b9", "filename": "tests/data/parser/inline/0085_neg_expr.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8908e51aeaee91d6b63684a21ed1ca16de49916f/tests%2Fdata%2Fparser%2Finline%2F0085_neg_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8908e51aeaee91d6b63684a21ed1ca16de49916f/tests%2Fdata%2Fparser%2Finline%2F0085_neg_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0085_neg_expr.rs?ref=8908e51aeaee91d6b63684a21ed1ca16de49916f", "patch": "@@ -0,0 +1,3 @@\n+fn foo() {\n+    --1;\n+}"}, {"sha": "8eeb0b1e6dfd44ab57fc7279f9861d858100422d", "filename": "tests/data/parser/inline/0085_neg_expr.txt", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/8908e51aeaee91d6b63684a21ed1ca16de49916f/tests%2Fdata%2Fparser%2Finline%2F0085_neg_expr.txt", "raw_url": "https://github.com/rust-lang/rust/raw/8908e51aeaee91d6b63684a21ed1ca16de49916f/tests%2Fdata%2Fparser%2Finline%2F0085_neg_expr.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0085_neg_expr.txt?ref=8908e51aeaee91d6b63684a21ed1ca16de49916f", "patch": "@@ -0,0 +1,24 @@\n+FILE@[0; 22)\n+  FN_ITEM@[0; 21)\n+    FN_KW@[0; 2)\n+    WHITESPACE@[2; 3)\n+    NAME@[3; 6)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 8)\n+      L_PAREN@[6; 7)\n+      R_PAREN@[7; 8)\n+    WHITESPACE@[8; 9)\n+    BLOCK_EXPR@[9; 21)\n+      L_CURLY@[9; 10)\n+      WHITESPACE@[10; 15)\n+      EXPR_STMT@[15; 19)\n+        NEG_EXPR@[15; 18)\n+          MINUS@[15; 16)\n+          NEG_EXPR@[16; 18)\n+            MINUS@[16; 17)\n+            LITERAL@[17; 18)\n+              INT_NUMBER@[17; 18) \"1\"\n+        SEMI@[18; 19)\n+      WHITESPACE@[19; 20)\n+      R_CURLY@[20; 21)\n+  WHITESPACE@[21; 22)"}, {"sha": "cc9598470d84c05db8416592088e75174609b955", "filename": "tests/data/parser/ok/0028_operator_binding_power.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8908e51aeaee91d6b63684a21ed1ca16de49916f/tests%2Fdata%2Fparser%2Fok%2F0028_operator_binding_power.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8908e51aeaee91d6b63684a21ed1ca16de49916f/tests%2Fdata%2Fparser%2Fok%2F0028_operator_binding_power.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Fok%2F0028_operator_binding_power.rs?ref=8908e51aeaee91d6b63684a21ed1ca16de49916f", "patch": "@@ -0,0 +1,14 @@\n+fn binding_power() {\n+    let x = 1 + 2 * 3 % 4 - 5 / 6;\n+    1 + 2 * 3;\n+    1 << 2 + 3;\n+    1 & 2 >> 3;\n+    1 ^ 2 & 3;\n+    1 | 2 ^ 3;\n+    1 == 2 | 3;\n+    1 && 2 == 3;\n+    //1 || 2 && 2;\n+    //1 .. 2 || 3;\n+    //1 = 2 .. 3;\n+    //---&*1 - --2 * 9;\n+}"}, {"sha": "2cabd289e48ed3da9024b2e6c2d95a724781b7cd", "filename": "tests/data/parser/ok/0028_operator_binding_power.txt", "status": "added", "additions": 185, "deletions": 0, "changes": 185, "blob_url": "https://github.com/rust-lang/rust/blob/8908e51aeaee91d6b63684a21ed1ca16de49916f/tests%2Fdata%2Fparser%2Fok%2F0028_operator_binding_power.txt", "raw_url": "https://github.com/rust-lang/rust/raw/8908e51aeaee91d6b63684a21ed1ca16de49916f/tests%2Fdata%2Fparser%2Fok%2F0028_operator_binding_power.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Fok%2F0028_operator_binding_power.txt?ref=8908e51aeaee91d6b63684a21ed1ca16de49916f", "patch": "@@ -0,0 +1,185 @@\n+FILE@[0; 248)\n+  FN_ITEM@[0; 247)\n+    FN_KW@[0; 2)\n+    WHITESPACE@[2; 3)\n+    NAME@[3; 16)\n+      IDENT@[3; 16) \"binding_power\"\n+    PARAM_LIST@[16; 18)\n+      L_PAREN@[16; 17)\n+      R_PAREN@[17; 18)\n+    WHITESPACE@[18; 19)\n+    BLOCK_EXPR@[19; 247)\n+      L_CURLY@[19; 20)\n+      WHITESPACE@[20; 25)\n+      LET_STMT@[25; 55)\n+        LET_KW@[25; 28)\n+        WHITESPACE@[28; 29)\n+        BIND_PAT@[29; 30)\n+          NAME@[29; 30)\n+            IDENT@[29; 30) \"x\"\n+        WHITESPACE@[30; 31)\n+        EQ@[31; 32)\n+        WHITESPACE@[32; 33)\n+        BIN_EXPR@[33; 54)\n+          BIN_EXPR@[33; 46)\n+            LITERAL@[33; 34)\n+              INT_NUMBER@[33; 34) \"1\"\n+            WHITESPACE@[34; 35)\n+            PLUS@[35; 36)\n+            WHITESPACE@[36; 37)\n+            BIN_EXPR@[37; 46)\n+              BIN_EXPR@[37; 42)\n+                LITERAL@[37; 38)\n+                  INT_NUMBER@[37; 38) \"2\"\n+                WHITESPACE@[38; 39)\n+                STAR@[39; 40)\n+                WHITESPACE@[40; 41)\n+                LITERAL@[41; 42)\n+                  INT_NUMBER@[41; 42) \"3\"\n+              WHITESPACE@[42; 43)\n+              PERCENT@[43; 44)\n+              WHITESPACE@[44; 45)\n+              LITERAL@[45; 46)\n+                INT_NUMBER@[45; 46) \"4\"\n+          WHITESPACE@[46; 47)\n+          MINUS@[47; 48)\n+          WHITESPACE@[48; 49)\n+          BIN_EXPR@[49; 54)\n+            LITERAL@[49; 50)\n+              INT_NUMBER@[49; 50) \"5\"\n+            WHITESPACE@[50; 51)\n+            SLASH@[51; 52)\n+            WHITESPACE@[52; 53)\n+            LITERAL@[53; 54)\n+              INT_NUMBER@[53; 54) \"6\"\n+        SEMI@[54; 55)\n+      WHITESPACE@[55; 60)\n+      EXPR_STMT@[60; 70)\n+        BIN_EXPR@[60; 69)\n+          LITERAL@[60; 61)\n+            INT_NUMBER@[60; 61) \"1\"\n+          WHITESPACE@[61; 62)\n+          PLUS@[62; 63)\n+          WHITESPACE@[63; 64)\n+          BIN_EXPR@[64; 69)\n+            LITERAL@[64; 65)\n+              INT_NUMBER@[64; 65) \"2\"\n+            WHITESPACE@[65; 66)\n+            STAR@[66; 67)\n+            WHITESPACE@[67; 68)\n+            LITERAL@[68; 69)\n+              INT_NUMBER@[68; 69) \"3\"\n+        SEMI@[69; 70)\n+      WHITESPACE@[70; 75)\n+      EXPR_STMT@[75; 86)\n+        BIN_EXPR@[75; 85)\n+          LITERAL@[75; 76)\n+            INT_NUMBER@[75; 76) \"1\"\n+          WHITESPACE@[76; 77)\n+          SHL@[77; 79)\n+          WHITESPACE@[79; 80)\n+          BIN_EXPR@[80; 85)\n+            LITERAL@[80; 81)\n+              INT_NUMBER@[80; 81) \"2\"\n+            WHITESPACE@[81; 82)\n+            PLUS@[82; 83)\n+            WHITESPACE@[83; 84)\n+            LITERAL@[84; 85)\n+              INT_NUMBER@[84; 85) \"3\"\n+        SEMI@[85; 86)\n+      WHITESPACE@[86; 91)\n+      EXPR_STMT@[91; 102)\n+        BIN_EXPR@[91; 101)\n+          LITERAL@[91; 92)\n+            INT_NUMBER@[91; 92) \"1\"\n+          WHITESPACE@[92; 93)\n+          AMP@[93; 94)\n+          WHITESPACE@[94; 95)\n+          BIN_EXPR@[95; 101)\n+            LITERAL@[95; 96)\n+              INT_NUMBER@[95; 96) \"2\"\n+            WHITESPACE@[96; 97)\n+            SHR@[97; 99)\n+            WHITESPACE@[99; 100)\n+            LITERAL@[100; 101)\n+              INT_NUMBER@[100; 101) \"3\"\n+        SEMI@[101; 102)\n+      WHITESPACE@[102; 107)\n+      EXPR_STMT@[107; 117)\n+        BIN_EXPR@[107; 116)\n+          LITERAL@[107; 108)\n+            INT_NUMBER@[107; 108) \"1\"\n+          WHITESPACE@[108; 109)\n+          CARET@[109; 110)\n+          WHITESPACE@[110; 111)\n+          BIN_EXPR@[111; 116)\n+            LITERAL@[111; 112)\n+              INT_NUMBER@[111; 112) \"2\"\n+            WHITESPACE@[112; 113)\n+            AMP@[113; 114)\n+            WHITESPACE@[114; 115)\n+            LITERAL@[115; 116)\n+              INT_NUMBER@[115; 116) \"3\"\n+        SEMI@[116; 117)\n+      WHITESPACE@[117; 122)\n+      EXPR_STMT@[122; 132)\n+        BIN_EXPR@[122; 131)\n+          LITERAL@[122; 123)\n+            INT_NUMBER@[122; 123) \"1\"\n+          WHITESPACE@[123; 124)\n+          PIPE@[124; 125)\n+          WHITESPACE@[125; 126)\n+          BIN_EXPR@[126; 131)\n+            LITERAL@[126; 127)\n+              INT_NUMBER@[126; 127) \"2\"\n+            WHITESPACE@[127; 128)\n+            CARET@[128; 129)\n+            WHITESPACE@[129; 130)\n+            LITERAL@[130; 131)\n+              INT_NUMBER@[130; 131) \"3\"\n+        SEMI@[131; 132)\n+      WHITESPACE@[132; 137)\n+      EXPR_STMT@[137; 148)\n+        BIN_EXPR@[137; 147)\n+          LITERAL@[137; 138)\n+            INT_NUMBER@[137; 138) \"1\"\n+          WHITESPACE@[138; 139)\n+          EQEQ@[139; 141)\n+          WHITESPACE@[141; 142)\n+          BIN_EXPR@[142; 147)\n+            LITERAL@[142; 143)\n+              INT_NUMBER@[142; 143) \"2\"\n+            WHITESPACE@[143; 144)\n+            PIPE@[144; 145)\n+            WHITESPACE@[145; 146)\n+            LITERAL@[146; 147)\n+              INT_NUMBER@[146; 147) \"3\"\n+        SEMI@[147; 148)\n+      WHITESPACE@[148; 153)\n+      EXPR_STMT@[153; 165)\n+        BIN_EXPR@[153; 164)\n+          LITERAL@[153; 154)\n+            INT_NUMBER@[153; 154) \"1\"\n+          WHITESPACE@[154; 155)\n+          AMPAMP@[155; 157)\n+          WHITESPACE@[157; 158)\n+          BIN_EXPR@[158; 164)\n+            LITERAL@[158; 159)\n+              INT_NUMBER@[158; 159) \"2\"\n+            WHITESPACE@[159; 160)\n+            EQEQ@[160; 162)\n+            WHITESPACE@[162; 163)\n+            LITERAL@[163; 164)\n+              INT_NUMBER@[163; 164) \"3\"\n+        SEMI@[164; 165)\n+      WHITESPACE@[165; 170)\n+      COMMENT@[170; 184)\n+      WHITESPACE@[184; 189)\n+      COMMENT@[189; 203)\n+      WHITESPACE@[203; 208)\n+      COMMENT@[208; 221)\n+      WHITESPACE@[221; 226)\n+      COMMENT@[226; 245)\n+      WHITESPACE@[245; 246)\n+      R_CURLY@[246; 247)\n+  WHITESPACE@[247; 248)"}, {"sha": "74de11a7efc1b28f1710a9d51d0f3b6db22dcbb7", "filename": "tests/data/parser/ok/0029_range_forms.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8908e51aeaee91d6b63684a21ed1ca16de49916f/tests%2Fdata%2Fparser%2Fok%2F0029_range_forms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8908e51aeaee91d6b63684a21ed1ca16de49916f/tests%2Fdata%2Fparser%2Fok%2F0029_range_forms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Fok%2F0029_range_forms.rs?ref=8908e51aeaee91d6b63684a21ed1ca16de49916f", "patch": "@@ -0,0 +1,5 @@\n+fn foo() {\n+    ..1 + 1;\n+    ..z = 2;\n+    x = false..1 == 1;\n+}"}, {"sha": "8599f7dfcb7c88d97dfff591e5f92fa94d6e8335", "filename": "tests/data/parser/ok/0029_range_forms.txt", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/8908e51aeaee91d6b63684a21ed1ca16de49916f/tests%2Fdata%2Fparser%2Fok%2F0029_range_forms.txt", "raw_url": "https://github.com/rust-lang/rust/raw/8908e51aeaee91d6b63684a21ed1ca16de49916f/tests%2Fdata%2Fparser%2Fok%2F0029_range_forms.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Fok%2F0029_range_forms.txt?ref=8908e51aeaee91d6b63684a21ed1ca16de49916f", "patch": "@@ -0,0 +1,68 @@\n+FILE@[0; 62)\n+  FN_ITEM@[0; 61)\n+    FN_KW@[0; 2)\n+    WHITESPACE@[2; 3)\n+    NAME@[3; 6)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 8)\n+      L_PAREN@[6; 7)\n+      R_PAREN@[7; 8)\n+    WHITESPACE@[8; 9)\n+    BLOCK_EXPR@[9; 61)\n+      L_CURLY@[9; 10)\n+      WHITESPACE@[10; 15)\n+      EXPR_STMT@[15; 23)\n+        RANGE_EXPR@[15; 22)\n+          DOTDOT@[15; 17)\n+          BIN_EXPR@[17; 22)\n+            LITERAL@[17; 18)\n+              INT_NUMBER@[17; 18) \"1\"\n+            WHITESPACE@[18; 19)\n+            PLUS@[19; 20)\n+            WHITESPACE@[20; 21)\n+            LITERAL@[21; 22)\n+              INT_NUMBER@[21; 22) \"1\"\n+        SEMI@[22; 23)\n+      WHITESPACE@[23; 28)\n+      EXPR_STMT@[28; 36)\n+        BIN_EXPR@[28; 35)\n+          RANGE_EXPR@[28; 31)\n+            DOTDOT@[28; 30)\n+            PATH_EXPR@[30; 31)\n+              PATH@[30; 31)\n+                PATH_SEGMENT@[30; 31)\n+                  NAME_REF@[30; 31)\n+                    IDENT@[30; 31) \"z\"\n+          WHITESPACE@[31; 32)\n+          EQ@[32; 33)\n+          WHITESPACE@[33; 34)\n+          LITERAL@[34; 35)\n+            INT_NUMBER@[34; 35) \"2\"\n+        SEMI@[35; 36)\n+      WHITESPACE@[36; 41)\n+      EXPR_STMT@[41; 59)\n+        BIN_EXPR@[41; 58)\n+          PATH_EXPR@[41; 42)\n+            PATH@[41; 42)\n+              PATH_SEGMENT@[41; 42)\n+                NAME_REF@[41; 42)\n+                  IDENT@[41; 42) \"x\"\n+          WHITESPACE@[42; 43)\n+          EQ@[43; 44)\n+          WHITESPACE@[44; 45)\n+          BIN_EXPR@[45; 58)\n+            LITERAL@[45; 50)\n+              FALSE_KW@[45; 50)\n+            DOTDOT@[50; 52)\n+            BIN_EXPR@[52; 58)\n+              LITERAL@[52; 53)\n+                INT_NUMBER@[52; 53) \"1\"\n+              WHITESPACE@[53; 54)\n+              EQEQ@[54; 56)\n+              WHITESPACE@[56; 57)\n+              LITERAL@[57; 58)\n+                INT_NUMBER@[57; 58) \"1\"\n+        SEMI@[58; 59)\n+      WHITESPACE@[59; 60)\n+      R_CURLY@[60; 61)\n+  WHITESPACE@[61; 62)"}]}