{"sha": "a1ca5f689fbb36ab6f691446390ec80a90a0556a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExY2E1ZjY4OWZiYjM2YWI2ZjY5MTQ0NjM5MGVjODBhOTBhMDU1NmE=", "commit": {"author": {"name": "Marco Castelluccio", "email": "mcastelluccio@mozilla.com", "date": "2017-06-04T16:50:25Z"}, "committer": {"name": "Marco Castelluccio", "email": "mcastelluccio@mozilla.com", "date": "2017-06-04T16:50:25Z"}, "message": "Add llvm.gcov metadata only if profiler is enabled", "tree": {"sha": "228ba4582ff7563449f10c5c7e2c21bb14843c25", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/228ba4582ff7563449f10c5c7e2c21bb14843c25"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1ca5f689fbb36ab6f691446390ec80a90a0556a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1ca5f689fbb36ab6f691446390ec80a90a0556a", "html_url": "https://github.com/rust-lang/rust/commit/a1ca5f689fbb36ab6f691446390ec80a90a0556a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1ca5f689fbb36ab6f691446390ec80a90a0556a/comments", "author": {"login": "marco-c", "id": 1616846, "node_id": "MDQ6VXNlcjE2MTY4NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1616846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marco-c", "html_url": "https://github.com/marco-c", "followers_url": "https://api.github.com/users/marco-c/followers", "following_url": "https://api.github.com/users/marco-c/following{/other_user}", "gists_url": "https://api.github.com/users/marco-c/gists{/gist_id}", "starred_url": "https://api.github.com/users/marco-c/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marco-c/subscriptions", "organizations_url": "https://api.github.com/users/marco-c/orgs", "repos_url": "https://api.github.com/users/marco-c/repos", "events_url": "https://api.github.com/users/marco-c/events{/privacy}", "received_events_url": "https://api.github.com/users/marco-c/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marco-c", "id": 1616846, "node_id": "MDQ6VXNlcjE2MTY4NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1616846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marco-c", "html_url": "https://github.com/marco-c", "followers_url": "https://api.github.com/users/marco-c/followers", "following_url": "https://api.github.com/users/marco-c/following{/other_user}", "gists_url": "https://api.github.com/users/marco-c/gists{/gist_id}", "starred_url": "https://api.github.com/users/marco-c/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marco-c/subscriptions", "organizations_url": "https://api.github.com/users/marco-c/orgs", "repos_url": "https://api.github.com/users/marco-c/repos", "events_url": "https://api.github.com/users/marco-c/events{/privacy}", "received_events_url": "https://api.github.com/users/marco-c/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60524c55e9150892913272737b77bbcc2fd29a02", "url": "https://api.github.com/repos/rust-lang/rust/commits/60524c55e9150892913272737b77bbcc2fd29a02", "html_url": "https://github.com/rust-lang/rust/commit/60524c55e9150892913272737b77bbcc2fd29a02"}], "stats": {"total": 46, "additions": 24, "deletions": 22}, "files": [{"sha": "32fd2bac85f4c57603f127a916a03d642bd968c1", "filename": "src/librustc_trans/debuginfo/metadata.rs", "status": "modified", "additions": 24, "deletions": 22, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/a1ca5f689fbb36ab6f691446390ec80a90a0556a/src%2Flibrustc_trans%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1ca5f689fbb36ab6f691446390ec80a90a0556a/src%2Flibrustc_trans%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdebuginfo%2Fmetadata.rs?ref=a1ca5f689fbb36ab6f691446390ec80a90a0556a", "patch": "@@ -806,28 +806,30 @@ pub fn compile_unit_metadata(scc: &SharedCrateContext,\n             0,\n             split_name.as_ptr() as *const _);\n \n-        let cu_desc_metadata = llvm::LLVMRustMetadataAsValue(debug_context.llcontext,\n-                                                             unit_metadata);\n-\n-        let gcov_cu_info = [\n-            // Ideally we would be using the three-element form of !llvm.gcov metadata,\n-            // which allows us to specify gcno/gcda files explicitly, but that's only\n-            // available in LLVM 3.9+; so we rely on LLVM chopping off the extension\n-            // and replacing it with gcno/gcda, instead.\n-            path_to_mdstring(debug_context.llcontext,\n-                             &scc.output_filenames().with_extension(\"gcno\")),\n-            // path_to_mdstring(debug_context.llcontext,\n-            //                  &scc.output_filenames().with_extension(\"gcda\")),\n-            cu_desc_metadata,\n-        ];\n-        let gcov_metadata = llvm::LLVMMDNodeInContext(debug_context.llcontext,\n-                                                      gcov_cu_info.as_ptr(),\n-                                                      gcov_cu_info.len() as c_uint);\n-\n-        let llvm_gcov_ident = CString::new(\"llvm.gcov\").unwrap();\n-        llvm::LLVMAddNamedMetadataOperand(debug_context.llmod,\n-                                          llvm_gcov_ident.as_ptr(),\n-                                          gcov_metadata);\n+        if sess.opts.debugging_opts.profile {\n+            let cu_desc_metadata = llvm::LLVMRustMetadataAsValue(debug_context.llcontext,\n+                                                                 unit_metadata);\n+\n+            let gcov_cu_info = [\n+                // Ideally we would be using the three-element form of !llvm.gcov metadata,\n+                // which allows us to specify gcno/gcda files explicitly, but that's only\n+                // available in LLVM 3.9+; so we rely on LLVM chopping off the extension\n+                // and replacing it with gcno/gcda, instead.\n+                path_to_mdstring(debug_context.llcontext,\n+                                 &scc.output_filenames().with_extension(\"gcno\")),\n+                // path_to_mdstring(debug_context.llcontext,\n+                //                  &scc.output_filenames().with_extension(\"gcda\")),\n+                cu_desc_metadata,\n+            ];\n+            let gcov_metadata = llvm::LLVMMDNodeInContext(debug_context.llcontext,\n+                                                          gcov_cu_info.as_ptr(),\n+                                                          gcov_cu_info.len() as c_uint);\n+\n+            let llvm_gcov_ident = CString::new(\"llvm.gcov\").unwrap();\n+            llvm::LLVMAddNamedMetadataOperand(debug_context.llmod,\n+                                              llvm_gcov_ident.as_ptr(),\n+                                              gcov_metadata);\n+        }\n \n         return unit_metadata;\n     };"}]}