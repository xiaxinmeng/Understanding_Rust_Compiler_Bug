{"sha": "7e6983e27dc1788c63f297026ee5258791298aae", "node_id": "C_kwDOAAsO6NoAKDdlNjk4M2UyN2RjMTc4OGM2M2YyOTcwMjZlZTUyNTg3OTEyOThhYWU", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2023-04-15T21:55:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-15T21:55:20Z"}, "message": "Rollup merge of #110033 - cuviper:relnotes-1.69.0, r=pietroalbini\n\nAdd 1.69.0 release notes\n\ncc ````@rust-lang/release````\nr? ````@Mark-Simulacrum````", "tree": {"sha": "d466c7046b018a3670937087b4802fa82ad02079", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d466c7046b018a3670937087b4802fa82ad02079"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e6983e27dc1788c63f297026ee5258791298aae", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkOx1ICRBK7hj4Ov3rIwAA7l8IAIcrVL6PtB2PQsBj1azdF4ek\n79JDfxQ6Plb9vjG+HAv9SVaPpgClXb+Fx1M3HV1ew2HG0jxn2UXQFhnWTO9Dltc5\n5tC3wacqmCQN88R33DUN9mednCN3qvWtw7LK9wRDSlV+T3OD2CnY0a3VdiB0hiNG\nfIHYirE3YFDaKstlK0IG6rrxlG2KG/wYVHt/oqtfHi21Ayjd0RownSUk+QRq8iQB\nSwJF7AfUCALhPuFvTNt5Nw4BuVp0Hj57abq7S9HlqKFElErR227oxk7hqRmsWJ2M\nKzmW1bepMIRcT0dNPTyScrRezwcY43IwCOipqbTCeQtcQ6My/Z88RqxGsW7ODzo=\n=2XWn\n-----END PGP SIGNATURE-----\n", "payload": "tree d466c7046b018a3670937087b4802fa82ad02079\nparent 5cdb7886a5ece816864fab177f0c266ad4dd5358\nparent 617648c43fb204213fefdbd903e3ed1452264b2a\nauthor Yuki Okushi <jtitor@2k36.org> 1681595720 +0900\ncommitter GitHub <noreply@github.com> 1681595720 +0900\n\nRollup merge of #110033 - cuviper:relnotes-1.69.0, r=pietroalbini\n\nAdd 1.69.0 release notes\n\ncc ````@rust-lang/release````\nr? ````@Mark-Simulacrum````\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e6983e27dc1788c63f297026ee5258791298aae", "html_url": "https://github.com/rust-lang/rust/commit/7e6983e27dc1788c63f297026ee5258791298aae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e6983e27dc1788c63f297026ee5258791298aae/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5cdb7886a5ece816864fab177f0c266ad4dd5358", "url": "https://api.github.com/repos/rust-lang/rust/commits/5cdb7886a5ece816864fab177f0c266ad4dd5358", "html_url": "https://github.com/rust-lang/rust/commit/5cdb7886a5ece816864fab177f0c266ad4dd5358"}, {"sha": "617648c43fb204213fefdbd903e3ed1452264b2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/617648c43fb204213fefdbd903e3ed1452264b2a", "html_url": "https://github.com/rust-lang/rust/commit/617648c43fb204213fefdbd903e3ed1452264b2a"}], "stats": {"total": 102, "additions": 102, "deletions": 0}, "files": [{"sha": "b89178a6f68fe511197999e834daf7461c06f9d6", "filename": "RELEASES.md", "status": "modified", "additions": 102, "deletions": 0, "changes": 102, "blob_url": "https://github.com/rust-lang/rust/blob/7e6983e27dc1788c63f297026ee5258791298aae/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/7e6983e27dc1788c63f297026ee5258791298aae/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=7e6983e27dc1788c63f297026ee5258791298aae", "patch": "@@ -1,3 +1,105 @@\n+Version 1.69.0 (2023-04-20)\n+==========================\n+\n+<a id=\"1.69.0-Language\"></a>\n+\n+Language\n+--------\n+\n+- [Deriving built-in traits on packed structs works with `Copy` fields.](https://github.com/rust-lang/rust/pull/104429/)\n+- [Stabilize the `cmpxchg16b` target feature on x86 and x86_64.](https://github.com/rust-lang/rust/pull/106774/)\n+- [Improve analysis of trait bounds for associated types.](https://github.com/rust-lang/rust/pull/103695/)\n+- [Allow associated types to be used as union fields.](https://github.com/rust-lang/rust/pull/106938/)\n+- [Allow `Self: Autotrait` bounds on dyn-safe trait methods.](https://github.com/rust-lang/rust/pull/107082/)\n+- [Treat `str` as containing `[u8]` for auto trait purposes.](https://github.com/rust-lang/rust/pull/107941/)\n+\n+<a id=\"1.69.0-Compiler\"></a>\n+\n+Compiler\n+--------\n+\n+- [Upgrade `*-pc-windows-gnu` on CI to mingw-w64 v10 and GCC 12.2.](https://github.com/rust-lang/rust/pull/100178/)\n+- [Rework min_choice algorithm of member constraints.](https://github.com/rust-lang/rust/pull/105300/)\n+- [Support `true` and `false` as boolean flags in compiler arguments.](https://github.com/rust-lang/rust/pull/107043/)\n+- [Default `repr(C)` enums to `c_int` size.](https://github.com/rust-lang/rust/pull/107592/)\n+\n+<a id=\"1.69.0-Libraries\"></a>\n+\n+Libraries\n+---------\n+\n+- [Implement the unstable `DispatchFromDyn` for cell types, allowing downstream experimentation with custom method receivers.](https://github.com/rust-lang/rust/pull/97373/)\n+- [Document that `fmt::Arguments::as_str()` may return `Some(_)` in more cases after optimization, subject to change.](https://github.com/rust-lang/rust/pull/106823/)\n+- [Implement `AsFd` and `AsRawFd` for `Rc`.](https://github.com/rust-lang/rust/pull/107317/)\n+\n+<a id=\"1.69.0-Stabilized-APIs\"></a>\n+\n+Stabilized APIs\n+---------------\n+\n+- [`CStr::from_bytes_until_nul`](https://doc.rust-lang.org/stable/core/ffi/struct.CStr.html#method.from_bytes_until_nul)\n+- [`core::ffi::FromBytesUntilNulError`](https://doc.rust-lang.org/stable/core/ffi/struct.FromBytesUntilNulError.html)\n+\n+These APIs are now stable in const contexts:\n+\n+- [`SocketAddr::new`](https://doc.rust-lang.org/stable/std/net/enum.SocketAddr.html#method.new)\n+- [`SocketAddr::ip`](https://doc.rust-lang.org/stable/std/net/enum.SocketAddr.html#method.ip)\n+- [`SocketAddr::port`](https://doc.rust-lang.org/stable/std/net/enum.SocketAddr.html#method.port)\n+- [`SocketAddr::is_ipv4`](https://doc.rust-lang.org/stable/std/net/enum.SocketAddr.html#method.is_ipv4)\n+- [`SocketAddr::is_ipv6`](https://doc.rust-lang.org/stable/std/net/enum.SocketAddr.html#method.is_ipv6)\n+- [`SocketAddrV4::new`](https://doc.rust-lang.org/stable/std/net/struct.SocketAddrV4.html#method.new)\n+- [`SocketAddrV4::ip`](https://doc.rust-lang.org/stable/std/net/struct.SocketAddrV4.html#method.ip)\n+- [`SocketAddrV4::port`](https://doc.rust-lang.org/stable/std/net/struct.SocketAddrV4.html#method.port)\n+- [`SocketAddrV6::new`](https://doc.rust-lang.org/stable/std/net/struct.SocketAddrV6.html#method.new)\n+- [`SocketAddrV6::ip`](https://doc.rust-lang.org/stable/std/net/struct.SocketAddrV6.html#method.ip)\n+- [`SocketAddrV6::port`](https://doc.rust-lang.org/stable/std/net/struct.SocketAddrV6.html#method.port)\n+- [`SocketAddrV6::flowinfo`](https://doc.rust-lang.org/stable/std/net/struct.SocketAddrV6.html#method.flowinfo)\n+- [`SocketAddrV6::scope_id`](https://doc.rust-lang.org/stable/std/net/struct.SocketAddrV6.html#method.scope_id)\n+\n+<a id=\"1.69.0-Cargo\"></a>\n+\n+Cargo\n+-----\n+\n+- [Cargo now suggests `cargo fix` or `cargo clippy --fix` when compilation warnings are auto-fixable.](https://github.com/rust-lang/cargo/pull/11558/)\n+- [Cargo now suggests `cargo add` if you try to install a library crate.](https://github.com/rust-lang/cargo/pull/11410/)\n+- [Cargo now sets the `CARGO_BIN_NAME` environment variable also for binary examples.](https://github.com/rust-lang/cargo/pull/11705/)\n+\n+<a id=\"1.69.0-Rustdoc\"></a>\n+\n+Rustdoc\n+-----\n+\n+- [Vertically compact trait bound formatting.](https://github.com/rust-lang/rust/pull/102842/)\n+- [Only include stable lints in `rustdoc::all` group.](https://github.com/rust-lang/rust/pull/106316/)\n+- [Compute maximum Levenshtein distance based on the query.](https://github.com/rust-lang/rust/pull/107141/)\n+- [Remove inconsistently-present sidebar tooltips.](https://github.com/rust-lang/rust/pull/107490/)\n+- [Search by macro when query ends with `!`.](https://github.com/rust-lang/rust/pull/108143/)\n+\n+<a id=\"1.69.0-Compatibility-Notes\"></a>\n+\n+Compatibility Notes\n+-------------------\n+\n+- [The `rust-analysis` component from `rustup` now only contains a warning placeholder.](https://github.com/rust-lang/rust/pull/101841/) This was primarily intended for RLS, and the corresponding `-Zsave-analysis` flag has been removed from the compiler as well.\n+- [Unaligned references to packed fields are now a hard error.](https://github.com/rust-lang/rust/pull/102513/) This has been a warning since 1.53, and denied by default with a future-compatibility warning since 1.62.\n+- [Update the minimum external LLVM to 14.](https://github.com/rust-lang/rust/pull/107573/)\n+- [Cargo now emits errors on invalid characters in a registry token.](https://github.com/rust-lang/cargo/pull/11600/)\n+- [When `default-features` is set to false of a workspace dependency, and an inherited dependency of a member has `default-features = true`, Cargo will enable default features of that dependency.](https://github.com/rust-lang/cargo/pull/11409/)\n+- [Cargo denies `CARGO_HOME` in the `[env]` configuration table. Cargo itself doesn't pick up this value, but recursive calls to cargo would, which was not intended.](https://github.com/rust-lang/cargo/pull/11644/)\n+- [Debuginfo for build dependencies is now off if not explicitly set. This is expected to improve the overall build time.](https://github.com/rust-lang/cargo/pull/11252/)\n+\n+<a id=\"1.69.0-Internal-Changes\"></a>\n+\n+Internal Changes\n+----------------\n+\n+These changes do not affect any public interfaces of Rust, but they represent\n+significant improvements to the performance or internals of rustc and related\n+tools.\n+\n+- [Move `format_args!()` into AST (and expand it during AST lowering)](https://github.com/rust-lang/rust/pull/106745/)\n+\n Version 1.68.2 (2023-03-28)\n ===========================\n "}]}