{"sha": "be09626148fbc02a7949dfa6143c5923d764beba", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlMDk2MjYxNDhmYmMwMmE3OTQ5ZGZhNjE0M2M1OTIzZDc2NGJlYmE=", "commit": {"author": {"name": "Florian Hahn", "email": "flo@fhahn.com", "date": "2013-10-29T21:50:15Z"}, "committer": {"name": "Florian Hahn", "email": "flo@fhahn.com", "date": "2013-11-12T18:35:55Z"}, "message": "Remove type overflow checks from check_const.rs, refs #4220\n\nThe checks are now handled by the linter", "tree": {"sha": "7376bf2699e31aeb33144e3c110ce92a6fdf7230", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7376bf2699e31aeb33144e3c110ce92a6fdf7230"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be09626148fbc02a7949dfa6143c5923d764beba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be09626148fbc02a7949dfa6143c5923d764beba", "html_url": "https://github.com/rust-lang/rust/commit/be09626148fbc02a7949dfa6143c5923d764beba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be09626148fbc02a7949dfa6143c5923d764beba/comments", "author": {"login": "fhahn", "id": 450489, "node_id": "MDQ6VXNlcjQ1MDQ4OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/450489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhahn", "html_url": "https://github.com/fhahn", "followers_url": "https://api.github.com/users/fhahn/followers", "following_url": "https://api.github.com/users/fhahn/following{/other_user}", "gists_url": "https://api.github.com/users/fhahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhahn/subscriptions", "organizations_url": "https://api.github.com/users/fhahn/orgs", "repos_url": "https://api.github.com/users/fhahn/repos", "events_url": "https://api.github.com/users/fhahn/events{/privacy}", "received_events_url": "https://api.github.com/users/fhahn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhahn", "id": 450489, "node_id": "MDQ6VXNlcjQ1MDQ4OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/450489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhahn", "html_url": "https://github.com/fhahn", "followers_url": "https://api.github.com/users/fhahn/followers", "following_url": "https://api.github.com/users/fhahn/following{/other_user}", "gists_url": "https://api.github.com/users/fhahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhahn/subscriptions", "organizations_url": "https://api.github.com/users/fhahn/orgs", "repos_url": "https://api.github.com/users/fhahn/repos", "events_url": "https://api.github.com/users/fhahn/events{/privacy}", "received_events_url": "https://api.github.com/users/fhahn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ee72ba5c61f1b59d470e2899f208500f2cb0d7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ee72ba5c61f1b59d470e2899f208500f2cb0d7f", "html_url": "https://github.com/rust-lang/rust/commit/2ee72ba5c61f1b59d470e2899f208500f2cb0d7f"}], "stats": {"total": 15, "additions": 0, "deletions": 15}, "files": [{"sha": "5f84f505b5ceec3fe87da6db85eb7cc3ccb8fc8d", "filename": "src/librustc/middle/check_const.rs", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/be09626148fbc02a7949dfa6143c5923d764beba/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be09626148fbc02a7949dfa6143c5923d764beba/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs?ref=be09626148fbc02a7949dfa6143c5923d764beba", "patch": "@@ -199,21 +199,6 @@ pub fn check_expr(v: &mut CheckCrateVisitor,\n           }\n         }\n     }\n-    match e.node {\n-        ExprLit(@codemap::Spanned {node: lit_int(v, t), _}) => {\n-            if (v as u64) > ast_util::int_ty_max(\n-                if t == ty_i { sess.targ_cfg.int_type } else { t }) {\n-                sess.span_err(e.span, \"literal out of range for its type\");\n-            }\n-        }\n-        ExprLit(@codemap::Spanned {node: lit_uint(v, t), _}) => {\n-            if v > ast_util::uint_ty_max(\n-                if t == ty_u { sess.targ_cfg.uint_type } else { t }) {\n-                sess.span_err(e.span, \"literal out of range for its type\");\n-            }\n-        }\n-        _ => ()\n-    }\n     visit::walk_expr(v, e, is_const);\n }\n "}]}