{"sha": "8d42a7cfdf1eda2584c223354aaa76dd8dde7021", "node_id": "C_kwDOAAsO6NoAKDhkNDJhN2NmZGYxZWRhMjU4NGMyMjMzNTRhYWE3NmRkOGRkZTcwMjE", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-04-30T17:06:19Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-04-30T17:33:55Z"}, "message": "Replace `as` casts in llvm.x86.addcarry.64 implementation", "tree": {"sha": "67786d589398548b103f11bca81e38bc4ed6c0fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67786d589398548b103f11bca81e38bc4ed6c0fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d42a7cfdf1eda2584c223354aaa76dd8dde7021", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmJtcwMACgkQ+boUO5X/\nbYKwqg/9HrV8oMjJ4G6mgxKiEonOvHko7ppm0t7eB0HIwZBjJ9X0MmInhik3yQsB\nijGmhAZo2aC21pM8a+IjFhTX9h7AXZAWVAdjZiLAe1w7pu6wWQfOeniF7LpIGcOG\nPzebVszWumWY57ZlkBtgLRg6kE07AVyxMhFCIuBkvRiAQIhKpatMbn432IhwY0QF\npflZ7FphcxLjK3x/GN37tmFBBqXZoQ/mrPpifFQ5PiuNmDcavb/gRX++P5Ghlmpm\nQrPNTQX5zF3IiZykreJzaERiTajbwnkSPln2sv6tRnEdsCo+q57CtXCk29slvrcw\nh1F4iTHKQM+kE03U1/SkGy1HSIp47qk3XQYhB1CxWOPaQsGEtWRpoxwToA1+1Lpb\n3kvYxTGd4/NBFTG+rfQpeRYQmtqum9rOAepxiMhM7MRKZBKb7mx3RHYV/Y8pTXHh\n/6Wf7fDVkemSD4Q2GDihSEUelkv3mHXFq9ISZ3rGu/EsTY8ogvQv989dYQZjxSrA\nA57WuuEJ5dejskm90i6NYFZrido7fYyI+KAFBBqJdoMXqpmp5T0eMFGHdlUIthtI\nK7TkL3BDTzRILOSbLhw3nos4RpZb1jRHL7pr0+J2Ccv/47ip+7LPgnUFcfuCvmS/\nYmzszyFE8O9MAeyisLRIF3pZf9aLcbvdd5kzF32YnKc7OKXpLYE=\n=M5ap\n-----END PGP SIGNATURE-----", "payload": "tree 67786d589398548b103f11bca81e38bc4ed6c0fa\nparent e1068cf2114d48fe16ecd8652c8c6b85282a894e\nauthor David Tolnay <dtolnay@gmail.com> 1651338379 -0700\ncommitter David Tolnay <dtolnay@gmail.com> 1651340035 -0700\n\nReplace `as` casts in llvm.x86.addcarry.64 implementation\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d42a7cfdf1eda2584c223354aaa76dd8dde7021", "html_url": "https://github.com/rust-lang/rust/commit/8d42a7cfdf1eda2584c223354aaa76dd8dde7021", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d42a7cfdf1eda2584c223354aaa76dd8dde7021/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1068cf2114d48fe16ecd8652c8c6b85282a894e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1068cf2114d48fe16ecd8652c8c6b85282a894e", "html_url": "https://github.com/rust-lang/rust/commit/e1068cf2114d48fe16ecd8652c8c6b85282a894e"}], "stats": {"total": 56, "additions": 54, "deletions": 2}, "files": [{"sha": "5b820218a9dd7a2068a65b5d942c8643ef98657a", "filename": "src/helpers.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8d42a7cfdf1eda2584c223354aaa76dd8dde7021/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d42a7cfdf1eda2584c223354aaa76dd8dde7021/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=8d42a7cfdf1eda2584c223354aaa76dd8dde7021", "patch": "@@ -1,3 +1,5 @@\n+pub mod convert;\n+\n use std::mem;\n use std::num::NonZeroUsize;\n use std::time::Duration;"}, {"sha": "4506fe47495d045c2842c86ded56927e7adba233", "filename": "src/helpers/convert.rs", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/8d42a7cfdf1eda2584c223354aaa76dd8dde7021/src%2Fhelpers%2Fconvert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d42a7cfdf1eda2584c223354aaa76dd8dde7021/src%2Fhelpers%2Fconvert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers%2Fconvert.rs?ref=8d42a7cfdf1eda2584c223354aaa76dd8dde7021", "patch": "@@ -0,0 +1,49 @@\n+use implementations::NarrowerThan;\n+\n+/// Replacement for `as` casts going from wide integer to narrower integer.\n+///\n+/// # Example\n+///\n+/// ```ignore\n+/// let x = 99_u64;\n+/// let lo = x.truncate::<u16>();\n+/// // lo is of type u16, equivalent to `x as u16`.\n+/// ```\n+pub(crate) trait Truncate: Sized {\n+    fn truncate<To>(self) -> To\n+    where\n+        To: NarrowerThan<Self>,\n+    {\n+        NarrowerThan::truncate_from(self)\n+    }\n+}\n+\n+impl Truncate for u16 {}\n+impl Truncate for u32 {}\n+impl Truncate for u64 {}\n+impl Truncate for u128 {}\n+\n+mod implementations {\n+    pub(crate) trait NarrowerThan<T> {\n+        fn truncate_from(wide: T) -> Self;\n+    }\n+\n+    macro_rules! impl_narrower_than {\n+        ($(NarrowerThan<{$($ty:ty),*}> for $self:ty)*) => {\n+            $($(\n+                impl NarrowerThan<$ty> for $self {\n+                    fn truncate_from(wide: $ty) -> Self {\n+                        wide as Self\n+                    }\n+                }\n+            )*)*\n+        };\n+    }\n+\n+    impl_narrower_than! {\n+        NarrowerThan<{u128, u64, u32, u16}> for u8\n+        NarrowerThan<{u128, u64, u32}> for u16\n+        NarrowerThan<{u128, u64}> for u32\n+        NarrowerThan<{u128}> for u64\n+    }\n+}"}, {"sha": "5ff70e41518af19295b02ea23d5686372f656117", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8d42a7cfdf1eda2584c223354aaa76dd8dde7021/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d42a7cfdf1eda2584c223354aaa76dd8dde7021/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=8d42a7cfdf1eda2584c223354aaa76dd8dde7021", "patch": "@@ -22,6 +22,7 @@ use rustc_target::{\n };\n \n use super::backtrace::EvalContextExt as _;\n+use crate::helpers::convert::Truncate;\n use crate::*;\n \n /// Returned by `emulate_foreign_item_by_name`.\n@@ -678,8 +679,8 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 let a = this.read_scalar(a)?.to_u64()?;\n                 let b = this.read_scalar(b)?.to_u64()?;\n \n-                let wide_sum = c_in as u128 + a as u128 + b as u128;\n-                let (c_out, sum) = ((wide_sum >> 64) as u8, wide_sum as u64);\n+                let wide_sum = u128::from(c_in) + u128::from(a) + u128::from(b);\n+                let (c_out, sum) = ((wide_sum >> 64).truncate::<u8>(), wide_sum.truncate::<u64>());\n \n                 let c_out_field = this.place_field(dest, 0)?;\n                 this.write_scalar(Scalar::from_u8(c_out), &c_out_field)?;"}]}