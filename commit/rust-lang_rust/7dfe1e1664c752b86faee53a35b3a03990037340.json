{"sha": "7dfe1e1664c752b86faee53a35b3a03990037340", "node_id": "C_kwDOAAsO6NoAKDdkZmUxZTE2NjRjNzUyYjg2ZmFlZTUzYTM1YjNhMDM5OTAwMzczNDA", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2022-11-09T02:03:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-09T02:03:53Z"}, "message": "Rollup merge of #103559 - AndyJado:var_span_label, r=davidtwco\n\nfirst move on a nested span_label\n\ntrying not to be smart this time.", "tree": {"sha": "a8c988fdfc6940b61352f4cca6a8af9e1ae5deb2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8c988fdfc6940b61352f4cca6a8af9e1ae5deb2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7dfe1e1664c752b86faee53a35b3a03990037340", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjawqJCRBK7hj4Ov3rIwAAEA0IAETvqVN67HgajMZtg5NHp1r8\n8Ej5OP90aPkm6FhhDL2pFCumOIhbAn8cHhjVuwbFdrZM7xhOzoSdFbaVPn0aL67u\nmTPNThqu3TEXJ/p6dqCCwM9ZZl9UEe4NhUoTWrnfR933I28bnsOGtp9JaaMvvEUR\neCcCxsP4/r7asXAtflw+bCRk6PizoXEtp5dAR63U9Rs7dgk4K+TKuB4WMJsOXM1q\nrSkMaG3v9jVAaoLzb5Wg5q4FYUAdXobVjUzdk+HqOyJPylTLD5Qo2DIs/g/ec/g5\nM/KQDMQqke1XdFnDOamfzC85OVhn4OxMd42PdCMSUUcbK/8pkrjCROADBqjAvbU=\n=OPLg\n-----END PGP SIGNATURE-----\n", "payload": "tree a8c988fdfc6940b61352f4cca6a8af9e1ae5deb2\nparent 75c239402c8fafc89246a26bd066d6ff647e3794\nparent e49d10db14c618e2635d0e21b6e32cb2e1df78cf\nauthor Manish Goregaokar <manishsmail@gmail.com> 1667959433 -0500\ncommitter GitHub <noreply@github.com> 1667959433 -0500\n\nRollup merge of #103559 - AndyJado:var_span_label, r=davidtwco\n\nfirst move on a nested span_label\n\ntrying not to be smart this time.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7dfe1e1664c752b86faee53a35b3a03990037340", "html_url": "https://github.com/rust-lang/rust/commit/7dfe1e1664c752b86faee53a35b3a03990037340", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7dfe1e1664c752b86faee53a35b3a03990037340/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75c239402c8fafc89246a26bd066d6ff647e3794", "url": "https://api.github.com/repos/rust-lang/rust/commits/75c239402c8fafc89246a26bd066d6ff647e3794", "html_url": "https://github.com/rust-lang/rust/commit/75c239402c8fafc89246a26bd066d6ff647e3794"}, {"sha": "e49d10db14c618e2635d0e21b6e32cb2e1df78cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/e49d10db14c618e2635d0e21b6e32cb2e1df78cf", "html_url": "https://github.com/rust-lang/rust/commit/e49d10db14c618e2635d0e21b6e32cb2e1df78cf"}], "stats": {"total": 76, "additions": 72, "deletions": 4}, "files": [{"sha": "7f26e970e30947efbdc5d9f77bb6974f0c1e5b00", "filename": "compiler/rustc_borrowck/src/diagnostics/conflict_errors.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7dfe1e1664c752b86faee53a35b3a03990037340/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dfe1e1664c752b86faee53a35b3a03990037340/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs?ref=7dfe1e1664c752b86faee53a35b3a03990037340", "patch": "@@ -724,13 +724,19 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n             borrow_span,\n             &self.describe_any_place(borrow.borrowed_place.as_ref()),\n         );\n-\n-        borrow_spans.var_span_label(\n+        borrow_spans.var_subdiag(\n             &mut err,\n-            {\n+            |var_span| {\n+                use crate::session_diagnostics::CaptureVarCause::*;\n                 let place = &borrow.borrowed_place;\n                 let desc_place = self.describe_any_place(place.as_ref());\n-                format!(\"borrow occurs due to use of {}{}\", desc_place, borrow_spans.describe())\n+                match borrow_spans {\n+                    UseSpans::ClosureUse { generator_kind, .. } => match generator_kind {\n+                        Some(_) => BorrowUsePlaceGenerator { place: desc_place, var_span },\n+                        None => BorrowUsePlaceClosure { place: desc_place, var_span },\n+                    },\n+                    _ => BorrowUsePlace { place: desc_place, var_span },\n+                }\n             },\n             \"mutable\",\n         );"}, {"sha": "61518378e3d0c7b0b738d73ef57367fb58e2ff9f", "filename": "compiler/rustc_borrowck/src/diagnostics/mod.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7dfe1e1664c752b86faee53a35b3a03990037340/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dfe1e1664c752b86faee53a35b3a03990037340/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmod.rs?ref=7dfe1e1664c752b86faee53a35b3a03990037340", "patch": "@@ -623,6 +623,26 @@ impl UseSpans<'_> {\n         }\n     }\n \n+    /// Add a subdiagnostic to the use of the captured variable, if it exists.\n+    pub(super) fn var_subdiag(\n+        self,\n+        err: &mut Diagnostic,\n+        f: impl Fn(Span) -> crate::session_diagnostics::CaptureVarCause,\n+        kind_desc: impl Into<String>,\n+    ) {\n+        if let UseSpans::ClosureUse { capture_kind_span, path_span, .. } = self {\n+            if capture_kind_span == path_span {\n+                err.subdiagnostic(f(capture_kind_span));\n+            } else {\n+                err.subdiagnostic(crate::session_diagnostics::CaptureVarKind {\n+                    kind_desc: kind_desc.into(),\n+                    kind_span: capture_kind_span,\n+                });\n+                err.subdiagnostic(f(path_span));\n+            }\n+        }\n+    }\n+\n     /// Returns `false` if this place is not used in a closure.\n     pub(super) fn for_closure(&self) -> bool {\n         match *self {"}, {"sha": "824f20a31bb097463e8ef1a55927ed5b3e81d711", "filename": "compiler/rustc_borrowck/src/session_diagnostics.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/7dfe1e1664c752b86faee53a35b3a03990037340/compiler%2Frustc_borrowck%2Fsrc%2Fsession_diagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dfe1e1664c752b86faee53a35b3a03990037340/compiler%2Frustc_borrowck%2Fsrc%2Fsession_diagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fsession_diagnostics.rs?ref=7dfe1e1664c752b86faee53a35b3a03990037340", "patch": "@@ -148,3 +148,33 @@ pub(crate) enum RequireStaticErr {\n         multi_span: MultiSpan,\n     },\n }\n+\n+#[derive(Subdiagnostic)]\n+#[label(borrowck_capture_kind_label)]\n+pub(crate) struct CaptureVarKind {\n+    pub kind_desc: String,\n+    #[primary_span]\n+    pub kind_span: Span,\n+}\n+\n+#[derive(Subdiagnostic)]\n+pub(crate) enum CaptureVarCause {\n+    #[label(borrowck_var_borrow_by_use_place)]\n+    BorrowUsePlace {\n+        place: String,\n+        #[primary_span]\n+        var_span: Span,\n+    },\n+    #[label(borrowck_var_borrow_by_use_place_in_generator)]\n+    BorrowUsePlaceGenerator {\n+        place: String,\n+        #[primary_span]\n+        var_span: Span,\n+    },\n+    #[label(borrowck_var_borrow_by_use_place_in_closure)]\n+    BorrowUsePlaceClosure {\n+        place: String,\n+        #[primary_span]\n+        var_span: Span,\n+    },\n+}"}, {"sha": "80fc4c6e4f5d37098456abf6449eb1d55e1c82ed", "filename": "compiler/rustc_error_messages/locales/en-US/borrowck.ftl", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7dfe1e1664c752b86faee53a35b3a03990037340/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fborrowck.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/7dfe1e1664c752b86faee53a35b3a03990037340/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fborrowck.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fborrowck.ftl?ref=7dfe1e1664c752b86faee53a35b3a03990037340", "patch": "@@ -58,3 +58,15 @@ borrowck_returned_lifetime_short =\n \n borrowck_used_impl_require_static =\n     the used `impl` has a `'static` requirement\n+\n+borrowck_capture_kind_label =\n+    capture is {$kind_desc} because of use here\n+\n+borrowck_var_borrow_by_use_place_in_generator =\n+    borrow occurs due to use of {$place} in closure in generator\n+\n+borrowck_var_borrow_by_use_place_in_closure =\n+    borrow occurs due to use of {$place} in closure\n+\n+borrowck_var_borrow_by_use_place =\n+    borrow occurs due to use of {$place}"}]}