{"sha": "a48a4f5c7a2f6df152b248059e9c926e6c23065d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0OGE0ZjVjN2EyZjZkZjE1MmIyNDgwNTllOWM5MjZlNmMyMzA2NWQ=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-06-23T11:10:48Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-06-23T17:42:10Z"}, "message": "Avoid wasting node ids", "tree": {"sha": "3f20b074e01b2cd3d8e3bf21bd400ac7158e620a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f20b074e01b2cd3d8e3bf21bd400ac7158e620a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a48a4f5c7a2f6df152b248059e9c926e6c23065d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a48a4f5c7a2f6df152b248059e9c926e6c23065d", "html_url": "https://github.com/rust-lang/rust/commit/a48a4f5c7a2f6df152b248059e9c926e6c23065d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a48a4f5c7a2f6df152b248059e9c926e6c23065d/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7da35a5aa7603c3010e1aa9e5ff6de5660058fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7da35a5aa7603c3010e1aa9e5ff6de5660058fb", "html_url": "https://github.com/rust-lang/rust/commit/b7da35a5aa7603c3010e1aa9e5ff6de5660058fb"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "c0be92984392e60a04d5aa67f4a3b4a4c5a9850a", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/a48a4f5c7a2f6df152b248059e9c926e6c23065d/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a48a4f5c7a2f6df152b248059e9c926e6c23065d/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=a48a4f5c7a2f6df152b248059e9c926e6c23065d", "patch": "@@ -763,6 +763,10 @@ pub fn phase_2_configure_and_expand<'a>(sess: &Session,\n }\n \n pub fn assign_node_ids(sess: &Session, krate: ast::Crate) -> ast::Crate {\n+    use syntax::codemap::Spanned;\n+    use syntax::ptr::P;\n+    use syntax::util::move_map::MoveMap;\n+\n     struct NodeIdAssigner<'a> {\n         sess: &'a Session,\n     }\n@@ -772,6 +776,27 @@ pub fn assign_node_ids(sess: &Session, krate: ast::Crate) -> ast::Crate {\n             assert_eq!(old_id, ast::DUMMY_NODE_ID);\n             self.sess.next_node_id()\n         }\n+\n+        fn fold_block(&mut self, block: P<ast::Block>) -> P<ast::Block> {\n+            block.map(|mut block| {\n+                block.id = self.new_id(block.id);\n+\n+                let stmt = block.stmts.pop();\n+                block.stmts = block.stmts.move_flat_map(|s| self.fold_stmt(s).into_iter());\n+                if let Some(Spanned { node: ast::StmtKind::Expr(expr, _), span }) = stmt {\n+                    let expr = self.fold_expr(expr);\n+                    let id = expr.id;\n+                    block.stmts.push(Spanned {\n+                        span: span,\n+                        node: ast::StmtKind::Expr(expr, id)\n+                    });\n+                } else if let Some(stmt) = stmt {\n+                    block.stmts.extend(self.fold_stmt(stmt));\n+                }\n+\n+                block\n+            })\n+        }\n     }\n \n     let krate = time(sess.time_passes(),"}]}