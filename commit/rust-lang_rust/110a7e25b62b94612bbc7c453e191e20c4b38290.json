{"sha": "110a7e25b62b94612bbc7c453e191e20c4b38290", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExMGE3ZTI1YjYyYjk0NjEyYmJjN2M0NTNlMTkxZTIwYzRiMzgyOTA=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-02-03T18:33:29Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-02-03T18:33:33Z"}, "message": "Eliminate \"eager\" qualif getter\n\nAll qualif getters are now lazy", "tree": {"sha": "b23d9408360614ea8649b51e50b557c362f16b15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b23d9408360614ea8649b51e50b557c362f16b15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/110a7e25b62b94612bbc7c453e191e20c4b38290", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/110a7e25b62b94612bbc7c453e191e20c4b38290", "html_url": "https://github.com/rust-lang/rust/commit/110a7e25b62b94612bbc7c453e191e20c4b38290", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/110a7e25b62b94612bbc7c453e191e20c4b38290/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c5ca44b92691424b9a624e08b9588eaa2bfde25", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c5ca44b92691424b9a624e08b9588eaa2bfde25", "html_url": "https://github.com/rust-lang/rust/commit/4c5ca44b92691424b9a624e08b9588eaa2bfde25"}], "stats": {"total": 28, "additions": 6, "deletions": 22}, "files": [{"sha": "1728037ad43b8114dee11a1b39a2008cff1ff69d", "filename": "src/librustc_mir/transform/check_consts/validation.rs", "status": "modified", "additions": 6, "deletions": 22, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/110a7e25b62b94612bbc7c453e191e20c4b38290/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/110a7e25b62b94612bbc7c453e191e20c4b38290/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=110a7e25b62b94612bbc7c453e191e20c4b38290", "patch": "@@ -64,7 +64,7 @@ impl Qualifs<'a, 'mir, 'tcx> {\n     /// Returns `true` if `local` is `NeedsDrop` at the given `Location`.\n     ///\n     /// Only updates the cursor if absolutely necessary\n-    fn needs_drop_lazy_seek(&mut self, local: Local, location: Location) -> bool {\n+    fn needs_drop(&mut self, local: Local, location: Location) -> bool {\n         if !self.needs_drop.in_any_value_of_ty.contains(local) {\n             return false;\n         }\n@@ -76,7 +76,7 @@ impl Qualifs<'a, 'mir, 'tcx> {\n     /// Returns `true` if `local` is `HasMutInterior` at the given `Location`.\n     ///\n     /// Only updates the cursor if absolutely necessary.\n-    fn has_mut_interior_lazy_seek(&mut self, local: Local, location: Location) -> bool {\n+    fn has_mut_interior(&mut self, local: Local, location: Location) -> bool {\n         if !self.has_mut_interior.in_any_value_of_ty.contains(local) {\n             return false;\n         }\n@@ -86,17 +86,6 @@ impl Qualifs<'a, 'mir, 'tcx> {\n             || self.indirectly_mutable(local, location)\n     }\n \n-    /// Returns `true` if `local` is `HasMutInterior`, but requires the `has_mut_interior` and\n-    /// `indirectly_mutable` cursors to be updated beforehand.\n-    fn has_mut_interior_eager_seek(&self, local: Local) -> bool {\n-        if !self.has_mut_interior.in_any_value_of_ty.contains(local) {\n-            return false;\n-        }\n-\n-        self.has_mut_interior.cursor.get().contains(local)\n-            || self.indirectly_mutable.get().contains(local)\n-    }\n-\n     fn in_return_place(&mut self, item: &Item<'_, 'tcx>) -> ConstQualifs {\n         // Find the `Return` terminator if one exists.\n         //\n@@ -120,8 +109,8 @@ impl Qualifs<'a, 'mir, 'tcx> {\n         let return_loc = item.body.terminator_loc(return_block);\n \n         ConstQualifs {\n-            needs_drop: self.needs_drop_lazy_seek(RETURN_PLACE, return_loc),\n-            has_mut_interior: self.has_mut_interior_lazy_seek(RETURN_PLACE, return_loc),\n+            needs_drop: self.needs_drop(RETURN_PLACE, return_loc),\n+            has_mut_interior: self.has_mut_interior(RETURN_PLACE, return_loc),\n         }\n     }\n }\n@@ -246,14 +235,9 @@ impl Validator<'a, 'mir, 'tcx> {\n     }\n \n     fn check_immutable_borrow_like(&mut self, location: Location, place: &Place<'tcx>) {\n-        // FIXME: Change the `in_*` methods to take a `FnMut` so we don't have to manually\n-        // seek the cursors beforehand.\n-        self.qualifs.has_mut_interior.cursor.seek_before(location);\n-        self.qualifs.indirectly_mutable.seek(location);\n-\n         let borrowed_place_has_mut_interior = HasMutInterior::in_place(\n             &self.item,\n-            &mut |local| self.qualifs.has_mut_interior_eager_seek(local),\n+            &mut |local| self.qualifs.has_mut_interior(local, location),\n             place.as_ref(),\n         );\n \n@@ -571,7 +555,7 @@ impl Visitor<'tcx> for Validator<'_, 'mir, 'tcx> {\n                 let needs_drop = if let Some(local) = dropped_place.as_local() {\n                     // Use the span where the local was declared as the span of the drop error.\n                     err_span = self.body.local_decls[local].source_info.span;\n-                    self.qualifs.needs_drop_lazy_seek(local, location)\n+                    self.qualifs.needs_drop(local, location)\n                 } else {\n                     true\n                 };"}]}