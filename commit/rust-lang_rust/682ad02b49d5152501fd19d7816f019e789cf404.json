{"sha": "682ad02b49d5152501fd19d7816f019e789cf404", "node_id": "C_kwDOAAsO6NoAKDY4MmFkMDJiNDlkNTE1MjUwMWZkMTlkNzgxNmYwMTllNzg5Y2Y0MDQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-16T15:58:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-16T15:58:19Z"}, "message": "Rollup merge of #92792 - mdibaiee:92662/fix-intra-doc-generics, r=camelid\n\nrustdoc: fix intra-link for generic trait impls\n\nfixes #92662\n\nr? `````@camelid`````", "tree": {"sha": "8a6bebd38d85025bb038b5b0e4532f967dc77129", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a6bebd38d85025bb038b5b0e4532f967dc77129"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/682ad02b49d5152501fd19d7816f019e789cf404", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh5ECbCRBK7hj4Ov3rIwAACs4IAC2vkXHTBm7SIOpmvfo9ziYH\n0eIaYSPcocGXeReu2CZ8riiiIzlQ3nO9IGaOQZTObmO0zIoF8X6XhjsipWGCcJb+\nBKZV8gRlu7sHlMiUQwiWZYG8HoAQrf+nkeqnJj6BB+W48TQfWhPkzzfltMdXutsW\nNCfpGFO+DFQe3JWVsMi121YDqcqJ0ruRnQtKYchP+9VZVt/wFIjnE1tI7EQDkQTe\nvm9OdzPODAJsWjPYWtS/7rYj4qhh6q0sSiW/XhZmCWxvsS7bvTA17MpQY0aRxy52\n8BzmKfN0xXJXn3i5YXQtZzmNZ4c+2I5czI8Tenhz0Tmh/PnnYPBLPN3XjtbrBLM=\n=+hfB\n-----END PGP SIGNATURE-----\n", "payload": "tree 8a6bebd38d85025bb038b5b0e4532f967dc77129\nparent 9323a0d1bef9b0708e25f0a8abaf5e5f88599f8d\nparent ae20500d76e36b5e8692af499830c4707f713bc0\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1642348699 +0100\ncommitter GitHub <noreply@github.com> 1642348699 +0100\n\nRollup merge of #92792 - mdibaiee:92662/fix-intra-doc-generics, r=camelid\n\nrustdoc: fix intra-link for generic trait impls\n\nfixes #92662\n\nr? `````@camelid`````\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/682ad02b49d5152501fd19d7816f019e789cf404", "html_url": "https://github.com/rust-lang/rust/commit/682ad02b49d5152501fd19d7816f019e789cf404", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/682ad02b49d5152501fd19d7816f019e789cf404/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9323a0d1bef9b0708e25f0a8abaf5e5f88599f8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9323a0d1bef9b0708e25f0a8abaf5e5f88599f8d", "html_url": "https://github.com/rust-lang/rust/commit/9323a0d1bef9b0708e25f0a8abaf5e5f88599f8d"}, {"sha": "ae20500d76e36b5e8692af499830c4707f713bc0", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae20500d76e36b5e8692af499830c4707f713bc0", "html_url": "https://github.com/rust-lang/rust/commit/ae20500d76e36b5e8692af499830c4707f713bc0"}], "stats": {"total": 57, "additions": 54, "deletions": 3}, "files": [{"sha": "1544fae962cb497f954b5bac7b3f89e600f04e01", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/682ad02b49d5152501fd19d7816f019e789cf404/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/682ad02b49d5152501fd19d7816f019e789cf404/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=682ad02b49d5152501fd19d7816f019e789cf404", "patch": "@@ -939,7 +939,18 @@ fn traits_implemented_by<'a>(\n                 ty\n             );\n             // Fast path: if this is a primitive simple `==` will work\n-            let saw_impl = impl_type == ty;\n+            // NOTE: the `match` is necessary; see #92662.\n+            // this allows us to ignore generics because the user input\n+            // may not include the generic placeholders\n+            // e.g. this allows us to match Foo (user comment) with Foo<T> (actual type)\n+            let saw_impl = impl_type == ty\n+                || match (impl_type.kind(), ty.kind()) {\n+                    (ty::Adt(impl_def, _), ty::Adt(ty_def, _)) => {\n+                        debug!(\"impl def_id: {:?}, ty def_id: {:?}\", impl_def.did, ty_def.did);\n+                        impl_def.did == ty_def.did\n+                    }\n+                    _ => false,\n+                };\n \n             if saw_impl { Some(trait_) } else { None }\n         })"}, {"sha": "ab088ab789d43b15d886cd3ec7a4402deb84e5e7", "filename": "src/test/rustdoc/intra-doc/extern-type.rs", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/682ad02b49d5152501fd19d7816f019e789cf404/src%2Ftest%2Frustdoc%2Fintra-doc%2Fextern-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/682ad02b49d5152501fd19d7816f019e789cf404/src%2Ftest%2Frustdoc%2Fintra-doc%2Fextern-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fextern-type.rs?ref=682ad02b49d5152501fd19d7816f019e789cf404", "patch": "@@ -4,14 +4,34 @@ extern {\n     pub type ExternType;\n }\n \n+pub trait T {\n+    fn test(&self) {}\n+}\n+\n+pub trait G<N> {\n+    fn g(&self, n: N) {}\n+}\n+\n impl ExternType {\n-    pub fn f(&self) {\n+    pub fn f(&self) {}\n+}\n \n-    }\n+impl T for ExternType {\n+    fn test(&self) {}\n+}\n+\n+impl G<usize> for ExternType {\n+    fn g(&self, n: usize) {}\n }\n \n // @has 'extern_type/foreigntype.ExternType.html'\n // @has 'extern_type/fn.links_to_extern_type.html' \\\n // 'href=\"foreigntype.ExternType.html#method.f\"'\n+// @has 'extern_type/fn.links_to_extern_type.html' \\\n+// 'href=\"foreigntype.ExternType.html#method.test\"'\n+// @has 'extern_type/fn.links_to_extern_type.html' \\\n+// 'href=\"foreigntype.ExternType.html#method.g\"'\n /// See also [ExternType::f]\n+/// See also [ExternType::test]\n+/// See also [ExternType::g]\n pub fn links_to_extern_type() {}"}, {"sha": "ba8595abfa9590b094cf442a721baf569b3b2e83", "filename": "src/test/rustdoc/intra-doc/generic-trait-impl.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/682ad02b49d5152501fd19d7816f019e789cf404/src%2Ftest%2Frustdoc%2Fintra-doc%2Fgeneric-trait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/682ad02b49d5152501fd19d7816f019e789cf404/src%2Ftest%2Frustdoc%2Fintra-doc%2Fgeneric-trait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fgeneric-trait-impl.rs?ref=682ad02b49d5152501fd19d7816f019e789cf404", "patch": "@@ -0,0 +1,20 @@\n+#![deny(rustdoc::broken_intra_doc_links)]\n+\n+// Test intra-doc links on trait implementations with generics\n+// regression test for issue #92662\n+\n+use std::marker::PhantomData;\n+\n+pub trait Bar<T> {\n+    fn bar(&self);\n+}\n+\n+pub struct Foo<U>(PhantomData<U>);\n+\n+impl<T, U> Bar<T> for Foo<U> {\n+    fn bar(&self) {}\n+}\n+\n+// @has generic_trait_impl/fn.main.html '//a[@href=\"struct.Foo.html#method.bar\"]' 'Foo::bar'\n+/// link to [`Foo::bar`]\n+pub fn main() {}"}]}