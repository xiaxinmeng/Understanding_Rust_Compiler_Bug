{"sha": "48ff9df8a4ea8c4e4820d811b3c9db3c4f78c5fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4ZmY5ZGY4YTRlYThjNGU0ODIwZDgxMWIzYzlkYjNjNGY3OGM1ZmQ=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-09-28T01:47:01Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-10-01T10:29:23Z"}, "message": "Add rewrite_literal()", "tree": {"sha": "a7112ef51a5db8433208faa5cf82f9b6ad2426f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a7112ef51a5db8433208faa5cf82f9b6ad2426f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48ff9df8a4ea8c4e4820d811b3c9db3c4f78c5fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48ff9df8a4ea8c4e4820d811b3c9db3c4f78c5fd", "html_url": "https://github.com/rust-lang/rust/commit/48ff9df8a4ea8c4e4820d811b3c9db3c4f78c5fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48ff9df8a4ea8c4e4820d811b3c9db3c4f78c5fd/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e41100725267974fa6dcc61134d4377b676ad01", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e41100725267974fa6dcc61134d4377b676ad01", "html_url": "https://github.com/rust-lang/rust/commit/6e41100725267974fa6dcc61134d4377b676ad01"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "c240ecdda53649c4431e6f18fcfa42c82237c751", "filename": "src/expr.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/48ff9df8a4ea8c4e4820d811b3c9db3c4f78c5fd/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48ff9df8a4ea8c4e4820d811b3c9db3c4f78c5fd/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=48ff9df8a4ea8c4e4820d811b3c9db3c4f78c5fd", "patch": "@@ -72,12 +72,7 @@ pub fn format_expr(\n             shape,\n             false,\n         ),\n-        ast::ExprKind::Lit(ref l) => match l.node {\n-            ast::LitKind::Str(_, ast::StrStyle::Cooked) => {\n-                rewrite_string_lit(context, l.span, shape)\n-            }\n-            _ => Some(context.snippet(expr.span)),\n-        },\n+        ast::ExprKind::Lit(ref l) => rewrite_literal(context, l, shape),\n         ast::ExprKind::Call(ref callee, ref args) => {\n             let inner_span = mk_sp(callee.span.hi(), expr.span.hi());\n             let callee_str = try_opt!(callee.rewrite(context, shape));\n@@ -1938,6 +1933,13 @@ fn rewrite_pat_expr(\n         .map(|expr_rw| format!(\"\\n{}{}\", nested_indent_str, expr_rw))\n }\n \n+pub fn rewrite_literal(context: &RewriteContext, l: &ast::Lit, shape: Shape) -> Option<String> {\n+    match l.node {\n+        ast::LitKind::Str(_, ast::StrStyle::Cooked) => rewrite_string_lit(context, l.span, shape),\n+        _ => Some(context.snippet(l.span)),\n+    }\n+}\n+\n fn rewrite_string_lit(context: &RewriteContext, span: Span, shape: Shape) -> Option<String> {\n     let string_lit = context.snippet(span);\n "}, {"sha": "36917c2f797963b3aeff7c16413504c43896d562", "filename": "src/visitor.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/48ff9df8a4ea8c4e4820d811b3c9db3c4f78c5fd/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48ff9df8a4ea8c4e4820d811b3c9db3c4f78c5fd/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=48ff9df8a4ea8c4e4820d811b3c9db3c4f78c5fd", "patch": "@@ -16,6 +16,7 @@ use syntax::attr::HasAttrs;\n use syntax::codemap::{self, BytePos, CodeMap, Pos, Span};\n use syntax::parse::ParseSess;\n \n+use expr::rewrite_literal;\n use spanned::Spanned;\n use codemap::{LineRangeUtils, SpanUtils};\n use comment::{contains_comment, recover_missing_comment_in_span, CodeCharKind, CommentCodeSlices,\n@@ -810,7 +811,7 @@ impl Rewrite for ast::NestedMetaItem {\n     fn rewrite(&self, context: &RewriteContext, shape: Shape) -> Option<String> {\n         match self.node {\n             ast::NestedMetaItemKind::MetaItem(ref meta_item) => meta_item.rewrite(context, shape),\n-            ast::NestedMetaItemKind::Literal(..) => Some(context.snippet(self.span)),\n+            ast::NestedMetaItemKind::Literal(ref l) => rewrite_literal(context, l, shape),\n         }\n     }\n }"}]}