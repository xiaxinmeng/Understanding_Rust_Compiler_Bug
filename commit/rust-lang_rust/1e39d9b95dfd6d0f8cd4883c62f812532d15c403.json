{"sha": "1e39d9b95dfd6d0f8cd4883c62f812532d15c403", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlMzlkOWI5NWRmZDZkMGY4Y2Q0ODgzYzYyZjgxMjUzMmQxNWM0MDM=", "commit": {"author": {"name": "XuefengWu", "email": "benewu@gmail.com", "date": "2015-05-10T09:09:56Z"}, "committer": {"name": "Xuefeng Wu", "email": "benewu@gmail.com", "date": "2015-05-16T09:22:27Z"}, "message": "change Self type error message", "tree": {"sha": "ad18903d1172b3980e154f489553ac12b9ed75aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad18903d1172b3980e154f489553ac12b9ed75aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e39d9b95dfd6d0f8cd4883c62f812532d15c403", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e39d9b95dfd6d0f8cd4883c62f812532d15c403", "html_url": "https://github.com/rust-lang/rust/commit/1e39d9b95dfd6d0f8cd4883c62f812532d15c403", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e39d9b95dfd6d0f8cd4883c62f812532d15c403/comments", "author": {"login": "XuefengWu", "id": 161701, "node_id": "MDQ6VXNlcjE2MTcwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/161701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XuefengWu", "html_url": "https://github.com/XuefengWu", "followers_url": "https://api.github.com/users/XuefengWu/followers", "following_url": "https://api.github.com/users/XuefengWu/following{/other_user}", "gists_url": "https://api.github.com/users/XuefengWu/gists{/gist_id}", "starred_url": "https://api.github.com/users/XuefengWu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XuefengWu/subscriptions", "organizations_url": "https://api.github.com/users/XuefengWu/orgs", "repos_url": "https://api.github.com/users/XuefengWu/repos", "events_url": "https://api.github.com/users/XuefengWu/events{/privacy}", "received_events_url": "https://api.github.com/users/XuefengWu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "XuefengWu", "id": 161701, "node_id": "MDQ6VXNlcjE2MTcwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/161701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XuefengWu", "html_url": "https://github.com/XuefengWu", "followers_url": "https://api.github.com/users/XuefengWu/followers", "following_url": "https://api.github.com/users/XuefengWu/following{/other_user}", "gists_url": "https://api.github.com/users/XuefengWu/gists{/gist_id}", "starred_url": "https://api.github.com/users/XuefengWu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XuefengWu/subscriptions", "organizations_url": "https://api.github.com/users/XuefengWu/orgs", "repos_url": "https://api.github.com/users/XuefengWu/repos", "events_url": "https://api.github.com/users/XuefengWu/events{/privacy}", "received_events_url": "https://api.github.com/users/XuefengWu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e82c21bf3479d338fcb8f378095daa8e698de1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e82c21bf3479d338fcb8f378095daa8e698de1e", "html_url": "https://github.com/rust-lang/rust/commit/8e82c21bf3479d338fcb8f378095daa8e698de1e"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "7347b59dd4cf6674823eb6971b7d75e83e1da934", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e39d9b95dfd6d0f8cd4883c62f812532d15c403/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e39d9b95dfd6d0f8cd4883c62f812532d15c403/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=1e39d9b95dfd6d0f8cd4883c62f812532d15c403", "patch": "@@ -2367,7 +2367,7 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n                             maybe_qself.is_none() &&\n                             path.segments[0].identifier.name == self_type_name;\n                         let msg = if is_invalid_self_type_name {\n-                            \"expected type name, found keyword `Self`\".to_string()\n+                            \"use of Self outside of an impl\".to_string()\n                         } else {\n                             format!(\"use of undeclared {} `{}`\",\n                                 kind, path_names_to_string(path, 0))"}]}