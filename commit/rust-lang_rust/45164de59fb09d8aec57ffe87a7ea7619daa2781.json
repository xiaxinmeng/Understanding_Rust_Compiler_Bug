{"sha": "45164de59fb09d8aec57ffe87a7ea7619daa2781", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1MTY0ZGU1OWZiMDlkOGFlYzU3ZmZlODdhN2VhNzYxOWRhYTI3ODE=", "commit": {"author": {"name": "Yoshitomo Nakanishi", "email": "yurayura.rounin.3@gmail.com", "date": "2021-03-31T02:18:48Z"}, "committer": {"name": "Yoshitomo Nakanishi", "email": "yurayura.rounin.3@gmail.com", "date": "2021-03-31T02:18:48Z"}, "message": "result_unit_err: Fix typo", "tree": {"sha": "623f0cd16492babbe14ff0d2db4a1b9204018201", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/623f0cd16492babbe14ff0d2db4a1b9204018201"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45164de59fb09d8aec57ffe87a7ea7619daa2781", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45164de59fb09d8aec57ffe87a7ea7619daa2781", "html_url": "https://github.com/rust-lang/rust/commit/45164de59fb09d8aec57ffe87a7ea7619daa2781", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45164de59fb09d8aec57ffe87a7ea7619daa2781/comments", "author": {"login": "Y-Nak", "id": 6376004, "node_id": "MDQ6VXNlcjYzNzYwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6376004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Y-Nak", "html_url": "https://github.com/Y-Nak", "followers_url": "https://api.github.com/users/Y-Nak/followers", "following_url": "https://api.github.com/users/Y-Nak/following{/other_user}", "gists_url": "https://api.github.com/users/Y-Nak/gists{/gist_id}", "starred_url": "https://api.github.com/users/Y-Nak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Y-Nak/subscriptions", "organizations_url": "https://api.github.com/users/Y-Nak/orgs", "repos_url": "https://api.github.com/users/Y-Nak/repos", "events_url": "https://api.github.com/users/Y-Nak/events{/privacy}", "received_events_url": "https://api.github.com/users/Y-Nak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Y-Nak", "id": 6376004, "node_id": "MDQ6VXNlcjYzNzYwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6376004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Y-Nak", "html_url": "https://github.com/Y-Nak", "followers_url": "https://api.github.com/users/Y-Nak/followers", "following_url": "https://api.github.com/users/Y-Nak/following{/other_user}", "gists_url": "https://api.github.com/users/Y-Nak/gists{/gist_id}", "starred_url": "https://api.github.com/users/Y-Nak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Y-Nak/subscriptions", "organizations_url": "https://api.github.com/users/Y-Nak/orgs", "repos_url": "https://api.github.com/users/Y-Nak/repos", "events_url": "https://api.github.com/users/Y-Nak/events{/privacy}", "received_events_url": "https://api.github.com/users/Y-Nak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0552852d9a1e7a3327769a6464df252d55d502f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/0552852d9a1e7a3327769a6464df252d55d502f4", "html_url": "https://github.com/rust-lang/rust/commit/0552852d9a1e7a3327769a6464df252d55d502f4"}], "stats": {"total": 40, "additions": 20, "deletions": 20}, "files": [{"sha": "3d1092ce21f60dcb4e07d1451302e362c935156b", "filename": "clippy_lints/src/functions/result_unit_err.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/45164de59fb09d8aec57ffe87a7ea7619daa2781/clippy_lints%2Fsrc%2Ffunctions%2Fresult_unit_err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45164de59fb09d8aec57ffe87a7ea7619daa2781/clippy_lints%2Fsrc%2Ffunctions%2Fresult_unit_err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions%2Fresult_unit_err.rs?ref=45164de59fb09d8aec57ffe87a7ea7619daa2781", "patch": "@@ -57,9 +57,9 @@ fn check_result_unit_err(cx: &LateContext<'_>, decl: &hir::FnDecl<'_>, item_span\n                 cx,\n                 RESULT_UNIT_ERR,\n                 fn_header_span,\n-                \"this returns a `Result<_, ()>\",\n+                \"this returns a `Result<_, ()>`\",\n                 None,\n-                \"use a custom Error type instead\",\n+                \"use a custom `Error` type instead\",\n             );\n         }\n     }"}, {"sha": "3282709bcd6717f664ef135c6132b38e9ab3a389", "filename": "tests/ui/len_without_is_empty.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/45164de59fb09d8aec57ffe87a7ea7619daa2781/tests%2Fui%2Flen_without_is_empty.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45164de59fb09d8aec57ffe87a7ea7619daa2781/tests%2Fui%2Flen_without_is_empty.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flen_without_is_empty.stderr?ref=45164de59fb09d8aec57ffe87a7ea7619daa2781", "patch": "@@ -86,38 +86,38 @@ LL |     pub fn is_empty(&self) -> Option<bool> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: expected signature: `(&self) -> bool` or `(&self) -> Result<bool>\n \n-error: this returns a `Result<_, ()>\n+error: this returns a `Result<_, ()>`\n   --> $DIR/len_without_is_empty.rs:230:5\n    |\n LL |     pub fn len(&self) -> Result<usize, ()> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::result-unit-err` implied by `-D warnings`\n-   = help: use a custom Error type instead\n+   = help: use a custom `Error` type instead\n \n-error: this returns a `Result<_, ()>\n+error: this returns a `Result<_, ()>`\n   --> $DIR/len_without_is_empty.rs:242:5\n    |\n LL |     pub fn len(&self) -> Result<usize, ()> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: use a custom Error type instead\n+   = help: use a custom `Error` type instead\n \n-error: this returns a `Result<_, ()>\n+error: this returns a `Result<_, ()>`\n   --> $DIR/len_without_is_empty.rs:246:5\n    |\n LL |     pub fn is_empty(&self) -> Result<bool, ()> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: use a custom Error type instead\n+   = help: use a custom `Error` type instead\n \n-error: this returns a `Result<_, ()>\n+error: this returns a `Result<_, ()>`\n   --> $DIR/len_without_is_empty.rs:253:5\n    |\n LL |     pub fn len(&self) -> Result<usize, ()> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: use a custom Error type instead\n+   = help: use a custom `Error` type instead\n \n error: aborting due to 12 previous errors\n "}, {"sha": "8c7573eabda94ac17bf279b3e8c7aa7ef18a77ab", "filename": "tests/ui/result_unit_error.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/45164de59fb09d8aec57ffe87a7ea7619daa2781/tests%2Fui%2Fresult_unit_error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45164de59fb09d8aec57ffe87a7ea7619daa2781/tests%2Fui%2Fresult_unit_error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fresult_unit_error.stderr?ref=45164de59fb09d8aec57ffe87a7ea7619daa2781", "patch": "@@ -1,43 +1,43 @@\n-error: this returns a `Result<_, ()>\n+error: this returns a `Result<_, ()>`\n   --> $DIR/result_unit_error.rs:3:1\n    |\n LL | pub fn returns_unit_error() -> Result<u32, ()> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::result-unit-err` implied by `-D warnings`\n-   = help: use a custom Error type instead\n+   = help: use a custom `Error` type instead\n \n-error: this returns a `Result<_, ()>\n+error: this returns a `Result<_, ()>`\n   --> $DIR/result_unit_error.rs:12:5\n    |\n LL |     fn get_that_error(&self) -> Result<bool, ()>;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: use a custom Error type instead\n+   = help: use a custom `Error` type instead\n \n-error: this returns a `Result<_, ()>\n+error: this returns a `Result<_, ()>`\n   --> $DIR/result_unit_error.rs:14:5\n    |\n LL |     fn get_this_one_too(&self) -> Result<bool, ()> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: use a custom Error type instead\n+   = help: use a custom `Error` type instead\n \n-error: this returns a `Result<_, ()>\n+error: this returns a `Result<_, ()>`\n   --> $DIR/result_unit_error.rs:32:5\n    |\n LL |     pub fn unit_error(&self) -> Result<usize, ()> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: use a custom Error type instead\n+   = help: use a custom `Error` type instead\n \n-error: this returns a `Result<_, ()>\n+error: this returns a `Result<_, ()>`\n   --> $DIR/result_unit_error.rs:41:5\n    |\n LL |     pub fn should_lint() -> ResInv<(), usize> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: use a custom Error type instead\n+   = help: use a custom `Error` type instead\n \n error: aborting due to 5 previous errors\n "}]}