{"sha": "ac2b7a261c94d2d7d718bede54fc93c7f2fdd641", "node_id": "C_kwDOAAsO6NoAKGFjMmI3YTI2MWM5NGQyZDdkNzE4YmVkZTU0ZmM5M2M3ZjJmZGQ2NDE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-06-16T07:10:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-16T07:10:20Z"}, "message": "Rollup merge of #97757 - xFrednet:rfc-2383-expect-with-force-warn, r=wesleywiser,flip1995\n\nSupport lint expectations for `--force-warn` lints (RFC 2383)\n\nRustc has a `--force-warn` flag, which overrides lint level attributes and forces the diagnostics to always be warn. This means, that for lint expectations, the diagnostic can't be suppressed as usual. This also means that the expectation would not be fulfilled, even if a lint had been triggered in the expected scope.\n\nThis PR now also tracks the expectation ID in the `ForceWarn` level. I've also made some minor adjustments, to possibly catch more bugs and make the whole implementation more robust.\n\nThis will probably conflict with https://github.com/rust-lang/rust/pull/97718. That PR should ideally be reviewed and merged first. The conflict itself will be trivial to fix.\n\n---\n\nr? `@wesleywiser`\n\ncc: `@flip1995` since you've helped with the initial review and also discussed this topic with me. :upside_down_face:\n\nFollow-up of: https://github.com/rust-lang/rust/pull/87835\n\nIssue: https://github.com/rust-lang/rust/issues/85549\n\nYeah, and that's it.", "tree": {"sha": "e05a16e385c43dbd68050da55b016ec227354fcb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e05a16e385c43dbd68050da55b016ec227354fcb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac2b7a261c94d2d7d718bede54fc93c7f2fdd641", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac2b7a261c94d2d7d718bede54fc93c7f2fdd641", "html_url": "https://github.com/rust-lang/rust/commit/ac2b7a261c94d2d7d718bede54fc93c7f2fdd641", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac2b7a261c94d2d7d718bede54fc93c7f2fdd641/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d03a547cad3ce8a3dc3b424156e0eec38475da1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d03a547cad3ce8a3dc3b424156e0eec38475da1b", "html_url": "https://github.com/rust-lang/rust/commit/d03a547cad3ce8a3dc3b424156e0eec38475da1b"}, {"sha": "76cbc1dae300a3c9edb07e5a59e91738d9d6027c", "url": "https://api.github.com/repos/rust-lang/rust/commits/76cbc1dae300a3c9edb07e5a59e91738d9d6027c", "html_url": "https://github.com/rust-lang/rust/commit/76cbc1dae300a3c9edb07e5a59e91738d9d6027c"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "23db5421910365de9693434cc0eccb1926578954", "filename": "src/parse/session.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ac2b7a261c94d2d7d718bede54fc93c7f2fdd641/src%2Fparse%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac2b7a261c94d2d7d718bede54fc93c7f2fdd641/src%2Fparse%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparse%2Fsession.rs?ref=ac2b7a261c94d2d7d718bede54fc93c7f2fdd641", "patch": "@@ -433,7 +433,7 @@ mod tests {\n                 Some(ignore_list),\n             );\n             let span = MultiSpan::from_span(mk_sp(BytePos(0), BytePos(1)));\n-            let non_fatal_diagnostic = build_diagnostic(DiagnosticLevel::Warning, Some(span));\n+            let non_fatal_diagnostic = build_diagnostic(DiagnosticLevel::Warning(None), Some(span));\n             emitter.emit_diagnostic(&non_fatal_diagnostic);\n             assert_eq!(num_emitted_errors.load(Ordering::Acquire), 0);\n             assert_eq!(can_reset_errors.load(Ordering::Acquire), true);\n@@ -457,7 +457,7 @@ mod tests {\n                 None,\n             );\n             let span = MultiSpan::from_span(mk_sp(BytePos(0), BytePos(1)));\n-            let non_fatal_diagnostic = build_diagnostic(DiagnosticLevel::Warning, Some(span));\n+            let non_fatal_diagnostic = build_diagnostic(DiagnosticLevel::Warning(None), Some(span));\n             emitter.emit_diagnostic(&non_fatal_diagnostic);\n             assert_eq!(num_emitted_errors.load(Ordering::Acquire), 1);\n             assert_eq!(can_reset_errors.load(Ordering::Acquire), false);\n@@ -494,8 +494,8 @@ mod tests {\n             );\n             let bar_span = MultiSpan::from_span(mk_sp(BytePos(0), BytePos(1)));\n             let foo_span = MultiSpan::from_span(mk_sp(BytePos(21), BytePos(22)));\n-            let bar_diagnostic = build_diagnostic(DiagnosticLevel::Warning, Some(bar_span));\n-            let foo_diagnostic = build_diagnostic(DiagnosticLevel::Warning, Some(foo_span));\n+            let bar_diagnostic = build_diagnostic(DiagnosticLevel::Warning(None), Some(bar_span));\n+            let foo_diagnostic = build_diagnostic(DiagnosticLevel::Warning(None), Some(foo_span));\n             let fatal_diagnostic = build_diagnostic(DiagnosticLevel::Fatal, None);\n             emitter.emit_diagnostic(&bar_diagnostic);\n             emitter.emit_diagnostic(&foo_diagnostic);"}]}