{"sha": "3901198e87df9c85b4a2e996240ca05c6950900f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5MDExOThlODdkZjljODViNGEyZTk5NjI0MGNhMDVjNjk1MDkwMGY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-03-30T09:57:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-30T09:57:40Z"}, "message": "Merge #3763\n\n3763: Simplify r=matklad a=Veetaha\n\n\n\nCo-authored-by: veetaha <veetaha2@gmail.com>", "tree": {"sha": "428357ba8fdd248c2299e07db171592e6ebfe907", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/428357ba8fdd248c2299e07db171592e6ebfe907"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3901198e87df9c85b4a2e996240ca05c6950900f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJegcKUCRBK7hj4Ov3rIwAAdHIIAKXxrBbSJyrO8DuwrzjWY/4C\n3AO0zUckyQoxASdm+gPKn0JW8JqU4v49TnFP/ARB3c8tOXqFoywXWh/TD4Uy+2VA\nQPvqKxMev+1Ms6xdM9ufWnXWq0QudGSsVH3sur0FUpmNSbaB5G3RkV17YwjlMRaU\nRnKIG0S8yaPJ67z1CPXpiFmogPdQij1tZKBzLar381x2rWxtjvLe9IyQ3hXZaZE2\nJM3RNluBeaVMqBzqwqZq8sRfyC118fV2KOEbYyeUv8QrTtnZ9DYj7op0T8kBUTRh\nd9Ho5pVeDmVKHiAW+7SHn3qzKrFC1zoOa4s1HWdCrAq7mOC1R0S44yxL7qkyw6w=\n=D1oU\n-----END PGP SIGNATURE-----\n", "payload": "tree 428357ba8fdd248c2299e07db171592e6ebfe907\nparent 78a2678b6d31eb8a0c5eafd0fdf4eea7da5321a3\nparent 3d73345cdba5a6635f719134d8aef3a419783c2a\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1585562260 +0000\ncommitter GitHub <noreply@github.com> 1585562260 +0000\n\nMerge #3763\n\n3763: Simplify r=matklad a=Veetaha\n\n\n\nCo-authored-by: veetaha <veetaha2@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3901198e87df9c85b4a2e996240ca05c6950900f", "html_url": "https://github.com/rust-lang/rust/commit/3901198e87df9c85b4a2e996240ca05c6950900f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3901198e87df9c85b4a2e996240ca05c6950900f/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78a2678b6d31eb8a0c5eafd0fdf4eea7da5321a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/78a2678b6d31eb8a0c5eafd0fdf4eea7da5321a3", "html_url": "https://github.com/rust-lang/rust/commit/78a2678b6d31eb8a0c5eafd0fdf4eea7da5321a3"}, {"sha": "3d73345cdba5a6635f719134d8aef3a419783c2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d73345cdba5a6635f719134d8aef3a419783c2a", "html_url": "https://github.com/rust-lang/rust/commit/3d73345cdba5a6635f719134d8aef3a419783c2a"}], "stats": {"total": 15, "additions": 4, "deletions": 11}, "files": [{"sha": "c3d92a268fdad0e6707300b5e724a05309ed14d6", "filename": "crates/ra_hir_ty/src/display.rs", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3901198e87df9c85b4a2e996240ca05c6950900f/crates%2Fra_hir_ty%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3901198e87df9c85b4a2e996240ca05c6950900f/crates%2Fra_hir_ty%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Fdisplay.rs?ref=3901198e87df9c85b4a2e996240ca05c6950900f", "patch": "@@ -159,20 +159,13 @@ impl HirDisplay for ApplicationTy {\n             }\n             TypeCtor::FnDef(def) => {\n                 let sig = f.db.callable_item_signature(def).subst(&self.parameters);\n-                let name = match def {\n-                    CallableDef::FunctionId(ff) => f.db.function_data(ff).name.clone(),\n-                    CallableDef::StructId(s) => f.db.struct_data(s).name.clone(),\n+                match def {\n+                    CallableDef::FunctionId(ff) => write!(f, \"fn {}\", f.db.function_data(ff).name)?,\n+                    CallableDef::StructId(s) => write!(f, \"{}\", f.db.struct_data(s).name)?,\n                     CallableDef::EnumVariantId(e) => {\n-                        let enum_data = f.db.enum_data(e.parent);\n-                        enum_data.variants[e.local_id].name.clone()\n+                        write!(f, \"{}\", f.db.enum_data(e.parent).variants[e.local_id].name)?\n                     }\n                 };\n-                match def {\n-                    CallableDef::FunctionId(_) => write!(f, \"fn {}\", name)?,\n-                    CallableDef::StructId(_) | CallableDef::EnumVariantId(_) => {\n-                        write!(f, \"{}\", name)?\n-                    }\n-                }\n                 if self.parameters.len() > 0 {\n                     let generics = generics(f.db.upcast(), def.into());\n                     let (parent_params, self_param, type_params, _impl_trait_params) ="}]}