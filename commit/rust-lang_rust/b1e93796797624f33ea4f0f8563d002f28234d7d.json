{"sha": "b1e93796797624f33ea4f0f8563d002f28234d7d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxZTkzNzk2Nzk3NjI0ZjMzZWE0ZjBmODU2M2QwMDJmMjgyMzRkN2Q=", "commit": {"author": {"name": "Nicholas-Baron", "email": "nicholas.baron.ten@gmail.com", "date": "2020-09-19T19:31:48Z"}, "committer": {"name": "Nicholas-Baron", "email": "nicholas.baron.ten@gmail.com", "date": "2020-09-21T01:58:32Z"}, "message": "Formatted use statements for fewer lines", "tree": {"sha": "c809bd6431004bc21ee78ddac5455253216d6ea1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c809bd6431004bc21ee78ddac5455253216d6ea1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1e93796797624f33ea4f0f8563d002f28234d7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1e93796797624f33ea4f0f8563d002f28234d7d", "html_url": "https://github.com/rust-lang/rust/commit/b1e93796797624f33ea4f0f8563d002f28234d7d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1e93796797624f33ea4f0f8563d002f28234d7d/comments", "author": {"login": "Nicholas-Baron", "id": 35079404, "node_id": "MDQ6VXNlcjM1MDc5NDA0", "avatar_url": "https://avatars.githubusercontent.com/u/35079404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nicholas-Baron", "html_url": "https://github.com/Nicholas-Baron", "followers_url": "https://api.github.com/users/Nicholas-Baron/followers", "following_url": "https://api.github.com/users/Nicholas-Baron/following{/other_user}", "gists_url": "https://api.github.com/users/Nicholas-Baron/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nicholas-Baron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nicholas-Baron/subscriptions", "organizations_url": "https://api.github.com/users/Nicholas-Baron/orgs", "repos_url": "https://api.github.com/users/Nicholas-Baron/repos", "events_url": "https://api.github.com/users/Nicholas-Baron/events{/privacy}", "received_events_url": "https://api.github.com/users/Nicholas-Baron/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nicholas-Baron", "id": 35079404, "node_id": "MDQ6VXNlcjM1MDc5NDA0", "avatar_url": "https://avatars.githubusercontent.com/u/35079404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nicholas-Baron", "html_url": "https://github.com/Nicholas-Baron", "followers_url": "https://api.github.com/users/Nicholas-Baron/followers", "following_url": "https://api.github.com/users/Nicholas-Baron/following{/other_user}", "gists_url": "https://api.github.com/users/Nicholas-Baron/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nicholas-Baron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nicholas-Baron/subscriptions", "organizations_url": "https://api.github.com/users/Nicholas-Baron/orgs", "repos_url": "https://api.github.com/users/Nicholas-Baron/repos", "events_url": "https://api.github.com/users/Nicholas-Baron/events{/privacy}", "received_events_url": "https://api.github.com/users/Nicholas-Baron/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7995d5cda4cd5154def40770f4527e7867f37c1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7995d5cda4cd5154def40770f4527e7867f37c1a", "html_url": "https://github.com/rust-lang/rust/commit/7995d5cda4cd5154def40770f4527e7867f37c1a"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "2a906f5b6ed074135cfec2097685becebe6f8f56", "filename": "compiler/rustc_typeck/src/check/fn_ctxt.rs", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b1e93796797624f33ea4f0f8563d002f28234d7d/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1e93796797624f33ea4f0f8563d002f28234d7d/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt.rs?ref=b1e93796797624f33ea4f0f8563d002f28234d7d", "patch": "@@ -1,12 +1,11 @@\n use super::callee::{self, DeferredCallResolution};\n use super::coercion::{CoerceMany, DynamicCoerceMany};\n-use super::method::{MethodCallee, SelfSource};\n+use super::method::{self, MethodCallee, SelfSource};\n use super::Expectation::*;\n use super::TupleArgumentsFlag::*;\n use super::{\n-    method, potentially_plural_count, struct_span_err, BreakableCtxt, Diverges,\n-    EnclosingBreakables, Expectation, FallbackMode, Inherited, LocalTy, Needs, TupleArgumentsFlag,\n-    UnsafetyState,\n+    potentially_plural_count, struct_span_err, BreakableCtxt, Diverges, EnclosingBreakables,\n+    Expectation, FallbackMode, Inherited, LocalTy, Needs, TupleArgumentsFlag, UnsafetyState,\n };\n use crate::astconv::{\n     AstConv, ExplicitLateBound, GenericArgCountMismatch, GenericArgCountResult, PathSeg,\n@@ -23,12 +22,11 @@ use rustc_hir::def::{CtorOf, DefKind, Res};\n use rustc_hir::def_id::DefId;\n use rustc_hir::lang_items::LangItem;\n use rustc_hir::{ExprKind, GenericArg, ItemKind, Node, QPath};\n-use rustc_infer::infer;\n use rustc_infer::infer::canonical::{Canonical, OriginalQueryValues, QueryResponse};\n use rustc_infer::infer::error_reporting::TypeAnnotationNeeded::E0282;\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc_infer::infer::unify_key::{ConstVariableOrigin, ConstVariableOriginKind};\n-use rustc_infer::infer::{InferOk, InferResult};\n+use rustc_infer::infer::{self, InferOk, InferResult};\n use rustc_middle::hir::map::blocks::FnLikeNode;\n use rustc_middle::ty::adjustment::{\n     Adjust, Adjustment, AllowTwoPhase, AutoBorrow, AutoBorrowMutability,\n@@ -41,8 +39,7 @@ use rustc_middle::ty::{\n     self, AdtKind, CanonicalUserType, Const, DefIdTree, GenericParamDefKind, ToPolyTraitRef,\n     ToPredicate, Ty, TyCtxt, UserType,\n };\n-use rustc_session::lint;\n-use rustc_session::Session;\n+use rustc_session::{lint, Session};\n use rustc_span::hygiene::DesugaringKind;\n use rustc_span::source_map::{original_sp, DUMMY_SP};\n use rustc_span::symbol::{kw, sym, Ident};"}]}