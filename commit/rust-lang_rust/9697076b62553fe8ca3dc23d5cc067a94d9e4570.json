{"sha": "9697076b62553fe8ca3dc23d5cc067a94d9e4570", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2OTcwNzZiNjI1NTNmZThjYTNkYzIzZDVjYzA2N2E5NGQ5ZTQ1NzA=", "commit": {"author": {"name": "Sebastian Hahn", "email": "sebastian@torproject.org", "date": "2015-12-18T22:32:16Z"}, "committer": {"name": "Sebastian Hahn", "email": "sebastian@torproject.org", "date": "2015-12-18T23:23:07Z"}, "message": "Implement arc::Weak::new()", "tree": {"sha": "af8869eee7ced44315f59905d083faadbca40b2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af8869eee7ced44315f59905d083faadbca40b2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9697076b62553fe8ca3dc23d5cc067a94d9e4570", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9697076b62553fe8ca3dc23d5cc067a94d9e4570", "html_url": "https://github.com/rust-lang/rust/commit/9697076b62553fe8ca3dc23d5cc067a94d9e4570", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9697076b62553fe8ca3dc23d5cc067a94d9e4570/comments", "author": {"login": "shahn", "id": 128636, "node_id": "MDQ6VXNlcjEyODYzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/128636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shahn", "html_url": "https://github.com/shahn", "followers_url": "https://api.github.com/users/shahn/followers", "following_url": "https://api.github.com/users/shahn/following{/other_user}", "gists_url": "https://api.github.com/users/shahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/shahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shahn/subscriptions", "organizations_url": "https://api.github.com/users/shahn/orgs", "repos_url": "https://api.github.com/users/shahn/repos", "events_url": "https://api.github.com/users/shahn/events{/privacy}", "received_events_url": "https://api.github.com/users/shahn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "shahn", "id": 128636, "node_id": "MDQ6VXNlcjEyODYzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/128636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shahn", "html_url": "https://github.com/shahn", "followers_url": "https://api.github.com/users/shahn/followers", "following_url": "https://api.github.com/users/shahn/following{/other_user}", "gists_url": "https://api.github.com/users/shahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/shahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shahn/subscriptions", "organizations_url": "https://api.github.com/users/shahn/orgs", "repos_url": "https://api.github.com/users/shahn/repos", "events_url": "https://api.github.com/users/shahn/events{/privacy}", "received_events_url": "https://api.github.com/users/shahn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4741ad38b59d633144ccdfefd3398ec7cf85b3cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/4741ad38b59d633144ccdfefd3398ec7cf85b3cc", "html_url": "https://github.com/rust-lang/rust/commit/4741ad38b59d633144ccdfefd3398ec7cf85b3cc"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "377dfb11f9255a8458897460d10cffec0c4c995c", "filename": "src/liballoc/arc.rs", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/9697076b62553fe8ca3dc23d5cc067a94d9e4570/src%2Fliballoc%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9697076b62553fe8ca3dc23d5cc067a94d9e4570/src%2Fliballoc%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Farc.rs?ref=9697076b62553fe8ca3dc23d5cc067a94d9e4570", "patch": "@@ -79,6 +79,7 @@ use core::cmp::Ordering;\n use core::mem::{align_of_val, size_of_val};\n use core::intrinsics::abort;\n use core::mem;\n+use core::mem::uninitialized;\n use core::ops::Deref;\n #[cfg(not(stage0))]\n use core::ops::CoerceUnsized;\n@@ -910,6 +911,36 @@ impl<T> From<T> for Arc<T> {\n     }\n }\n \n+impl<T> Weak<T> {\n+    /// Constructs a new `Weak<T>` without an accompanying instance of T.\n+    ///\n+    /// This allocates memory for T, but does not initialize it. Calling\n+    /// Weak<T>::upgrade() on the return value always gives None.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(downgraded_weak)]\n+    ///\n+    /// use std::sync::Arc;\n+    ///\n+    /// let five = Arc::new(5);\n+    /// ```\n+    #[unstable(feature = \"downgraded_weak\",\n+               reason = \"recently added\",\n+               issue = \"30425\")]\n+    pub fn new() -> Weak<T> {\n+        unsafe {\n+            let x: Box<_> = box ArcInner {\n+                strong: atomic::AtomicUsize::new(0),\n+                weak: atomic::AtomicUsize::new(1),\n+                data: uninitialized(),\n+            };\n+            Weak { _ptr: Shared::new(Box::into_raw(x)) }\n+        }\n+    }\n+}\n+\n #[cfg(test)]\n mod tests {\n     use std::clone::Clone;\n@@ -1160,6 +1191,12 @@ mod tests {\n         let foo_arc = Arc::from(foo);\n         assert!(123 == *foo_arc);\n     }\n+\n+    #[test]\n+    fn test_new_weak() {\n+        let foo: Weak<usize> = Weak::new();\n+        assert!(foo.upgrade().is_none());\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}]}