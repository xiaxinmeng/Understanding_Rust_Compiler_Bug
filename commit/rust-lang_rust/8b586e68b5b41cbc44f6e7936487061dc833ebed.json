{"sha": "8b586e68b5b41cbc44f6e7936487061dc833ebed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiNTg2ZTY4YjViNDFjYmM0NGY2ZTc5MzY0ODcwNjFkYzgzM2ViZWQ=", "commit": {"author": {"name": "leonardo.yvens", "email": "leoyvens@gmail.com", "date": "2017-10-14T21:23:50Z"}, "committer": {"name": "leonardo.yvens", "email": "leoyvens@gmail.com", "date": "2017-11-03T18:13:21Z"}, "message": "auto trait future compatibility lint", "tree": {"sha": "c4f726160cfa01352d9efcca5a1d6d3745a644bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4f726160cfa01352d9efcca5a1d6d3745a644bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b586e68b5b41cbc44f6e7936487061dc833ebed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b586e68b5b41cbc44f6e7936487061dc833ebed", "html_url": "https://github.com/rust-lang/rust/commit/8b586e68b5b41cbc44f6e7936487061dc833ebed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b586e68b5b41cbc44f6e7936487061dc833ebed/comments", "author": {"login": "leoyvens", "id": 9885558, "node_id": "MDQ6VXNlcjk4ODU1NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/9885558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leoyvens", "html_url": "https://github.com/leoyvens", "followers_url": "https://api.github.com/users/leoyvens/followers", "following_url": "https://api.github.com/users/leoyvens/following{/other_user}", "gists_url": "https://api.github.com/users/leoyvens/gists{/gist_id}", "starred_url": "https://api.github.com/users/leoyvens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leoyvens/subscriptions", "organizations_url": "https://api.github.com/users/leoyvens/orgs", "repos_url": "https://api.github.com/users/leoyvens/repos", "events_url": "https://api.github.com/users/leoyvens/events{/privacy}", "received_events_url": "https://api.github.com/users/leoyvens/received_events", "type": "User", "site_admin": false}, "committer": {"login": "leoyvens", "id": 9885558, "node_id": "MDQ6VXNlcjk4ODU1NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/9885558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leoyvens", "html_url": "https://github.com/leoyvens", "followers_url": "https://api.github.com/users/leoyvens/followers", "following_url": "https://api.github.com/users/leoyvens/following{/other_user}", "gists_url": "https://api.github.com/users/leoyvens/gists{/gist_id}", "starred_url": "https://api.github.com/users/leoyvens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leoyvens/subscriptions", "organizations_url": "https://api.github.com/users/leoyvens/orgs", "repos_url": "https://api.github.com/users/leoyvens/repos", "events_url": "https://api.github.com/users/leoyvens/events{/privacy}", "received_events_url": "https://api.github.com/users/leoyvens/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d1b79a01a95241d174ad4e5fe03c0b3d3517746", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d1b79a01a95241d174ad4e5fe03c0b3d3517746", "html_url": "https://github.com/rust-lang/rust/commit/0d1b79a01a95241d174ad4e5fe03c0b3d3517746"}], "stats": {"total": 91, "additions": 90, "deletions": 1}, "files": [{"sha": "e47b99ed552d3be974624a6b3a56d367dfe84834", "filename": "src/libcore/marker.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Flibcore%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Flibcore%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmarker.rs?ref=8b586e68b5b41cbc44f6e7936487061dc833ebed", "patch": "@@ -46,6 +46,8 @@ pub unsafe trait Send {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[allow(unknown_lints)]\n+#[allow(auto_impl)]\n unsafe impl Send for .. { }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -349,6 +351,8 @@ pub unsafe trait Sync {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[allow(unknown_lints)]\n+#[allow(auto_impl)]\n unsafe impl Sync for .. { }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -562,6 +566,8 @@ mod impls {\n #[lang = \"freeze\"]\n unsafe trait Freeze {}\n \n+#[allow(unknown_lints)]\n+#[allow(auto_impl)]\n unsafe impl Freeze for .. {}\n \n impl<T: ?Sized> !Freeze for UnsafeCell<T> {}"}, {"sha": "cd18ca10af04d75ca66eb1facab4b00db9d1eeeb", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=8b586e68b5b41cbc44f6e7936487061dc833ebed", "patch": "@@ -55,6 +55,31 @@ use bad_style::{MethodLateContext, method_context};\n // hardwired lints from librustc\n pub use lint::builtin::*;\n \n+declare_lint! {\n+    pub AUTO_IMPL,\n+    Deny,\n+    \"The form `impl Foo for .. {}` will be removed, please use `auto trait Foo {}`\"\n+}\n+\n+#[derive(Copy, Clone)]\n+pub struct AutoImpl;\n+\n+impl LintPass for AutoImpl {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array!(AUTO_IMPL)\n+    }\n+}\n+\n+impl EarlyLintPass for AutoImpl {\n+    fn check_item(&mut self, cx: &EarlyContext, item: &ast::Item) {\n+        let msg = \"The form `impl Foo for .. {}` will be removed, please use `auto trait Foo {}`\";\n+        match item.node {\n+            ast::ItemKind::AutoImpl(..) => cx.span_lint(AUTO_IMPL, item.span, msg),\n+            _ => ()\n+        }\n+     }\n+}\n+\n declare_lint! {\n     WHILE_TRUE,\n     Warn,"}, {"sha": "d59d09a8a0670e3b0724ea8f000dd5da94a46a01", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=8b586e68b5b41cbc44f6e7936487061dc833ebed", "patch": "@@ -109,6 +109,7 @@ pub fn register_builtins(store: &mut lint::LintStore, sess: Option<&Session>) {\n                        AnonymousParameters,\n                        IllegalFloatLiteralPattern,\n                        UnusedDocComment,\n+                       AutoImpl,\n                        );\n \n     add_early_builtin_with_new!(sess,\n@@ -181,6 +182,10 @@ pub fn register_builtins(store: &mut lint::LintStore, sess: Option<&Session>) {\n     // - Eventually, remove lint\n     store.register_future_incompatible(sess,\n                                        vec![\n+        FutureIncompatibleInfo {\n+            id: LintId::of(AUTO_IMPL),\n+            reference: \"issue #13231 <https://github.com/rust-lang/rust/issues/13231>\",\n+        },\n         FutureIncompatibleInfo {\n             id: LintId::of(PRIVATE_IN_PUBLIC),\n             reference: \"issue #34537 <https://github.com/rust-lang/rust/issues/34537>\","}, {"sha": "385076e50ddeafc0e2341508472fadf589d2c91d", "filename": "src/libstd/panic.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Flibstd%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Flibstd%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpanic.rs?ref=8b586e68b5b41cbc44f6e7936487061dc833ebed", "patch": "@@ -188,6 +188,8 @@ pub struct AssertUnwindSafe<T>(\n // * Types like Mutex/RwLock which are explicilty poisoned are unwind safe\n // * Our custom AssertUnwindSafe wrapper is indeed unwind safe\n #[stable(feature = \"catch_unwind\", since = \"1.9.0\")]\n+#[allow(unknown_lints)]\n+#[allow(auto_impl)]\n impl UnwindSafe for .. {}\n #[stable(feature = \"catch_unwind\", since = \"1.9.0\")]\n impl<'a, T: ?Sized> !UnwindSafe for &'a mut T {}\n@@ -221,6 +223,8 @@ impl<T: RefUnwindSafe + ?Sized> UnwindSafe for Arc<T> {}\n // only thing which doesn't implement it (which then transitively applies to\n // everything else).\n #[stable(feature = \"catch_unwind\", since = \"1.9.0\")]\n+#[allow(unknown_lints)]\n+#[allow(auto_impl)]\n impl RefUnwindSafe for .. {}\n #[stable(feature = \"catch_unwind\", since = \"1.9.0\")]\n impl<T: ?Sized> !RefUnwindSafe for UnsafeCell<T> {}"}, {"sha": "d33b52486296f8b3c7fe27e68ec99b9baeb97ab9", "filename": "src/rtstartup/rsbegin.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Frtstartup%2Frsbegin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Frtstartup%2Frsbegin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frtstartup%2Frsbegin.rs?ref=8b586e68b5b41cbc44f6e7936487061dc833ebed", "patch": "@@ -14,7 +14,7 @@\n // When an executable or dylib image is linked, all user code and libraries are\n // \"sandwiched\" between these two object files, so code or data from rsbegin.o\n // become first in the respective sections of the image, whereas code and data\n-// from rsend.o become the last ones.  This effect can be used to place symbols\n+// from rsend.o become the last ones. This effect can be used to place symbols\n // at the beginning or at the end of a section, as well as to insert any required\n // headers or footers.\n //\n@@ -31,11 +31,15 @@\n trait Sized {}\n #[lang = \"sync\"]\n trait Sync {}\n+#[allow(unknown_lints)]\n+#[allow(auto_impl)]\n impl Sync for .. {}\n #[lang = \"copy\"]\n trait Copy {}\n #[lang = \"freeze\"]\n trait Freeze {}\n+#[allow(unknown_lints)]\n+#[allow(auto_impl)]\n impl Freeze for .. {}\n \n #[lang = \"drop_in_place\"]"}, {"sha": "410366d0d7ff50f87039c0df29593afe67bff5da", "filename": "src/rtstartup/rsend.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Frtstartup%2Frsend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Frtstartup%2Frsend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frtstartup%2Frsend.rs?ref=8b586e68b5b41cbc44f6e7936487061dc833ebed", "patch": "@@ -23,6 +23,8 @@ impl<T> Sync for T {}\n trait Copy {}\n #[lang = \"freeze\"]\n trait Freeze {}\n+#[allow(unknown_lints)]\n+#[allow(auto_impl)]\n impl Freeze for .. {}\n \n #[lang = \"drop_in_place\"]"}, {"sha": "295564ca6a3ffbab2385d4007ded21067a6c6df3", "filename": "src/test/compile-fail/auto-impl-future-compat.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Fauto-impl-future-compat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Fauto-impl-future-compat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fauto-impl-future-compat.rs?ref=8b586e68b5b41cbc44f6e7936487061dc833ebed", "patch": "@@ -0,0 +1,12 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait Foo {}\n+impl Foo for .. {}"}, {"sha": "9c26b8b05f259ce1e8c3aa03b62bce48a1a06ff5", "filename": "src/test/compile-fail/coherence-default-trait-impl.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Fcoherence-default-trait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Fcoherence-default-trait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcoherence-default-trait-impl.rs?ref=8b586e68b5b41cbc44f6e7936487061dc833ebed", "patch": "@@ -12,18 +12,22 @@\n \n trait MyTrait { fn foo() {} }\n \n+#[allow(auto_impl)]\n impl MyTrait for .. {}\n //~^ ERROR redundant auto implementations of trait `MyTrait`\n \n+#[allow(auto_impl)]\n impl MyTrait for .. {}\n \n trait MySafeTrait {}\n \n+#[allow(auto_impl)]\n unsafe impl MySafeTrait for .. {}\n //~^ ERROR implementing the trait `MySafeTrait` is not unsafe\n \n unsafe trait MyUnsafeTrait {}\n \n+#[allow(auto_impl)]\n impl MyUnsafeTrait for .. {}\n //~^ ERROR the trait `MyUnsafeTrait` requires an `unsafe impl` declaration\n "}, {"sha": "4c5502cec18a851ff4c7d25cb6e07c17dab1f9ea", "filename": "src/test/compile-fail/feature-gate-optin-builtin-traits.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Ffeature-gate-optin-builtin-traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Ffeature-gate-optin-builtin-traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-optin-builtin-traits.rs?ref=8b586e68b5b41cbc44f6e7936487061dc833ebed", "patch": "@@ -20,6 +20,7 @@ trait DummyTrait {\n auto trait AutoDummyTrait {}\n //~^ ERROR auto traits are experimental and possibly buggy\n \n+#[allow(auto_impl)]\n impl DummyTrait for .. {}\n //~^ ERROR auto trait implementations are experimental and possibly buggy\n "}, {"sha": "bf44cd53f67dc45bda84c3d1bbd7c25692315da3", "filename": "src/test/compile-fail/issue-23080-2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Fissue-23080-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Fissue-23080-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-23080-2.rs?ref=8b586e68b5b41cbc44f6e7936487061dc833ebed", "patch": "@@ -17,6 +17,7 @@ unsafe trait Trait {\n     type Output;\n }\n \n+#[allow(auto_impl)]\n unsafe impl Trait for .. {}\n \n fn call_method<T: Trait>(x: T) {}"}, {"sha": "1fb63391d5608df43db2846b69917f97cbccff97", "filename": "src/test/compile-fail/issue-23080.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Fissue-23080.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Fissue-23080.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-23080.rs?ref=8b586e68b5b41cbc44f6e7936487061dc833ebed", "patch": "@@ -19,6 +19,7 @@ unsafe trait Trait {\n     }\n }\n \n+#[allow(auto_impl)]\n unsafe impl Trait for .. {}\n \n fn call_method<T: Trait>(x: T) {"}, {"sha": "1c1cb396a54f200e8a50eaa296dd3c30efd6c4c9", "filename": "src/test/compile-fail/phantom-oibit.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Fphantom-oibit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Fphantom-oibit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fphantom-oibit.rs?ref=8b586e68b5b41cbc44f6e7936487061dc833ebed", "patch": "@@ -18,6 +18,7 @@ use std::marker::{PhantomData};\n \n unsafe trait Zen {}\n \n+#[allow(auto_impl)]\n unsafe impl Zen for .. {}\n \n unsafe impl<'a, T: 'a> Zen for &'a T where T: Sync {}"}, {"sha": "34082adb8f9a563a82c674d5fbb723f0e849a676", "filename": "src/test/compile-fail/privacy-sanity.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Fprivacy-sanity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Fprivacy-sanity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy-sanity.rs?ref=8b586e68b5b41cbc44f6e7936487061dc833ebed", "patch": "@@ -21,6 +21,7 @@ pub struct S {\n }\n struct Ts(pub u8);\n \n+#[allow(auto_impl)]\n pub impl MarkerTr for .. {} //~ ERROR unnecessary visibility qualifier\n pub impl Tr for S {  //~ ERROR unnecessary visibility qualifier\n     pub fn f() {} //~ ERROR unnecessary visibility qualifier\n@@ -49,6 +50,7 @@ const MAIN: u8 = {\n     }\n     struct Ts(pub u8);\n \n+    #[allow(auto_impl)]\n     pub impl MarkerTr for .. {} //~ ERROR unnecessary visibility qualifier\n     pub impl Tr for S {  //~ ERROR unnecessary visibility qualifier\n         pub fn f() {} //~ ERROR unnecessary visibility qualifier\n@@ -80,6 +82,7 @@ fn main() {\n     }\n     struct Ts(pub u8);\n \n+    #[allow(auto_impl)]\n     pub impl MarkerTr for .. {} //~ ERROR unnecessary visibility qualifier\n     pub impl Tr for S {  //~ ERROR unnecessary visibility qualifier\n         pub fn f() {} //~ ERROR unnecessary visibility qualifier"}, {"sha": "cad43ffeacec9afd002cf17275513a612faa147b", "filename": "src/test/compile-fail/specialization/defaultimpl/specialization-no-default-trait-implementations.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Fspecialization%2Fdefaultimpl%2Fspecialization-no-default-trait-implementations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Fspecialization%2Fdefaultimpl%2Fspecialization-no-default-trait-implementations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fspecialization%2Fdefaultimpl%2Fspecialization-no-default-trait-implementations.rs?ref=8b586e68b5b41cbc44f6e7936487061dc833ebed", "patch": "@@ -13,6 +13,7 @@\n \n trait Foo {}\n \n+#[allow(auto_impl)]\n default impl Foo for .. {}\n //~^ ERROR `default impl` is not allowed for auto trait implementations\n "}, {"sha": "c97cb3f6bb70b6c47a6d019ae2e21255a7f8137f", "filename": "src/test/compile-fail/specialization/specialization-polarity.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Fspecialization%2Fspecialization-polarity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Fspecialization%2Fspecialization-polarity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fspecialization%2Fspecialization-polarity.rs?ref=8b586e68b5b41cbc44f6e7936487061dc833ebed", "patch": "@@ -15,13 +15,15 @@\n \n trait Foo {}\n \n+#[allow(auto_impl)]\n impl Foo for .. {}\n \n impl<T> Foo for T {}\n impl !Foo for u8 {} //~ ERROR E0119\n \n trait Bar {}\n \n+#[allow(auto_impl)]\n impl Bar for .. {}\n \n impl<T> !Bar for T {}"}, {"sha": "45303cbf70025c2e283dbd422631888da47479ff", "filename": "src/test/compile-fail/syntaxt-default-trait-impls.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Fsyntaxt-default-trait-impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Fsyntaxt-default-trait-impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsyntaxt-default-trait-impls.rs?ref=8b586e68b5b41cbc44f6e7936487061dc833ebed", "patch": "@@ -12,6 +12,7 @@\n \n trait MyAutoImpl {}\n \n+#[allow(auto_impl)]\n impl<T> MyAutoImpl for .. {}\n //~^ ERROR auto trait implementations are not allowed to have generics\n "}, {"sha": "6c7928f13f8941f3052c74189e808490d1ca110b", "filename": "src/test/compile-fail/traits-inductive-overflow-supertrait-oibit.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Ftraits-inductive-overflow-supertrait-oibit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Ftraits-inductive-overflow-supertrait-oibit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftraits-inductive-overflow-supertrait-oibit.rs?ref=8b586e68b5b41cbc44f6e7936487061dc833ebed", "patch": "@@ -15,6 +15,7 @@\n #![feature(optin_builtin_traits)]\n \n trait Magic: Copy {} //~ ERROR E0568\n+#[allow(auto_impl)]\n impl Magic for .. {}\n \n fn copy<T: Magic>(x: T) -> (T, T) { (x, x) }"}, {"sha": "173582ed22fdc2523f74fbef0296694abf7c5c2b", "filename": "src/test/compile-fail/typeck-auto-trait-no-supertraits-2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Ftypeck-auto-trait-no-supertraits-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Ftypeck-auto-trait-no-supertraits-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftypeck-auto-trait-no-supertraits-2.rs?ref=8b586e68b5b41cbc44f6e7936487061dc833ebed", "patch": "@@ -11,6 +11,7 @@\n #![feature(optin_builtin_traits)]\n \n trait Magic : Sized where Option<Self> : Magic {} //~ ERROR E0568\n+#[allow(auto_impl)]\n impl Magic for .. {}\n impl<T:Magic> Magic for T {}\n "}, {"sha": "6802f72504b7d65adc1457fc8112254c89948f37", "filename": "src/test/compile-fail/typeck-auto-trait-no-supertraits.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Ftypeck-auto-trait-no-supertraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Ftypeck-auto-trait-no-supertraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftypeck-auto-trait-no-supertraits.rs?ref=8b586e68b5b41cbc44f6e7936487061dc833ebed", "patch": "@@ -35,6 +35,7 @@\n #![feature(optin_builtin_traits)]\n \n trait Magic: Copy {} //~ ERROR E0568\n+#[allow(auto_impl)]\n impl Magic for .. {}\n impl<T:Magic> Magic for T {}\n "}, {"sha": "3c409d1b371eb3ee90eb916adcb660fb1854698b", "filename": "src/test/compile-fail/typeck-auto-trait-no-typeparams.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Ftypeck-auto-trait-no-typeparams.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Ftypeck-auto-trait-no-typeparams.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftypeck-auto-trait-no-typeparams.rs?ref=8b586e68b5b41cbc44f6e7936487061dc833ebed", "patch": "@@ -11,4 +11,5 @@\n #![feature(optin_builtin_traits)]\n \n trait Magic<T> {} //~ ERROR E0567\n+#[allow(auto_impl)]\n impl Magic<isize> for .. {}"}, {"sha": "a837d8c9ca74eccf2d989c134f7a5d7ce8a155dd", "filename": "src/test/compile-fail/typeck-default-trait-impl-constituent-types-2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-constituent-types-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-constituent-types-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-constituent-types-2.rs?ref=8b586e68b5b41cbc44f6e7936487061dc833ebed", "patch": "@@ -12,6 +12,7 @@\n \n trait MyTrait {}\n \n+#[allow(auto_impl)]\n impl MyTrait for .. {}\n \n struct MyS;"}, {"sha": "bed184eb4ccca9e70f57e35bae9ccd28692ada6a", "filename": "src/test/compile-fail/typeck-default-trait-impl-constituent-types.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-constituent-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-constituent-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-constituent-types.rs?ref=8b586e68b5b41cbc44f6e7936487061dc833ebed", "patch": "@@ -12,6 +12,7 @@\n \n trait MyTrait {}\n \n+#[allow(auto_impl)]\n impl MyTrait for .. {}\n impl<T> !MyTrait for *mut T {}\n "}, {"sha": "f3a6d8a342e221c7153bc70f7255270f406de7a1", "filename": "src/test/compile-fail/typeck-default-trait-impl-negation.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-negation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-negation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-negation.rs?ref=8b586e68b5b41cbc44f6e7936487061dc833ebed", "patch": "@@ -12,10 +12,12 @@\n \n trait MyTrait {}\n \n+#[allow(auto_impl)]\n impl MyTrait for .. {}\n \n unsafe trait MyUnsafeTrait {}\n \n+#[allow(auto_impl)]\n unsafe impl MyUnsafeTrait for .. {}\n \n struct ThisImplsTrait;"}, {"sha": "da3e926d6fc1fdd2375c1795c3cc178047d255df", "filename": "src/test/compile-fail/typeck-default-trait-impl-outside-crate.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-outside-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-outside-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-outside-crate.rs?ref=8b586e68b5b41cbc44f6e7936487061dc833ebed", "patch": "@@ -10,6 +10,7 @@\n \n #![feature(optin_builtin_traits)]\n \n+#[allow(auto_impl)]\n impl Copy for .. {} //~ ERROR E0318\n      //~^ NOTE `Copy` trait not defined in this crate\n fn main() {}"}, {"sha": "185476fb704f7fe4176766abe11d54c7c3e2025d", "filename": "src/test/run-make/simd-ffi/simd.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Frun-make%2Fsimd-ffi%2Fsimd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Frun-make%2Fsimd-ffi%2Fsimd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fsimd-ffi%2Fsimd.rs?ref=8b586e68b5b41cbc44f6e7936487061dc833ebed", "patch": "@@ -81,4 +81,5 @@ pub mod marker {\n \n #[lang = \"freeze\"]\n trait Freeze {}\n+#[allow(auto_impl)]\n impl Freeze for .. {}"}, {"sha": "a0feb72702834e74eed0166eaeab601f322cbfd3", "filename": "src/test/run-make/target-specs/foo.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Frun-make%2Ftarget-specs%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Frun-make%2Ftarget-specs%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Ftarget-specs%2Ffoo.rs?ref=8b586e68b5b41cbc44f6e7936487061dc833ebed", "patch": "@@ -19,6 +19,7 @@ trait Sized { }\n \n #[lang = \"freeze\"]\n trait Freeze {}\n+#[allow(auto_impl)]\n impl Freeze for .. {}\n \n #[lang=\"start\"]"}, {"sha": "752f5a11375adc68bc48a85fb368963f6c758496", "filename": "src/test/run-pass/auto-traits.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Frun-pass%2Fauto-traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Frun-pass%2Fauto-traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fauto-traits.rs?ref=8b586e68b5b41cbc44f6e7936487061dc833ebed", "patch": "@@ -12,6 +12,7 @@\n \n auto trait Auto {}\n // Redundant but accepted until we remove it.\n+#[allow(auto_impl)]\n impl Auto for .. {}\n \n unsafe auto trait AutoUnsafe {}"}, {"sha": "5fa0a002a10db9071c31f3f4418bda4ffccbc959", "filename": "src/test/run-pass/issue-29516.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Frun-pass%2Fissue-29516.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Frun-pass%2Fissue-29516.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-29516.rs?ref=8b586e68b5b41cbc44f6e7936487061dc833ebed", "patch": "@@ -11,6 +11,7 @@\n #![feature(optin_builtin_traits)]\n \n trait NotSame {}\n+#[allow(auto_impl)]\n impl NotSame for .. {}\n impl<A> !NotSame for (A, A) {}\n "}, {"sha": "4fd55bd482cd998029fb89eb2dcd477d999414c3", "filename": "src/test/rustdoc/auxiliary/rustdoc-default-impl.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Frustdoc%2Fauxiliary%2Frustdoc-default-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Frustdoc%2Fauxiliary%2Frustdoc-default-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fauxiliary%2Frustdoc-default-impl.rs?ref=8b586e68b5b41cbc44f6e7936487061dc833ebed", "patch": "@@ -16,6 +16,7 @@ pub mod bar {\n \n     pub trait Bar {}\n \n+    #[allow(auto_impl)]\n     impl Bar for .. {}\n \n     pub trait Foo {"}, {"sha": "d886778278dfd3dd86a35bc16c5096961eaca876", "filename": "src/test/rustdoc/auxiliary/rustdoc-impl-parts-crosscrate.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Frustdoc%2Fauxiliary%2Frustdoc-impl-parts-crosscrate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Frustdoc%2Fauxiliary%2Frustdoc-impl-parts-crosscrate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fauxiliary%2Frustdoc-impl-parts-crosscrate.rs?ref=8b586e68b5b41cbc44f6e7936487061dc833ebed", "patch": "@@ -12,4 +12,5 @@\n \n pub trait AnOibit {}\n \n+#[allow(auto_impl)]\n impl AnOibit for .. {}"}, {"sha": "f74f66ce7290551849082781c0f7184313d6e956", "filename": "src/test/rustdoc/impl-parts.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Frustdoc%2Fimpl-parts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b586e68b5b41cbc44f6e7936487061dc833ebed/src%2Ftest%2Frustdoc%2Fimpl-parts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fimpl-parts.rs?ref=8b586e68b5b41cbc44f6e7936487061dc833ebed", "patch": "@@ -12,6 +12,7 @@\n \n pub trait AnOibit {}\n \n+#[allow(auto_impl)]\n impl AnOibit for .. {}\n \n pub struct Foo<T> { field: T }"}]}