{"sha": "b404ded15b0873696181114766967e2e154a6425", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0MDRkZWQxNWIwODczNjk2MTgxMTE0NzY2OTY3ZTJlMTU0YTY0MjU=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2015-10-02T21:18:48Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2015-10-13T12:19:21Z"}, "message": "Fix failing privacy test", "tree": {"sha": "c30c2558cb7921bf7743a2b225b86a7e22a63528", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c30c2558cb7921bf7743a2b225b86a7e22a63528"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b404ded15b0873696181114766967e2e154a6425", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b404ded15b0873696181114766967e2e154a6425", "html_url": "https://github.com/rust-lang/rust/commit/b404ded15b0873696181114766967e2e154a6425", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b404ded15b0873696181114766967e2e154a6425/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a12c19171887ea6d7ff708db2e2581ceaf16c14", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a12c19171887ea6d7ff708db2e2581ceaf16c14", "html_url": "https://github.com/rust-lang/rust/commit/8a12c19171887ea6d7ff708db2e2581ceaf16c14"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "bc9727c58070581607a1f7caa89da3e5e6531190", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b404ded15b0873696181114766967e2e154a6425/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b404ded15b0873696181114766967e2e154a6425/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=b404ded15b0873696181114766967e2e154a6425", "patch": "@@ -1439,11 +1439,11 @@ impl<'a, 'tcx, 'v> Visitor<'v> for VisiblePrivateTypesVisitor<'a, 'tcx> {\n     }\n \n     fn visit_struct_field(&mut self, s: &hir::StructField) {\n-        match s.node.kind {\n-            hir::NamedField(_, vis) if vis == hir::Public || self.in_variant => {\n-                visit::walk_struct_field(self, s);\n-            }\n-            _ => {}\n+        let vis = match s.node.kind {\n+            hir::NamedField(_, vis) | hir::UnnamedField(vis) => vis\n+        };\n+        if vis == hir::Public || self.in_variant {\n+            visit::walk_struct_field(self, s);\n         }\n     }\n "}]}