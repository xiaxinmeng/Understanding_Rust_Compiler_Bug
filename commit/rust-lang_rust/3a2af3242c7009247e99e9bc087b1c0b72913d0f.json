{"sha": "3a2af3242c7009247e99e9bc087b1c0b72913d0f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhMmFmMzI0MmM3MDA5MjQ3ZTk5ZTliYzA4N2IxYzBiNzI5MTNkMGY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-05T09:58:44Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-11T06:42:15Z"}, "message": "canonicalize some lint imports", "tree": {"sha": "52486d3f136037bdb55da6ed86e9f6ba3f60ca69", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52486d3f136037bdb55da6ed86e9f6ba3f60ca69"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a2af3242c7009247e99e9bc087b1c0b72913d0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a2af3242c7009247e99e9bc087b1c0b72913d0f", "html_url": "https://github.com/rust-lang/rust/commit/3a2af3242c7009247e99e9bc087b1c0b72913d0f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a2af3242c7009247e99e9bc087b1c0b72913d0f/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88d1109600660d1acb471e85631e1ea349843fd9", "url": "https://api.github.com/repos/rust-lang/rust/commits/88d1109600660d1acb471e85631e1ea349843fd9", "html_url": "https://github.com/rust-lang/rust/commit/88d1109600660d1acb471e85631e1ea349843fd9"}], "stats": {"total": 64, "additions": 33, "deletions": 31}, "files": [{"sha": "5a99e7965538b2ff243d6763fe42886715964e05", "filename": "src/librustc/hir/check_attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2af3242c7009247e99e9bc087b1c0b72913d0f/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2af3242c7009247e99e9bc087b1c0b72913d0f/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fcheck_attr.rs?ref=3a2af3242c7009247e99e9bc087b1c0b72913d0f", "patch": "@@ -5,7 +5,6 @@\n //! item.\n \n use crate::hir::map::Map;\n-use crate::lint::builtin::UNUSED_ATTRIBUTES;\n use crate::ty::query::Providers;\n use crate::ty::TyCtxt;\n \n@@ -16,6 +15,7 @@ use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::DUMMY_HIR_ID;\n use rustc_hir::{self, HirId, Item, ItemKind, TraitItem, TraitItemKind};\n+use rustc_session::lint::builtin::UNUSED_ATTRIBUTES;\n use rustc_span::symbol::sym;\n use rustc_span::Span;\n use syntax::ast::Attribute;"}, {"sha": "867eb5a19370777a30e35ab0552b47a0b19ce8ab", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3a2af3242c7009247e99e9bc087b1c0b72913d0f/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2af3242c7009247e99e9bc087b1c0b72913d0f/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=3a2af3242c7009247e99e9bc087b1c0b72913d0f", "patch": "@@ -16,12 +16,11 @@\n \n use self::TargetLint::*;\n \n-use crate::hir::map::{definitions::DisambiguatedDefPathData, DefPathData};\n+use crate::hir::map::definitions::{DefPathData, DisambiguatedDefPathData};\n use crate::lint::levels::{LintLevelSets, LintLevelsBuilder};\n use crate::lint::{EarlyLintPassObject, LateLintPassObject};\n use crate::middle::privacy::AccessLevels;\n use crate::middle::stability;\n-use crate::session::Session;\n use crate::ty::layout::{LayoutError, LayoutOf, TyLayout};\n use crate::ty::{self, print::Printer, subst::GenericArg, Ty, TyCtxt};\n use rustc_data_structures::fx::FxHashMap;\n@@ -32,6 +31,7 @@ use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, DefId};\n use rustc_session::lint::BuiltinLintDiagnostics;\n use rustc_session::lint::{FutureIncompatibleInfo, Level, Lint, LintBuffer, LintId};\n+use rustc_session::Session;\n use rustc_span::{symbol::Symbol, MultiSpan, Span, DUMMY_SP};\n use syntax::ast;\n use syntax::util::lev_distance::find_best_match_for_name;"}, {"sha": "fdd2a8d0778e2decd74c8895cc4b097366c37dff", "filename": "src/librustc/lint/levels.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3a2af3242c7009247e99e9bc087b1c0b72913d0f/src%2Flibrustc%2Flint%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2af3242c7009247e99e9bc087b1c0b72913d0f/src%2Flibrustc%2Flint%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Flevels.rs?ref=3a2af3242c7009247e99e9bc087b1c0b72913d0f", "patch": "@@ -1,14 +1,14 @@\n use std::cmp;\n \n use crate::ich::StableHashingContext;\n-use crate::lint::builtin;\n use crate::lint::context::{CheckLintNameResult, LintStore};\n-use crate::lint::{self, Level, Lint, LintId, LintSource};\n-use crate::session::Session;\n+use crate::lint::{self, LintSource};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir::HirId;\n+use rustc_session::lint::{builtin, Level, Lint, LintId};\n+use rustc_session::Session;\n use rustc_span::source_map::MultiSpan;\n use rustc_span::symbol::{sym, Symbol};\n use syntax::ast;"}, {"sha": "93fc09b4a2ac9348eaa61640a6bbf733d08a0731", "filename": "src/librustc/middle/stability.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3a2af3242c7009247e99e9bc087b1c0b72913d0f/src%2Flibrustc%2Fmiddle%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2af3242c7009247e99e9bc087b1c0b72913d0f/src%2Flibrustc%2Fmiddle%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fstability.rs?ref=3a2af3242c7009247e99e9bc087b1c0b72913d0f", "patch": "@@ -3,7 +3,7 @@\n \n pub use self::StabilityLevel::*;\n \n-use crate::lint::{self, in_derive_expansion, Lint};\n+use crate::lint::in_derive_expansion;\n use crate::session::{DiagnosticMessageId, Session};\n use crate::ty::{self, TyCtxt};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n@@ -13,7 +13,7 @@ use rustc_hir as hir;\n use rustc_hir::def::DefKind;\n use rustc_hir::def_id::{CrateNum, DefId, CRATE_DEF_INDEX};\n use rustc_hir::{self, HirId};\n-use rustc_session::lint::{BuiltinLintDiagnostics, LintBuffer};\n+use rustc_session::lint::{self, BuiltinLintDiagnostics, Lint, LintBuffer};\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{MultiSpan, Span};\n use syntax::ast::CRATE_NODE_ID;"}, {"sha": "eca9df688c64f7e9b583f18413298a9eb7a667e5", "filename": "src/librustc/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2af3242c7009247e99e9bc087b1c0b72913d0f/src%2Flibrustc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2af3242c7009247e99e9bc087b1c0b72913d0f/src%2Flibrustc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fquery%2Fmod.rs?ref=3a2af3242c7009247e99e9bc087b1c0b72913d0f", "patch": "@@ -82,7 +82,7 @@ rustc_queries! {\n             desc { \"looking up the native libraries of a linked crate\" }\n         }\n \n-        query lint_levels(_: CrateNum) -> &'tcx lint::LintLevelMap {\n+        query lint_levels(_: CrateNum) -> &'tcx LintLevelMap {\n             eval_always\n             desc { \"computing the lint levels for items in this crate\" }\n         }"}, {"sha": "e4309dd28f4a1b94f184fd48aabdec7ec6503a4d", "filename": "src/librustc/traits/object_safety.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3a2af3242c7009247e99e9bc087b1c0b72913d0f/src%2Flibrustc%2Ftraits%2Fobject_safety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2af3242c7009247e99e9bc087b1c0b72913d0f/src%2Flibrustc%2Ftraits%2Fobject_safety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fobject_safety.rs?ref=3a2af3242c7009247e99e9bc087b1c0b72913d0f", "patch": "@@ -10,17 +10,18 @@\n \n use super::elaborate_predicates;\n \n-use crate::lint;\n use crate::traits::{self, Obligation, ObligationCause};\n use crate::ty::subst::{InternalSubsts, Subst};\n use crate::ty::{self, Predicate, ToPredicate, Ty, TyCtxt, TypeFoldable};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n+use rustc_session::lint::builtin::WHERE_CLAUSES_OBJECT_SAFETY;\n use rustc_span::symbol::Symbol;\n use rustc_span::{Span, DUMMY_SP};\n+use syntax::ast;\n+\n use std::borrow::Cow;\n use std::iter::{self};\n-use syntax::ast::{self};\n \n #[derive(Copy, Clone, Debug, PartialEq, Eq, Hash)]\n pub enum ObjectSafetyViolation {\n@@ -179,7 +180,7 @@ fn object_safety_violations_for_trait(\n                 // Using `CRATE_NODE_ID` is wrong, but it's hard to get a more precise id.\n                 // It's also hard to get a use site span, so we use the method definition span.\n                 tcx.lint_node_note(\n-                    lint::builtin::WHERE_CLAUSES_OBJECT_SAFETY,\n+                    WHERE_CLAUSES_OBJECT_SAFETY,\n                     hir::CRATE_HIR_ID,\n                     *span,\n                     &format!("}, {"sha": "f5199dbdabb2f42534d164b92ef1b4820e33e084", "filename": "src/librustc/traits/specialize/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3a2af3242c7009247e99e9bc087b1c0b72913d0f/src%2Flibrustc%2Ftraits%2Fspecialize%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2af3242c7009247e99e9bc087b1c0b72913d0f/src%2Flibrustc%2Ftraits%2Fspecialize%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fspecialize%2Fmod.rs?ref=3a2af3242c7009247e99e9bc087b1c0b72913d0f", "patch": "@@ -12,14 +12,14 @@\n pub mod specialization_graph;\n \n use crate::infer::{InferCtxt, InferOk};\n-use crate::lint;\n use crate::traits::select::IntercrateAmbiguityCause;\n use crate::traits::{self, coherence, FutureCompatOverlapErrorKind, ObligationCause, TraitEngine};\n use crate::ty::subst::{InternalSubsts, Subst, SubstsRef};\n use crate::ty::{self, TyCtxt, TypeFoldable};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::struct_span_err;\n use rustc_hir::def_id::DefId;\n+use rustc_session::lint::builtin::ORDER_DEPENDENT_TRAIT_OBJECTS;\n use rustc_span::DUMMY_SP;\n \n use super::util::impl_trait_ref_and_oblig;\n@@ -342,7 +342,7 @@ pub(super) fn specialization_graph_provider(\n                                 unreachable!(\"converted to hard error above\")\n                             }\n                             FutureCompatOverlapErrorKind::Issue33140 => {\n-                                lint::builtin::ORDER_DEPENDENT_TRAIT_OBJECTS\n+                                ORDER_DEPENDENT_TRAIT_OBJECTS\n                             }\n                         };\n                         tcx.struct_span_lint_hir("}, {"sha": "a97f33b31b7a3abc0b3b33e11b41e26eb176b439", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/3a2af3242c7009247e99e9bc087b1c0b72913d0f/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2af3242c7009247e99e9bc087b1c0b72913d0f/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=3a2af3242c7009247e99e9bc087b1c0b72913d0f", "patch": "@@ -8,7 +8,7 @@ use crate::hir::map as hir_map;\n use crate::hir::map::DefPathHash;\n use crate::ich::{NodeIdHashingMode, StableHashingContext};\n use crate::infer::canonical::{Canonical, CanonicalVarInfo, CanonicalVarInfos};\n-use crate::lint::{self, Lint};\n+use crate::lint::{maybe_lint_level_root, struct_lint_level, LintSource, LintStore};\n use crate::middle;\n use crate::middle::cstore::CrateStoreDyn;\n use crate::middle::cstore::EncodedMetadata;\n@@ -61,6 +61,7 @@ use rustc_data_structures::sync::{Lock, Lrc, WorkerLocal};\n use rustc_errors::DiagnosticBuilder;\n use rustc_index::vec::{Idx, IndexVec};\n use rustc_macros::HashStable;\n+use rustc_session::lint::{Level, Lint};\n use rustc_session::node_id::NodeMap;\n use rustc_span::source_map::MultiSpan;\n use rustc_span::symbol::{kw, sym, Symbol};\n@@ -946,7 +947,7 @@ pub struct GlobalCtxt<'tcx> {\n \n     pub sess: &'tcx Session,\n \n-    pub lint_store: Lrc<lint::LintStore>,\n+    pub lint_store: Lrc<LintStore>,\n \n     pub dep_graph: DepGraph,\n \n@@ -1115,7 +1116,7 @@ impl<'tcx> TyCtxt<'tcx> {\n     /// reference to the context, to allow formatting values that need it.\n     pub fn create_global_ctxt(\n         s: &'tcx Session,\n-        lint_store: Lrc<lint::LintStore>,\n+        lint_store: Lrc<LintStore>,\n         local_providers: ty::query::Providers<'tcx>,\n         extern_providers: ty::query::Providers<'tcx>,\n         arenas: &'tcx AllArenas,\n@@ -2551,21 +2552,21 @@ impl<'tcx> TyCtxt<'tcx> {\n         iter.intern_with(|xs| self.intern_goals(xs))\n     }\n \n-    pub fn lint_hir<S: Into<MultiSpan>>(\n+    pub fn lint_hir(\n         self,\n         lint: &'static Lint,\n         hir_id: HirId,\n-        span: S,\n+        span: impl Into<MultiSpan>,\n         msg: &str,\n     ) {\n         self.struct_span_lint_hir(lint, hir_id, span.into(), msg).emit()\n     }\n \n-    pub fn lint_hir_note<S: Into<MultiSpan>>(\n+    pub fn lint_hir_note(\n         self,\n         lint: &'static Lint,\n         hir_id: HirId,\n-        span: S,\n+        span: impl Into<MultiSpan>,\n         msg: &str,\n         note: &str,\n     ) {\n@@ -2574,11 +2575,11 @@ impl<'tcx> TyCtxt<'tcx> {\n         err.emit()\n     }\n \n-    pub fn lint_node_note<S: Into<MultiSpan>>(\n+    pub fn lint_node_note(\n         self,\n         lint: &'static Lint,\n         id: hir::HirId,\n-        span: S,\n+        span: impl Into<MultiSpan>,\n         msg: &str,\n         note: &str,\n     ) {\n@@ -2598,7 +2599,7 @@ impl<'tcx> TyCtxt<'tcx> {\n             if id == bound {\n                 return bound;\n             }\n-            if lint::maybe_lint_level_root(self, id) {\n+            if maybe_lint_level_root(self, id) {\n                 return id;\n             }\n             let next = self.hir().get_parent_node(id);\n@@ -2613,7 +2614,7 @@ impl<'tcx> TyCtxt<'tcx> {\n         self,\n         lint: &'static Lint,\n         mut id: hir::HirId,\n-    ) -> (lint::Level, lint::LintSource) {\n+    ) -> (Level, LintSource) {\n         let sets = self.lint_levels(LOCAL_CRATE);\n         loop {\n             if let Some(pair) = sets.level_and_source(lint, id, self.sess) {\n@@ -2627,15 +2628,15 @@ impl<'tcx> TyCtxt<'tcx> {\n         }\n     }\n \n-    pub fn struct_span_lint_hir<S: Into<MultiSpan>>(\n+    pub fn struct_span_lint_hir(\n         self,\n         lint: &'static Lint,\n         hir_id: HirId,\n-        span: S,\n+        span: impl Into<MultiSpan>,\n         msg: &str,\n     ) -> DiagnosticBuilder<'tcx> {\n         let (level, src) = self.lint_level_at_node(lint, hir_id);\n-        lint::struct_lint_level(self.sess, lint, level, src, Some(span.into()), msg)\n+        struct_lint_level(self.sess, lint, level, src, Some(span.into()), msg)\n     }\n \n     pub fn struct_lint_node(\n@@ -2645,7 +2646,7 @@ impl<'tcx> TyCtxt<'tcx> {\n         msg: &str,\n     ) -> DiagnosticBuilder<'tcx> {\n         let (level, src) = self.lint_level_at_node(lint, id);\n-        lint::struct_lint_level(self.sess, lint, level, src, None, msg)\n+        struct_lint_level(self.sess, lint, level, src, None, msg)\n     }\n \n     pub fn in_scope_traits(self, id: HirId) -> Option<&'tcx StableVec<TraitCandidate>> {"}, {"sha": "1d41871bb33a924979c0bfdde0e1f0a8a87efb2e", "filename": "src/librustc/ty/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2af3242c7009247e99e9bc087b1c0b72913d0f/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2af3242c7009247e99e9bc087b1c0b72913d0f/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs?ref=3a2af3242c7009247e99e9bc087b1c0b72913d0f", "patch": "@@ -1,7 +1,7 @@\n use crate::dep_graph::{self, DepNode};\n use crate::hir::exports::Export;\n use crate::infer::canonical::{self, Canonical};\n-use crate::lint;\n+use crate::lint::LintLevelMap;\n use crate::middle::codegen_fn_attrs::CodegenFnAttrs;\n use crate::middle::cstore::{CrateSource, DepKind, NativeLibraryKind};\n use crate::middle::cstore::{ExternCrate, ForeignModule, LinkagePreference, NativeLibrary};"}, {"sha": "2d45e280444955e08b2784647840c985f5d044e3", "filename": "src/librustc_ast_passes/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2af3242c7009247e99e9bc087b1c0b72913d0f/src%2Flibrustc_ast_passes%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/3a2af3242c7009247e99e9bc087b1c0b72913d0f/src%2Flibrustc_ast_passes%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_passes%2FCargo.toml?ref=3a2af3242c7009247e99e9bc087b1c0b72913d0f", "patch": "@@ -11,7 +11,7 @@ path = \"lib.rs\"\n [dependencies]\n log = \"0.4\"\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n-rustc_errors = { path = \"../librustc_errors\", package = \"rustc_errors\" }\n+rustc_errors = { path = \"../librustc_errors\" }\n rustc_error_codes = { path = \"../librustc_error_codes\" }\n rustc_feature = { path = \"../librustc_feature\" }\n rustc_parse = { path = \"../librustc_parse\" }"}]}