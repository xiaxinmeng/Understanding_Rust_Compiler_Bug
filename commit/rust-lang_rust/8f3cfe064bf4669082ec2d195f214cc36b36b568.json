{"sha": "8f3cfe064bf4669082ec2d195f214cc36b36b568", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmM2NmZTA2NGJmNDY2OTA4MmVjMmQxOTVmMjE0Y2MzNmIzNmI1Njg=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2014-04-20T17:19:58Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2014-04-22T16:06:56Z"}, "message": "rustc: de-@ ty::type_err.", "tree": {"sha": "7136ebe54d0b3e93556781ec256180dd1cf9c87f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7136ebe54d0b3e93556781ec256180dd1cf9c87f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f3cfe064bf4669082ec2d195f214cc36b36b568", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f3cfe064bf4669082ec2d195f214cc36b36b568", "html_url": "https://github.com/rust-lang/rust/commit/8f3cfe064bf4669082ec2d195f214cc36b36b568", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f3cfe064bf4669082ec2d195f214cc36b36b568/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fbc57894a4d5ce682df8ad5edb5df387b05e822", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fbc57894a4d5ce682df8ad5edb5df387b05e822", "html_url": "https://github.com/rust-lang/rust/commit/3fbc57894a4d5ce682df8ad5edb5df387b05e822"}], "stats": {"total": 18, "additions": 0, "deletions": 18}, "files": [{"sha": "771cd6196631bc0b5fe7e2fa2df6c13a76995bbd", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8f3cfe064bf4669082ec2d195f214cc36b36b568/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f3cfe064bf4669082ec2d195f214cc36b36b568/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=8f3cfe064bf4669082ec2d195f214cc36b36b568", "patch": "@@ -820,7 +820,6 @@ pub enum type_err {\n     terr_regions_overly_polymorphic(BoundRegion, Region),\n     terr_vstores_differ(terr_vstore_kind, expected_found<Vstore>),\n     terr_trait_stores_differ(terr_vstore_kind, expected_found<TraitStore>),\n-    terr_in_field(@type_err, ast::Ident),\n     terr_sorts(expected_found<t>),\n     terr_integer_as_char,\n     terr_int_mismatch(expected_found<IntVarValue>),\n@@ -3407,10 +3406,6 @@ pub fn type_err_to_str(cx: &ctxt, err: &type_err) -> ~str {\n                  trait_store_to_str(cx, (*values).expected),\n                  trait_store_to_str(cx, (*values).found))\n         }\n-        terr_in_field(err, fname) => {\n-            format!(\"in field `{}`, {}\", token::get_ident(fname),\n-                 type_err_to_str(cx, err))\n-        }\n         terr_sorts(values) => {\n             format!(\"expected {} but found {}\",\n                  ty_sort_str(cx, values.expected),"}, {"sha": "098a3e278e7bad969fcaecd0332d3bfe043fbed7", "filename": "src/librustc/middle/typeck/infer/combine.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8f3cfe064bf4669082ec2d195f214cc36b36b568/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f3cfe064bf4669082ec2d195f214cc36b36b568/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fcombine.rs?ref=8f3cfe064bf4669082ec2d195f214cc36b36b568", "patch": "@@ -235,19 +235,6 @@ pub trait Combine {\n \n     fn fn_sigs(&self, a: &ty::FnSig, b: &ty::FnSig) -> cres<ty::FnSig>;\n \n-    fn flds(&self, a: ty::field, b: ty::field) -> cres<ty::field> {\n-        if a.ident == b.ident {\n-            self.mts(&a.mt, &b.mt)\n-                .and_then(|mt| Ok(ty::field {ident: a.ident, mt: mt}) )\n-                .or_else(|e| Err(ty::terr_in_field(@e, a.ident)) )\n-        } else {\n-            Err(ty::terr_record_fields(\n-                                       expected_found(self,\n-                                                      a.ident,\n-                                                      b.ident)))\n-        }\n-    }\n-\n     fn args(&self, a: ty::t, b: ty::t) -> cres<ty::t> {\n         self.contratys(a, b).and_then(|t| Ok(t))\n     }"}]}