{"sha": "ae428a2d702fe9a8ae7993b720c59d184a9d239c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlNDI4YTJkNzAyZmU5YThhZTc5OTNiNzIwYzU5ZDE4NGE5ZDIzOWM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-08-19T14:42:56Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-08-19T14:42:56Z"}, "message": "Fix saturating_{add,sub} for 8bit and 16bit ints", "tree": {"sha": "c9fd8ac0bdddad27dd57922a80551d2f0c9d2d24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9fd8ac0bdddad27dd57922a80551d2f0c9d2d24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae428a2d702fe9a8ae7993b720c59d184a9d239c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae428a2d702fe9a8ae7993b720c59d184a9d239c", "html_url": "https://github.com/rust-lang/rust/commit/ae428a2d702fe9a8ae7993b720c59d184a9d239c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae428a2d702fe9a8ae7993b720c59d184a9d239c/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a8bb164c678ad6bc98ad7360bf04cd7c336840b", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a8bb164c678ad6bc98ad7360bf04cd7c336840b", "html_url": "https://github.com/rust-lang/rust/commit/4a8bb164c678ad6bc98ad7360bf04cd7c336840b"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "c12730da7585dedca3d6157d2c6c586dc1486426", "filename": "src/intrinsics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ae428a2d702fe9a8ae7993b720c59d184a9d239c/src%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae428a2d702fe9a8ae7993b720c59d184a9d239c/src%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics.rs?ref=ae428a2d702fe9a8ae7993b720c59d184a9d239c", "patch": "@@ -513,8 +513,8 @@ pub fn codegen_intrinsic_call<'tcx>(\n             let max = fx.bcx.ins().iconst(clif_ty, max);\n \n             let val = match (intrinsic, signed) {\n-                (\"saturating_add\", false) => fx.bcx.ins().select(has_overflow, max, val),\n-                (\"saturating_sub\", false) => fx.bcx.ins().select(has_overflow, min, val),\n+                (\"saturating_add\", false) => codegen_select(&mut fx.bcx, has_overflow, max, val),\n+                (\"saturating_sub\", false) => codegen_select(&mut fx.bcx, has_overflow, min, val),\n                 (\"saturating_add\", true) => unimplemented!(),\n                 (\"saturating_sub\", true) => unimplemented!(),\n                 _ => unreachable!(),"}]}