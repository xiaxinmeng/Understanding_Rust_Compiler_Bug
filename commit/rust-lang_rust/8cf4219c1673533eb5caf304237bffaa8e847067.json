{"sha": "8cf4219c1673533eb5caf304237bffaa8e847067", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjZjQyMTljMTY3MzUzM2ViNWNhZjMwNDIzN2JmZmFhOGU4NDcwNjc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-07-18T14:43:36Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-07-18T14:43:36Z"}, "message": "Auto merge of #5815 - JarredAllen:redundant_pattern_bugfix, r=flip1995\n\nRedundant pattern bugfix\n\nchangelog: Fixes the bug reported #5766", "tree": {"sha": "59852a125c03d08ada3e72ba108248f2884aaf66", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59852a125c03d08ada3e72ba108248f2884aaf66"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8cf4219c1673533eb5caf304237bffaa8e847067", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8cf4219c1673533eb5caf304237bffaa8e847067", "html_url": "https://github.com/rust-lang/rust/commit/8cf4219c1673533eb5caf304237bffaa8e847067", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8cf4219c1673533eb5caf304237bffaa8e847067/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "799eef691969c2f6ecf33359f0b1e1691a060648", "url": "https://api.github.com/repos/rust-lang/rust/commits/799eef691969c2f6ecf33359f0b1e1691a060648", "html_url": "https://github.com/rust-lang/rust/commit/799eef691969c2f6ecf33359f0b1e1691a060648"}, {"sha": "e85b590936863e88da4ccd73af9f5da0787b9609", "url": "https://api.github.com/repos/rust-lang/rust/commits/e85b590936863e88da4ccd73af9f5da0787b9609", "html_url": "https://github.com/rust-lang/rust/commit/e85b590936863e88da4ccd73af9f5da0787b9609"}], "stats": {"total": 88, "additions": 54, "deletions": 34}, "files": [{"sha": "be879dfe28d7038999be8b2be4f0314eb0457d02", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8cf4219c1673533eb5caf304237bffaa8e847067/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cf4219c1673533eb5caf304237bffaa8e847067/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=8cf4219c1673533eb5caf304237bffaa8e847067", "patch": "@@ -1512,6 +1512,10 @@ mod redundant_pattern_match {\n             }\n         }\n \n+        let result_expr = match &op.kind {\n+            ExprKind::AddrOf(_, _, borrowed) => borrowed,\n+            _ => op,\n+        };\n         span_lint_and_then(\n             cx,\n             REDUNDANT_PATTERN_MATCHING,\n@@ -1524,7 +1528,7 @@ mod redundant_pattern_match {\n \n                 // while let ... = ... { ... }\n                 //                 ^^^\n-                let op_span = op.span.source_callsite();\n+                let op_span = result_expr.span.source_callsite();\n \n                 // while let ... = ... { ... }\n                 // ^^^^^^^^^^^^^^^^^^^\n@@ -1589,17 +1593,21 @@ mod redundant_pattern_match {\n             };\n \n             if let Some(good_method) = found_good_method {\n+                let span = expr.span.to(op.span);\n+                let result_expr = match &op.kind {\n+                    ExprKind::AddrOf(_, _, borrowed) => borrowed,\n+                    _ => op,\n+                };\n                 span_lint_and_then(\n                     cx,\n                     REDUNDANT_PATTERN_MATCHING,\n                     expr.span,\n                     &format!(\"redundant pattern matching, consider using `{}`\", good_method),\n                     |diag| {\n-                        let span = expr.span.to(op.span);\n                         diag.span_suggestion(\n                             span,\n                             \"try this\",\n-                            format!(\"{}.{}\", snippet(cx, op.span, \"_\"), good_method),\n+                            format!(\"{}.{}\", snippet(cx, result_expr.span, \"_\"), good_method),\n                             Applicability::MaybeIncorrect, // snippet\n                         );\n                     },"}, {"sha": "adbff8af8d9ca087d2039df3d8b9855b2018ceaa", "filename": "tests/ui/redundant_pattern_matching.fixed", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8cf4219c1673533eb5caf304237bffaa8e847067/tests%2Fui%2Fredundant_pattern_matching.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/8cf4219c1673533eb5caf304237bffaa8e847067/tests%2Fui%2Fredundant_pattern_matching.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching.fixed?ref=8cf4219c1673533eb5caf304237bffaa8e847067", "patch": "@@ -11,6 +11,9 @@\n )]\n \n fn main() {\n+    let result: Result<usize, usize> = Err(5);\n+    if result.is_ok() {}\n+\n     if Ok::<i32, i32>(42).is_ok() {}\n \n     if Err::<i32, i32>(42).is_err() {}"}, {"sha": "4c2870e7803cb965d108e09ee3adbf3869e2e401", "filename": "tests/ui/redundant_pattern_matching.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8cf4219c1673533eb5caf304237bffaa8e847067/tests%2Fui%2Fredundant_pattern_matching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cf4219c1673533eb5caf304237bffaa8e847067/tests%2Fui%2Fredundant_pattern_matching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching.rs?ref=8cf4219c1673533eb5caf304237bffaa8e847067", "patch": "@@ -11,6 +11,9 @@\n )]\n \n fn main() {\n+    let result: Result<usize, usize> = Err(5);\n+    if let Ok(_) = &result {}\n+\n     if let Ok(_) = Ok::<i32, i32>(42) {}\n \n     if let Err(_) = Err::<i32, i32>(42) {}"}, {"sha": "d3c9ceaa3d7c18b0bee5a9cd15e1e451c2f1885d", "filename": "tests/ui/redundant_pattern_matching.stderr", "status": "modified", "additions": 37, "deletions": 31, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/8cf4219c1673533eb5caf304237bffaa8e847067/tests%2Fui%2Fredundant_pattern_matching.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8cf4219c1673533eb5caf304237bffaa8e847067/tests%2Fui%2Fredundant_pattern_matching.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching.stderr?ref=8cf4219c1673533eb5caf304237bffaa8e847067", "patch": "@@ -1,73 +1,79 @@\n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching.rs:14:12\n+  --> $DIR/redundant_pattern_matching.rs:15:12\n    |\n-LL |     if let Ok(_) = Ok::<i32, i32>(42) {}\n-   |     -------^^^^^--------------------- help: try this: `if Ok::<i32, i32>(42).is_ok()`\n+LL |     if let Ok(_) = &result {}\n+   |     -------^^^^^---------- help: try this: `if result.is_ok()`\n    |\n    = note: `-D clippy::redundant-pattern-matching` implied by `-D warnings`\n \n+error: redundant pattern matching, consider using `is_ok()`\n+  --> $DIR/redundant_pattern_matching.rs:17:12\n+   |\n+LL |     if let Ok(_) = Ok::<i32, i32>(42) {}\n+   |     -------^^^^^--------------------- help: try this: `if Ok::<i32, i32>(42).is_ok()`\n+\n error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/redundant_pattern_matching.rs:16:12\n+  --> $DIR/redundant_pattern_matching.rs:19:12\n    |\n LL |     if let Err(_) = Err::<i32, i32>(42) {}\n    |     -------^^^^^^---------------------- help: try this: `if Err::<i32, i32>(42).is_err()`\n \n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/redundant_pattern_matching.rs:18:12\n+  --> $DIR/redundant_pattern_matching.rs:21:12\n    |\n LL |     if let None = None::<()> {}\n    |     -------^^^^------------- help: try this: `if None::<()>.is_none()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching.rs:20:12\n+  --> $DIR/redundant_pattern_matching.rs:23:12\n    |\n LL |     if let Some(_) = Some(42) {}\n    |     -------^^^^^^^----------- help: try this: `if Some(42).is_some()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching.rs:22:12\n+  --> $DIR/redundant_pattern_matching.rs:25:12\n    |\n LL |     if let Some(_) = Some(42) {\n    |     -------^^^^^^^----------- help: try this: `if Some(42).is_some()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching.rs:28:15\n+  --> $DIR/redundant_pattern_matching.rs:31:15\n    |\n LL |     while let Some(_) = Some(42) {}\n    |     ----------^^^^^^^----------- help: try this: `while Some(42).is_some()`\n \n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/redundant_pattern_matching.rs:30:15\n+  --> $DIR/redundant_pattern_matching.rs:33:15\n    |\n LL |     while let None = Some(42) {}\n    |     ----------^^^^----------- help: try this: `while Some(42).is_none()`\n \n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/redundant_pattern_matching.rs:32:15\n+  --> $DIR/redundant_pattern_matching.rs:35:15\n    |\n LL |     while let None = None::<()> {}\n    |     ----------^^^^------------- help: try this: `while None::<()>.is_none()`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching.rs:34:15\n+  --> $DIR/redundant_pattern_matching.rs:37:15\n    |\n LL |     while let Ok(_) = Ok::<i32, i32>(10) {}\n    |     ----------^^^^^--------------------- help: try this: `while Ok::<i32, i32>(10).is_ok()`\n \n error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/redundant_pattern_matching.rs:36:15\n+  --> $DIR/redundant_pattern_matching.rs:39:15\n    |\n LL |     while let Err(_) = Ok::<i32, i32>(10) {}\n    |     ----------^^^^^^--------------------- help: try this: `while Ok::<i32, i32>(10).is_err()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching.rs:39:15\n+  --> $DIR/redundant_pattern_matching.rs:42:15\n    |\n LL |     while let Some(_) = v.pop() {\n    |     ----------^^^^^^^---------- help: try this: `while v.pop().is_some()`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching.rs:55:5\n+  --> $DIR/redundant_pattern_matching.rs:58:5\n    |\n LL | /     match Ok::<i32, i32>(42) {\n LL | |         Ok(_) => true,\n@@ -76,7 +82,7 @@ LL | |     };\n    | |_____^ help: try this: `Ok::<i32, i32>(42).is_ok()`\n \n error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/redundant_pattern_matching.rs:60:5\n+  --> $DIR/redundant_pattern_matching.rs:63:5\n    |\n LL | /     match Ok::<i32, i32>(42) {\n LL | |         Ok(_) => false,\n@@ -85,7 +91,7 @@ LL | |     };\n    | |_____^ help: try this: `Ok::<i32, i32>(42).is_err()`\n \n error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/redundant_pattern_matching.rs:65:5\n+  --> $DIR/redundant_pattern_matching.rs:68:5\n    |\n LL | /     match Err::<i32, i32>(42) {\n LL | |         Ok(_) => false,\n@@ -94,7 +100,7 @@ LL | |     };\n    | |_____^ help: try this: `Err::<i32, i32>(42).is_err()`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching.rs:70:5\n+  --> $DIR/redundant_pattern_matching.rs:73:5\n    |\n LL | /     match Err::<i32, i32>(42) {\n LL | |         Ok(_) => true,\n@@ -103,7 +109,7 @@ LL | |     };\n    | |_____^ help: try this: `Err::<i32, i32>(42).is_ok()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching.rs:75:5\n+  --> $DIR/redundant_pattern_matching.rs:78:5\n    |\n LL | /     match Some(42) {\n LL | |         Some(_) => true,\n@@ -112,7 +118,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(42).is_some()`\n \n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/redundant_pattern_matching.rs:80:5\n+  --> $DIR/redundant_pattern_matching.rs:83:5\n    |\n LL | /     match None::<()> {\n LL | |         Some(_) => false,\n@@ -121,7 +127,7 @@ LL | |     };\n    | |_____^ help: try this: `None::<()>.is_none()`\n \n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/redundant_pattern_matching.rs:85:13\n+  --> $DIR/redundant_pattern_matching.rs:88:13\n    |\n LL |       let _ = match None::<()> {\n    |  _____________^\n@@ -131,64 +137,64 @@ LL | |     };\n    | |_____^ help: try this: `None::<()>.is_none()`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching.rs:90:20\n+  --> $DIR/redundant_pattern_matching.rs:93:20\n    |\n LL |     let _ = if let Ok(_) = Ok::<usize, ()>(4) { true } else { false };\n    |             -------^^^^^--------------------- help: try this: `if Ok::<usize, ()>(4).is_ok()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching.rs:93:20\n+  --> $DIR/redundant_pattern_matching.rs:96:20\n    |\n LL |     let x = if let Some(_) = opt { true } else { false };\n    |             -------^^^^^^^------ help: try this: `if opt.is_some()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching.rs:99:20\n+  --> $DIR/redundant_pattern_matching.rs:102:20\n    |\n LL |     let _ = if let Some(_) = gen_opt() {\n    |             -------^^^^^^^------------ help: try this: `if gen_opt().is_some()`\n \n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/redundant_pattern_matching.rs:101:19\n+  --> $DIR/redundant_pattern_matching.rs:104:19\n    |\n LL |     } else if let None = gen_opt() {\n    |            -------^^^^------------ help: try this: `if gen_opt().is_none()`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching.rs:103:19\n+  --> $DIR/redundant_pattern_matching.rs:106:19\n    |\n LL |     } else if let Ok(_) = gen_res() {\n    |            -------^^^^^------------ help: try this: `if gen_res().is_ok()`\n \n error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/redundant_pattern_matching.rs:105:19\n+  --> $DIR/redundant_pattern_matching.rs:108:19\n    |\n LL |     } else if let Err(_) = gen_res() {\n    |            -------^^^^^^------------ help: try this: `if gen_res().is_err()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching.rs:138:19\n+  --> $DIR/redundant_pattern_matching.rs:141:19\n    |\n LL |         while let Some(_) = r#try!(result_opt()) {}\n    |         ----------^^^^^^^----------------------- help: try this: `while r#try!(result_opt()).is_some()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching.rs:139:16\n+  --> $DIR/redundant_pattern_matching.rs:142:16\n    |\n LL |         if let Some(_) = r#try!(result_opt()) {}\n    |         -------^^^^^^^----------------------- help: try this: `if r#try!(result_opt()).is_some()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching.rs:145:12\n+  --> $DIR/redundant_pattern_matching.rs:148:12\n    |\n LL |     if let Some(_) = m!() {}\n    |     -------^^^^^^^------- help: try this: `if m!().is_some()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching.rs:146:15\n+  --> $DIR/redundant_pattern_matching.rs:149:15\n    |\n LL |     while let Some(_) = m!() {}\n    |     ----------^^^^^^^------- help: try this: `while m!().is_some()`\n \n-error: aborting due to 28 previous errors\n+error: aborting due to 29 previous errors\n "}]}