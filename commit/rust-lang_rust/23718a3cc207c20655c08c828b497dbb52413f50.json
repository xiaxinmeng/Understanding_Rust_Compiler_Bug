{"sha": "23718a3cc207c20655c08c828b497dbb52413f50", "node_id": "C_kwDOAAsO6NoAKDIzNzE4YTNjYzIwN2MyMDY1NWMwOGM4MjhiNDk3ZGJiNTI0MTNmNTA", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2022-12-21T15:47:33Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2023-01-12T02:28:37Z"}, "message": "suggest adding const_trait_impl if error because of that", "tree": {"sha": "67165307c9edcee3662ded761d8e8e55234064e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67165307c9edcee3662ded761d8e8e55234064e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23718a3cc207c20655c08c828b497dbb52413f50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23718a3cc207c20655c08c828b497dbb52413f50", "html_url": "https://github.com/rust-lang/rust/commit/23718a3cc207c20655c08c828b497dbb52413f50", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23718a3cc207c20655c08c828b497dbb52413f50/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7fea8c7e63cd60aa583e6ee761716bef9a7cc1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7fea8c7e63cd60aa583e6ee761716bef9a7cc1a", "html_url": "https://github.com/rust-lang/rust/commit/e7fea8c7e63cd60aa583e6ee761716bef9a7cc1a"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "fd166e3c9387776f022b7b218ad7545281dc4e0f", "filename": "compiler/rustc_const_eval/src/transform/check_consts/check.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/23718a3cc207c20655c08c828b497dbb52413f50/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23718a3cc207c20655c08c828b497dbb52413f50/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fcheck.rs?ref=23718a3cc207c20655c08c828b497dbb52413f50", "patch": "@@ -730,6 +730,7 @@ impl<'tcx> Visitor<'tcx> for Checker<'_, 'tcx> {\n                             substs,\n                             span: *fn_span,\n                             from_hir_call: *from_hir_call,\n+                            feature: Some(sym::const_trait_impl),\n                         });\n                         return;\n                     }\n@@ -802,6 +803,7 @@ impl<'tcx> Visitor<'tcx> for Checker<'_, 'tcx> {\n                                     substs,\n                                     span: *fn_span,\n                                     from_hir_call: *from_hir_call,\n+                                    feature: None,\n                                 });\n                                 return;\n                             }\n@@ -844,6 +846,7 @@ impl<'tcx> Visitor<'tcx> for Checker<'_, 'tcx> {\n                                     substs,\n                                     span: *fn_span,\n                                     from_hir_call: *from_hir_call,\n+                                    feature: None,\n                                 });\n                                 return;\n                             }\n@@ -903,6 +906,7 @@ impl<'tcx> Visitor<'tcx> for Checker<'_, 'tcx> {\n                             substs,\n                             span: *fn_span,\n                             from_hir_call: *from_hir_call,\n+                            feature: None,\n                         });\n                         return;\n                     }"}, {"sha": "0cb5d2ff8c7193f21db958018b5732df9a26957c", "filename": "compiler/rustc_const_eval/src/transform/check_consts/ops.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/23718a3cc207c20655c08c828b497dbb52413f50/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23718a3cc207c20655c08c828b497dbb52413f50/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs?ref=23718a3cc207c20655c08c828b497dbb52413f50", "patch": "@@ -111,6 +111,7 @@ pub struct FnCallNonConst<'tcx> {\n     pub substs: SubstsRef<'tcx>,\n     pub span: Span,\n     pub from_hir_call: bool,\n+    pub feature: Option<Symbol>,\n }\n \n impl<'tcx> NonConstOp<'tcx> for FnCallNonConst<'tcx> {\n@@ -119,7 +120,7 @@ impl<'tcx> NonConstOp<'tcx> for FnCallNonConst<'tcx> {\n         ccx: &ConstCx<'_, 'tcx>,\n         _: Span,\n     ) -> DiagnosticBuilder<'tcx, ErrorGuaranteed> {\n-        let FnCallNonConst { caller, callee, substs, span, from_hir_call } = *self;\n+        let FnCallNonConst { caller, callee, substs, span, from_hir_call, feature } = *self;\n         let ConstCx { tcx, param_env, .. } = *ccx;\n \n         let diag_trait = |err, self_ty: Ty<'_>, trait_id| {\n@@ -318,6 +319,13 @@ impl<'tcx> NonConstOp<'tcx> for FnCallNonConst<'tcx> {\n             ccx.const_kind(),\n         ));\n \n+        if let Some(feature) = feature && ccx.tcx.sess.is_nightly_build() {\n+            err.help(&format!(\n+                \"add `#![feature({})]` to the crate attributes to enable\",\n+                feature,\n+            ));\n+        }\n+\n         if let ConstContext::Static(_) = ccx.const_kind() {\n             err.note(\"consider wrapping this expression in `Lazy::new(|| ...)` from the `once_cell` crate: https://crates.io/crates/once_cell\");\n         }"}]}