{"sha": "d5b562d4fcb4787c5626e0e3b4396c98aa2f4f69", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1YjU2MmQ0ZmNiNDc4N2M1NjI2ZTBlM2I0Mzk2Yzk4YWEyZjRmNjk=", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2018-09-03T09:17:20Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2018-09-20T05:31:30Z"}, "message": "Improve error checking and reporting\n\n- Check for valid attributes more reliably\n- Don't bloat the error index for boring errors\n- Do use real error codes for the interesting ones", "tree": {"sha": "9d3ab87cf8c74ce263323ccf3cc7bd201ed8d056", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d3ab87cf8c74ce263323ccf3cc7bd201ed8d056"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5b562d4fcb4787c5626e0e3b4396c98aa2f4f69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5b562d4fcb4787c5626e0e3b4396c98aa2f4f69", "html_url": "https://github.com/rust-lang/rust/commit/d5b562d4fcb4787c5626e0e3b4396c98aa2f4f69", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5b562d4fcb4787c5626e0e3b4396c98aa2f4f69/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2187e7a2c3f9950b205b2b670a2353f0f2d86bf0", "url": "https://api.github.com/repos/rust-lang/rust/commits/2187e7a2c3f9950b205b2b670a2353f0f2d86bf0", "html_url": "https://github.com/rust-lang/rust/commit/2187e7a2c3f9950b205b2b670a2353f0f2d86bf0"}], "stats": {"total": 214, "additions": 165, "deletions": 49}, "files": [{"sha": "3318bbd8c870ec20a9294a1c349dc466a970c789", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/d5b562d4fcb4787c5626e0e3b4396c98aa2f4f69/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5b562d4fcb4787c5626e0e3b4396c98aa2f4f69/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=d5b562d4fcb4787c5626e0e3b4396c98aa2f4f69", "patch": "@@ -2116,34 +2116,6 @@ struct Foo;\n ```\n \"##,\n \n-E0713: r##\"\n-This error indicates that a `#[marker]` attribute was incorrectly placed\n-on something other than a trait.\n-\n-Examples of erroneous code:\n-\n-```compile_fail,E0713\n-# #![feature(marker_trait_attr)]\n-\n-#[marker]\n-struct Foo { }\n-```\n-\"##,\n-\n-E0714: r##\"\n-This error indicates that a `#[marker]` attribute had a value. The\n-`#[marker]` should be empty.\n-\n-Examples of erroneous code:\n-\n-```compile_fail,E0714\n-# #![feature(marker_trait_attr)]\n-\n-#[marker(anything)]\n-trait Foo {}\n-```\n-\"##,\n-\n }\n \n "}, {"sha": "b23a50ef1a402dcfcd830b35a627290c0e9417e6", "filename": "src/librustc/hir/check_attr.rs", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d5b562d4fcb4787c5626e0e3b4396c98aa2f4f69/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5b562d4fcb4787c5626e0e3b4396c98aa2f4f69/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fcheck_attr.rs?ref=d5b562d4fcb4787c5626e0e3b4396c98aa2f4f69", "patch": "@@ -123,22 +123,17 @@ impl<'a, 'tcx> CheckAttrVisitor<'a, 'tcx> {\n         match target {\n             Target::Trait => { /* Valid */ },\n             _ => {\n-                struct_span_err!(self.tcx.sess,\n-                                 attr.span,\n-                                 E0713,\n-                                 \"attribute can only be applied to a trait\")\n+                self.tcx.sess\n+                    .struct_span_err(attr.span, \"attribute can only be applied to a trait\")\n                     .span_label(item.span, \"not a trait\")\n                     .emit();\n                 return;\n             }\n         }\n \n-        if attr.meta_item_list().is_some() || attr.value_str().is_some() {\n-            struct_span_err!(self.tcx.sess,\n-                             attr.span,\n-                             E0714,\n-                             \"attribute should be empty\")\n-                .span_label(item.span, \"not empty\")\n+        if !attr.is_word() {\n+            self.tcx.sess\n+                .struct_span_err(attr.span, \"attribute should be empty\")\n                 .emit();\n         }\n     }"}, {"sha": "a355bc99fd8e82b1561bdd5dfb49f010ba974d33", "filename": "src/librustc_typeck/check/wfcheck.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d5b562d4fcb4787c5626e0e3b4396c98aa2f4f69/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5b562d4fcb4787c5626e0e3b4396c98aa2f4f69/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs?ref=d5b562d4fcb4787c5626e0e3b4396c98aa2f4f69", "patch": "@@ -308,10 +308,12 @@ fn check_trait<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, item: &hir::Item) {\n     let trait_def = tcx.trait_def(trait_def_id);\n     if trait_def.is_marker {\n         for associated_def_id in &*tcx.associated_item_def_ids(trait_def_id) {\n-            tcx.sess.struct_span_err(\n-                    tcx.def_span(*associated_def_id),\n-                    \"marker traits cannot have associated items\",\n-                ).emit();\n+            struct_span_err!(\n+                tcx.sess,\n+                tcx.def_span(*associated_def_id),\n+                E0714,\n+                \"marker traits cannot have associated items\",\n+            ).emit();\n         }\n     }\n "}, {"sha": "f57d050fa2d77641e9cdef52b34d0d4cb75182ac", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/d5b562d4fcb4787c5626e0e3b4396c98aa2f4f69/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5b562d4fcb4787c5626e0e3b4396c98aa2f4f69/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=d5b562d4fcb4787c5626e0e3b4396c98aa2f4f69", "patch": "@@ -4750,6 +4750,22 @@ ambiguity for some types, we disallow calling methods on raw pointers when\n the type is unknown.\n \"##,\n \n+E0714: r##\"\n+A `#[marker]` trait contained an associated item.\n+\n+The items of marker traits cannot be overridden, so there's no need to have them\n+when they cannot be changed per-type anyway.  If you wanted them for ergonomic\n+reasons, consider making an extension trait instead.\n+\"##,\n+\n+E0715: r##\"\n+An `impl` for a `#[marker]` trait tried to override an associated item.\n+\n+Because marker traits are allowed to have multiple implementations for the same\n+type, it's not allowed to override anything in those implementations, as it\n+would be ambiguous which override should actually be used.\n+\"##,\n+\n }\n \n register_diagnostics! {\n@@ -4833,5 +4849,4 @@ register_diagnostics! {\n     E0641, // cannot cast to/from a pointer with an unknown kind\n     E0645, // trait aliases not finished\n     E0698, // type inside generator must be known in this context\n-    E0715, // impls for marker traits cannot contain items\n }"}, {"sha": "4c8003ce3d80883b3ea86f65e73b9723c903fa2e", "filename": "src/test/ui/marker_trait_attr/marker-attribute-on-non-trait.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/d5b562d4fcb4787c5626e0e3b4396c98aa2f4f69/src%2Ftest%2Fui%2Fmarker_trait_attr%2Fmarker-attribute-on-non-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5b562d4fcb4787c5626e0e3b4396c98aa2f4f69/src%2Ftest%2Fui%2Fmarker_trait_attr%2Fmarker-attribute-on-non-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmarker_trait_attr%2Fmarker-attribute-on-non-trait.rs?ref=d5b562d4fcb4787c5626e0e3b4396c98aa2f4f69", "patch": "@@ -0,0 +1,33 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(marker_trait_attr)]\n+\n+#[marker] //~ ERROR attribute can only be applied to a trait\n+struct Struct {}\n+\n+#[marker] //~ ERROR attribute can only be applied to a trait\n+impl Struct {}\n+\n+#[marker] //~ ERROR attribute can only be applied to a trait\n+union Union {\n+    x: i32,\n+}\n+\n+#[marker] //~ ERROR attribute can only be applied to a trait\n+const CONST: usize = 10;\n+\n+#[marker] //~ ERROR attribute can only be applied to a trait\n+fn function() {}\n+\n+#[marker] //~ ERROR attribute can only be applied to a trait\n+type Type = ();\n+\n+fn main() {}"}, {"sha": "0e2586b9799d935e0fe7dd821b83182f68bb73e3", "filename": "src/test/ui/marker_trait_attr/marker-attribute-on-non-trait.stderr", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/d5b562d4fcb4787c5626e0e3b4396c98aa2f4f69/src%2Ftest%2Fui%2Fmarker_trait_attr%2Fmarker-attribute-on-non-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d5b562d4fcb4787c5626e0e3b4396c98aa2f4f69/src%2Ftest%2Fui%2Fmarker_trait_attr%2Fmarker-attribute-on-non-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmarker_trait_attr%2Fmarker-attribute-on-non-trait.stderr?ref=d5b562d4fcb4787c5626e0e3b4396c98aa2f4f69", "patch": "@@ -0,0 +1,52 @@\n+error: attribute can only be applied to a trait\n+  --> $DIR/marker-attribute-on-non-trait.rs:13:1\n+   |\n+LL | #[marker] //~ ERROR attribute can only be applied to a trait\n+   | ^^^^^^^^^\n+LL | struct Struct {}\n+   | ---------------- not a trait\n+\n+error: attribute can only be applied to a trait\n+  --> $DIR/marker-attribute-on-non-trait.rs:16:1\n+   |\n+LL | #[marker] //~ ERROR attribute can only be applied to a trait\n+   | ^^^^^^^^^\n+LL | impl Struct {}\n+   | -------------- not a trait\n+\n+error: attribute can only be applied to a trait\n+  --> $DIR/marker-attribute-on-non-trait.rs:19:1\n+   |\n+LL |   #[marker] //~ ERROR attribute can only be applied to a trait\n+   |   ^^^^^^^^^\n+LL | / union Union {\n+LL | |     x: i32,\n+LL | | }\n+   | |_- not a trait\n+\n+error: attribute can only be applied to a trait\n+  --> $DIR/marker-attribute-on-non-trait.rs:24:1\n+   |\n+LL | #[marker] //~ ERROR attribute can only be applied to a trait\n+   | ^^^^^^^^^\n+LL | const CONST: usize = 10;\n+   | ------------------------ not a trait\n+\n+error: attribute can only be applied to a trait\n+  --> $DIR/marker-attribute-on-non-trait.rs:27:1\n+   |\n+LL | #[marker] //~ ERROR attribute can only be applied to a trait\n+   | ^^^^^^^^^\n+LL | fn function() {}\n+   | ---------------- not a trait\n+\n+error: attribute can only be applied to a trait\n+  --> $DIR/marker-attribute-on-non-trait.rs:30:1\n+   |\n+LL | #[marker] //~ ERROR attribute can only be applied to a trait\n+   | ^^^^^^^^^\n+LL | type Type = ();\n+   | --------------- not a trait\n+\n+error: aborting due to 6 previous errors\n+"}, {"sha": "6290481d60f751d9be56e80bb880b42a6b323d2c", "filename": "src/test/ui/marker_trait_attr/marker-attribute-with-values.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/d5b562d4fcb4787c5626e0e3b4396c98aa2f4f69/src%2Ftest%2Fui%2Fmarker_trait_attr%2Fmarker-attribute-with-values.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5b562d4fcb4787c5626e0e3b4396c98aa2f4f69/src%2Ftest%2Fui%2Fmarker_trait_attr%2Fmarker-attribute-with-values.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmarker_trait_attr%2Fmarker-attribute-with-values.rs?ref=d5b562d4fcb4787c5626e0e3b4396c98aa2f4f69", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(marker_trait_attr)]\n+#![feature(unrestricted_attribute_tokens)]\n+\n+#[marker(always)]\n+trait Marker1 {}\n+//~^^ ERROR attribute should be empty\n+\n+#[marker(\"never\")]\n+trait Marker2 {}\n+//~^^ ERROR attribute should be empty\n+\n+#[marker(key = value)]\n+trait Marker3 {}\n+//~^^ ERROR attribute should be empty\n+\n+fn main() {}"}, {"sha": "66bf2d1c502fb462439c2a35c2d5c38565741636", "filename": "src/test/ui/marker_trait_attr/marker-attribute-with-values.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d5b562d4fcb4787c5626e0e3b4396c98aa2f4f69/src%2Ftest%2Fui%2Fmarker_trait_attr%2Fmarker-attribute-with-values.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d5b562d4fcb4787c5626e0e3b4396c98aa2f4f69/src%2Ftest%2Fui%2Fmarker_trait_attr%2Fmarker-attribute-with-values.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmarker_trait_attr%2Fmarker-attribute-with-values.stderr?ref=d5b562d4fcb4787c5626e0e3b4396c98aa2f4f69", "patch": "@@ -0,0 +1,20 @@\n+error: attribute should be empty\n+  --> $DIR/marker-attribute-with-values.rs:14:1\n+   |\n+LL | #[marker(always)]\n+   | ^^^^^^^^^^^^^^^^^\n+\n+error: attribute should be empty\n+  --> $DIR/marker-attribute-with-values.rs:18:1\n+   |\n+LL | #[marker(\"never\")]\n+   | ^^^^^^^^^^^^^^^^^^\n+\n+error: attribute should be empty\n+  --> $DIR/marker-attribute-with-values.rs:22:1\n+   |\n+LL | #[marker(key = value)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 3 previous errors\n+"}, {"sha": "dadf1f02b9a8fb7c7cfcadaf71b927d47c9aee16", "filename": "src/test/ui/marker_trait_attr/marker-trait-with-associated-items.stderr", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d5b562d4fcb4787c5626e0e3b4396c98aa2f4f69/src%2Ftest%2Fui%2Fmarker_trait_attr%2Fmarker-trait-with-associated-items.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d5b562d4fcb4787c5626e0e3b4396c98aa2f4f69/src%2Ftest%2Fui%2Fmarker_trait_attr%2Fmarker-trait-with-associated-items.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmarker_trait_attr%2Fmarker-trait-with-associated-items.stderr?ref=d5b562d4fcb4787c5626e0e3b4396c98aa2f4f69", "patch": "@@ -1,38 +1,39 @@\n-error: marker traits cannot have associated items\n+error[E0714]: marker traits cannot have associated items\n   --> $DIR/marker-trait-with-associated-items.rs:16:5\n    |\n LL |     const N: usize;\n    |     ^^^^^^^^^^^^^^^\n \n-error: marker traits cannot have associated items\n+error[E0714]: marker traits cannot have associated items\n   --> $DIR/marker-trait-with-associated-items.rs:22:5\n    |\n LL |     type Output;\n    |     ^^^^^^^^^^^^\n \n-error: marker traits cannot have associated items\n+error[E0714]: marker traits cannot have associated items\n   --> $DIR/marker-trait-with-associated-items.rs:28:5\n    |\n LL |     fn foo();\n    |     ^^^^^^^^^\n \n-error: marker traits cannot have associated items\n+error[E0714]: marker traits cannot have associated items\n   --> $DIR/marker-trait-with-associated-items.rs:34:5\n    |\n LL |     const N: usize = 43;\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n-error: marker traits cannot have associated items\n+error[E0714]: marker traits cannot have associated items\n   --> $DIR/marker-trait-with-associated-items.rs:40:5\n    |\n LL |     type Output = ();\n    |     ^^^^^^^^^^^^^^^^^\n \n-error: marker traits cannot have associated items\n+error[E0714]: marker traits cannot have associated items\n   --> $DIR/marker-trait-with-associated-items.rs:46:5\n    |\n LL |     fn foo() {}\n    |     ^^^^^^^^^^^\n \n error: aborting due to 6 previous errors\n \n+For more information about this error, try `rustc --explain E0714`."}]}