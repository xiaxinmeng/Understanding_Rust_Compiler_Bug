{"sha": "2083a123a50e9939bab639d9f06b9ef4cdc3d3ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwODNhMTIzYTUwZTk5MzliYWI2MzlkOWYwNmI5ZWY0Y2RjM2QzZWQ=", "commit": {"author": {"name": "Samy Kacimi", "email": "samy.kacimi@protonmail.ch", "date": "2019-07-23T18:03:20Z"}, "committer": {"name": "Samy Kacimi", "email": "samy.kacimi@protonmail.ch", "date": "2019-07-23T18:03:20Z"}, "message": "Normalize use of backticks in compiler messages for libsyntax/*\n\nhttps://github.com/rust-lang/rust/issues/60532", "tree": {"sha": "73018d2db1e67d5ab399f3c5095e2801b3e54022", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73018d2db1e67d5ab399f3c5095e2801b3e54022"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2083a123a50e9939bab639d9f06b9ef4cdc3d3ed", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEExrhwoK6DmrCETV5+4ilOki9MVuUFAl03S/oACgkQ4ilOki9M\nVuXkCwv+M2jg3+qp3m3nlQXsrIBNLMNS/QThJuTWo3IMNaTPLU8OwPwgCXSfDu36\niwjNWxiudNPFR24rb49qHuHiMIQMghCh9ehhLfr4dhukS86aakX/U05baHWze8Kl\nmywTLvFHfIaSJrkElKJN9dbohVC98P0xmdv7/dk/ch8+P1OgUQI5ML4wYL1sZJuY\nO2j7Pu2GT+G2B857iNv/MbjX6FdwGXx0oZiclgGAUkCAOf+mvJ4eUgE8vWjZioII\nNjf2uBq4TuH7KOAKO6qb/1ZVbt/B22aDgonC35NsXjJENEQCbfT1cDfRFvqBmuti\nrZkaJaBXKw05E4PGKKLtMe69wiWL2SN8OPBqt4bs8Ys9eHFLDdxUOUvkPQ1ppuOw\nq01IIM/mOCxQ+Mq02BSzWSEUq7FeiLqSrcVsFz2TWrw8Qy6TY+ALSCT2qvKKLWJi\nMlljWAMkeC4v0JQAw2VKAe7rrHPYXGhr4AwdhaDigwq8iRBPJgbR9ylbhd2doSgB\nsDY04B2T\n=4jwh\n-----END PGP SIGNATURE-----", "payload": "tree 73018d2db1e67d5ab399f3c5095e2801b3e54022\nparent 3ebca72a11869f946b31f900faffb75c2bb2473a\nauthor Samy Kacimi <samy.kacimi@protonmail.ch> 1563905000 +0200\ncommitter Samy Kacimi <samy.kacimi@protonmail.ch> 1563905000 +0200\n\nNormalize use of backticks in compiler messages for libsyntax/*\n\nhttps://github.com/rust-lang/rust/issues/60532\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2083a123a50e9939bab639d9f06b9ef4cdc3d3ed", "html_url": "https://github.com/rust-lang/rust/commit/2083a123a50e9939bab639d9f06b9ef4cdc3d3ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2083a123a50e9939bab639d9f06b9ef4cdc3d3ed/comments", "author": null, "committer": null, "parents": [{"sha": "3ebca72a11869f946b31f900faffb75c2bb2473a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ebca72a11869f946b31f900faffb75c2bb2473a", "html_url": "https://github.com/rust-lang/rust/commit/3ebca72a11869f946b31f900faffb75c2bb2473a"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "7be21ff9029a541c8bb9d68654657a1912db702f", "filename": "src/libsyntax/attr/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2083a123a50e9939bab639d9f06b9ef4cdc3d3ed/src%2Flibsyntax%2Fattr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2083a123a50e9939bab639d9f06b9ef4cdc3d3ed/src%2Flibsyntax%2Fattr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr%2Fmod.rs?ref=2083a123a50e9939bab639d9f06b9ef4cdc3d3ed", "patch": "@@ -30,7 +30,7 @@ use std::iter;\n use std::ops::DerefMut;\n \n pub fn mark_used(attr: &Attribute) {\n-    debug!(\"Marking {:?} as used.\", attr);\n+    debug!(\"marking {:?} as used\", attr);\n     GLOBALS.with(|globals| {\n         globals.used_attrs.lock().insert(attr.id);\n     });\n@@ -43,7 +43,7 @@ pub fn is_used(attr: &Attribute) -> bool {\n }\n \n pub fn mark_known(attr: &Attribute) {\n-    debug!(\"Marking {:?} as known.\", attr);\n+    debug!(\"marking {:?} as known\", attr);\n     GLOBALS.with(|globals| {\n         globals.known_attrs.lock().insert(attr.id);\n     });"}, {"sha": "029ce73498c68881d71a87aa8f59e8e3b14156eb", "filename": "src/libsyntax/error_codes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2083a123a50e9939bab639d9f06b9ef4cdc3d3ed/src%2Flibsyntax%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2083a123a50e9939bab639d9f06b9ef4cdc3d3ed/src%2Flibsyntax%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ferror_codes.rs?ref=2083a123a50e9939bab639d9f06b9ef4cdc3d3ed", "patch": "@@ -182,7 +182,7 @@ beta compilers will not comply.\n Example of erroneous code (on a stable compiler):\n \n ```ignore (depends on release channel)\n-#![feature(non_ascii_idents)] // error: #![feature] may not be used on the\n+#![feature(non_ascii_idents)] // error: `#![feature]` may not be used on the\n                               //        stable release channel\n ```\n "}, {"sha": "14d573d07d0af8848b2a730ff28c0e4556328c04", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2083a123a50e9939bab639d9f06b9ef4cdc3d3ed/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2083a123a50e9939bab639d9f06b9ef4cdc3d3ed/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=2083a123a50e9939bab639d9f06b9ef4cdc3d3ed", "patch": "@@ -602,7 +602,7 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n             None => return TokenStream::empty(),\n         }\n         self.cx.span_err(span, \"custom attribute invocations must be \\\n-            of the form #[foo] or #[foo(..)], the macro name must only be \\\n+            of the form `#[foo]` or `#[foo(..)]`, the macro name must only be \\\n             followed by a delimiter token\");\n         TokenStream::empty()\n     }"}, {"sha": "2ada710484347b021967f973e868851658eb1cb9", "filename": "src/libsyntax/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2083a123a50e9939bab639d9f06b9ef4cdc3d3ed/src%2Flibsyntax%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2083a123a50e9939bab639d9f06b9ef4cdc3d3ed/src%2Flibsyntax%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftest.rs?ref=2083a123a50e9939bab639d9f06b9ef4cdc3d3ed", "patch": "@@ -414,7 +414,7 @@ fn get_test_runner(sd: &errors::Handler, krate: &ast::Crate) -> Option<ast::Path\n     test_attr.meta_item_list().map(|meta_list| {\n         if meta_list.len() != 1 {\n             sd.span_fatal(test_attr.span,\n-                \"#![test_runner(..)] accepts exactly 1 argument\").raise()\n+                \"`#![test_runner(..)]` accepts exactly 1 argument\").raise()\n         }\n         match meta_list[0].meta_item() {\n             Some(meta_item) if meta_item.is_word() => meta_item.path.clone(),"}, {"sha": "8462b564ec1d7b2588458fb52bf209608757fa78", "filename": "src/test/ui/proc-macro/proc-macro-gates.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2083a123a50e9939bab639d9f06b9ef4cdc3d3ed/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2083a123a50e9939bab639d9f06b9ef4cdc3d3ed/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates.stderr?ref=2083a123a50e9939bab639d9f06b9ef4cdc3d3ed", "patch": "@@ -34,7 +34,7 @@ LL |     #![empty_attr]\n    = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n    = help: add `#![feature(proc_macro_hygiene)]` to the crate attributes to enable\n \n-error: custom attribute invocations must be of the form #[foo] or #[foo(..)], the macro name must only be followed by a delimiter token\n+error: custom attribute invocations must be of the form `#[foo]` or `#[foo(..)]`, the macro name must only be followed by a delimiter token\n   --> $DIR/proc-macro-gates.rs:21:1\n    |\n LL | #[empty_attr = \"y\"]"}]}