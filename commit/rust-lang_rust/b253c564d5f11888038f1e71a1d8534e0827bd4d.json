{"sha": "b253c564d5f11888038f1e71a1d8534e0827bd4d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyNTNjNTY0ZDVmMTE4ODgwMzhmMWU3MWExZDg1MzRlMDgyN2JkNGQ=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-04-01T05:19:05Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-04-01T18:37:05Z"}, "message": "Rustup to https://github.com/rust-lang/rust/pull/58805", "tree": {"sha": "d5edc7bccf2944e17e6b884341906a392687dc62", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5edc7bccf2944e17e6b884341906a392687dc62"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b253c564d5f11888038f1e71a1d8534e0827bd4d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAlyiWlEACgkQaTCGhp1Q\nZjdQzhAAkfhW6uR8GmgrS/w+s1wJdjLWKpKwGWPkFaLZtrqzbV2/LeR/PiCmXSxS\n4Ue16wrxF4tXe5x28om3FYc+Rmfe5diYr0ON/36tWmY+9U96SN5Gk9BBYdYzuYVd\no25KF95KrNJzhdxVlaf5HsKa8b3kiSlVStyBH5HdCfL/TxcUkH4U62oT+l07CC9N\nm8bmw6hsIUfEAp9KpxknVT9lY+EKXZzVG5PNKN5o5Zdbt9MU2c/erRTmJ3SHOj+m\n3iAghYWVNRFx65/3o4jNwXJ9Sv+lRYsXa6uCjFyBYklUHQs+jy3KLyjzyU0tblJI\nuSWkRrvg6AKzg/uA0JJTuQenEbwoAzAx1G8FiaKqi0bdRNX55WCz5EgybYZt7huU\n5G3uRS55Ce+GLr2LXE/ngZpCt76hsQ1evB3I1Lt6UReBN/ArH5s9Dqrnb7ICXGOf\nvyyWxT3QE8HfoBfO+2Gt5UE7PECDCsWRETpQNgh5lMjKLbfxN56+v34hUzl2DD76\nRzEXjAAFDe5W4LXSYXQXhrAYhzgC/63Y3swAk8bwlfjGZbO5qaVXkOImGt5h5t4j\nwe3A7ZdoQPXdFsAZa7lmnvuTnazLiAxou983hp2oBjVI0CoutNIv6lHK6j92GM3P\nh4OrexxR9tYG+75J7A77EGO2qEK2qDOrwqC5uyfBwAmbCajEhYc=\n=o+qv\n-----END PGP SIGNATURE-----", "payload": "tree d5edc7bccf2944e17e6b884341906a392687dc62\nparent 414c34c300f3716c03ae034bd72e4db3170cf0b8\nauthor Philipp Hansch <dev@phansch.net> 1554095945 +0200\ncommitter flip1995 <hello@philkrones.com> 1554143825 +0200\n\nRustup to https://github.com/rust-lang/rust/pull/58805\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b253c564d5f11888038f1e71a1d8534e0827bd4d", "html_url": "https://github.com/rust-lang/rust/commit/b253c564d5f11888038f1e71a1d8534e0827bd4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b253c564d5f11888038f1e71a1d8534e0827bd4d/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "414c34c300f3716c03ae034bd72e4db3170cf0b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/414c34c300f3716c03ae034bd72e4db3170cf0b8", "html_url": "https://github.com/rust-lang/rust/commit/414c34c300f3716c03ae034bd72e4db3170cf0b8"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "95609d3f302961bd9fc2ac90dccd7a1613a4db45", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b253c564d5f11888038f1e71a1d8534e0827bd4d/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b253c564d5f11888038f1e71a1d8534e0827bd4d/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=b253c564d5f11888038f1e71a1d8534e0827bd4d", "patch": "@@ -1533,7 +1533,7 @@ impl LintPass for CharLitAsU8 {\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for CharLitAsU8 {\n     fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr) {\n-        use syntax::ast::{LitKind, UintTy};\n+        use syntax::ast::LitKind;\n \n         if let ExprKind::Cast(ref e, _) = expr.node {\n             if let ExprKind::Lit(ref l) = e.node {\n@@ -1818,7 +1818,6 @@ impl Ord for FullInt {\n \n fn numeric_cast_precast_bounds<'a>(cx: &LateContext<'_, '_>, expr: &'a Expr) -> Option<(FullInt, FullInt)> {\n     use std::*;\n-    use syntax::ast::{IntTy, UintTy};\n \n     if let ExprKind::Cast(ref cast_exp, _) = expr.node {\n         let pre_cast_ty = cx.tables.expr_ty(cast_exp);"}, {"sha": "68af85030ab2ed8e08f4924809a26270dc13d0c2", "filename": "tests/ui/use_self.fixed", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b253c564d5f11888038f1e71a1d8534e0827bd4d/tests%2Fui%2Fuse_self.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/b253c564d5f11888038f1e71a1d8534e0827bd4d/tests%2Fui%2Fuse_self.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuse_self.fixed?ref=b253c564d5f11888038f1e71a1d8534e0827bd4d", "patch": "@@ -239,6 +239,7 @@ mod nesting {\n     struct Foo {}\n     impl Foo {\n         fn foo() {\n+            #[allow(unused_imports)]\n             use self::Foo; // Can't use Self here\n             struct Bar {\n                 foo: Foo, // Foo != Self"}, {"sha": "7a6d415528ad569b4241ef37d52b2310c6bee0b7", "filename": "tests/ui/use_self.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b253c564d5f11888038f1e71a1d8534e0827bd4d/tests%2Fui%2Fuse_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b253c564d5f11888038f1e71a1d8534e0827bd4d/tests%2Fui%2Fuse_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuse_self.rs?ref=b253c564d5f11888038f1e71a1d8534e0827bd4d", "patch": "@@ -239,6 +239,7 @@ mod nesting {\n     struct Foo {}\n     impl Foo {\n         fn foo() {\n+            #[allow(unused_imports)]\n             use self::Foo; // Can't use Self here\n             struct Bar {\n                 foo: Foo, // Foo != Self"}, {"sha": "bf1f41fd64ede87bd15c2e69e6b085e52ff66f03", "filename": "tests/ui/use_self.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b253c564d5f11888038f1e71a1d8534e0827bd4d/tests%2Fui%2Fuse_self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b253c564d5f11888038f1e71a1d8534e0827bd4d/tests%2Fui%2Fuse_self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuse_self.stderr?ref=b253c564d5f11888038f1e71a1d8534e0827bd4d", "patch": "@@ -151,43 +151,43 @@ LL |         use_self_expand!(); // Should lint in local macros\n    |         ------------------- in this macro invocation\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:260:21\n+  --> $DIR/use_self.rs:261:21\n    |\n LL |         fn baz() -> Foo {\n    |                     ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:261:13\n+  --> $DIR/use_self.rs:262:13\n    |\n LL |             Foo {}\n    |             ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:248:29\n+  --> $DIR/use_self.rs:249:29\n    |\n LL |                 fn bar() -> Bar {\n    |                             ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:249:21\n+  --> $DIR/use_self.rs:250:21\n    |\n LL |                     Bar { foo: Foo {} }\n    |                     ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:303:13\n+  --> $DIR/use_self.rs:304:13\n    |\n LL |             nested::A::fun_1();\n    |             ^^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:304:13\n+  --> $DIR/use_self.rs:305:13\n    |\n LL |             nested::A::A;\n    |             ^^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:306:13\n+  --> $DIR/use_self.rs:307:13\n    |\n LL |             nested::A {};\n    |             ^^^^^^^^^ help: use the applicable keyword: `Self`"}]}