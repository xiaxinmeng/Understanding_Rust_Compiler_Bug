{"sha": "fb88e25c46708229f2a87dc58b7b749442012d89", "node_id": "C_kwDOAAsO6NoAKGZiODhlMjVjNDY3MDgyMjlmMmE4N2RjNThiN2I3NDk0NDIwMTJkODk", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-08-24T16:20:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-24T16:20:21Z"}, "message": "Rollup merge of #100945 - TaKO8Ki:add-missing-test-case-for-impl-generic-mismatch, r=Dylan-DPC\n\nAdd a missing test case for impl generic mismatch\n\nThis suggestion use different span depending on whether the method has generics or not, so I added a test case about the method with some generics.", "tree": {"sha": "6bfcfc561225c0738168d098e8a31c0ca77285a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6bfcfc561225c0738168d098e8a31c0ca77285a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb88e25c46708229f2a87dc58b7b749442012d89", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjBk/FCRBK7hj4Ov3rIwAALr4IADT8HD1YbmiIDd4BQKPxAWKC\n3HpDykAq+gW9E+HANPKx9KZssSA4O2KewV2OhTzXUGckRzQmElUSSYKw9qTm+LKa\nhP6GBkP7O+Jtjqi4Wg5KoIlBnFlGve4ZNCu5pVJemI0ufO2qUchDcI4v0hj6dkfj\n4IfLpaGYdmiASmHhlYPbotmzNwsn1t+Ev3ry0IdHGNXlcCtaczlqej6TvhuQFrVc\nD4HEassm0ElG9byr9aNwY7y0e1Ngza9/Hhq7FhXZo1nMusu5Xku828APMuwskTLZ\nE90H7O75WorRox5LTuwyJU6676SgqRLrC9LSB7C/RGZ0MgTS5Ta/8lKw6Bi4NSo=\n=5Dy/\n-----END PGP SIGNATURE-----\n", "payload": "tree 6bfcfc561225c0738168d098e8a31c0ca77285a3\nparent 75b1b69171cf0d270609e76896fbe4c91e67e91d\nparent 56f9e29d2a372771251a06189a23442e336567cf\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1661358021 +0200\ncommitter GitHub <noreply@github.com> 1661358021 +0200\n\nRollup merge of #100945 - TaKO8Ki:add-missing-test-case-for-impl-generic-mismatch, r=Dylan-DPC\n\nAdd a missing test case for impl generic mismatch\n\nThis suggestion use different span depending on whether the method has generics or not, so I added a test case about the method with some generics.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb88e25c46708229f2a87dc58b7b749442012d89", "html_url": "https://github.com/rust-lang/rust/commit/fb88e25c46708229f2a87dc58b7b749442012d89", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb88e25c46708229f2a87dc58b7b749442012d89/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75b1b69171cf0d270609e76896fbe4c91e67e91d", "url": "https://api.github.com/repos/rust-lang/rust/commits/75b1b69171cf0d270609e76896fbe4c91e67e91d", "html_url": "https://github.com/rust-lang/rust/commit/75b1b69171cf0d270609e76896fbe4c91e67e91d"}, {"sha": "56f9e29d2a372771251a06189a23442e336567cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/56f9e29d2a372771251a06189a23442e336567cf", "html_url": "https://github.com/rust-lang/rust/commit/56f9e29d2a372771251a06189a23442e336567cf"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "fb8bde0d08131b34ef7d50adf5b99afdacadbf1b", "filename": "src/test/ui/impl-trait/impl-generic-mismatch.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/fb88e25c46708229f2a87dc58b7b749442012d89/src%2Ftest%2Fui%2Fimpl-trait%2Fimpl-generic-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb88e25c46708229f2a87dc58b7b749442012d89/src%2Ftest%2Fui%2Fimpl-trait%2Fimpl-generic-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fimpl-generic-mismatch.rs?ref=fb88e25c46708229f2a87dc58b7b749442012d89", "patch": "@@ -18,6 +18,15 @@ impl Bar for () {\n     //~^ Error method `bar` has incompatible signature for trait\n }\n \n+trait Baz {\n+    fn baz<U: Debug, T: Debug>(&self, _: &U, _: &T);\n+}\n+\n+impl Baz for () {\n+    fn baz<T: Debug>(&self, _: &impl Debug, _: &T) { }\n+    //~^ Error method `baz` has incompatible signature for trait\n+}\n+\n // With non-local trait (#49841):\n \n use std::hash::{Hash, Hasher};"}, {"sha": "542f02d7ec5673c82ebaf2d95564ec3959b0e739", "filename": "src/test/ui/impl-trait/impl-generic-mismatch.stderr", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/fb88e25c46708229f2a87dc58b7b749442012d89/src%2Ftest%2Fui%2Fimpl-trait%2Fimpl-generic-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fb88e25c46708229f2a87dc58b7b749442012d89/src%2Ftest%2Fui%2Fimpl-trait%2Fimpl-generic-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fimpl-generic-mismatch.stderr?ref=fb88e25c46708229f2a87dc58b7b749442012d89", "patch": "@@ -27,8 +27,22 @@ help: try changing the `impl Trait` argument to a generic parameter\n LL |     fn bar<U: Debug>(&self, _: &U) { }\n    |           ++++++++++            ~\n \n+error[E0643]: method `baz` has incompatible signature for trait\n+  --> $DIR/impl-generic-mismatch.rs:26:33\n+   |\n+LL |     fn baz<U: Debug, T: Debug>(&self, _: &U, _: &T);\n+   |                      - declaration in trait here\n+...\n+LL |     fn baz<T: Debug>(&self, _: &impl Debug, _: &T) { }\n+   |                                 ^^^^^^^^^^ expected generic parameter, found `impl Trait`\n+   |\n+help: try changing the `impl Trait` argument to a generic parameter\n+   |\n+LL |     fn baz<U: Debug, T: Debug>(&self, _: &T, _: &T) { }\n+   |           ~~~~~~~~~~~~~~~~~~~~            ~\n+\n error[E0643]: method `hash` has incompatible signature for trait\n-  --> $DIR/impl-generic-mismatch.rs:28:33\n+  --> $DIR/impl-generic-mismatch.rs:37:33\n    |\n LL |     fn hash(&self, hasher: &mut impl Hasher) {}\n    |                                 ^^^^^^^^^^^ expected generic parameter, found `impl Trait`\n@@ -38,6 +52,6 @@ LL |     fn hash(&self, hasher: &mut impl Hasher) {}\n LL |     fn hash<H: Hasher>(&self, state: &mut H);\n    |             - declaration in trait here\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0643`."}]}