{"sha": "e53bb1aefb0aba8fcadaf73b2c0f334dd36c2b23", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1M2JiMWFlZmIwYWJhOGZjYWRhZjczYjJjMGYzMzRkZDM2YzJiMjM=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-05-09T04:06:10Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-05-10T05:59:13Z"}, "message": "Reduce `Symbol`'s interface slightly.", "tree": {"sha": "55bb9bd414c17152e30d90c80518c2345d9d559c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55bb9bd414c17152e30d90c80518c2345d9d559c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e53bb1aefb0aba8fcadaf73b2c0f334dd36c2b23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e53bb1aefb0aba8fcadaf73b2c0f334dd36c2b23", "html_url": "https://github.com/rust-lang/rust/commit/e53bb1aefb0aba8fcadaf73b2c0f334dd36c2b23", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e53bb1aefb0aba8fcadaf73b2c0f334dd36c2b23/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb7eacb1d2f856f52f2daf3b58325e667f654eca", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb7eacb1d2f856f52f2daf3b58325e667f654eca", "html_url": "https://github.com/rust-lang/rust/commit/cb7eacb1d2f856f52f2daf3b58325e667f654eca"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "d0ba09af30b061cbd1e3084851b0f848000fd075", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e53bb1aefb0aba8fcadaf73b2c0f334dd36c2b23/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e53bb1aefb0aba8fcadaf73b2c0f334dd36c2b23/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=e53bb1aefb0aba8fcadaf73b2c0f334dd36c2b23", "patch": "@@ -380,10 +380,6 @@ impl Symbol {\n         with_interner(|interner| interner.intern(string))\n     }\n \n-    pub fn interned(self) -> Self {\n-        with_interner(|interner| interner.interned(self))\n-    }\n-\n     /// Gensyms a new `usize`, using the current interner.\n     pub fn gensym(string: &str) -> Self {\n         with_interner(|interner| interner.gensym(string))\n@@ -502,7 +498,7 @@ impl Interner {\n         name\n     }\n \n-    pub fn interned(&self, symbol: Symbol) -> Symbol {\n+    fn interned(&self, symbol: Symbol) -> Symbol {\n         if (symbol.0.as_usize()) < self.strings.len() {\n             symbol\n         } else {"}]}