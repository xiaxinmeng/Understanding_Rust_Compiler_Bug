{"sha": "d60c6f939862ed0be315499f53a0c2fe63b580d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2MGM2ZjkzOTg2MmVkMGJlMzE1NDk5ZjUzYTBjMmZlNjNiNTgwZDY=", "commit": {"author": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2019-12-27T04:42:28Z"}, "committer": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2020-01-07T17:48:16Z"}, "message": "Move to complexity and adapt test\n\n - test wildcard_enum_match_arm has been impacted by this new lint", "tree": {"sha": "20749c1d98d9ad47de7300596edfe48938044078", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20749c1d98d9ad47de7300596edfe48938044078"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d60c6f939862ed0be315499f53a0c2fe63b580d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d60c6f939862ed0be315499f53a0c2fe63b580d6", "html_url": "https://github.com/rust-lang/rust/commit/d60c6f939862ed0be315499f53a0c2fe63b580d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d60c6f939862ed0be315499f53a0c2fe63b580d6/comments", "author": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "649af71f9e516dd1f316111b3eaccb824f5a4981", "url": "https://api.github.com/repos/rust-lang/rust/commits/649af71f9e516dd1f316111b3eaccb824f5a4981", "html_url": "https://github.com/rust-lang/rust/commit/649af71f9e516dd1f316111b3eaccb824f5a4981"}], "stats": {"total": 31, "additions": 22, "deletions": 9}, "files": [{"sha": "a009bab57c678f6c5e9c5ac29b538369755dd61c", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d60c6f939862ed0be315499f53a0c2fe63b580d6/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d60c6f939862ed0be315499f53a0c2fe63b580d6/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=d60c6f939862ed0be315499f53a0c2fe63b580d6", "patch": "@@ -1002,7 +1002,6 @@ pub fn register_plugins(store: &mut lint::LintStore, sess: &Session, conf: &Conf\n         LintId::of(&integer_division::INTEGER_DIVISION),\n         LintId::of(&let_underscore::LET_UNDERSCORE_MUST_USE),\n         LintId::of(&literal_representation::DECIMAL_LITERAL_REPRESENTATION),\n-        LintId::of(&matches::PATS_WITH_WILD_MATCH_ARM),\n         LintId::of(&matches::WILDCARD_ENUM_MATCH_ARM),\n         LintId::of(&mem_forget::MEM_FORGET),\n         LintId::of(&methods::CLONE_ON_REF_PTR),\n@@ -1189,6 +1188,7 @@ pub fn register_plugins(store: &mut lint::LintStore, sess: &Session, conf: &Conf\n         LintId::of(&matches::MATCH_OVERLAPPING_ARM),\n         LintId::of(&matches::MATCH_REF_PATS),\n         LintId::of(&matches::MATCH_WILD_ERR_ARM),\n+        LintId::of(&matches::PATS_WITH_WILD_MATCH_ARM),\n         LintId::of(&matches::SINGLE_MATCH),\n         LintId::of(&mem_discriminant::MEM_DISCRIMINANT_NON_ENUM),\n         LintId::of(&mem_replace::MEM_REPLACE_OPTION_WITH_NONE),\n@@ -1463,6 +1463,7 @@ pub fn register_plugins(store: &mut lint::LintStore, sess: &Session, conf: &Conf\n         LintId::of(&map_unit_fn::OPTION_MAP_UNIT_FN),\n         LintId::of(&map_unit_fn::RESULT_MAP_UNIT_FN),\n         LintId::of(&matches::MATCH_AS_REF),\n+        LintId::of(&matches::PATS_WITH_WILD_MATCH_ARM),\n         LintId::of(&methods::CHARS_NEXT_CMP),\n         LintId::of(&methods::CLONE_ON_COPY),\n         LintId::of(&methods::FILTER_NEXT),"}, {"sha": "34bf4749d83ffa1c22944b2e0df6dfa619cc5649", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d60c6f939862ed0be315499f53a0c2fe63b580d6/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d60c6f939862ed0be315499f53a0c2fe63b580d6/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=d60c6f939862ed0be315499f53a0c2fe63b580d6", "patch": "@@ -1570,7 +1570,7 @@ pub const ALL_LINTS: [Lint; 345] = [\n     },\n     Lint {\n         name: \"pats_with_wild_match_arm\",\n-        group: \"restriction\",\n+        group: \"complexity\",\n         desc: \"a wildcard pattern used with others patterns in same match arm\",\n         deprecation: None,\n         module: \"matches\","}, {"sha": "f46320e03cc56a6c88ea7b368da7cc99443af841", "filename": "tests/ui/wildcard_enum_match_arm.fixed", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d60c6f939862ed0be315499f53a0c2fe63b580d6/tests%2Fui%2Fwildcard_enum_match_arm.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/d60c6f939862ed0be315499f53a0c2fe63b580d6/tests%2Fui%2Fwildcard_enum_match_arm.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_enum_match_arm.fixed?ref=d60c6f939862ed0be315499f53a0c2fe63b580d6", "patch": "@@ -1,7 +1,13 @@\n // run-rustfix\n \n #![deny(clippy::wildcard_enum_match_arm)]\n-#![allow(unreachable_code, unused_variables, dead_code, clippy::single_match)]\n+#![allow(\n+    unreachable_code,\n+    unused_variables,\n+    dead_code,\n+    clippy::single_match,\n+    clippy::pats_with_wild_match_arm\n+)]\n \n use std::io::ErrorKind;\n "}, {"sha": "508d0e0bb7967aedf6b3f09b874540b156dce1d7", "filename": "tests/ui/wildcard_enum_match_arm.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d60c6f939862ed0be315499f53a0c2fe63b580d6/tests%2Fui%2Fwildcard_enum_match_arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d60c6f939862ed0be315499f53a0c2fe63b580d6/tests%2Fui%2Fwildcard_enum_match_arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_enum_match_arm.rs?ref=d60c6f939862ed0be315499f53a0c2fe63b580d6", "patch": "@@ -1,7 +1,13 @@\n // run-rustfix\n \n #![deny(clippy::wildcard_enum_match_arm)]\n-#![allow(unreachable_code, unused_variables, dead_code, clippy::single_match)]\n+#![allow(\n+    unreachable_code,\n+    unused_variables,\n+    dead_code,\n+    clippy::single_match,\n+    clippy::pats_with_wild_match_arm\n+)]\n \n use std::io::ErrorKind;\n "}, {"sha": "e6f0411095cabaffc3c5449fdd7182d7549b92c2", "filename": "tests/ui/wildcard_enum_match_arm.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d60c6f939862ed0be315499f53a0c2fe63b580d6/tests%2Fui%2Fwildcard_enum_match_arm.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d60c6f939862ed0be315499f53a0c2fe63b580d6/tests%2Fui%2Fwildcard_enum_match_arm.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_enum_match_arm.stderr?ref=d60c6f939862ed0be315499f53a0c2fe63b580d6", "patch": "@@ -1,5 +1,5 @@\n error: wildcard match will miss any future added variants\n-  --> $DIR/wildcard_enum_match_arm.rs:31:9\n+  --> $DIR/wildcard_enum_match_arm.rs:37:9\n    |\n LL |         _ => eprintln!(\"Not red\"),\n    |         ^ help: try this: `Color::Green | Color::Blue | Color::Rgb(..) | Color::Cyan`\n@@ -11,25 +11,25 @@ LL | #![deny(clippy::wildcard_enum_match_arm)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: wildcard match will miss any future added variants\n-  --> $DIR/wildcard_enum_match_arm.rs:35:9\n+  --> $DIR/wildcard_enum_match_arm.rs:41:9\n    |\n LL |         _not_red => eprintln!(\"Not red\"),\n    |         ^^^^^^^^ help: try this: `_not_red @ Color::Green | _not_red @ Color::Blue | _not_red @ Color::Rgb(..) | _not_red @ Color::Cyan`\n \n error: wildcard match will miss any future added variants\n-  --> $DIR/wildcard_enum_match_arm.rs:39:9\n+  --> $DIR/wildcard_enum_match_arm.rs:45:9\n    |\n LL |         not_red => format!(\"{:?}\", not_red),\n    |         ^^^^^^^ help: try this: `not_red @ Color::Green | not_red @ Color::Blue | not_red @ Color::Rgb(..) | not_red @ Color::Cyan`\n \n error: wildcard match will miss any future added variants\n-  --> $DIR/wildcard_enum_match_arm.rs:55:9\n+  --> $DIR/wildcard_enum_match_arm.rs:61:9\n    |\n LL |         _ => \"No red\",\n    |         ^ help: try this: `Color::Red | Color::Green | Color::Blue | Color::Rgb(..) | Color::Cyan`\n \n error: match on non-exhaustive enum doesn't explicitly match all known variants\n-  --> $DIR/wildcard_enum_match_arm.rs:72:9\n+  --> $DIR/wildcard_enum_match_arm.rs:78:9\n    |\n LL |         _ => {},\n    |         ^ help: try this: `std::io::ErrorKind::PermissionDenied | std::io::ErrorKind::ConnectionRefused | std::io::ErrorKind::ConnectionReset | std::io::ErrorKind::ConnectionAborted | std::io::ErrorKind::NotConnected | std::io::ErrorKind::AddrInUse | std::io::ErrorKind::AddrNotAvailable | std::io::ErrorKind::BrokenPipe | std::io::ErrorKind::AlreadyExists | std::io::ErrorKind::WouldBlock | std::io::ErrorKind::InvalidInput | std::io::ErrorKind::InvalidData | std::io::ErrorKind::TimedOut | std::io::ErrorKind::WriteZero | std::io::ErrorKind::Interrupted | std::io::ErrorKind::Other | std::io::ErrorKind::UnexpectedEof | _`"}]}