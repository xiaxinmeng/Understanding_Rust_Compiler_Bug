{"sha": "fbdb13cfb02b320fbee061bcf58af885bd2847df", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiZGIxM2NmYjAyYjMyMGZiZWUwNjFiY2Y1OGFmODg1YmQyODQ3ZGY=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-12-28T12:13:21Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-12-28T13:30:44Z"}, "message": "Possibly fix an ICE on test", "tree": {"sha": "02dcfd96e707e9283da596247f85c513683b29f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02dcfd96e707e9283da596247f85c513683b29f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fbdb13cfb02b320fbee061bcf58af885bd2847df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fbdb13cfb02b320fbee061bcf58af885bd2847df", "html_url": "https://github.com/rust-lang/rust/commit/fbdb13cfb02b320fbee061bcf58af885bd2847df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fbdb13cfb02b320fbee061bcf58af885bd2847df/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fec5905d87fdee8d3d6a065cdd450972fb588b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/0fec5905d87fdee8d3d6a065cdd450972fb588b8", "html_url": "https://github.com/rust-lang/rust/commit/0fec5905d87fdee8d3d6a065cdd450972fb588b8"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "ef3ae45f181731f0b35a165a9da5ba9e6b4d5780", "filename": "clippy_lints/src/mut_key.rs", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/fbdb13cfb02b320fbee061bcf58af885bd2847df/clippy_lints%2Fsrc%2Fmut_key.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbdb13cfb02b320fbee061bcf58af885bd2847df/clippy_lints%2Fsrc%2Fmut_key.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_key.rs?ref=fbdb13cfb02b320fbee061bcf58af885bd2847df", "patch": "@@ -103,18 +103,23 @@ fn check_ty<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, span: Span, ty: Ty<'tcx>) {\n             .iter()\n             .any(|path| match_def_path(cx, def.did, &**path))\n         {\n-            let key_type = substs.type_at(0);\n-            if is_concrete_type(key_type) && !key_type.is_freeze(cx.tcx, cx.param_env, span) {\n-                span_lint(cx, MUTABLE_KEY_TYPE, span, \"mutable key type\");\n+            let key_type = concrete_type(Some(substs.type_at(0)));\n+            if let Some(key_type) = key_type {\n+                if !key_type.is_freeze(cx.tcx, cx.param_env, span) {\n+                    span_lint(cx, MUTABLE_KEY_TYPE, span, \"mutable key type\");\n+                }\n             }\n         }\n     }\n }\n \n-fn is_concrete_type(ty: Ty<'_>) -> bool {\n-    match ty.kind {\n-        RawPtr(TypeAndMut { ty: inner_ty, .. }) | Ref(_, inner_ty, _) => is_concrete_type(inner_ty),\n-        Dynamic(..) | Opaque(..) | Param(..) => false,\n-        _ => true,\n+fn concrete_type(ty: Option<Ty<'_>>) -> Option<Ty<'_>> {\n+    if let Some(ty) = ty {\n+        match ty.kind {\n+            RawPtr(TypeAndMut { ty: inner_ty, .. }) | Ref(_, inner_ty, _) => return concrete_type(Some(inner_ty)),\n+            Dynamic(..) | Opaque(..) | Param(..) => return None,\n+            _ => return Some(ty),\n+        }\n     }\n+    None\n }"}]}