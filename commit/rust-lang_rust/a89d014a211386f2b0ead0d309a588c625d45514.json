{"sha": "a89d014a211386f2b0ead0d309a588c625d45514", "node_id": "C_kwDOAAsO6NoAKGE4OWQwMTRhMjExMzg2ZjJiMGVhZDBkMzA5YTU4OGM2MjVkNDU1MTQ", "commit": {"author": {"name": "Krasimir Georgiev", "email": "krasimir@google.com", "date": "2022-07-12T15:36:28Z"}, "committer": {"name": "Krasimir Georgiev", "email": "krasimir@google.com", "date": "2022-07-12T16:00:52Z"}, "message": "llvm-wrapper: adapt for LLVM API change", "tree": {"sha": "65c02a3e9445a69ac4a91f9f36e013894d277c74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65c02a3e9445a69ac4a91f9f36e013894d277c74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a89d014a211386f2b0ead0d309a588c625d45514", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a89d014a211386f2b0ead0d309a588c625d45514", "html_url": "https://github.com/rust-lang/rust/commit/a89d014a211386f2b0ead0d309a588c625d45514", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a89d014a211386f2b0ead0d309a588c625d45514/comments", "author": {"login": "krasimirgg", "id": 29306214, "node_id": "MDQ6VXNlcjI5MzA2MjE0", "avatar_url": "https://avatars.githubusercontent.com/u/29306214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krasimirgg", "html_url": "https://github.com/krasimirgg", "followers_url": "https://api.github.com/users/krasimirgg/followers", "following_url": "https://api.github.com/users/krasimirgg/following{/other_user}", "gists_url": "https://api.github.com/users/krasimirgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/krasimirgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krasimirgg/subscriptions", "organizations_url": "https://api.github.com/users/krasimirgg/orgs", "repos_url": "https://api.github.com/users/krasimirgg/repos", "events_url": "https://api.github.com/users/krasimirgg/events{/privacy}", "received_events_url": "https://api.github.com/users/krasimirgg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "krasimirgg", "id": 29306214, "node_id": "MDQ6VXNlcjI5MzA2MjE0", "avatar_url": "https://avatars.githubusercontent.com/u/29306214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krasimirgg", "html_url": "https://github.com/krasimirgg", "followers_url": "https://api.github.com/users/krasimirgg/followers", "following_url": "https://api.github.com/users/krasimirgg/following{/other_user}", "gists_url": "https://api.github.com/users/krasimirgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/krasimirgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krasimirgg/subscriptions", "organizations_url": "https://api.github.com/users/krasimirgg/orgs", "repos_url": "https://api.github.com/users/krasimirgg/repos", "events_url": "https://api.github.com/users/krasimirgg/events{/privacy}", "received_events_url": "https://api.github.com/users/krasimirgg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c7b36d4db582cb47513a6c7176baaec1c3346ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c7b36d4db582cb47513a6c7176baaec1c3346ab", "html_url": "https://github.com/rust-lang/rust/commit/1c7b36d4db582cb47513a6c7176baaec1c3346ab"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "7ac3157e7a1de4bc28261ae0c672bb2ced5d8983", "filename": "compiler/rustc_llvm/llvm-wrapper/RustWrapper.cpp", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a89d014a211386f2b0ead0d309a588c625d45514/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/a89d014a211386f2b0ead0d309a588c625d45514/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp?ref=a89d014a211386f2b0ead0d309a588c625d45514", "patch": "@@ -411,8 +411,14 @@ LLVMRustInlineAsm(LLVMTypeRef Ty, char *AsmString, size_t AsmStringLen,\n \n extern \"C\" bool LLVMRustInlineAsmVerify(LLVMTypeRef Ty, char *Constraints,\n                                         size_t ConstraintsLen) {\n+#if LLVM_VERSION_LT(15, 0)\n   return InlineAsm::Verify(unwrap<FunctionType>(Ty),\n                            StringRef(Constraints, ConstraintsLen));\n+#else\n+  // llvm::Error converts to true if it is an error.\n+  return !llvm::errorToBool(InlineAsm::verify(\n+      unwrap<FunctionType>(Ty), StringRef(Constraints, ConstraintsLen)));\n+#endif\n }\n \n extern \"C\" void LLVMRustAppendModuleInlineAsm(LLVMModuleRef M, const char *Asm,"}]}