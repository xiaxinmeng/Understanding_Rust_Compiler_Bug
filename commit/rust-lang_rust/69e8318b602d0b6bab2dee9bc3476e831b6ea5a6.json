{"sha": "69e8318b602d0b6bab2dee9bc3476e831b6ea5a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5ZTgzMThiNjAyZDBiNmJhYjJkZWU5YmMzNDc2ZTgzMWI2ZWE1YTY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-23T18:30:33Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-23T18:30:33Z"}, "message": "de-obfuscate ptr comparison a bit", "tree": {"sha": "9229a7d7b2d4812ab139d8c4f15dc4cd2e1cc3fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9229a7d7b2d4812ab139d8c4f15dc4cd2e1cc3fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69e8318b602d0b6bab2dee9bc3476e831b6ea5a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69e8318b602d0b6bab2dee9bc3476e831b6ea5a6", "html_url": "https://github.com/rust-lang/rust/commit/69e8318b602d0b6bab2dee9bc3476e831b6ea5a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69e8318b602d0b6bab2dee9bc3476e831b6ea5a6/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4dc188a60eb19dc770db071a5e368e90b5a1fab3", "url": "https://api.github.com/repos/rust-lang/rust/commits/4dc188a60eb19dc770db071a5e368e90b5a1fab3", "html_url": "https://github.com/rust-lang/rust/commit/4dc188a60eb19dc770db071a5e368e90b5a1fab3"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "5d1f33a5709386a0d12227e3a85a6ff207d70834", "filename": "src/operator.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/69e8318b602d0b6bab2dee9bc3476e831b6ea5a6/src%2Foperator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69e8318b602d0b6bab2dee9bc3476e831b6ea5a6/src%2Foperator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foperator.rs?ref=69e8318b602d0b6bab2dee9bc3476e831b6ea5a6", "patch": "@@ -193,8 +193,8 @@ impl<'mir, 'tcx> EvalContextExt<'tcx> for super::MiriEvalContext<'mir, 'tcx> {\n                     // on read hardware this can easily happen. Thus for comparisons we require\n                     // both pointers to be live.\n                     if self.pointer_inbounds(left).is_ok() && self.pointer_inbounds(right).is_ok() {\n-                        // Two in-bounds pointers, we can compare across allocations.\n-                        left == right\n+                        // Two in-bounds pointers in different allocatons are different.\n+                        false\n                     } else {\n                         return err!(InvalidPointerMath);\n                     }"}]}