{"sha": "9df1dbe1aca8989d018ad85f66a1e84862c1032e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkZjFkYmUxYWNhODk4OWQwMThhZDg1ZjY2YTFlODQ4NjJjMTAzMmU=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-08-31T09:16:50Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-08-31T09:20:28Z"}, "message": "Use trim_tries to extract post comment over simple trim_matches", "tree": {"sha": "c2fd631e94b7a6de867c3352fd40beaa3c9a5a2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2fd631e94b7a6de867c3352fd40beaa3c9a5a2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9df1dbe1aca8989d018ad85f66a1e84862c1032e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9df1dbe1aca8989d018ad85f66a1e84862c1032e", "html_url": "https://github.com/rust-lang/rust/commit/9df1dbe1aca8989d018ad85f66a1e84862c1032e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9df1dbe1aca8989d018ad85f66a1e84862c1032e/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "612f1af7347a618d96d0700e161bdac5131f6c05", "url": "https://api.github.com/repos/rust-lang/rust/commits/612f1af7347a618d96d0700e161bdac5131f6c05", "html_url": "https://github.com/rust-lang/rust/commit/612f1af7347a618d96d0700e161bdac5131f6c05"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "f73f57a19a6ab6bb833e4de7dc430132621467e8", "filename": "src/chains.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9df1dbe1aca8989d018ad85f66a1e84862c1032e/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9df1dbe1aca8989d018ad85f66a1e84862c1032e/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=9df1dbe1aca8989d018ad85f66a1e84862c1032e", "patch": "@@ -288,9 +288,9 @@ impl Chain {\n                 return;\n             }\n             // HACK: Treat `?`s as separators.\n-            let trimmed_snippet = post_comment_snippet.trim_matches('?');\n-            let comment_end = get_comment_end(trimmed_snippet, \"?\", \"\", false);\n-            let maybe_post_comment = extract_post_comment(trimmed_snippet, comment_end, \"?\")\n+            let trimmed_snippet = trim_tries(post_comment_snippet);\n+            let comment_end = get_comment_end(&trimmed_snippet, \"?\", \"\", false);\n+            let maybe_post_comment = extract_post_comment(&trimmed_snippet, comment_end, \"?\")\n                 .and_then(|comment| {\n                     if comment.is_empty() {\n                         None"}]}