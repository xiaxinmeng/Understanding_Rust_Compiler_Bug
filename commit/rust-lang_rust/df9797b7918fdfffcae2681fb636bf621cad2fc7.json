{"sha": "df9797b7918fdfffcae2681fb636bf621cad2fc7", "node_id": "C_kwDOAAsO6NoAKGRmOTc5N2I3OTE4ZmRmZmZjYWUyNjgxZmI2MzZiZjYyMWNhZDJmYzc", "commit": {"author": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2022-03-11T19:51:48Z"}, "committer": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2022-03-11T19:52:14Z"}, "message": "Remove redundant slicing of whole ranges in `bootstrap`", "tree": {"sha": "d085fa606a876080debdb14f4b9a90f5856be59a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d085fa606a876080debdb14f4b9a90f5856be59a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df9797b7918fdfffcae2681fb636bf621cad2fc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df9797b7918fdfffcae2681fb636bf621cad2fc7", "html_url": "https://github.com/rust-lang/rust/commit/df9797b7918fdfffcae2681fb636bf621cad2fc7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df9797b7918fdfffcae2681fb636bf621cad2fc7/comments", "author": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af8604faddc44b27a59d1a719ff6ceca8bc145eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/af8604faddc44b27a59d1a719ff6ceca8bc145eb", "html_url": "https://github.com/rust-lang/rust/commit/af8604faddc44b27a59d1a719ff6ceca8bc145eb"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "aff2b6c3cbfdb684bf791c1a5b14db92c34fae04", "filename": "src/bootstrap/setup.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/df9797b7918fdfffcae2681fb636bf621cad2fc7/src%2Fbootstrap%2Fsetup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df9797b7918fdfffcae2681fb636bf621cad2fc7/src%2Fbootstrap%2Fsetup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fsetup.rs?ref=df9797b7918fdfffcae2681fb636bf621cad2fc7", "patch": "@@ -161,9 +161,9 @@ fn rustup_installed() -> bool {\n }\n \n fn stage_dir_exists(stage_path: &str) -> bool {\n-    match fs::create_dir(&stage_path[..]) {\n+    match fs::create_dir(&stage_path) {\n         Ok(_) => true,\n-        Err(_) => Path::new(&stage_path[..]).exists(),\n+        Err(_) => Path::new(&stage_path).exists(),\n     }\n }\n \n@@ -179,7 +179,7 @@ fn attempt_toolchain_link(stage_path: &str) {\n         return;\n     }\n \n-    if try_link_toolchain(&stage_path[..]) {\n+    if try_link_toolchain(&stage_path) {\n         println!(\n             \"Added `stage1` rustup toolchain; try `cargo +stage1 build` on a separate rust project to run a newly-built toolchain\"\n         );\n@@ -188,7 +188,7 @@ fn attempt_toolchain_link(stage_path: &str) {\n         println!(\n             \"To manually link stage 1 build to `stage1` toolchain, run:\\n\n             `rustup toolchain link stage1 {}`\",\n-            &stage_path[..]\n+            &stage_path\n         );\n     }\n }\n@@ -222,7 +222,7 @@ fn toolchain_is_linked() -> bool {\n fn try_link_toolchain(stage_path: &str) -> bool {\n     Command::new(\"rustup\")\n         .stdout(std::process::Stdio::null())\n-        .args(&[\"toolchain\", \"link\", \"stage1\", &stage_path[..]])\n+        .args(&[\"toolchain\", \"link\", \"stage1\", &stage_path])\n         .output()\n         .map_or(false, |output| output.status.success())\n }"}]}