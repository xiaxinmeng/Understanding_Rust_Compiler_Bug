{"sha": "ccef48b6c3a04b0104a68a947558994ea3e6a069", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjZWY0OGI2YzNhMDRiMDEwNGE2OGE5NDc1NTg5OTRlYTNlNmEwNjk=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-02-04T20:42:37Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-02-04T20:49:34Z"}, "message": "Make it possible to have multiple crate in a mock analysis fixture", "tree": {"sha": "3d6f67c95ace830d6a0b4e0c18f0cf97a60b27fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d6f67c95ace830d6a0b4e0c18f0cf97a60b27fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ccef48b6c3a04b0104a68a947558994ea3e6a069", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ccef48b6c3a04b0104a68a947558994ea3e6a069", "html_url": "https://github.com/rust-lang/rust/commit/ccef48b6c3a04b0104a68a947558994ea3e6a069", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ccef48b6c3a04b0104a68a947558994ea3e6a069/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c2fedc2cb5f086b1f6c2942de0e76427dfe9b00", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c2fedc2cb5f086b1f6c2942de0e76427dfe9b00", "html_url": "https://github.com/rust-lang/rust/commit/0c2fedc2cb5f086b1f6c2942de0e76427dfe9b00"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "834b3054157562b508ed7e7698c198cd2f4b8aab", "filename": "crates/ra_ide_api/src/mock_analysis.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ccef48b6c3a04b0104a68a947558994ea3e6a069/crates%2Fra_ide_api%2Fsrc%2Fmock_analysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccef48b6c3a04b0104a68a947558994ea3e6a069/crates%2Fra_ide_api%2Fsrc%2Fmock_analysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fmock_analysis.rs?ref=ccef48b6c3a04b0104a68a947558994ea3e6a069", "patch": "@@ -86,17 +86,25 @@ impl MockAnalysis {\n         let mut change = AnalysisChange::new();\n         change.add_root(source_root, true);\n         let mut crate_graph = CrateGraph::default();\n+        let mut root_crate = None;\n         for (i, (path, contents)) in self.files.into_iter().enumerate() {\n             assert!(path.starts_with('/'));\n             let path = RelativePathBuf::from_path(&path[1..]).unwrap();\n             let file_id = FileId(i as u32 + 1);\n             if path == \"/lib.rs\" || path == \"/main.rs\" {\n-                crate_graph.add_crate_root(file_id);\n+                root_crate = Some(crate_graph.add_crate_root(file_id));\n+            } else if path.ends_with(\"/lib.rs\") {\n+                let other_crate = crate_graph.add_crate_root(file_id);\n+                let crate_name = path.parent().unwrap().file_name().unwrap();\n+                if let Some(root_crate) = root_crate {\n+                    crate_graph\n+                        .add_dep(root_crate, crate_name.into(), other_crate)\n+                        .unwrap();\n+                }\n             }\n             change.add_file(source_root, file_id, path, Arc::new(contents));\n         }\n         change.set_crate_graph(crate_graph);\n-        // change.set_file_resolver(Arc::new(file_map));\n         host.apply_change(change);\n         host\n     }"}]}