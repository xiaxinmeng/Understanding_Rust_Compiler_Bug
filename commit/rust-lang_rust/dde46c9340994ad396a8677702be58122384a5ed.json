{"sha": "dde46c9340994ad396a8677702be58122384a5ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkZTQ2YzkzNDA5OTRhZDM5NmE4Njc3NzAyYmU1ODEyMjM4NGE1ZWQ=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2021-04-10T12:42:33Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2021-04-10T12:42:33Z"}, "message": "Replace complex conditional with pattern matching", "tree": {"sha": "5b3df68daa8c954534c731a7401bc02456d2d5ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b3df68daa8c954534c731a7401bc02456d2d5ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dde46c9340994ad396a8677702be58122384a5ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dde46c9340994ad396a8677702be58122384a5ed", "html_url": "https://github.com/rust-lang/rust/commit/dde46c9340994ad396a8677702be58122384a5ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dde46c9340994ad396a8677702be58122384a5ed/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1573d10325f286ffcbba290d27984ded9538a5c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/1573d10325f286ffcbba290d27984ded9538a5c3", "html_url": "https://github.com/rust-lang/rust/commit/1573d10325f286ffcbba290d27984ded9538a5c3"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "d68227545a683227791f66f85a4a3e52bdfb8e1e", "filename": "clippy_lints/src/tabs_in_doc_comments.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dde46c9340994ad396a8677702be58122384a5ed/clippy_lints%2Fsrc%2Ftabs_in_doc_comments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dde46c9340994ad396a8677702be58122384a5ed/clippy_lints%2Fsrc%2Ftabs_in_doc_comments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftabs_in_doc_comments.rs?ref=dde46c9340994ad396a8677702be58122384a5ed", "patch": "@@ -106,7 +106,7 @@ fn get_chunks_of_tabs(the_str: &str) -> Vec<(u32, u32)> {\n \n     let char_indices: Vec<_> = the_str.char_indices().collect();\n \n-    if char_indices.len() == 1 && char_indices.first().unwrap().1 == '\\t' {\n+    if let &[(_, '\\t')] = &char_indices.as_slice() {\n         return vec![(0, 1)];\n     }\n "}]}