{"sha": "0686daab4ec82a4127d317c01324d46c58ef47b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2ODZkYWFiNGVjODJhNDEyN2QzMTdjMDEzMjRkNDZjNThlZjQ3YjM=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-10T23:08:19Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-10T23:08:19Z"}, "message": "Unwrap singleton block expressions in const arguments", "tree": {"sha": "4aeb995e6f27d2a33038ff28687a4b5112a8726a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4aeb995e6f27d2a33038ff28687a4b5112a8726a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0686daab4ec82a4127d317c01324d46c58ef47b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0686daab4ec82a4127d317c01324d46c58ef47b3", "html_url": "https://github.com/rust-lang/rust/commit/0686daab4ec82a4127d317c01324d46c58ef47b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0686daab4ec82a4127d317c01324d46c58ef47b3/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cff1bdbd77d29a28a94ff9f5bf1e1c84e5bb6259", "url": "https://api.github.com/repos/rust-lang/rust/commits/cff1bdbd77d29a28a94ff9f5bf1e1c84e5bb6259", "html_url": "https://github.com/rust-lang/rust/commit/cff1bdbd77d29a28a94ff9f5bf1e1c84e5bb6259"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "da47ccf38a0263416dba53b6d62585b2d90a1955", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0686daab4ec82a4127d317c01324d46c58ef47b3/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0686daab4ec82a4127d317c01324d46c58ef47b3/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=0686daab4ec82a4127d317c01324d46c58ef47b3", "patch": "@@ -1902,7 +1902,18 @@ impl<'o, 'gcx: 'tcx, 'tcx> dyn AstConv<'gcx, 'tcx> + 'o {\n             ty,\n         };\n \n-        let expr = &tcx.hir().body(ast_const.body).value;\n+        let mut expr = &tcx.hir().body(ast_const.body).value;\n+\n+        // Unwrap a block, so that e.g. `{ P }` is recognised as a parameter. Const arguments\n+        // currently have to be wrapped in curly brackets, so it's necessary to special-case.\n+        if let ExprKind::Block(block, _) = &expr.node {\n+            if block.stmts.is_empty() {\n+                if let Some(trailing) = &block.expr {\n+                    expr = &trailing;\n+                }\n+            }\n+        }\n+\n         if let ExprKind::Path(ref qpath) = expr.node {\n             if let hir::QPath::Resolved(_, ref path) = qpath {\n                 if let Res::Def(DefKind::ConstParam, def_id) = path.res {"}]}