{"sha": "ad700abea4c6718628a4ceccccdad6a633f1dd9c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkNzAwYWJlYTRjNjcxODYyOGE0Y2VjY2NjZGFkNmE2MzNmMWRkOWM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-08-12T19:03:19Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-08-12T21:58:58Z"}, "message": "ty.rs: document/cleanup required_region_bounds a bit", "tree": {"sha": "3e5f50afa29fcb87f0b3bb7d570ff4e802b88cd3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e5f50afa29fcb87f0b3bb7d570ff4e802b88cd3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad700abea4c6718628a4ceccccdad6a633f1dd9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad700abea4c6718628a4ceccccdad6a633f1dd9c", "html_url": "https://github.com/rust-lang/rust/commit/ad700abea4c6718628a4ceccccdad6a633f1dd9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad700abea4c6718628a4ceccccdad6a633f1dd9c/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fda9b8396057426e86409fd75c69d896b05c372e", "url": "https://api.github.com/repos/rust-lang/rust/commits/fda9b8396057426e86409fd75c69d896b05c372e", "html_url": "https://github.com/rust-lang/rust/commit/fda9b8396057426e86409fd75c69d896b05c372e"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "49bf0e580b9e0f3398f7e41b791114377c506671", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ad700abea4c6718628a4ceccccdad6a633f1dd9c/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad700abea4c6718628a4ceccccdad6a633f1dd9c/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=ad700abea4c6718628a4ceccccdad6a633f1dd9c", "patch": "@@ -6233,13 +6233,18 @@ impl<'tcx> ctxt<'tcx> {\n     /// themselves. This should really be a unique type; `FreshTy(0)` is a\n     /// popular choice.\n     ///\n+    /// NB: in some cases, particularly around higher-ranked bounds,\n+    /// this function returns a kind of conservative approximation.\n+    /// That is, all regions returned by this function are definitely\n+    /// required, but there may be other region bounds that are not\n+    /// returned, as well as requirements like `for<'a> T: 'a`.\n+    ///\n     /// Requires that trait definitions have been processed so that we can\n     /// elaborate predicates and walk supertraits.\n     pub fn required_region_bounds(&self,\n                                   erased_self_ty: Ty<'tcx>,\n                                   predicates: Vec<ty::Predicate<'tcx>>)\n-                                  -> Vec<ty::Region>\n-    {\n+                                  -> Vec<ty::Region>    {\n         debug!(\"required_region_bounds(erased_self_ty={:?}, predicates={:?})\",\n                erased_self_ty,\n                predicates);\n@@ -6268,11 +6273,7 @@ impl<'tcx> ctxt<'tcx> {\n                         // construct such an object, but this seems\n                         // correct even if that code changes).\n                         if t == erased_self_ty && !r.has_escaping_regions() {\n-                            if r.has_escaping_regions() {\n-                                Some(ty::ReStatic)\n-                            } else {\n-                                Some(r)\n-                            }\n+                            Some(r)\n                         } else {\n                             None\n                         }"}]}