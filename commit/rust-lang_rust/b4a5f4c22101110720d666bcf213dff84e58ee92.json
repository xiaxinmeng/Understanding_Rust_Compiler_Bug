{"sha": "b4a5f4c22101110720d666bcf213dff84e58ee92", "node_id": "C_kwDOAAsO6NoAKGI0YTVmNGMyMjEwMTExMDcyMGQ2NjZiY2YyMTNkZmY4NGU1OGVlOTI", "commit": {"author": {"name": "Joshua Nelson", "email": "github@jyn.dev", "date": "2023-03-05T14:49:29Z"}, "committer": {"name": "Joshua Nelson", "email": "github@jyn.dev", "date": "2023-03-05T14:49:29Z"}, "message": "Make `x test tidy` less noisy\n\nBefore:\n```\nBuilding tool tidy (stage0)\n    Finished release [optimized + debuginfo] target(s) in 0.29s\nfmt check\nskip untracked path chrome_profiler.json during rustfmt invocations\nskip untracked path query_impl-default,args.mm_profdata during rustfmt invocations\nskip untracked path query_impl-llvm.txt during rustfmt invocations\nskip untracked path query_impl-mono_items.txt during rustfmt invocations\nskip untracked path query_impl-summarize.txt during rustfmt invocations\nskip untracked path rustc.svg during rustfmt invocations\nskip untracked path rustc_middle.mono_items.json during rustfmt invocations\nskip untracked path rustc_middle.mono_items.md during rustfmt invocations\nskip untracked path rustc_query_impl.mono_items-thread_local_attr.json during rustfmt invocations\nskip untracked path rustc_query_impl.mono_items-thread_local_macro.json during rustfmt invocations\nskip untracked path rustc_query_impl.mono_items.md during rustfmt invocations\ntidy check\nFound 505 error codes\nHighest error code: `E0793`\n* 397 features\nEnsuring the YAML anchors in the GitHub Actions config were expanded\nBuilding tool expand-yaml-anchors (stage0)\n    Finished release [optimized + debuginfo] target(s) in 0.14s\nBuild completed successfully in 0:00:54\n```\n\nAfter:\n```\nBuilding tool tidy (stage0)\n    Finished release [optimized + debuginfo] target(s) in 2.24s\nfmt check\ntidy check\nEnsuring the YAML anchors in the GitHub Actions config were expanded\nBuilding tool expand-yaml-anchors (stage0)\n    Finished release [optimized + debuginfo] target(s) in 0.14s\nBuild completed successfully in 0:00:04\n```", "tree": {"sha": "0a2b6c6b196b1158806044720db881142642fe16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a2b6c6b196b1158806044720db881142642fe16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4a5f4c22101110720d666bcf213dff84e58ee92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4a5f4c22101110720d666bcf213dff84e58ee92", "html_url": "https://github.com/rust-lang/rust/commit/b4a5f4c22101110720d666bcf213dff84e58ee92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4a5f4c22101110720d666bcf213dff84e58ee92/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35636f9459720513ca4ed19373a4a7c9e0ea3c46", "url": "https://api.github.com/repos/rust-lang/rust/commits/35636f9459720513ca4ed19373a4a7c9e0ea3c46", "html_url": "https://github.com/rust-lang/rust/commit/35636f9459720513ca4ed19373a4a7c9e0ea3c46"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "f7b5fc5656a723b5252cf40f64c6af3d5497818a", "filename": "src/bootstrap/format.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b4a5f4c22101110720d666bcf213dff84e58ee92/src%2Fbootstrap%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4a5f4c22101110720d666bcf213dff84e58ee92/src%2Fbootstrap%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fformat.rs?ref=b4a5f4c22101110720d666bcf213dff84e58ee92", "patch": "@@ -144,8 +144,10 @@ pub fn format(build: &Builder<'_>, check: bool, paths: &[PathBuf]) {\n             let untracked_paths = untracked_paths_output\n                 .lines()\n                 .filter(|entry| entry.starts_with(\"??\"))\n-                .map(|entry| {\n-                    entry.split(' ').nth(1).expect(\"every git status entry should list a path\")\n+                .filter_map(|entry| {\n+                    let path =\n+                        entry.split(' ').nth(1).expect(\"every git status entry should list a path\");\n+                    path.ends_with(\".rs\").then_some(path)\n                 });\n             for untracked_path in untracked_paths {\n                 println!(\"skip untracked path {} during rustfmt invocations\", untracked_path);"}, {"sha": "5dac780ced4cdf85fd05ceb0ac08f5116b299c5c", "filename": "src/tools/tidy/src/error_codes.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b4a5f4c22101110720d666bcf213dff84e58ee92/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4a5f4c22101110720d666bcf213dff84e58ee92/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes.rs?ref=b4a5f4c22101110720d666bcf213dff84e58ee92", "patch": "@@ -46,8 +46,10 @@ pub fn check(root_path: &Path, search_paths: &[&Path], verbose: bool, bad: &mut\n \n     // Stage 1: create list\n     let error_codes = extract_error_codes(root_path, &mut errors);\n-    println!(\"Found {} error codes\", error_codes.len());\n-    println!(\"Highest error code: `{}`\", error_codes.iter().max().unwrap());\n+    if verbose {\n+        println!(\"Found {} error codes\", error_codes.len());\n+        println!(\"Highest error code: `{}`\", error_codes.iter().max().unwrap());\n+    }\n \n     // Stage 2: check list has docs\n     let no_longer_emitted = check_error_codes_docs(root_path, &error_codes, &mut errors, verbose);"}, {"sha": "80dd5886f0867d9853d1c7cf8d53a394c8b0fd81", "filename": "src/tools/tidy/src/features.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b4a5f4c22101110720d666bcf213dff84e58ee92/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4a5f4c22101110720d666bcf213dff84e58ee92/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs?ref=b4a5f4c22101110720d666bcf213dff84e58ee92", "patch": "@@ -219,8 +219,6 @@ pub fn check(\n         for line in lines {\n             println!(\"* {line}\");\n         }\n-    } else {\n-        println!(\"* {} features\", features.len());\n     }\n \n     CollectedFeatures { lib: lib_features, lang: features }"}]}