{"sha": "b9762f8b8c5576fec873132876c4ea0f624e486c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5NzYyZjhiOGM1NTc2ZmVjODczMTMyODc2YzRlYTBmNjI0ZTQ4NmM=", "commit": {"author": {"name": "Panashe M. Fundira", "email": "fundirap@gmail.com", "date": "2016-08-08T20:37:44Z"}, "committer": {"name": "Panashe M. Fundira", "email": "fundirap@gmail.com", "date": "2016-08-11T14:01:51Z"}, "message": "Update E0033 to the new error format", "tree": {"sha": "6e93dcc05507a7ce9638e853fb16f10372adf77d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e93dcc05507a7ce9638e853fb16f10372adf77d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9762f8b8c5576fec873132876c4ea0f624e486c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQEcBAABCAAGBQJXrIVPAAoJEKvW6Q9Rv3S1lSYH/3Lo7zSWQsgSvoqm/eLzR9k4\nV6AAJFPQhPjsBvX61hQ7YnSuqQ/qXj8bxGl+3ZOQ8Ys0UO4qKJ0u6tJht/LPg+Je\nET5oCOJ1b8xGgnQvYQpOecqXDK3eeXLgInqo+wWLlQPvjKUbfJgJ1CGIBsSzL0Vg\ncxvWtvVSmqf988ez4Rj34lr5CglQ1+9Dca87T20n+6LKaZ+mZP/9JT0V5+KLx5nx\nKF+cZGoihOsDWWMwSyBfLtsBfwRlcvGq5vZkfxGSUXlHEIYD9erxoSj56I5Jyxzo\ni/YIAbBpFMBKPtgbz9CoSR1/D2LBmUEtYMGfV3eva6O3i0mXTJR77qNH74l6dr4=\n=1BL1\n-----END PGP SIGNATURE-----", "payload": "tree 6e93dcc05507a7ce9638e853fb16f10372adf77d\nparent 695b3d8279e17689b988e000203ba95ffeb4a91c\nauthor Panashe M. Fundira <fundirap@gmail.com> 1470688664 -0400\ncommitter Panashe M. Fundira <fundirap@gmail.com> 1470924111 -0400\n\nUpdate E0033 to the new error format\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9762f8b8c5576fec873132876c4ea0f624e486c", "html_url": "https://github.com/rust-lang/rust/commit/b9762f8b8c5576fec873132876c4ea0f624e486c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9762f8b8c5576fec873132876c4ea0f624e486c/comments", "author": {"login": "munyari", "id": 5841072, "node_id": "MDQ6VXNlcjU4NDEwNzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5841072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/munyari", "html_url": "https://github.com/munyari", "followers_url": "https://api.github.com/users/munyari/followers", "following_url": "https://api.github.com/users/munyari/following{/other_user}", "gists_url": "https://api.github.com/users/munyari/gists{/gist_id}", "starred_url": "https://api.github.com/users/munyari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/munyari/subscriptions", "organizations_url": "https://api.github.com/users/munyari/orgs", "repos_url": "https://api.github.com/users/munyari/repos", "events_url": "https://api.github.com/users/munyari/events{/privacy}", "received_events_url": "https://api.github.com/users/munyari/received_events", "type": "User", "site_admin": false}, "committer": {"login": "munyari", "id": 5841072, "node_id": "MDQ6VXNlcjU4NDEwNzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5841072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/munyari", "html_url": "https://github.com/munyari", "followers_url": "https://api.github.com/users/munyari/followers", "following_url": "https://api.github.com/users/munyari/following{/other_user}", "gists_url": "https://api.github.com/users/munyari/gists{/gist_id}", "starred_url": "https://api.github.com/users/munyari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/munyari/subscriptions", "organizations_url": "https://api.github.com/users/munyari/orgs", "repos_url": "https://api.github.com/users/munyari/repos", "events_url": "https://api.github.com/users/munyari/events{/privacy}", "received_events_url": "https://api.github.com/users/munyari/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "695b3d8279e17689b988e000203ba95ffeb4a91c", "url": "https://api.github.com/repos/rust-lang/rust/commits/695b3d8279e17689b988e000203ba95ffeb4a91c", "html_url": "https://github.com/rust-lang/rust/commit/695b3d8279e17689b988e000203ba95ffeb4a91c"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "db161379920e32f7c95d3acc94996e7bcdca1694", "filename": "src/librustc_typeck/check/_match.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b9762f8b8c5576fec873132876c4ea0f624e486c/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9762f8b8c5576fec873132876c4ea0f624e486c/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2F_match.rs?ref=b9762f8b8c5576fec873132876c4ea0f624e486c", "patch": "@@ -347,9 +347,11 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                 if let ty::TyTrait(..) = mt.ty.sty {\n                     // This is \"x = SomeTrait\" being reduced from\n                     // \"let &x = &SomeTrait\" or \"let box x = Box<SomeTrait>\", an error.\n-                    span_err!(self.tcx.sess, span, E0033,\n-                              \"type `{}` cannot be dereferenced\",\n-                              self.ty_to_string(expected));\n+                    let type_str = self.ty_to_string(expected);\n+                    struct_span_err!(self.tcx.sess, span, E0033,\n+                              \"type `{}` cannot be dereferenced\", type_str)\n+                        .span_label(span, &format!(\"type `{}` cannot be dereferenced\", type_str))\n+                        .emit();\n                     return false\n                 }\n             }"}, {"sha": "fe75b6b1f0f1bb0a8246a1bc673752f5eb685ce6", "filename": "src/test/compile-fail/E0033.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b9762f8b8c5576fec873132876c4ea0f624e486c/src%2Ftest%2Fcompile-fail%2FE0033.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9762f8b8c5576fec873132876c4ea0f624e486c/src%2Ftest%2Fcompile-fail%2FE0033.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0033.rs?ref=b9762f8b8c5576fec873132876c4ea0f624e486c", "patch": "@@ -15,5 +15,9 @@ trait SomeTrait {\n fn main() {\n     let trait_obj: &SomeTrait = SomeTrait; //~ ERROR E0425\n                                            //~^ ERROR E0038\n-    let &invalid = trait_obj; //~ ERROR E0033\n+                                           //~| method `foo` has no receiver\n+\n+    let &invalid = trait_obj;\n+    //~^ ERROR E0033\n+    //~| NOTE type `&SomeTrait` cannot be dereferenced\n }"}]}