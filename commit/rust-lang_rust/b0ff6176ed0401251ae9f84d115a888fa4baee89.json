{"sha": "b0ff6176ed0401251ae9f84d115a888fa4baee89", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwZmY2MTc2ZWQwNDAxMjUxYWU5Zjg0ZDExNWE4ODhmYTRiYWVlODk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-21T11:02:51Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-21T11:02:51Z"}, "message": "flip params", "tree": {"sha": "fc98be9d820e6b4b1801091f21c2ca76f5425f80", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc98be9d820e6b4b1801091f21c2ca76f5425f80"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b0ff6176ed0401251ae9f84d115a888fa4baee89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b0ff6176ed0401251ae9f84d115a888fa4baee89", "html_url": "https://github.com/rust-lang/rust/commit/b0ff6176ed0401251ae9f84d115a888fa4baee89", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b0ff6176ed0401251ae9f84d115a888fa4baee89/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74406ca8ea45df8b44cb38ecba4a5b561038c4a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/74406ca8ea45df8b44cb38ecba4a5b561038c4a0", "html_url": "https://github.com/rust-lang/rust/commit/74406ca8ea45df8b44cb38ecba4a5b561038c4a0"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "6d84558d1a761a1c083448e82eab242677ff05c5", "filename": "crates/ra_analysis/src/completion.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b0ff6176ed0401251ae9f84d115a888fa4baee89/crates%2Fra_analysis%2Fsrc%2Fcompletion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0ff6176ed0401251ae9f84d115a888fa4baee89/crates%2Fra_analysis%2Fsrc%2Fcompletion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion.rs?ref=b0ff6176ed0401251ae9f84d115a888fa4baee89", "patch": "@@ -41,15 +41,15 @@ pub(crate) fn completions(\n         reference_completion::completions(&mut res, db, &module, &file, name_ref)?;\n         // special case, `trait T { fn foo(i_am_a_name_ref) {} }`\n         if is_node::<ast::Param>(name_ref.syntax()) {\n-            param_completions(name_ref.syntax(), &mut res);\n+            param_completions(&mut res, name_ref.syntax());\n         }\n     }\n \n     // Otherwise, if this is a declaration, use heuristics to suggest a name.\n     if let Some(name) = find_node_at_offset::<ast::Name>(file.syntax(), position.offset) {\n         if is_node::<ast::Param>(name.syntax()) {\n             has_completions = true;\n-            param_completions(name.syntax(), &mut res);\n+            param_completions(&mut res, name.syntax());\n         }\n     }\n     let res = if has_completions { Some(res) } else { None };\n@@ -60,7 +60,7 @@ pub(crate) fn completions(\n /// functions in a file have a `spam: &mut Spam` parameter, a completion with\n /// `spam: &mut Spam` insert text/label and `spam` lookup string will be\n /// suggested.\n-fn param_completions(ctx: SyntaxNodeRef, acc: &mut Vec<CompletionItem>) {\n+fn param_completions(acc: &mut Vec<CompletionItem>, ctx: SyntaxNodeRef) {\n     let mut params = FxHashMap::default();\n     for node in ctx.ancestors() {\n         let _ = visitor_ctx(&mut params)"}]}