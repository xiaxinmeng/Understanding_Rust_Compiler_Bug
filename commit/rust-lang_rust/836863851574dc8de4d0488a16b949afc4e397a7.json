{"sha": "836863851574dc8de4d0488a16b949afc4e397a7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzNjg2Mzg1MTU3NGRjOGRlNGQwNDg4YTE2Yjk0OWFmYzRlMzk3YTc=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2019-02-19T17:13:34Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2019-02-20T03:59:04Z"}, "message": "Rollup merge of #58546 - taiki-e:librustc_codegen_llvm-2018, r=Centril\n\nlibrustc_codegen_llvm => 2018\n\nTransitions `librustc_codegen_llvm` to Rust 2018; cc #58099\n\nr? @Centril", "tree": {"sha": "77a44432794f062b739e847dae0166e5c897a0d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77a44432794f062b739e847dae0166e5c897a0d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/836863851574dc8de4d0488a16b949afc4e397a7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlxs0IgACgkQ/vbIBR0O\nATwheA//eM/39ukgQoON8YFd5KDmWzY7dJRGuYoYZBaFPJlj6aiEkcAVMf3NEySU\ngUvUk4P/miZUdzMAiE9z7VFs9cojvCSadWKtNttrirTiqNwyx8/MIEfQA72AsPSv\nVQvVnsI6IRjTVHcdyrbijGiItii2H+LZVOWdz1JDichM88UqvczhM03+MCys0R9K\ngu10LKfjvnvL1zaHkDeTib268wj4f8MljECAWxyRPg67zOlnDbcMpCzs6YPPfkFw\nmzAFst6ljvP2En6/T+V3pVjCrh6Y57iIJM/IwNRM+UKEZ7U+ykXIPYavS0IlhXLV\nF/eq5ggVyVRERSGjg/Od0fp3RAZMnAEG2px6KNKClgH88qMcZj6rvIBMgx6jF9uw\n9hJkI769EaQ/FlXoENZHK6S1ajOWlCu+fGEcH1SpJPQrwPN2uNDnhAZpVoFWKNTr\nur7V3Bvh0f+Qkvrg1tAWiHDAFgxrlSH5KXYkQ3Hrpgk0xmOvwFlwdRt7xBWLZfOz\n9zqCK0d2V8nIuijRS9a35JZ3HGYWi9LGVkjnsDsxDv8OJZEPn05Ttro6DMyp6fi6\n1d/ZJ51pALJIAjIcXJWl5sLI4CFwAABDfqxzGJ6KCtucbf2Gk9nANzhw4p0Jv+ty\nIDz4tK5DyQgsEGidadsXObavzH5Mogus+Rm/G623GSMbqTl8lhc=\n=Re2d\n-----END PGP SIGNATURE-----", "payload": "tree 77a44432794f062b739e847dae0166e5c897a0d5\nparent fd18e3f35ee217cee03c421382468c6ac60a0080\nparent 1b7ca961d9b971a0d5833143ea0c14ac64bf2303\nauthor kennytm <kennytm@gmail.com> 1550596414 +0800\ncommitter kennytm <kennytm@gmail.com> 1550635144 +0800\n\nRollup merge of #58546 - taiki-e:librustc_codegen_llvm-2018, r=Centril\n\nlibrustc_codegen_llvm => 2018\n\nTransitions `librustc_codegen_llvm` to Rust 2018; cc #58099\n\nr? @Centril\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/836863851574dc8de4d0488a16b949afc4e397a7", "html_url": "https://github.com/rust-lang/rust/commit/836863851574dc8de4d0488a16b949afc4e397a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/836863851574dc8de4d0488a16b949afc4e397a7/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd18e3f35ee217cee03c421382468c6ac60a0080", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd18e3f35ee217cee03c421382468c6ac60a0080", "html_url": "https://github.com/rust-lang/rust/commit/fd18e3f35ee217cee03c421382468c6ac60a0080"}, {"sha": "1b7ca961d9b971a0d5833143ea0c14ac64bf2303", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b7ca961d9b971a0d5833143ea0c14ac64bf2303", "html_url": "https://github.com/rust-lang/rust/commit/1b7ca961d9b971a0d5833143ea0c14ac64bf2303"}], "stats": {"total": 389, "additions": 190, "deletions": 199}, "files": [{"sha": "841cf98164eb4cbe3a0866b11ee45d9562a84bae", "filename": "src/librustc_codegen_llvm/Cargo.toml", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2FCargo.toml?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -2,6 +2,7 @@\n authors = [\"The Rust Project Developers\"]\n name = \"rustc_codegen_llvm\"\n version = \"0.0.0\"\n+edition = \"2018\"\n \n [lib]\n name = \"rustc_codegen_llvm\"\n@@ -10,7 +11,7 @@ crate-type = [\"dylib\"]\n test = false\n \n [dependencies]\n-cc = \"1.0.1\"\n+cc = \"1.0.1\" # Used to locate MSVC\n num_cpus = \"1.0\"\n rustc-demangle = \"0.1.4\"\n rustc_llvm = { path = \"../librustc_llvm\" }"}, {"sha": "992149f7a47b50e8abc1048d71225dd4c71d9b31", "filename": "src/librustc_codegen_llvm/abi.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fabi.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -1,12 +1,12 @@\n-use llvm::{self, AttributePlace};\n+use crate::llvm::{self, AttributePlace};\n+use crate::builder::Builder;\n+use crate::context::CodegenCx;\n+use crate::type_::Type;\n+use crate::type_of::{LayoutLlvmExt, PointerKind};\n+use crate::value::Value;\n use rustc_codegen_ssa::MemFlags;\n-use builder::Builder;\n-use context::CodegenCx;\n use rustc_codegen_ssa::mir::place::PlaceRef;\n use rustc_codegen_ssa::mir::operand::OperandValue;\n-use type_::Type;\n-use type_of::{LayoutLlvmExt, PointerKind};\n-use value::Value;\n use rustc_target::abi::call::ArgType;\n \n use rustc_codegen_ssa::traits::*;"}, {"sha": "7430cd3f70961ef223f9037dc6d4604b19d0a15d", "filename": "src/librustc_codegen_llvm/allocator.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fallocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fallocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fallocator.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -1,13 +1,13 @@\n use std::ffi::CString;\n \n-use attributes;\n+use crate::attributes;\n use libc::c_uint;\n use rustc::middle::allocator::AllocatorKind;\n use rustc::ty::TyCtxt;\n use rustc_allocator::{ALLOCATOR_METHODS, AllocatorTy};\n \n-use ModuleLlvm;\n-use llvm::{self, False, True};\n+use crate::ModuleLlvm;\n+use crate::llvm::{self, False, True};\n \n pub(crate) unsafe fn codegen(tcx: TyCtxt, mods: &ModuleLlvm, kind: AllocatorKind) {\n     let llcx = &*mods.llcx;"}, {"sha": "4427308f4155d303753c13fcd7dd3207b2d6b300", "filename": "src/librustc_codegen_llvm/asm.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fasm.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -1,8 +1,8 @@\n-use llvm;\n-use context::CodegenCx;\n-use type_of::LayoutLlvmExt;\n-use builder::Builder;\n-use value::Value;\n+use crate::llvm;\n+use crate::context::CodegenCx;\n+use crate::type_of::LayoutLlvmExt;\n+use crate::builder::Builder;\n+use crate::value::Value;\n \n use rustc::hir;\n use rustc_codegen_ssa::traits::*;"}, {"sha": "827ebff10f51c1030ce89abe85360af917c6f176", "filename": "src/librustc_codegen_llvm/attributes.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fattributes.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -15,15 +15,15 @@ use rustc_data_structures::fx::FxHashMap;\n use rustc_target::spec::PanicStrategy;\n use rustc_codegen_ssa::traits::*;\n \n-use abi::Abi;\n-use attributes;\n-use llvm::{self, Attribute};\n-use llvm::AttributePlace::Function;\n-use llvm_util;\n+use crate::abi::Abi;\n+use crate::attributes;\n+use crate::llvm::{self, Attribute};\n+use crate::llvm::AttributePlace::Function;\n+use crate::llvm_util;\n pub use syntax::attr::{self, InlineAttr, OptimizeAttr};\n \n-use context::CodegenCx;\n-use value::Value;\n+use crate::context::CodegenCx;\n+use crate::value::Value;\n \n /// Mark LLVM function to use provided inline heuristic.\n #[inline]"}, {"sha": "1c090f14469659799ea636df21ea83ebc73fb5b1", "filename": "src/librustc_codegen_llvm/back/archive.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fback%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fback%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Farchive.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -7,12 +7,11 @@ use std::path::{Path, PathBuf};\n use std::ptr;\n use std::str;\n \n-use back::bytecode::RLIB_BYTECODE_EXTENSION;\n+use crate::back::bytecode::RLIB_BYTECODE_EXTENSION;\n+use crate::llvm::archive_ro::{ArchiveRO, Child};\n+use crate::llvm::{self, ArchiveKind};\n+use crate::metadata::METADATA_FILENAME;\n use rustc_codegen_ssa::back::archive::find_library;\n-use libc;\n-use llvm::archive_ro::{ArchiveRO, Child};\n-use llvm::{self, ArchiveKind};\n-use metadata::METADATA_FILENAME;\n use rustc::session::Session;\n \n pub struct ArchiveConfig<'a> {"}, {"sha": "a3b34485715a75cc5431d3f10c0205dddee55738", "filename": "src/librustc_codegen_llvm/back/link.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Flink.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -1,13 +1,15 @@\n-use back::wasm;\n use super::archive::{ArchiveBuilder, ArchiveConfig};\n use super::bytecode::RLIB_BYTECODE_EXTENSION;\n+use super::rpath::RPathConfig;\n+use super::rpath;\n+use crate::back::wasm;\n+use crate::metadata::METADATA_FILENAME;\n+use crate::context::get_reloc_model;\n+use crate::llvm;\n use rustc_codegen_ssa::back::linker::Linker;\n use rustc_codegen_ssa::back::link::{remove, ignored_for_lto, each_linked_rlib, linker_and_flavor,\n     get_linker};\n use rustc_codegen_ssa::back::command::Command;\n-use super::rpath::RPathConfig;\n-use super::rpath;\n-use metadata::METADATA_FILENAME;\n use rustc::session::config::{self, DebugInfo, OutputFilenames, OutputType, PrintRequest};\n use rustc::session::config::{RUST_CGU_EXT, Lto, Sanitizer};\n use rustc::session::filesearch;\n@@ -22,8 +24,6 @@ use rustc::hir::def_id::CrateNum;\n use tempfile::{Builder as TempFileBuilder, TempDir};\n use rustc_target::spec::{PanicStrategy, RelroLevel, LinkerFlavor};\n use rustc_data_structures::fx::FxHashSet;\n-use context::get_reloc_model;\n-use llvm;\n \n use std::ascii;\n use std::char;\n@@ -523,7 +523,7 @@ fn link_natively(sess: &Session,\n     }\n \n     {\n-        let target_cpu = ::llvm_util::target_cpu(sess);\n+        let target_cpu = crate::llvm_util::target_cpu(sess);\n         let mut linker = codegen_results.linker_info.to_linker(cmd, &sess, flavor, target_cpu);\n         link_args(&mut *linker, flavor, sess, crate_type, tmpdir,\n                   out_filename, codegen_results);"}, {"sha": "944569c8b744bad4cf1081a822dabe5972780d32", "filename": "src/librustc_codegen_llvm/back/lto.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -1,25 +1,24 @@\n-use back::bytecode::{DecodedBytecode, RLIB_BYTECODE_EXTENSION};\n+use crate::back::bytecode::{DecodedBytecode, RLIB_BYTECODE_EXTENSION};\n+use crate::back::write::{self, DiagnosticHandlers, with_llvm_pmb, save_temp_bitcode,\n+    to_llvm_opt_settings};\n+use crate::llvm::archive_ro::ArchiveRO;\n+use crate::llvm::{self, True, False};\n+use crate::time_graph::Timeline;\n+use crate::{ModuleLlvm, LlvmCodegenBackend};\n use rustc_codegen_ssa::back::symbol_export;\n use rustc_codegen_ssa::back::write::{ModuleConfig, CodegenContext, FatLTOInput};\n use rustc_codegen_ssa::back::lto::{SerializedModule, LtoModuleCodegen, ThinShared, ThinModule};\n use rustc_codegen_ssa::traits::*;\n-use back::write::{self, DiagnosticHandlers, with_llvm_pmb, save_temp_bitcode, to_llvm_opt_settings};\n use errors::{FatalError, Handler};\n-use llvm::archive_ro::ArchiveRO;\n-use llvm::{self, True, False};\n use rustc::dep_graph::WorkProduct;\n use rustc::dep_graph::cgu_reuse_tracker::CguReuse;\n use rustc::hir::def_id::LOCAL_CRATE;\n use rustc::middle::exported_symbols::SymbolExportLevel;\n use rustc::session::config::{self, Lto};\n use rustc::util::common::time_ext;\n use rustc_data_structures::fx::FxHashMap;\n-use time_graph::Timeline;\n-use {ModuleLlvm, LlvmCodegenBackend};\n use rustc_codegen_ssa::{ModuleCodegen, ModuleKind};\n \n-use libc;\n-\n use std::ffi::{CStr, CString};\n use std::ptr;\n use std::slice;"}, {"sha": "1b16080515235fdc85a5bd784749a5bed5aa6e6b", "filename": "src/librustc_codegen_llvm/back/write.rs", "status": "modified", "additions": 14, "deletions": 15, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -1,28 +1,27 @@\n-use attributes;\n-use back::bytecode::{self, RLIB_BYTECODE_EXTENSION};\n-use back::lto::ThinBuffer;\n+use crate::attributes;\n+use crate::back::bytecode::{self, RLIB_BYTECODE_EXTENSION};\n+use crate::back::lto::ThinBuffer;\n+use crate::base;\n+use crate::consts;\n+use crate::time_graph::Timeline;\n+use crate::llvm::{self, DiagnosticInfo, PassManager, SMDiagnostic};\n+use crate::llvm_util;\n+use crate::ModuleLlvm;\n+use crate::type_::Type;\n+use crate::context::{is_pie_binary, get_reloc_model};\n+use crate::common;\n+use crate::LlvmCodegenBackend;\n use rustc_codegen_ssa::back::write::{CodegenContext, ModuleConfig, run_assembler};\n use rustc_codegen_ssa::traits::*;\n-use base;\n-use consts;\n use rustc::hir::def_id::LOCAL_CRATE;\n use rustc::session::config::{self, OutputType, Passes, Lto};\n use rustc::session::Session;\n use rustc::ty::TyCtxt;\n-use time_graph::Timeline;\n-use llvm::{self, DiagnosticInfo, PassManager, SMDiagnostic};\n-use llvm_util;\n-use ModuleLlvm;\n use rustc_codegen_ssa::{ModuleCodegen, CompiledModule};\n use rustc::util::common::time_ext;\n use rustc_fs_util::{path_to_c_string, link_or_copy};\n use rustc_data_structures::small_c_str::SmallCStr;\n-use errors::{self, Handler, FatalError};\n-use type_::Type;\n-use context::{is_pie_binary, get_reloc_model};\n-use common;\n-use LlvmCodegenBackend;\n-use rustc_demangle;\n+use errors::{Handler, FatalError};\n \n use std::ffi::{CString, CStr};\n use std::fs;"}, {"sha": "33531bb69485b275daa40bc5d6a186e9d18538e8", "filename": "src/librustc_codegen_llvm/base.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fbase.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -18,18 +18,18 @@ use rustc_codegen_ssa::{ModuleCodegen, ModuleKind};\n use rustc_codegen_ssa::base::maybe_create_entry_wrapper;\n use super::LlvmCodegenBackend;\n \n-use llvm;\n-use metadata;\n+use crate::llvm;\n+use crate::metadata;\n+use crate::builder::Builder;\n+use crate::common;\n+use crate::context::CodegenCx;\n+use crate::monomorphize::partitioning::CodegenUnitExt;\n use rustc::dep_graph;\n use rustc::mir::mono::{Linkage, Visibility, Stats};\n use rustc::middle::cstore::{EncodedMetadata};\n use rustc::ty::TyCtxt;\n use rustc::middle::exported_symbols;\n use rustc::session::config::{self, DebugInfo};\n-use builder::Builder;\n-use common;\n-use context::CodegenCx;\n-use monomorphize::partitioning::CodegenUnitExt;\n use rustc_codegen_ssa::mono_item::MonoItemExt;\n use rustc_data_structures::small_c_str::SmallCStr;\n \n@@ -41,7 +41,7 @@ use std::time::Instant;\n use syntax_pos::symbol::InternedString;\n use rustc::hir::CodegenFnAttrs;\n \n-use value::Value;\n+use crate::value::Value;\n \n \n pub fn write_metadata<'a, 'gcx>("}, {"sha": "39c8f8a09400b07ec636853e9d27f3b42263312c", "filename": "src/librustc_codegen_llvm/builder.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fbuilder.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -1,20 +1,19 @@\n-use llvm::{AtomicRmwBinOp, AtomicOrdering, SynchronizationScope, AsmDialect};\n-use llvm::{self, False, BasicBlock};\n+use crate::llvm::{AtomicRmwBinOp, AtomicOrdering, SynchronizationScope, AsmDialect};\n+use crate::llvm::{self, False, BasicBlock};\n+use crate::common::Funclet;\n+use crate::context::CodegenCx;\n+use crate::type_::Type;\n+use crate::type_of::LayoutLlvmExt;\n+use crate::value::Value;\n use rustc_codegen_ssa::common::{IntPredicate, TypeKind, RealPredicate};\n-use rustc_codegen_ssa::{self, MemFlags};\n-use common::Funclet;\n-use context::CodegenCx;\n-use type_::Type;\n-use type_of::LayoutLlvmExt;\n-use value::Value;\n+use rustc_codegen_ssa::MemFlags;\n use libc::{c_uint, c_char};\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc::ty::layout::{self, Align, Size, TyLayout};\n use rustc::hir::def_id::DefId;\n use rustc::session::config;\n use rustc_data_structures::small_c_str::SmallCStr;\n use rustc_codegen_ssa::traits::*;\n-use syntax;\n use rustc_codegen_ssa::base::to_immediate;\n use rustc_codegen_ssa::mir::operand::{OperandValue, OperandRef};\n use rustc_codegen_ssa::mir::place::PlaceRef;"}, {"sha": "43a5767e5c68d4fddfdbfbbac30a16954f3f168c", "filename": "src/librustc_codegen_llvm/callee.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcallee.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -4,11 +4,11 @@\n //! and methods are represented as just a fn ptr and not a full\n //! closure.\n \n-use attributes;\n-use llvm;\n-use monomorphize::Instance;\n-use context::CodegenCx;\n-use value::Value;\n+use crate::attributes;\n+use crate::llvm;\n+use crate::monomorphize::Instance;\n+use crate::context::CodegenCx;\n+use crate::value::Value;\n use rustc_codegen_ssa::traits::*;\n \n use rustc::ty::TypeFoldable;"}, {"sha": "4bd036ea3b17a095c54637cd34b38a9f3451156a", "filename": "src/librustc_codegen_llvm/common.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcommon.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -2,25 +2,25 @@\n \n //! Code that is useful in various codegen modules.\n \n-use llvm::{self, True, False, Bool, BasicBlock, OperandBundleDef};\n-use abi;\n-use consts;\n-use type_::Type;\n-use type_of::LayoutLlvmExt;\n-use value::Value;\n+use crate::llvm::{self, True, False, Bool, BasicBlock, OperandBundleDef};\n+use crate::abi;\n+use crate::consts;\n+use crate::type_::Type;\n+use crate::type_of::LayoutLlvmExt;\n+use crate::value::Value;\n use rustc_codegen_ssa::traits::*;\n \n+use crate::consts::const_alloc_to_llvm;\n use rustc::ty::layout::{HasDataLayout, LayoutOf, self, TyLayout, Size};\n use rustc::mir::interpret::{Scalar, AllocKind, Allocation};\n-use consts::const_alloc_to_llvm;\n use rustc_codegen_ssa::mir::place::PlaceRef;\n \n use libc::{c_uint, c_char};\n \n use syntax::symbol::LocalInternedString;\n use syntax::ast::Mutability;\n \n-pub use context::CodegenCx;\n+pub use crate::context::CodegenCx;\n \n /*\n * A note on nomenclature of linking: \"extern\", \"foreign\", and \"upcall\"."}, {"sha": "6232d44df5e4e85c6ab3492309d8ac3ff439eadb", "filename": "src/librustc_codegen_llvm/consts.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fconsts.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -1,20 +1,20 @@\n+use crate::llvm::{self, SetUnnamedAddr, True};\n+use crate::debuginfo;\n+use crate::monomorphize::MonoItem;\n+use crate::common::CodegenCx;\n+use crate::monomorphize::Instance;\n+use crate::base;\n+use crate::type_::Type;\n+use crate::type_of::LayoutLlvmExt;\n+use crate::value::Value;\n use libc::c_uint;\n-use llvm::{self, SetUnnamedAddr, True};\n use rustc::hir::def_id::DefId;\n use rustc::mir::interpret::{ConstValue, Allocation, read_target_uint,\n     Pointer, ErrorHandled, GlobalId};\n use rustc::hir::Node;\n-use debuginfo;\n-use monomorphize::MonoItem;\n-use common::CodegenCx;\n-use monomorphize::Instance;\n use syntax_pos::Span;\n use rustc_target::abi::HasDataLayout;\n use syntax_pos::symbol::LocalInternedString;\n-use base;\n-use type_::Type;\n-use type_of::LayoutLlvmExt;\n-use value::Value;\n use rustc::ty::{self, Ty};\n use rustc_codegen_ssa::traits::*;\n "}, {"sha": "d9c4d22b41100df23d0bd05df15026ffd5f7953d", "filename": "src/librustc_codegen_llvm/context.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcontext.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -1,14 +1,14 @@\n-use attributes;\n-use llvm;\n+use crate::attributes;\n+use crate::llvm;\n+use crate::debuginfo;\n+use crate::monomorphize::Instance;\n+use crate::value::Value;\n use rustc::dep_graph::DepGraphSafe;\n use rustc::hir;\n-use debuginfo;\n-use monomorphize::Instance;\n-use value::Value;\n \n-use monomorphize::partitioning::CodegenUnit;\n-use type_::Type;\n-use type_of::PointeeInfo;\n+use crate::monomorphize::partitioning::CodegenUnit;\n+use crate::type_::Type;\n+use crate::type_of::PointeeInfo;\n use rustc_codegen_ssa::traits::*;\n use libc::c_uint;\n \n@@ -23,15 +23,15 @@ use rustc::util::nodemap::FxHashMap;\n use rustc_target::spec::{HasTargetSpec, Target};\n use rustc_codegen_ssa::callee::resolve_and_get_fn;\n use rustc_codegen_ssa::base::wants_msvc_seh;\n-use callee::get_fn;\n+use crate::callee::get_fn;\n \n use std::ffi::CStr;\n use std::cell::{Cell, RefCell};\n use std::iter;\n use std::str;\n use std::sync::Arc;\n use syntax::symbol::LocalInternedString;\n-use abi::Abi;\n+use crate::abi::Abi;\n \n /// There is one `CodegenCx` per compilation unit. Each one has its own LLVM\n /// `llvm::Context` so that several compilation units may be optimized in parallel.\n@@ -103,7 +103,7 @@ pub fn get_reloc_model(sess: &Session) -> llvm::RelocMode {\n         None => &sess.target.target.options.relocation_model[..],\n     };\n \n-    match ::back::write::RELOC_MODEL_ARGS.iter().find(\n+    match crate::back::write::RELOC_MODEL_ARGS.iter().find(\n         |&&arg| arg.0 == reloc_model_arg) {\n         Some(x) => x.1,\n         _ => {\n@@ -121,7 +121,7 @@ fn get_tls_model(sess: &Session) -> llvm::ThreadLocalMode {\n         None => &sess.target.target.options.tls_model[..],\n     };\n \n-    match ::back::write::TLS_MODEL_ARGS.iter().find(\n+    match crate::back::write::TLS_MODEL_ARGS.iter().find(\n         |&&arg| arg.0 == tls_model_arg) {\n         Some(x) => x.1,\n         _ => {\n@@ -154,7 +154,7 @@ pub unsafe fn create_module(\n \n     // Ensure the data-layout values hardcoded remain the defaults.\n     if sess.target.target.options.is_builtin {\n-        let tm = ::back::write::create_target_machine(tcx, false);\n+        let tm = crate::back::write::create_target_machine(tcx, false);\n         llvm::LLVMRustSetDataLayoutFromTargetMachine(llmod, tm);\n         llvm::LLVMRustDisposeTargetMachine(tm);\n \n@@ -212,7 +212,7 @@ pub unsafe fn create_module(\n impl<'ll, 'tcx> CodegenCx<'ll, 'tcx> {\n     crate fn new(tcx: TyCtxt<'ll, 'tcx, 'tcx>,\n                  codegen_unit: Arc<CodegenUnit<'tcx>>,\n-                 llvm_module: &'ll ::ModuleLlvm)\n+                 llvm_module: &'ll crate::ModuleLlvm)\n                  -> Self {\n         // An interesting part of Windows which MSVC forces our hand on (and\n         // apparently MinGW didn't) is the usage of `dllimport` and `dllexport`\n@@ -377,7 +377,7 @@ impl MiscMethods<'tcx> for CodegenCx<'ll, 'tcx> {\n     // Returns a Value of the \"eh_unwind_resume\" lang item if one is defined,\n     // otherwise declares it as an external function.\n     fn eh_unwind_resume(&self) -> &'ll Value {\n-        use attributes;\n+        use crate::attributes;\n         let unwresume = &self.eh_unwind_resume;\n         if let Some(llfn) = unwresume.get() {\n             return llfn;"}, {"sha": "3ba05bf1b5c917f5a92d32bf88545c6330ead293", "filename": "src/librustc_codegen_llvm/debuginfo/create_scope_map.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fcreate_scope_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fcreate_scope_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fcreate_scope_map.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -2,9 +2,9 @@ use rustc_codegen_ssa::debuginfo::{FunctionDebugContext, FunctionDebugContextDat\n use super::metadata::file_metadata;\n use super::utils::{DIB, span_start};\n \n-use llvm;\n-use llvm::debuginfo::{DIScope, DISubprogram};\n-use common::CodegenCx;\n+use crate::llvm;\n+use crate::llvm::debuginfo::{DIScope, DISubprogram};\n+use crate::common::CodegenCx;\n use rustc::mir::{Mir, SourceScope};\n \n use libc::c_uint;"}, {"sha": "2555c92fb7c32fc0014b8a37f90bf42f786830a4", "filename": "src/librustc_codegen_llvm/debuginfo/gdb.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fgdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fgdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fgdb.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -1,11 +1,11 @@\n // .debug_gdb_scripts binary section.\n \n-use llvm;\n+use crate::llvm;\n \n-use common::CodegenCx;\n-use builder::Builder;\n+use crate::common::CodegenCx;\n+use crate::builder::Builder;\n+use crate::value::Value;\n use rustc::session::config::DebugInfo;\n-use value::Value;\n use rustc_codegen_ssa::traits::*;\n \n use syntax::attr;"}, {"sha": "da9ff54b0626c0816d9b9e873618bfbdc5ca7521", "filename": "src/librustc_codegen_llvm/debuginfo/metadata.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -7,23 +7,23 @@ use super::utils::{debug_context, DIB, span_start,\n use super::namespace::mangled_name_of_instance;\n use super::type_names::compute_debuginfo_type_name;\n use super::{CrateDebugContext};\n+use crate::abi;\n+use crate::value::Value;\n use rustc_codegen_ssa::traits::*;\n-use abi;\n-use value::Value;\n \n-use llvm;\n-use llvm::debuginfo::{DIArray, DIType, DIFile, DIScope, DIDescriptor,\n+use crate::llvm;\n+use crate::llvm::debuginfo::{DIArray, DIType, DIFile, DIScope, DIDescriptor,\n                       DICompositeType, DILexicalBlock, DIFlags, DebugEmissionKind};\n-use llvm_util;\n+use crate::llvm_util;\n \n+use crate::common::CodegenCx;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc::hir::CodegenFnAttrFlags;\n use rustc::hir::def::CtorKind;\n use rustc::hir::def_id::{DefId, CrateNum, LOCAL_CRATE};\n use rustc::ich::NodeIdHashingMode;\n use rustc_data_structures::fingerprint::Fingerprint;\n use rustc::ty::Instance;\n-use common::CodegenCx;\n use rustc::ty::{self, AdtKind, ParamEnv, Ty, TyCtxt};\n use rustc::ty::layout::{self, Align, Integer, IntegerExt, LayoutOf,\n                         PrimitiveExt, Size, TyLayout};"}, {"sha": "664ca2533878d1e7bb3e886df4ae7f969ea52561", "filename": "src/librustc_codegen_llvm/debuginfo/mod.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -10,24 +10,24 @@ use self::type_names::compute_debuginfo_type_name;\n use self::metadata::{type_metadata, file_metadata, TypeMap};\n use self::source_loc::InternalDebugLocation::{self, UnknownLocation};\n \n-use llvm;\n-use llvm::debuginfo::{DIFile, DIType, DIScope, DIBuilder, DISubprogram, DIArray, DIFlags,\n+use crate::llvm;\n+use crate::llvm::debuginfo::{DIFile, DIType, DIScope, DIBuilder, DISubprogram, DIArray, DIFlags,\n     DISPFlags, DILexicalBlock};\n use rustc::hir::CodegenFnAttrFlags;\n use rustc::hir::def_id::{DefId, CrateNum, LOCAL_CRATE};\n use rustc::ty::subst::{Substs, UnpackedKind};\n \n-use abi::Abi;\n-use common::CodegenCx;\n-use builder::Builder;\n-use monomorphize::Instance;\n+use crate::abi::Abi;\n+use crate::common::CodegenCx;\n+use crate::builder::Builder;\n+use crate::monomorphize::Instance;\n+use crate::value::Value;\n use rustc::ty::{self, ParamEnv, Ty, InstanceDef};\n use rustc::mir;\n use rustc::session::config::{self, DebugInfo};\n use rustc::util::nodemap::{DefIdMap, FxHashMap, FxHashSet};\n use rustc_data_structures::small_c_str::SmallCStr;\n use rustc_data_structures::indexed_vec::IndexVec;\n-use value::Value;\n use rustc_codegen_ssa::debuginfo::{FunctionDebugContext, MirDebugScope, VariableAccess,\n     VariableKind, FunctionDebugContextData};\n "}, {"sha": "f7c377adf35297297904ec609c794678a3485eec", "filename": "src/librustc_codegen_llvm/debuginfo/namespace.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fnamespace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fnamespace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fnamespace.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -2,14 +2,14 @@\n \n use super::metadata::{unknown_file_metadata, UNKNOWN_LINE_NUMBER};\n use super::utils::{DIB, debug_context};\n-use monomorphize::Instance;\n+use crate::monomorphize::Instance;\n use rustc::ty;\n \n-use llvm;\n-use llvm::debuginfo::DIScope;\n+use crate::llvm;\n+use crate::llvm::debuginfo::DIScope;\n+use crate::common::CodegenCx;\n use rustc::hir::def_id::DefId;\n use rustc::hir::map::DefPathData;\n-use common::CodegenCx;\n \n use rustc_data_structures::small_c_str::SmallCStr;\n "}, {"sha": "f7620e11c233d0f16c86faafd434cf365432eb64", "filename": "src/librustc_codegen_llvm/debuginfo/source_loc.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fsource_loc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fsource_loc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fsource_loc.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -4,9 +4,9 @@ use super::utils::{debug_context, span_start};\n use super::metadata::UNKNOWN_COLUMN_NUMBER;\n use rustc_codegen_ssa::debuginfo::FunctionDebugContext;\n \n-use llvm;\n-use llvm::debuginfo::DIScope;\n-use builder::Builder;\n+use crate::llvm;\n+use crate::llvm::debuginfo::DIScope;\n+use crate::builder::Builder;\n use rustc_codegen_ssa::traits::*;\n \n use libc::c_uint;"}, {"sha": "1697bb7b52dbd83c8373830aa599b841664d3ee8", "filename": "src/librustc_codegen_llvm/debuginfo/type_names.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Ftype_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Ftype_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Ftype_names.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -1,6 +1,6 @@\n // Type Names for Debug Info.\n \n-use common::CodegenCx;\n+use crate::common::CodegenCx;\n use rustc::hir::def_id::DefId;\n use rustc::ty::subst::Substs;\n use rustc::ty::{self, Ty};\n@@ -125,7 +125,7 @@ pub fn push_debuginfo_type_name<'a, 'tcx>(cx: &CodegenCx<'a, 'tcx>,\n             }\n \n             let abi = sig.abi();\n-            if abi != ::abi::Abi::Rust {\n+            if abi != crate::abi::Abi::Rust {\n                 output.push_str(\"extern \\\"\");\n                 output.push_str(abi.name());\n                 output.push_str(\"\\\" \");"}, {"sha": "e1b299df6c312e95981705eea448fd704dac6da3", "filename": "src/librustc_codegen_llvm/debuginfo/utils.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Futils.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -6,12 +6,12 @@ use super::namespace::item_namespace;\n use rustc::hir::def_id::DefId;\n use rustc::ty::DefIdTree;\n \n-use llvm;\n-use llvm::debuginfo::{DIScope, DIBuilder, DIDescriptor, DIArray};\n-use common::{CodegenCx};\n+use crate::llvm;\n+use crate::llvm::debuginfo::{DIScope, DIBuilder, DIDescriptor, DIArray};\n+use crate::common::{CodegenCx};\n use rustc_codegen_ssa::traits::*;\n \n-use syntax_pos::{self, Span};\n+use syntax_pos::Span;\n \n pub fn is_node_local_to_unit(cx: &CodegenCx, def_id: DefId) -> bool\n {"}, {"sha": "3febcb019ce29ff32677661acd312c0220e93037", "filename": "src/librustc_codegen_llvm/declare.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fdeclare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fdeclare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdeclare.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -11,18 +11,18 @@\n //! * Use define_* family of methods when you might be defining the Value.\n //! * When in doubt, define.\n \n-use llvm;\n-use llvm::AttributePlace::Function;\n+use crate::llvm;\n+use crate::llvm::AttributePlace::Function;\n+use crate::abi::{FnType, FnTypeExt};\n+use crate::attributes;\n+use crate::context::CodegenCx;\n+use crate::type_::Type;\n+use crate::value::Value;\n use rustc::ty::{self, PolyFnSig};\n use rustc::ty::layout::LayoutOf;\n use rustc::session::config::Sanitizer;\n use rustc_data_structures::small_c_str::SmallCStr;\n-use abi::{FnType, FnTypeExt};\n-use attributes;\n-use context::CodegenCx;\n-use type_::Type;\n use rustc_codegen_ssa::traits::*;\n-use value::Value;\n \n /// Declare a function.\n ///"}, {"sha": "e99de02580c28aac8c102448816cdf11c0eefab4", "filename": "src/librustc_codegen_llvm/intrinsic.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -1,26 +1,26 @@\n #![allow(non_upper_case_globals)]\n \n-use attributes;\n-use llvm;\n-use llvm_util;\n-use abi::{Abi, FnType, LlvmType, PassMode};\n+use crate::attributes;\n+use crate::llvm;\n+use crate::llvm_util;\n+use crate::abi::{Abi, FnType, LlvmType, PassMode};\n+use crate::context::CodegenCx;\n+use crate::type_::Type;\n+use crate::type_of::LayoutLlvmExt;\n+use crate::builder::Builder;\n+use crate::value::Value;\n+use crate::va_arg::emit_va_arg;\n use rustc_codegen_ssa::MemFlags;\n use rustc_codegen_ssa::mir::place::PlaceRef;\n use rustc_codegen_ssa::mir::operand::{OperandRef, OperandValue};\n use rustc_codegen_ssa::glue;\n use rustc_codegen_ssa::base::{to_immediate, wants_msvc_seh, compare_simd_types};\n-use context::CodegenCx;\n-use type_::Type;\n-use type_of::LayoutLlvmExt;\n use rustc::ty::{self, Ty};\n use rustc::ty::layout::{self, LayoutOf, HasTyCtxt, Primitive};\n use rustc_codegen_ssa::common::{IntPredicate, TypeKind};\n use rustc::hir;\n use syntax::ast::{self, FloatTy};\n use syntax::symbol::Symbol;\n-use builder::Builder;\n-use value::Value;\n-use va_arg::emit_va_arg;\n \n use rustc_codegen_ssa::traits::*;\n "}, {"sha": "9219f42d6923580e1a550ba6a4f5392ee8db7369", "filename": "src/librustc_codegen_llvm/lib.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Flib.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -21,6 +21,9 @@\n #![feature(concat_idents)]\n #![feature(link_args)]\n #![feature(static_nobundle)]\n+#![deny(rust_2018_idioms)]\n+#![allow(explicit_outlives_requirements)]\n+#![allow(elided_lifetimes_in_paths)]\n \n use back::write::create_target_machine;\n use syntax_pos::symbol::Symbol;\n@@ -29,16 +32,11 @@ extern crate flate2;\n #[macro_use] extern crate bitflags;\n extern crate libc;\n #[macro_use] extern crate rustc;\n-extern crate jobserver;\n-extern crate num_cpus;\n extern crate rustc_mir;\n extern crate rustc_allocator;\n-extern crate rustc_apfloat;\n extern crate rustc_target;\n #[macro_use] extern crate rustc_data_structures;\n-extern crate rustc_demangle;\n extern crate rustc_incremental;\n-extern crate rustc_llvm;\n extern crate rustc_codegen_utils;\n extern crate rustc_codegen_ssa;\n extern crate rustc_fs_util;\n@@ -48,9 +46,7 @@ extern crate rustc_fs_util;\n extern crate syntax_pos;\n extern crate rustc_errors as errors;\n extern crate serialize;\n-extern crate cc; // Used to locate MSVC\n extern crate tempfile;\n-extern crate memmap;\n \n use rustc_codegen_ssa::traits::*;\n use rustc_codegen_ssa::back::write::{CodegenContext, ModuleConfig, FatLTOInput};"}, {"sha": "a8d272f157ce3367f843e646fcfb60c7d7699a8c", "filename": "src/librustc_codegen_llvm/llvm/diagnostic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fllvm%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fllvm%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Fdiagnostic.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -4,7 +4,7 @@ pub use self::OptimizationDiagnosticKind::*;\n pub use self::Diagnostic::*;\n \n use libc::c_uint;\n-use value::Value;\n+use crate::value::Value;\n \n use super::{DiagnosticInfo, Twine};\n "}, {"sha": "e761d2247a7575b139fce53f72301de53b729a72", "filename": "src/librustc_codegen_llvm/llvm/ffi.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -9,8 +9,6 @@ use libc::{c_uint, c_int, size_t, c_char};\n use libc::{c_ulonglong, c_void};\n \n use std::marker::PhantomData;\n-use syntax;\n-use rustc_codegen_ssa;\n \n use super::RustString;\n "}, {"sha": "543cc912930fddbc97e998b5599ae177a99195a7", "filename": "src/librustc_codegen_llvm/llvm/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fllvm%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fllvm%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Fmod.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -16,7 +16,7 @@ use std::string::FromUtf8Error;\n use std::slice;\n use std::ffi::CStr;\n use std::cell::RefCell;\n-use libc::{self, c_uint, c_char, size_t};\n+use libc::{c_uint, c_char, size_t};\n use rustc_data_structures::small_c_str::SmallCStr;\n \n pub mod archive_ro;"}, {"sha": "5fea9c8747e0fc965fba69cf9d4544d9851377f8", "filename": "src/librustc_codegen_llvm/llvm_util.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -1,6 +1,6 @@\n+use crate::back::write::create_informational_target_machine;\n+use crate::llvm;\n use syntax_pos::symbol::Symbol;\n-use back::write::create_informational_target_machine;\n-use llvm;\n use rustc::session::Session;\n use rustc::session::config::PrintRequest;\n use rustc_target::spec::MergeFunctions;"}, {"sha": "a2df687d58f5acd3915a2220d12ec5c2160b5442", "filename": "src/librustc_codegen_llvm/metadata.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fmetadata.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -1,8 +1,8 @@\n+use crate::llvm;\n+use crate::llvm::{False, ObjectFile, mk_section_iter};\n+use crate::llvm::archive_ro::ArchiveRO;\n use rustc::middle::cstore::MetadataLoader;\n use rustc_target::spec::Target;\n-use llvm;\n-use llvm::{False, ObjectFile, mk_section_iter};\n-use llvm::archive_ro::ArchiveRO;\n \n use rustc_data_structures::owning_ref::OwningRef;\n use std::path::Path;"}, {"sha": "4fe6a1f4f4b1ca132e031470fafe00b7d1ecbb7b", "filename": "src/librustc_codegen_llvm/mono_item.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fmono_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fmono_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fmono_item.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -1,9 +1,9 @@\n-use attributes;\n-use base;\n-use context::CodegenCx;\n-use llvm;\n-use monomorphize::Instance;\n-use type_of::LayoutLlvmExt;\n+use crate::attributes;\n+use crate::base;\n+use crate::context::CodegenCx;\n+use crate::llvm;\n+use crate::monomorphize::Instance;\n+use crate::type_of::LayoutLlvmExt;\n use rustc::hir::def_id::{DefId, LOCAL_CRATE};\n use rustc::mir::mono::{Linkage, Visibility};\n use rustc::ty::TypeFoldable;"}, {"sha": "781326506d0ff8c41ca2b120306de7cb2d468528", "filename": "src/librustc_codegen_llvm/type_.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Ftype_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Ftype_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Ftype_.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -1,22 +1,22 @@\n #![allow(non_upper_case_globals)]\n \n-pub use llvm::Type;\n+pub use crate::llvm::Type;\n \n-use llvm;\n-use llvm::{Bool, False, True};\n-use context::CodegenCx;\n+use crate::llvm;\n+use crate::llvm::{Bool, False, True};\n+use crate::context::CodegenCx;\n+use crate::value::Value;\n use rustc_codegen_ssa::traits::*;\n-use value::Value;\n \n+use crate::common;\n+use crate::type_of::LayoutLlvmExt;\n+use crate::abi::{LlvmType, FnTypeExt};\n use rustc::util::nodemap::FxHashMap;\n use rustc::ty::Ty;\n use rustc::ty::layout::TyLayout;\n use rustc_target::abi::call::{CastTarget, FnType, Reg};\n use rustc_data_structures::small_c_str::SmallCStr;\n-use common;\n use rustc_codegen_ssa::common::TypeKind;\n-use type_of::LayoutLlvmExt;\n-use abi::{LlvmType, FnTypeExt};\n \n use std::fmt;\n use std::cell::RefCell;"}, {"sha": "fb5624d56078e7149133124576360145919e4cdb", "filename": "src/librustc_codegen_llvm/type_of.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Ftype_of.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -1,12 +1,12 @@\n-use abi::{FnType, FnTypeExt};\n-use common::*;\n+use crate::abi::{FnType, FnTypeExt};\n+use crate::common::*;\n+use crate::type_::Type;\n use rustc::hir;\n use rustc::ty::{self, Ty, TypeFoldable};\n use rustc::ty::layout::{self, Align, LayoutOf, Size, TyLayout};\n use rustc_target::abi::FloatTy;\n use rustc_mir::monomorphize::item::DefPathBasedNames;\n use rustc_codegen_ssa::traits::*;\n-use type_::Type;\n \n use std::fmt::Write;\n "}, {"sha": "8719390b51acaa64dcd724ccafaa01681374f377", "filename": "src/librustc_codegen_llvm/va_arg.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fva_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fva_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fva_arg.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -1,11 +1,11 @@\n-use builder::Builder;\n+use crate::builder::Builder;\n+use crate::type_::Type;\n+use crate::type_of::LayoutLlvmExt;\n+use crate::value::Value;\n use rustc_codegen_ssa::mir::operand::OperandRef;\n use rustc_codegen_ssa::traits::{BaseTypeMethods, BuilderMethods, ConstMethods, DerivedTypeMethods};\n use rustc::ty::layout::{Align, HasDataLayout, HasTyCtxt, LayoutOf, Size};\n use rustc::ty::Ty;\n-use type_::Type;\n-use type_of::LayoutLlvmExt;\n-use value::Value;\n \n #[allow(dead_code)]\n fn round_pointer_up_to_alignment("}, {"sha": "68809284bb726988aa05ddd58a7d0737393cb5d6", "filename": "src/librustc_codegen_llvm/value.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836863851574dc8de4d0488a16b949afc4e397a7/src%2Flibrustc_codegen_llvm%2Fvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fvalue.rs?ref=836863851574dc8de4d0488a16b949afc4e397a7", "patch": "@@ -1,6 +1,6 @@\n-pub use llvm::Value;\n+pub use crate::llvm::Value;\n \n-use llvm;\n+use crate::llvm;\n \n use std::fmt;\n use std::hash::{Hash, Hasher};"}]}