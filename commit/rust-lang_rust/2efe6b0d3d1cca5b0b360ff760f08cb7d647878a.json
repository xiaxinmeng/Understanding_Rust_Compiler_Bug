{"sha": "2efe6b0d3d1cca5b0b360ff760f08cb7d647878a", "node_id": "C_kwDOAAsO6NoAKDJlZmU2YjBkM2QxY2NhNWIwYjM2MGZmNzYwZjA4Y2I3ZDY0Nzg3OGE", "commit": {"author": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-08-22T19:14:35Z"}, "committer": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-08-22T22:46:41Z"}, "message": "Add `AsFd` implementations for stdio types on WASI.\n\nThis mirrors the implementations on Unix platforms, and also mirrors the\nexisting `AsRawFd` impls.", "tree": {"sha": "55b8cdfea5f1b704d980bf9b1a2cdcae84022d05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55b8cdfea5f1b704d980bf9b1a2cdcae84022d05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2efe6b0d3d1cca5b0b360ff760f08cb7d647878a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2efe6b0d3d1cca5b0b360ff760f08cb7d647878a", "html_url": "https://github.com/rust-lang/rust/commit/2efe6b0d3d1cca5b0b360ff760f08cb7d647878a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2efe6b0d3d1cca5b0b360ff760f08cb7d647878a/comments", "author": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0dc8d78019ca924203fe153ff0af7f64f68cb5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0dc8d78019ca924203fe153ff0af7f64f68cb5d", "html_url": "https://github.com/rust-lang/rust/commit/e0dc8d78019ca924203fe153ff0af7f64f68cb5d"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "d2081771b6ec79d267a9dba2377dc014cfb35a07", "filename": "library/std/src/sys/wasi/stdio.rs", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/2efe6b0d3d1cca5b0b360ff760f08cb7d647878a/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2efe6b0d3d1cca5b0b360ff760f08cb7d647878a/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Fstdio.rs?ref=2efe6b0d3d1cca5b0b360ff760f08cb7d647878a", "patch": "@@ -4,7 +4,7 @@ use super::fd::WasiFd;\n use crate::io::{self, IoSlice, IoSliceMut};\n use crate::mem::ManuallyDrop;\n use crate::os::raw;\n-use crate::os::wasi::io::{AsRawFd, FromRawFd};\n+use crate::os::wasi::io::{AsFd, AsRawFd, BorrowedFd, FromRawFd};\n \n pub struct Stdin;\n pub struct Stdout;\n@@ -23,6 +23,13 @@ impl AsRawFd for Stdin {\n     }\n }\n \n+impl AsFd for Stdin {\n+    #[inline]\n+    fn as_fd(&self) -> BorrowedFd<'_> {\n+        unsafe { BorrowedFd::borrow_raw(0) }\n+    }\n+}\n+\n impl io::Read for Stdin {\n     fn read(&mut self, data: &mut [u8]) -> io::Result<usize> {\n         self.read_vectored(&mut [IoSliceMut::new(data)])\n@@ -51,6 +58,13 @@ impl AsRawFd for Stdout {\n     }\n }\n \n+impl AsFd for Stdout {\n+    #[inline]\n+    fn as_fd(&self) -> BorrowedFd<'_> {\n+        unsafe { BorrowedFd::borrow_raw(1) }\n+    }\n+}\n+\n impl io::Write for Stdout {\n     fn write(&mut self, data: &[u8]) -> io::Result<usize> {\n         self.write_vectored(&[IoSlice::new(data)])\n@@ -82,6 +96,13 @@ impl AsRawFd for Stderr {\n     }\n }\n \n+impl AsFd for Stderr {\n+    #[inline]\n+    fn as_fd(&self) -> BorrowedFd<'_> {\n+        unsafe { BorrowedFd::borrow_raw(2) }\n+    }\n+}\n+\n impl io::Write for Stderr {\n     fn write(&mut self, data: &[u8]) -> io::Result<usize> {\n         self.write_vectored(&[IoSlice::new(data)])"}]}