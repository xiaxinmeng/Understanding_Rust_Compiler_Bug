{"sha": "3562118948c8414ff50ca717086edc04729749ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1NjIxMTg5NDhjODQxNGZmNTBjYTcxNzA4NmVkYzA0NzI5NzQ5YWI=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2016-09-10T13:14:49Z"}, "committer": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2016-09-10T13:14:49Z"}, "message": "use canonical formatting of `pub (super)`", "tree": {"sha": "7c23f9d31a5fd547f505634e5fefc5e82e689395", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c23f9d31a5fd547f505634e5fefc5e82e689395"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3562118948c8414ff50ca717086edc04729749ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3562118948c8414ff50ca717086edc04729749ab", "html_url": "https://github.com/rust-lang/rust/commit/3562118948c8414ff50ca717086edc04729749ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3562118948c8414ff50ca717086edc04729749ab/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bcda724c432cd62c55e73948b1b201e72613182b", "url": "https://api.github.com/repos/rust-lang/rust/commits/bcda724c432cd62c55e73948b1b201e72613182b", "html_url": "https://github.com/rust-lang/rust/commit/bcda724c432cd62c55e73948b1b201e72613182b"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "89a0f820ed6e8444ccc4c8a36b371153a5cffc62", "filename": "src/interpreter/terminator.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3562118948c8414ff50ca717086edc04729749ab/src%2Finterpreter%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3562118948c8414ff50ca717086edc04729749ab/src%2Finterpreter%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fterminator.rs?ref=3562118948c8414ff50ca717086edc04729749ab", "patch": "@@ -464,7 +464,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n         Ok(())\n     }\n \n-    pub (super) fn fulfill_obligation(&self, trait_ref: ty::PolyTraitRef<'tcx>) -> traits::Vtable<'tcx, ()> {\n+    pub(super) fn fulfill_obligation(&self, trait_ref: ty::PolyTraitRef<'tcx>) -> traits::Vtable<'tcx, ()> {\n         // Do the initial selection for the obligation. This yields the shallow result we are\n         // looking for -- that is, what specific impl.\n         self.tcx.infer_ctxt(None, None, Reveal::All).enter(|infcx| {\n@@ -575,14 +575,14 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n }\n \n #[derive(Debug)]\n-pub (super) struct ImplMethod<'tcx> {\n-    pub (super) method: Rc<ty::Method<'tcx>>,\n-    pub (super) substs: &'tcx Substs<'tcx>,\n-    pub (super) is_provided: bool,\n+pub(super) struct ImplMethod<'tcx> {\n+    pub(super) method: Rc<ty::Method<'tcx>>,\n+    pub(super) substs: &'tcx Substs<'tcx>,\n+    pub(super) is_provided: bool,\n }\n \n /// Locates the applicable definition of a method, given its name.\n-pub (super) fn get_impl_method<'a, 'tcx>(\n+pub(super) fn get_impl_method<'a, 'tcx>(\n     tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     substs: &'tcx Substs<'tcx>,\n     impl_def_id: DefId,"}]}