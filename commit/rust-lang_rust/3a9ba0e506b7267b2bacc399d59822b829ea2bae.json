{"sha": "3a9ba0e506b7267b2bacc399d59822b829ea2bae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhOWJhMGU1MDZiNzI2N2IyYmFjYzM5OWQ1OTgyMmI4MjllYTJiYWU=", "commit": {"author": {"name": "unexge", "email": "unexge@gmail.com", "date": "2021-08-22T18:28:39Z"}, "committer": {"name": "unexge", "email": "unexge@gmail.com", "date": "2021-08-22T18:28:39Z"}, "message": "feat: join lines merges assignments", "tree": {"sha": "2543573b9ffd7dabc59021d60776fb65e1aad691", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2543573b9ffd7dabc59021d60776fb65e1aad691"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a9ba0e506b7267b2bacc399d59822b829ea2bae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a9ba0e506b7267b2bacc399d59822b829ea2bae", "html_url": "https://github.com/rust-lang/rust/commit/3a9ba0e506b7267b2bacc399d59822b829ea2bae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a9ba0e506b7267b2bacc399d59822b829ea2bae/comments", "author": {"login": "unexge", "id": 16212576, "node_id": "MDQ6VXNlcjE2MjEyNTc2", "avatar_url": "https://avatars.githubusercontent.com/u/16212576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unexge", "html_url": "https://github.com/unexge", "followers_url": "https://api.github.com/users/unexge/followers", "following_url": "https://api.github.com/users/unexge/following{/other_user}", "gists_url": "https://api.github.com/users/unexge/gists{/gist_id}", "starred_url": "https://api.github.com/users/unexge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unexge/subscriptions", "organizations_url": "https://api.github.com/users/unexge/orgs", "repos_url": "https://api.github.com/users/unexge/repos", "events_url": "https://api.github.com/users/unexge/events{/privacy}", "received_events_url": "https://api.github.com/users/unexge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "unexge", "id": 16212576, "node_id": "MDQ6VXNlcjE2MjEyNTc2", "avatar_url": "https://avatars.githubusercontent.com/u/16212576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unexge", "html_url": "https://github.com/unexge", "followers_url": "https://api.github.com/users/unexge/followers", "following_url": "https://api.github.com/users/unexge/following{/other_user}", "gists_url": "https://api.github.com/users/unexge/gists{/gist_id}", "starred_url": "https://api.github.com/users/unexge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unexge/subscriptions", "organizations_url": "https://api.github.com/users/unexge/orgs", "repos_url": "https://api.github.com/users/unexge/repos", "events_url": "https://api.github.com/users/unexge/events{/privacy}", "received_events_url": "https://api.github.com/users/unexge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "996300f4a061e895a339a909fddce94f68ce7d19", "url": "https://api.github.com/repos/rust-lang/rust/commits/996300f4a061e895a339a909fddce94f68ce7d19", "html_url": "https://github.com/rust-lang/rust/commit/996300f4a061e895a339a909fddce94f68ce7d19"}], "stats": {"total": 106, "additions": 106, "deletions": 0}, "files": [{"sha": "ec67c02757efbface3afbf5a3521747d0b67efa8", "filename": "crates/ide/src/join_lines.rs", "status": "modified", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/rust-lang/rust/blob/3a9ba0e506b7267b2bacc399d59822b829ea2bae/crates%2Fide%2Fsrc%2Fjoin_lines.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a9ba0e506b7267b2bacc399d59822b829ea2bae/crates%2Fide%2Fsrc%2Fjoin_lines.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fjoin_lines.rs?ref=3a9ba0e506b7267b2bacc399d59822b829ea2bae", "patch": "@@ -15,6 +15,7 @@ pub struct JoinLinesConfig {\n     pub join_else_if: bool,\n     pub remove_trailing_comma: bool,\n     pub unwrap_trivial_blocks: bool,\n+    pub join_assignments: bool,\n }\n \n // Feature: Join Lines\n@@ -162,6 +163,12 @@ fn remove_newline(\n         }\n     }\n \n+    if config.join_assignments {\n+        if join_assignments(edit, &prev, &next).is_some() {\n+            return;\n+        }\n+    }\n+\n     if config.unwrap_trivial_blocks {\n         // Special case that turns something like:\n         //\n@@ -232,6 +239,41 @@ fn join_single_use_tree(edit: &mut TextEditBuilder, token: &SyntaxToken) -> Opti\n     Some(())\n }\n \n+fn join_assignments(\n+    edit: &mut TextEditBuilder,\n+    prev: &SyntaxElement,\n+    next: &SyntaxElement,\n+) -> Option<()> {\n+    let let_stmt = ast::LetStmt::cast(prev.as_node()?.clone())?;\n+    if let_stmt.eq_token().is_some() {\n+        cov_mark::hit!(join_assignments_already_initialized);\n+        return None;\n+    }\n+    let let_ident_pat = match let_stmt.pat()? {\n+        ast::Pat::IdentPat(it) => it,\n+        _ => return None,\n+    };\n+\n+    let expr_stmt = ast::ExprStmt::cast(next.as_node()?.clone())?;\n+    let bin_expr = match expr_stmt.expr()? {\n+        ast::Expr::BinExpr(it) => it,\n+        _ => return None,\n+    };\n+    if !matches!(bin_expr.op_kind()?, ast::BinaryOp::Assignment { op: None }) {\n+        return None;\n+    }\n+    let lhs = bin_expr.lhs()?;\n+    let name_ref = lhs.name_ref()?;\n+\n+    if name_ref.to_string() != let_ident_pat.syntax().to_string() {\n+        cov_mark::hit!(join_assignments_mismatch);\n+        return None;\n+    }\n+\n+    edit.delete(let_stmt.semicolon_token()?.text_range().cover(lhs.syntax().text_range()));\n+    Some(())\n+}\n+\n fn as_if_expr(element: &SyntaxElement) -> Option<ast::IfExpr> {\n     let mut node = element.as_node()?.clone();\n     if let Some(stmt) = ast::ExprStmt::cast(node.clone()) {\n@@ -275,6 +317,7 @@ mod tests {\n             join_else_if: true,\n             remove_trailing_comma: true,\n             unwrap_trivial_blocks: true,\n+            join_assignments: true,\n         };\n \n         let (before_cursor_pos, before) = extract_offset(ra_fixture_before);\n@@ -300,6 +343,7 @@ mod tests {\n             join_else_if: true,\n             remove_trailing_comma: true,\n             unwrap_trivial_blocks: true,\n+            join_assignments: true,\n         };\n \n         let (sel, before) = extract_range(ra_fixture_before);\n@@ -990,6 +1034,55 @@ fn main() {\n \n     }\n }\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn join_assignments() {\n+        check_join_lines(\n+            r#\"\n+fn foo() {\n+    $0let foo;\n+    foo = \"bar\";\n+}\n+\"#,\n+            r#\"\n+fn foo() {\n+    $0let foo = \"bar\";\n+}\n+\"#,\n+        );\n+\n+        cov_mark::check!(join_assignments_mismatch);\n+        check_join_lines(\n+            r#\"\n+fn foo() {\n+    let foo;\n+    let qux;$0\n+    foo = \"bar\";\n+}\n+\"#,\n+            r#\"\n+fn foo() {\n+    let foo;\n+    let qux;$0 foo = \"bar\";\n+}\n+\"#,\n+        );\n+\n+        cov_mark::check!(join_assignments_already_initialized);\n+        check_join_lines(\n+            r#\"\n+fn foo() {\n+    let foo = \"bar\";$0\n+    foo = \"bar\";\n+}\n+\"#,\n+            r#\"\n+fn foo() {\n+    let foo = \"bar\";$0 foo = \"bar\";\n+}\n \"#,\n         );\n     }"}, {"sha": "22da92779efa0e7b4b060a1b55532014cf20ae76", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3a9ba0e506b7267b2bacc399d59822b829ea2bae/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a9ba0e506b7267b2bacc399d59822b829ea2bae/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=3a9ba0e506b7267b2bacc399d59822b829ea2bae", "patch": "@@ -206,6 +206,8 @@ config_data! {\n         joinLines_removeTrailingComma: bool = \"true\",\n         /// Join lines unwraps trivial blocks.\n         joinLines_unwrapTrivialBlock: bool = \"true\",\n+        /// Join lines merges consecutive declaration and initialization of an assignment.\n+        joinLines_joinAssignments: bool = \"true\",\n \n         /// Whether to show `Debug` lens. Only applies when\n         /// `#rust-analyzer.lens.enable#` is set.\n@@ -786,6 +788,7 @@ impl Config {\n             join_else_if: self.data.joinLines_joinElseIf,\n             remove_trailing_comma: self.data.joinLines_removeTrailingComma,\n             unwrap_trivial_blocks: self.data.joinLines_unwrapTrivialBlock,\n+            join_assignments: self.data.joinLines_joinAssignments,\n         }\n     }\n     pub fn call_info_full(&self) -> bool {"}, {"sha": "f73e542037065d61709ea7c98b6a2ec6ac7d1aaa", "filename": "docs/user/generated_config.adoc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3a9ba0e506b7267b2bacc399d59822b829ea2bae/docs%2Fuser%2Fgenerated_config.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/3a9ba0e506b7267b2bacc399d59822b829ea2bae/docs%2Fuser%2Fgenerated_config.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fgenerated_config.adoc?ref=3a9ba0e506b7267b2bacc399d59822b829ea2bae", "patch": "@@ -318,6 +318,11 @@ Join lines removes trailing commas.\n --\n Join lines unwraps trivial blocks.\n --\n+[[rust-analyzer.joinLines.joinAssignments]]rust-analyzer.joinLines.joinAssignments (default: `true`)::\n++\n+--\n+Join lines merges consecutive declaration and initialization of an assignment.\n+--\n [[rust-analyzer.lens.debug]]rust-analyzer.lens.debug (default: `true`)::\n +\n --"}, {"sha": "33bc4dc9a942a5afc9992f8af44a01b116131497", "filename": "editors/code/package.json", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3a9ba0e506b7267b2bacc399d59822b829ea2bae/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/3a9ba0e506b7267b2bacc399d59822b829ea2bae/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=3a9ba0e506b7267b2bacc399d59822b829ea2bae", "patch": "@@ -761,6 +761,11 @@\n                     \"default\": true,\n                     \"type\": \"boolean\"\n                 },\n+                \"rust-analyzer.joinLines.joinAssignments\": {\n+                    \"markdownDescription\": \"Join lines merges consecutive declaration and initialization of an assignment.\",\n+                    \"default\": true,\n+                    \"type\": \"boolean\"\n+                },\n                 \"rust-analyzer.lens.debug\": {\n                     \"markdownDescription\": \"Whether to show `Debug` lens. Only applies when\\n`#rust-analyzer.lens.enable#` is set.\",\n                     \"default\": true,"}]}