{"sha": "1ed123828c97d9f7e031a9caee02e340295ef21e", "node_id": "C_kwDOAAsO6NoAKDFlZDEyMzgyOGM5N2Q5ZjdlMDMxYTljYWVlMDJlMzQwMjk1ZWYyMWU", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-04-11T12:55:47Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-10-15T11:22:28Z"}, "message": "Use BCryptGenRandom instead of RtlGenRandom on Windows.\n\nBCryptGenRandom isn't available on XP, but we dropped XP support a while\nago.", "tree": {"sha": "2bd1ce81c70bf01eb17e303c109004e094d61004", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2bd1ce81c70bf01eb17e303c109004e094d61004"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ed123828c97d9f7e031a9caee02e340295ef21e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ed123828c97d9f7e031a9caee02e340295ef21e", "html_url": "https://github.com/rust-lang/rust/commit/1ed123828c97d9f7e031a9caee02e340295ef21e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ed123828c97d9f7e031a9caee02e340295ef21e/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9475e609b8458fff9e444934a6017d2e590642cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/9475e609b8458fff9e444934a6017d2e590642cf", "html_url": "https://github.com/rust-lang/rust/commit/9475e609b8458fff9e444934a6017d2e590642cf"}], "stats": {"total": 41, "additions": 14, "deletions": 27}, "files": [{"sha": "e5c550802a7abb8000d851d473296a396601eb01", "filename": "library/std/src/sys/windows/c.rs", "status": "modified", "additions": 14, "deletions": 15, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/1ed123828c97d9f7e031a9caee02e340295ef21e/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ed123828c97d9f7e031a9caee02e340295ef21e/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs?ref=1ed123828c97d9f7e031a9caee02e340295ef21e", "patch": "@@ -262,6 +262,8 @@ pub const STACK_SIZE_PARAM_IS_A_RESERVATION: DWORD = 0x00010000;\n \n pub const STATUS_SUCCESS: NTSTATUS = 0x00000000;\n \n+pub const BCRYPT_USE_SYSTEM_PREFERRED_RNG: DWORD = 0x00000002;\n+\n #[repr(C)]\n #[cfg(not(target_pointer_width = \"64\"))]\n pub struct WSADATA {\n@@ -678,10 +680,6 @@ if #[cfg(not(target_vendor = \"uwp\"))] {\n \n     #[link(name = \"advapi32\")]\n     extern \"system\" {\n-        // Forbidden when targeting UWP\n-        #[link_name = \"SystemFunction036\"]\n-        pub fn RtlGenRandom(RandomBuffer: *mut u8, RandomBufferLength: ULONG) -> BOOLEAN;\n-\n         // Allowed but unused by UWP\n         pub fn OpenProcessToken(\n             ProcessHandle: HANDLE,\n@@ -743,8 +741,6 @@ if #[cfg(not(target_vendor = \"uwp\"))] {\n // UWP specific functions & types\n cfg_if::cfg_if! {\n if #[cfg(target_vendor = \"uwp\")] {\n-    pub const BCRYPT_USE_SYSTEM_PREFERRED_RNG: DWORD = 0x00000002;\n-\n     #[repr(C)]\n     pub struct FILE_STANDARD_INFO {\n         pub AllocationSize: LARGE_INTEGER,\n@@ -754,15 +750,6 @@ if #[cfg(target_vendor = \"uwp\")] {\n         pub Directory: BOOLEAN,\n     }\n \n-    #[link(name = \"bcrypt\")]\n-    extern \"system\" {\n-        pub fn BCryptGenRandom(\n-            hAlgorithm: LPVOID,\n-            pBuffer: *mut u8,\n-            cbBuffer: ULONG,\n-            dwFlags: ULONG,\n-        ) -> LONG;\n-    }\n     #[link(name = \"kernel32\")]\n     extern \"system\" {\n         pub fn GetFileInformationByHandleEx(\n@@ -1085,6 +1072,18 @@ extern \"system\" {\n     ) -> c_int;\n }\n \n+#[link(name = \"bcrypt\")]\n+extern \"system\" {\n+    // >= Vista / Server 2008\n+    // https://docs.microsoft.com/en-us/windows/win32/api/bcrypt/nf-bcrypt-bcryptgenrandom\n+    pub fn BCryptGenRandom(\n+        hAlgorithm: LPVOID,\n+        pBuffer: *mut u8,\n+        cbBuffer: ULONG,\n+        dwFlags: ULONG,\n+    ) -> NTSTATUS;\n+}\n+\n // Functions that aren't available on every version of Windows that we support,\n // but we still use them and just provide some form of a fallback implementation.\n compat_fn! {"}, {"sha": "de73e9154b45e1aac371cb4683a003540b6fb7ae", "filename": "library/std/src/sys/windows/rand.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1ed123828c97d9f7e031a9caee02e340295ef21e/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Frand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ed123828c97d9f7e031a9caee02e340295ef21e/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Frand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Frand.rs?ref=1ed123828c97d9f7e031a9caee02e340295ef21e", "patch": "@@ -2,18 +2,6 @@ use crate::io;\n use crate::mem;\n use crate::sys::c;\n \n-#[cfg(not(target_vendor = \"uwp\"))]\n-pub fn hashmap_random_keys() -> (u64, u64) {\n-    let mut v = (0, 0);\n-    let ret =\n-        unsafe { c::RtlGenRandom(&mut v as *mut _ as *mut u8, mem::size_of_val(&v) as c::ULONG) };\n-    if ret == 0 {\n-        panic!(\"couldn't generate random bytes: {}\", io::Error::last_os_error());\n-    }\n-    v\n-}\n-\n-#[cfg(target_vendor = \"uwp\")]\n pub fn hashmap_random_keys() -> (u64, u64) {\n     use crate::ptr;\n "}]}