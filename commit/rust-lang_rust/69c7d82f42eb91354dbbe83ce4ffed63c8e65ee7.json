{"sha": "69c7d82f42eb91354dbbe83ce4ffed63c8e65ee7", "node_id": "C_kwDOAAsO6NoAKDY5YzdkODJmNDJlYjkxMzU0ZGJiZTgzY2U0ZmZlZDYzYzhlNjVlZTc", "commit": {"author": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2023-05-13T17:03:37Z"}, "committer": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2023-05-14T03:34:59Z"}, "message": "Make sure the build.rustc version is either the same or 1 apart", "tree": {"sha": "d9973a37865902fd8e6049c7eab8d9e51db6db32", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9973a37865902fd8e6049c7eab8d9e51db6db32"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69c7d82f42eb91354dbbe83ce4ffed63c8e65ee7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69c7d82f42eb91354dbbe83ce4ffed63c8e65ee7", "html_url": "https://github.com/rust-lang/rust/commit/69c7d82f42eb91354dbbe83ce4ffed63c8e65ee7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69c7d82f42eb91354dbbe83ce4ffed63c8e65ee7/comments", "author": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e18605af29ccf875cdcb539a522f11f5ac44113", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e18605af29ccf875cdcb539a522f11f5ac44113", "html_url": "https://github.com/rust-lang/rust/commit/2e18605af29ccf875cdcb539a522f11f5ac44113"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "9420c4fec5fa4b57817075480119b2f34a72a162", "filename": "src/bootstrap/Cargo.lock", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/69c7d82f42eb91354dbbe83ce4ffed63c8e65ee7/src%2Fbootstrap%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/69c7d82f42eb91354dbbe83ce4ffed63c8e65ee7/src%2Fbootstrap%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2FCargo.lock?ref=69c7d82f42eb91354dbbe83ce4ffed63c8e65ee7", "patch": "@@ -58,6 +58,7 @@ dependencies = [\n  \"once_cell\",\n  \"opener\",\n  \"pretty_assertions\",\n+ \"semver\",\n  \"serde\",\n  \"serde_derive\",\n  \"serde_json\",\n@@ -645,6 +646,12 @@ version = \"1.1.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"d29ab0c6d3fc0ee92fe66e2d99f700eab17a8d57d1c1d3b748380fb20baa78cd\"\n \n+[[package]]\n+name = \"semver\"\n+version = \"1.0.17\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"bebd363326d05ec3e2f532ab7660680f3b02130d780c299bca73469d521bc0ed\"\n+\n [[package]]\n name = \"serde\"\n version = \"1.0.137\""}, {"sha": "746c8dcfce0cd15d509000b67a9c96e20a318e12", "filename": "src/bootstrap/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/69c7d82f42eb91354dbbe83ce4ffed63c8e65ee7/src%2Fbootstrap%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/69c7d82f42eb91354dbbe83ce4ffed63c8e65ee7/src%2Fbootstrap%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2FCargo.toml?ref=69c7d82f42eb91354dbbe83ce4ffed63c8e65ee7", "patch": "@@ -57,6 +57,7 @@ walkdir = \"2\"\n sysinfo = { version = \"0.26.0\", optional = true }\n clap = { version = \"4.2.4\", default-features = false, features = [\"std\", \"usage\", \"help\", \"derive\", \"error-context\"] }\n clap_complete = \"4.2.2\"\n+semver = \"1.0.17\"\n \n # Solaris doesn't support flock() and thus fd-lock is not option now\n [target.'cfg(not(target_os = \"solaris\"))'.dependencies]"}, {"sha": "2828ebc3567ecbb13eac550405ba063665e7b8bc", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/69c7d82f42eb91354dbbe83ce4ffed63c8e65ee7/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69c7d82f42eb91354dbbe83ce4ffed63c8e65ee7/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=69c7d82f42eb91354dbbe83ce4ffed63c8e65ee7", "patch": "@@ -24,6 +24,7 @@ pub use crate::flags::Subcommand;\n use crate::flags::{Color, Flags, Warnings};\n use crate::util::{exe, output, t};\n use once_cell::sync::OnceCell;\n+use semver::Version;\n use serde::{Deserialize, Deserializer};\n use serde_derive::Deserialize;\n \n@@ -1019,6 +1020,8 @@ impl Config {\n             config.download_beta_toolchain();\n             config.out.join(config.build.triple).join(\"stage0/bin/rustc\")\n         });\n+        config.check_build_rustc_version();\n+\n         config.initial_cargo = build\n             .cargo\n             .map(|cargo| {\n@@ -1680,6 +1683,37 @@ impl Config {\n         self.rust_codegen_backends.get(0).cloned()\n     }\n \n+    fn check_build_rustc_version(&self) {\n+        // check rustc version is same or lower with 1 apart from the building one\n+        let mut cmd = Command::new(&self.initial_rustc);\n+        cmd.arg(\"--version\");\n+        let rustc_output = output(&mut cmd)\n+            .lines()\n+            .next()\n+            .unwrap()\n+            .split(' ')\n+            .nth(1)\n+            .unwrap()\n+            .split('-')\n+            .next()\n+            .unwrap()\n+            .to_owned();\n+        let rustc_version = Version::parse(&rustc_output.trim()).unwrap();\n+        let source_version =\n+            Version::parse(&fs::read_to_string(self.src.join(\"src/version\")).unwrap().trim())\n+                .unwrap();\n+        if !(source_version == rustc_version\n+            || (source_version.major == rustc_version.major\n+                && source_version.minor == rustc_version.minor + 1))\n+        {\n+            let prev_version = format!(\"{}.{}.x\", source_version.major, source_version.minor - 1);\n+            panic!(\n+                \"Unexpected rustc version: {}, we should use {}/{} to build source with {}\",\n+                rustc_version, prev_version, source_version, source_version\n+            );\n+        }\n+    }\n+\n     /// Returns the commit to download, or `None` if we shouldn't download CI artifacts.\n     fn download_ci_rustc_commit(&self, download_rustc: Option<StringOrBool>) -> Option<String> {\n         // If `download-rustc` is not set, default to rebuilding."}]}