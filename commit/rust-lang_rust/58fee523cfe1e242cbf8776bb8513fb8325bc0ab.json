{"sha": "58fee523cfe1e242cbf8776bb8513fb8325bc0ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4ZmVlNTIzY2ZlMWUyNDJjYmY4Nzc2YmI4NTEzZmI4MzI1YmMwYWI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-25T05:57:00Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-25T06:02:30Z"}, "message": "is_union() instead of string comparsion", "tree": {"sha": "4a13a9ef89fdc076f351c82d04a05cb5e948db25", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a13a9ef89fdc076f351c82d04a05cb5e948db25"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58fee523cfe1e242cbf8776bb8513fb8325bc0ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58fee523cfe1e242cbf8776bb8513fb8325bc0ab", "html_url": "https://github.com/rust-lang/rust/commit/58fee523cfe1e242cbf8776bb8513fb8325bc0ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58fee523cfe1e242cbf8776bb8513fb8325bc0ab/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02046a5d402c789c006d0da7662f800fe3c45faf", "url": "https://api.github.com/repos/rust-lang/rust/commits/02046a5d402c789c006d0da7662f800fe3c45faf", "html_url": "https://github.com/rust-lang/rust/commit/02046a5d402c789c006d0da7662f800fe3c45faf"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "d3b1ea8778d658da2345437a7d0e10aa97d729e2", "filename": "src/librustc_typeck/check/pat.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/58fee523cfe1e242cbf8776bb8513fb8325bc0ab/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58fee523cfe1e242cbf8776bb8513fb8325bc0ab/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs?ref=58fee523cfe1e242cbf8776bb8513fb8325bc0ab", "patch": "@@ -1020,7 +1020,6 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             ty::Adt(adt, substs) => (substs, adt),\n             _ => span_bug!(pat.span, \"struct pattern is not an ADT\"),\n         };\n-        let kind_name = adt.variant_descr();\n \n         // Index the struct fields' types.\n         let field_map = variant\n@@ -1074,7 +1073,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n         if !inexistent_fields.is_empty() && !variant.recovered {\n             self.error_inexistent_fields(\n-                kind_name,\n+                adt.variant_descr(),\n                 &inexistent_fields,\n                 &mut unmentioned_fields,\n                 variant,\n@@ -1088,13 +1087,13 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 pat.span,\n                 E0638,\n                 \"`..` required with {} marked as non-exhaustive\",\n-                kind_name\n+                adt.variant_descr()\n             )\n             .emit();\n         }\n \n         // Report an error if incorrect number of the fields were specified.\n-        if kind_name == \"union\" {\n+        if adt.is_union() {\n             if fields.len() != 1 {\n                 tcx.sess\n                     .struct_span_err(pat.span, \"union patterns should have exactly one field\")"}]}