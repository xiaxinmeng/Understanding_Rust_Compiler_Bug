{"sha": "b925031c5fb4cd5c8c23b655d15edca8ca0ac4ab", "node_id": "C_kwDOAAsO6NoAKGI5MjUwMzFjNWZiNGNkNWM4YzIzYjY1NWQxNWVkY2E4Y2EwYWM0YWI", "commit": {"author": {"name": "KaDiWa", "email": "kalle.wachsmuth@gmail.com", "date": "2023-01-29T20:53:10Z"}, "committer": {"name": "KaDiWa", "email": "kalle.wachsmuth@gmail.com", "date": "2023-01-30T14:58:37Z"}, "message": "bootstrap: --help handling", "tree": {"sha": "bd709b684ccd7c98098780fb0324fa85a94807ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd709b684ccd7c98098780fb0324fa85a94807ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b925031c5fb4cd5c8c23b655d15edca8ca0ac4ab", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEcFQWTVq3UZxSk8EiC1KuORxnTOUFAmPX2x0ACgkQC1KuORxn\nTOX3txAAnz12ICOTR1MDx/nFNHXlcqHi0rS5UmDrde1Ll1HvtOmhaebOFfMrvn/c\nMHFlUmc/P5PF+uJWIGk5fPCUQhsXGR+pwu+eyI3kw7HyqOiSKbB8QHwLCMlG4BxP\nc3ZrzK9jvIyahFyzk/a4bjdWTF0nHqGnM112FuU8Z5NyA6iz7Ef8NiB36HKd87nS\nSpLSbvYzHhtt2aDfmfSVVvtDcVCpDYZJVxHatcb0JHhmGsfd/U1+y5Z1PP9jqd5I\nAnsMBEHYGYjb0ux4kpC0YOyl+s0NBBZhi6Z4i/G/0h+S+3txgAB/TibX2cpXfYbT\nyuN+qiw0cA2cNYo/Rg7zjjVBYOAw8b1Lo3n5mpr+/srQKENx3R13jIHtKQkhVM8p\nQ86WYjfAj6gKshn+Ux/Jg1rWTcasel4uKKN3PajpSGv1KkykNBRBZExNGiUOuIr6\nvoj8FiI9M1bWJG/17C0sRRUd1Ed7FuRt4yfuuDtgEJxlpXhzUp08Wo15qhP3860a\n3GCOA/Vz5cZSHuF0ZZ9P+Nq3swu1rdWJMl2hcCEzpdV9+kYLyV/VUP21paSfWNCx\nMO0DSaKh/nKNnsosVUrBoG1DyFnRasydYCL0rFgY/G6gYe2ybB6is80kTQZoPbaS\nw8F+/Ty/rHtVGGZqz71JFnScCXCX3TS1D5a2PaV5vERyY+ApH2E=\n=rKjM\n-----END PGP SIGNATURE-----", "payload": "tree bd709b684ccd7c98098780fb0324fa85a94807ca\nparent 385dbff9e5a77b441d453b109538ebceb2f33e7b\nauthor KaDiWa <kalle.wachsmuth@gmail.com> 1675025590 +0100\ncommitter KaDiWa <kalle.wachsmuth@gmail.com> 1675090717 +0100\n\nbootstrap: --help handling\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b925031c5fb4cd5c8c23b655d15edca8ca0ac4ab", "html_url": "https://github.com/rust-lang/rust/commit/b925031c5fb4cd5c8c23b655d15edca8ca0ac4ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b925031c5fb4cd5c8c23b655d15edca8ca0ac4ab/comments", "author": {"login": "kadiwa4", "id": 25464294, "node_id": "MDQ6VXNlcjI1NDY0Mjk0", "avatar_url": "https://avatars.githubusercontent.com/u/25464294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kadiwa4", "html_url": "https://github.com/kadiwa4", "followers_url": "https://api.github.com/users/kadiwa4/followers", "following_url": "https://api.github.com/users/kadiwa4/following{/other_user}", "gists_url": "https://api.github.com/users/kadiwa4/gists{/gist_id}", "starred_url": "https://api.github.com/users/kadiwa4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kadiwa4/subscriptions", "organizations_url": "https://api.github.com/users/kadiwa4/orgs", "repos_url": "https://api.github.com/users/kadiwa4/repos", "events_url": "https://api.github.com/users/kadiwa4/events{/privacy}", "received_events_url": "https://api.github.com/users/kadiwa4/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kadiwa4", "id": 25464294, "node_id": "MDQ6VXNlcjI1NDY0Mjk0", "avatar_url": "https://avatars.githubusercontent.com/u/25464294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kadiwa4", "html_url": "https://github.com/kadiwa4", "followers_url": "https://api.github.com/users/kadiwa4/followers", "following_url": "https://api.github.com/users/kadiwa4/following{/other_user}", "gists_url": "https://api.github.com/users/kadiwa4/gists{/gist_id}", "starred_url": "https://api.github.com/users/kadiwa4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kadiwa4/subscriptions", "organizations_url": "https://api.github.com/users/kadiwa4/orgs", "repos_url": "https://api.github.com/users/kadiwa4/repos", "events_url": "https://api.github.com/users/kadiwa4/events{/privacy}", "received_events_url": "https://api.github.com/users/kadiwa4/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "385dbff9e5a77b441d453b109538ebceb2f33e7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/385dbff9e5a77b441d453b109538ebceb2f33e7b", "html_url": "https://github.com/rust-lang/rust/commit/385dbff9e5a77b441d453b109538ebceb2f33e7b"}], "stats": {"total": 47, "additions": 24, "deletions": 23}, "files": [{"sha": "0f793c9327f5ba2642ce859811066c8b2d0ae8f5", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 24, "deletions": 23, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/b925031c5fb4cd5c8c23b655d15edca8ca0ac4ab/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/b925031c5fb4cd5c8c23b655d15edca8ca0ac4ab/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=b925031c5fb4cd5c8c23b655d15edca8ca0ac4ab", "patch": "@@ -820,27 +820,21 @@ def check_vendored_status(self):\n             if os.path.exists(cargo_dir):\n                 shutil.rmtree(cargo_dir)\n \n-def bootstrap(help_triggered):\n-    \"\"\"Configure, fetch, build and run the initial bootstrap\"\"\"\n-\n-    # If the user is asking for help, let them know that the whole download-and-build\n-    # process has to happen before anything is printed out.\n-    if help_triggered:\n-        print(\"info: Downloading and building bootstrap before processing --help\")\n-        print(\"      command. See src/bootstrap/README.md for help with common\")\n-        print(\"      commands.\")\n-\n-    parser = argparse.ArgumentParser(description='Build rust')\n+def parse_args():\n+    \"\"\"Parse the command line arguments that the python script needs.\"\"\"\n+    parser = argparse.ArgumentParser(add_help=False)\n+    parser.add_argument('-h', '--help', action='store_true')\n     parser.add_argument('--config')\n     parser.add_argument('--build-dir')\n     parser.add_argument('--build')\n     parser.add_argument('--color', choices=['always', 'never', 'auto'])\n     parser.add_argument('--clean', action='store_true')\n     parser.add_argument('-v', '--verbose', action='count', default=0)\n \n-    args = [a for a in sys.argv if a != '-h' and a != '--help']\n-    args, _ = parser.parse_known_args(args)\n+    return parser.parse_known_args(sys.argv)[0]\n \n+def bootstrap(args):\n+    \"\"\"Configure, fetch, build and run the initial bootstrap\"\"\"\n     # Configure initial bootstrap\n     build = RustBuild()\n     build.rust_root = os.path.abspath(os.path.join(__file__, '../../..'))\n@@ -918,23 +912,30 @@ def main():\n     if len(sys.argv) > 1 and sys.argv[1] == 'help':\n         sys.argv[1] = '-h'\n \n-    help_triggered = (\n-        '-h' in sys.argv) or ('--help' in sys.argv) or (len(sys.argv) == 1)\n+    args = parse_args()\n+    help_triggered = args.help or len(sys.argv) == 1\n+\n+    # If the user is asking for help, let them know that the whole download-and-build\n+    # process has to happen before anything is printed out.\n+    if help_triggered:\n+        print(\n+            \"info: Downloading and building bootstrap before processing --help command.\\n\"\n+            \"      See src/bootstrap/README.md for help with common commands.\"\n+        )\n+\n+    exit_code = 0\n     try:\n-        bootstrap(help_triggered)\n-        if not help_triggered:\n-            print(\"Build completed successfully in {}\".format(\n-                format_build_time(time() - start_time)))\n+        bootstrap(args)\n     except (SystemExit, KeyboardInterrupt) as error:\n         if hasattr(error, 'code') and isinstance(error.code, int):\n             exit_code = error.code\n         else:\n             exit_code = 1\n             print(error)\n-        if not help_triggered:\n-            print(\"Build completed unsuccessfully in {}\".format(\n-                format_build_time(time() - start_time)))\n-        sys.exit(exit_code)\n+\n+    if not help_triggered:\n+        print(\"Build completed successfully in\", format_build_time(time() - start_time))\n+    sys.exit(exit_code)\n \n \n if __name__ == '__main__':"}]}