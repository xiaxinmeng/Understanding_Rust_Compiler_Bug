{"sha": "a921a476c8fe95afad9c157fca66d8f56f7746fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5MjFhNDc2YzhmZTk1YWZhZDljMTU3ZmNhNjZkOGY1NmY3NzQ2ZmQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-17T18:21:20Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-17T18:21:20Z"}, "message": "Auto merge of #79945 - jackh726:existential_trait_ref, r=nikomatsakis\n\nMove binder for dyn to each list item\n\nThis essentially changes `ty::Binder<&'tcx List<ExistentialTraitRef>>` to `&'tcx List<ty::Binder<ExistentialTraitRef>>`.\n\nThis is a first step in moving the `dyn Trait` representation closer to Chalk, which we've talked about in `@rust-lang/wg-traits.`\n\nr? `@nikomatsakis`", "tree": {"sha": "a54e60647e5abbbe1c3d5e1798bb554bfe67c33e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a54e60647e5abbbe1c3d5e1798bb554bfe67c33e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a921a476c8fe95afad9c157fca66d8f56f7746fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a921a476c8fe95afad9c157fca66d8f56f7746fd", "html_url": "https://github.com/rust-lang/rust/commit/a921a476c8fe95afad9c157fca66d8f56f7746fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a921a476c8fe95afad9c157fca66d8f56f7746fd/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f6c32af159c427fedb6fd25dfd9b6933affe068", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f6c32af159c427fedb6fd25dfd9b6933affe068", "html_url": "https://github.com/rust-lang/rust/commit/5f6c32af159c427fedb6fd25dfd9b6933affe068"}, {"sha": "42b267d22137218588d75708ad99a5d9acefa9ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/42b267d22137218588d75708ad99a5d9acefa9ab", "html_url": "https://github.com/rust-lang/rust/commit/42b267d22137218588d75708ad99a5d9acefa9ab"}], "stats": {"total": 24, "additions": 13, "deletions": 11}, "files": [{"sha": "5bcb11fd515a0f925d2054860706d61ef9348b82", "filename": "src/value_and_place.rs", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a921a476c8fe95afad9c157fca66d8f56f7746fd/src%2Fvalue_and_place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a921a476c8fe95afad9c157fca66d8f56f7746fd/src%2Fvalue_and_place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvalue_and_place.rs?ref=a921a476c8fe95afad9c157fca66d8f56f7746fd", "patch": "@@ -480,17 +480,19 @@ impl<'tcx> CPlace<'tcx> {\n                     // fn(&T) -> for<'l> fn(&'l T) is allowed\n                 }\n                 (&ty::Dynamic(from_traits, _), &ty::Dynamic(to_traits, _)) => {\n-                    let from_traits = fx\n-                        .tcx\n-                        .normalize_erasing_late_bound_regions(ParamEnv::reveal_all(), from_traits);\n-                    let to_traits = fx\n-                        .tcx\n-                        .normalize_erasing_late_bound_regions(ParamEnv::reveal_all(), to_traits);\n-                    assert_eq!(\n-                        from_traits, to_traits,\n-                        \"Can't write trait object of incompatible traits {:?} to place with traits {:?}\\n\\n{:#?}\",\n-                        from_traits, to_traits, fx,\n-                    );\n+                    for (from, to) in from_traits.iter().zip(to_traits) {\n+                        let from = fx\n+                            .tcx\n+                            .normalize_erasing_late_bound_regions(ParamEnv::reveal_all(), from);\n+                        let to = fx\n+                            .tcx\n+                            .normalize_erasing_late_bound_regions(ParamEnv::reveal_all(), to);\n+                        assert_eq!(\n+                            from, to,\n+                            \"Can't write trait object of incompatible traits {:?} to place with traits {:?}\\n\\n{:#?}\",\n+                            from_traits, to_traits, fx,\n+                        );\n+                    }\n                     // dyn for<'r> Trait<'r> -> dyn Trait<'_> is allowed\n                 }\n                 _ => {"}]}