{"sha": "6a95d90b86fcfb04377db34324b513f108e4f060", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhOTVkOTBiODZmY2ZiMDQzNzdkYjM0MzI0YjUxM2YxMDhlNGYwNjA=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2015-04-14T18:09:59Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2015-04-15T19:36:06Z"}, "message": " make Repr of TraitRef more useful", "tree": {"sha": "1926b8c36a63507a8804e57652816bc0c9eb0680", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1926b8c36a63507a8804e57652816bc0c9eb0680"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a95d90b86fcfb04377db34324b513f108e4f060", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a95d90b86fcfb04377db34324b513f108e4f060", "html_url": "https://github.com/rust-lang/rust/commit/6a95d90b86fcfb04377db34324b513f108e4f060", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a95d90b86fcfb04377db34324b513f108e4f060/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce27d024ff16d297ce5e5bfb7cce11810e9c9b5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce27d024ff16d297ce5e5bfb7cce11810e9c9b5e", "html_url": "https://github.com/rust-lang/rust/commit/ce27d024ff16d297ce5e5bfb7cce11810e9c9b5e"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "698f6c4750216cf22d1446e0cc65c0ce8161b1af", "filename": "src/librustc/util/ppaux.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6a95d90b86fcfb04377db34324b513f108e4f060/src%2Flibrustc%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a95d90b86fcfb04377db34324b513f108e4f060/src%2Flibrustc%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fppaux.rs?ref=6a95d90b86fcfb04377db34324b513f108e4f060", "patch": "@@ -810,8 +810,12 @@ impl<'tcx> Repr<'tcx> for ty::TraitRef<'tcx> {\n         // to enumerate the `for<...>` etc because the debruijn index\n         // tells you everything you need to know.\n         let base = ty::item_path_str(tcx, self.def_id);\n-        parameterized(tcx, &base, self.substs, self.def_id, &[],\n-                      || ty::lookup_trait_def(tcx, self.def_id).generics.clone())\n+        let result = parameterized(tcx, &base, self.substs, self.def_id, &[],\n+                      || ty::lookup_trait_def(tcx, self.def_id).generics.clone());\n+        match self.substs.self_ty() {\n+            None => result,\n+            Some(sty) => format!(\"<{} as {}>\", sty.repr(tcx), result)\n+        }\n     }\n }\n \n@@ -1504,8 +1508,7 @@ impl<'tcx> UserString<'tcx> for ty::ProjectionPredicate<'tcx> {\n \n impl<'tcx> Repr<'tcx> for ty::ProjectionTy<'tcx> {\n     fn repr(&self, tcx: &ctxt<'tcx>) -> String {\n-        format!(\"<{} as {}>::{}\",\n-                self.trait_ref.substs.self_ty().repr(tcx),\n+        format!(\"{}::{}\",\n                 self.trait_ref.repr(tcx),\n                 self.item_name.repr(tcx))\n     }"}]}