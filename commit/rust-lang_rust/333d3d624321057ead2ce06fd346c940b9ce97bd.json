{"sha": "333d3d624321057ead2ce06fd346c940b9ce97bd", "node_id": "C_kwDOAAsO6NoAKDMzM2QzZDYyNDMyMTA1N2VhZDJjZTA2ZmQzNDZjOTQwYjljZTk3YmQ", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-02-03T13:20:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-03T13:20:26Z"}, "message": "Rollup merge of #93566 - Aaron1011:rustc-backtrace, r=davidtwco\n\nMake rustc use `RUST_BACKTRACE=full` by default\n\nCompiler panics should be rare - when they do occur, we want the report\nfiled by the user to contain as much information as possible. This is\nespecially important when the panic is due to an incremental compilation\nbug, since we may not have enough information to reproduce it.\n\nThis PR sets `RUST_BACKTRACE=full` inside `rustc` if the user has not\nexplicitly set `RUST_BACKTRACE`. This is more verbose than\n`RUST_BACKTRACE=1`, but this may make it easier to debug incremental\ncompilation issues. Users who find this too verbose can still manually\nset `RUST_BACKTRACE` before invoking the compiler.\n\nThis only affects `rustc` (and any tool using `rustc_driver::install_ice_hook`).\nIt does *not* affect any user crates or the standard library -\nbacktraces will continue to be off by default in any application\n*compiled* by rustc.", "tree": {"sha": "4b9c83407d39121775ba12e81fd6409a61e95ac2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b9c83407d39121775ba12e81fd6409a61e95ac2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/333d3d624321057ead2ce06fd346c940b9ce97bd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh+9aaCRBK7hj4Ov3rIwAAbDQIAAB4ceOGsEz+iE9cIvc/L89G\nTazgcaMd++3s2PHZW4pSzOBSMDMzW11ECGfmDV3zWcLUpiGZJ+e/jX/efonOj7vk\njg+dVQsTtFWAVrpoGu0ncLkxa2WSXzK34s2VCH2lPn4I5Ta2K+aaaU4Vdz/S2J49\n2iI+fhPs73J2040aD8ilISNZRVCO6F1dYXs62e++hp7d9xxcuZKTQ5OvBaMAySnh\n0T+HDCpHam3UNejyW90Y6HSkBuLbKU0N4+xoYj3ctb+AnDZwdWmBFHamzXEWEDVn\n3Pki8wreIG4AMDKfu2kxUVBhKXzZzM1O9w7COLE7gO2i9UMJUAXvMH93KfVrJcE=\n=glck\n-----END PGP SIGNATURE-----\n", "payload": "tree 4b9c83407d39121775ba12e81fd6409a61e95ac2\nparent 761705ebe5093be5bcc8f431c56ed6a330ad34e7\nparent 891368f6013398c9f10fe9383f41f02476a48e24\nauthor Yuki Okushi <jtitor@2k36.org> 1643894426 +0900\ncommitter GitHub <noreply@github.com> 1643894426 +0900\n\nRollup merge of #93566 - Aaron1011:rustc-backtrace, r=davidtwco\n\nMake rustc use `RUST_BACKTRACE=full` by default\n\nCompiler panics should be rare - when they do occur, we want the report\nfiled by the user to contain as much information as possible. This is\nespecially important when the panic is due to an incremental compilation\nbug, since we may not have enough information to reproduce it.\n\nThis PR sets `RUST_BACKTRACE=full` inside `rustc` if the user has not\nexplicitly set `RUST_BACKTRACE`. This is more verbose than\n`RUST_BACKTRACE=1`, but this may make it easier to debug incremental\ncompilation issues. Users who find this too verbose can still manually\nset `RUST_BACKTRACE` before invoking the compiler.\n\nThis only affects `rustc` (and any tool using `rustc_driver::install_ice_hook`).\nIt does *not* affect any user crates or the standard library -\nbacktraces will continue to be off by default in any application\n*compiled* by rustc.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/333d3d624321057ead2ce06fd346c940b9ce97bd", "html_url": "https://github.com/rust-lang/rust/commit/333d3d624321057ead2ce06fd346c940b9ce97bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/333d3d624321057ead2ce06fd346c940b9ce97bd/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "761705ebe5093be5bcc8f431c56ed6a330ad34e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/761705ebe5093be5bcc8f431c56ed6a330ad34e7", "html_url": "https://github.com/rust-lang/rust/commit/761705ebe5093be5bcc8f431c56ed6a330ad34e7"}, {"sha": "891368f6013398c9f10fe9383f41f02476a48e24", "url": "https://api.github.com/repos/rust-lang/rust/commits/891368f6013398c9f10fe9383f41f02476a48e24", "html_url": "https://github.com/rust-lang/rust/commit/891368f6013398c9f10fe9383f41f02476a48e24"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "acf221a08eeb26f138b334419a2bf48d82342a00", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/333d3d624321057ead2ce06fd346c940b9ce97bd/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/333d3d624321057ead2ce06fd346c940b9ce97bd/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=333d3d624321057ead2ce06fd346c940b9ce97bd", "patch": "@@ -1240,6 +1240,15 @@ pub fn report_ice(info: &panic::PanicInfo<'_>, bug_report_url: &str) {\n ///\n /// A custom rustc driver can skip calling this to set up a custom ICE hook.\n pub fn install_ice_hook() {\n+    // If the user has not explicitly overriden \"RUST_BACKTRACE\", then produce\n+    // full backtraces. When a compiler ICE happens, we want to gather\n+    // as much information as possible to present in the issue opened\n+    // by the user. Compiler developers and other rustc users can\n+    // opt in to less-verbose backtraces by manually setting \"RUST_BACKTRACE\"\n+    // (e.g. `RUST_BACKTRACE=1`)\n+    if std::env::var(\"RUST_BACKTRACE\").is_err() {\n+        std::env::set_var(\"RUST_BACKTRACE\", \"full\");\n+    }\n     SyncLazy::force(&DEFAULT_HOOK);\n }\n "}, {"sha": "fd86a3f9dfaff9c4e8fce6547870f2387e07238b", "filename": "src/test/ui/panics/default-backtrace-ice.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/333d3d624321057ead2ce06fd346c940b9ce97bd/src%2Ftest%2Fui%2Fpanics%2Fdefault-backtrace-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/333d3d624321057ead2ce06fd346c940b9ce97bd/src%2Ftest%2Fui%2Fpanics%2Fdefault-backtrace-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpanics%2Fdefault-backtrace-ice.rs?ref=333d3d624321057ead2ce06fd346c940b9ce97bd", "patch": "@@ -0,0 +1,9 @@\n+// unset-rustc-env:RUST_BACKTRACE\n+// compile-flags:-Z treat-err-as-bug=1\n+// error-pattern:stack backtrace:\n+// failure-status:101\n+// normalize-stderr-test \"note: .*\" -> \"\"\n+// normalize-stderr-test \"thread 'rustc' .*\" -> \"\"\n+// normalize-stderr-test \"  .*\\n\" -> \"\"\n+\n+fn main() { missing_ident; }"}, {"sha": "a0025d7e221ae1f35b764f596f68b6449976be92", "filename": "src/test/ui/panics/default-backtrace-ice.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/333d3d624321057ead2ce06fd346c940b9ce97bd/src%2Ftest%2Fui%2Fpanics%2Fdefault-backtrace-ice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/333d3d624321057ead2ce06fd346c940b9ce97bd/src%2Ftest%2Fui%2Fpanics%2Fdefault-backtrace-ice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpanics%2Fdefault-backtrace-ice.stderr?ref=333d3d624321057ead2ce06fd346c940b9ce97bd", "patch": "@@ -0,0 +1,18 @@\n+error[E0425]: cannot find value `missing_ident` in this scope\n+LL | fn main() { missing_ident; }\n+\n+\n+stack backtrace:\n+\n+error: internal compiler error: unexpected panic\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+query stack during panic:\n+end of query stack"}]}