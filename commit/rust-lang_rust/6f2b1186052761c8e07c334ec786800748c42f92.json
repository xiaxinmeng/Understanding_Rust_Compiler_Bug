{"sha": "6f2b1186052761c8e07c334ec786800748c42f92", "node_id": "C_kwDOAAsO6NoAKDZmMmIxMTg2MDUyNzYxYzhlMDdjMzM0ZWM3ODY4MDA3NDhjNDJmOTI", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-03-20T18:31:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-20T18:31:27Z"}, "message": "Merge #11775\n\n11775: internal: Treat `global_asm` and `asm` macros as unsafe r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "1813565f1c314974e30edd035942ef71fe311108", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1813565f1c314974e30edd035942ef71fe311108"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f2b1186052761c8e07c334ec786800748c42f92", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiN3L/CRBK7hj4Ov3rIwAA8asIAEHxgzOp3YPyv6id+LHBrzcB\n3ZY99ZYqkViJQQvzeus9E7D+5PC7Jo37WBA8Ib75B8zdn74HfPiaIhea3EK1skVy\nYXRlC8sxiHJCvnV0wM0omXNLKfvzz8D6RDAh2JHxgpZLDMdO1Yqumg7dL5aD8PqL\nm0Z5w5/cePQ1hrn4hRcu1IV4qqnra9rOYu8F6e0xnJ9GXyn9U8oqAqHZJ+aJ2OBE\nkAvRoRTuV+UcJLCCxfFqLt8uK6DhMAqfo2ALxdIB4LFGO4MTOZ+J7fbkvWmYMdtY\nHsHGwqzRoynu7AH6JSnVm6c/B5cwYcW7JpmeV2rKlYvOiLrBKqiuyCm39NtP4vc=\n=7t2l\n-----END PGP SIGNATURE-----\n", "payload": "tree 1813565f1c314974e30edd035942ef71fe311108\nparent fedf724d8287174acf0c8c3477910d3dad19f3f6\nparent ddf144051ae223cebc2a78f579af47e004b13aa8\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1647801087 +0000\ncommitter GitHub <noreply@github.com> 1647801087 +0000\n\nMerge #11775\n\n11775: internal: Treat `global_asm` and `asm` macros as unsafe r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f2b1186052761c8e07c334ec786800748c42f92", "html_url": "https://github.com/rust-lang/rust/commit/6f2b1186052761c8e07c334ec786800748c42f92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f2b1186052761c8e07c334ec786800748c42f92/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fedf724d8287174acf0c8c3477910d3dad19f3f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/fedf724d8287174acf0c8c3477910d3dad19f3f6", "html_url": "https://github.com/rust-lang/rust/commit/fedf724d8287174acf0c8c3477910d3dad19f3f6"}, {"sha": "ddf144051ae223cebc2a78f579af47e004b13aa8", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddf144051ae223cebc2a78f579af47e004b13aa8", "html_url": "https://github.com/rust-lang/rust/commit/ddf144051ae223cebc2a78f579af47e004b13aa8"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "2b818b8eba45456aff01635361dbdbdf6ab71e23", "filename": "crates/hir/src/source_analyzer.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/6f2b1186052761c8e07c334ec786800748c42f92/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f2b1186052761c8e07c334ec786800748c42f92/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs?ref=6f2b1186052761c8e07c334ec786800748c42f92", "patch": "@@ -21,9 +21,11 @@ use hir_def::{\n     path::{ModPath, Path, PathKind},\n     resolver::{resolver_for_scope, Resolver, TypeNs, ValueNs},\n     type_ref::Mutability,\n-    AsMacroCall, DefWithBodyId, FieldId, FunctionId, LocalFieldId, ModuleDefId, VariantId,\n+    AsMacroCall, DefWithBodyId, FieldId, FunctionId, LocalFieldId, Lookup, ModuleDefId, VariantId,\n+};\n+use hir_expand::{\n+    builtin_fn_macro::BuiltinFnLikeExpander, hygiene::Hygiene, name::AsName, HirFileId, InFile,\n };\n-use hir_expand::{hygiene::Hygiene, name::AsName, HirFileId, InFile};\n use hir_ty::{\n     diagnostics::{\n         record_literal_missing_fields, record_pattern_missing_fields, unsafe_expressions,\n@@ -490,6 +492,22 @@ impl SourceAnalyzer {\n         db: &dyn HirDatabase,\n         macro_call: InFile<&ast::MacroCall>,\n     ) -> bool {\n+        // check for asm/global_asm\n+        if let Some(mac) = self.resolve_macro_call(db, macro_call) {\n+            let ex = match mac.id {\n+                hir_def::MacroId::Macro2Id(it) => it.lookup(db.upcast()).expander,\n+                hir_def::MacroId::MacroRulesId(it) => it.lookup(db.upcast()).expander,\n+                _ => hir_def::MacroExpander::Declarative,\n+            };\n+            match ex {\n+                hir_def::MacroExpander::BuiltIn(e)\n+                    if e == BuiltinFnLikeExpander::Asm || e == BuiltinFnLikeExpander::GlobalAsm =>\n+                {\n+                    return true\n+                }\n+                _ => (),\n+            }\n+        }\n         if let (Some((def, body, sm)), Some(infer)) = (&self.def, &self.infer) {\n             if let Some(expr_ids) = sm.macro_expansion_expr(macro_call) {\n                 let mut is_unsafe = false;"}, {"sha": "7cd6a5a72d37e401c3c5d7d5393d9a78898d51b3", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_keywords.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f2b1186052761c8e07c334ec786800748c42f92/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_keywords.html", "raw_url": "https://github.com/rust-lang/rust/raw/6f2b1186052761c8e07c334ec786800748c42f92/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_keywords.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_keywords.html?ref=6f2b1186052761c8e07c334ec786800748c42f92", "patch": "@@ -51,7 +51,7 @@\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">void</span> <span class=\"brace\">{</span>\n-    <span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>tt<span class=\"colon\">:</span>tt<span class=\"parenthesis\">)</span><span class=\"parenthesis\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+    <span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>tt<span class=\"colon\">:</span>tt<span class=\"parenthesis\">)</span><span class=\"punctuation\">*</span><span class=\"parenthesis\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n <span class=\"macro\">void</span><span class=\"macro_bang\">!</span><span class=\"parenthesis\">(</span><span class=\"keyword\">Self</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n <span class=\"keyword\">struct</span> <span class=\"struct declaration\">__</span> <span class=\"keyword\">where</span> <span class=\"self_type_keyword\">Self</span><span class=\"colon\">:</span><span class=\"semicolon\">;</span>"}, {"sha": "29a0a9f066cb799e10642c3bbbcf825911b139b6", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_strings.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f2b1186052761c8e07c334ec786800748c42f92/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html", "raw_url": "https://github.com/rust-lang/rust/raw/6f2b1186052761c8e07c334ec786800748c42f92/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html?ref=6f2b1186052761c8e07c334ec786800748c42f92", "patch": "@@ -149,6 +149,6 @@\n     <span class=\"macro\">assert</span><span class=\"macro_bang\">!</span><span class=\"parenthesis\">(</span><span class=\"bool_literal\">true</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">1</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n     <span class=\"macro\">assert</span><span class=\"macro_bang\">!</span><span class=\"parenthesis\">(</span><span class=\"bool_literal\">true</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> asdasd\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">1</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n     <span class=\"macro\">toho</span><span class=\"macro_bang\">!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">fmt\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">0</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"macro\">asm</span><span class=\"macro_bang\">!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"mov eax, </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">0</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro unsafe\">asm</span><span class=\"macro_bang\">!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"mov eax, </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">0</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n     <span class=\"macro\">format_args</span><span class=\"macro_bang\">!</span><span class=\"parenthesis\">(</span>concat<span class=\"punctuation\">!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"parenthesis\">)</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"{}\"</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n <span class=\"brace\">}</span></code></pre>\n\\ No newline at end of file"}, {"sha": "f8ca5c269c44b5a950b95b44e588b9680d1f5319", "filename": "crates/ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f2b1186052761c8e07c334ec786800748c42f92/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f2b1186052761c8e07c334ec786800748c42f92/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=6f2b1186052761c8e07c334ec786800748c42f92", "patch": "@@ -347,7 +347,7 @@ mod __ {\n }\n \n macro_rules! void {\n-    ($($tt:tt)) => {}\n+    ($($tt:tt)*) => {}\n }\n void!(Self);\n struct __ where Self:;"}]}