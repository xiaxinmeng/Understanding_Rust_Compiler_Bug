{"sha": "a5e116e95f282620e0e750c0250fd09bb62023da", "node_id": "C_kwDOAAsO6NoAKGE1ZTExNmU5NWYyODI2MjBlMGU3NTBjMDI1MGZkMDliYjYyMDIzZGE", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-10-03T19:44:37Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-10-17T08:04:54Z"}, "message": "`order_dependent_trait_objects` to `ReportNow`", "tree": {"sha": "804ff330021acf519a189b52c31759a03fca6c37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/804ff330021acf519a189b52c31759a03fca6c37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5e116e95f282620e0e750c0250fd09bb62023da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5e116e95f282620e0e750c0250fd09bb62023da", "html_url": "https://github.com/rust-lang/rust/commit/a5e116e95f282620e0e750c0250fd09bb62023da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5e116e95f282620e0e750c0250fd09bb62023da/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1536ab1b383f21b38f8d49230a2aecc51daffa3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1536ab1b383f21b38f8d49230a2aecc51daffa3d", "html_url": "https://github.com/rust-lang/rust/commit/1536ab1b383f21b38f8d49230a2aecc51daffa3d"}], "stats": {"total": 113, "additions": 113, "deletions": 0}, "files": [{"sha": "d8a2476e801f094e93838ed9bec42ee14bf08fdf", "filename": "compiler/rustc_lint_defs/src/builtin.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a5e116e95f282620e0e750c0250fd09bb62023da/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5e116e95f282620e0e750c0250fd09bb62023da/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs?ref=a5e116e95f282620e0e750c0250fd09bb62023da", "patch": "@@ -1427,6 +1427,7 @@ declare_lint! {\n     \"trait-object types were treated as different depending on marker-trait order\",\n     @future_incompatible = FutureIncompatibleInfo {\n         reference: \"issue #56484 <https://github.com/rust-lang/rust/issues/56484>\",\n+        reason: FutureIncompatibilityReason::FutureReleaseErrorReportNow,\n     };\n }\n "}, {"sha": "2cc4d382d9df939c3983bab516809376193a34c1", "filename": "src/test/ui/lint/lint-incoherent-auto-trait-objects.stderr", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/a5e116e95f282620e0e750c0250fd09bb62023da/src%2Ftest%2Fui%2Flint%2Flint-incoherent-auto-trait-objects.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a5e116e95f282620e0e750c0250fd09bb62023da/src%2Ftest%2Fui%2Flint%2Flint-incoherent-auto-trait-objects.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-incoherent-auto-trait-objects.stderr?ref=a5e116e95f282620e0e750c0250fd09bb62023da", "patch": "@@ -37,3 +37,45 @@ LL | impl Foo for dyn Send + Sync + Send {}\n \n error: aborting due to 3 previous errors\n \n+Future incompatibility report: Future breakage diagnostic:\n+error: conflicting implementations of trait `Foo` for type `(dyn std::marker::Send + 'static)`: (E0119)\n+  --> $DIR/lint-incoherent-auto-trait-objects.rs:5:1\n+   |\n+LL | impl Foo for dyn Send {}\n+   | --------------------- first implementation here\n+LL |\n+LL | impl Foo for dyn Send + Send {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn std::marker::Send + 'static)`\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #56484 <https://github.com/rust-lang/rust/issues/56484>\n+   = note: `#[deny(order_dependent_trait_objects)]` on by default\n+\n+Future breakage diagnostic:\n+error: conflicting implementations of trait `Foo` for type `(dyn std::marker::Send + std::marker::Sync + 'static)`: (E0119)\n+  --> $DIR/lint-incoherent-auto-trait-objects.rs:11:1\n+   |\n+LL | impl Foo for dyn Send + Sync {}\n+   | ---------------------------- first implementation here\n+LL |\n+LL | impl Foo for dyn Sync + Send {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn std::marker::Send + std::marker::Sync + 'static)`\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #56484 <https://github.com/rust-lang/rust/issues/56484>\n+   = note: `#[deny(order_dependent_trait_objects)]` on by default\n+\n+Future breakage diagnostic:\n+error: conflicting implementations of trait `Foo` for type `(dyn std::marker::Send + std::marker::Sync + 'static)`: (E0119)\n+  --> $DIR/lint-incoherent-auto-trait-objects.rs:15:1\n+   |\n+LL | impl Foo for dyn Sync + Send {}\n+   | ---------------------------- first implementation here\n+...\n+LL | impl Foo for dyn Send + Sync + Send {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn std::marker::Send + std::marker::Sync + 'static)`\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #56484 <https://github.com/rust-lang/rust/issues/56484>\n+   = note: `#[deny(order_dependent_trait_objects)]` on by default\n+"}, {"sha": "58286648d4feb403b968e5128689bea45c9746dc", "filename": "src/test/ui/traits/issue-33140-hack-boundaries.stderr", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a5e116e95f282620e0e750c0250fd09bb62023da/src%2Ftest%2Fui%2Ftraits%2Fissue-33140-hack-boundaries.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a5e116e95f282620e0e750c0250fd09bb62023da/src%2Ftest%2Fui%2Ftraits%2Fissue-33140-hack-boundaries.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-33140-hack-boundaries.stderr?ref=a5e116e95f282620e0e750c0250fd09bb62023da", "patch": "@@ -66,3 +66,20 @@ error: aborting due to 8 previous errors\n \n Some errors have detailed explanations: E0119, E0751.\n For more information about an error, try `rustc --explain E0119`.\n+Future incompatibility report: Future breakage diagnostic:\n+warning: conflicting implementations of trait `Trait0` for type `(dyn std::marker::Send + 'static)`: (E0119)\n+  --> $DIR/issue-33140-hack-boundaries.rs:10:1\n+   |\n+LL | impl Trait0 for dyn Send {}\n+   | ------------------------ first implementation here\n+LL | impl Trait0 for dyn Send {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn std::marker::Send + 'static)`\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #56484 <https://github.com/rust-lang/rust/issues/56484>\n+note: the lint level is defined here\n+  --> $DIR/issue-33140-hack-boundaries.rs:2:10\n+   |\n+LL | #![allow(order_dependent_trait_objects)]\n+   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+"}, {"sha": "0af4df2aecb28d393682e59d40dc482b0daa5ddf", "filename": "src/test/ui/traits/object/issue-33140-traitobject-crate.stderr", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/a5e116e95f282620e0e750c0250fd09bb62023da/src%2Ftest%2Fui%2Ftraits%2Fobject%2Fissue-33140-traitobject-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a5e116e95f282620e0e750c0250fd09bb62023da/src%2Ftest%2Fui%2Ftraits%2Fobject%2Fissue-33140-traitobject-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fobject%2Fissue-33140-traitobject-crate.stderr?ref=a5e116e95f282620e0e750c0250fd09bb62023da", "patch": "@@ -40,3 +40,56 @@ LL | unsafe impl Trait for dyn (::std::marker::Sync) + Send + Sync { }\n \n warning: 3 warnings emitted\n \n+Future incompatibility report: Future breakage diagnostic:\n+warning: conflicting implementations of trait `Trait` for type `(dyn std::marker::Send + std::marker::Sync + 'static)`: (E0119)\n+  --> $DIR/issue-33140-traitobject-crate.rs:86:1\n+   |\n+LL | unsafe impl Trait for dyn (::std::marker::Send) + Sync { }\n+   | ------------------------------------------------------ first implementation here\n+LL | unsafe impl Trait for dyn (::std::marker::Send) + Send + Sync { }\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn std::marker::Send + std::marker::Sync + 'static)`\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #56484 <https://github.com/rust-lang/rust/issues/56484>\n+note: the lint level is defined here\n+  --> $DIR/issue-33140-traitobject-crate.rs:3:9\n+   |\n+LL | #![warn(order_dependent_trait_objects)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+Future breakage diagnostic:\n+warning: conflicting implementations of trait `Trait` for type `(dyn std::marker::Send + std::marker::Sync + 'static)`: (E0119)\n+  --> $DIR/issue-33140-traitobject-crate.rs:89:1\n+   |\n+LL | unsafe impl Trait for dyn (::std::marker::Send) + Send + Sync { }\n+   | ------------------------------------------------------------- first implementation here\n+...\n+LL | unsafe impl Trait for dyn (::std::marker::Sync) + Send { }\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn std::marker::Send + std::marker::Sync + 'static)`\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #56484 <https://github.com/rust-lang/rust/issues/56484>\n+note: the lint level is defined here\n+  --> $DIR/issue-33140-traitobject-crate.rs:3:9\n+   |\n+LL | #![warn(order_dependent_trait_objects)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+Future breakage diagnostic:\n+warning: conflicting implementations of trait `Trait` for type `(dyn std::marker::Send + std::marker::Sync + 'static)`: (E0119)\n+  --> $DIR/issue-33140-traitobject-crate.rs:93:1\n+   |\n+LL | unsafe impl Trait for dyn (::std::marker::Sync) + Send { }\n+   | ------------------------------------------------------ first implementation here\n+...\n+LL | unsafe impl Trait for dyn (::std::marker::Sync) + Send + Sync { }\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn std::marker::Send + std::marker::Sync + 'static)`\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #56484 <https://github.com/rust-lang/rust/issues/56484>\n+note: the lint level is defined here\n+  --> $DIR/issue-33140-traitobject-crate.rs:3:9\n+   |\n+LL | #![warn(order_dependent_trait_objects)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+"}]}