{"sha": "310f4707e59f696814e0e800be0b5ec6e81353d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxMGY0NzA3ZTU5ZjY5NjgxNGUwZTgwMGJlMGI1ZWM2ZTgxMzUzZDU=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-02-19T16:59:24Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-02-19T16:59:24Z"}, "message": "Make is_object_safe a method.", "tree": {"sha": "73f4179d197be22dfa92f216812efcd7469a8392", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73f4179d197be22dfa92f216812efcd7469a8392"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/310f4707e59f696814e0e800be0b5ec6e81353d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/310f4707e59f696814e0e800be0b5ec6e81353d5", "html_url": "https://github.com/rust-lang/rust/commit/310f4707e59f696814e0e800be0b5ec6e81353d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/310f4707e59f696814e0e800be0b5ec6e81353d5/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e15faf68a2b1af57d6c94392329d148882d1650", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e15faf68a2b1af57d6c94392329d148882d1650", "html_url": "https://github.com/rust-lang/rust/commit/6e15faf68a2b1af57d6c94392329d148882d1650"}], "stats": {"total": 15, "additions": 6, "deletions": 9}, "files": [{"sha": "8c40c28bb47dfda17084a957a5f0bf4de6c2e4a6", "filename": "src/librustc/query/mod.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/310f4707e59f696814e0e800be0b5ec6e81353d5/src%2Flibrustc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/310f4707e59f696814e0e800be0b5ec6e81353d5/src%2Flibrustc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fquery%2Fmod.rs?ref=310f4707e59f696814e0e800be0b5ec6e81353d5", "patch": "@@ -653,9 +653,6 @@ rustc_queries! {\n             desc { |tcx| \"building specialization graph of trait `{}`\", tcx.def_path_str(key) }\n             cache_on_disk_if { true }\n         }\n-        query is_object_safe(key: DefId) -> bool {\n-            desc { |tcx| \"determine object safety of trait `{}`\", tcx.def_path_str(key) }\n-        }\n         query object_safety_violations(key: DefId) -> Vec<traits::ObjectSafetyViolation> {\n             desc { |tcx| \"determine object safety of trait `{}`\", tcx.def_path_str(key) }\n         }"}, {"sha": "b76c637e3f1a9721337739bb7228f46513ac734b", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/310f4707e59f696814e0e800be0b5ec6e81353d5/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/310f4707e59f696814e0e800be0b5ec6e81353d5/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=310f4707e59f696814e0e800be0b5ec6e81353d5", "patch": "@@ -2998,6 +2998,10 @@ impl<'tcx> TyCtxt<'tcx> {\n         };\n         (ident, scope)\n     }\n+\n+    pub fn is_object_safe(self, key: DefId) -> bool {\n+        self.object_safety_violations(key).is_empty()\n+    }\n }\n \n #[derive(Clone, HashStable)]"}, {"sha": "1fa57f1ecf26da6a3346f854fb40ec251df941be", "filename": "src/librustc_incremental/persist/dirty_clean.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/310f4707e59f696814e0e800be0b5ec6e81353d5/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/310f4707e59f696814e0e800be0b5ec6e81353d5/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs?ref=310f4707e59f696814e0e800be0b5ec6e81353d5", "patch": "@@ -78,7 +78,7 @@ const BASE_STRUCT: &[&str] =\n const BASE_TRAIT_DEF: &[&str] = &[\n     label_strs::associated_item_def_ids,\n     label_strs::generics_of,\n-    label_strs::is_object_safe,\n+    label_strs::object_safety_violations,\n     label_strs::predicates_of,\n     label_strs::specialization_graph_of,\n     label_strs::trait_def,"}, {"sha": "f27707203466d1a41105331031c632814933527f", "filename": "src/librustc_infer/traits/object_safety.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/310f4707e59f696814e0e800be0b5ec6e81353d5/src%2Flibrustc_infer%2Ftraits%2Fobject_safety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/310f4707e59f696814e0e800be0b5ec6e81353d5/src%2Flibrustc_infer%2Ftraits%2Fobject_safety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Ftraits%2Fobject_safety.rs?ref=310f4707e59f696814e0e800be0b5ec6e81353d5", "patch": "@@ -772,10 +772,6 @@ fn contains_illegal_self_type_reference<'tcx>(\n     error\n }\n \n-fn is_object_safe(tcx: TyCtxt<'_>, trait_def_id: DefId) -> bool {\n-    tcx.object_safety_violations(trait_def_id).is_empty()\n-}\n-\n pub fn provide(providers: &mut ty::query::Providers<'_>) {\n-    *providers = ty::query::Providers { is_object_safe, object_safety_violations, ..*providers };\n+    *providers = ty::query::Providers { object_safety_violations, ..*providers };\n }"}]}