{"sha": "af80c53450d723824bc532c65687da8dd68ece80", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmODBjNTM0NTBkNzIzODI0YmM1MzJjNjU2ODdkYThkZDY4ZWNlODA=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-05-14T08:03:16Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-05-14T08:33:48Z"}, "message": "Clippy dogfood", "tree": {"sha": "c591ce985e3041304b34280f69b534efa6639731", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c591ce985e3041304b34280f69b534efa6639731"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af80c53450d723824bc532c65687da8dd68ece80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af80c53450d723824bc532c65687da8dd68ece80", "html_url": "https://github.com/rust-lang/rust/commit/af80c53450d723824bc532c65687da8dd68ece80", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af80c53450d723824bc532c65687da8dd68ece80/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8612346de1b1090b24dab50356432fce2f379242", "url": "https://api.github.com/repos/rust-lang/rust/commits/8612346de1b1090b24dab50356432fce2f379242", "html_url": "https://github.com/rust-lang/rust/commit/8612346de1b1090b24dab50356432fce2f379242"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "370d319dc15716b8fde1e08445efb61d76bc8061", "filename": "clippy_lints/src/utils/higher.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af80c53450d723824bc532c65687da8dd68ece80/clippy_lints%2Fsrc%2Futils%2Fhigher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af80c53450d723824bc532c65687da8dd68ece80/clippy_lints%2Fsrc%2Futils%2Fhigher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhigher.rs?ref=af80c53450d723824bc532c65687da8dd68ece80", "patch": "@@ -50,7 +50,7 @@ pub struct Range<'a> {\n pub fn range<'a, 'b, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &'b hir::Expr) -> Option<Range<'b>> {\n     /// Finds the field named `name` in the field. Always return `Some` for\n     /// convenience.\n-    fn get_field<'a>(name: Symbol, fields: &'a [hir::Field]) -> Option<&'a hir::Expr> {\n+    fn get_field(name: Symbol, fields: &[hir::Field]) -> Option<&hir::Expr> {\n         let expr = &fields.iter().find(|field| field.ident.name == name)?.expr;\n \n         Some(expr)"}, {"sha": "275fd99fd5efe99440d6f1ff85f1f675d9178116", "filename": "clippy_lints/src/utils/internal_lints.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/af80c53450d723824bc532c65687da8dd68ece80/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af80c53450d723824bc532c65687da8dd68ece80/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs?ref=af80c53450d723824bc532c65687da8dd68ece80", "patch": "@@ -1,5 +1,4 @@\n use crate::utils::{match_type, match_def_path, paths, span_help_and_lint, span_lint, walk_ptrs_ty};\n-use crate::utils::sym;\n use if_chain::if_chain;\n use rustc::hir;\n use rustc::hir::def::{DefKind, Res};\n@@ -8,9 +7,8 @@ use rustc::hir::*;\n use rustc::lint::{EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint_pass, declare_tool_lint, impl_lint_pass};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n-use syntax::ast::{Crate as AstCrate, ItemKind, Name};\n+use syntax::ast::{Crate as AstCrate, Name};\n use syntax::source_map::Span;\n-use syntax::symbol::LocalInternedString;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for various things we like to keep tidy in clippy.\n@@ -76,7 +74,9 @@ declare_clippy_lint! {\n declare_lint_pass!(ClippyLintsInternal => [CLIPPY_LINTS_INTERNAL]);\n \n impl EarlyLintPass for ClippyLintsInternal {\n-    fn check_crate(&mut self, cx: &EarlyContext<'_>, krate: &AstCrate) {\n+    fn check_crate(&mut self, _cx: &EarlyContext<'_>, _krate: &AstCrate) {\n+        /*\n+        FIXME: turn back on when we get rid of all the lazy_statics\n         if let Some(utils) = krate.module.items.iter().find(|item| item.ident.name == *sym::utils) {\n             if let ItemKind::Mod(ref utils_mod) = utils.node {\n                 if let Some(paths) = utils_mod.items.iter().find(|item| item.ident.name == *sym::paths) {\n@@ -101,6 +101,7 @@ impl EarlyLintPass for ClippyLintsInternal {\n                 }\n             }\n         }\n+        */\n     }\n }\n "}, {"sha": "e08a83dd54c158c2021a48218dccc1919562b60e", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af80c53450d723824bc532c65687da8dd68ece80/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af80c53450d723824bc532c65687da8dd68ece80/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=af80c53450d723824bc532c65687da8dd68ece80", "patch": "@@ -1028,7 +1028,7 @@ pub fn has_iter_method(cx: &LateContext<'_, '_>, probably_ref_ty: Ty<'_>) -> Opt\n         _ => return None,\n     };\n \n-    for path in into_iter_collections.iter() {\n+    for path in &into_iter_collections {\n         if match_def_path(cx, def_id, path) {\n             return Some(*path.last().unwrap());\n         }"}]}