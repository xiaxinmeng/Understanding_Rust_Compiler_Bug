{"sha": "bd2e12609f190e7bf206dac2de2d68dbb4b1b5e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkMmUxMjYwOWYxOTBlN2JmMjA2ZGFjMmRlMmQ2OGRiYjRiMWI1ZTY=", "commit": {"author": {"name": "Dirk Leifeld", "email": "leifeld@posteo.de", "date": "2019-03-09T18:16:54Z"}, "committer": {"name": "Dirk Leifeld", "email": "leifeld@posteo.de", "date": "2019-03-09T18:16:54Z"}, "message": "Revert \"Revert \"Add clamp functions\"\"", "tree": {"sha": "1ea51da28d589f5d354ad0830a55c1f651c18370", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ea51da28d589f5d354ad0830a55c1f651c18370"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd2e12609f190e7bf206dac2de2d68dbb4b1b5e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd2e12609f190e7bf206dac2de2d68dbb4b1b5e6", "html_url": "https://github.com/rust-lang/rust/commit/bd2e12609f190e7bf206dac2de2d68dbb4b1b5e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd2e12609f190e7bf206dac2de2d68dbb4b1b5e6/comments", "author": {"login": "EdorianDark", "id": 5777938, "node_id": "MDQ6VXNlcjU3Nzc5Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/5777938?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdorianDark", "html_url": "https://github.com/EdorianDark", "followers_url": "https://api.github.com/users/EdorianDark/followers", "following_url": "https://api.github.com/users/EdorianDark/following{/other_user}", "gists_url": "https://api.github.com/users/EdorianDark/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdorianDark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdorianDark/subscriptions", "organizations_url": "https://api.github.com/users/EdorianDark/orgs", "repos_url": "https://api.github.com/users/EdorianDark/repos", "events_url": "https://api.github.com/users/EdorianDark/events{/privacy}", "received_events_url": "https://api.github.com/users/EdorianDark/received_events", "type": "User", "site_admin": false}, "committer": {"login": "EdorianDark", "id": 5777938, "node_id": "MDQ6VXNlcjU3Nzc5Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/5777938?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdorianDark", "html_url": "https://github.com/EdorianDark", "followers_url": "https://api.github.com/users/EdorianDark/followers", "following_url": "https://api.github.com/users/EdorianDark/following{/other_user}", "gists_url": "https://api.github.com/users/EdorianDark/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdorianDark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdorianDark/subscriptions", "organizations_url": "https://api.github.com/users/EdorianDark/orgs", "repos_url": "https://api.github.com/users/EdorianDark/repos", "events_url": "https://api.github.com/users/EdorianDark/events{/privacy}", "received_events_url": "https://api.github.com/users/EdorianDark/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "097c04cf433048585dd9e3f63b30e03cc3509e4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/097c04cf433048585dd9e3f63b30e03cc3509e4b", "html_url": "https://github.com/rust-lang/rust/commit/097c04cf433048585dd9e3f63b30e03cc3509e4b"}], "stats": {"total": 66, "additions": 66, "deletions": 0}, "files": [{"sha": "259135b9ca0abc4e3792e574ca430513b505d73f", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/bd2e12609f190e7bf206dac2de2d68dbb4b1b5e6/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd2e12609f190e7bf206dac2de2d68dbb4b1b5e6/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=bd2e12609f190e7bf206dac2de2d68dbb4b1b5e6", "patch": "@@ -567,6 +567,32 @@ pub trait Ord: Eq + PartialOrd<Self> {\n     where Self: Sized {\n         if self <= other { self } else { other }\n     }\n+\n+    /// Returns max if self is greater than max, and min if self is less than min.\n+    /// Otherwise this will return self.  Panics if min > max.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(clamp)]\n+    ///\n+    /// assert!((-3).clamp(-2, 1) == -2);\n+    /// assert!(0.clamp(-2, 1) == 0);\n+    /// assert!(2.clamp(-2, 1) == 1);\n+    /// ```\n+    #[unstable(feature = \"clamp\", issue = \"44095\")]\n+    fn clamp(self, min: Self, max: Self) -> Self\n+    where Self: Sized {\n+        assert!(min <= max);\n+        if self < min {\n+            min\n+        }\n+        else if self > max {\n+            max\n+        } else {\n+            self\n+        }\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "df4dc2c7791257ff54f87d0d90c62729ba6b9393", "filename": "src/libstd/f32.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/bd2e12609f190e7bf206dac2de2d68dbb4b1b5e6/src%2Flibstd%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd2e12609f190e7bf206dac2de2d68dbb4b1b5e6/src%2Flibstd%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff32.rs?ref=bd2e12609f190e7bf206dac2de2d68dbb4b1b5e6", "patch": "@@ -956,6 +956,26 @@ impl f32 {\n     pub fn atanh(self) -> f32 {\n         0.5 * ((2.0 * self) / (1.0 - self)).ln_1p()\n     }\n+    /// Returns max if self is greater than max, and min if self is less than min.\n+    /// Otherwise this returns self.  Panics if min > max, min equals NaN, or max equals NaN.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// assert!((-3.0f32).clamp(-2.0f32, 1.0f32) == -2.0f32);\n+    /// assert!((0.0f32).clamp(-2.0f32, 1.0f32) == 0.0f32);\n+    /// assert!((2.0f32).clamp(-2.0f32, 1.0f32) == 1.0f32);\n+    /// ```\n+    #[unstable(feature = \"clamp\", issue = \"44095\")]\n+    #[inline]\n+    pub fn clamp(self, min: f32, max: f32) -> f32 {\n+        assert!(min <= max);\n+        let mut x = self;\n+        if x < min { x = min; }\n+        if x > max { x = max; }\n+        x\n+    }\n+\n }\n \n #[cfg(test)]"}, {"sha": "00e7f27912817cabe0f57d37e5bbfc82f466d4f2", "filename": "src/libstd/f64.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/bd2e12609f190e7bf206dac2de2d68dbb4b1b5e6/src%2Flibstd%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd2e12609f190e7bf206dac2de2d68dbb4b1b5e6/src%2Flibstd%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff64.rs?ref=bd2e12609f190e7bf206dac2de2d68dbb4b1b5e6", "patch": "@@ -878,6 +878,26 @@ impl f64 {\n         0.5 * ((2.0 * self) / (1.0 - self)).ln_1p()\n     }\n \n+    /// Returns max if self is greater than max, and min if self is less than min.\n+    /// Otherwise this returns self.  Panics if min > max, min equals NaN, or max equals NaN.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// assert!((-3.0f64).clamp(-2.0f64, 1.0f64) == -2.0f64);\n+    /// assert!((0.0f64).clamp(-2.0f64, 1.0f64) == 0.0f64);\n+    /// assert!((2.0f64).clamp(-2.0f64, 1.0f64) == 1.0f64);\n+    /// ```\n+    #[unstable(feature = \"clamp\", issue = \"44095\")]\n+    #[inline]\n+    pub fn clamp(self, min: f64, max: f64) -> f64 {\n+        assert!(min <= max);\n+        let mut x = self;\n+        if x < min { x = min; }\n+        if x > max { x = max; }\n+        x\n+    }\n+\n     // Solaris/Illumos requires a wrapper around log, log2, and log10 functions\n     // because of their non-standard behavior (e.g., log(-n) returns -Inf instead\n     // of expected NaN)."}]}