{"sha": "56e9ec547a8b4b39c0da7ea66d1575b9f78da1a8", "node_id": "C_kwDOAAsO6NoAKDU2ZTllYzU0N2E4YjRiMzljMGRhN2VhNjZkMTU3NWI5Zjc4ZGExYTg", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-09-10T01:04:27Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-09-10T01:04:27Z"}, "message": "rustdoc: implement glob shadowing when doing local inlining", "tree": {"sha": "b3cde2ff1544d7019a8155c4be11dc7291ed29d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3cde2ff1544d7019a8155c4be11dc7291ed29d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56e9ec547a8b4b39c0da7ea66d1575b9f78da1a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56e9ec547a8b4b39c0da7ea66d1575b9f78da1a8", "html_url": "https://github.com/rust-lang/rust/commit/56e9ec547a8b4b39c0da7ea66d1575b9f78da1a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56e9ec547a8b4b39c0da7ea66d1575b9f78da1a8/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "624f972358b2d1a33ce50bc27d33074be24981e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/624f972358b2d1a33ce50bc27d33074be24981e0", "html_url": "https://github.com/rust-lang/rust/commit/624f972358b2d1a33ce50bc27d33074be24981e0"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "c27ac0ac40e1dbe200e196510df111b12522da1e", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/56e9ec547a8b4b39c0da7ea66d1575b9f78da1a8/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56e9ec547a8b4b39c0da7ea66d1575b9f78da1a8/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=56e9ec547a8b4b39c0da7ea66d1575b9f78da1a8", "patch": "@@ -164,8 +164,20 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n         self.inside_public_path &= self.cx.tcx.visibility(def_id).is_public();\n         for &i in m.item_ids {\n             let item = self.cx.tcx.hir().item(i);\n+            if matches!(item.kind, hir::ItemKind::Use(_, hir::UseKind::Glob)) {\n+                continue;\n+            }\n             self.visit_item(item, None, &mut om);\n         }\n+        for &i in m.item_ids {\n+            let item = self.cx.tcx.hir().item(i);\n+            // To match the way import precedence works, visit glob imports last.\n+            // Later passes in rustdoc will de-duplicate by name and kind, so if glob-\n+            // imported items appear last, then they'll be the ones that get discarded.\n+            if matches!(item.kind, hir::ItemKind::Use(_, hir::UseKind::Glob)) {\n+                self.visit_item(item, None, &mut om);\n+            }\n+        }\n         self.inside_public_path = orig_inside_public_path;\n         om\n     }"}]}