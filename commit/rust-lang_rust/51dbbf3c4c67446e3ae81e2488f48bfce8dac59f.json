{"sha": "51dbbf3c4c67446e3ae81e2488f48bfce8dac59f", "node_id": "C_kwDOAAsO6NoAKDUxZGJiZjNjNGM2NzQ0NmUzYWU4MWUyNDg4ZjQ4YmZjZThkYWM1OWY", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2022-01-10T19:20:46Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2022-01-10T21:22:17Z"}, "message": "Refactor test utils", "tree": {"sha": "6694f112cc810bf4097f41c04abe64e3385f5bf1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6694f112cc810bf4097f41c04abe64e3385f5bf1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51dbbf3c4c67446e3ae81e2488f48bfce8dac59f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51dbbf3c4c67446e3ae81e2488f48bfce8dac59f", "html_url": "https://github.com/rust-lang/rust/commit/51dbbf3c4c67446e3ae81e2488f48bfce8dac59f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51dbbf3c4c67446e3ae81e2488f48bfce8dac59f/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e66ecf6f0e137196e67daf0ba0982766a2c91175", "url": "https://api.github.com/repos/rust-lang/rust/commits/e66ecf6f0e137196e67daf0ba0982766a2c91175", "html_url": "https://github.com/rust-lang/rust/commit/e66ecf6f0e137196e67daf0ba0982766a2c91175"}], "stats": {"total": 50, "additions": 27, "deletions": 23}, "files": [{"sha": "4dbe71e4b6ad6ae032be2c43649c6deba8aecf37", "filename": "tests/cargo/mod.rs", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e66ecf6f0e137196e67daf0ba0982766a2c91175/tests%2Fcargo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e66ecf6f0e137196e67daf0ba0982766a2c91175/tests%2Fcargo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcargo%2Fmod.rs?ref=e66ecf6f0e137196e67daf0ba0982766a2c91175", "patch": "@@ -1,4 +0,0 @@\n-#[must_use]\n-pub fn is_rustc_test_suite() -> bool {\n-    option_env!(\"RUSTC_TEST_SUITE\").is_some()\n-}"}, {"sha": "531890c863f5efeda3642e73a67029ea1e879f63", "filename": "tests/compile-test.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/51dbbf3c4c67446e3ae81e2488f48bfce8dac59f/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51dbbf3c4c67446e3ae81e2488f48bfce8dac59f/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=51dbbf3c4c67446e3ae81e2488f48bfce8dac59f", "patch": "@@ -1,4 +1,5 @@\n #![feature(test)] // compiletest_rs requires this attribute\n+#![feature(once_cell)]\n #![cfg_attr(feature = \"deny-warnings\", deny(warnings))]\n #![warn(rust_2018_idioms, unused_lifetimes)]\n \n@@ -11,8 +12,9 @@ use std::ffi::{OsStr, OsString};\n use std::fs;\n use std::io;\n use std::path::{Path, PathBuf};\n+use test_utils::IS_RUSTC_TEST_SUITE;\n \n-mod cargo;\n+mod test_utils;\n \n // whether to run internal tests or not\n const RUN_INTERNAL_TESTS: bool = cfg!(feature = \"internal\");\n@@ -304,7 +306,7 @@ fn run_ui_cargo(config: &mut compiletest::Config) {\n         Ok(result)\n     }\n \n-    if cargo::is_rustc_test_suite() {\n+    if IS_RUSTC_TEST_SUITE {\n         return;\n     }\n "}, {"sha": "42e1628f6422e15575cf4340ea768a8d572e0e5b", "filename": "tests/dogfood.rs", "status": "modified", "additions": 10, "deletions": 17, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/51dbbf3c4c67446e3ae81e2488f48bfce8dac59f/tests%2Fdogfood.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51dbbf3c4c67446e3ae81e2488f48bfce8dac59f/tests%2Fdogfood.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdogfood.rs?ref=51dbbf3c4c67446e3ae81e2488f48bfce8dac59f", "patch": "@@ -7,28 +7,21 @@\n #![cfg_attr(feature = \"deny-warnings\", deny(warnings))]\n #![warn(rust_2018_idioms, unused_lifetimes)]\n \n-use std::lazy::SyncLazy;\n use std::path::PathBuf;\n use std::process::Command;\n+use test_utils::{CARGO_CLIPPY_PATH, IS_RUSTC_TEST_SUITE};\n \n-mod cargo;\n-\n-static CLIPPY_PATH: SyncLazy<PathBuf> = SyncLazy::new(|| {\n-    let mut path = std::env::current_exe().unwrap();\n-    assert!(path.pop()); // deps\n-    path.set_file_name(\"cargo-clippy\");\n-    path\n-});\n+mod test_utils;\n \n #[test]\n fn dogfood_clippy() {\n     // run clippy on itself and fail the test if lint warnings are reported\n-    if cargo::is_rustc_test_suite() {\n+    if IS_RUSTC_TEST_SUITE {\n         return;\n     }\n     let root_dir = PathBuf::from(env!(\"CARGO_MANIFEST_DIR\"));\n \n-    let mut command = Command::new(&*CLIPPY_PATH);\n+    let mut command = Command::new(&*CARGO_CLIPPY_PATH);\n     command\n         .current_dir(root_dir)\n         .env(\"CARGO_INCREMENTAL\", \"0\")\n@@ -55,7 +48,7 @@ fn dogfood_clippy() {\n }\n \n fn test_no_deps_ignores_path_deps_in_workspaces() {\n-    if cargo::is_rustc_test_suite() {\n+    if IS_RUSTC_TEST_SUITE {\n         return;\n     }\n     let root = PathBuf::from(env!(\"CARGO_MANIFEST_DIR\"));\n@@ -74,7 +67,7 @@ fn test_no_deps_ignores_path_deps_in_workspaces() {\n \n     // `path_dep` is a path dependency of `subcrate` that would trigger a denied lint.\n     // Make sure that with the `--no-deps` argument Clippy does not run on `path_dep`.\n-    let output = Command::new(&*CLIPPY_PATH)\n+    let output = Command::new(&*CARGO_CLIPPY_PATH)\n         .current_dir(&cwd)\n         .env(\"CARGO_INCREMENTAL\", \"0\")\n         .arg(\"clippy\")\n@@ -93,7 +86,7 @@ fn test_no_deps_ignores_path_deps_in_workspaces() {\n \n     let lint_path_dep = || {\n         // Test that without the `--no-deps` argument, `path_dep` is linted.\n-        let output = Command::new(&*CLIPPY_PATH)\n+        let output = Command::new(&*CARGO_CLIPPY_PATH)\n             .current_dir(&cwd)\n             .env(\"CARGO_INCREMENTAL\", \"0\")\n             .arg(\"clippy\")\n@@ -119,7 +112,7 @@ fn test_no_deps_ignores_path_deps_in_workspaces() {\n     lint_path_dep();\n \n     let successful_build = || {\n-        let output = Command::new(&*CLIPPY_PATH)\n+        let output = Command::new(&*CARGO_CLIPPY_PATH)\n             .current_dir(&cwd)\n             .env(\"CARGO_INCREMENTAL\", \"0\")\n             .arg(\"clippy\")\n@@ -153,7 +146,7 @@ fn test_no_deps_ignores_path_deps_in_workspaces() {\n #[test]\n fn dogfood_subprojects() {\n     // run clippy on remaining subprojects and fail the test if lint warnings are reported\n-    if cargo::is_rustc_test_suite() {\n+    if IS_RUSTC_TEST_SUITE {\n         return;\n     }\n \n@@ -218,7 +211,7 @@ fn run_metadata_collection_lint() {\n fn run_clippy_for_project(project: &str) {\n     let root_dir = PathBuf::from(env!(\"CARGO_MANIFEST_DIR\"));\n \n-    let mut command = Command::new(&*CLIPPY_PATH);\n+    let mut command = Command::new(&*test_utils::CARGO_CLIPPY_PATH);\n \n     command\n         .current_dir(root_dir.join(project))"}, {"sha": "8a4de3f6def9094b9af6ca4ba0931834686f1c73", "filename": "tests/test_utils/mod.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/51dbbf3c4c67446e3ae81e2488f48bfce8dac59f/tests%2Ftest_utils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51dbbf3c4c67446e3ae81e2488f48bfce8dac59f/tests%2Ftest_utils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftest_utils%2Fmod.rs?ref=51dbbf3c4c67446e3ae81e2488f48bfce8dac59f", "patch": "@@ -0,0 +1,13 @@\n+#![allow(dead_code)] // see https://github.com/rust-lang/rust/issues/46379\n+\n+use std::lazy::SyncLazy;\n+use std::path::PathBuf;\n+\n+pub static CARGO_CLIPPY_PATH: SyncLazy<PathBuf> = SyncLazy::new(|| {\n+    let mut path = std::env::current_exe().unwrap();\n+    assert!(path.pop()); // deps\n+    path.set_file_name(\"cargo-clippy\");\n+    path\n+});\n+\n+pub const IS_RUSTC_TEST_SUITE: bool = option_env!(\"RUSTC_TEST_SUITE\").is_some();"}]}