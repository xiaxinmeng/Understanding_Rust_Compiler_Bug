{"sha": "d08232b10d7085e1f5be96b87cca880f6ee56c9e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwODIzMmIxMGQ3MDg1ZTFmNWJlOTZiODdjY2E4ODBmNmVlNTZjOWU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-01T13:35:02Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-01T13:35:41Z"}, "message": "Cleanup imports", "tree": {"sha": "d63467117b4b5e6f625902634ab310749ab09913", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d63467117b4b5e6f625902634ab310749ab09913"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d08232b10d7085e1f5be96b87cca880f6ee56c9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d08232b10d7085e1f5be96b87cca880f6ee56c9e", "html_url": "https://github.com/rust-lang/rust/commit/d08232b10d7085e1f5be96b87cca880f6ee56c9e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d08232b10d7085e1f5be96b87cca880f6ee56c9e/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ae247f03c639d6e704159df7f0120466afc3c30", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ae247f03c639d6e704159df7f0120466afc3c30", "html_url": "https://github.com/rust-lang/rust/commit/7ae247f03c639d6e704159df7f0120466afc3c30"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "0fdbc63dd236f03dee0b7dd08fdf6c106de820aa", "filename": "crates/ra_assists/src/handlers/change_lifetime_anon_to_named.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d08232b10d7085e1f5be96b87cca880f6ee56c9e/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_lifetime_anon_to_named.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d08232b10d7085e1f5be96b87cca880f6ee56c9e/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_lifetime_anon_to_named.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_lifetime_anon_to_named.rs?ref=d08232b10d7085e1f5be96b87cca880f6ee56c9e", "patch": "@@ -1,8 +1,11 @@\n-use crate::{assist_context::AssistBuilder, AssistContext, AssistId, Assists};\n-use ast::{NameOwner, ParamList, TypeAscriptionOwner, TypeParamList, TypeRef};\n-use ra_syntax::{ast, ast::TypeParamsOwner, AstNode, SyntaxKind, TextRange, TextSize};\n+use ra_syntax::{\n+    ast::{self, NameOwner, TypeAscriptionOwner, TypeParamsOwner},\n+    AstNode, SyntaxKind, TextRange, TextSize,\n+};\n use rustc_hash::FxHashSet;\n \n+use crate::{assist_context::AssistBuilder, AssistContext, AssistId, Assists};\n+\n static ASSIST_NAME: &str = \"change_lifetime_anon_to_named\";\n static ASSIST_LABEL: &str = \"Give anonymous lifetime a name\";\n \n@@ -52,7 +55,7 @@ fn generate_fn_def_assist(\n     fn_def: &ast::FnDef,\n     lifetime_loc: TextRange,\n ) -> Option<()> {\n-    let param_list: ParamList = fn_def.param_list()?;\n+    let param_list: ast::ParamList = fn_def.param_list()?;\n     let new_lifetime_param = generate_unique_lifetime_param_name(&fn_def.type_param_list())?;\n     let end_of_fn_ident = fn_def.name()?.ident_token()?.text_range().end();\n     let self_param =\n@@ -67,7 +70,7 @@ fn generate_fn_def_assist(\n         let fn_params_without_lifetime: Vec<_> = param_list\n             .params()\n             .filter_map(|param| match param.ascribed_type() {\n-                Some(TypeRef::ReferenceType(ascribed_type))\n+                Some(ast::TypeRef::ReferenceType(ascribed_type))\n                     if ascribed_type.lifetime_token() == None =>\n                 {\n                     Some(ascribed_type.amp_token()?.text_range().end())\n@@ -106,7 +109,7 @@ fn generate_impl_def_assist(\n /// Given a type parameter list, generate a unique lifetime parameter name\n /// which is not in the list\n fn generate_unique_lifetime_param_name(\n-    existing_type_param_list: &Option<TypeParamList>,\n+    existing_type_param_list: &Option<ast::TypeParamList>,\n ) -> Option<char> {\n     match existing_type_param_list {\n         Some(type_params) => {"}]}