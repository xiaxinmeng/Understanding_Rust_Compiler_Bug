{"sha": "5a184acfc6e5fc99993aae74d94e47ca5812dd08", "node_id": "C_kwDOAAsO6NoAKDVhMTg0YWNmYzZlNWZjOTk5OTNhYWU3NGQ5NGU0N2NhNTgxMmRkMDg", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-07-26T18:11:44Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-08-04T14:26:53Z"}, "message": "There's no need to check binders_to_ignore using the old code anymore", "tree": {"sha": "fdb061cf13eebd35c12d9bb73c85263e79330546", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fdb061cf13eebd35c12d9bb73c85263e79330546"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a184acfc6e5fc99993aae74d94e47ca5812dd08", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmLr1y0ACgkQgTGiTgx5\n769ixxAAsAjoPA8QsdbYgFLcOo4UTG8BAmuXjXDwzwak2yihbVuaIJRc+w6F4KB4\nsHsOTg6V2/n4qLPP2eAXdcYMNmLrBzdpv9Sh1n+ns3N2qV8ktovWpv6yaYuUs7VF\ng3G2vP9ihTmrUo//N3BcKrP5grUcWKp0PugvzwuvhsR4Ip4Fq4AQY6CR8Djixj/d\nL8GoBqkNbyFgdrKdI3kWasLb8qygwCH6MZm7F8OnXPykPVi4DMV2dSSpxDmvYxSf\naT1K1O5M7lk9RkOu4KNpcmAY/6XXlM3s3agdxPSSQ37C1B+EzJyu7R/DlSkqusaJ\nzFhCXyTDdjDNZR2F/omm8aGqpnTT11+mCjxgnKrKItwvqVipRCrd7JZFFFgYom+d\nTXfiAKpqmUjOkq6Jy2PPfN50GQ/HSe6n8pqisW4Ybh1iIQkY7wXPF75ef+4Yag/F\nqQKNEjVOt5qyFDUUOzYk5M1ScUbBeeOMTYd+SkaLBSmI5UTA7acHGHJf6IZuYOeU\n9cDitZ7myCvWS+qEdRLf7doqQB2cz32Hj1UgIGWPkyU+ChoK7VrnN3xxPxe3CQhN\n1A9HSc81tFSqR02szN6fQWkT/RbjYLzAFdx0mHd95RW/0dTTNM+D4P5Q+paZUEXT\nxJrXpqclhQ0mOApNvTWuBP0+SXgNbTxicFzLIrBfVVIvARTC9Jg=\n=+3KF\n-----END PGP SIGNATURE-----", "payload": "tree fdb061cf13eebd35c12d9bb73c85263e79330546\nparent 19dcbd151b9c8a061eb96a70c9a39a3f9796a701\nauthor Santiago Pastorino <spastorino@gmail.com> 1658859104 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1659623213 -0300\n\nThere's no need to check binders_to_ignore using the old code anymore\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a184acfc6e5fc99993aae74d94e47ca5812dd08", "html_url": "https://github.com/rust-lang/rust/commit/5a184acfc6e5fc99993aae74d94e47ca5812dd08", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a184acfc6e5fc99993aae74d94e47ca5812dd08/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19dcbd151b9c8a061eb96a70c9a39a3f9796a701", "url": "https://api.github.com/repos/rust-lang/rust/commits/19dcbd151b9c8a061eb96a70c9a39a3f9796a701", "html_url": "https://github.com/rust-lang/rust/commit/19dcbd151b9c8a061eb96a70c9a39a3f9796a701"}], "stats": {"total": 18, "additions": 8, "deletions": 10}, "files": [{"sha": "340f88e7540ebba33345d22386d0907ddea3767f", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5a184acfc6e5fc99993aae74d94e47ca5812dd08/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a184acfc6e5fc99993aae74d94e47ca5812dd08/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=5a184acfc6e5fc99993aae74d94e47ca5812dd08", "patch": "@@ -1471,11 +1471,10 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n             if let Some(mut captured_lifetimes) = self.captured_lifetimes.take() {\n                 match res {\n                     LifetimeRes::Param { param, binder } => {\n-                        if !captured_lifetimes.binders_to_ignore.contains(&binder)\n-                            && !binders_to_ignore\n-                                .get(&lifetime.id)\n-                                .unwrap_or(&Vec::new())\n-                                .contains(&binder)\n+                        if !binders_to_ignore\n+                            .get(&lifetime.id)\n+                            .unwrap_or(&Vec::new())\n+                            .contains(&binder)\n                         {\n                             match captured_lifetimes.captures.entry(param) {\n                                 Entry::Occupied(_) => {}\n@@ -1497,11 +1496,10 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n \n                     LifetimeRes::Fresh { param, binder } => {\n                         debug_assert_eq!(ident.name, kw::UnderscoreLifetime);\n-                        if !captured_lifetimes.binders_to_ignore.contains(&binder)\n-                            && !binders_to_ignore\n-                                .get(&lifetime.id)\n-                                .unwrap_or(&Vec::new())\n-                                .contains(&binder)\n+                        if !binders_to_ignore\n+                            .get(&lifetime.id)\n+                            .unwrap_or(&Vec::new())\n+                            .contains(&binder)\n                         {\n                             let param = self.local_def_id(param);\n                             match captured_lifetimes.captures.entry(param) {"}]}