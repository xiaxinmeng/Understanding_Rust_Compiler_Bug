{"sha": "195489d4f0101add826d07b28c383410478e6f1e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5NTQ4OWQ0ZjAxMDFhZGQ4MjZkMDdiMjhjMzgzNDEwNDc4ZTZmMWU=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2018-05-06T22:44:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-05-06T22:44:00Z"}, "message": "Merge pull request #2683 from dzamlo/master\n\nUpdate README.md to reflect change in #2539", "tree": {"sha": "a5e7cd0c09cc82ee2209805c27786881ac8c2e20", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5e7cd0c09cc82ee2209805c27786881ac8c2e20"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/195489d4f0101add826d07b28c383410478e6f1e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJa74UwCRBK7hj4Ov3rIwAAdHIIAIUkU2zZai5KcycZX+9VhrCc\nGLaMtlO+YxWqU6jus5P77AjLrkFy4h7L4ODLdARPC36FPqQCA2yKgMb/vQoitIMc\nfKSHF/WPAn5qgm9bO+hhxvjZc7VYzBMnEQJ0hf3SXC4/95bySYT3PIORSjPQRhup\nXOKppgY1w1AByzRCSURQHsKaotJ7YFlnSSCcpxECCn33YoBAEnD6wFxwbza1m0Zl\nKmuEJbJeioYgbwqRf1DzDcsO8QBuhhnkgwiqrR4jlPnEE3c4UHegv5xcUT2EcAYB\n0tw7S5ZmVJDUoBWmNSc9IV9l4YKF3LuJ5vxLD2Bx6JsAZGjReIBFl6RyfFDSZKY=\n=QDmt\n-----END PGP SIGNATURE-----\n", "payload": "tree a5e7cd0c09cc82ee2209805c27786881ac8c2e20\nparent 3762d80d68103f9ec20e4db405b631dc1a9729b2\nparent c2ebb06a859eb48f34e7d59fb3256e68c1d28984\nauthor Nick Cameron <nrc@ncameron.org> 1525646640 +1200\ncommitter GitHub <noreply@github.com> 1525646640 +1200\n\nMerge pull request #2683 from dzamlo/master\n\nUpdate README.md to reflect change in #2539"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/195489d4f0101add826d07b28c383410478e6f1e", "html_url": "https://github.com/rust-lang/rust/commit/195489d4f0101add826d07b28c383410478e6f1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/195489d4f0101add826d07b28c383410478e6f1e/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3762d80d68103f9ec20e4db405b631dc1a9729b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/3762d80d68103f9ec20e4db405b631dc1a9729b2", "html_url": "https://github.com/rust-lang/rust/commit/3762d80d68103f9ec20e4db405b631dc1a9729b2"}, {"sha": "c2ebb06a859eb48f34e7d59fb3256e68c1d28984", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2ebb06a859eb48f34e7d59fb3256e68c1d28984", "html_url": "https://github.com/rust-lang/rust/commit/c2ebb06a859eb48f34e7d59fb3256e68c1d28984"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "4322901d18a74b45f79e7b9efa2f16166cf757b6", "filename": "README.md", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/195489d4f0101add826d07b28c383410478e6f1e/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/195489d4f0101add826d07b28c383410478e6f1e/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=195489d4f0101add826d07b28c383410478e6f1e", "patch": "@@ -113,7 +113,6 @@ You'll probably want to specify the write mode. Currently, there are modes for\n * `display` Will print the formatted files to stdout.\n * `plain` Also writes to stdout, but with no metadata.\n * `diff` Will print a diff between the original files and formatted files to stdout.\n-         Will also exit with an error code if there are any differences.\n * `check` Checks if the program's formatting matches what rustfmt would do. Silently exits\n           with code 0 if so, emits a diff and exits with code 1 if not. This option is\n           designed to be run in CI-like where a non-zero exit signifies incorrect formatting.\n@@ -166,7 +165,7 @@ You can run `rustfmt --help` for more information.\n ## Checking style on a CI server\n \n To keep your code base consistently formatted, it can be helpful to fail the CI build\n-when a pull request contains unformatted code. Using `--write-mode=diff` instructs\n+when a pull request contains unformatted code. Using `--write-mode=check` instructs\n rustfmt to exit with an error code if the input is not formatted correctly.\n It will also print any found differences.\n \n@@ -177,7 +176,7 @@ language: rust\n before_script:\n - rustup component add rustfmt-preview\n script:\n-- cargo fmt --all -- --write-mode=diff\n+- cargo fmt --all -- --write-mode=check\n - cargo build\n - cargo test\n ```"}]}