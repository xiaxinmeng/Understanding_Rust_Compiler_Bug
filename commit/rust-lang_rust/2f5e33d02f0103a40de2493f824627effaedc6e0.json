{"sha": "2f5e33d02f0103a40de2493f824627effaedc6e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmNWUzM2QwMmYwMTAzYTQwZGUyNDkzZjgyNDYyN2VmZmFlZGM2ZTA=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@gmail", "date": "2013-06-27T17:27:06Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@gmail", "date": "2013-06-27T17:28:37Z"}, "message": "debuginfo: Some corrections after review.", "tree": {"sha": "3303a443ce7e1e328011c7b8f4bf5be00ee2f369", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3303a443ce7e1e328011c7b8f4bf5be00ee2f369"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f5e33d02f0103a40de2493f824627effaedc6e0", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f5e33d02f0103a40de2493f824627effaedc6e0", "html_url": "https://github.com/rust-lang/rust/commit/2f5e33d02f0103a40de2493f824627effaedc6e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f5e33d02f0103a40de2493f824627effaedc6e0/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42dbae7f2a7dbdc414646e706eeffacdf7d4b338", "url": "https://api.github.com/repos/rust-lang/rust/commits/42dbae7f2a7dbdc414646e706eeffacdf7d4b338", "html_url": "https://github.com/rust-lang/rust/commit/42dbae7f2a7dbdc414646e706eeffacdf7d4b338"}], "stats": {"total": 45, "additions": 16, "deletions": 29}, "files": [{"sha": "a42f20ea39ca3e6b050e6c7851e6b324bc316c03", "filename": "src/librustc/middle/trans/debuginfo.rs", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/2f5e33d02f0103a40de2493f824627effaedc6e0/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f5e33d02f0103a40de2493f824627effaedc6e0/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs?ref=2f5e33d02f0103a40de2493f824627effaedc6e0", "patch": "@@ -559,31 +559,6 @@ impl StructContext {\n         roundup(self.total_size, self.align)\n     }\n \n-    //fn verify_against_struct_or_tuple_type(&self, t: ty::t, ccx: &mut CrateContext) {\n-        // let repr = adt::represent_type(ccx, t);\n-\n-        // match *repr {\n-        //     Univariant(*) =>\n-        //     {\n-        //         let size_with_alignment = self.get_total_size_with_alignment();\n-\n-        //         if st.size != size_with_alignment {\n-        //             ccx.sess.bug(\"StructContext(%s)::verify_against_struct_or_tuple_type:\n-        //                           invalid type size. Expected = %u, actual = %u\",\n-        //                          st.size, size_with_alignment);\n-        //         }\n-\n-        //         if st.align != self.align {\n-        //             ccx.sess.bug(\"StructContext(%s)::verify_against_struct_or_tuple_type:\n-        //                           invalid type alignment. Expected = %u, actual = %u\",\n-        //                          st.align, self.align);\n-        //         }\n-        //     },\n-        //     _ => ccx.sess.bug(fmt!(\"StructContext(%s)::verify_against_struct_or_tuple_type:\n-        //                             called with invalid type %?\", self.name, t))\n-        // }\n-    //}\n-\n     fn finalize(&self) -> DICompositeType {\n         debug!(\"StructContext(%s)::finalize: total_size=%u, align=%u\",\n                 self.name, self.total_size, self.align);"}, {"sha": "e3951c94b6f86885e6921a5cb58506804dbe53ca", "filename": "src/test/debug-info/reference-to-managed-basic.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2f5e33d02f0103a40de2493f824627effaedc6e0/src%2Ftest%2Fdebug-info%2Freference-to-managed-basic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f5e33d02f0103a40de2493f824627effaedc6e0/src%2Ftest%2Fdebug-info%2Freference-to-managed-basic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Freference-to-managed-basic.rs?ref=2f5e33d02f0103a40de2493f824627effaedc6e0", "patch": "@@ -10,8 +10,7 @@\n \n // xfail-win32 Broken because of LLVM bug: http://llvm.org/bugs/show_bug.cgi?id=16249\n \n-// Gdb doesn't know\n-// about UTF-32 character encoding and will print a rust char as only\n+// Gdb doesn't know about UTF-32 character encoding and will print a rust char as only\n // its numerical value.\n \n // compile-flags:-Z extra-debug-info"}, {"sha": "f8281bba49e9f44e1152458508be897fa57f72df", "filename": "src/test/debug-info/struct-with-destructor.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/2f5e33d02f0103a40de2493f824627effaedc6e0/src%2Ftest%2Fdebug-info%2Fstruct-with-destructor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f5e33d02f0103a40de2493f824627effaedc6e0/src%2Ftest%2Fdebug-info%2Fstruct-with-destructor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fstruct-with-destructor.rs?ref=2f5e33d02f0103a40de2493f824627effaedc6e0", "patch": "@@ -49,7 +49,7 @@ struct WithDestructorGuarded {\n \n \n // The compiler adds a 'destructed' boolean field to structs implementing Drop. This field is used\n-// at runtime to prevent finalize() to be executed more than once (see middle::trans::adt).\n+// at runtime to prevent drop() to be executed more than once (see middle::trans::adt).\n // This field must be incorporated by the debug info generation. Otherwise the debugger assumes a\n // wrong size/layout for the struct.\n fn main() {\n@@ -63,7 +63,20 @@ fn main() {\n \n     // If the destructor flag field is not incorporated into the debug info for 'WithDestructor'\n     // then the debugger will have an invalid offset for the field 'guard' and thus should not be\n-    // able to read its value correctly.\n+    // able to read its value correctly (dots are padding bytes, D is the boolean destructor flag):\n+    //\n+    // NoDestructorGuarded = 0000....00000000FFFFFFFF\n+    //                       <--------------><------>\n+    //                         NoDestructor   guard\n+    //\n+    //\n+    // withDestructorGuarded = 0000....00000000D.......FFFFFFFF\n+    //                         <--------------><------>          // How debug info says it is\n+    //                          WithDestructor  guard\n+    //\n+    //                         <----------------------><------>  // How it actually is\n+    //                              WithDestructor      guard\n+    //\n     let withDestructor = WithDestructorGuarded {\n         a: WithDestructor { x: 10, y: 20 },\n         guard: -1"}]}