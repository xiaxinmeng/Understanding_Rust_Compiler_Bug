{"sha": "968eb7ff5a5db0d842527cba15be6dba741103a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2OGViN2ZmNWE1ZGIwZDg0MjUyN2NiYTE1YmU2ZGJhNzQxMTAzYTI=", "commit": {"author": {"name": "Saleem Jaffer", "email": "ssaleem1992@gmail.com", "date": "2019-05-05T18:09:04Z"}, "committer": {"name": "Saleem Jaffer", "email": "ssaleem1992@gmail.com", "date": "2019-05-05T18:09:04Z"}, "message": "code review fixes", "tree": {"sha": "5d96049118ac7f5fa33ae11bda973a4bd68f9486", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d96049118ac7f5fa33ae11bda973a4bd68f9486"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/968eb7ff5a5db0d842527cba15be6dba741103a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/968eb7ff5a5db0d842527cba15be6dba741103a2", "html_url": "https://github.com/rust-lang/rust/commit/968eb7ff5a5db0d842527cba15be6dba741103a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/968eb7ff5a5db0d842527cba15be6dba741103a2/comments", "author": {"login": "saleemjaffer", "id": 19221716, "node_id": "MDQ6VXNlcjE5MjIxNzE2", "avatar_url": "https://avatars.githubusercontent.com/u/19221716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saleemjaffer", "html_url": "https://github.com/saleemjaffer", "followers_url": "https://api.github.com/users/saleemjaffer/followers", "following_url": "https://api.github.com/users/saleemjaffer/following{/other_user}", "gists_url": "https://api.github.com/users/saleemjaffer/gists{/gist_id}", "starred_url": "https://api.github.com/users/saleemjaffer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saleemjaffer/subscriptions", "organizations_url": "https://api.github.com/users/saleemjaffer/orgs", "repos_url": "https://api.github.com/users/saleemjaffer/repos", "events_url": "https://api.github.com/users/saleemjaffer/events{/privacy}", "received_events_url": "https://api.github.com/users/saleemjaffer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "saleemjaffer", "id": 19221716, "node_id": "MDQ6VXNlcjE5MjIxNzE2", "avatar_url": "https://avatars.githubusercontent.com/u/19221716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saleemjaffer", "html_url": "https://github.com/saleemjaffer", "followers_url": "https://api.github.com/users/saleemjaffer/followers", "following_url": "https://api.github.com/users/saleemjaffer/following{/other_user}", "gists_url": "https://api.github.com/users/saleemjaffer/gists{/gist_id}", "starred_url": "https://api.github.com/users/saleemjaffer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saleemjaffer/subscriptions", "organizations_url": "https://api.github.com/users/saleemjaffer/orgs", "repos_url": "https://api.github.com/users/saleemjaffer/repos", "events_url": "https://api.github.com/users/saleemjaffer/events{/privacy}", "received_events_url": "https://api.github.com/users/saleemjaffer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80d5478649b5c26846afb1a923c24f8103b887cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/80d5478649b5c26846afb1a923c24f8103b887cf", "html_url": "https://github.com/rust-lang/rust/commit/80d5478649b5c26846afb1a923c24f8103b887cf"}], "stats": {"total": 40, "additions": 19, "deletions": 21}, "files": [{"sha": "d1a8a9a34e1559fd57d3a72b80ed29ab2f717446", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 18, "deletions": 19, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/968eb7ff5a5db0d842527cba15be6dba741103a2/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/968eb7ff5a5db0d842527cba15be6dba741103a2/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=968eb7ff5a5db0d842527cba15be6dba741103a2", "patch": "@@ -1519,6 +1519,10 @@ pub trait HasTyCtxt<'tcx>: HasDataLayout {\n     fn tcx<'a>(&'a self) -> TyCtxt<'a, 'tcx, 'tcx>;\n }\n \n+pub trait HasParamEnv<'tcx> {\n+    fn param_env(&self) -> ty::ParamEnv<'tcx>;\n+}\n+\n impl<'a, 'gcx, 'tcx> HasDataLayout for TyCtxt<'a, 'gcx, 'tcx> {\n     fn data_layout(&self) -> &TargetDataLayout {\n         &self.data_layout\n@@ -1531,6 +1535,12 @@ impl<'a, 'gcx, 'tcx> HasTyCtxt<'gcx> for TyCtxt<'a, 'gcx, 'tcx> {\n     }\n }\n \n+impl<'tcx, C> HasParamEnv<'tcx> for LayoutCx<'tcx, C> {\n+    fn param_env(&self) -> ty::ParamEnv<'tcx> {\n+        self.param_env\n+    }\n+}\n+\n impl<'tcx, T: HasDataLayout> HasDataLayout for LayoutCx<'tcx, T> {\n     fn data_layout(&self) -> &TargetDataLayout {\n         self.tcx.data_layout()\n@@ -1662,16 +1672,6 @@ impl ty::query::TyCtxtAt<'a, 'tcx, '_> {\n     }\n }\n \n-pub trait HasParamEnv<'tcx> {\n-    fn param_env(&self) -> ty::ParamEnv<'tcx>;\n-}\n-\n-impl<'tcx, C> HasParamEnv<'tcx> for LayoutCx<'tcx, C> {\n-    fn param_env(&self) -> ty::ParamEnv<'tcx> {\n-        self.param_env\n-    }\n-}\n-\n impl<'a, 'tcx, C> TyLayoutMethods<'tcx, C> for Ty<'tcx>\n     where C: LayoutOf<Ty = Ty<'tcx>> + HasTyCtxt<'tcx>,\n           C::TyLayout: MaybeResult<TyLayout<'tcx>>,\n@@ -1718,9 +1718,10 @@ impl<'a, 'tcx, C> TyLayoutMethods<'tcx, C> for Ty<'tcx>\n         let tcx = cx.tcx();\n         let discr_layout = |discr: &Scalar| -> C::TyLayout {\n             let layout = LayoutDetails::scalar(cx, discr.clone());\n-            MaybeResult::from(Ok(\n-                TyLayout {details: tcx.intern_layout(layout),ty: discr.value.to_ty(tcx)}\n-            ))\n+            MaybeResult::from(Ok(TyLayout {\n+                details: tcx.intern_layout(layout),\n+                ty: discr.value.to_ty(tcx),\n+            }))\n         };\n \n         cx.layout_of(match this.ty.sty {\n@@ -1754,12 +1755,10 @@ impl<'a, 'tcx, C> TyLayoutMethods<'tcx, C> for Ty<'tcx>\n                     } else {\n                         tcx.mk_mut_ref(tcx.lifetimes.re_static, nil)\n                     };\n-                    return MaybeResult::from(\n-                        cx.layout_of(ptr_ty).to_result().map(|mut ptr_layout| {\n-                            ptr_layout.ty = this.ty;\n-                            ptr_layout\n-                        })\n-                    );\n+                    return MaybeResult::from(cx.layout_of(ptr_ty).to_result().map(|mut ptr_layout| {\n+                        ptr_layout.ty = this.ty;\n+                        ptr_layout\n+                    }));\n                 }\n \n                 match tcx.struct_tail(pointee).sty {"}, {"sha": "c237cd8bd2645b009b33536175a1dada09b4dd90", "filename": "src/librustc_codegen_ssa/traits/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/968eb7ff5a5db0d842527cba15be6dba741103a2/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/968eb7ff5a5db0d842527cba15be6dba741103a2/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fmod.rs?ref=968eb7ff5a5db0d842527cba15be6dba741103a2", "patch": "@@ -89,6 +89,5 @@ pub trait HasCodegen<'tcx>:\n             Type = Self::Type,\n             Funclet = Self::Funclet,\n             DIScope = Self::DIScope,\n-        >\n-        + HasParamEnv<'tcx>;\n+        >;\n }"}]}