{"sha": "5ddbc881c52a111da2e61772ec5f7b2826f3d9cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkZGJjODgxYzUyYTExMWRhMmU2MTc3MmVjNWY3YjI4MjZmM2Q5Y2I=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-06-03T18:38:09Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-06-03T18:38:09Z"}, "message": "auto merge of #6913 : thestinger/rust/ptr, r=graydon\n\nCloses #6607\r\n\r\nI went with `RawPtr` instead of `UnsafePtr` because not all of these operations are `unsafe`, so to me it makes more sense to refer to it as a \"raw\" (not wrapped/abstracted) pointer. If we decide on something else in #6608 it can be renamed again.", "tree": {"sha": "aacb2186374fb9485104e24a5b984e9b310b30f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aacb2186374fb9485104e24a5b984e9b310b30f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ddbc881c52a111da2e61772ec5f7b2826f3d9cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ddbc881c52a111da2e61772ec5f7b2826f3d9cb", "html_url": "https://github.com/rust-lang/rust/commit/5ddbc881c52a111da2e61772ec5f7b2826f3d9cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ddbc881c52a111da2e61772ec5f7b2826f3d9cb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f6285fbf9001bd593e5424cc0f7de5609d8db55", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f6285fbf9001bd593e5424cc0f7de5609d8db55", "html_url": "https://github.com/rust-lang/rust/commit/4f6285fbf9001bd593e5424cc0f7de5609d8db55"}, {"sha": "e900dba28a1ff1434e037c48da2e99948333a564", "url": "https://api.github.com/repos/rust-lang/rust/commits/e900dba28a1ff1434e037c48da2e99948333a564", "html_url": "https://github.com/rust-lang/rust/commit/e900dba28a1ff1434e037c48da2e99948333a564"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "fe1b834813e8bd006561ebd7c80b0556632b7e66", "filename": "src/libstd/pipes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ddbc881c52a111da2e61772ec5f7b2826f3d9cb/src%2Flibstd%2Fpipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ddbc881c52a111da2e61772ec5f7b2826f3d9cb/src%2Flibstd%2Fpipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpipes.rs?ref=5ddbc881c52a111da2e61772ec5f7b2826f3d9cb", "patch": "@@ -94,7 +94,7 @@ use option::{None, Option, Some};\n use unstable::finally::Finally;\n use unstable::intrinsics;\n use ptr;\n-use ptr::Ptr;\n+use ptr::RawPtr;\n use task;\n use vec;\n use vec::OwnedVector;"}, {"sha": "b883f752e3cc9953664c6444e92c1143fdc67624", "filename": "src/libstd/prelude.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ddbc881c52a111da2e61772ec5f7b2826f3d9cb/src%2Flibstd%2Fprelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ddbc881c52a111da2e61772ec5f7b2826f3d9cb/src%2Flibstd%2Fprelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprelude.rs?ref=5ddbc881c52a111da2e61772ec5f7b2826f3d9cb", "patch": "@@ -43,7 +43,7 @@ pub use path::GenericPath;\n pub use path::Path;\n pub use path::PosixPath;\n pub use path::WindowsPath;\n-pub use ptr::Ptr;\n+pub use ptr::RawPtr;\n pub use ascii::{Ascii, AsciiCast, OwnedAsciiCast, AsciiStr};\n pub use str::{StrVector, StrSlice, OwnedStr, StrUtil};\n pub use from_str::{FromStr};"}, {"sha": "c656a3eef62c3fc0168c60f6628148fa15067470", "filename": "src/libstd/ptr.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5ddbc881c52a111da2e61772ec5f7b2826f3d9cb/src%2Flibstd%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ddbc881c52a111da2e61772ec5f7b2826f3d9cb/src%2Flibstd%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fptr.rs?ref=5ddbc881c52a111da2e61772ec5f7b2826f3d9cb", "patch": "@@ -296,15 +296,15 @@ pub unsafe fn array_each<T>(arr: **T, cb: &fn(*T)) {\n }\n \n #[allow(missing_doc)]\n-pub trait Ptr<T> {\n+pub trait RawPtr<T> {\n     fn is_null(&const self) -> bool;\n     fn is_not_null(&const self) -> bool;\n     unsafe fn to_option(&const self) -> Option<&T>;\n     fn offset(&self, count: uint) -> Self;\n }\n \n /// Extension methods for immutable pointers\n-impl<T> Ptr<T> for *T {\n+impl<T> RawPtr<T> for *T {\n     /// Returns true if the pointer is equal to the null pointer.\n     #[inline(always)]\n     fn is_null(&const self) -> bool { is_null(*self) }\n@@ -336,7 +336,7 @@ impl<T> Ptr<T> for *T {\n }\n \n /// Extension methods for mutable pointers\n-impl<T> Ptr<T> for *mut T {\n+impl<T> RawPtr<T> for *mut T {\n     /// Returns true if the pointer is equal to the null pointer.\n     #[inline(always)]\n     fn is_null(&const self) -> bool { is_null(*self) }"}, {"sha": "f6017b92807d1431511c15a1ae52460e0be153a0", "filename": "src/libstd/rt/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ddbc881c52a111da2e61772ec5f7b2826f3d9cb/src%2Flibstd%2Frt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ddbc881c52a111da2e61772ec5f7b2826f3d9cb/src%2Flibstd%2Frt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fmod.rs?ref=5ddbc881c52a111da2e61772ec5f7b2826f3d9cb", "patch": "@@ -56,7 +56,7 @@ Several modules in `core` are clients of `rt`:\n \n #[doc(hidden)];\n \n-use ptr::Ptr;\n+use ptr::RawPtr;\n \n /// The global (exchange) heap.\n pub mod global_heap;"}, {"sha": "b0e87a62c8b722ad8b4b9d9559c033e74ac5314d", "filename": "src/libstd/rt/stack.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ddbc881c52a111da2e61772ec5f7b2826f3d9cb/src%2Flibstd%2Frt%2Fstack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ddbc881c52a111da2e61772ec5f7b2826f3d9cb/src%2Flibstd%2Frt%2Fstack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fstack.rs?ref=5ddbc881c52a111da2e61772ec5f7b2826f3d9cb", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use container::Container;\n-use ptr::Ptr;\n+use ptr::RawPtr;\n use vec;\n use ops::Drop;\n use libc::{c_uint, uintptr_t};"}, {"sha": "84d1e65454fd67f4a6da06b15352b7b636c471fe", "filename": "src/libstd/rt/uv/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ddbc881c52a111da2e61772ec5f7b2826f3d9cb/src%2Flibstd%2Frt%2Fuv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ddbc881c52a111da2e61772ec5f7b2826f3d9cb/src%2Flibstd%2Frt%2Fuv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fuv%2Fmod.rs?ref=5ddbc881c52a111da2e61772ec5f7b2826f3d9cb", "patch": "@@ -38,7 +38,7 @@ use container::Container;\n use option::*;\n use str::raw::from_c_str;\n use to_str::ToStr;\n-use ptr::Ptr;\n+use ptr::RawPtr;\n use libc;\n use vec;\n use ptr;"}, {"sha": "b7de9e2055976c8c150fc5a14902bc779d23f407", "filename": "src/libstd/str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ddbc881c52a111da2e61772ec5f7b2826f3d9cb/src%2Flibstd%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ddbc881c52a111da2e61772ec5f7b2826f3d9cb/src%2Flibstd%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstr.rs?ref=5ddbc881c52a111da2e61772ec5f7b2826f3d9cb", "patch": "@@ -30,7 +30,7 @@ use libc;\n use option::{None, Option, Some};\n use old_iter::{BaseIter, EqIter};\n use ptr;\n-use ptr::Ptr;\n+use ptr::RawPtr;\n use str;\n use to_str::ToStr;\n use uint;"}, {"sha": "255dc1c95f73f056f881324d42c98ae571c8e568", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ddbc881c52a111da2e61772ec5f7b2826f3d9cb/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ddbc881c52a111da2e61772ec5f7b2826f3d9cb/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=5ddbc881c52a111da2e61772ec5f7b2826f3d9cb", "patch": "@@ -26,7 +26,7 @@ use old_iter::CopyableIter;\n use option::{None, Option, Some};\n use ptr::to_unsafe_ptr;\n use ptr;\n-use ptr::Ptr;\n+use ptr::RawPtr;\n use sys;\n use uint;\n use unstable::intrinsics;"}]}