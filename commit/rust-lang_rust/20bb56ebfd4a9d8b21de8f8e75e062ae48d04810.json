{"sha": "20bb56ebfd4a9d8b21de8f8e75e062ae48d04810", "node_id": "C_kwDOAAsO6NoAKDIwYmI1NmViZmQ0YTlkOGIyMWRlOGY4ZTc1ZTA2MmFlNDhkMDQ4MTA", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-11-02T00:38:43Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-11-02T00:39:08Z"}, "message": "Use codegen_select in vtable_trait_upcasting_coercion_new_vptr_slot", "tree": {"sha": "76608c23cc419ecfaed850baaef94359daf4e6ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76608c23cc419ecfaed850baaef94359daf4e6ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20bb56ebfd4a9d8b21de8f8e75e062ae48d04810", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20bb56ebfd4a9d8b21de8f8e75e062ae48d04810", "html_url": "https://github.com/rust-lang/rust/commit/20bb56ebfd4a9d8b21de8f8e75e062ae48d04810", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20bb56ebfd4a9d8b21de8f8e75e062ae48d04810/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab5a2bc7316012ee9b2a4a4f3821673f2677f3d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab5a2bc7316012ee9b2a4a4f3821673f2677f3d5", "html_url": "https://github.com/rust-lang/rust/commit/ab5a2bc7316012ee9b2a4a4f3821673f2677f3d5"}], "stats": {"total": 24, "additions": 6, "deletions": 18}, "files": [{"sha": "4e764d70ba9dedee5c405925afa65d45b3d86e3a", "filename": "compiler/rustc_trait_selection/src/traits/mod.rs", "status": "modified", "additions": 6, "deletions": 18, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/20bb56ebfd4a9d8b21de8f8e75e062ae48d04810/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20bb56ebfd4a9d8b21de8f8e75e062ae48d04810/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs?ref=20bb56ebfd4a9d8b21de8f8e75e062ae48d04810", "patch": "@@ -933,25 +933,13 @@ pub fn vtable_trait_upcasting_coercion_new_vptr_slot<'tcx>(\n         def_id: unsize_trait_did,\n         substs: tcx.mk_substs_trait(source, &[target.into()]),\n     };\n-    let obligation = Obligation::new(\n-        ObligationCause::dummy(),\n-        ty::ParamEnv::reveal_all(),\n-        ty::Binder::dummy(ty::TraitPredicate {\n-            trait_ref,\n-            constness: ty::BoundConstness::NotConst,\n-            polarity: ty::ImplPolarity::Positive,\n-        }),\n-    );\n-\n-    let infcx = tcx.infer_ctxt().build();\n-    let mut selcx = SelectionContext::new(&infcx);\n-    let implsrc = selcx.select(&obligation).unwrap();\n \n-    let Some(ImplSource::TraitUpcasting(implsrc_traitcasting)) = implsrc else {\n-        bug!();\n-    };\n-\n-    implsrc_traitcasting.vtable_vptr_slot\n+    match tcx.codegen_select_candidate((ty::ParamEnv::reveal_all(), ty::Binder::dummy(trait_ref))) {\n+        Ok(ImplSource::TraitUpcasting(implsrc_traitcasting)) => {\n+            implsrc_traitcasting.vtable_vptr_slot\n+        }\n+        otherwise => bug!(\"expected TraitUpcasting candidate, got {otherwise:?}\"),\n+    }\n }\n \n pub fn provide(providers: &mut ty::query::Providers) {"}]}