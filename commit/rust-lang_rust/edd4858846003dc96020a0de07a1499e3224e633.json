{"sha": "edd4858846003dc96020a0de07a1499e3224e633", "node_id": "C_kwDOAAsO6NoAKGVkZDQ4NTg4NDYwMDNkYzk2MDIwYTBkZTA3YTE0OTllMzIyNGU2MzM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-20T21:46:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-20T21:46:55Z"}, "message": "Auto merge of #2078 - RalfJung:rustup, r=RalfJung\n\nrustup\n\nhttps://github.com/rust-lang/rust/pull/93313 somehow made it so that this does not have to be mutable any more...", "tree": {"sha": "74100f05fb7884304941787a004ffa983c4f2a52", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74100f05fb7884304941787a004ffa983c4f2a52"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/edd4858846003dc96020a0de07a1499e3224e633", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/edd4858846003dc96020a0de07a1499e3224e633", "html_url": "https://github.com/rust-lang/rust/commit/edd4858846003dc96020a0de07a1499e3224e633", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/edd4858846003dc96020a0de07a1499e3224e633/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba24c311ee509f8f82632be8f1c432393bb030e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba24c311ee509f8f82632be8f1c432393bb030e8", "html_url": "https://github.com/rust-lang/rust/commit/ba24c311ee509f8f82632be8f1c432393bb030e8"}, {"sha": "432015d1f64d3a8065464c29e5af7396fc666c94", "url": "https://api.github.com/repos/rust-lang/rust/commits/432015d1f64d3a8065464c29e5af7396fc666c94", "html_url": "https://github.com/rust-lang/rust/commit/432015d1f64d3a8065464c29e5af7396fc666c94"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "7cc913cf8679b4c89ea6aaf100549756b4cea6f3", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/edd4858846003dc96020a0de07a1499e3224e633/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/edd4858846003dc96020a0de07a1499e3224e633/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=edd4858846003dc96020a0de07a1499e3224e633", "patch": "@@ -1 +1 @@\n-27af5175497936ea3413bef5816e7c0172514b9c\n+51ea9bb29b07d76c5a7167d054b54f4eb7f5b44e"}, {"sha": "e5aa04dfec1af9f42043842fe6c8584cb61e3f52", "filename": "tests/compile-fail/never_transmute_void.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/edd4858846003dc96020a0de07a1499e3224e633/tests%2Fcompile-fail%2Fnever_transmute_void.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edd4858846003dc96020a0de07a1499e3224e633/tests%2Fcompile-fail%2Fnever_transmute_void.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fnever_transmute_void.rs?ref=edd4858846003dc96020a0de07a1499e3224e633", "patch": "@@ -4,15 +4,18 @@\n #![feature(never_type)]\n #![allow(unused, invalid_value)]\n \n-enum Void {}\n+mod m {\n+    enum VoidI {}\n+    pub struct Void(VoidI);\n \n-fn f(v: Void) -> ! {\n-    match v {} //~ ERROR entering unreachable code\n+    pub fn f(v: Void) -> ! {\n+        match v.0 {} //~ ERROR entering unreachable code\n+    }\n }\n \n fn main() {\n-    let v: Void = unsafe {\n-        std::mem::transmute::<(), Void>(())\n+    let v = unsafe {\n+        std::mem::transmute::<(), m::Void>(())\n     };\n-    f(v); //~ inside `main`\n+    m::f(v); //~ inside `main`\n }"}, {"sha": "1d5d9a27cc8a5cae6fd6a11b149e71f8cdce6467", "filename": "tests/run-pass/async-fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/edd4858846003dc96020a0de07a1499e3224e633/tests%2Frun-pass%2Fasync-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edd4858846003dc96020a0de07a1499e3224e633/tests%2Frun-pass%2Fasync-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fasync-fn.rs?ref=edd4858846003dc96020a0de07a1499e3224e633", "patch": "@@ -29,7 +29,7 @@ fn never() -> Never {\n }\n \n async fn includes_never(crash: bool, x: u32) -> u32 {\n-    let mut result = async { x * x }.await;\n+    let result = async { x * x }.await;\n     if !crash {\n         return result;\n     }"}]}