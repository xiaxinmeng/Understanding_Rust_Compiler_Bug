{"sha": "ceeb399cead1659989470c757bd0fa93cb95826e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlZWIzOTljZWFkMTY1OTk4OTQ3MGM3NTdiZDBmYTkzY2I5NTgyNmU=", "commit": {"author": {"name": "Tamir Duberstein", "email": "tamird@gmail.com", "date": "2017-08-19T20:41:10Z"}, "committer": {"name": "Tamir Duberstein", "email": "tamird@gmail.com", "date": "2017-08-19T20:41:10Z"}, "message": "librustc_typeck: store a DefId rather than a Name", "tree": {"sha": "51fa6c346acc6c21746b5331209930dddbc3cf3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51fa6c346acc6c21746b5331209930dddbc3cf3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ceeb399cead1659989470c757bd0fa93cb95826e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE/uKQcsWiEQj1Z6uEHB6YzI4Xu4kFAlmYonwACgkQHB6YzI4X\nu4n6KBAAuIfLlk4ki7rM1su3ZWls/JixJN/2pqkRPhRnbOCj9fHQEU5dOpb7d23b\nu1cqD5SjmJ7TQqL0Q/1kC27NVoGONV2cY4d3hu0Ubh+sgwLOybKzaTkfI3aqU4HO\nOFzrlgtdBJ1YKVMUCjkSw4IBQlkXMY5jjRhDLf0ts0S0jUYavdBInU18uAJjTokH\noBDcbeqOATZuU+xAZ1JBnbrZ9KEW3sgEpraO1OfWtePkCMqvLWeMOw+qv9b+Q66D\n1eigePgeAqbBsM0FRi9vIKHpW8R6h5wAc5VJYp4pcf0AFKLh/J1UZNJKAjePPq2A\nNGGYBtIbHACQ3jfWnfFoifOgGePuJcWseYFhCODgsq4iwXn4fyg2Wn+9YoIcckGJ\nc9yHkifPV8+GnNC0atPW/iwI3WM7Wx3vGAyYCtUh6YheT0NTlmT2Q7FbfPIiEqfl\n6RL7/x7wgWr7bEfhR2Vi+6sbSltvTPKpRKIANznEih0uWJR6F6b+WXfag/uyN2kG\nM16qzpC8ULxGXg4jNXAVa7PJHAUZCHVwAVjI4D01cA/yET3uuhctJj0pMsIhHAr+\nmK2Yylc7qgWEgQ3cswj83c87IRHhU3ftoo6Wm7c9fmf68hZfFVZC4QlZHiQvF2VT\nWj7AEgSQ8+D/3ki2FZeCWdyeBMQz1ZOejouGOpgMSp+Re3bj9Bc=\n=Qck4\n-----END PGP SIGNATURE-----", "payload": "tree 51fa6c346acc6c21746b5331209930dddbc3cf3b\nparent 7f397bdb062fe13a4707219a2f32486c5294f642\nauthor Tamir Duberstein <tamird@gmail.com> 1503175270 -0700\ncommitter Tamir Duberstein <tamird@gmail.com> 1503175270 -0700\n\nlibrustc_typeck: store a DefId rather than a Name\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ceeb399cead1659989470c757bd0fa93cb95826e", "html_url": "https://github.com/rust-lang/rust/commit/ceeb399cead1659989470c757bd0fa93cb95826e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ceeb399cead1659989470c757bd0fa93cb95826e/comments", "author": {"login": "tamird", "id": 1535036, "node_id": "MDQ6VXNlcjE1MzUwMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1535036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamird", "html_url": "https://github.com/tamird", "followers_url": "https://api.github.com/users/tamird/followers", "following_url": "https://api.github.com/users/tamird/following{/other_user}", "gists_url": "https://api.github.com/users/tamird/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamird/subscriptions", "organizations_url": "https://api.github.com/users/tamird/orgs", "repos_url": "https://api.github.com/users/tamird/repos", "events_url": "https://api.github.com/users/tamird/events{/privacy}", "received_events_url": "https://api.github.com/users/tamird/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tamird", "id": 1535036, "node_id": "MDQ6VXNlcjE1MzUwMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1535036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamird", "html_url": "https://github.com/tamird", "followers_url": "https://api.github.com/users/tamird/followers", "following_url": "https://api.github.com/users/tamird/following{/other_user}", "gists_url": "https://api.github.com/users/tamird/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamird/subscriptions", "organizations_url": "https://api.github.com/users/tamird/orgs", "repos_url": "https://api.github.com/users/tamird/repos", "events_url": "https://api.github.com/users/tamird/events{/privacy}", "received_events_url": "https://api.github.com/users/tamird/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f397bdb062fe13a4707219a2f32486c5294f642", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f397bdb062fe13a4707219a2f32486c5294f642", "html_url": "https://github.com/rust-lang/rust/commit/7f397bdb062fe13a4707219a2f32486c5294f642"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "8281d4716c4cec7d2c49f6cbb92ed44c22634cb9", "filename": "src/librustc/infer/error_reporting/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ceeb399cead1659989470c757bd0fa93cb95826e/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ceeb399cead1659989470c757bd0fa93cb95826e/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=ceeb399cead1659989470c757bd0fa93cb95826e", "patch": "@@ -899,9 +899,9 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n             infer::LateBoundRegion(_, br, infer::HigherRankedType) => {\n                 format!(\" for lifetime parameter {}in generic type\", br_string(br))\n             }\n-            infer::LateBoundRegion(_, br, infer::AssocTypeProjection(type_name)) => {\n+            infer::LateBoundRegion(_, br, infer::AssocTypeProjection(def_id)) => {\n                 format!(\" for lifetime parameter {}in trait containing associated type `{}`\",\n-                        br_string(br), type_name)\n+                        br_string(br), self.tcx.associated_item(def_id).name)\n             }\n             infer::EarlyBoundRegion(_, name) => {\n                 format!(\" for lifetime parameter `{}`\","}, {"sha": "6c9b9d853f403c17c45fa1f171548d086e64f2ff", "filename": "src/librustc/infer/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ceeb399cead1659989470c757bd0fa93cb95826e/src%2Flibrustc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ceeb399cead1659989470c757bd0fa93cb95826e/src%2Flibrustc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fmod.rs?ref=ceeb399cead1659989470c757bd0fa93cb95826e", "patch": "@@ -274,7 +274,7 @@ pub enum LateBoundRegionConversionTime {\n     HigherRankedType,\n \n     /// when projecting an associated type\n-    AssocTypeProjection(ast::Name), // FIXME(tschottdorf): should contain DefId, not Name\n+    AssocTypeProjection(DefId),\n }\n \n /// Reasons to create a region inference variable"}, {"sha": "dbdaabfee8ab56b4fe4f2cc80addea63921e0da1", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ceeb399cead1659989470c757bd0fa93cb95826e/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ceeb399cead1659989470c757bd0fa93cb95826e/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=ceeb399cead1659989470c757bd0fa93cb95826e", "patch": "@@ -1646,11 +1646,10 @@ impl<'a, 'gcx, 'tcx> AstConv<'gcx, 'tcx> for FnCtxt<'a, 'gcx, 'tcx> {\n                                         poly_trait_ref: ty::PolyTraitRef<'tcx>)\n                                         -> Ty<'tcx>\n     {\n-        let item = self.tcx().associated_item(item_def_id);\n         let (trait_ref, _) =\n             self.replace_late_bound_regions_with_fresh_var(\n                 span,\n-                infer::LateBoundRegionConversionTime::AssocTypeProjection(item.name),\n+                infer::LateBoundRegionConversionTime::AssocTypeProjection(item_def_id),\n                 &poly_trait_ref);\n \n         self.tcx().mk_projection(item_def_id, trait_ref.substs)"}, {"sha": "180fecf1c9cfca1978e1618c226871501a95b75d", "filename": "src/librustc_typeck/check/regionck.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ceeb399cead1659989470c757bd0fa93cb95826e/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ceeb399cead1659989470c757bd0fa93cb95826e/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs?ref=ceeb399cead1659989470c757bd0fa93cb95826e", "patch": "@@ -1805,8 +1805,7 @@ impl<'a, 'gcx, 'tcx> RegionCtxt<'a, 'gcx, 'tcx> {\n                     let (outlives, _) =\n                         self.replace_late_bound_regions_with_fresh_var(\n                             span,\n-                            infer::AssocTypeProjection(\n-                                self.tcx.associated_item(projection_ty.item_def_id).name),\n+                            infer::AssocTypeProjection(projection_ty.item_def_id),\n                             &outlives);\n \n                     debug!(\"projection_bounds: outlives={:?} (3)\","}]}