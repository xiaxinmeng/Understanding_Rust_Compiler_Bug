{"sha": "b75e85998d9a6e21881eef8e27f9330cbdbc41b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3NWU4NTk5OGQ5YTZlMjE4ODFlZWY4ZTI3ZjkzMzBjYmRiYzQxYjQ=", "commit": {"author": {"name": "Kushagra Gupta", "email": "39802979+Kushagra-0801@users.noreply.github.com", "date": "2021-02-03T16:00:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-03T16:00:42Z"}, "message": "typo fixes", "tree": {"sha": "9b43efff5e0555fa988f7c09369a9dedb512f3ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b43efff5e0555fa988f7c09369a9dedb512f3ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b75e85998d9a6e21881eef8e27f9330cbdbc41b4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgGsiqCRBK7hj4Ov3rIwAAdHIIADW2HyO0xuNWaN6GyDtj/roa\nuOrY7dqIZq0JSXItTeALHHfKb18rHO33gASgZEy3cR6kKVYChisvuXEYQI5gmELu\nXKnxTYWHmiCfDgdA0/Z1HaPac3OgCUbxIu7cXa8kEm5aKII214gLgvMNnb/+OrjH\nE5tJKwRvjVbUAHlKMdTGni2QwcML+NnKNT5kFqCeF2UXbLV+O2+ISc3qAOcvp+zf\nd8hUWolxxRAkYofgBsU1UepTZVSiTMKDiWQPM80ZGWs3/jq72n4VkraGbYl5S5bH\nV+5yd75mCcY5I6dnIBmxC1P+WiyHIVOAKQh/QeQNiJclgUoztsFiRLcQ/+8Dum0=\n=gmDp\n-----END PGP SIGNATURE-----\n", "payload": "tree 9b43efff5e0555fa988f7c09369a9dedb512f3ec\nparent ed35e516b13682726e4c9ee2fc3c88da6253a402\nauthor Kushagra Gupta <39802979+Kushagra-0801@users.noreply.github.com> 1612368042 +0530\ncommitter GitHub <noreply@github.com> 1612368042 +0530\n\ntypo fixes"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b75e85998d9a6e21881eef8e27f9330cbdbc41b4", "html_url": "https://github.com/rust-lang/rust/commit/b75e85998d9a6e21881eef8e27f9330cbdbc41b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b75e85998d9a6e21881eef8e27f9330cbdbc41b4/comments", "author": {"login": "Kushagra-0801", "id": 39802979, "node_id": "MDQ6VXNlcjM5ODAyOTc5", "avatar_url": "https://avatars.githubusercontent.com/u/39802979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kushagra-0801", "html_url": "https://github.com/Kushagra-0801", "followers_url": "https://api.github.com/users/Kushagra-0801/followers", "following_url": "https://api.github.com/users/Kushagra-0801/following{/other_user}", "gists_url": "https://api.github.com/users/Kushagra-0801/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kushagra-0801/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kushagra-0801/subscriptions", "organizations_url": "https://api.github.com/users/Kushagra-0801/orgs", "repos_url": "https://api.github.com/users/Kushagra-0801/repos", "events_url": "https://api.github.com/users/Kushagra-0801/events{/privacy}", "received_events_url": "https://api.github.com/users/Kushagra-0801/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed35e516b13682726e4c9ee2fc3c88da6253a402", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed35e516b13682726e4c9ee2fc3c88da6253a402", "html_url": "https://github.com/rust-lang/rust/commit/ed35e516b13682726e4c9ee2fc3c88da6253a402"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "2ba8b7967d00242bbaaabde93240470c3e43c23c", "filename": "docs/dev/architecture.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b75e85998d9a6e21881eef8e27f9330cbdbc41b4/docs%2Fdev%2Farchitecture.md", "raw_url": "https://github.com/rust-lang/rust/raw/b75e85998d9a6e21881eef8e27f9330cbdbc41b4/docs%2Fdev%2Farchitecture.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Farchitecture.md?ref=b75e85998d9a6e21881eef8e27f9330cbdbc41b4", "patch": "@@ -164,7 +164,7 @@ These crates also define various intermediate representations of the core.\n \n **Architecture Invariant:** these crates explicitly care about being incremental.\n The core invariant we maintain is \"typing inside a function's body never invalidates global derived data\".\n-IE, if you change the body of `foo`, all facts about `bar` should remain intact.\n+i.e., if you change the body of `foo`, all facts about `bar` should remain intact.\n \n **Architecture Invariant:** hir exists only in context of particular crate instance with specific CFG flags.\n The same syntax may produce several instances of HIR if the crate participates in the crate graph more than once.\n@@ -232,7 +232,7 @@ All other requests are processed in background.\n \n **Architecture Invariant:** the server is stateless, a-la HTTP.\n Sometimes state needs to be preserved between requests.\n-For example, \"what is the `edit` for the fifth's completion item of the last completion edit?\".\n+For example, \"what is the `edit` for the fifth completion item of the last completion edit?\".\n For this, the second request should include enough info to re-create the context from scratch.\n This generally means including all the parameters of the original request.\n \n@@ -249,7 +249,7 @@ These crates deal with invoking `cargo` to learn about project structure and get\n They use `crates/path` heavily instead of `std::path`.\n A single `rust-analyzer` process can serve many projects, so it is important that server's current directory does not leak.\n \n-### `crates/mbe`, `crated/tt`, `crates/proc_macro_api`, `crates/proc_macro_srv`\n+### `crates/mbe`, `crates/tt`, `crates/proc_macro_api`, `crates/proc_macro_srv`\n \n These crates implement macros as token tree -> token tree transforms.\n They are independent from the rest of the code.\n@@ -264,7 +264,7 @@ These crates implement a virtual file system.\n They provide consistent snapshots of the underlying file system and insulate messy OS paths.\n \n **Architecture Invariant:** vfs doesn't assume a single unified file system.\n-IE, a single rust-analyzer process can act as a remote server for two different machines, where the same `/tmp/foo.rs` path points to different files.\n+i.e., a single rust-analyzer process can act as a remote server for two different machines, where the same `/tmp/foo.rs` path points to different files.\n For this reason, all path APIs generally take some existing path as a \"file system witness\".\n \n ### `crates/stdx`"}]}