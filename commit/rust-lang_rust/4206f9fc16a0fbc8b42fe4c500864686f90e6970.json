{"sha": "4206f9fc16a0fbc8b42fe4c500864686f90e6970", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyMDZmOWZjMTZhMGZiYzhiNDJmZTRjNTAwODY0Njg2ZjkwZTY5NzA=", "commit": {"author": {"name": "Ben Striegel", "email": "ben.striegel@gmail.com", "date": "2020-10-27T20:20:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-27T20:20:58Z"}, "message": "Prefer numeric associated constants in example\n\nPer their documentation, the `max_value()` and `min_value()` associated functions have been superseded by the `MAX` and `MIN` associated constants since Rust 1.43 and are considered \"soft deprecated\", with all uses currently being replaced in the rustc repo.", "tree": {"sha": "196733bb3a4fdc68b367785b68d96704a00ddfa4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/196733bb3a4fdc68b367785b68d96704a00ddfa4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4206f9fc16a0fbc8b42fe4c500864686f90e6970", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfmIEqCRBK7hj4Ov3rIwAAdHIIAFbWso+0CkA8JCfcHgc5LACH\n8fo0/Tx56l0eoQT632a0YlbGp7r+fLXsih/xMszY0Xq8itNvCDfDL01W1vHxZdxF\n7uE9junvmWzo90Tw/EEG4ew/U5kthxQV0WWhBwU6kar0GHMm/tsM3D1JkYXoZJiM\n8MWcemwD0J32qCEzlQxF/LSdn8pg4iECgbvopabZaNb3KMG4N0Fa1IfbWuclNffB\npT1NQijNcoFV9dN7feWkzGo7+PR292/w0SRK5N/dj79IoTEUT1vQu81WdV/jMQsR\ndAY76CY0d+UCVKmK9f5ISpJNIt8SixL8p6rycDCCtGOqPDEoN9f0K1Yx0b6AuTw=\n=KUEt\n-----END PGP SIGNATURE-----\n", "payload": "tree 196733bb3a4fdc68b367785b68d96704a00ddfa4\nparent 2be0596810bd34e4d50ecda5ad2b71f8370d7e00\nauthor Ben Striegel <ben.striegel@gmail.com> 1603830058 -0400\ncommitter GitHub <noreply@github.com> 1603830058 -0400\n\nPrefer numeric associated constants in example\n\nPer their documentation, the `max_value()` and `min_value()` associated functions have been superseded by the `MAX` and `MIN` associated constants since Rust 1.43 and are considered \"soft deprecated\", with all uses currently being replaced in the rustc repo."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4206f9fc16a0fbc8b42fe4c500864686f90e6970", "html_url": "https://github.com/rust-lang/rust/commit/4206f9fc16a0fbc8b42fe4c500864686f90e6970", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4206f9fc16a0fbc8b42fe4c500864686f90e6970/comments", "author": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2be0596810bd34e4d50ecda5ad2b71f8370d7e00", "url": "https://api.github.com/repos/rust-lang/rust/commits/2be0596810bd34e4d50ecda5ad2b71f8370d7e00", "html_url": "https://github.com/rust-lang/rust/commit/2be0596810bd34e4d50ecda5ad2b71f8370d7e00"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "cb512a4aa335e65106967ed7470bd5b45949a0c5", "filename": "example/std_example.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4206f9fc16a0fbc8b42fe4c500864686f90e6970/example%2Fstd_example.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4206f9fc16a0fbc8b42fe4c500864686f90e6970/example%2Fstd_example.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/example%2Fstd_example.rs?ref=4206f9fc16a0fbc8b42fe4c500864686f90e6970", "patch": "@@ -315,13 +315,13 @@ fn test_checked_mul() {\n     assert_eq!(1i8.checked_mul(-128i8), Some(-128i8));\n     assert_eq!((-128i8).checked_mul(-128i8), None);\n \n-    assert_eq!(1u64.checked_mul(u64::max_value()), Some(u64::max_value()));\n-    assert_eq!(u64::max_value().checked_mul(u64::max_value()), None);\n-    assert_eq!(1i64.checked_mul(i64::max_value()), Some(i64::max_value()));\n-    assert_eq!(i64::max_value().checked_mul(i64::max_value()), None);\n-    assert_eq!((-1i64).checked_mul(i64::min_value() + 1), Some(i64::max_value()));\n-    assert_eq!(1i64.checked_mul(i64::min_value()), Some(i64::min_value()));\n-    assert_eq!(i64::min_value().checked_mul(i64::min_value()), None);\n+    assert_eq!(1u64.checked_mul(u64::MAX), Some(u64::MAX));\n+    assert_eq!(u64::MAX.checked_mul(u64::MAX), None);\n+    assert_eq!(1i64.checked_mul(i64::MAX), Some(i64::MAX));\n+    assert_eq!(i64::MAX.checked_mul(i64::MAX), None);\n+    assert_eq!((-1i64).checked_mul(i64::MIN + 1), Some(i64::MAX));\n+    assert_eq!(1i64.checked_mul(i64::MIN), Some(i64::MIN));\n+    assert_eq!(i64::MIN.checked_mul(i64::MIN), None);\n }\n \n #[derive(PartialEq)]"}]}