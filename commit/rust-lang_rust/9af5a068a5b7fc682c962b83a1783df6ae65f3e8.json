{"sha": "9af5a068a5b7fc682c962b83a1783df6ae65f3e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhZjVhMDY4YTViN2ZjNjgyYzk2MmI4M2ExNzgzZGY2YWU2NWYzZTg=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-11-20T18:49:18Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-11-20T18:49:18Z"}, "message": "extend comment further to explain why we limit wf to `upvar_tys`", "tree": {"sha": "878ae94baeafc355bcc1384072fac35056df5aca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/878ae94baeafc355bcc1384072fac35056df5aca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9af5a068a5b7fc682c962b83a1783df6ae65f3e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9af5a068a5b7fc682c962b83a1783df6ae65f3e8", "html_url": "https://github.com/rust-lang/rust/commit/9af5a068a5b7fc682c962b83a1783df6ae65f3e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9af5a068a5b7fc682c962b83a1783df6ae65f3e8/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2151e482acee9a8715a4bde3cfd477c4ecc20b0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/2151e482acee9a8715a4bde3cfd477c4ecc20b0b", "html_url": "https://github.com/rust-lang/rust/commit/2151e482acee9a8715a4bde3cfd477c4ecc20b0b"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "a851ccc34bfd6a2e61654aa26fe201a244427ae7", "filename": "src/librustc/ty/wf.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9af5a068a5b7fc682c962b83a1783df6ae65f3e8/src%2Flibrustc%2Fty%2Fwf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9af5a068a5b7fc682c962b83a1783df6ae65f3e8/src%2Flibrustc%2Fty%2Fwf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fwf.rs?ref=9af5a068a5b7fc682c962b83a1783df6ae65f3e8", "patch": "@@ -367,6 +367,15 @@ impl<'a, 'gcx, 'tcx> WfPredicates<'a, 'gcx, 'tcx> {\n                     // probably always be WF, because it should be\n                     // shorthand for something like `where(T: 'a) {\n                     // fn(&'a T) }`, as discussed in #25860.\n+                    //\n+                    // Note that we are also skipping the generic\n+                    // types. This is consistent with the `outlives`\n+                    // code, but anyway doesn't matter: within the fn\n+                    // body where they are created, the generics will\n+                    // always be WF, and outside of that fn body we\n+                    // are not directly inspecting closure types\n+                    // anyway, except via auto trait matching (which\n+                    // only inspects the upvar types).\n                     subtys.skip_current_subtree(); // subtree handled by compute_projection\n                     for upvar_ty in substs.upvar_tys(def_id, self.infcx.tcx) {\n                         self.compute(upvar_ty);"}]}