{"sha": "b939a6dcacc0460f49781e922c979d235a52eeca", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5MzlhNmRjYWNjMDQ2MGY0OTc4MWU5MjJjOTc5ZDIzNWE1MmVlY2E=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-05-15T17:35:12Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-05-21T15:48:34Z"}, "message": "Fix if/else coercion", "tree": {"sha": "0d05471a221455d53c1caffbcd0d705ddb5a5241", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d05471a221455d53c1caffbcd0d705ddb5a5241"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b939a6dcacc0460f49781e922c979d235a52eeca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b939a6dcacc0460f49781e922c979d235a52eeca", "html_url": "https://github.com/rust-lang/rust/commit/b939a6dcacc0460f49781e922c979d235a52eeca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b939a6dcacc0460f49781e922c979d235a52eeca/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "212f0477f29ec27a3981a916de432fc9ef872ff3", "url": "https://api.github.com/repos/rust-lang/rust/commits/212f0477f29ec27a3981a916de432fc9ef872ff3", "html_url": "https://github.com/rust-lang/rust/commit/212f0477f29ec27a3981a916de432fc9ef872ff3"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "f439169ea4a5ad2d690db9f11238a31962219e7c", "filename": "crates/hir_ty/src/infer/expr.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b939a6dcacc0460f49781e922c979d235a52eeca/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b939a6dcacc0460f49781e922c979d235a52eeca/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs?ref=b939a6dcacc0460f49781e922c979d235a52eeca", "patch": "@@ -131,17 +131,20 @@ impl<'a> InferenceContext<'a> {\n                 let condition_diverges = mem::replace(&mut self.diverges, Diverges::Maybe);\n                 let mut both_arms_diverge = Diverges::Always;\n \n+                let mut result_ty = self.table.new_type_var();\n                 let then_ty = self.infer_expr_inner(*then_branch, &expected);\n                 both_arms_diverge &= mem::replace(&mut self.diverges, Diverges::Maybe);\n+                result_ty = self.coerce_merge_branch(&result_ty, &then_ty);\n                 let else_ty = match else_branch {\n                     Some(else_branch) => self.infer_expr_inner(*else_branch, &expected),\n                     None => TyBuilder::unit(),\n                 };\n                 both_arms_diverge &= self.diverges;\n+                result_ty = self.coerce_merge_branch(&result_ty, &else_ty);\n \n                 self.diverges = condition_diverges | both_arms_diverge;\n \n-                self.coerce_merge_branch(&then_ty, &else_ty)\n+                result_ty\n             }\n             Expr::Block { statements, tail, label, id: _ } => {\n                 let old_resolver = mem::replace("}]}