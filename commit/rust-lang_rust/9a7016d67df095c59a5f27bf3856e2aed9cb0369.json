{"sha": "9a7016d67df095c59a5f27bf3856e2aed9cb0369", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhNzAxNmQ2N2RmMDk1YzU5YTVmMjdiZjM4NTZlMmFlZDljYjAzNjk=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-18T23:51:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-06-18T23:51:58Z"}, "message": "Rollup merge of #61505 - ebarnard:doc-shrink, r=GuillaumeGomez\n\nOnly show methods that appear in `impl` blocks in the Implementors sections of trait doc pages\n\nIn the \"Implementors\" and \"Implementations on Foreign Types\" sections, only show methods that appear in the `impl` block for that type. This has the benefit of\n- Reducing the size of the Iterator page, and other large trait documentation pages.\n- Retaining documentation on the `impl` blocks and functions in the `impl` blocks.\n- Indicating which provided methods are overridden.\n- Making the documentation match the structure of the code being documented.\n- Being a small change that can be easily backed out if issues arise.\n\nA set of Rust stdlib docs build with this change are [available here](https://ebarnard.github.io/2019-06-03-rust-smaller-trait-implementers-docs/).\n\nThe size of the [`Iterator` doc page](https://ebarnard.github.io/2019-06-03-rust-smaller-trait-implementers-docs/std/iter/trait.Iterator.html) is reduced from 14.4MB (latest nightly) to 724kB.\n\nBefore:\n<img width=\"1411\" alt=\"Screenshot 2019-06-03 at 23 12 17\" src=\"https://user-images.githubusercontent.com/1059683/58837971-1722a780-8655-11e9-8d81-51e48130951d.png\">\n\nAfter:\n<img width=\"1428\" alt=\"Screenshot 2019-06-03 at 16 41 27\" src=\"https://user-images.githubusercontent.com/1059683/58814907-84ffac80-861e-11e9-8692-79be473a5299.png\">\n\ncc #55900", "tree": {"sha": "3223fdc4f545643e9c78ec614fe9367be2389e69", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3223fdc4f545643e9c78ec614fe9367be2389e69"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a7016d67df095c59a5f27bf3856e2aed9cb0369", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdCXkeCRBK7hj4Ov3rIwAAdHIIAG6VnebTXC0bDrl3FzPnmDNq\n7R+xeyIh513AyBpmy1HbZhaTPUuvoLBrJ6s6E7GrHcDRbYUxPb7PtVTnIayaP3o6\nywsXzvh43wr162PEb782q/1BZRH0GPG6Y4sG7osGs25YMYCxpXJxyRQCXnF59D85\nU3NCDpMvPJS3GMFjGSGe68qe9lcnFCmf1esM2kmWvp8hqF66F0ol8GT3l840MLLn\nv/so1K49lv+gu55BysibqQ4Q1Jbd5jERLKS9pUc/sDVGqfYj8zoQ8dz42NzUhXl1\nJBGpeFbIJ7qqiKLhtxvTlDMad9jPwJjZjt9REqhbSK1OjxsI6zShdgP+3VXuMYg=\n=M8Dx\n-----END PGP SIGNATURE-----\n", "payload": "tree 3223fdc4f545643e9c78ec614fe9367be2389e69\nparent 04a3dd8a872633ca1e4c217d11f741cc35cb19a5\nparent 45bb4097b4bb2670f93d0836d40d31bbde38aab2\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1560901918 +0200\ncommitter GitHub <noreply@github.com> 1560901918 +0200\n\nRollup merge of #61505 - ebarnard:doc-shrink, r=GuillaumeGomez\n\nOnly show methods that appear in `impl` blocks in the Implementors sections of trait doc pages\n\nIn the \"Implementors\" and \"Implementations on Foreign Types\" sections, only show methods that appear in the `impl` block for that type. This has the benefit of\n- Reducing the size of the Iterator page, and other large trait documentation pages.\n- Retaining documentation on the `impl` blocks and functions in the `impl` blocks.\n- Indicating which provided methods are overridden.\n- Making the documentation match the structure of the code being documented.\n- Being a small change that can be easily backed out if issues arise.\n\nA set of Rust stdlib docs build with this change are [available here](https://ebarnard.github.io/2019-06-03-rust-smaller-trait-implementers-docs/).\n\nThe size of the [`Iterator` doc page](https://ebarnard.github.io/2019-06-03-rust-smaller-trait-implementers-docs/std/iter/trait.Iterator.html) is reduced from 14.4MB (latest nightly) to 724kB.\n\nBefore:\n<img width=\"1411\" alt=\"Screenshot 2019-06-03 at 23 12 17\" src=\"https://user-images.githubusercontent.com/1059683/58837971-1722a780-8655-11e9-8d81-51e48130951d.png\">\n\nAfter:\n<img width=\"1428\" alt=\"Screenshot 2019-06-03 at 16 41 27\" src=\"https://user-images.githubusercontent.com/1059683/58814907-84ffac80-861e-11e9-8692-79be473a5299.png\">\n\ncc #55900\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a7016d67df095c59a5f27bf3856e2aed9cb0369", "html_url": "https://github.com/rust-lang/rust/commit/9a7016d67df095c59a5f27bf3856e2aed9cb0369", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a7016d67df095c59a5f27bf3856e2aed9cb0369/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04a3dd8a872633ca1e4c217d11f741cc35cb19a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/04a3dd8a872633ca1e4c217d11f741cc35cb19a5", "html_url": "https://github.com/rust-lang/rust/commit/04a3dd8a872633ca1e4c217d11f741cc35cb19a5"}, {"sha": "45bb4097b4bb2670f93d0836d40d31bbde38aab2", "url": "https://api.github.com/repos/rust-lang/rust/commits/45bb4097b4bb2670f93d0836d40d31bbde38aab2", "html_url": "https://github.com/rust-lang/rust/commit/45bb4097b4bb2670f93d0836d40d31bbde38aab2"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "b42a78f1e226a58d1539ddd267ac161e28278bac", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/9a7016d67df095c59a5f27bf3856e2aed9cb0369/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a7016d67df095c59a5f27bf3856e2aed9cb0369/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=9a7016d67df095c59a5f27bf3856e2aed9cb0369", "patch": "@@ -3066,7 +3066,7 @@ fn render_implementor(cx: &Context, implementor: &Impl, w: &mut fmt::Formatter<'\n         _ => false,\n     };\n     render_impl(w, cx, implementor, AssocItemLink::Anchor(None), RenderMode::Normal,\n-                implementor.impl_item.stable_since(), false, Some(use_absolute), false)?;\n+                implementor.impl_item.stable_since(), false, Some(use_absolute), false, false)?;\n     Ok(())\n }\n \n@@ -3077,7 +3077,7 @@ fn render_impls(cx: &Context, w: &mut fmt::Formatter<'_>,\n         let did = i.trait_did().unwrap();\n         let assoc_link = AssocItemLink::GotoSource(did, &i.inner_impl().provided_trait_methods);\n         render_impl(w, cx, i, assoc_link,\n-                    RenderMode::Normal, containing_item.stable_since(), true, None, false)?;\n+                    RenderMode::Normal, containing_item.stable_since(), true, None, false, true)?;\n     }\n     Ok(())\n }\n@@ -3307,7 +3307,7 @@ fn item_trait(\n                 );\n                 render_impl(w, cx, &implementor, assoc_link,\n                             RenderMode::Normal, implementor.impl_item.stable_since(), false,\n-                            None, true)?;\n+                            None, true, false)?;\n             }\n             write_loading_content(w, \"\")?;\n         }\n@@ -3979,7 +3979,7 @@ fn render_assoc_items(w: &mut fmt::Formatter<'_>,\n         };\n         for i in &non_trait {\n             render_impl(w, cx, i, AssocItemLink::Anchor(None), render_mode,\n-                        containing_item.stable_since(), true, None, false)?;\n+                        containing_item.stable_since(), true, None, false, true)?;\n         }\n     }\n     if let AssocItemRender::DerefFor { .. } = what {\n@@ -4161,7 +4161,8 @@ fn spotlight_decl(decl: &clean::FnDecl) -> Result<String, fmt::Error> {\n \n fn render_impl(w: &mut fmt::Formatter<'_>, cx: &Context, i: &Impl, link: AssocItemLink<'_>,\n                render_mode: RenderMode, outer_version: Option<&str>, show_def_docs: bool,\n-               use_absolute: Option<bool>, is_on_foreign_type: bool) -> fmt::Result {\n+               use_absolute: Option<bool>, is_on_foreign_type: bool,\n+               show_default_items: bool) -> fmt::Result {\n     if render_mode == RenderMode::Normal {\n         let id = cx.derive_id(match i.inner_impl().trait_ {\n             Some(ref t) => if is_on_foreign_type {\n@@ -4345,9 +4346,13 @@ fn render_impl(w: &mut fmt::Formatter<'_>, cx: &Context, i: &Impl, link: AssocIt\n \n     // If we've implemented a trait, then also emit documentation for all\n     // default items which weren't overridden in the implementation block.\n-    if let Some(t) = trait_ {\n-        render_default_items(w, cx, t, &i.inner_impl(),\n-                             render_mode, outer_version, show_def_docs)?;\n+    // We don't emit documentation for default items if they appear in the\n+    // Implementations on Foreign Types or Implementors sections.\n+    if show_default_items {\n+        if let Some(t) = trait_ {\n+            render_default_items(w, cx, t, &i.inner_impl(),\n+                                render_mode, outer_version, show_def_docs)?;\n+        }\n     }\n     write!(w, \"</div>\")?;\n "}]}