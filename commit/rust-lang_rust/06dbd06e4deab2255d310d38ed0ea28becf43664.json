{"sha": "06dbd06e4deab2255d310d38ed0ea28becf43664", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2ZGJkMDZlNGRlYWIyMjU1ZDMxMGQzOGVkMGVhMjhiZWNmNDM2NjQ=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-08-04T05:30:04Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-08-04T05:35:59Z"}, "message": "forbid `#[track_caller]` on main", "tree": {"sha": "6f573a5e035727c82735fcb7b3916ad4cdc57935", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f573a5e035727c82735fcb7b3916ad4cdc57935"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/06dbd06e4deab2255d310d38ed0ea28becf43664", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/06dbd06e4deab2255d310d38ed0ea28becf43664", "html_url": "https://github.com/rust-lang/rust/commit/06dbd06e4deab2255d310d38ed0ea28becf43664", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/06dbd06e4deab2255d310d38ed0ea28becf43664/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d51b71a35a816f4be56f77d1d1a6f4095352649e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d51b71a35a816f4be56f77d1d1a6f4095352649e", "html_url": "https://github.com/rust-lang/rust/commit/d51b71a35a816f4be56f77d1d1a6f4095352649e"}], "stats": {"total": 71, "additions": 70, "deletions": 1}, "files": [{"sha": "016f68bfc6b3b1fddb0c378a1d6592a46aa69dc1", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 35, "deletions": 1, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/06dbd06e4deab2255d310d38ed0ea28becf43664/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06dbd06e4deab2255d310d38ed0ea28becf43664/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=06dbd06e4deab2255d310d38ed0ea28becf43664", "patch": "@@ -100,7 +100,7 @@ use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_middle::util;\n use rustc_session::config::EntryFnType;\n-use rustc_span::{Span, DUMMY_SP};\n+use rustc_span::{symbol::sym, Span, DUMMY_SP};\n use rustc_target::spec::abi::Abi;\n use rustc_trait_selection::traits::error_reporting::InferCtxtExt as _;\n use rustc_trait_selection::traits::{\n@@ -194,6 +194,23 @@ fn check_main_fn_ty(tcx: TyCtxt<'_>, main_def_id: LocalDefId) {\n                         .emit();\n                         error = true;\n                     }\n+\n+                    for attr in it.attrs {\n+                        if attr.check_name(sym::track_caller) {\n+                            tcx.sess\n+                                .struct_span_err(\n+                                    attr.span,\n+                                    \"`main` function is not allowed to be `#[track_caller]`\",\n+                                )\n+                                .span_label(\n+                                    main_span,\n+                                    \"`main` function is not allowed to be `#[track_caller]`\",\n+                                )\n+                                .emit();\n+                            error = true;\n+                        }\n+                    }\n+\n                     if error {\n                         return;\n                     }\n@@ -274,6 +291,23 @@ fn check_start_fn_ty(tcx: TyCtxt<'_>, start_def_id: LocalDefId) {\n                         .emit();\n                         error = true;\n                     }\n+\n+                    for attr in it.attrs {\n+                        if attr.check_name(sym::track_caller) {\n+                            tcx.sess\n+                                .struct_span_err(\n+                                    attr.span,\n+                                    \"start is not allowed to be `#[track_caller]`\",\n+                                )\n+                                .span_label(\n+                                    start_span,\n+                                    \"start is not allowed to be `#[track_caller]`\",\n+                                )\n+                                .emit();\n+                            error = true;\n+                        }\n+                    }\n+\n                     if error {\n                         return;\n                     }"}, {"sha": "b2ea31bb5178b48493c49aaa089644bfb2fd95d0", "filename": "src/test/ui/rfc-2091-track-caller/error-with-main.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/06dbd06e4deab2255d310d38ed0ea28becf43664/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-main.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06dbd06e4deab2255d310d38ed0ea28becf43664/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-main.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-main.rs?ref=06dbd06e4deab2255d310d38ed0ea28becf43664", "patch": "@@ -0,0 +1,4 @@\n+#[track_caller] //~ ERROR `main` function is not allowed to be\n+fn main() {\n+    panic!(\"{}: oh no\", std::panic::Location::caller());\n+}"}, {"sha": "f05f88e7d71eace9825dc8ea4ebafad59431d44d", "filename": "src/test/ui/rfc-2091-track-caller/error-with-main.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/06dbd06e4deab2255d310d38ed0ea28becf43664/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-main.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/06dbd06e4deab2255d310d38ed0ea28becf43664/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-main.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-main.stderr?ref=06dbd06e4deab2255d310d38ed0ea28becf43664", "patch": "@@ -0,0 +1,12 @@\n+error: `main` function is not allowed to be `#[track_caller]`\n+  --> $DIR/error-with-main.rs:1:1\n+   |\n+LL |   #[track_caller]\n+   |   ^^^^^^^^^^^^^^^\n+LL | / fn main() {\n+LL | |     panic!(\"{}: oh no\", std::panic::Location::caller());\n+LL | | }\n+   | |_- `main` function is not allowed to be `#[track_caller]`\n+\n+error: aborting due to previous error\n+"}, {"sha": "678cb7fa404f5949b28aedbefe5500cfef5af778", "filename": "src/test/ui/rfc-2091-track-caller/error-with-start.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/06dbd06e4deab2255d310d38ed0ea28becf43664/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-start.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06dbd06e4deab2255d310d38ed0ea28becf43664/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-start.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-start.rs?ref=06dbd06e4deab2255d310d38ed0ea28becf43664", "patch": "@@ -0,0 +1,7 @@\n+#![feature(start)]\n+\n+#[start]\n+#[track_caller] //~ ERROR start is not allowed to be `#[track_caller]`\n+fn start(_argc: isize, _argv: *const *const u8) -> isize {\n+    panic!(\"{}: oh no\", std::panic::Location::caller());\n+}"}, {"sha": "03b2ce5514f552021ecfdec21927f577bce32fa4", "filename": "src/test/ui/rfc-2091-track-caller/error-with-start.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/06dbd06e4deab2255d310d38ed0ea28becf43664/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-start.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/06dbd06e4deab2255d310d38ed0ea28becf43664/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-start.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ferror-with-start.stderr?ref=06dbd06e4deab2255d310d38ed0ea28becf43664", "patch": "@@ -0,0 +1,12 @@\n+error: start is not allowed to be `#[track_caller]`\n+  --> $DIR/error-with-start.rs:4:1\n+   |\n+LL |   #[track_caller]\n+   |   ^^^^^^^^^^^^^^^\n+LL | / fn start(_argc: isize, _argv: *const *const u8) -> isize {\n+LL | |     panic!(\"{}: oh no\", std::panic::Location::caller());\n+LL | | }\n+   | |_- start is not allowed to be `#[track_caller]`\n+\n+error: aborting due to previous error\n+"}]}