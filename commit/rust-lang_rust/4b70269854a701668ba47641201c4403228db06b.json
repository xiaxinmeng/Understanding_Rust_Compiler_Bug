{"sha": "4b70269854a701668ba47641201c4403228db06b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiNzAyNjk4NTRhNzAxNjY4YmE0NzY0MTIwMWM0NDAzMjI4ZGIwNmI=", "commit": {"author": {"name": "Stuart Pernsteiner", "email": "spernsteiner@mozilla.com", "date": "2014-08-01T22:45:24Z"}, "committer": {"name": "Stuart Pernsteiner", "email": "spernsteiner@mozilla.com", "date": "2014-09-05T16:18:57Z"}, "message": "add tests for separate compilation", "tree": {"sha": "55244c0396cdaebafb227c863df8b2962237215e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55244c0396cdaebafb227c863df8b2962237215e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b70269854a701668ba47641201c4403228db06b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b70269854a701668ba47641201c4403228db06b", "html_url": "https://github.com/rust-lang/rust/commit/4b70269854a701668ba47641201c4403228db06b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b70269854a701668ba47641201c4403228db06b/comments", "author": {"login": "spernsteiner", "id": 3031136, "node_id": "MDQ6VXNlcjMwMzExMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/3031136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spernsteiner", "html_url": "https://github.com/spernsteiner", "followers_url": "https://api.github.com/users/spernsteiner/followers", "following_url": "https://api.github.com/users/spernsteiner/following{/other_user}", "gists_url": "https://api.github.com/users/spernsteiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/spernsteiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spernsteiner/subscriptions", "organizations_url": "https://api.github.com/users/spernsteiner/orgs", "repos_url": "https://api.github.com/users/spernsteiner/repos", "events_url": "https://api.github.com/users/spernsteiner/events{/privacy}", "received_events_url": "https://api.github.com/users/spernsteiner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spernsteiner", "id": 3031136, "node_id": "MDQ6VXNlcjMwMzExMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/3031136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spernsteiner", "html_url": "https://github.com/spernsteiner", "followers_url": "https://api.github.com/users/spernsteiner/followers", "following_url": "https://api.github.com/users/spernsteiner/following{/other_user}", "gists_url": "https://api.github.com/users/spernsteiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/spernsteiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spernsteiner/subscriptions", "organizations_url": "https://api.github.com/users/spernsteiner/orgs", "repos_url": "https://api.github.com/users/spernsteiner/repos", "events_url": "https://api.github.com/users/spernsteiner/events{/privacy}", "received_events_url": "https://api.github.com/users/spernsteiner/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73f8adcbc830b3099026832eadb1ee5f876e041b", "url": "https://api.github.com/repos/rust-lang/rust/commits/73f8adcbc830b3099026832eadb1ee5f876e041b", "html_url": "https://github.com/rust-lang/rust/commit/73f8adcbc830b3099026832eadb1ee5f876e041b"}], "stats": {"total": 502, "additions": 502, "deletions": 0}, "files": [{"sha": "8f5d3b5768a1a1d6a56767fc0dc21447c59bb5dc", "filename": "src/test/auxiliary/sepcomp-extern-lib.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Fauxiliary%2Fsepcomp-extern-lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Fauxiliary%2Fsepcomp-extern-lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fsepcomp-extern-lib.rs?ref=4b70269854a701668ba47641201c4403228db06b", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[no_mangle]\n+pub extern \"C\" fn foo() -> uint {\n+    1234\n+}"}, {"sha": "1cb7ead2cff05a85e64be99693cd9143318e68a6", "filename": "src/test/auxiliary/sepcomp_cci_lib.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Fauxiliary%2Fsepcomp_cci_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Fauxiliary%2Fsepcomp_cci_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fsepcomp_cci_lib.rs?ref=4b70269854a701668ba47641201c4403228db06b", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[inline]\n+pub fn cci_fn() -> uint {\n+    1200\n+}\n+\n+#[inline]\n+pub static CCI_STATIC: uint = 34;"}, {"sha": "d1d9e3b8ff3ac7b12890e765d2fc546faa6d6d71", "filename": "src/test/auxiliary/sepcomp_lib.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Fauxiliary%2Fsepcomp_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Fauxiliary%2Fsepcomp_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fsepcomp_lib.rs?ref=4b70269854a701668ba47641201c4403228db06b", "patch": "@@ -0,0 +1,31 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -C codegen-units=3 --crate-type=rlib,dylib\n+\n+pub mod a {\n+    pub fn one() -> uint {\n+        1\n+    }\n+}\n+\n+pub mod b {\n+    pub fn two() -> uint {\n+        2\n+    }\n+}\n+\n+pub mod c {\n+    use a::one;\n+    use b::two;\n+    pub fn three() -> uint {\n+        one() + two()\n+    }\n+}"}, {"sha": "59706e20bede29c154bbfd6ddbfe4e69a5d8e7b3", "filename": "src/test/compile-fail/sepcomp-lib-lto.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Fcompile-fail%2Fsepcomp-lib-lto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Fcompile-fail%2Fsepcomp-lib-lto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsepcomp-lib-lto.rs?ref=4b70269854a701668ba47641201c4403228db06b", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Make sure we give a sane error message when the user requests LTO with a\n+// library built with -C codegen-units > 1.\n+\n+// aux-build:sepcomp_lib.rs\n+// compile-flags: -Z lto\n+// error-pattern:missing compressed bytecode\n+// no-prefer-dynamic\n+\n+extern crate sepcomp_lib;\n+use sepcomp_lib::a::one;\n+use sepcomp_lib::b::two;\n+use sepcomp_lib::c::three;\n+\n+fn main() {\n+    assert_eq!(one(), 1);\n+    assert_eq!(two(), 2);\n+    assert_eq!(three(), 3);\n+}"}, {"sha": "fdb39f851970fe4cce09f920088217bb569117a9", "filename": "src/test/run-make/sepcomp-cci-copies/Makefile", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Frun-make%2Fsepcomp-cci-copies%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Frun-make%2Fsepcomp-cci-copies%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fsepcomp-cci-copies%2FMakefile?ref=4b70269854a701668ba47641201c4403228db06b", "patch": "@@ -0,0 +1,10 @@\n+-include ../tools.mk\n+\n+# Check that cross-crate inlined items are inlined in all compilation units\n+# that refer to them, and not in any other compilation units.\n+\n+all:\n+\t$(RUSTC) cci_lib.rs\n+\t$(RUSTC) foo.rs --emit=ir -C codegen-units=3\n+\t[ \"$$(cat \"$(TMPDIR)\"/foo.?.ll | grep -c define\\ .*cci_fn)\" -eq \"2\" ]\n+\t[ \"$$(cat \"$(TMPDIR)\"/foo.?.ll | grep -c CCI_STATIC.*=.*constant)\" -eq \"2\" ]"}, {"sha": "099101d6f26790ac9cf86c8bf6c9732c9f74922d", "filename": "src/test/run-make/sepcomp-cci-copies/cci_lib.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Frun-make%2Fsepcomp-cci-copies%2Fcci_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Frun-make%2Fsepcomp-cci-copies%2Fcci_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fsepcomp-cci-copies%2Fcci_lib.rs?ref=4b70269854a701668ba47641201c4403228db06b", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"rlib\"]\n+\n+#[inline]\n+pub fn cci_fn() -> uint {\n+    1234\n+}\n+\n+#[inline]\n+pub static CCI_STATIC: uint = 2345;"}, {"sha": "c702e578c0965b20a00f2e950340d49d7dd85568", "filename": "src/test/run-make/sepcomp-cci-copies/foo.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Frun-make%2Fsepcomp-cci-copies%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Frun-make%2Fsepcomp-cci-copies%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fsepcomp-cci-copies%2Ffoo.rs?ref=4b70269854a701668ba47641201c4403228db06b", "patch": "@@ -0,0 +1,36 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern crate cci_lib;\n+use cci_lib::{cci_fn, CCI_STATIC};\n+\n+fn call1() -> uint {\n+    cci_fn() + CCI_STATIC\n+}\n+\n+mod a {\n+    use cci_lib::cci_fn;\n+    pub fn call2() -> uint {\n+        cci_fn()\n+    }\n+}\n+\n+mod b {\n+    use cci_lib::CCI_STATIC;\n+    pub fn call3() -> uint {\n+        CCI_STATIC\n+    }\n+}\n+\n+fn main() {\n+    call1();\n+    a::call2();\n+    b::call3();\n+}"}, {"sha": "6cb9f9a3f31bc0fc510f143d26412f7da24e0554", "filename": "src/test/run-make/sepcomp-inlining/Makefile", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Frun-make%2Fsepcomp-inlining%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Frun-make%2Fsepcomp-inlining%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fsepcomp-inlining%2FMakefile?ref=4b70269854a701668ba47641201c4403228db06b", "patch": "@@ -0,0 +1,13 @@\n+-include ../tools.mk\n+\n+# Test that #[inline(always)] functions still get inlined across compilation\n+# unit boundaries.  Compilation should produce three IR files, with each one\n+# containing a definition of the inlined function.  Also, the non-#[inline]\n+# function should be defined in only one compilation unit.\n+\n+all:\n+\t$(RUSTC) foo.rs --emit=ir -C codegen-units=3\n+\t[ \"$$(cat \"$(TMPDIR)\"/foo.?.ll | grep -c define\\ i32\\ .*inlined)\" -eq \"1\" ]\n+\t[ \"$$(cat \"$(TMPDIR)\"/foo.?.ll | grep -c define\\ available_externally\\ i32\\ .*inlined)\" -eq \"2\" ]\n+\t[ \"$$(cat \"$(TMPDIR)\"/foo.?.ll | grep -c define\\ i32\\ .*normal)\" -eq \"1\" ]\n+\t[ \"$$(cat \"$(TMPDIR)\"/foo.?.ll | grep -c declare\\ i32\\ .*normal)\" -eq \"2\" ]"}, {"sha": "20fd18b829562cd388cb02bf9363d91d6903be71", "filename": "src/test/run-make/sepcomp-inlining/foo.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Frun-make%2Fsepcomp-inlining%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Frun-make%2Fsepcomp-inlining%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fsepcomp-inlining%2Ffoo.rs?ref=4b70269854a701668ba47641201c4403228db06b", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[inline]\n+fn inlined() -> u32 {\n+    1234\n+}\n+\n+fn normal() -> u32 {\n+    2345\n+}\n+\n+mod a {\n+    pub fn f() -> u32 {\n+        ::inlined() + ::normal()\n+    }\n+}\n+\n+mod b {\n+    pub fn f() -> u32 {\n+        ::inlined() + ::normal()\n+    }\n+}\n+\n+fn main() {\n+    a::f();\n+    b::f();\n+}"}, {"sha": "265bd68bd2e8216ed722e7561f0635879b21585d", "filename": "src/test/run-make/sepcomp-separate/Makefile", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Frun-make%2Fsepcomp-separate%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Frun-make%2Fsepcomp-separate%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fsepcomp-separate%2FMakefile?ref=4b70269854a701668ba47641201c4403228db06b", "patch": "@@ -0,0 +1,9 @@\n+-include ../tools.mk\n+\n+# Test that separate compilation actually puts code into separate compilation\n+# units.  `foo.rs` defines `magic_fn` in three different modules, which should\n+# wind up in three different compilation units.\n+\n+all:\n+\t$(RUSTC) foo.rs --emit=ir -C codegen-units=3\n+\t[ \"$$(cat \"$(TMPDIR)\"/foo.?.ll | grep -c define\\ .*magic_fn)\" -eq \"3\" ]"}, {"sha": "fe6a7b5a18f27c0115f4ebaa7d5c69fd21a0af97", "filename": "src/test/run-make/sepcomp-separate/foo.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Frun-make%2Fsepcomp-separate%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Frun-make%2Fsepcomp-separate%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fsepcomp-separate%2Ffoo.rs?ref=4b70269854a701668ba47641201c4403228db06b", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn magic_fn() -> uint {\n+    1234\n+}\n+\n+mod a {\n+    pub fn magic_fn() -> uint {\n+        2345\n+    }\n+}\n+\n+mod b {\n+    pub fn magic_fn() -> uint {\n+        3456\n+    }\n+}\n+\n+fn main() { }"}, {"sha": "0178b5e786d65c6d36b73dd5e4ee52eacde77492", "filename": "src/test/run-pass/sepcomp-cci.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Frun-pass%2Fsepcomp-cci.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Frun-pass%2Fsepcomp-cci.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsepcomp-cci.rs?ref=4b70269854a701668ba47641201c4403228db06b", "patch": "@@ -0,0 +1,41 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -C codegen-units=3\n+// aux-build:sepcomp_cci_lib.rs\n+\n+// Test accessing cross-crate inlined items from multiple compilation units.\n+\n+extern crate sepcomp_cci_lib;\n+use sepcomp_cci_lib::{cci_fn, CCI_STATIC};\n+\n+fn call1() -> uint {\n+    cci_fn() + CCI_STATIC\n+}\n+\n+mod a {\n+    use sepcomp_cci_lib::{cci_fn, CCI_STATIC};\n+    pub fn call2() -> uint {\n+        cci_fn() + CCI_STATIC\n+    }\n+}\n+\n+mod b {\n+    use sepcomp_cci_lib::{cci_fn, CCI_STATIC};\n+    pub fn call3() -> uint {\n+        cci_fn() + CCI_STATIC\n+    }\n+}\n+\n+fn main() {\n+    assert_eq!(call1(), 1234);\n+    assert_eq!(a::call2(), 1234);\n+    assert_eq!(b::call3(), 1234);\n+}"}, {"sha": "a5506e3fc761dc1deddd1a589041e17444168f42", "filename": "src/test/run-pass/sepcomp-extern.rs", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Frun-pass%2Fsepcomp-extern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Frun-pass%2Fsepcomp-extern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsepcomp-extern.rs?ref=4b70269854a701668ba47641201c4403228db06b", "patch": "@@ -0,0 +1,42 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -C codegen-units=3\n+// aux-build:sepcomp-extern-lib.rs\n+\n+// Test accessing external items from multiple compilation units.\n+\n+#[link(name = \"sepcomp-extern-lib\")]\n+extern {\n+    #[allow(ctypes)]\n+    fn foo() -> uint;\n+}\n+\n+fn call1() -> uint {\n+    unsafe { foo() }\n+}\n+\n+mod a {\n+    pub fn call2() -> uint {\n+        unsafe { ::foo() }\n+    }\n+}\n+\n+mod b {\n+    pub fn call3() -> uint {\n+        unsafe { ::foo() }\n+    }\n+}\n+\n+fn main() {\n+    assert_eq!(call1(), 1234);\n+    assert_eq!(a::call2(), 1234);\n+    assert_eq!(b::call3(), 1234);\n+}"}, {"sha": "61f008ad854ebaef3432f2d61d2038d9587a3fe2", "filename": "src/test/run-pass/sepcomp-fns-backwards.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Frun-pass%2Fsepcomp-fns-backwards.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Frun-pass%2Fsepcomp-fns-backwards.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsepcomp-fns-backwards.rs?ref=4b70269854a701668ba47641201c4403228db06b", "patch": "@@ -0,0 +1,41 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -C codegen-units=3\n+\n+// Test references to items that haven't been translated yet.\n+\n+// Generate some code in the first compilation unit before declaring any\n+// modules.  This ensures that the first module doesn't go into the same\n+// compilation unit as the top-level module.\n+fn pad() -> uint { 0 }\n+\n+mod b {\n+    pub fn three() -> uint {\n+        ::one() + ::a::two()\n+    }\n+}\n+\n+mod a {\n+    pub fn two() -> uint {\n+        ::one() + ::one()\n+    }\n+}\n+\n+fn one() -> uint {\n+    1\n+}\n+\n+fn main() {\n+    assert_eq!(one(), 1);\n+    assert_eq!(a::two(), 2);\n+    assert_eq!(b::three(), 3);\n+}\n+"}, {"sha": "09f2a4281be084021c8d7c8af21f58330de3149d", "filename": "src/test/run-pass/sepcomp-fns.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Frun-pass%2Fsepcomp-fns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Frun-pass%2Fsepcomp-fns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsepcomp-fns.rs?ref=4b70269854a701668ba47641201c4403228db06b", "patch": "@@ -0,0 +1,38 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -C codegen-units=3\n+\n+// Test basic separate compilation functionality.  The functions should be able\n+// to call each other even though they will be placed in different compilation\n+// units.\n+\n+// Generate some code in the first compilation unit before declaring any\n+// modules.  This ensures that the first module doesn't go into the same\n+// compilation unit as the top-level module.\n+fn one() -> uint { 1 }\n+\n+mod a {\n+    pub fn two() -> uint {\n+        ::one() + ::one()\n+    }\n+}\n+\n+mod b {\n+    pub fn three() -> uint {\n+        ::one() + ::a::two()\n+    }\n+}\n+\n+fn main() {\n+    assert_eq!(one(), 1);\n+    assert_eq!(a::two(), 2);\n+    assert_eq!(b::three(), 3);\n+}"}, {"sha": "28adb55399b44afdb998e0f0d11de88b3460d331", "filename": "src/test/run-pass/sepcomp-lib.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Frun-pass%2Fsepcomp-lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Frun-pass%2Fsepcomp-lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsepcomp-lib.rs?ref=4b70269854a701668ba47641201c4403228db06b", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:sepcomp_lib.rs\n+\n+// Test linking against a library built with -C codegen-units > 1\n+\n+extern crate sepcomp_lib;\n+use sepcomp_lib::a::one;\n+use sepcomp_lib::b::two;\n+use sepcomp_lib::c::three;\n+\n+fn main() {\n+    assert_eq!(one(), 1);\n+    assert_eq!(two(), 2);\n+    assert_eq!(three(), 3);\n+}"}, {"sha": "26a652ae0ea4ff0684891a0094035a38093b2d07", "filename": "src/test/run-pass/sepcomp-statics.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Frun-pass%2Fsepcomp-statics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Frun-pass%2Fsepcomp-statics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsepcomp-statics.rs?ref=4b70269854a701668ba47641201c4403228db06b", "patch": "@@ -0,0 +1,39 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -C codegen-units=3\n+\n+// Test references to static items across compilation units.\n+\n+fn pad() -> uint { 0 }\n+\n+static ONE: uint = 1;\n+\n+mod b {\n+    // Separate compilation always switches to the LLVM module with the fewest\n+    // instructions.  Make sure we have some instructions in this module so\n+    // that `a` and `b` don't go into the same compilation unit.\n+    fn pad() -> uint { 0 }\n+\n+    pub static THREE: uint = ::ONE + ::a::TWO;\n+}\n+\n+mod a {\n+    fn pad() -> uint { 0 }\n+\n+    pub static TWO: uint = ::ONE + ::ONE;\n+}\n+\n+fn main() {\n+    assert_eq!(ONE, 1);\n+    assert_eq!(a::TWO, 2);\n+    assert_eq!(b::THREE, 3);\n+}\n+"}, {"sha": "5d154e02af67085e5d7808de78d1500517fb37b7", "filename": "src/test/run-pass/sepcomp-unwind.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Frun-pass%2Fsepcomp-unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b70269854a701668ba47641201c4403228db06b/src%2Ftest%2Frun-pass%2Fsepcomp-unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsepcomp-unwind.rs?ref=4b70269854a701668ba47641201c4403228db06b", "patch": "@@ -0,0 +1,38 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -C codegen-units=3\n+\n+// Test unwinding through multiple compilation units.\n+\n+// According to acrichto, in the distant past `ld -r` (which is used during\n+// linking when codegen-units > 1) was known to produce object files with\n+// damaged unwinding tables.  This may be related to GNU binutils bug #6893\n+// (\"Partial linking results in corrupt .eh_frame_hdr\"), but I'm not certain.\n+// In any case, this test should let us know if enabling parallel codegen ever\n+// breaks unwinding.\n+\n+fn pad() -> uint { 0 }\n+\n+mod a {\n+    pub fn f() {\n+        fail!();\n+    }\n+}\n+\n+mod b {\n+    pub fn g() {\n+        ::a::f();\n+    }\n+}\n+\n+fn main() {\n+    std::task::try(proc() { ::b::g() }).unwrap_err();\n+}"}]}