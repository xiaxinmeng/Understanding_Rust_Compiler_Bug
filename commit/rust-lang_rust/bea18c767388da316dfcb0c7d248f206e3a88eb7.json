{"sha": "bea18c767388da316dfcb0c7d248f206e3a88eb7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlYTE4Yzc2NzM4OGRhMzE2ZGZjYjBjN2QyNDhmMjA2ZTNhODhlYjc=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-02-18T15:07:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-18T15:07:27Z"}, "message": "Rollup merge of #69205 - JohnTitor:allow-whitespaces, r=Mark-Simulacrum\n\nAllow whitespaces in revision flags\n\nAllow whitespaces in revision flags, like `// [foo]`.\n\nFixes #69183", "tree": {"sha": "4186e72a4320ea30c6c29bca83a1e4439ed84364", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4186e72a4320ea30c6c29bca83a1e4439ed84364"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bea18c767388da316dfcb0c7d248f206e3a88eb7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeS/2vCRBK7hj4Ov3rIwAAdHIIADA8tqS0sd7X9Zd2D2UXQrxJ\nCihy5Cu8igSVw8U6ke8FXnzhLlc16rqYKME5TiWUrLqyUYnmkt+lVg3kEH4mW/lf\nwjJwtws75LSwlPWErBIneDz9n+MtR0wOWdHpWIlGt8q5VKqLzHKLvJuwSFAxd5uA\nRvtedyU2+pSIaw7kffXz+pVa6KTpJjEGC79qhhqNyQsGdRC5GgfoAlFefGFpjFes\niMjTGw4fKWaQ/RokjMGdg8+xhnVNQ3dhOWTfD9g9eS87Bs10fDR9PjQYVZZFxs2v\nfeUc5lss8voWygsqMf53w6ZWc0YohX7xrxAlt/ldFMvERIbL4c38WibeXyajfUI=\n=ETrM\n-----END PGP SIGNATURE-----\n", "payload": "tree 4186e72a4320ea30c6c29bca83a1e4439ed84364\nparent 8b93e67c3282da8c9707f78aae0c118bb41341ef\nparent d1a7ae7d1659dae412dde2eadeaf1cf7c9d87570\nauthor Dylan DPC <dylan.dpc@gmail.com> 1582038447 +0100\ncommitter GitHub <noreply@github.com> 1582038447 +0100\n\nRollup merge of #69205 - JohnTitor:allow-whitespaces, r=Mark-Simulacrum\n\nAllow whitespaces in revision flags\n\nAllow whitespaces in revision flags, like `// [foo]`.\n\nFixes #69183\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bea18c767388da316dfcb0c7d248f206e3a88eb7", "html_url": "https://github.com/rust-lang/rust/commit/bea18c767388da316dfcb0c7d248f206e3a88eb7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bea18c767388da316dfcb0c7d248f206e3a88eb7/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b93e67c3282da8c9707f78aae0c118bb41341ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b93e67c3282da8c9707f78aae0c118bb41341ef", "html_url": "https://github.com/rust-lang/rust/commit/8b93e67c3282da8c9707f78aae0c118bb41341ef"}, {"sha": "d1a7ae7d1659dae412dde2eadeaf1cf7c9d87570", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1a7ae7d1659dae412dde2eadeaf1cf7c9d87570", "html_url": "https://github.com/rust-lang/rust/commit/d1a7ae7d1659dae412dde2eadeaf1cf7c9d87570"}], "stats": {"total": 11, "additions": 2, "deletions": 9}, "files": [{"sha": "2a24a8c3c9485c60b7f74e90ea3bf32887178d11", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/bea18c767388da316dfcb0c7d248f206e3a88eb7/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bea18c767388da316dfcb0c7d248f206e3a88eb7/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=bea18c767388da316dfcb0c7d248f206e3a88eb7", "patch": "@@ -631,10 +631,6 @@ fn iter_header<R: Read>(testfile: &Path, cfg: Option<&str>, rdr: R, it: &mut dyn\n \n     let comment = if testfile.to_string_lossy().ends_with(\".rs\") { \"//\" } else { \"#\" };\n \n-    // FIXME: would be nice to allow some whitespace between comment and brace :)\n-    // It took me like 2 days to debug why compile-flags weren\u2019t taken into account for my test :)\n-    let comment_with_brace = comment.to_string() + \"[\";\n-\n     let mut rdr = BufReader::new(rdr);\n     let mut ln = String::new();\n \n@@ -650,7 +646,7 @@ fn iter_header<R: Read>(testfile: &Path, cfg: Option<&str>, rdr: R, it: &mut dyn\n         let ln = ln.trim();\n         if ln.starts_with(\"fn\") || ln.starts_with(\"mod\") {\n             return;\n-        } else if ln.starts_with(&comment_with_brace) {\n+        } else if ln.starts_with(comment) && ln[comment.len()..].trim_start().starts_with('[') {\n             // A comment like `//[foo]` is specific to revision `foo`\n             if let Some(close_brace) = ln.find(']') {\n                 let open_brace = ln.find('[').unwrap();\n@@ -663,10 +659,7 @@ fn iter_header<R: Read>(testfile: &Path, cfg: Option<&str>, rdr: R, it: &mut dyn\n                     it(ln[(close_brace + 1)..].trim_start());\n                 }\n             } else {\n-                panic!(\n-                    \"malformed condition directive: expected `{}foo]`, found `{}`\",\n-                    comment_with_brace, ln\n-                )\n+                panic!(\"malformed condition directive: expected `{}[foo]`, found `{}`\", comment, ln)\n             }\n         } else if ln.starts_with(comment) {\n             it(ln[comment.len()..].trim_start());"}]}