{"sha": "5187e92223e7deebd48c50ae59d45def62941fce", "node_id": "C_kwDOAAsO6NoAKDUxODdlOTIyMjNlN2RlZWJkNDhjNTBhZTU5ZDQ1ZGVmNjI5NDFmY2U", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-23T23:57:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-23T23:57:39Z"}, "message": "Auto merge of #10819 - Alexendoo:needless-returns-suggestion, r=giraffate\n\nDisplay the `needless_return` suggestion\n\nFixes #10816\n\nMakes it a multipart suggestion so it can be displayed in a single frame which also fixes https://github.com/rust-lang/rust-clippy/issues/10816#issuecomment-1559784868\n\nchangelog: [`needless_return`]: Display the suggested change", "tree": {"sha": "eda080164adcfd925aeb1b872f7723b8ec6bbc49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eda080164adcfd925aeb1b872f7723b8ec6bbc49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5187e92223e7deebd48c50ae59d45def62941fce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5187e92223e7deebd48c50ae59d45def62941fce", "html_url": "https://github.com/rust-lang/rust/commit/5187e92223e7deebd48c50ae59d45def62941fce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5187e92223e7deebd48c50ae59d45def62941fce/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0fd17d3f0f97f03834e971137b8be75d0a57641", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0fd17d3f0f97f03834e971137b8be75d0a57641", "html_url": "https://github.com/rust-lang/rust/commit/a0fd17d3f0f97f03834e971137b8be75d0a57641"}, {"sha": "47a024e81d288323def492d07de79aae9550ff1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/47a024e81d288323def492d07de79aae9550ff1e", "html_url": "https://github.com/rust-lang/rust/commit/47a024e81d288323def492d07de79aae9550ff1e"}], "stats": {"total": 350, "additions": 283, "deletions": 67}, "files": [{"sha": "631ecf1428d6a0de26b98da75201f46175e88df7", "filename": "clippy_lints/src/returns.rs", "status": "modified", "additions": 13, "deletions": 15, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/5187e92223e7deebd48c50ae59d45def62941fce/clippy_lints%2Fsrc%2Freturns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5187e92223e7deebd48c50ae59d45def62941fce/clippy_lints%2Fsrc%2Freturns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freturns.rs?ref=5187e92223e7deebd48c50ae59d45def62941fce", "patch": "@@ -70,7 +70,7 @@ declare_clippy_lint! {\n     \"using a return statement like `return expr;` where an expression would suffice\"\n }\n \n-#[derive(PartialEq, Eq, Clone)]\n+#[derive(PartialEq, Eq)]\n enum RetReplacement<'tcx> {\n     Empty,\n     Block,\n@@ -80,18 +80,19 @@ enum RetReplacement<'tcx> {\n }\n \n impl<'tcx> RetReplacement<'tcx> {\n-    fn sugg_help(self) -> &'static str {\n+    fn sugg_help(&self) -> &'static str {\n         match self {\n             Self::Empty | Self::Expr(..) => \"remove `return`\",\n             Self::Block => \"replace `return` with an empty block\",\n             Self::Unit => \"replace `return` with a unit value\",\n             Self::IfSequence(..) => \"remove `return` and wrap the sequence with parentheses\",\n         }\n     }\n-    fn applicability(&self) -> Option<Applicability> {\n+\n+    fn applicability(&self) -> Applicability {\n         match self {\n-            Self::Expr(_, ap) | Self::IfSequence(_, ap) => Some(*ap),\n-            _ => None,\n+            Self::Expr(_, ap) | Self::IfSequence(_, ap) => *ap,\n+            _ => Applicability::MachineApplicable,\n         }\n     }\n }\n@@ -271,7 +272,7 @@ fn check_final_expr<'tcx>(\n                 return;\n             }\n \n-            emit_return_lint(cx, ret_span, semi_spans, replacement);\n+            emit_return_lint(cx, ret_span, semi_spans, &replacement);\n         },\n         ExprKind::If(_, then, else_clause_opt) => {\n             check_block_return(cx, &then.kind, peeled_drop_expr.span, semi_spans.clone());\n@@ -306,20 +307,17 @@ fn expr_contains_conjunctive_ifs<'tcx>(expr: &'tcx Expr<'tcx>) -> bool {\n     contains_if(expr, false)\n }\n \n-fn emit_return_lint(cx: &LateContext<'_>, ret_span: Span, semi_spans: Vec<Span>, replacement: RetReplacement<'_>) {\n+fn emit_return_lint(cx: &LateContext<'_>, ret_span: Span, semi_spans: Vec<Span>, replacement: &RetReplacement<'_>) {\n     if ret_span.from_expansion() {\n         return;\n     }\n \n-    let applicability = replacement.applicability().unwrap_or(Applicability::MachineApplicable);\n-    let return_replacement = replacement.to_string();\n-    let sugg_help = replacement.sugg_help();\n     span_lint_and_then(cx, NEEDLESS_RETURN, ret_span, \"unneeded `return` statement\", |diag| {\n-        diag.span_suggestion_hidden(ret_span, sugg_help, return_replacement, applicability);\n-        // for each parent statement, we need to remove the semicolon\n-        for semi_stmt_span in semi_spans {\n-            diag.tool_only_span_suggestion(semi_stmt_span, \"remove this semicolon\", \"\", applicability);\n-        }\n+        let suggestions = std::iter::once((ret_span, replacement.to_string()))\n+            .chain(semi_spans.into_iter().map(|span| (span, String::new())))\n+            .collect();\n+\n+        diag.multipart_suggestion_verbose(replacement.sugg_help(), suggestions, replacement.applicability());\n     });\n }\n "}, {"sha": "1d9d23d30083ca31e155cb29d9805a3e2176e56a", "filename": "tests/ui/needless_return.stderr", "status": "modified", "additions": 270, "deletions": 52, "changes": 322, "blob_url": "https://github.com/rust-lang/rust/blob/5187e92223e7deebd48c50ae59d45def62941fce/tests%2Fui%2Fneedless_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5187e92223e7deebd48c50ae59d45def62941fce/tests%2Fui%2Fneedless_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.stderr?ref=5187e92223e7deebd48c50ae59d45def62941fce", "patch": "@@ -5,87 +5,129 @@ LL |     return true;\n    |     ^^^^^^^^^^^\n    |\n    = note: `-D clippy::needless-return` implied by `-D warnings`\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL -     return true;\n+LL +     true\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:32:5\n    |\n LL |     return true;\n    |     ^^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL -     return true;\n+LL +     true\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:37:5\n    |\n LL |     return true;;;\n    |     ^^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL -     return true;;;\n+LL +     true\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:42:5\n    |\n LL |     return true;; ; ;\n    |     ^^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL -     return true;; ; ;\n+LL +     true\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:47:9\n    |\n LL |         return true;\n    |         ^^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL -         return true;\n+LL +         true\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:49:9\n    |\n LL |         return false;\n    |         ^^^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL -         return false;\n+LL +         false\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:55:17\n    |\n LL |         true => return false,\n    |                 ^^^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL |         true => false,\n+   |                 ~~~~~\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:57:13\n    |\n LL |             return true;\n    |             ^^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL -             return true;\n+LL +             true\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:64:9\n    |\n LL |         return true;\n    |         ^^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL -         return true;\n+LL +         true\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:66:16\n    |\n LL |     let _ = || return true;\n    |                ^^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL |     let _ = || true;\n+   |                ~~~~\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:70:5\n    |\n LL |     return the_answer!();\n    |     ^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL -     return the_answer!();\n+LL +     the_answer!()\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:73:21\n@@ -95,7 +137,12 @@ LL |   fn test_void_fun() {\n LL | |     return;\n    | |__________^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL - fn test_void_fun() {\n+LL -     return;\n+LL + fn test_void_fun() {\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:78:11\n@@ -105,7 +152,12 @@ LL |       if b {\n LL | |         return;\n    | |______________^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL -     if b {\n+LL -         return;\n+LL +     if b {\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:80:13\n@@ -115,15 +167,23 @@ LL |       } else {\n LL | |         return;\n    | |______________^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL -     } else {\n+LL -         return;\n+LL +     } else {\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:88:14\n    |\n LL |         _ => return,\n    |              ^^^^^^\n    |\n-   = help: replace `return` with a unit value\n+help: replace `return` with a unit value\n+   |\n+LL |         _ => (),\n+   |              ~~\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:96:24\n@@ -133,39 +193,58 @@ LL |               let _ = 42;\n LL | |             return;\n    | |__________________^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL -             let _ = 42;\n+LL -             return;\n+LL +             let _ = 42;\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:99:14\n    |\n LL |         _ => return,\n    |              ^^^^^^\n    |\n-   = help: replace `return` with a unit value\n+help: replace `return` with a unit value\n+   |\n+LL |         _ => (),\n+   |              ~~\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:112:9\n    |\n LL |         return String::from(\"test\");\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL -         return String::from(\"test\");\n+LL +         String::from(\"test\")\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:114:9\n    |\n LL |         return String::new();\n    |         ^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL -         return String::new();\n+LL +         String::new()\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:136:32\n    |\n LL |         bar.unwrap_or_else(|_| return)\n    |                                ^^^^^^\n    |\n-   = help: replace `return` with an empty block\n+help: replace `return` with an empty block\n+   |\n+LL |         bar.unwrap_or_else(|_| {})\n+   |                                ~~\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:140:21\n@@ -175,95 +254,140 @@ LL |           let _ = || {\n LL | |             return;\n    | |__________________^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL -         let _ = || {\n+LL -             return;\n+LL +         let _ = || {\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:143:20\n    |\n LL |         let _ = || return;\n    |                    ^^^^^^\n    |\n-   = help: replace `return` with an empty block\n+help: replace `return` with an empty block\n+   |\n+LL |         let _ = || {};\n+   |                    ~~\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:149:32\n    |\n LL |         res.unwrap_or_else(|_| return Foo)\n    |                                ^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL |         res.unwrap_or_else(|_| Foo)\n+   |                                ~~~\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:158:5\n    |\n LL |     return true;\n    |     ^^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL -     return true;\n+LL +     true\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:162:5\n    |\n LL |     return true;\n    |     ^^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL -     return true;\n+LL +     true\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:167:9\n    |\n LL |         return true;\n    |         ^^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL -         return true;\n+LL +         true\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:169:9\n    |\n LL |         return false;\n    |         ^^^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL -         return false;\n+LL +         false\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:175:17\n    |\n LL |         true => return false,\n    |                 ^^^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL |         true => false,\n+   |                 ~~~~~\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:177:13\n    |\n LL |             return true;\n    |             ^^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL -             return true;\n+LL +             true\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:184:9\n    |\n LL |         return true;\n    |         ^^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL -         return true;\n+LL +         true\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:186:16\n    |\n LL |     let _ = || return true;\n    |                ^^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL |     let _ = || true;\n+   |                ~~~~\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:190:5\n    |\n LL |     return the_answer!();\n    |     ^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL -     return the_answer!();\n+LL +     the_answer!()\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:193:33\n@@ -273,7 +397,12 @@ LL |   async fn async_test_void_fun() {\n LL | |     return;\n    | |__________^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL - async fn async_test_void_fun() {\n+LL -     return;\n+LL + async fn async_test_void_fun() {\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:198:11\n@@ -283,7 +412,12 @@ LL |       if b {\n LL | |         return;\n    | |______________^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL -     if b {\n+LL -         return;\n+LL +     if b {\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:200:13\n@@ -293,95 +427,153 @@ LL |       } else {\n LL | |         return;\n    | |______________^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL -     } else {\n+LL -         return;\n+LL +     } else {\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:208:14\n    |\n LL |         _ => return,\n    |              ^^^^^^\n    |\n-   = help: replace `return` with a unit value\n+help: replace `return` with a unit value\n+   |\n+LL |         _ => (),\n+   |              ~~\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:221:9\n    |\n LL |         return String::from(\"test\");\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL -         return String::from(\"test\");\n+LL +         String::from(\"test\")\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:223:9\n    |\n LL |         return String::new();\n    |         ^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL -         return String::new();\n+LL +         String::new()\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:239:5\n    |\n LL |     return format!(\"Hello {}\", \"world!\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL -     return format!(\"Hello {}\", \"world!\");\n+LL +     format!(\"Hello {}\", \"world!\")\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:251:9\n    |\n LL |         return true;\n    |         ^^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL ~         true\n+LL |     } else {\n+LL |         return false;\n+LL ~     }\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:253:9\n    |\n LL |         return false;\n    |         ^^^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL ~         false\n+LL ~     }\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:260:13\n    |\n LL |             return 10;\n    |             ^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL ~             10\n+LL |         },\n+ ...\n+LL |         },\n+LL ~     }\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:263:13\n    |\n LL |             return 100;\n    |             ^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL ~             100\n+LL |         },\n+LL ~     }\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:271:9\n    |\n LL |         return 0;\n    |         ^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL ~         0\n+LL ~     }\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:278:13\n    |\n LL |             return *(x as *const isize);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL ~             *(x as *const isize)\n+LL |         } else {\n+LL |             return !*(x as *const isize);\n+LL ~         }\n+LL ~     }\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:280:13\n    |\n LL |             return !*(x as *const isize);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL ~             !*(x as *const isize)\n+LL ~         }\n+LL ~     }\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:287:20\n@@ -392,47 +584,73 @@ LL | |\n LL | |         return;\n    | |______________^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL -         let _ = 42;\n+LL - \n+LL -         return;\n+LL +         let _ = 42;\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:294:20\n    |\n LL |         let _ = 42; return;\n    |                    ^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL -         let _ = 42; return;\n+LL +         let _ = 42;\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:306:9\n    |\n LL |         return Ok(format!(\"ok!\"));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL -         return Ok(format!(\"ok!\"));\n+LL +         Ok(format!(\"ok!\"))\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:308:9\n    |\n LL |         return Err(format!(\"err!\"));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL -         return Err(format!(\"err!\"));\n+LL +         Err(format!(\"err!\"))\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:314:9\n    |\n LL |         return if true { 1 } else { 2 };\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: remove `return`\n+help: remove `return`\n+   |\n+LL -         return if true { 1 } else { 2 };\n+LL +         if true { 1 } else { 2 }\n+   |\n \n error: unneeded `return` statement\n   --> $DIR/needless_return.rs:318:9\n    |\n LL |         return if b1 { 0 } else { 1 } | if b2 { 2 } else { 3 } | if b3 { 4 } else { 5 };\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: remove `return` and wrap the sequence with parentheses\n+help: remove `return` and wrap the sequence with parentheses\n+   |\n+LL -         return if b1 { 0 } else { 1 } | if b2 { 2 } else { 3 } | if b3 { 4 } else { 5 };\n+LL +         (if b1 { 0 } else { 1 } | if b2 { 2 } else { 3 } | if b3 { 4 } else { 5 })\n+   |\n \n error: aborting due to 52 previous errors\n "}]}