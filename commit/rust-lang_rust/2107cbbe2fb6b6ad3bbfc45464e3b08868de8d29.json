{"sha": "2107cbbe2fb6b6ad3bbfc45464e3b08868de8d29", "node_id": "C_kwDOAAsO6NoAKDIxMDdjYmJlMmZiNmI2YWQzYmJmYzQ1NDY0ZTNiMDg4NjhkZThkMjk", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-22T18:48:47Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-22T18:48:47Z"}, "message": "reorganize imports a bit", "tree": {"sha": "0f44e85cfdf4c7ca2fc6d111ec8264677b5ef9d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f44e85cfdf4c7ca2fc6d111ec8264677b5ef9d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2107cbbe2fb6b6ad3bbfc45464e3b08868de8d29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2107cbbe2fb6b6ad3bbfc45464e3b08868de8d29", "html_url": "https://github.com/rust-lang/rust/commit/2107cbbe2fb6b6ad3bbfc45464e3b08868de8d29", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2107cbbe2fb6b6ad3bbfc45464e3b08868de8d29/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5259fb9bb0f54bbcfdccce3a1fc28e01d0066e2c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5259fb9bb0f54bbcfdccce3a1fc28e01d0066e2c", "html_url": "https://github.com/rust-lang/rust/commit/5259fb9bb0f54bbcfdccce3a1fc28e01d0066e2c"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "bd0cb8057022f88228a7c014c069b4960823c94a", "filename": "src/lib.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/2107cbbe2fb6b6ad3bbfc45464e3b08868de8d29/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2107cbbe2fb6b6ad3bbfc45464e3b08868de8d29/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=2107cbbe2fb6b6ad3bbfc45464e3b08868de8d29", "patch": "@@ -80,9 +80,16 @@ pub use crate::shims::time::EvalContextExt as _;\n pub use crate::shims::tls::{EvalContextExt as _, TlsData};\n pub use crate::shims::EvalContextExt as _;\n \n-pub use crate::concurrency::data_race::{\n-    AtomicFenceOrd, AtomicReadOrd, AtomicRwOrd, AtomicWriteOrd,\n-    EvalContextExt as DataRaceEvalContextExt,\n+pub use crate::concurrency::{\n+    data_race::{\n+        AtomicFenceOrd, AtomicReadOrd, AtomicRwOrd, AtomicWriteOrd,\n+        EvalContextExt as DataRaceEvalContextExt,\n+    },\n+    sync::{CondvarId, EvalContextExt as SyncEvalContextExt, MutexId, RwLockId},\n+    thread::{\n+        EvalContextExt as ThreadsEvalContextExt, SchedulingAction, ThreadId, ThreadManager,\n+        ThreadState,\n+    },\n };\n pub use crate::diagnostics::{\n     register_diagnostic, report_error, EvalContextExt as DiagnosticsEvalContextExt,\n@@ -103,10 +110,7 @@ pub use crate::range_map::RangeMap;\n pub use crate::stacked_borrows::{\n     CallId, EvalContextExt as StackedBorEvalContextExt, Item, Permission, SbTag, Stack, Stacks,\n };\n-pub use concurrency::sync::{CondvarId, EvalContextExt as SyncEvalContextExt, MutexId, RwLockId};\n-pub use concurrency::thread::{\n-    EvalContextExt as ThreadsEvalContextExt, SchedulingAction, ThreadId, ThreadManager, ThreadState,\n-};\n+\n /// Insert rustc arguments at the beginning of the argument list that Miri wants to be\n /// set per default, for maximal validation power.\n pub const MIRI_DEFAULT_ARGS: &[&str] = &["}]}