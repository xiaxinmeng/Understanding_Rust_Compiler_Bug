{"sha": "c921aaed3967ba03b55ce1a6e2e4b192d95599c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5MjFhYWVkMzk2N2JhMDNiNTVjZTFhNmUyZTRiMTkyZDk1NTk5YzU=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2019-05-10T05:44:43Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2019-05-10T05:44:43Z"}, "message": "Include expression to wait for to the span of Await", "tree": {"sha": "6edc7aaca0631705c4e99afd896ab3b19c55935d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6edc7aaca0631705c4e99afd896ab3b19c55935d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c921aaed3967ba03b55ce1a6e2e4b192d95599c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c921aaed3967ba03b55ce1a6e2e4b192d95599c5", "html_url": "https://github.com/rust-lang/rust/commit/c921aaed3967ba03b55ce1a6e2e4b192d95599c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c921aaed3967ba03b55ce1a6e2e4b192d95599c5/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03bd2f653f0d0adb69d862fbeec64663157e71e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/03bd2f653f0d0adb69d862fbeec64663157e71e1", "html_url": "https://github.com/rust-lang/rust/commit/03bd2f653f0d0adb69d862fbeec64663157e71e1"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "ddc145e1cded20ba35377086bc2ce111003a5c6f", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c921aaed3967ba03b55ce1a6e2e4b192d95599c5/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c921aaed3967ba03b55ce1a6e2e4b192d95599c5/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=c921aaed3967ba03b55ce1a6e2e4b192d95599c5", "patch": "@@ -2764,6 +2764,7 @@ impl<'a> Parser<'a> {\n                     self.expect(&token::OpenDelim(token::Paren))?;\n                     let expr = self.parse_expr()?;\n                     self.expect(&token::CloseDelim(token::Paren))?;\n+                    hi = self.prev_span;\n                     ex = ExprKind::Await(ast::AwaitOrigin::MacroLike, expr);\n                 } else if self.token.is_path_start() {\n                     let path = self.parse_path(PathStyle::Expr)?;"}]}