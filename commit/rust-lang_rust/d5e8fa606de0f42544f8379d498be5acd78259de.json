{"sha": "d5e8fa606de0f42544f8379d498be5acd78259de", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1ZThmYTYwNmRlMGY0MjU0NGY4Mzc5ZDQ5OGJlNWFjZDc4MjU5ZGU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-08-12T10:49:59Z"}, "committer": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-08-12T10:49:59Z"}, "message": "Merge #1682\n\n1682: Drop support for old extendSelection API r=matklad a=matklad\n\nEmacs now handles this via native LSP request\r\n\r\nhttps://github.com/emacs-lsp/lsp-mode/commit/dc86bbb227147aa8141e690ad5648fdbd2ebdb9f\r\n\r\nr? @flodiebold \r\n\r\n(Have not actually tried elisp code)\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "07e031193619aaee5b691e22f9e82361fdbbd1b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07e031193619aaee5b691e22f9e82361fdbbd1b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5e8fa606de0f42544f8379d498be5acd78259de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5e8fa606de0f42544f8379d498be5acd78259de", "html_url": "https://github.com/rust-lang/rust/commit/d5e8fa606de0f42544f8379d498be5acd78259de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5e8fa606de0f42544f8379d498be5acd78259de/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "cce31580e1ec1770b7a5bf4e6fd3441df2c74533", "url": "https://api.github.com/repos/rust-lang/rust/commits/cce31580e1ec1770b7a5bf4e6fd3441df2c74533", "html_url": "https://github.com/rust-lang/rust/commit/cce31580e1ec1770b7a5bf4e6fd3441df2c74533"}, {"sha": "13eddd7c499388e956e47aae6a7210e43eb40d55", "url": "https://api.github.com/repos/rust-lang/rust/commits/13eddd7c499388e956e47aae6a7210e43eb40d55", "html_url": "https://github.com/rust-lang/rust/commit/13eddd7c499388e956e47aae6a7210e43eb40d55"}], "stats": {"total": 77, "additions": 4, "deletions": 73}, "files": [{"sha": "b9c99a22366f52f8be4f9c9a3d84f98d9f57178d", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d5e8fa606de0f42544f8379d498be5acd78259de/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5e8fa606de0f42544f8379d498be5acd78259de/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=d5e8fa606de0f42544f8379d498be5acd78259de", "patch": "@@ -346,7 +346,6 @@ fn on_request(\n         })?\n         .on::<req::AnalyzerStatus>(handlers::handle_analyzer_status)?\n         .on::<req::SyntaxTree>(handlers::handle_syntax_tree)?\n-        .on::<req::ExtendSelection>(handlers::handle_extend_selection)?\n         .on::<req::OnTypeFormatting>(handlers::handle_on_type_formatting)?\n         .on::<req::DocumentSymbolRequest>(handlers::handle_document_symbol)?\n         .on::<req::WorkspaceSymbol>(handlers::handle_workspace_symbol)?"}, {"sha": "a3d3f167c78649cd3ef81689d22962eadbc3fc05", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 1, "deletions": 22, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/d5e8fa606de0f42544f8379d498be5acd78259de/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5e8fa606de0f42544f8379d498be5acd78259de/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=d5e8fa606de0f42544f8379d498be5acd78259de", "patch": "@@ -9,7 +9,7 @@ use lsp_types::{\n     TextEdit, WorkspaceEdit,\n };\n use ra_ide_api::{\n-    AssistId, Cancelable, FileId, FilePosition, FileRange, FoldKind, Query, Runnable, RunnableKind,\n+    AssistId, FileId, FilePosition, FileRange, FoldKind, Query, Runnable, RunnableKind,\n };\n use ra_prof::profile;\n use ra_syntax::{AstNode, SyntaxKind, TextRange, TextUnit};\n@@ -45,27 +45,6 @@ pub fn handle_syntax_tree(world: WorldSnapshot, params: req::SyntaxTreeParams) -\n     Ok(res)\n }\n \n-// FIXME: drop this API\n-pub fn handle_extend_selection(\n-    world: WorldSnapshot,\n-    params: req::ExtendSelectionParams,\n-) -> Result<req::ExtendSelectionResult> {\n-    log::error!(\n-        \"extend selection is deprecated and will be removed soon,\n-         use the new selection range API in LSP\",\n-    );\n-    let file_id = params.text_document.try_conv_with(&world)?;\n-    let line_index = world.analysis().file_line_index(file_id)?;\n-    let selections = params\n-        .selections\n-        .into_iter()\n-        .map_conv_with(&line_index)\n-        .map(|range| FileRange { file_id, range })\n-        .map(|frange| world.analysis().extend_selection(frange).map(|it| it.conv_with(&line_index)))\n-        .collect::<Cancelable<Vec<_>>>()?;\n-    Ok(req::ExtendSelectionResult { selections })\n-}\n-\n pub fn handle_selection_range(\n     world: WorldSnapshot,\n     params: req::SelectionRangeParams,"}, {"sha": "b2f3c509d214728c635dce36ad6f10c10fce0bd3", "filename": "crates/ra_lsp_server/src/req.rs", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d5e8fa606de0f42544f8379d498be5acd78259de/crates%2Fra_lsp_server%2Fsrc%2Freq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5e8fa606de0f42544f8379d498be5acd78259de/crates%2Fra_lsp_server%2Fsrc%2Freq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Freq.rs?ref=d5e8fa606de0f42544f8379d498be5acd78259de", "patch": "@@ -43,27 +43,6 @@ pub struct SyntaxTreeParams {\n     pub range: Option<Range>,\n }\n \n-pub enum ExtendSelection {}\n-\n-impl Request for ExtendSelection {\n-    type Params = ExtendSelectionParams;\n-    type Result = ExtendSelectionResult;\n-    const METHOD: &'static str = \"rust-analyzer/extendSelection\";\n-}\n-\n-#[derive(Deserialize, Debug)]\n-#[serde(rename_all = \"camelCase\")]\n-pub struct ExtendSelectionParams {\n-    pub text_document: TextDocumentIdentifier,\n-    pub selections: Vec<Range>,\n-}\n-\n-#[derive(Serialize, Debug)]\n-#[serde(rename_all = \"camelCase\")]\n-pub struct ExtendSelectionResult {\n-    pub selections: Vec<Range>,\n-}\n-\n pub enum SelectionRangeRequest {}\n \n impl Request for SelectionRangeRequest {"}, {"sha": "79822c8ceda518eede47675024d0d66a7e3d7d15", "filename": "editors/emacs/ra-emacs-lsp.el", "status": "modified", "additions": 3, "deletions": 29, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/d5e8fa606de0f42544f8379d498be5acd78259de/editors%2Femacs%2Fra-emacs-lsp.el", "raw_url": "https://github.com/rust-lang/rust/raw/d5e8fa606de0f42544f8379d498be5acd78259de/editors%2Femacs%2Fra-emacs-lsp.el", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Femacs%2Fra-emacs-lsp.el?ref=d5e8fa606de0f42544f8379d498be5acd78259de", "patch": "@@ -14,7 +14,7 @@\n ;;    - 'hover' type information & documentation (with lsp-ui)\n ;;  - implements source changes (for code actions etc.), except for file system changes\n ;;  - implements joinLines (you need to bind rust-analyzer-join-lines to a key)\n-;;  - implements extendSelection (either bind rust-analyzer-extend-selection to a key, or use expand-region)\n+;;  - implements selectionRanges (either bind lsp-extend-selection to a key, or use expand-region)\n ;;  - provides rust-analyzer-inlay-hints-mode for inline type hints\n \n ;; What's missing:\n@@ -103,39 +103,13 @@\n                                        (rust-analyzer--join-lines-params)))\n    (rust-analyzer--apply-source-change)))\n \n-;; extend selection\n-\n-(defun rust-analyzer-extend-selection ()\n-  (interactive)\n-  (-let (((&hash \"start\" \"end\") (rust-analyzer--extend-selection)))\n-    (rust-analyzer--goto-lsp-loc start)\n-    (set-mark (point))\n-    (rust-analyzer--goto-lsp-loc end)\n-    (exchange-point-and-mark)))\n-\n-(defun rust-analyzer--extend-selection-params ()\n-  \"Extend selection params.\"\n-  (list :textDocument (lsp--text-document-identifier)\n-        :selections\n-        (vector\n-         (if (use-region-p)\n-             (lsp--region-to-range (region-beginning) (region-end))\n-           (lsp--region-to-range (point) (point))))))\n-\n-(defun rust-analyzer--extend-selection ()\n-  (->\n-   (lsp-send-request\n-    (lsp-make-request\n-     \"rust-analyzer/extendSelection\"\n-     (rust-analyzer--extend-selection-params)))\n-   (ht-get \"selections\")\n-   (seq-first)))\n+;; selection ranges\n \n (defun rust-analyzer--add-er-expansion ()\n   (make-variable-buffer-local 'er/try-expand-list)\n   (setq er/try-expand-list (append\n                             er/try-expand-list\n-                            '(rust-analyzer-extend-selection))))\n+                            '(lsp-extend-selection))))\n \n (with-eval-after-load 'expand-region\n   ;; add the expansion for all existing rust-mode buffers. If expand-region is"}]}