{"sha": "588786a788a5606dd3f4b4769ecd2e0c26a3ad20", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4ODc4NmE3ODhhNTYwNmRkM2Y0YjQ3NjllY2QyZTBjMjZhM2FkMjA=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-12-30T19:44:03Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-12-30T19:44:03Z"}, "message": "Add error docs", "tree": {"sha": "6b636efa24e6d9920c964c4c3e95428d90df20d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b636efa24e6d9920c964c4c3e95428d90df20d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/588786a788a5606dd3f4b4769ecd2e0c26a3ad20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/588786a788a5606dd3f4b4769ecd2e0c26a3ad20", "html_url": "https://github.com/rust-lang/rust/commit/588786a788a5606dd3f4b4769ecd2e0c26a3ad20", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/588786a788a5606dd3f4b4769ecd2e0c26a3ad20/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ee6d1bf541a90206b9e5cba6840e774493abc57", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ee6d1bf541a90206b9e5cba6840e774493abc57", "html_url": "https://github.com/rust-lang/rust/commit/4ee6d1bf541a90206b9e5cba6840e774493abc57"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "fdc0198945ef90f8e30efcc25598f13246d4a988", "filename": "library/std/src/io/mod.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/588786a788a5606dd3f4b4769ecd2e0c26a3ad20/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/588786a788a5606dd3f4b4769ecd2e0c26a3ad20/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fmod.rs?ref=588786a788a5606dd3f4b4769ecd2e0c26a3ad20", "patch": "@@ -951,7 +951,14 @@ pub trait Read {\n /// function avoids having to create a variable first and provides more type\n /// safety since you can only get the buffer out if there were no errors. (If you\n /// use [`Read::read_to_string`] you have to remember to check whether the read\n-/// succeeded because otherwise your buffer will be empty.)\n+/// succeeded because otherwise your buffer will be empty or only partially full.)\n+///\n+/// # Errors\n+///\n+/// This function forces you to handle errors because the output (the `String`)\n+/// is wrapped in a [`Result`]. See [`Read::read_to_string`] for the errors\n+/// that can occur. If any error occurs, you will get an [`Err`], so you\n+/// don't have to worry about your buffer being empty or partially full.\n ///\n /// # Examples\n ///"}]}