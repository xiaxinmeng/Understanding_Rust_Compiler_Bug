{"sha": "dab595e96a9dee0b0f41e55504d2f69b0d4b5d6e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhYjU5NWU5NmE5ZGVlMGIwZjQxZTU1NTA0ZDJmNjliMGQ0YjVkNmU=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2018-07-24T22:43:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-07-24T22:43:45Z"}, "message": "Rollup merge of #52402 - crepererum:build_hasher_eq, r=sfackler\n\nimpl PartialEq+Eq for BuildHasherDefault\n\n`BuildHasherDefault`is only one way of implementing `BuildHasher`. Clearly, every `BuildHasherDefault` for the same type `H` is identical, since it just uses `Default<H>` to construct `H`. In general, this is not true for every `BuildHasher`, so I think it is helpful to implement `PartialEq` and `Eq`.", "tree": {"sha": "5f4a98956776862d3c053ffc63af55269fb7ab68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f4a98956776862d3c053ffc63af55269fb7ab68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dab595e96a9dee0b0f41e55504d2f69b0d4b5d6e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbV6uhCRBK7hj4Ov3rIwAAdHIIACazcdjb4QQQfwMlz06uaDLF\nePThRXUT4xNgJZDO3rt1hHJGGK2hlr5NeucPaoxB6JVEP2Dwj1Qgl1YBUi7ph90s\n1Y1EIiafi8UaroJs9bkWUuuAcAh7AdWDUQorESoAfTrDJA6bp00ZJ1Dkbmhv6iNL\nTphfoXAyWY7xOnFLSdATxC8bb2/7PEjXVfW+5wXtUcPgQi+dGFtqRhgGva18u7xx\nRORORqjL19iKCrx2rlDkiBTwOzPifTZ8oaUeN4G+wXaE8C22nDIM1yRFdIkNBRJW\nMP0M9PIB7XIcVybKpYdreHOH4VD9c7EhuRKbJaXVVNKJ4orJ9Ch7cK2v3J0wIN0=\n=P2cW\n-----END PGP SIGNATURE-----\n", "payload": "tree 5f4a98956776862d3c053ffc63af55269fb7ab68\nparent 06ba69d043efd5612aad2aa4903125d34eba17d4\nparent b1d2a91f3260b5ee045310f4eb28abd2c62773e1\nauthor Mark Rousskov <mark.simulacrum@gmail.com> 1532472225 -0600\ncommitter GitHub <noreply@github.com> 1532472225 -0600\n\nRollup merge of #52402 - crepererum:build_hasher_eq, r=sfackler\n\nimpl PartialEq+Eq for BuildHasherDefault\n\n`BuildHasherDefault`is only one way of implementing `BuildHasher`. Clearly, every `BuildHasherDefault` for the same type `H` is identical, since it just uses `Default<H>` to construct `H`. In general, this is not true for every `BuildHasher`, so I think it is helpful to implement `PartialEq` and `Eq`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dab595e96a9dee0b0f41e55504d2f69b0d4b5d6e", "html_url": "https://github.com/rust-lang/rust/commit/dab595e96a9dee0b0f41e55504d2f69b0d4b5d6e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dab595e96a9dee0b0f41e55504d2f69b0d4b5d6e/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06ba69d043efd5612aad2aa4903125d34eba17d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/06ba69d043efd5612aad2aa4903125d34eba17d4", "html_url": "https://github.com/rust-lang/rust/commit/06ba69d043efd5612aad2aa4903125d34eba17d4"}, {"sha": "b1d2a91f3260b5ee045310f4eb28abd2c62773e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1d2a91f3260b5ee045310f4eb28abd2c62773e1", "html_url": "https://github.com/rust-lang/rust/commit/b1d2a91f3260b5ee045310f4eb28abd2c62773e1"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "e7907e0344493bf13b8a298a84f4ec08ce21c69b", "filename": "src/libcore/hash/mod.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dab595e96a9dee0b0f41e55504d2f69b0d4b5d6e/src%2Flibcore%2Fhash%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab595e96a9dee0b0f41e55504d2f69b0d4b5d6e/src%2Flibcore%2Fhash%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fhash%2Fmod.rs?ref=dab595e96a9dee0b0f41e55504d2f69b0d4b5d6e", "patch": "@@ -542,6 +542,16 @@ impl<H> Default for BuildHasherDefault<H> {\n     }\n }\n \n+#[stable(since = \"1.29.0\", feature = \"build_hasher_eq\")]\n+impl<H> PartialEq for BuildHasherDefault<H> {\n+    fn eq(&self, _other: &BuildHasherDefault<H>) -> bool {\n+        true\n+    }\n+}\n+\n+#[stable(since = \"1.29.0\", feature = \"build_hasher_eq\")]\n+impl<H> Eq for BuildHasherDefault<H> {}\n+\n //////////////////////////////////////////////////////////////////////////////\n \n mod impls {"}]}