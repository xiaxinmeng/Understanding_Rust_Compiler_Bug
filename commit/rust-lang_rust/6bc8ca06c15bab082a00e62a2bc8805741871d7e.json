{"sha": "6bc8ca06c15bab082a00e62a2bc8805741871d7e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiYzhjYTA2YzE1YmFiMDgyYTAwZTYyYTJiYzg4MDU3NDE4NzFkN2U=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-09-29T23:58:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-09-29T23:58:54Z"}, "message": "Rollup merge of #44694 - tommyip:make_clean, r=Mark-Simulacrum\n\nAdd --all flag to ./x.py clean\n\nThis make `clean` removes the LLVM and download cache directory as well.\n\nFixes #44214.\n\nr? @Mark-Simulacrum", "tree": {"sha": "7149ef9ebe27900163a50121020b186dc30e9158", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7149ef9ebe27900163a50121020b186dc30e9158"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6bc8ca06c15bab082a00e62a2bc8805741871d7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6bc8ca06c15bab082a00e62a2bc8805741871d7e", "html_url": "https://github.com/rust-lang/rust/commit/6bc8ca06c15bab082a00e62a2bc8805741871d7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6bc8ca06c15bab082a00e62a2bc8805741871d7e/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20f892f549a9309d61c76a78cf948918507c4e39", "url": "https://api.github.com/repos/rust-lang/rust/commits/20f892f549a9309d61c76a78cf948918507c4e39", "html_url": "https://github.com/rust-lang/rust/commit/20f892f549a9309d61c76a78cf948918507c4e39"}, {"sha": "09d90e52682641e5d6d0a70e42011fd24ced1434", "url": "https://api.github.com/repos/rust-lang/rust/commits/09d90e52682641e5d6d0a70e42011fd24ced1434", "html_url": "https://github.com/rust-lang/rust/commit/09d90e52682641e5d6d0a70e42011fd24ced1434"}], "stats": {"total": 62, "additions": 37, "deletions": 25}, "files": [{"sha": "e7a5196178c3f0758244c01487da0f53fecfb225", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6bc8ca06c15bab082a00e62a2bc8805741871d7e/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bc8ca06c15bab082a00e62a2bc8805741871d7e/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=6bc8ca06c15bab082a00e62a2bc8805741871d7e", "patch": "@@ -306,7 +306,7 @@ impl<'a> Builder<'a> {\n             Subcommand::Bench { ref paths, .. } => (Kind::Bench, &paths[..]),\n             Subcommand::Dist { ref paths } => (Kind::Dist, &paths[..]),\n             Subcommand::Install { ref paths } => (Kind::Install, &paths[..]),\n-            Subcommand::Clean => panic!(),\n+            Subcommand::Clean { .. } => panic!(),\n         };\n \n         let builder = Builder {"}, {"sha": "87f194fb7d2f85d4ae3eed1e32efd0390331975b", "filename": "src/bootstrap/clean.rs", "status": "modified", "additions": 20, "deletions": 15, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/6bc8ca06c15bab082a00e62a2bc8805741871d7e/src%2Fbootstrap%2Fclean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bc8ca06c15bab082a00e62a2bc8805741871d7e/src%2Fbootstrap%2Fclean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fclean.rs?ref=6bc8ca06c15bab082a00e62a2bc8805741871d7e", "patch": "@@ -13,32 +13,37 @@\n //! Responsible for cleaning out a build directory of all old and stale\n //! artifacts to prepare for a fresh build. Currently doesn't remove the\n //! `build/cache` directory (download cache) or the `build/$target/llvm`\n-//! directory as we want that cached between builds.\n+//! directory unless the --all flag is present.\n \n use std::fs;\n use std::io::{self, ErrorKind};\n use std::path::Path;\n \n use Build;\n \n-pub fn clean(build: &Build) {\n+pub fn clean(build: &Build, all: bool) {\n     rm_rf(\"tmp\".as_ref());\n-    rm_rf(&build.out.join(\"tmp\"));\n-    rm_rf(&build.out.join(\"dist\"));\n \n-    for host in &build.hosts {\n-        let entries = match build.out.join(host).read_dir() {\n-            Ok(iter) => iter,\n-            Err(_) => continue,\n-        };\n+    if all {\n+        rm_rf(&build.out);\n+    } else {\n+        rm_rf(&build.out.join(\"tmp\"));\n+        rm_rf(&build.out.join(\"dist\"));\n \n-        for entry in entries {\n-            let entry = t!(entry);\n-            if entry.file_name().to_str() == Some(\"llvm\") {\n-                continue\n+        for host in &build.hosts {\n+            let entries = match build.out.join(host).read_dir() {\n+                Ok(iter) => iter,\n+                Err(_) => continue,\n+            };\n+\n+            for entry in entries {\n+                let entry = t!(entry);\n+                if entry.file_name().to_str() == Some(\"llvm\") {\n+                    continue\n+                }\n+                let path = t!(entry.path().canonicalize());\n+                rm_rf(&path);\n             }\n-            let path = t!(entry.path().canonicalize());\n-            rm_rf(&path);\n         }\n     }\n }"}, {"sha": "df378188b4ad05c0fe044c2be4a3bcad820af1d8", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/6bc8ca06c15bab082a00e62a2bc8805741871d7e/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bc8ca06c15bab082a00e62a2bc8805741871d7e/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=6bc8ca06c15bab082a00e62a2bc8805741871d7e", "patch": "@@ -60,7 +60,9 @@ pub enum Subcommand {\n         paths: Vec<PathBuf>,\n         test_args: Vec<String>,\n     },\n-    Clean,\n+    Clean {\n+        all: bool,\n+    },\n     Dist {\n         paths: Vec<PathBuf>,\n     },\n@@ -147,6 +149,7 @@ To learn more about a subcommand, run `./x.py <subcommand> -h`\");\n                 opts.optmulti(\"\", \"test-args\", \"extra arguments\", \"ARGS\");\n             },\n             \"bench\" => { opts.optmulti(\"\", \"test-args\", \"extra arguments\", \"ARGS\"); },\n+            \"clean\" => { opts.optflag(\"\", \"all\", \"clean all build artifacts\"); },\n             _ => { },\n         };\n \n@@ -250,17 +253,18 @@ Arguments:\n             }\n         });\n \n-        // All subcommands can have an optional \"Available paths\" section\n+        // All subcommands except `clean` can have an optional \"Available paths\" section\n         if matches.opt_present(\"verbose\") {\n             let config = Config::parse(&[\"build\".to_string()]);\n             let mut build = Build::new(config);\n             metadata::build(&mut build);\n \n             let maybe_rules_help = Builder::get_help(&build, subcommand.as_str());\n             extra_help.push_str(maybe_rules_help.unwrap_or_default().as_str());\n-        } else {\n-            extra_help.push_str(format!(\"Run `./x.py {} -h -v` to see a list of available paths.\",\n-                     subcommand).as_str());\n+        } else if subcommand.as_str() != \"clean\" {\n+            extra_help.push_str(format!(\n+                \"Run `./x.py {} -h -v` to see a list of available paths.\",\n+                subcommand).as_str());\n         }\n \n         // User passed in -h/--help?\n@@ -290,10 +294,13 @@ Arguments:\n             }\n             \"clean\" => {\n                 if paths.len() > 0 {\n-                    println!(\"\\nclean takes no arguments\\n\");\n+                    println!(\"\\nclean does not take a path argument\\n\");\n                     usage(1, &opts, &subcommand_help, &extra_help);\n                 }\n-                Subcommand::Clean\n+\n+                Subcommand::Clean {\n+                    all: matches.opt_present(\"all\"),\n+                }\n             }\n             \"dist\" => {\n                 Subcommand::Dist {"}, {"sha": "2d721f455785a0fa8152365b26411173917e7c3e", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6bc8ca06c15bab082a00e62a2bc8805741871d7e/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bc8ca06c15bab082a00e62a2bc8805741871d7e/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=6bc8ca06c15bab082a00e62a2bc8805741871d7e", "patch": "@@ -345,8 +345,8 @@ impl Build {\n             job::setup(self);\n         }\n \n-        if let Subcommand::Clean = self.config.cmd {\n-            return clean::clean(self);\n+        if let Subcommand::Clean { all } = self.config.cmd {\n+            return clean::clean(self, all);\n         }\n \n         self.verbose(\"finding compilers\");"}]}