{"sha": "c55819ae606046e2a7b6b92c3f0821bd171f34b0", "node_id": "C_kwDOAAsO6NoAKGM1NTgxOWFlNjA2MDQ2ZTJhN2I2YjkyYzNmMDgyMWJkMTcxZjM0YjA", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-01-20T23:14:18Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-01-20T23:14:18Z"}, "message": "Make stability interning follow the usual pattern.", "tree": {"sha": "cf681d5e1621780b45a806de4716d519f67fd5b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf681d5e1621780b45a806de4716d519f67fd5b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c55819ae606046e2a7b6b92c3f0821bd171f34b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c55819ae606046e2a7b6b92c3f0821bd171f34b0", "html_url": "https://github.com/rust-lang/rust/commit/c55819ae606046e2a7b6b92c3f0821bd171f34b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c55819ae606046e2a7b6b92c3f0821bd171f34b0/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd3cb52565faab2755ff1bdb54d88bc91f47b4b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd3cb52565faab2755ff1bdb54d88bc91f47b4b9", "html_url": "https://github.com/rust-lang/rust/commit/bd3cb52565faab2755ff1bdb54d88bc91f47b4b9"}], "stats": {"total": 32, "additions": 12, "deletions": 20}, "files": [{"sha": "de435b8f58c72211fc5c3286bd98d43c935f033c", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 12, "deletions": 20, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/c55819ae606046e2a7b6b92c3f0821bd171f34b0/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c55819ae606046e2a7b6b92c3f0821bd171f34b0/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=c55819ae606046e2a7b6b92c3f0821bd171f34b0", "patch": "@@ -113,6 +113,12 @@ pub struct CtxtInterners<'tcx> {\n     bound_variable_kinds: InternedSet<'tcx, List<ty::BoundVariableKind>>,\n     layout: InternedSet<'tcx, Layout>,\n     adt_def: InternedSet<'tcx, AdtDef>,\n+\n+    /// `#[stable]` and `#[unstable]` attributes\n+    stability: InternedSet<'tcx, attr::Stability>,\n+\n+    /// `#[rustc_const_stable]` and `#[rustc_const_unstable]` attributes\n+    const_stability: InternedSet<'tcx, attr::ConstStability>,\n }\n \n impl<'tcx> CtxtInterners<'tcx> {\n@@ -134,6 +140,8 @@ impl<'tcx> CtxtInterners<'tcx> {\n             bound_variable_kinds: Default::default(),\n             layout: Default::default(),\n             adt_def: Default::default(),\n+            stability: Default::default(),\n+            const_stability: Default::default(),\n         }\n     }\n \n@@ -1035,12 +1043,6 @@ pub struct GlobalCtxt<'tcx> {\n     /// Data layout specification for the current target.\n     pub data_layout: TargetDataLayout,\n \n-    /// `#[stable]` and `#[unstable]` attributes\n-    stability_interner: ShardedHashMap<&'tcx attr::Stability, ()>,\n-\n-    /// `#[rustc_const_stable]` and `#[rustc_const_unstable]` attributes\n-    const_stability_interner: ShardedHashMap<&'tcx attr::ConstStability, ()>,\n-\n     /// Stores memory for globals (statics/consts).\n     pub(crate) alloc_map: Lock<interpret::AllocMap<'tcx>>,\n \n@@ -1092,16 +1094,6 @@ impl<'tcx> TyCtxt<'tcx> {\n         self.create_memory_alloc(alloc)\n     }\n \n-    // FIXME(eddyb) move to `direct_interners!`.\n-    pub fn intern_stability(self, stab: attr::Stability) -> &'tcx attr::Stability {\n-        self.stability_interner.intern(stab, |stab| self.arena.alloc(stab))\n-    }\n-\n-    // FIXME(eddyb) move to `direct_interners!`.\n-    pub fn intern_const_stability(self, stab: attr::ConstStability) -> &'tcx attr::ConstStability {\n-        self.const_stability_interner.intern(stab, |stab| self.arena.alloc(stab))\n-    }\n-\n     /// Returns a range of the start/end indices specified with the\n     /// `rustc_layout_scalar_valid_range` attribute.\n     // FIXME(eddyb) this is an awkward spot for this method, maybe move it?\n@@ -1185,8 +1177,6 @@ impl<'tcx> TyCtxt<'tcx> {\n             evaluation_cache: Default::default(),\n             crate_name: Symbol::intern(crate_name),\n             data_layout,\n-            stability_interner: Default::default(),\n-            const_stability_interner: Default::default(),\n             alloc_map: Lock::new(interpret::AllocMap::new()),\n             output_filenames: Arc::new(output_filenames),\n         }\n@@ -1935,11 +1925,11 @@ impl<'tcx> TyCtxt<'tcx> {\n \n                 writeln!(fmt, \"InternalSubsts interner: #{}\", self.0.interners.substs.len())?;\n                 writeln!(fmt, \"Region interner: #{}\", self.0.interners.region.len())?;\n-                writeln!(fmt, \"Stability interner: #{}\", self.0.stability_interner.len())?;\n+                writeln!(fmt, \"Stability interner: #{}\", self.0.interners.stability.len())?;\n                 writeln!(\n                     fmt,\n                     \"Const Stability interner: #{}\",\n-                    self.0.const_stability_interner.len()\n+                    self.0.interners.const_stability.len()\n                 )?;\n                 writeln!(\n                     fmt,\n@@ -2072,6 +2062,8 @@ direct_interners! {\n     const_allocation: intern_const_alloc(Allocation),\n     layout: intern_layout(Layout),\n     adt_def: intern_adt_def(AdtDef),\n+    stability: intern_stability(attr::Stability),\n+    const_stability: intern_const_stability(attr::ConstStability),\n }\n \n macro_rules! slice_interners {"}]}