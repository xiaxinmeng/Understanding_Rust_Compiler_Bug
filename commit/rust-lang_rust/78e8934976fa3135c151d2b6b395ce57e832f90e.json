{"sha": "78e8934976fa3135c151d2b6b395ce57e832f90e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4ZTg5MzQ5NzZmYTMxMzVjMTUxZDJiNmIzOTVjZTU3ZTgzMmY5MGU=", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2019-12-08T12:41:44Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2019-12-08T13:04:37Z"}, "message": "Code: check whether the LSP binary is in PATH", "tree": {"sha": "90fc53ceb5c911a9d1cb00c9a62d908695a8afed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90fc53ceb5c911a9d1cb00c9a62d908695a8afed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78e8934976fa3135c151d2b6b395ce57e832f90e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78e8934976fa3135c151d2b6b395ce57e832f90e", "html_url": "https://github.com/rust-lang/rust/commit/78e8934976fa3135c151d2b6b395ce57e832f90e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78e8934976fa3135c151d2b6b395ce57e832f90e/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b236f6aa499f98985acd07a34eb0c0d147bf8d5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b236f6aa499f98985acd07a34eb0c0d147bf8d5f", "html_url": "https://github.com/rust-lang/rust/commit/b236f6aa499f98985acd07a34eb0c0d147bf8d5f"}], "stats": {"total": 49, "additions": 41, "deletions": 8}, "files": [{"sha": "979e4ef88ae91069bc069764868367a27740bfe0", "filename": "README.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/78e8934976fa3135c151d2b6b395ce57e832f90e/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/78e8934976fa3135c151d2b6b395ce57e832f90e/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=78e8934976fa3135c151d2b6b395ce57e832f90e", "patch": "@@ -37,7 +37,8 @@ $ cargo xtask install\n $ cargo xtask install --server\n ```\n \n-For non-standard setup of VS Code and other editors, see [./docs/user](./docs/user).\n+For non-standard setup of VS Code and other editors, or if the language server\n+cannot start, see [./docs/user](./docs/user).\n \n ## Documentation\n "}, {"sha": "04c3493426b6abd6ff2a19d529f2c70626d2f67e", "filename": "docs/user/README.md", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/78e8934976fa3135c151d2b6b395ce57e832f90e/docs%2Fuser%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/78e8934976fa3135c151d2b6b395ce57e832f90e/docs%2Fuser%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2FREADME.md?ref=78e8934976fa3135c151d2b6b395ce57e832f90e", "patch": "@@ -204,4 +204,19 @@ Installation:\n \n * You can now invoke the command palette and type LSP enable to locally/globally enable the rust-analyzer LSP (type LSP enable, then choose either locally or globally, then select rust-analyzer)\n \n-* Note that `ra_lsp_server` binary must be in `$PATH` for this to work. If it's not the case, you can specify full path to the binary, which is typically `.cargo/bin/ra_lsp_server`.\n+### Setting up the `PATH` variable\n+\n+On Unix systems, `rustup` adds `~/.cargo/bin` to `PATH` by modifying the shell's\n+startup file. Depending on your configuration, your Desktop Environment might not\n+actually load it. If you find that `rust-analyzer` only runs when starting the\n+editor from the terminal, you will have to set up your `PATH` variable manually.\n+\n+There are a couple of ways to do that:\n+\n+- for Code, set `rust-analyzer.raLspServerPath` to `~/.cargo/bin` (the `~` is\n+  automatically resolved by the extension)\n+- copy the binary to a location that is already in `PATH`, e.g. `/usr/local/bin`\n+- on Linux, use PAM to configure the `PATH` variable, by e.g. putting\n+  `PATH DEFAULT=/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:@{HOME}/.cargo/bin:@{HOME}/.local/bin`\n+  in your `~/.pam_environment` file; note that this might interfere with other\n+  defaults set by the system administrator via `/etc/environment`."}, {"sha": "099aaaaa2ad48291173e110f8723eef5e5dc996d", "filename": "editors/code/package-lock.json", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/78e8934976fa3135c151d2b6b395ce57e832f90e/editors%2Fcode%2Fpackage-lock.json", "raw_url": "https://github.com/rust-lang/rust/raw/78e8934976fa3135c151d2b6b395ce57e832f90e/editors%2Fcode%2Fpackage-lock.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage-lock.json?ref=78e8934976fa3135c151d2b6b395ce57e832f90e", "patch": "@@ -763,6 +763,11 @@\n                 \"chalk\": \"^2.0.1\"\n             }\n         },\n+        \"lookpath\": {\n+            \"version\": \"1.0.3\",\n+            \"resolved\": \"https://registry.npmjs.org/lookpath/-/lookpath-1.0.3.tgz\",\n+            \"integrity\": \"sha512-XIdgzlX26g10XnzyZdO/4obybEmfGnZyWQZ2DgmmEfVB79X+n3lhUoIzMe501C6s7RmCpAo66OPegWc+CsxYMg==\"\n+        },\n         \"magic-string\": {\n             \"version\": \"0.25.3\",\n             \"resolved\": \"https://registry.npmjs.org/magic-string/-/magic-string-0.25.3.tgz\","}, {"sha": "5dea8fac0a9a8bf4281e11427fa4664c478e50d6", "filename": "editors/code/package.json", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78e8934976fa3135c151d2b6b395ce57e832f90e/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/78e8934976fa3135c151d2b6b395ce57e832f90e/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=78e8934976fa3135c151d2b6b395ce57e832f90e", "patch": "@@ -31,6 +31,7 @@\n         \"singleQuote\": true\n     },\n     \"dependencies\": {\n+        \"lookpath\": \"^1.0.3\",\n         \"seedrandom\": \"^3.0.1\",\n         \"vscode-languageclient\": \"^5.3.0-next.4\"\n     },"}, {"sha": "6637c3bf0bd45e374e3af827bddfa64f7b58455e", "filename": "editors/code/src/extension.ts", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/78e8934976fa3135c151d2b6b395ce57e832f90e/editors%2Fcode%2Fsrc%2Fextension.ts", "raw_url": "https://github.com/rust-lang/rust/raw/78e8934976fa3135c151d2b6b395ce57e832f90e/editors%2Fcode%2Fsrc%2Fextension.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fextension.ts?ref=78e8934976fa3135c151d2b6b395ce57e832f90e", "patch": "@@ -14,7 +14,7 @@ import * as events from './events';\n import * as notifications from './notifications';\n import { Server } from './server';\n \n-export function activate(context: vscode.ExtensionContext) {\n+export async function activate(context: vscode.ExtensionContext) {\n     function disposeOnDeactivation(disposable: vscode.Disposable) {\n         context.subscriptions.push(disposable);\n     }\n@@ -159,7 +159,11 @@ export function activate(context: vscode.ExtensionContext) {\n     });\n \n     // Start the language server, finally!\n-    startServer();\n+    try {\n+        await startServer();\n+    } catch (e) {\n+        vscode.window.showErrorMessage(e.message);\n+    }\n \n     if (Server.config.displayInlayHints) {\n         const hintsUpdater = new HintsUpdater();\n@@ -204,10 +208,10 @@ export function deactivate(): Thenable<void> {\n     return Server.client.stop();\n }\n \n-async function reloadServer(startServer: () => void) {\n+async function reloadServer(startServer: () => Promise<void>) {\n     if (Server.client != null) {\n         vscode.window.showInformationMessage('Reloading rust-analyzer...');\n         await Server.client.stop();\n-        startServer();\n+        await startServer();\n     }\n }"}, {"sha": "e717ab294d7f355e25c9d4e8f1b6e16be631897b", "filename": "editors/code/src/server.ts", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/78e8934976fa3135c151d2b6b395ce57e832f90e/editors%2Fcode%2Fsrc%2Fserver.ts", "raw_url": "https://github.com/rust-lang/rust/raw/78e8934976fa3135c151d2b6b395ce57e832f90e/editors%2Fcode%2Fsrc%2Fserver.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fserver.ts?ref=78e8934976fa3135c151d2b6b395ce57e832f90e", "patch": "@@ -1,3 +1,4 @@\n+import { lookpath } from 'lookpath';\n import { homedir } from 'os';\n import * as lc from 'vscode-languageclient';\n \n@@ -17,7 +18,7 @@ export class Server {\n     public static config = new Config();\n     public static client: lc.LanguageClient;\n \n-    public static start(\n+    public static async start(\n         notificationHandlers: Iterable<[string, lc.GenericNotificationHandler]>\n     ) {\n         // '.' Is the fallback if no folder is open\n@@ -27,8 +28,14 @@ export class Server {\n             folder = workspace.workspaceFolders[0].uri.fsPath.toString();\n         }\n \n+        const command = expandPathResolving(this.config.raLspServerPath);\n+        if (!(await lookpath(command))) {\n+            throw new Error(\n+                `Cannot find rust-analyzer server \\`${command}\\` in PATH.`\n+            );\n+        }\n         const run: lc.Executable = {\n-            command: expandPathResolving(this.config.raLspServerPath),\n+            command,\n             options: { cwd: folder }\n         };\n         const serverOptions: lc.ServerOptions = {"}]}