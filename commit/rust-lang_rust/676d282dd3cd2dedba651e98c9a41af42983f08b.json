{"sha": "676d282dd3cd2dedba651e98c9a41af42983f08b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3NmQyODJkZDNjZDJkZWRiYTY1MWU5OGM5YTQxYWY0Mjk4M2YwOGI=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-07-23T19:17:27Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-07-28T15:47:02Z"}, "message": "Deny `unused_lifetimes` through rustbuild", "tree": {"sha": "859875de5c271f683d5b57bb9ec4911e44388f16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/859875de5c271f683d5b57bb9ec4911e44388f16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/676d282dd3cd2dedba651e98c9a41af42983f08b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/676d282dd3cd2dedba651e98c9a41af42983f08b", "html_url": "https://github.com/rust-lang/rust/commit/676d282dd3cd2dedba651e98c9a41af42983f08b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/676d282dd3cd2dedba651e98c9a41af42983f08b/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "434152157f9d73ad1899fb8da3a61aed6f8a46d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/434152157f9d73ad1899fb8da3a61aed6f8a46d6", "html_url": "https://github.com/rust-lang/rust/commit/434152157f9d73ad1899fb8da3a61aed6f8a46d6"}], "stats": {"total": 82, "additions": 23, "deletions": 59}, "files": [{"sha": "bd1a87c5744d39d8c1a552a0925ff18a53b627d8", "filename": "src/bootstrap/bin/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Fbootstrap%2Fbin%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Fbootstrap%2Fbin%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Fmain.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -6,7 +6,7 @@\n //! directory in each respective module.\n \n // NO-RUSTC-WRAPPER\n-#![deny(warnings, rust_2018_idioms)]\n+#![deny(warnings, rust_2018_idioms, unused_lifetimes)]\n \n use std::env;\n "}, {"sha": "2e9044a8150cd52f444a77a456b8f40b5e922e29", "filename": "src/bootstrap/bin/rustc.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Fbootstrap%2Fbin%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Fbootstrap%2Fbin%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustc.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -16,7 +16,7 @@\n //! never get replaced.\n \n // NO-RUSTC-WRAPPER\n-#![deny(warnings, rust_2018_idioms)]\n+#![deny(warnings, rust_2018_idioms, unused_lifetimes)]\n \n use std::env;\n use std::ffi::OsString;\n@@ -129,6 +129,7 @@ fn main() {\n        env::var_os(\"RUSTC_EXTERNAL_TOOL\").is_none() {\n         cmd.arg(\"-Dwarnings\");\n         cmd.arg(\"-Drust_2018_idioms\");\n+        cmd.arg(\"-Dunused_lifetimes\");\n         // cfg(not(bootstrap)): Remove this during the next stage 0 compiler update.\n         // `-Drustc::internal` is a new feature and `rustc_version` mis-reports the `stage`.\n         let cfg_not_bootstrap = stage != \"0\" && crate_name != Some(\"rustc_version\");"}, {"sha": "ff38ee8788f5652c2c551ff3db1a120a89a27c2c", "filename": "src/bootstrap/bin/rustdoc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Fbootstrap%2Fbin%2Frustdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Fbootstrap%2Fbin%2Frustdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustdoc.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -3,7 +3,7 @@\n //! See comments in `src/bootstrap/rustc.rs` for more information.\n \n // NO-RUSTC-WRAPPER\n-#![deny(warnings, rust_2018_idioms)]\n+#![deny(warnings, rust_2018_idioms, unused_lifetimes)]\n \n use std::env;\n use std::process::Command;"}, {"sha": "c2e64ef51a746e13e5b8aafab226465d9f324553", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -104,7 +104,7 @@\n //! also check out the `src/bootstrap/README.md` file for more information.\n \n // NO-RUSTC-WRAPPER\n-#![deny(warnings, rust_2018_idioms)]\n+#![deny(warnings, rust_2018_idioms, unused_lifetimes)]\n \n #![feature(core_intrinsics)]\n #![feature(drain_filter)]\n@@ -1313,7 +1313,7 @@ fn chmod(path: &Path, perms: u32) {\n fn chmod(_path: &Path, _perms: u32) {}\n \n \n-impl<'a> Compiler {\n+impl Compiler {\n     pub fn with_stage(mut self, stage: u32) -> Compiler {\n         self.stage = stage;\n         self"}, {"sha": "c30307f3a1b28d7a09ed09f3631b3bf619bee66b", "filename": "src/build_helper/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Fbuild_helper%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Fbuild_helper%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbuild_helper%2Flib.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -1,5 +1,5 @@\n // NO-RUSTC-WRAPPER\n-#![deny(warnings, rust_2018_idioms)]\n+#![deny(warnings, rust_2018_idioms, unused_lifetimes)]\n \n use std::fs::File;\n use std::path::{Path, PathBuf};"}, {"sha": "eca726cd41032f28d1638398de4d593a019af07f", "filename": "src/liballoc/string.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Fliballoc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Fliballoc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstring.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -1838,6 +1838,7 @@ impl PartialEq for String {\n macro_rules! impl_eq {\n     ($lhs:ty, $rhs: ty) => {\n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+        #[allow(unused_lifetimes)]\n         impl<'a, 'b> PartialEq<$rhs> for $lhs {\n             #[inline]\n             fn eq(&self, other: &$rhs) -> bool { PartialEq::eq(&self[..], &other[..]) }\n@@ -1846,6 +1847,7 @@ macro_rules! impl_eq {\n         }\n \n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+        #[allow(unused_lifetimes)]\n         impl<'a, 'b> PartialEq<$lhs> for $rhs {\n             #[inline]\n             fn eq(&self, other: &$lhs) -> bool { PartialEq::eq(&self[..], &other[..]) }"}, {"sha": "690d8344acff96b8667fefe0b10f2972a8e0c650", "filename": "src/libarena/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibarena%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibarena%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibarena%2Flib.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -11,8 +11,6 @@\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\",\n        test(no_crate_inject, attr(deny(warnings))))]\n \n-#![deny(unused_lifetimes)]\n-\n #![feature(core_intrinsics)]\n #![feature(dropck_eyepatch)]\n #![feature(raw_vec_internals)]"}, {"sha": "6023bc21e7496358f0fd013f1b4645192e851b74", "filename": "src/libcore/array.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibcore%2Farray.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibcore%2Farray.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Farray.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -250,7 +250,7 @@ where\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<'a, 'b, A, B, const N: usize> PartialEq<[A; N]> for [B]\n+impl<A, B, const N: usize> PartialEq<[A; N]> for [B]\n where\n     B: PartialEq<A>,\n     [A; N]: LengthAtMost32,\n@@ -266,7 +266,7 @@ where\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<'a, 'b, A, B, const N: usize> PartialEq<&'b [B]> for [A; N]\n+impl<'b, A, B, const N: usize> PartialEq<&'b [B]> for [A; N]\n where\n     A: PartialEq<B>,\n     [A; N]: LengthAtMost32,\n@@ -282,7 +282,7 @@ where\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<'a, 'b, A, B, const N: usize> PartialEq<[A; N]> for &'b [B]\n+impl<'b, A, B, const N: usize> PartialEq<[A; N]> for &'b [B]\n where\n     B: PartialEq<A>,\n     [A; N]: LengthAtMost32,\n@@ -298,7 +298,7 @@ where\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<'a, 'b, A, B, const N: usize> PartialEq<&'b mut [B]> for [A; N]\n+impl<'b, A, B, const N: usize> PartialEq<&'b mut [B]> for [A; N]\n where\n     A: PartialEq<B>,\n     [A; N]: LengthAtMost32,\n@@ -314,7 +314,7 @@ where\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<'a, 'b, A, B, const N: usize> PartialEq<[A; N]> for &'b mut [B]\n+impl<'b, A, B, const N: usize> PartialEq<[A; N]> for &'b mut [B]\n where\n     B: PartialEq<A>,\n     [A; N]: LengthAtMost32,"}, {"sha": "88a56174629f9ed2846008708ba0d07f39b36970", "filename": "src/libcore/pin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibcore%2Fpin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibcore%2Fpin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpin.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -775,7 +775,7 @@ where\n {}\n \n #[stable(feature = \"pin\", since = \"1.33.0\")]\n-impl<'a, P, U> DispatchFromDyn<Pin<U>> for Pin<P>\n+impl<P, U> DispatchFromDyn<Pin<U>> for Pin<P>\n where\n     P: DispatchFromDyn<U>,\n {}"}, {"sha": "f0d011fe6b2c0c02f779d26ad0a4937e23e54efe", "filename": "src/libcore/ptr/unique.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibcore%2Fptr%2Funique.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibcore%2Fptr%2Funique.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr%2Funique.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -172,7 +172,7 @@ impl<T: ?Sized> From<&T> for Unique<T> {\n }\n \n #[unstable(feature = \"ptr_internals\", issue = \"0\")]\n-impl<'a, T: ?Sized> From<NonNull<T>> for Unique<T> {\n+impl<T: ?Sized> From<NonNull<T>> for Unique<T> {\n     #[inline]\n     fn from(p: NonNull<T>) -> Self {\n         unsafe { Unique::new_unchecked(p.as_ptr()) }"}, {"sha": "83e24a48ea0085cb2885fd10d8b27ce915ac8a3d", "filename": "src/libfmt_macros/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibfmt_macros%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibfmt_macros%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibfmt_macros%2Flib.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -8,8 +8,6 @@\n        html_playground_url = \"https://play.rust-lang.org/\",\n        test(attr(deny(warnings))))]\n \n-#![deny(unused_lifetimes)]\n-\n #![feature(nll)]\n #![feature(rustc_private)]\n #![feature(unicode_internals)]"}, {"sha": "2cde1f65adf9c484ab0aee45fe6c978fda30cbb9", "filename": "src/libproc_macro/bridge/scoped_cell.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibproc_macro%2Fbridge%2Fscoped_cell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibproc_macro%2Fbridge%2Fscoped_cell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibproc_macro%2Fbridge%2Fscoped_cell.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -5,6 +5,7 @@ use std::mem;\n use std::ops::{Deref, DerefMut};\n \n /// Type lambda application, with a lifetime.\n+#[allow(unused_lifetimes)]\n pub trait ApplyL<'a> {\n     type Out;\n }"}, {"sha": "4b3fefcd4debbaf0afa859d0018ea65cce298e6d", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -28,8 +28,6 @@\n \n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n-#![deny(unused_lifetimes)]\n-\n #![feature(arbitrary_self_types)]\n #![feature(box_patterns)]\n #![feature(box_syntax)]"}, {"sha": "dc818278a4b748c03799c0ce9df9850b3dfb157f", "filename": "src/librustc_ast_borrowck/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_ast_borrowck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_ast_borrowck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_borrowck%2Flib.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -1,7 +1,6 @@\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n #![allow(non_camel_case_types)]\n-#![deny(unused_lifetimes)]\n \n #![feature(in_band_lifetimes)]\n #![feature(nll)]"}, {"sha": "a630817fb33866960ba5b7cb049f940ab04484f9", "filename": "src/librustc_codegen_llvm/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_codegen_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_codegen_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Flib.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -21,7 +21,6 @@\n #![feature(static_nobundle)]\n #![feature(trusted_len)]\n #![feature(mem_take)]\n-#![deny(unused_lifetimes)]\n \n use back::write::{create_target_machine, create_informational_target_machine};\n use syntax_pos::symbol::Symbol;"}, {"sha": "73ef16e0091460ee6e8b16f593b2001ec79d9b7c", "filename": "src/librustc_codegen_ssa/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_codegen_ssa%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_codegen_ssa%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Flib.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -11,7 +11,6 @@\n #![feature(nll)]\n #![feature(trusted_len)]\n #![feature(mem_take)]\n-#![deny(unused_lifetimes)]\n \n #![recursion_limit=\"256\"]\n "}, {"sha": "4ea375b59b2c02f55189efcff63c9f9618c3091c", "filename": "src/librustc_codegen_utils/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_codegen_utils%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_codegen_utils%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Flib.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -15,8 +15,6 @@\n \n #![recursion_limit=\"256\"]\n \n-#![deny(unused_lifetimes)]\n-\n #[macro_use]\n extern crate rustc;\n "}, {"sha": "749709521e86688983df241104475e2fbffd6870", "filename": "src/librustc_data_structures/graph/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_data_structures%2Fgraph%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_data_structures%2Fgraph%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fgraph%2Fmod.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -39,6 +39,7 @@ where\n     }\n }\n \n+#[allow(unused_lifetimes)]\n pub trait GraphSuccessors<'graph> {\n     type Item;\n     type Iter: Iterator<Item = Self::Item>;\n@@ -54,6 +55,7 @@ where\n     ) -> <Self as GraphPredecessors<'_>>::Iter;\n }\n \n+#[allow(unused_lifetimes)]\n pub trait GraphPredecessors<'graph> {\n     type Item;\n     type Iter: Iterator<Item = Self::Item>;"}, {"sha": "3b49ce710633e541992143318dd59d7666b53b90", "filename": "src/librustc_data_structures/owning_ref/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_data_structures%2Fowning_ref%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_data_structures%2Fowning_ref%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fowning_ref%2Fmod.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -283,6 +283,7 @@ impl<T> Erased for T {}\n /// Helper trait for erasing the concrete type of what an owner dereferences to,\n /// for example `Box<T> -> Box<Erased>`. This would be unneeded with\n /// higher kinded types support in the language.\n+#[allow(unused_lifetimes)]\n pub unsafe trait IntoErased<'a> {\n     /// Owner with the dereference type substituted to `Erased`.\n     type Erased;\n@@ -293,6 +294,7 @@ pub unsafe trait IntoErased<'a> {\n /// Helper trait for erasing the concrete type of what an owner dereferences to,\n /// for example `Box<T> -> Box<Erased + Send>`. This would be unneeded with\n /// higher kinded types support in the language.\n+#[allow(unused_lifetimes)]\n pub unsafe trait IntoErasedSend<'a> {\n     /// Owner with the dereference type substituted to `Erased + Send`.\n     type Erased: Send;\n@@ -303,6 +305,7 @@ pub unsafe trait IntoErasedSend<'a> {\n /// Helper trait for erasing the concrete type of what an owner dereferences to,\n /// for example `Box<T> -> Box<Erased + Send + Sync>`. This would be unneeded with\n /// higher kinded types support in the language.\n+#[allow(unused_lifetimes)]\n pub unsafe trait IntoErasedSendSync<'a> {\n     /// Owner with the dereference type substituted to `Erased + Send + Sync`.\n     type Erased: Send + Sync;"}, {"sha": "77b7ef96d3f6ca941851075aef24660aa682f1bb", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -16,8 +16,6 @@\n \n #![recursion_limit=\"256\"]\n \n-#![deny(unused_lifetimes)]\n-\n pub extern crate getopts;\n #[cfg(unix)]\n extern crate libc;"}, {"sha": "3f758c2521bc008e7f54927c7b7742045f3d116c", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -8,7 +8,6 @@\n #![cfg_attr(unix, feature(libc))]\n #![feature(nll)]\n #![feature(optin_builtin_traits)]\n-#![deny(unused_lifetimes)]\n \n pub use emitter::ColorConfig;\n "}, {"sha": "b257311138587bb8055cd41ec7c6dd72af058d8f", "filename": "src/librustc_incremental/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_incremental%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_incremental%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Flib.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -8,8 +8,6 @@\n \n #![recursion_limit=\"256\"]\n \n-#![deny(unused_lifetimes)]\n-\n #[macro_use] extern crate rustc;\n #[macro_use] extern crate log;\n "}, {"sha": "2e593d441553a014c28a85bafb16e1b033e272f4", "filename": "src/librustc_interface/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_interface%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_interface%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Flib.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -6,8 +6,6 @@\n #![feature(generators)]\n #![cfg_attr(unix, feature(libc))]\n \n-#![deny(unused_lifetimes)]\n-\n #![recursion_limit=\"256\"]\n \n #[cfg(unix)]"}, {"sha": "d3975360525d0673e7c2029d3e5c379003701bc9", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -19,8 +19,6 @@\n \n #![recursion_limit=\"256\"]\n \n-#![deny(unused_lifetimes)]\n-\n #[macro_use]\n extern crate rustc;\n "}, {"sha": "c96d02d9b37dee5649ee9626642a26e2a3476b0d", "filename": "src/librustc_metadata/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_metadata%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_metadata%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flib.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -15,8 +15,6 @@\n \n #![recursion_limit=\"256\"]\n \n-#![deny(unused_lifetimes)]\n-\n extern crate libc;\n extern crate proc_macro;\n "}, {"sha": "20d5e54d2ce4939683a1dbf2d10dc4847cf9ed29", "filename": "src/librustc_mir/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_mir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_mir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flib.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -26,8 +26,6 @@ Rust MIR: a lowered representation of Rust. Also: an experiment!\n \n #![recursion_limit=\"256\"]\n \n-#![deny(unused_lifetimes)]\n-\n #[macro_use] extern crate log;\n #[macro_use] extern crate rustc;\n #[macro_use] extern crate rustc_data_structures;"}, {"sha": "5614b570b927aa646265747fbeca93a79dac03d0", "filename": "src/librustc_passes/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_passes%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_passes%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Flib.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -13,8 +13,6 @@\n \n #![recursion_limit=\"256\"]\n \n-#![deny(unused_lifetimes)]\n-\n #[macro_use]\n extern crate rustc;\n "}, {"sha": "e291f40ffd27d9c7140ae94bb2e5c42dd9303883", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -1,7 +1,5 @@\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n-#![deny(unused_lifetimes)]\n-\n #![feature(in_band_lifetimes)]\n #![feature(nll)]\n #![feature(rustc_diagnostic_macros)]"}, {"sha": "bc5898fe78da7872686e68ce302bd44fe7af64b6", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -10,8 +10,6 @@\n \n #![recursion_limit=\"256\"]\n \n-#![deny(unused_lifetimes)]\n-\n pub use rustc::hir::def::{Namespace, PerNS};\n \n use Determinacy::*;"}, {"sha": "9edb4c0fa67482a6098f60355334b3c1cb6511a6", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -1,10 +1,8 @@\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n #![feature(nll)]\n-#![deny(unused_lifetimes)]\n \n #![recursion_limit=\"256\"]\n \n-\n mod dumper;\n mod dump_visitor;\n #[macro_use]"}, {"sha": "a349dc26e834cc295599239f6f80a52fb0fc0ce9", "filename": "src/librustc_target/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_target%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_target%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Flib.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -13,8 +13,6 @@\n #![feature(nll)]\n #![feature(slice_patterns)]\n \n-#![deny(unused_lifetimes)]\n-\n #[macro_use] extern crate log;\n \n pub mod abi;"}, {"sha": "ebe6b7c6138850b346c6fda8bbb3388b33aec267", "filename": "src/librustc_traits/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_traits%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_traits%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Flib.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -1,8 +1,6 @@\n //! New recursive solver modeled on Chalk's recursive solver. Most of\n //! the guts are broken up into modules; see the comments in those modules.\n \n-#![deny(unused_lifetimes)]\n-\n #![feature(crate_visibility_modifier)]\n #![feature(in_band_lifetimes)]\n #![feature(nll)]"}, {"sha": "a34b137aca97196c09dc1eda3410597451015082", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -73,8 +73,6 @@ This API is completely unstable and subject to change.\n \n #![recursion_limit=\"256\"]\n \n-#![deny(unused_lifetimes)]\n-\n #[macro_use] extern crate log;\n #[macro_use] extern crate syntax;\n "}, {"sha": "a8d7ff4a2eb8bd8a7c7b3a66e26b49baa301ccf4", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -1,5 +1,3 @@\n-#![deny(unused_lifetimes)]\n-\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\",\n        html_playground_url = \"https://play.rust-lang.org/\")]\n "}, {"sha": "8fd76eabe394371a0b569c496cf4031a6b876086", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -210,6 +210,7 @@\n #![warn(missing_debug_implementations)]\n #![deny(intra_doc_link_resolution_failure)] // rustdoc is run without -D warnings\n #![allow(explicit_outlives_requirements)]\n+#![allow(unused_lifetimes)]\n \n // Tell the compiler to link to either panic_abort or panic_unwind\n #![needs_panic_runtime]"}, {"sha": "1fd20fa0b31285a2b60680ead343ed8f55c130a7", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -7,8 +7,6 @@\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\",\n        test(attr(deny(warnings))))]\n \n-#![deny(unused_lifetimes)]\n-\n #![feature(bind_by_move_pattern_guards)]\n #![feature(box_syntax)]\n #![feature(const_fn)]"}, {"sha": "da11f2ff23fb572116802327e024463dfee53a34", "filename": "src/libsyntax_ext/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibsyntax_ext%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibsyntax_ext%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Flib.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -3,8 +3,6 @@\n \n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n-#![deny(unused_lifetimes)]\n-\n #![feature(crate_visibility_modifier)]\n #![feature(decl_macro)]\n #![feature(mem_take)]"}, {"sha": "acc13aec4022999c39c0c2271c67238b3a90b93f", "filename": "src/libsyntax_pos/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibsyntax_pos%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676d282dd3cd2dedba651e98c9a41af42983f08b/src%2Flibsyntax_pos%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Flib.rs?ref=676d282dd3cd2dedba651e98c9a41af42983f08b", "patch": "@@ -6,8 +6,6 @@\n \n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n-#![deny(unused_lifetimes)]\n-\n #![feature(const_fn)]\n #![feature(crate_visibility_modifier)]\n #![feature(nll)]"}]}