{"sha": "98e2b9f25b6db4b2680a3d388456d9f95cb28344", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4ZTJiOWYyNWI2ZGI0YjI2ODBhM2QzODg0NTZkOWY5NWNiMjgzNDQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-22T09:27:42Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-22T09:27:42Z"}, "message": "Auto merge of #7119 - flip1995:rustup, r=flip1995\n\nRustup\n\nr? `@ghost`\n\nchangelog: none", "tree": {"sha": "d1ff9baaee4f8849fe05d87f8e61be9f629ff13c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1ff9baaee4f8849fe05d87f8e61be9f629ff13c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98e2b9f25b6db4b2680a3d388456d9f95cb28344", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98e2b9f25b6db4b2680a3d388456d9f95cb28344", "html_url": "https://github.com/rust-lang/rust/commit/98e2b9f25b6db4b2680a3d388456d9f95cb28344", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98e2b9f25b6db4b2680a3d388456d9f95cb28344/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f7aef336ea947e14cfabcb22538863e04a87e57", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f7aef336ea947e14cfabcb22538863e04a87e57", "html_url": "https://github.com/rust-lang/rust/commit/1f7aef336ea947e14cfabcb22538863e04a87e57"}, {"sha": "876897da8f94439f307d5c7a7c6be17de7a6c5ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/876897da8f94439f307d5c7a7c6be17de7a6c5ff", "html_url": "https://github.com/rust-lang/rust/commit/876897da8f94439f307d5c7a7c6be17de7a6c5ff"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "cd398451783d6bc53b03596e5b7a55956c9a19d3", "filename": "rust-toolchain", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/98e2b9f25b6db4b2680a3d388456d9f95cb28344/rust-toolchain", "raw_url": "https://github.com/rust-lang/rust/raw/98e2b9f25b6db4b2680a3d388456d9f95cb28344/rust-toolchain", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-toolchain?ref=98e2b9f25b6db4b2680a3d388456d9f95cb28344", "patch": "@@ -1,3 +1,3 @@\n [toolchain]\n-channel = \"nightly-2021-04-08\"\n+channel = \"nightly-2021-04-22\"\n components = [\"llvm-tools-preview\", \"rustc-dev\", \"rust-src\"]"}, {"sha": "8498c0407808d1b60950894cb8495fca0a30f787", "filename": "tests/ui/crashes/ice-6251.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/98e2b9f25b6db4b2680a3d388456d9f95cb28344/tests%2Fui%2Fcrashes%2Fice-6251.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/98e2b9f25b6db4b2680a3d388456d9f95cb28344/tests%2Fui%2Fcrashes%2Fice-6251.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-6251.stderr?ref=98e2b9f25b6db4b2680a3d388456d9f95cb28344", "patch": "@@ -16,8 +16,8 @@ LL | fn bug<T>() -> impl Iterator<Item = [(); { |x: [u8]| x }]> {\n    = help: unsized fn params are gated as an unstable feature\n help: function arguments must have a statically known size, borrowed types always have a known size\n    |\n-LL | fn bug<T>() -> impl Iterator<Item = [(); { |&x: [u8]| x }]> {\n-   |                                             ^\n+LL | fn bug<T>() -> impl Iterator<Item = [(); { |x: &[u8]| x }]> {\n+   |                                                ^\n \n error[E0277]: the size for values of type `[u8]` cannot be known at compilation time\n   --> $DIR/ice-6251.rs:4:54"}, {"sha": "7ff5a16ed86ca078e2fec2362f93a7a83213b2f4", "filename": "tests/ui/crate_level_checks/entrypoint_recursion.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/98e2b9f25b6db4b2680a3d388456d9f95cb28344/tests%2Fui%2Fcrate_level_checks%2Fentrypoint_recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98e2b9f25b6db4b2680a3d388456d9f95cb28344/tests%2Fui%2Fcrate_level_checks%2Fentrypoint_recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrate_level_checks%2Fentrypoint_recursion.rs?ref=98e2b9f25b6db4b2680a3d388456d9f95cb28344", "patch": "@@ -1,11 +1,11 @@\n // ignore-macos\n // ignore-windows\n \n-#![feature(main)]\n+#![feature(rustc_attrs)]\n \n #[warn(clippy::main_recursion)]\n #[allow(unconditional_recursion)]\n-#[main]\n+#[rustc_main]\n fn a() {\n     println!(\"Hello, World!\");\n     a();"}, {"sha": "129d82652d75915f55dc7907e52fddfbd08a0b9d", "filename": "tests/ui/wildcard_enum_match_arm.fixed", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/98e2b9f25b6db4b2680a3d388456d9f95cb28344/tests%2Fui%2Fwildcard_enum_match_arm.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/98e2b9f25b6db4b2680a3d388456d9f95cb28344/tests%2Fui%2Fwildcard_enum_match_arm.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_enum_match_arm.fixed?ref=98e2b9f25b6db4b2680a3d388456d9f95cb28344", "patch": "@@ -77,7 +77,7 @@ fn main() {\n     let error_kind = ErrorKind::NotFound;\n     match error_kind {\n         ErrorKind::NotFound => {},\n-        ErrorKind::PermissionDenied | ErrorKind::ConnectionRefused | ErrorKind::ConnectionReset | ErrorKind::ConnectionAborted | ErrorKind::NotConnected | ErrorKind::AddrInUse | ErrorKind::AddrNotAvailable | ErrorKind::BrokenPipe | ErrorKind::AlreadyExists | ErrorKind::WouldBlock | ErrorKind::InvalidInput | ErrorKind::InvalidData | ErrorKind::TimedOut | ErrorKind::WriteZero | ErrorKind::Interrupted | ErrorKind::Other | ErrorKind::UnexpectedEof | _ => {},\n+        ErrorKind::PermissionDenied | ErrorKind::ConnectionRefused | ErrorKind::ConnectionReset | ErrorKind::ConnectionAborted | ErrorKind::NotConnected | ErrorKind::AddrInUse | ErrorKind::AddrNotAvailable | ErrorKind::BrokenPipe | ErrorKind::AlreadyExists | ErrorKind::WouldBlock | ErrorKind::InvalidInput | ErrorKind::InvalidData | ErrorKind::TimedOut | ErrorKind::WriteZero | ErrorKind::Interrupted | ErrorKind::Other | ErrorKind::UnexpectedEof | ErrorKind::Unsupported | _ => {},\n     }\n     match error_kind {\n         ErrorKind::NotFound => {},\n@@ -98,6 +98,7 @@ fn main() {\n         ErrorKind::Interrupted => {},\n         ErrorKind::Other => {},\n         ErrorKind::UnexpectedEof => {},\n+        ErrorKind::Unsupported => {},\n         _ => {},\n     }\n }"}, {"sha": "028ecb63e7e6dcc7dddf75c0b170ef944d65e054", "filename": "tests/ui/wildcard_enum_match_arm.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/98e2b9f25b6db4b2680a3d388456d9f95cb28344/tests%2Fui%2Fwildcard_enum_match_arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98e2b9f25b6db4b2680a3d388456d9f95cb28344/tests%2Fui%2Fwildcard_enum_match_arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_enum_match_arm.rs?ref=98e2b9f25b6db4b2680a3d388456d9f95cb28344", "patch": "@@ -98,6 +98,7 @@ fn main() {\n         ErrorKind::Interrupted => {},\n         ErrorKind::Other => {},\n         ErrorKind::UnexpectedEof => {},\n+        ErrorKind::Unsupported => {},\n         _ => {},\n     }\n }"}, {"sha": "fd45cad00d6b51bd6c5cc980957b46439899f9d8", "filename": "tests/ui/wildcard_enum_match_arm.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/98e2b9f25b6db4b2680a3d388456d9f95cb28344/tests%2Fui%2Fwildcard_enum_match_arm.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/98e2b9f25b6db4b2680a3d388456d9f95cb28344/tests%2Fui%2Fwildcard_enum_match_arm.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_enum_match_arm.stderr?ref=98e2b9f25b6db4b2680a3d388456d9f95cb28344", "patch": "@@ -32,7 +32,7 @@ error: wildcard matches known variants and will also match future added variants\n   --> $DIR/wildcard_enum_match_arm.rs:80:9\n    |\n LL |         _ => {},\n-   |         ^ help: try this: `ErrorKind::PermissionDenied | ErrorKind::ConnectionRefused | ErrorKind::ConnectionReset | ErrorKind::ConnectionAborted | ErrorKind::NotConnected | ErrorKind::AddrInUse | ErrorKind::AddrNotAvailable | ErrorKind::BrokenPipe | ErrorKind::AlreadyExists | ErrorKind::WouldBlock | ErrorKind::InvalidInput | ErrorKind::InvalidData | ErrorKind::TimedOut | ErrorKind::WriteZero | ErrorKind::Interrupted | ErrorKind::Other | ErrorKind::UnexpectedEof | _`\n+   |         ^ help: try this: `ErrorKind::PermissionDenied | ErrorKind::ConnectionRefused | ErrorKind::ConnectionReset | ErrorKind::ConnectionAborted | ErrorKind::NotConnected | ErrorKind::AddrInUse | ErrorKind::AddrNotAvailable | ErrorKind::BrokenPipe | ErrorKind::AlreadyExists | ErrorKind::WouldBlock | ErrorKind::InvalidInput | ErrorKind::InvalidData | ErrorKind::TimedOut | ErrorKind::WriteZero | ErrorKind::Interrupted | ErrorKind::Other | ErrorKind::UnexpectedEof | ErrorKind::Unsupported | _`\n \n error: aborting due to 5 previous errors\n "}]}