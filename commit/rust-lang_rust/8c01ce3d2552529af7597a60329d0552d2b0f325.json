{"sha": "8c01ce3d2552529af7597a60329d0552d2b0f325", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjMDFjZTNkMjU1MjUyOWFmNzU5N2E2MDMyOWQwNTUyZDJiMGYzMjU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-04-03T18:41:45Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-04-04T17:52:58Z"}, "message": "std: Use `poll` instead of `select`\n\nThis gives us the benefit of supporting file descriptors over the limit that\nselect supports, which...\n\nCloses #40894", "tree": {"sha": "7333f1b2740f0f627758f61225805c062d99a7b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7333f1b2740f0f627758f61225805c062d99a7b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c01ce3d2552529af7597a60329d0552d2b0f325", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c01ce3d2552529af7597a60329d0552d2b0f325", "html_url": "https://github.com/rust-lang/rust/commit/8c01ce3d2552529af7597a60329d0552d2b0f325", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c01ce3d2552529af7597a60329d0552d2b0f325/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e122f59ba23494d460466cca53c71646d99c767", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e122f59ba23494d460466cca53c71646d99c767", "html_url": "https://github.com/rust-lang/rust/commit/5e122f59ba23494d460466cca53c71646d99c767"}], "stats": {"total": 22, "additions": 9, "deletions": 13}, "files": [{"sha": "706256ff10ec9dac6cb548150ff68ad129dc0511", "filename": "src/libstd/sys/unix/pipe.rs", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8c01ce3d2552529af7597a60329d0552d2b0f325/src%2Flibstd%2Fsys%2Funix%2Fpipe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c01ce3d2552529af7597a60329d0552d2b0f325/src%2Flibstd%2Fsys%2Funix%2Fpipe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fpipe.rs?ref=8c01ce3d2552529af7597a60329d0552d2b0f325", "patch": "@@ -8,11 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use cmp;\n use io;\n use libc::{self, c_int};\n use mem;\n-use ptr;\n use sys::{cvt, cvt_r};\n use sys::fd::FileDesc;\n \n@@ -80,16 +78,14 @@ pub fn read2(p1: AnonPipe,\n     p1.set_nonblocking(true)?;\n     p2.set_nonblocking(true)?;\n \n-    let max = cmp::max(p1.raw(), p2.raw());\n+    let mut fds: [libc::pollfd; 2] = unsafe { mem::zeroed() };\n+    fds[0].fd = p1.raw();\n+    fds[0].events = libc::POLLIN;\n+    fds[1].fd = p2.raw();\n+    fds[1].events = libc::POLLIN;\n     loop {\n-        // wait for either pipe to become readable using `select`\n-        cvt_r(|| unsafe {\n-            let mut read: libc::fd_set = mem::zeroed();\n-            libc::FD_SET(p1.raw(), &mut read);\n-            libc::FD_SET(p2.raw(), &mut read);\n-            libc::select(max + 1, &mut read, ptr::null_mut(), ptr::null_mut(),\n-                         ptr::null_mut())\n-        })?;\n+        // wait for either pipe to become readable using `poll`\n+        cvt_r(|| unsafe { libc::poll(fds.as_mut_ptr(), 2, -1) })?;\n \n         // Read as much as we can from each pipe, ignoring EWOULDBLOCK or\n         // EAGAIN. If we hit EOF, then this will happen because the underlying\n@@ -109,11 +105,11 @@ pub fn read2(p1: AnonPipe,\n                 }\n             }\n         };\n-        if read(&p1, v1)? {\n+        if fds[0].revents != 0 && read(&p1, v1)? {\n             p2.set_nonblocking(false)?;\n             return p2.read_to_end(v2).map(|_| ());\n         }\n-        if read(&p2, v2)? {\n+        if fds[1].revents != 0 && read(&p2, v2)? {\n             p1.set_nonblocking(false)?;\n             return p1.read_to_end(v1).map(|_| ());\n         }"}]}