{"sha": "5f154770e2e921e717127b9fe95e09856305fd6f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmMTU0NzcwZTJlOTIxZTcxNzEyN2I5ZmU5NWUwOTg1NjMwNWZkNmY=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-05-23T22:46:43Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-05-23T22:46:43Z"}, "message": "Prevent capturing non-copyable things in closures.", "tree": {"sha": "c6e4f63c6032bef8384a4010a92ac0c148febf3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6e4f63c6032bef8384a4010a92ac0c148febf3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f154770e2e921e717127b9fe95e09856305fd6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f154770e2e921e717127b9fe95e09856305fd6f", "html_url": "https://github.com/rust-lang/rust/commit/5f154770e2e921e717127b9fe95e09856305fd6f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f154770e2e921e717127b9fe95e09856305fd6f/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6fa1a084f7714023c4594ec7a857359824dc3253", "url": "https://api.github.com/repos/rust-lang/rust/commits/6fa1a084f7714023c4594ec7a857359824dc3253", "html_url": "https://github.com/rust-lang/rust/commit/6fa1a084f7714023c4594ec7a857359824dc3253"}], "stats": {"total": 50, "additions": 45, "deletions": 5}, "files": [{"sha": "b350d34781ab3d8872165db1a2fa749188b179fc", "filename": "src/rustc/middle/kind.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5f154770e2e921e717127b9fe95e09856305fd6f/src%2Frustc%2Fmiddle%2Fkind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f154770e2e921e717127b9fe95e09856305fd6f/src%2Frustc%2Fmiddle%2Fkind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fkind.rs?ref=5f154770e2e921e717127b9fe95e09856305fd6f", "patch": "@@ -71,6 +71,9 @@ fn with_appropriate_checker(cx: ctx, id: node_id, b: fn(check_fn)) {\n         // moved in or copied in\n         check_send(cx, var_t, sp);\n \n+        // copied in data must be copyable, but moved in data can be anything\n+        if !is_move { check_copy(cx, var_t, sp); }\n+\n         // check that only immutable variables are implicitly copied in\n         if !is_move {\n             for fv.each { |fv|"}, {"sha": "23f7ad21ad96fd643842337d3a6fd1263d13eea2", "filename": "src/rustdoc/fold.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5f154770e2e921e717127b9fe95e09856305fd6f/src%2Frustdoc%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f154770e2e921e717127b9fe95e09856305fd6f/src%2Frustdoc%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Ffold.rs?ref=5f154770e2e921e717127b9fe95e09856305fd6f", "patch": "@@ -171,7 +171,7 @@ fn default_seq_fold_item<T>(\n     doc\n }\n \n-fn default_any_fold_mod<T:send>(\n+fn default_any_fold_mod<T:send copy>(\n     fold: fold<T>,\n     doc: doc::moddoc\n ) -> doc::moddoc {\n@@ -197,7 +197,7 @@ fn default_seq_fold_mod<T>(\n     }\n }\n \n-fn default_par_fold_mod<T:send>(\n+fn default_par_fold_mod<T:send copy>(\n     fold: fold<T>,\n     doc: doc::moddoc\n ) -> doc::moddoc {\n@@ -210,7 +210,7 @@ fn default_par_fold_mod<T:send>(\n     }\n }\n \n-fn default_any_fold_nmod<T:send>(\n+fn default_any_fold_nmod<T:send copy>(\n     fold: fold<T>,\n     doc: doc::nmoddoc\n ) -> doc::nmoddoc {\n@@ -236,7 +236,7 @@ fn default_seq_fold_nmod<T>(\n     }\n }\n \n-fn default_par_fold_nmod<T:send>(\n+fn default_par_fold_nmod<T:send copy>(\n     fold: fold<T>,\n     doc: doc::nmoddoc\n ) -> doc::nmoddoc {"}, {"sha": "6cacd7cd679ebc23ada48f15fdaf82ff7d8a6122", "filename": "src/test/compile-fail/no-capture-arc.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/5f154770e2e921e717127b9fe95e09856305fd6f/src%2Ftest%2Fcompile-fail%2Fno-capture-arc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f154770e2e921e717127b9fe95e09856305fd6f/src%2Ftest%2Fcompile-fail%2Fno-capture-arc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno-capture-arc.rs?ref=5f154770e2e921e717127b9fe95e09856305fd6f", "patch": "@@ -0,0 +1,19 @@\n+// error-pattern: copying a noncopyable value\n+\n+use std;\n+import std::arc;\n+import comm::*;\n+\n+fn main() {\n+    let v = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n+    let arc_v = arc::arc(v);\n+    \n+    task::spawn() {||\n+        let v = *arc::get(&arc_v);\n+        assert v[3] == 4;\n+    };\n+\n+    assert (*arc::get(&arc_v))[2] == 3;\n+\n+    log(info, arc_v);\n+}"}, {"sha": "a9ff80637a1d1f0521d24510468d9b6873a799c3", "filename": "src/test/compile-fail/no-reuse-move-arc.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5f154770e2e921e717127b9fe95e09856305fd6f/src%2Ftest%2Fcompile-fail%2Fno-reuse-move-arc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f154770e2e921e717127b9fe95e09856305fd6f/src%2Ftest%2Fcompile-fail%2Fno-reuse-move-arc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno-reuse-move-arc.rs?ref=5f154770e2e921e717127b9fe95e09856305fd6f", "patch": "@@ -0,0 +1,18 @@\n+// error-pattern: unsatisfied precondition constraint\n+use std;\n+import std::arc;\n+import comm::*;\n+\n+fn main() {\n+    let v = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n+    let arc_v = arc::arc(v);\n+    \n+    task::spawn() {|move arc_v|\n+        let v = *arc::get(&arc_v);\n+        assert v[3] == 4;\n+    };\n+\n+    assert (*arc::get(&arc_v))[2] == 3;\n+\n+    log(info, arc_v);\n+}"}, {"sha": "cd05e217546863d3ea0475076c53e9c28d33396e", "filename": "src/test/run-pass/uniq-cc-generic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5f154770e2e921e717127b9fe95e09856305fd6f/src%2Ftest%2Frun-pass%2Funiq-cc-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f154770e2e921e717127b9fe95e09856305fd6f/src%2Ftest%2Frun-pass%2Funiq-cc-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funiq-cc-generic.rs?ref=5f154770e2e921e717127b9fe95e09856305fd6f", "patch": "@@ -8,7 +8,7 @@ type pointy = {\n     d : fn~() -> uint,\n };\n \n-fn make_uniq_closure<A:send>(a: A) -> fn~() -> uint {\n+fn make_uniq_closure<A:send copy>(a: A) -> fn~() -> uint {\n     fn~() -> uint { ptr::addr_of(a) as uint }\n }\n "}]}