{"sha": "f7ce3dc55f1bcc8a741951a4b9f090bad61769ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3Y2UzZGM1NWYxYmNjOGE3NDE5NTFhNGI5ZjA5MGJhZDYxNzY5YWU=", "commit": {"author": {"name": "Ben Striegel", "email": "ben.striegel@gmail.com", "date": "2012-10-13T01:47:46Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-10-17T18:19:38Z"}, "message": "Extraneous sigil patrol: turn &[] literals into []", "tree": {"sha": "3fe1dcf55f297be4556b9162661304a52832f9af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3fe1dcf55f297be4556b9162661304a52832f9af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7ce3dc55f1bcc8a741951a4b9f090bad61769ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7ce3dc55f1bcc8a741951a4b9f090bad61769ae", "html_url": "https://github.com/rust-lang/rust/commit/f7ce3dc55f1bcc8a741951a4b9f090bad61769ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7ce3dc55f1bcc8a741951a4b9f090bad61769ae/comments", "author": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e1d0bab8075df5ce06543537296d7294440bd45", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e1d0bab8075df5ce06543537296d7294440bd45", "html_url": "https://github.com/rust-lang/rust/commit/5e1d0bab8075df5ce06543537296d7294440bd45"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "02927c4ddd1b5a5b320ee899f0e310ce7a5a116f", "filename": "doc/tutorial.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f7ce3dc55f1bcc8a741951a4b9f090bad61769ae/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/f7ce3dc55f1bcc8a741951a4b9f090bad61769ae/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=f7ce3dc55f1bcc8a741951a4b9f090bad61769ae", "patch": "@@ -1504,7 +1504,7 @@ and [`core::str`]. Here are some examples.\n # fn store_crayon_in_nasal_cavity(i: uint, c: Crayon) { }\n # fn crayon_to_str(c: Crayon) -> &str { \"\" }\n \n-let crayons = &[Almond, AntiqueBrass, Apricot];\n+let crayons = [Almond, AntiqueBrass, Apricot];\n \n // Check the length of the vector\n assert crayons.len() == 3;\n@@ -1679,7 +1679,7 @@ structure.\n ~~~~\n # fn each(v: &[int], op: fn(v: &int)) { }\n # fn do_some_work(i: &int) { }\n-each(&[1, 2, 3], |n| {\n+each([1, 2, 3], |n| {\n     do_some_work(n);\n });\n ~~~~\n@@ -1690,7 +1690,7 @@ call that can be written more like a built-in control structure:\n ~~~~\n # fn each(v: &[int], op: fn(v: &int)) { }\n # fn do_some_work(i: &int) { }\n-do each(&[1, 2, 3]) |n| {\n+do each([1, 2, 3]) |n| {\n     do_some_work(n);\n }\n ~~~~\n@@ -1751,7 +1751,7 @@ And using this function to iterate over a vector:\n ~~~~\n # use each = vec::each;\n # use println = io::println;\n-each(&[2, 4, 8, 5, 16], |n| {\n+each([2, 4, 8, 5, 16], |n| {\n     if *n % 2 != 0 {\n         println(\"found odd number!\");\n         false\n@@ -1768,7 +1768,7 @@ to the next iteration, write `loop`.\n ~~~~\n # use each = vec::each;\n # use println = io::println;\n-for each(&[2, 4, 8, 5, 16]) |n| {\n+for each([2, 4, 8, 5, 16]) |n| {\n     if *n % 2 != 0 {\n         println(\"found odd number!\");\n         break;\n@@ -2106,7 +2106,7 @@ impl @Rectangle: Drawable { fn draw() { ... } }\n \n let c: @Circle = @new_circle();\n let r: @Rectangle = @new_rectangle();\n-draw_all(&[c as @Drawable, r as @Drawable]);\n+draw_all([c as @Drawable, r as @Drawable]);\n ~~~~\n \n We omit the code for `new_circle` and `new_rectangle`; imagine that"}]}