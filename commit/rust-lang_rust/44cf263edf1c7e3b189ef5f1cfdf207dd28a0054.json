{"sha": "44cf263edf1c7e3b189ef5f1cfdf207dd28a0054", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0Y2YyNjNlZGYxYzdlM2IxODllZjVmMWNmZGYyMDdkZDI4YTAwNTQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-06-23T21:47:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-23T21:47:00Z"}, "message": "Merge #5008\n\n5008: Remove useless test code r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "a9e1bf901384003b5c740ac742c45407e1c1a048", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9e1bf901384003b5c740ac742c45407e1c1a048"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44cf263edf1c7e3b189ef5f1cfdf207dd28a0054", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe8nhUCRBK7hj4Ov3rIwAAdHIIAIaVWBmmlRUvSXUoreOXqr/d\nD7Prv4jLXHiRbm4mt0C+jYUaiMdnxH/tvYdN403ccdnHYYcv3qD6bsRrYHzQJTV7\nPvTVmKZDXAvNbqCaUtP8FljlfICj2Nrfh97GyT6xfkhfnknyIIJINy5C9ZfN4Xvk\n98qI7pJ5ndfQ1Ed85xWgiCQ1CQrZSLWd/0vYOJsy0Ub3nUho/jiN8nj+CfIzFoGD\nAR5B2HiuqIpUSRhyEbLFAlqu9kfGrtTgt9a+ZPSqwLoTsJ15q9Zv7tEJucxLnmv5\n8CDrKHLb4h+UaJ3/2cUq47gaAeIdVZRiw5jphg8EgahJ5Y/WIQr/PxHz5N6NLF0=\n=AZun\n-----END PGP SIGNATURE-----\n", "payload": "tree a9e1bf901384003b5c740ac742c45407e1c1a048\nparent e2e373e0716cea4ea341c7f381da0d39f484cd30\nparent 7ce122b1df3369cc9bc810cbe4047663491449cd\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1592948820 +0000\ncommitter GitHub <noreply@github.com> 1592948820 +0000\n\nMerge #5008\n\n5008: Remove useless test code r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44cf263edf1c7e3b189ef5f1cfdf207dd28a0054", "html_url": "https://github.com/rust-lang/rust/commit/44cf263edf1c7e3b189ef5f1cfdf207dd28a0054", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44cf263edf1c7e3b189ef5f1cfdf207dd28a0054/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2e373e0716cea4ea341c7f381da0d39f484cd30", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2e373e0716cea4ea341c7f381da0d39f484cd30", "html_url": "https://github.com/rust-lang/rust/commit/e2e373e0716cea4ea341c7f381da0d39f484cd30"}, {"sha": "7ce122b1df3369cc9bc810cbe4047663491449cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ce122b1df3369cc9bc810cbe4047663491449cd", "html_url": "https://github.com/rust-lang/rust/commit/7ce122b1df3369cc9bc810cbe4047663491449cd"}], "stats": {"total": 26, "additions": 4, "deletions": 22}, "files": [{"sha": "001a2a1045149eac33a5f93534faf446bce4a9e3", "filename": "crates/rust-analyzer/tests/heavy_tests/support.rs", "status": "modified", "additions": 4, "deletions": 22, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/44cf263edf1c7e3b189ef5f1cfdf207dd28a0054/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fsupport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44cf263edf1c7e3b189ef5f1cfdf207dd28a0054/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fsupport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fsupport.rs?ref=44cf263edf1c7e3b189ef5f1cfdf207dd28a0054", "patch": "@@ -9,9 +9,7 @@ use std::{\n use crossbeam_channel::{after, select, Receiver};\n use lsp_server::{Connection, Message, Notification, Request};\n use lsp_types::{\n-    notification::{DidOpenTextDocument, Exit},\n-    request::Shutdown,\n-    DidOpenTextDocumentParams, TextDocumentIdentifier, TextDocumentItem, Url, WorkDoneProgress,\n+    notification::Exit, request::Shutdown, TextDocumentIdentifier, Url, WorkDoneProgress,\n };\n use lsp_types::{ProgressParams, ProgressParamsValue};\n use serde::Serialize;\n@@ -66,13 +64,10 @@ impl<'a> Project<'a> {\n             ra_prof::init_from(crate::PROFILE);\n         });\n \n-        let mut paths = vec![];\n-\n         for entry in Fixture::parse(self.fixture) {\n             let path = tmp_dir.path().join(&entry.path['/'.len_utf8()..]);\n             fs::create_dir_all(path.parent().unwrap()).unwrap();\n             fs::write(path.as_path(), entry.text.as_bytes()).unwrap();\n-            paths.push((path, entry.text));\n         }\n \n         let mut roots =\n@@ -102,7 +97,7 @@ impl<'a> Project<'a> {\n             f(&mut config)\n         }\n \n-        Server::new(tmp_dir, config, paths)\n+        Server::new(tmp_dir, config)\n     }\n }\n \n@@ -120,28 +115,15 @@ pub struct Server {\n }\n \n impl Server {\n-    fn new(dir: TempDir, config: Config, files: Vec<(PathBuf, String)>) -> Server {\n+    fn new(dir: TempDir, config: Config) -> Server {\n         let (connection, client) = Connection::memory();\n \n         let _thread = jod_thread::Builder::new()\n             .name(\"test server\".to_string())\n             .spawn(move || main_loop(config, connection).unwrap())\n             .expect(\"failed to spawn a thread\");\n \n-        let res =\n-            Server { req_id: Cell::new(1), dir, messages: Default::default(), client, _thread };\n-\n-        for (path, text) in files {\n-            res.notification::<DidOpenTextDocument>(DidOpenTextDocumentParams {\n-                text_document: TextDocumentItem {\n-                    uri: Url::from_file_path(path).unwrap(),\n-                    language_id: \"rust\".to_string(),\n-                    version: 0,\n-                    text,\n-                },\n-            })\n-        }\n-        res\n+        Server { req_id: Cell::new(1), dir, messages: Default::default(), client, _thread }\n     }\n \n     pub fn doc_id(&self, rel_path: &str) -> TextDocumentIdentifier {"}]}