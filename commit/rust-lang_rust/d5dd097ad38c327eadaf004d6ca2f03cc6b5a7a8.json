{"sha": "d5dd097ad38c327eadaf004d6ca2f03cc6b5a7a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1ZGQwOTdhZDM4YzMyN2VhZGFmMDA0ZDZjYTJmMDNjYzZiNWE3YTg=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-14T02:18:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-14T02:18:54Z"}, "message": "Rollup merge of #63512 - 95th:master, r=cramertj\n\nProvide map_ok and map_err method for Poll<Option<Result<T, E>>>\n\nCurrently `map_ok` and `map_err` methods are given for `Poll<Result<T, E>>`.\n\nThis PR adds these methods for `Poll<Option<Result<T, E>>>` as they are helpful in stream building code.", "tree": {"sha": "bc0138e7285f92c29709a10cc0e84be4d67f0191", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc0138e7285f92c29709a10cc0e84be4d67f0191"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5dd097ad38c327eadaf004d6ca2f03cc6b5a7a8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdU2+OCRBK7hj4Ov3rIwAAdHIIABWkbK+yyDcNmtmSx3CwFch6\nlJdI+BoU49x9Q5knsF6DIqvvZJ04I4+UTTADxG/TXDY5oTHWB1G8/zun4L+xXDvn\nYma6mnUJKFgyeilVgprKlyovin2YW8l5wTkIbgWbDyVAl+Q1R7XWDoletSAegxCO\n0hmcJKcEPi2pN/P32emBiBxfZu4OLr+C3p/q7+o0XaNhb4y6rPVlCXPDLbOENhgi\nU0xWVNP6558EqRq5RRWb/kEF0bJPgO9IM7N0KoU7WC4JS0Y4XC7xRmoaVOUWosBl\nFVQBKsNHRev9dGXJvWFcU7ZMPird3LN10QapnzlAQqtglPGQxKxqXk1l6MgW/Sg=\n=Ktym\n-----END PGP SIGNATURE-----\n", "payload": "tree bc0138e7285f92c29709a10cc0e84be4d67f0191\nparent 051598b29e944530e46ca9d40b40dd6ea36a0c90\nparent 84cab928db8526af7c42e1637e7253a009da215d\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1565749134 +0200\ncommitter GitHub <noreply@github.com> 1565749134 +0200\n\nRollup merge of #63512 - 95th:master, r=cramertj\n\nProvide map_ok and map_err method for Poll<Option<Result<T, E>>>\n\nCurrently `map_ok` and `map_err` methods are given for `Poll<Result<T, E>>`.\n\nThis PR adds these methods for `Poll<Option<Result<T, E>>>` as they are helpful in stream building code.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5dd097ad38c327eadaf004d6ca2f03cc6b5a7a8", "html_url": "https://github.com/rust-lang/rust/commit/d5dd097ad38c327eadaf004d6ca2f03cc6b5a7a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5dd097ad38c327eadaf004d6ca2f03cc6b5a7a8/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "051598b29e944530e46ca9d40b40dd6ea36a0c90", "url": "https://api.github.com/repos/rust-lang/rust/commits/051598b29e944530e46ca9d40b40dd6ea36a0c90", "html_url": "https://github.com/rust-lang/rust/commit/051598b29e944530e46ca9d40b40dd6ea36a0c90"}, {"sha": "84cab928db8526af7c42e1637e7253a009da215d", "url": "https://api.github.com/repos/rust-lang/rust/commits/84cab928db8526af7c42e1637e7253a009da215d", "html_url": "https://github.com/rust-lang/rust/commit/84cab928db8526af7c42e1637e7253a009da215d"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "fec17c4d1a4df7b111a5ab90b38cd6a956945868", "filename": "src/libcore/task/poll.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/d5dd097ad38c327eadaf004d6ca2f03cc6b5a7a8/src%2Flibcore%2Ftask%2Fpoll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5dd097ad38c327eadaf004d6ca2f03cc6b5a7a8/src%2Flibcore%2Ftask%2Fpoll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftask%2Fpoll.rs?ref=d5dd097ad38c327eadaf004d6ca2f03cc6b5a7a8", "patch": "@@ -81,6 +81,34 @@ impl<T, E> Poll<Result<T, E>> {\n     }\n }\n \n+impl<T, E> Poll<Option<Result<T, E>>> {\n+    /// Changes the success value of this `Poll` with the closure provided.\n+    #[unstable(feature = \"poll_map\", issue = \"63514\")]\n+    pub fn map_ok<U, F>(self, f: F) -> Poll<Option<Result<U, E>>>\n+        where F: FnOnce(T) -> U\n+    {\n+        match self {\n+            Poll::Ready(Some(Ok(t))) => Poll::Ready(Some(Ok(f(t)))),\n+            Poll::Ready(Some(Err(e))) => Poll::Ready(Some(Err(e))),\n+            Poll::Ready(None) => Poll::Ready(None),\n+            Poll::Pending => Poll::Pending,\n+        }\n+    }\n+\n+    /// Changes the error value of this `Poll` with the closure provided.\n+    #[unstable(feature = \"poll_map\", issue = \"63514\")]\n+    pub fn map_err<U, F>(self, f: F) -> Poll<Option<Result<T, U>>>\n+        where F: FnOnce(E) -> U\n+    {\n+        match self {\n+            Poll::Ready(Some(Ok(t))) => Poll::Ready(Some(Ok(t))),\n+            Poll::Ready(Some(Err(e))) => Poll::Ready(Some(Err(f(e)))),\n+            Poll::Ready(None) => Poll::Ready(None),\n+            Poll::Pending => Poll::Pending,\n+        }\n+    }\n+}\n+\n #[stable(feature = \"futures_api\", since = \"1.36.0\")]\n impl<T> From<T> for Poll<T> {\n     fn from(t: T) -> Poll<T> {"}]}