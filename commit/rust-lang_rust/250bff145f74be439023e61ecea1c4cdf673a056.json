{"sha": "250bff145f74be439023e61ecea1c4cdf673a056", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1MGJmZjE0NWY3NGJlNDM5MDIzZTYxZWNlYTFjNGNkZjY3M2EwNTY=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-05-13T14:44:46Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-05-17T17:37:22Z"}, "message": "Revert \"musl: link crt{begin,end}.o from the system compiler\"\n\nThis reverts commit 6d9154a830dd9773fe8a4e34e1fc3dfb1ca6f935.", "tree": {"sha": "29ed375c73c01d9b3e2f44f0a0c47806f832aa9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29ed375c73c01d9b3e2f44f0a0c47806f832aa9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/250bff145f74be439023e61ecea1c4cdf673a056", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/250bff145f74be439023e61ecea1c4cdf673a056", "html_url": "https://github.com/rust-lang/rust/commit/250bff145f74be439023e61ecea1c4cdf673a056", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/250bff145f74be439023e61ecea1c4cdf673a056/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14507f50df106e98685a07c76108ae6e9c1ae5ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/14507f50df106e98685a07c76108ae6e9c1ae5ac", "html_url": "https://github.com/rust-lang/rust/commit/14507f50df106e98685a07c76108ae6e9c1ae5ac"}], "stats": {"total": 27, "additions": 2, "deletions": 25}, "files": [{"sha": "4e9910e58f391dcb79aca2626d2b1c57100cc53a", "filename": "src/librustc_codegen_llvm/back/link.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/250bff145f74be439023e61ecea1c4cdf673a056/src%2Flibrustc_codegen_llvm%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/250bff145f74be439023e61ecea1c4cdf673a056/src%2Flibrustc_codegen_llvm%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Flink.rs?ref=250bff145f74be439023e61ecea1c4cdf673a056", "patch": "@@ -648,12 +648,6 @@ fn link_natively(sess: &Session,\n         for obj in &sess.target.target.options.pre_link_objects_exe_crt {\n             cmd.arg(root.join(obj));\n         }\n-\n-        for obj in &sess.target.target.options.pre_link_objects_exe_crt_sys {\n-            if flavor == LinkerFlavor::Gcc {\n-                cmd.arg(format!(\"-l:{}\", obj));\n-            }\n-        }\n     }\n \n     if sess.target.target.options.is_like_emscripten {\n@@ -678,11 +672,6 @@ fn link_natively(sess: &Session,\n         cmd.arg(root.join(obj));\n     }\n     if sess.crt_static() {\n-        for obj in &sess.target.target.options.post_link_objects_crt_sys {\n-            if flavor == LinkerFlavor::Gcc {\n-                cmd.arg(format!(\"-l:{}\", obj));\n-            }\n-        }\n         for obj in &sess.target.target.options.post_link_objects_crt {\n             cmd.arg(root.join(obj));\n         }"}, {"sha": "7a3f3c2a518bc7d065602ce42d30d3f9abc1ad1e", "filename": "src/librustc_target/spec/linux_musl_base.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/250bff145f74be439023e61ecea1c4cdf673a056/src%2Flibrustc_target%2Fspec%2Flinux_musl_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/250bff145f74be439023e61ecea1c4cdf673a056/src%2Flibrustc_target%2Fspec%2Flinux_musl_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Flinux_musl_base.rs?ref=250bff145f74be439023e61ecea1c4cdf673a056", "patch": "@@ -58,8 +58,6 @@ pub fn opts() -> TargetOptions {\n     // they'll be included from there.\n     base.pre_link_objects_exe_crt.push(\"crt1.o\".to_string());\n     base.pre_link_objects_exe_crt.push(\"crti.o\".to_string());\n-    base.pre_link_objects_exe_crt_sys.push(\"crtbegin.o\".to_string());\n-    base.post_link_objects_crt_sys.push(\"crtend.o\".to_string());\n     base.post_link_objects_crt.push(\"crtn.o\".to_string());\n \n     // These targets statically link libc by default"}, {"sha": "bc1ccb4185752cbad78e3b05355823340708fd66", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/250bff145f74be439023e61ecea1c4cdf673a056/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/250bff145f74be439023e61ecea1c4cdf673a056/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=250bff145f74be439023e61ecea1c4cdf673a056", "patch": "@@ -425,23 +425,19 @@ pub struct TargetOptions {\n     /// Linker arguments that are passed *before* any user-defined libraries.\n     pub pre_link_args: LinkArgs, // ... unconditionally\n     pub pre_link_args_crt: LinkArgs, // ... when linking with a bundled crt\n-    /// Objects to link before all others, all except *_sys found within the\n+    /// Objects to link before all others, always found within the\n     /// sysroot folder.\n     pub pre_link_objects_exe: Vec<String>, // ... when linking an executable, unconditionally\n     pub pre_link_objects_exe_crt: Vec<String>, // ... when linking an executable with a bundled crt\n-    pub pre_link_objects_exe_crt_sys: Vec<String>, // ... when linking an executable with a bundled\n-                                                   //  crt, from the system library search path\n     pub pre_link_objects_dll: Vec<String>, // ... when linking a dylib\n     /// Linker arguments that are unconditionally passed after any\n     /// user-defined but before post_link_objects.  Standard platform\n     /// libraries that should be always be linked to, usually go here.\n     pub late_link_args: LinkArgs,\n-    /// Objects to link after all others, all except *_sys found within the\n+    /// Objects to link after all others, always found within the\n     /// sysroot folder.\n     pub post_link_objects: Vec<String>, // ... unconditionally\n     pub post_link_objects_crt: Vec<String>, // ... when linking with a bundled crt\n-    pub post_link_objects_crt_sys: Vec<String>, // ... when linking with a bundled crt, from the\n-                                                //  system library search path\n     /// Linker arguments that are unconditionally passed *after* any\n     /// user-defined libraries.\n     pub post_link_args: LinkArgs,\n@@ -676,11 +672,9 @@ impl Default for TargetOptions {\n             relro_level: RelroLevel::None,\n             pre_link_objects_exe: Vec::new(),\n             pre_link_objects_exe_crt: Vec::new(),\n-            pre_link_objects_exe_crt_sys: Vec::new(),\n             pre_link_objects_dll: Vec::new(),\n             post_link_objects: Vec::new(),\n             post_link_objects_crt: Vec::new(),\n-            post_link_objects_crt_sys: Vec::new(),\n             late_link_args: LinkArgs::new(),\n             link_env: Vec::new(),\n             archive_format: \"gnu\".to_string(),\n@@ -902,12 +896,10 @@ impl Target {\n         key!(pre_link_args_crt, link_args);\n         key!(pre_link_objects_exe, list);\n         key!(pre_link_objects_exe_crt, list);\n-        key!(pre_link_objects_exe_crt_sys, list);\n         key!(pre_link_objects_dll, list);\n         key!(late_link_args, link_args);\n         key!(post_link_objects, list);\n         key!(post_link_objects_crt, list);\n-        key!(post_link_objects_crt_sys, list);\n         key!(post_link_args, link_args);\n         key!(link_env, env);\n         key!(asm_args, list);\n@@ -1112,12 +1104,10 @@ impl ToJson for Target {\n         target_option_val!(link_args - pre_link_args_crt);\n         target_option_val!(pre_link_objects_exe);\n         target_option_val!(pre_link_objects_exe_crt);\n-        target_option_val!(pre_link_objects_exe_crt_sys);\n         target_option_val!(pre_link_objects_dll);\n         target_option_val!(link_args - late_link_args);\n         target_option_val!(post_link_objects);\n         target_option_val!(post_link_objects_crt);\n-        target_option_val!(post_link_objects_crt_sys);\n         target_option_val!(link_args - post_link_args);\n         target_option_val!(env - link_env);\n         target_option_val!(asm_args);"}]}