{"sha": "dfbf61029fec121026eb7a77731cfd52e88a3f4c", "node_id": "C_kwDOAAsO6NoAKGRmYmY2MTAyOWZlYzEyMTAyNmViN2E3NzczMWNmZDUyZTg4YTNmNGM", "commit": {"author": {"name": "Ian Douglas Scott", "email": "ian@iandouglasscott.com", "date": "2023-03-20T02:00:17Z"}, "committer": {"name": "Ian Douglas Scott", "email": "ian@iandouglasscott.com", "date": "2023-03-21T14:50:34Z"}, "message": "Set LLVM `LLVM_UNREACHABLE_OPTIMIZE` to `OFF`\n\nThis option was added to LLVM in\nhttps://reviews.llvm.org/D121750?id=416339. It makes `llvm_unreachable`\nin builds without assertions compile to an `LLVM_BUILTIN_TRAP` instead\nof `LLVM_BUILTIN_UNREACHABLE` (which causes undefined behavior and is\nequivalent to `std::hint::unreachable_unchecked`).\n\nHaving compiler bugs triggering undefined behavior generally seems\nundesirable and inconsistent with Rust's goals. There is a check in\n`src/tools/tidy/src/style.rs` to reject code using `llvm_unreachable`.\nBut it is used a lot within LLVM itself.\n\nFor instance, this changes a failure I get compiling `libcore` for m68k\nfrom a `SIGSEGV` to `SIGILL`, which seems better though it still doesn't\nprovide a useful message without switching to an LLVM build with asserts.\n\nIt may be best not to do this if it noticeably degrades compiler\nperformance, but worthwhile if it doesn't do so in any significant way. I\nhaven't looked into what benchmarks there are for Rustc. That should be\nconsidered before merging.", "tree": {"sha": "7df76bf4f414045859a4bf92074fff5fcaf0ce5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7df76bf4f414045859a4bf92074fff5fcaf0ce5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dfbf61029fec121026eb7a77731cfd52e88a3f4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dfbf61029fec121026eb7a77731cfd52e88a3f4c", "html_url": "https://github.com/rust-lang/rust/commit/dfbf61029fec121026eb7a77731cfd52e88a3f4c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dfbf61029fec121026eb7a77731cfd52e88a3f4c/comments", "author": {"login": "ids1024", "id": 2263150, "node_id": "MDQ6VXNlcjIyNjMxNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2263150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ids1024", "html_url": "https://github.com/ids1024", "followers_url": "https://api.github.com/users/ids1024/followers", "following_url": "https://api.github.com/users/ids1024/following{/other_user}", "gists_url": "https://api.github.com/users/ids1024/gists{/gist_id}", "starred_url": "https://api.github.com/users/ids1024/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ids1024/subscriptions", "organizations_url": "https://api.github.com/users/ids1024/orgs", "repos_url": "https://api.github.com/users/ids1024/repos", "events_url": "https://api.github.com/users/ids1024/events{/privacy}", "received_events_url": "https://api.github.com/users/ids1024/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ids1024", "id": 2263150, "node_id": "MDQ6VXNlcjIyNjMxNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2263150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ids1024", "html_url": "https://github.com/ids1024", "followers_url": "https://api.github.com/users/ids1024/followers", "following_url": "https://api.github.com/users/ids1024/following{/other_user}", "gists_url": "https://api.github.com/users/ids1024/gists{/gist_id}", "starred_url": "https://api.github.com/users/ids1024/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ids1024/subscriptions", "organizations_url": "https://api.github.com/users/ids1024/orgs", "repos_url": "https://api.github.com/users/ids1024/repos", "events_url": "https://api.github.com/users/ids1024/events{/privacy}", "received_events_url": "https://api.github.com/users/ids1024/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da7c50c089d5db2d3ebaf227fe075bb1346bfaec", "url": "https://api.github.com/repos/rust-lang/rust/commits/da7c50c089d5db2d3ebaf227fe075bb1346bfaec", "html_url": "https://github.com/rust-lang/rust/commit/da7c50c089d5db2d3ebaf227fe075bb1346bfaec"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "36f9aaa595d0ff0632efefcf46177695bfcfc773", "filename": "src/bootstrap/download-ci-llvm-stamp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dfbf61029fec121026eb7a77731cfd52e88a3f4c/src%2Fbootstrap%2Fdownload-ci-llvm-stamp", "raw_url": "https://github.com/rust-lang/rust/raw/dfbf61029fec121026eb7a77731cfd52e88a3f4c/src%2Fbootstrap%2Fdownload-ci-llvm-stamp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdownload-ci-llvm-stamp?ref=dfbf61029fec121026eb7a77731cfd52e88a3f4c", "patch": "@@ -1,4 +1,4 @@\n Change this file to make users of the `download-ci-llvm` configuration download\n a new version of LLVM from CI, even if the LLVM submodule hasn\u2019t changed.\n \n-Last change is for: https://github.com/rust-lang/rust/pull/104748\n+Last change is for: https://github.com/rust-lang/rust/pull/109373"}, {"sha": "6f09c8307fca4cde8d9b89cb4dcb172c3a6e62ad", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dfbf61029fec121026eb7a77731cfd52e88a3f4c/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfbf61029fec121026eb7a77731cfd52e88a3f4c/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=dfbf61029fec121026eb7a77731cfd52e88a3f4c", "patch": "@@ -309,6 +309,7 @@ impl Step for Llvm {\n         cfg.out_dir(&out_dir)\n             .profile(profile)\n             .define(\"LLVM_ENABLE_ASSERTIONS\", assertions)\n+            .define(\"LLVM_UNREACHABLE_OPTIMIZE\", \"OFF\")\n             .define(\"LLVM_ENABLE_PLUGINS\", plugins)\n             .define(\"LLVM_TARGETS_TO_BUILD\", llvm_targets)\n             .define(\"LLVM_EXPERIMENTAL_TARGETS_TO_BUILD\", llvm_exp_targets)"}]}