{"sha": "4c96932da75f46fe928959fba7e11cdd96de720e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjOTY5MzJkYTc1ZjQ2ZmU5Mjg5NTlmYmE3ZTExY2RkOTZkZTcyMGU=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@commure.com", "date": "2018-07-16T21:05:42Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@commure.com", "date": "2018-07-18T17:02:15Z"}, "message": "Change label span to point at iterator instead of iter item", "tree": {"sha": "7267a378b8a9bd7cb3e918f3551e81240b84428a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7267a378b8a9bd7cb3e918f3551e81240b84428a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c96932da75f46fe928959fba7e11cdd96de720e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c96932da75f46fe928959fba7e11cdd96de720e", "html_url": "https://github.com/rust-lang/rust/commit/4c96932da75f46fe928959fba7e11cdd96de720e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c96932da75f46fe928959fba7e11cdd96de720e/comments", "author": null, "committer": null, "parents": [{"sha": "ed362c07ff95b34b091a6a719c881410e498eeb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed362c07ff95b34b091a6a719c881410e498eeb5", "html_url": "https://github.com/rust-lang/rust/commit/ed362c07ff95b34b091a6a719c881410e498eeb5"}], "stats": {"total": 32, "additions": 19, "deletions": 13}, "files": [{"sha": "93fb282546bb05de85533dc1dc3c7cec3e06ce23", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4c96932da75f46fe928959fba7e11cdd96de720e/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c96932da75f46fe928959fba7e11cdd96de720e/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=4c96932da75f46fe928959fba7e11cdd96de720e", "patch": "@@ -4011,10 +4011,12 @@ impl<'a> LoweringContext<'a> {\n                 let iter = self.str_to_ident(\"iter\");\n \n                 let next_ident = self.str_to_ident(\"__next\");\n-                let sp = self.allow_internal_unstable(CompilerDesugaringKind::ForLoop,\n-                                                      pat.span);\n+                let next_sp = self.allow_internal_unstable(\n+                    CompilerDesugaringKind::ForLoop,\n+                    head_sp,\n+                );\n                 let next_pat = self.pat_ident_binding_mode(\n-                    sp,\n+                    next_sp,\n                     next_ident,\n                     hir::BindingAnnotation::Mutable,\n                 );"}, {"sha": "04d14f40b850b7867ffd9b7e9f098955159b09b2", "filename": "src/librustc/infer/error_reporting/need_type_info.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4c96932da75f46fe928959fba7e11cdd96de720e/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c96932da75f46fe928959fba7e11cdd96de720e/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs?ref=4c96932da75f46fe928959fba7e11cdd96de720e", "patch": "@@ -13,6 +13,7 @@ use hir::intravisit::{self, Visitor, NestedVisitorMap};\n use infer::InferCtxt;\n use infer::type_variable::TypeVariableOrigin;\n use ty::{self, Ty, TyInfer, TyVar};\n+use syntax::codemap::CompilerDesugaringKind;\n use syntax_pos::Span;\n use errors::DiagnosticBuilder;\n \n@@ -132,12 +133,15 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n             labels.push((pattern.span, format!(\"consider giving this closure parameter a type\")));\n         } else if let Some(pattern) = local_visitor.found_local_pattern {\n             if let Some(simple_ident) = pattern.simple_ident() {\n-                labels.push((\n-                    pattern.span,\n-                    match pattern.span.compiler_desugaring_kind() {\n-                        None => format!(\"consider giving `{}` a type\", simple_ident),\n-                        _ => \"consider giving this a type\".to_string(),\n-                    }));\n+                match pattern.span.compiler_desugaring_kind() {\n+                    None => labels.push((pattern.span,\n+                                         format!(\"consider giving `{}` a type\", simple_ident))),\n+                    Some(CompilerDesugaringKind::ForLoop) => labels.push((\n+                        pattern.span,\n+                        \"the element type for this iterator is not specified\".to_string(),\n+                    )),\n+                    _ => {}\n+                }\n             } else {\n                 labels.push((pattern.span, format!(\"consider giving the pattern a type\")));\n             }"}, {"sha": "34217c6236c43e8db3634cb0696ec895917d7f55", "filename": "src/test/ui/issue-51116.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4c96932da75f46fe928959fba7e11cdd96de720e/src%2Ftest%2Fui%2Fissue-51116.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c96932da75f46fe928959fba7e11cdd96de720e/src%2Ftest%2Fui%2Fissue-51116.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-51116.rs?ref=4c96932da75f46fe928959fba7e11cdd96de720e", "patch": "@@ -12,13 +12,13 @@ fn main() {\n     let tiles = Default::default();\n     for row in &mut tiles {\n         for tile in row {\n-            //~^ NOTE consider giving this a type\n+            //~^ NOTE the element type for this iterator is not specified\n             *tile = 0;\n             //~^ ERROR type annotations needed\n             //~| NOTE cannot infer type for `_`\n             //~| NOTE type must be known at this point\n         }\n     }\n-    \n+\n     let tiles: [[usize; 3]; 3] = tiles;\n }"}, {"sha": "0c38688340bf333641cad9ad7842b04e291941fc", "filename": "src/test/ui/issue-51116.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4c96932da75f46fe928959fba7e11cdd96de720e/src%2Ftest%2Fui%2Fissue-51116.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c96932da75f46fe928959fba7e11cdd96de720e/src%2Ftest%2Fui%2Fissue-51116.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-51116.stderr?ref=4c96932da75f46fe928959fba7e11cdd96de720e", "patch": "@@ -2,8 +2,8 @@ error[E0282]: type annotations needed\n   --> $DIR/issue-51116.rs:16:13\n    |\n LL |         for tile in row {\n-   |             ---- consider giving this a type\n-LL |             //~^ NOTE consider giving this a type\n+   |                     --- the element type for this iterator is not specified\n+LL |             //~^ NOTE the element type for this iterator is not specified\n LL |             *tile = 0;\n    |             ^^^^^ cannot infer type for `_`\n    |"}]}