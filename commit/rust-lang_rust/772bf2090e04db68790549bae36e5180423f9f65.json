{"sha": "772bf2090e04db68790549bae36e5180423f9f65", "node_id": "C_kwDOAAsO6NoAKDc3MmJmMjA5MGUwNGRiNjg3OTA1NDliYWUzNmU1MTgwNDIzZjlmNjU", "commit": {"author": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2021-10-21T00:23:21Z"}, "committer": {"name": "Jubilee", "email": "46493976+workingjubilee@users.noreply.github.com", "date": "2021-10-22T07:10:44Z"}, "message": "Hide select impl in sealed trait", "tree": {"sha": "75e009265c5bb8ac3bc97da40f62ea0b0652c9de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75e009265c5bb8ac3bc97da40f62ea0b0652c9de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/772bf2090e04db68790549bae36e5180423f9f65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/772bf2090e04db68790549bae36e5180423f9f65", "html_url": "https://github.com/rust-lang/rust/commit/772bf2090e04db68790549bae36e5180423f9f65", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/772bf2090e04db68790549bae36e5180423f9f65/comments", "author": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c2d295a76fcbc6d4c438c5f324903265ee77c94", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c2d295a76fcbc6d4c438c5f324903265ee77c94", "html_url": "https://github.com/rust-lang/rust/commit/7c2d295a76fcbc6d4c438c5f324903265ee77c94"}], "stats": {"total": 30, "additions": 14, "deletions": 16}, "files": [{"sha": "d976231a03a84afd7e87208eb201f2a8a3fdac49", "filename": "crates/core_simd/src/select.rs", "status": "modified", "additions": 14, "deletions": 16, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/772bf2090e04db68790549bae36e5180423f9f65/crates%2Fcore_simd%2Fsrc%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/772bf2090e04db68790549bae36e5180423f9f65/crates%2Fcore_simd%2Fsrc%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fselect.rs?ref=772bf2090e04db68790549bae36e5180423f9f65", "patch": "@@ -2,51 +2,49 @@ use crate::simd::intrinsics;\n use crate::simd::{LaneCount, Mask, MaskElement, Simd, SimdElement, SupportedLaneCount};\n \n mod sealed {\n-    pub trait Sealed {}\n+    pub trait Sealed<Mask> {\n+        fn select(mask: Mask, true_values: Self, false_values: Self) -> Self;\n+    }\n }\n use sealed::Sealed;\n \n /// Supporting trait for vector `select` function\n-pub trait Select<Mask>: Sealed {\n-    #[doc(hidden)]\n-    fn select(mask: Mask, true_values: Self, false_values: Self) -> Self;\n-}\n+pub trait Select<Mask>: Sealed<Mask> {}\n \n-impl<T, const LANES: usize> Sealed for Simd<T, LANES>\n+impl<T, const LANES: usize> Sealed<Mask<T::Mask, LANES>> for Simd<T, LANES>\n where\n     T: SimdElement,\n     LaneCount<LANES>: SupportedLaneCount,\n {\n+    #[inline]\n+    fn select(mask: Mask<T::Mask, LANES>, true_values: Self, false_values: Self) -> Self {\n+        unsafe { intrinsics::simd_select(mask.to_int(), true_values, false_values) }\n+    }\n }\n \n impl<T, const LANES: usize> Select<Mask<T::Mask, LANES>> for Simd<T, LANES>\n where\n     T: SimdElement,\n     LaneCount<LANES>: SupportedLaneCount,\n {\n-    #[inline]\n-    fn select(mask: Mask<T::Mask, LANES>, true_values: Self, false_values: Self) -> Self {\n-        unsafe { intrinsics::simd_select(mask.to_int(), true_values, false_values) }\n-    }\n }\n \n-impl<T, const LANES: usize> Sealed for Mask<T, LANES>\n+impl<T, const LANES: usize> Sealed<Self> for Mask<T, LANES>\n where\n     T: MaskElement,\n     LaneCount<LANES>: SupportedLaneCount,\n {\n+    #[inline]\n+    fn select(mask: Self, true_values: Self, false_values: Self) -> Self {\n+        mask & true_values | !mask & false_values\n+    }\n }\n \n impl<T, const LANES: usize> Select<Self> for Mask<T, LANES>\n where\n     T: MaskElement,\n     LaneCount<LANES>: SupportedLaneCount,\n {\n-    #[doc(hidden)]\n-    #[inline]\n-    fn select(mask: Self, true_values: Self, false_values: Self) -> Self {\n-        mask & true_values | !mask & false_values\n-    }\n }\n \n impl<T, const LANES: usize> Mask<T, LANES>"}]}