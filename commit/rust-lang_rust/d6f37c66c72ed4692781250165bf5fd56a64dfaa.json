{"sha": "d6f37c66c72ed4692781250165bf5fd56a64dfaa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2ZjM3YzY2YzcyZWQ0NjkyNzgxMjUwMTY1YmY1ZmQ1NmE2NGRmYWE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-08T11:40:20Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-21T18:20:41Z"}, "message": "parse_ty_bare_fn: improve docs", "tree": {"sha": "44cb611189df15e33247a49dbe80a8f21cdc0e2d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44cb611189df15e33247a49dbe80a8f21cdc0e2d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6f37c66c72ed4692781250165bf5fd56a64dfaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6f37c66c72ed4692781250165bf5fd56a64dfaa", "html_url": "https://github.com/rust-lang/rust/commit/d6f37c66c72ed4692781250165bf5fd56a64dfaa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6f37c66c72ed4692781250165bf5fd56a64dfaa/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0105600d191996ae60bec2a2ecec2485b02722a", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0105600d191996ae60bec2a2ecec2485b02722a", "html_url": "https://github.com/rust-lang/rust/commit/d0105600d191996ae60bec2a2ecec2485b02722a"}], "stats": {"total": 21, "additions": 8, "deletions": 13}, "files": [{"sha": "15e0d54bb0171de54d953f93baa01a37418d4878", "filename": "src/librustc_parse/parser/ty.rs", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d6f37c66c72ed4692781250165bf5fd56a64dfaa/src%2Flibrustc_parse%2Fparser%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6f37c66c72ed4692781250165bf5fd56a64dfaa/src%2Flibrustc_parse%2Fparser%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fty.rs?ref=d6f37c66c72ed4692781250165bf5fd56a64dfaa", "patch": "@@ -250,20 +250,15 @@ impl<'a> Parser<'a> {\n             self.check_keyword(kw::Extern)\n     }\n \n-    /// Parses a `TyKind::BareFn` type.\n+    /// Parses a function pointer type (`TyKind::BareFn`).\n+    /// ```\n+    /// [unsafe] [extern \"ABI\"] fn (S) -> T\n+    ///  ^~~~~^          ^~~~^     ^~^    ^\n+    ///    |               |        |     |\n+    ///    |               |        |   Return type\n+    /// Function Style    ABI  Parameter types\n+    /// ```\n     fn parse_ty_bare_fn(&mut self, generic_params: Vec<GenericParam>) -> PResult<'a, TyKind> {\n-        /*\n-\n-        [unsafe] [extern \"ABI\"] fn (S) -> T\n-         ^~~~^           ^~~~^     ^~^    ^\n-           |               |        |     |\n-           |               |        |   Return type\n-           |               |      Argument types\n-           |               |\n-           |              ABI\n-        Function Style\n-        */\n-\n         let unsafety = self.parse_unsafety();\n         let ext = self.parse_extern()?;\n         self.expect_keyword(kw::Fn)?;"}]}