{"sha": "afb7472bcca54bffcab6841345cbf58e9f5dfa33", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmYjc0NzJiY2NhNTRiZmZjYWI2ODQxMzQ1Y2JmNThlOWY1ZGZhMzM=", "commit": {"author": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2021-09-18T07:34:06Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2021-09-20T14:16:19Z"}, "message": "Add a doc comment to infer_projection", "tree": {"sha": "ac804cec84385e02dbd26333a064af326e1df020", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac804cec84385e02dbd26333a064af326e1df020"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/afb7472bcca54bffcab6841345cbf58e9f5dfa33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/afb7472bcca54bffcab6841345cbf58e9f5dfa33", "html_url": "https://github.com/rust-lang/rust/commit/afb7472bcca54bffcab6841345cbf58e9f5dfa33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/afb7472bcca54bffcab6841345cbf58e9f5dfa33/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b952ada0ae2c957bdb8503366da4717224d3efc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/b952ada0ae2c957bdb8503366da4717224d3efc3", "html_url": "https://github.com/rust-lang/rust/commit/b952ada0ae2c957bdb8503366da4717224d3efc3"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "9b53ab72b00dea078ce8b58767994a7622f77ff2", "filename": "compiler/rustc_infer/src/infer/projection.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/afb7472bcca54bffcab6841345cbf58e9f5dfa33/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fprojection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afb7472bcca54bffcab6841345cbf58e9f5dfa33/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fprojection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fprojection.rs?ref=afb7472bcca54bffcab6841345cbf58e9f5dfa33", "patch": "@@ -7,6 +7,12 @@ use super::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use super::InferCtxt;\n \n impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n+    /// Instead of normalizing an associated type projection,\n+    /// this function generates an inference variable and registers\n+    /// an obligation that this inference variable must be the result\n+    /// of the given projection. This allows us to proceed with projections\n+    /// while they cannot be resolved yet due to missing information or\n+    /// simply due to the lack of access to the trait resolution machinery.\n     pub fn infer_projection(\n         &self,\n         param_env: ty::ParamEnv<'tcx>,"}]}