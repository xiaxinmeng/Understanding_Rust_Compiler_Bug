{"sha": "5f304a5d7908d9dd55dda3baadd3cf564d907369", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmMzA0YTVkNzkwOGQ5ZGQ1NWRkYTNiYWFkZDNjZjU2NGQ5MDczNjk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-01T15:36:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-01T15:36:23Z"}, "message": "Auto merge of #83857 - ABouttefeux:master, r=jyn514\n\nadded --no-run option for rustdoc\n\nresolve #59053\n\nadd `--no-run` option for `rustdoc` for compiling doc test but not running them.\nIntended for use with `--persist-doctests`.", "tree": {"sha": "12ab8af58bb825bf6ab44246a1d1ab063a449dcc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12ab8af58bb825bf6ab44246a1d1ab063a449dcc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f304a5d7908d9dd55dda3baadd3cf564d907369", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f304a5d7908d9dd55dda3baadd3cf564d907369", "html_url": "https://github.com/rust-lang/rust/commit/5f304a5d7908d9dd55dda3baadd3cf564d907369", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f304a5d7908d9dd55dda3baadd3cf564d907369/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "603a42ec5458c547b51173cfa48c23ad37b03c3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/603a42ec5458c547b51173cfa48c23ad37b03c3f", "html_url": "https://github.com/rust-lang/rust/commit/603a42ec5458c547b51173cfa48c23ad37b03c3f"}, {"sha": "03c710bf8923057ae2050f4300527ff922a2f081", "url": "https://api.github.com/repos/rust-lang/rust/commits/03c710bf8923057ae2050f4300527ff922a2f081", "html_url": "https://github.com/rust-lang/rust/commit/03c710bf8923057ae2050f4300527ff922a2f081"}], "stats": {"total": 72, "additions": 71, "deletions": 1}, "files": [{"sha": "48eb14ed291470184ab90a83521860f15bd5568e", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5f304a5d7908d9dd55dda3baadd3cf564d907369/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f304a5d7908d9dd55dda3baadd3cf564d907369/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=5f304a5d7908d9dd55dda3baadd3cf564d907369", "patch": "@@ -120,6 +120,8 @@ crate struct Options {\n     /// For example, using ignore-foo to ignore running the doctest on any target that\n     /// contains \"foo\" as a substring\n     crate enable_per_target_ignores: bool,\n+    /// Do not run doctests, compile them if should_test is active.\n+    crate no_run: bool,\n \n     /// The path to a rustc-like binary to build tests with. If not set, we\n     /// default to loading from `$sysroot/bin/rustc`.\n@@ -197,6 +199,7 @@ impl fmt::Debug for Options {\n             .field(\"runtool_args\", &self.runtool_args)\n             .field(\"enable-per-target-ignores\", &self.enable_per_target_ignores)\n             .field(\"run_check\", &self.run_check)\n+            .field(\"no_run\", &self.no_run)\n             .finish()\n     }\n }\n@@ -466,6 +469,12 @@ impl Options {\n             test_args.iter().flat_map(|s| s.split_whitespace()).map(|s| s.to_string()).collect();\n \n         let should_test = matches.opt_present(\"test\");\n+        let no_run = matches.opt_present(\"no-run\");\n+\n+        if !should_test && no_run {\n+            diag.err(\"the `--test` flag must be passed to enable `--no-run`\");\n+            return Err(1);\n+        }\n \n         let output =\n             matches.opt_str(\"o\").map(|s| PathBuf::from(&s)).unwrap_or_else(|| PathBuf::from(\"doc\"));\n@@ -666,6 +675,7 @@ impl Options {\n             enable_per_target_ignores,\n             test_builder,\n             run_check,\n+            no_run,\n             render_options: RenderOptions {\n                 output,\n                 external_html,"}, {"sha": "c0157121e1923f8943d000cac3f8a78d5820f99b", "filename": "src/librustdoc/doctest.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5f304a5d7908d9dd55dda3baadd3cf564d907369/src%2Flibrustdoc%2Fdoctest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f304a5d7908d9dd55dda3baadd3cf564d907369/src%2Flibrustdoc%2Fdoctest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctest.rs?ref=5f304a5d7908d9dd55dda3baadd3cf564d907369", "patch": "@@ -940,13 +940,14 @@ impl Tester for Collector {\n                 let report_unused_externs = |uext| {\n                     unused_externs.lock().unwrap().push(uext);\n                 };\n+                let no_run = config.no_run || options.no_run;\n                 let res = run_test(\n                     &test,\n                     &cratename,\n                     line,\n                     options,\n                     config.should_panic,\n-                    config.no_run,\n+                    no_run,\n                     config.test_harness,\n                     runtool,\n                     runtool_args,"}, {"sha": "2a25b595625c9fbcc211c35c482120222f06a422", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5f304a5d7908d9dd55dda3baadd3cf564d907369/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f304a5d7908d9dd55dda3baadd3cf564d907369/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=5f304a5d7908d9dd55dda3baadd3cf564d907369", "patch": "@@ -595,6 +595,7 @@ fn opts() -> Vec<RustcOptGroup> {\n                 \"[unversioned-shared-resources,toolchain-shared-resources,invocation-specific]\",\n             )\n         }),\n+        unstable(\"no-run\", |o| o.optflag(\"\", \"no-run\", \"Compile doctests without running them\")),\n     ]\n }\n "}, {"sha": "4ead621482bfdd72c117961aa5d2d8ff552d0ecc", "filename": "src/test/rustdoc-ui/no-run-flag-error.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5f304a5d7908d9dd55dda3baadd3cf564d907369/src%2Ftest%2Frustdoc-ui%2Fno-run-flag-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f304a5d7908d9dd55dda3baadd3cf564d907369/src%2Ftest%2Frustdoc-ui%2Fno-run-flag-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fno-run-flag-error.rs?ref=5f304a5d7908d9dd55dda3baadd3cf564d907369", "patch": "@@ -0,0 +1,6 @@\n+// test the behavior of the --no-run flag without the --test flag\n+\n+// compile-flags:-Z unstable-options --no-run --test-args=--test-threads=1\n+// error-pattern: the `--test` flag must be passed\n+\n+pub fn f() {}"}, {"sha": "d032646c365c74c3dcf254a5ead4d1749bf48fa1", "filename": "src/test/rustdoc-ui/no-run-flag-error.stderr", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5f304a5d7908d9dd55dda3baadd3cf564d907369/src%2Ftest%2Frustdoc-ui%2Fno-run-flag-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5f304a5d7908d9dd55dda3baadd3cf564d907369/src%2Ftest%2Frustdoc-ui%2Fno-run-flag-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fno-run-flag-error.stderr?ref=5f304a5d7908d9dd55dda3baadd3cf564d907369", "patch": "@@ -0,0 +1,2 @@\n+error: the `--test` flag must be passed to enable `--no-run`\n+"}, {"sha": "da1672c4a6e78c2aefba064c3cfa85613b495bd5", "filename": "src/test/rustdoc-ui/no-run-flag.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/5f304a5d7908d9dd55dda3baadd3cf564d907369/src%2Ftest%2Frustdoc-ui%2Fno-run-flag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f304a5d7908d9dd55dda3baadd3cf564d907369/src%2Ftest%2Frustdoc-ui%2Fno-run-flag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fno-run-flag.rs?ref=5f304a5d7908d9dd55dda3baadd3cf564d907369", "patch": "@@ -0,0 +1,38 @@\n+// test the behavior of the --no-run flag\n+\n+// check-pass\n+// compile-flags:-Z unstable-options --test --no-run --test-args=--test-threads=1\n+// normalize-stdout-test: \"src/test/rustdoc-ui\" -> \"$$DIR\"\n+// normalize-stdout-test \"finished in \\d+\\.\\d+s\" -> \"finished in $$TIME\"\n+\n+/// ```\n+/// let a = true;\n+/// ```\n+/// ```should_panic\n+/// panic!()\n+/// ```\n+/// ```ignore (incomplete-code)\n+/// fn foo() {\n+/// ```\n+/// ```no_run\n+/// loop {\n+///     println!(\"Hello, world\");\n+/// }\n+/// ```\n+/// fails to compile\n+/// ```compile_fail\n+/// let x = 5;\n+/// x += 2; // shouldn't compile!\n+/// ```\n+/// Ok the test does not run\n+/// ```\n+/// panic!()\n+/// ```\n+/// Ok the test does not run\n+/// ```should_panic\n+/// loop {\n+///     println!(\"Hello, world\");\n+/// panic!()\n+/// }\n+/// ```\n+pub fn f() {}"}, {"sha": "d92f5da833567fb6f611a8ab9788449ad1024125", "filename": "src/test/rustdoc-ui/no-run-flag.stdout", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5f304a5d7908d9dd55dda3baadd3cf564d907369/src%2Ftest%2Frustdoc-ui%2Fno-run-flag.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/5f304a5d7908d9dd55dda3baadd3cf564d907369/src%2Ftest%2Frustdoc-ui%2Fno-run-flag.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fno-run-flag.stdout?ref=5f304a5d7908d9dd55dda3baadd3cf564d907369", "patch": "@@ -0,0 +1,12 @@\n+\n+running 7 tests\n+test $DIR/no-run-flag.rs - f (line 11) ... ok\n+test $DIR/no-run-flag.rs - f (line 14) ... ignored\n+test $DIR/no-run-flag.rs - f (line 17) ... ok\n+test $DIR/no-run-flag.rs - f (line 23) ... ok\n+test $DIR/no-run-flag.rs - f (line 28) ... ok\n+test $DIR/no-run-flag.rs - f (line 32) ... ok\n+test $DIR/no-run-flag.rs - f (line 8) ... ok\n+\n+test result: ok. 6 passed; 0 failed; 1 ignored; 0 measured; 0 filtered out; finished in $TIME\n+"}]}