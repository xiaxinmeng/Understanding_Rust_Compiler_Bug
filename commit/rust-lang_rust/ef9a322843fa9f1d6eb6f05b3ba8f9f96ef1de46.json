{"sha": "ef9a322843fa9f1d6eb6f05b3ba8f9f96ef1de46", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmOWEzMjI4NDNmYTlmMWQ2ZWI2ZjA1YjNiYThmOWY5NmVmMWRlNDY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-07-01T13:37:05Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-07-01T13:37:05Z"}, "message": "Auto merge of #51883 - estebank:placement-suggestion, r=varkor\n\nSuggest correct comparison against negative literal\n\nWhen parsing as emplacement syntax (`x<-1`), suggest the correct syntax\nfor comparison against a negative value (`x< -1`).\n\nFix #45651.", "tree": {"sha": "bb1b6b5076cf6ce6d0d94b1a77e2734a1c43360d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb1b6b5076cf6ce6d0d94b1a77e2734a1c43360d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef9a322843fa9f1d6eb6f05b3ba8f9f96ef1de46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef9a322843fa9f1d6eb6f05b3ba8f9f96ef1de46", "html_url": "https://github.com/rust-lang/rust/commit/ef9a322843fa9f1d6eb6f05b3ba8f9f96ef1de46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef9a322843fa9f1d6eb6f05b3ba8f9f96ef1de46/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e100ce4f924138725d092ead2f3f22fd945ae8ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/e100ce4f924138725d092ead2f3f22fd945ae8ac", "html_url": "https://github.com/rust-lang/rust/commit/e100ce4f924138725d092ead2f3f22fd945ae8ac"}, {"sha": "23d59d00be7c12a4b8fef68ef663a6d97290c415", "url": "https://api.github.com/repos/rust-lang/rust/commits/23d59d00be7c12a4b8fef68ef663a6d97290c415", "html_url": "https://github.com/rust-lang/rust/commit/23d59d00be7c12a4b8fef68ef663a6d97290c415"}], "stats": {"total": 68, "additions": 62, "deletions": 6}, "files": [{"sha": "ca361be258a100de736b1df26c448db4f077e8a5", "filename": "src/librustc_passes/ast_validation.rs", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/ef9a322843fa9f1d6eb6f05b3ba8f9f96ef1de46/src%2Flibrustc_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef9a322843fa9f1d6eb6f05b3ba8f9f96ef1de46/src%2Flibrustc_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fast_validation.rs?ref=ef9a322843fa9f1d6eb6f05b3ba8f9f96ef1de46", "patch": "@@ -172,12 +172,27 @@ impl<'a> Visitor<'a> for AstValidator<'a> {\n             ExprKind::InlineAsm(..) if !self.session.target.target.options.allow_asm => {\n                 span_err!(self.session, expr.span, E0472, \"asm! is unsupported on this target\");\n             }\n-            ExprKind::ObsoleteInPlace(..) => {\n-                self.err_handler()\n-                    .struct_span_err(expr.span, \"emplacement syntax is obsolete (for now, anyway)\")\n-                    .note(\"for more information, see \\\n-                           <https://github.com/rust-lang/rust/issues/27779#issuecomment-378416911>\")\n-                    .emit();\n+            ExprKind::ObsoleteInPlace(ref place, ref val) => {\n+                let mut err = self.err_handler().struct_span_err(\n+                    expr.span,\n+                    \"emplacement syntax is obsolete (for now, anyway)\",\n+                );\n+                err.note(\n+                    \"for more information, see \\\n+                     <https://github.com/rust-lang/rust/issues/27779#issuecomment-378416911>\"\n+                );\n+                match val.node {\n+                    ExprKind::Lit(ref v) if v.node.is_numeric() => {\n+                        err.span_suggestion(\n+                            place.span.between(val.span),\n+                            \"if you meant to write a comparison against a negative value, add a \\\n+                             space in between `<` and `-`\",\n+                            \"< -\".to_string(),\n+                        );\n+                    }\n+                    _ => {}\n+                }\n+                err.emit();\n             }\n             _ => {}\n         }"}, {"sha": "71ff9e8058ef3fb1ab267fa04251a9a7a7a85153", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ef9a322843fa9f1d6eb6f05b3ba8f9f96ef1de46/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef9a322843fa9f1d6eb6f05b3ba8f9f96ef1de46/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=ef9a322843fa9f1d6eb6f05b3ba8f9f96ef1de46", "patch": "@@ -1298,6 +1298,16 @@ impl LitKind {\n         }\n     }\n \n+    /// Returns true if this is a numeric literal.\n+    pub fn is_numeric(&self) -> bool {\n+        match *self {\n+            LitKind::Int(..) |\n+            LitKind::Float(..) |\n+            LitKind::FloatUnsuffixed(..) => true,\n+            _ => false,\n+        }\n+    }\n+\n     /// Returns true if this literal has no suffix. Note: this will return true\n     /// for literals with prefixes such as raw strings and byte strings.\n     pub fn is_unsuffixed(&self) -> bool {"}, {"sha": "39252597a23e8803926a413cb86fc9de0cded96d", "filename": "src/test/ui/suggestions/placement-syntax.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ef9a322843fa9f1d6eb6f05b3ba8f9f96ef1de46/src%2Ftest%2Fui%2Fsuggestions%2Fplacement-syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef9a322843fa9f1d6eb6f05b3ba8f9f96ef1de46/src%2Ftest%2Fui%2Fsuggestions%2Fplacement-syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fplacement-syntax.rs?ref=ef9a322843fa9f1d6eb6f05b3ba8f9f96ef1de46", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let x = -5;\n+    if x<-1 {\n+    //~^ ERROR emplacement syntax is obsolete\n+        println!(\"ok\");\n+    }\n+}"}, {"sha": "933ba96519c445f6b21b8723cc36e6bc211468dd", "filename": "src/test/ui/suggestions/placement-syntax.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ef9a322843fa9f1d6eb6f05b3ba8f9f96ef1de46/src%2Ftest%2Fui%2Fsuggestions%2Fplacement-syntax.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef9a322843fa9f1d6eb6f05b3ba8f9f96ef1de46/src%2Ftest%2Fui%2Fsuggestions%2Fplacement-syntax.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fplacement-syntax.stderr?ref=ef9a322843fa9f1d6eb6f05b3ba8f9f96ef1de46", "patch": "@@ -0,0 +1,14 @@\n+error: emplacement syntax is obsolete (for now, anyway)\n+  --> $DIR/placement-syntax.rs:13:8\n+   |\n+LL |     if x<-1 {\n+   |        ^^^^\n+   |\n+   = note: for more information, see <https://github.com/rust-lang/rust/issues/27779#issuecomment-378416911>\n+help: if you meant to write a comparison against a negative value, add a space in between `<` and `-`\n+   |\n+LL |     if x< -1 {\n+   |         ^^^\n+\n+error: aborting due to previous error\n+"}]}