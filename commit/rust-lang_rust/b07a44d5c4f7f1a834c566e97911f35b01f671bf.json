{"sha": "b07a44d5c4f7f1a834c566e97911f35b01f671bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwN2E0NGQ1YzRmN2YxYTgzNGM1NjZlOTc5MTFmMzViMDFmNjcxYmY=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-05-08T19:59:17Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-05-08T19:59:17Z"}, "message": "Document `global_alloc`", "tree": {"sha": "726812eba94651f7f9028838a21b40c07f68c2de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/726812eba94651f7f9028838a21b40c07f68c2de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b07a44d5c4f7f1a834c566e97911f35b01f671bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b07a44d5c4f7f1a834c566e97911f35b01f671bf", "html_url": "https://github.com/rust-lang/rust/commit/b07a44d5c4f7f1a834c566e97911f35b01f671bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b07a44d5c4f7f1a834c566e97911f35b01f671bf/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43fcd7d55ed228a2fef7441e1df201b1bd53e5a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/43fcd7d55ed228a2fef7441e1df201b1bd53e5a0", "html_url": "https://github.com/rust-lang/rust/commit/43fcd7d55ed228a2fef7441e1df201b1bd53e5a0"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "4b13c6d1a37e061ae0cbf209e9beecc4df511257", "filename": "src/librustc_middle/mir/interpret/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b07a44d5c4f7f1a834c566e97911f35b01f671bf/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b07a44d5c4f7f1a834c566e97911f35b01f671bf/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fmod.rs?ref=b07a44d5c4f7f1a834c566e97911f35b01f671bf", "patch": "@@ -515,6 +515,10 @@ impl<'tcx> TyCtxt<'tcx> {\n \n     #[inline]\n     #[track_caller]\n+    /// Panics in case the `AllocId` is dangling. Since that is impossible for `AllocId`s in\n+    /// constants (as all constants must pass interning and validation that check for dangling\n+    /// ids), this function is frequently used throughout rustc, but should not be used within\n+    /// the miri engine.\n     pub fn global_alloc(&self, id: AllocId) -> GlobalAlloc<'tcx> {\n         match self.get_global_alloc(id) {\n             Some(alloc) => alloc,"}]}