{"sha": "18db9a2954450cdc5ace4c91a147804824aa153b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4ZGI5YTI5NTQ0NTBjZGM1YWNlNGM5MWExNDc4MDQ4MjRhYTE1M2I=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-04-16T23:10:21Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-04-18T21:50:29Z"}, "message": "rustc: One less copy", "tree": {"sha": "205b0d3859378bc68fc842f35fad09b970195acd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/205b0d3859378bc68fc842f35fad09b970195acd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18db9a2954450cdc5ace4c91a147804824aa153b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18db9a2954450cdc5ace4c91a147804824aa153b", "html_url": "https://github.com/rust-lang/rust/commit/18db9a2954450cdc5ace4c91a147804824aa153b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18db9a2954450cdc5ace4c91a147804824aa153b/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a864852774e924f1f9bb68da34adca736211545", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a864852774e924f1f9bb68da34adca736211545", "html_url": "https://github.com/rust-lang/rust/commit/2a864852774e924f1f9bb68da34adca736211545"}], "stats": {"total": 27, "additions": 13, "deletions": 14}, "files": [{"sha": "8794dae117811351fae53a3b24fa453b7e936eea", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/18db9a2954450cdc5ace4c91a147804824aa153b/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18db9a2954450cdc5ace4c91a147804824aa153b/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=18db9a2954450cdc5ace4c91a147804824aa153b", "patch": "@@ -153,9 +153,9 @@ pub mod jit {\n                     code: entry,\n                     env: ptr::null()\n                 };\n-                let func: &fn(++argv: ~[~str]) = cast::transmute(closure);\n+                let func: &fn(++argv: ~[@~str]) = cast::transmute(closure);\n \n-                func(~[/*bad*/copy sess.opts.binary]);\n+                func(~[sess.opts.binary]);\n             }\n         }\n     }"}, {"sha": "44c092d869779b7e192868a9f4b703f17713274a", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/18db9a2954450cdc5ace4c91a147804824aa153b/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18db9a2954450cdc5ace4c91a147804824aa153b/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=18db9a2954450cdc5ace4c91a147804824aa153b", "patch": "@@ -62,7 +62,7 @@ pub fn source_name(input: input) -> ~str {\n     }\n }\n \n-pub fn default_configuration(sess: Session, +argv0: ~str, input: input) ->\n+pub fn default_configuration(sess: Session, argv0: @~str, input: input) ->\n    ast::crate_cfg {\n     let libc = match sess.targ_cfg.os {\n       session::os_win32 => ~\"msvcrt.dll\",\n@@ -101,7 +101,7 @@ pub fn default_configuration(sess: Session, +argv0: ~str, input: input) ->\n          mk(@~\"target_word_size\", @wordsz),\n          mk(@~\"target_libc\", @libc),\n          // Build bindings.\n-         mk(@~\"build_compiler\", @argv0),\n+         mk(@~\"build_compiler\", argv0),\n          mk(@~\"build_input\", @source_name(input))];\n }\n \n@@ -114,7 +114,7 @@ pub fn append_configuration(+cfg: ast::crate_cfg, +name: ~str)\n     }\n }\n \n-pub fn build_configuration(sess: Session, +argv0: ~str, input: input) ->\n+pub fn build_configuration(sess: Session, argv0: @~str, input: input) ->\n    ast::crate_cfg {\n     // Combine the configuration requested by the session (command line) with\n     // some default and generated configuration items\n@@ -523,7 +523,7 @@ pub fn host_triple() -> ~str {\n         };\n }\n \n-pub fn build_session_options(+binary: ~str,\n+pub fn build_session_options(binary: @~str,\n                              matches: &getopts::Matches,\n                              demitter: diagnostic::Emitter)\n                           -> @session::options {"}, {"sha": "6171ebd8610e456a131b0c38f6e7cffd09549218", "filename": "src/librustc/driver/session.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/18db9a2954450cdc5ace4c91a147804824aa153b/src%2Flibrustc%2Fdriver%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18db9a2954450cdc5ace4c91a147804824aa153b/src%2Flibrustc%2Fdriver%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fsession.rs?ref=18db9a2954450cdc5ace4c91a147804824aa153b", "patch": "@@ -131,7 +131,7 @@ pub struct options {\n     // will be added to the crate AST node.  This should not be used for\n     // anything except building the full crate config prior to parsing.\n     cfg: ast::crate_cfg,\n-    binary: ~str,\n+    binary: @~str,\n     test: bool,\n     parse_only: bool,\n     no_trans: bool,\n@@ -303,7 +303,7 @@ pub fn basic_options() -> @options {\n         maybe_sysroot: None,\n         target_triple: host_triple(),\n         cfg: ~[],\n-        binary: ~\"rustc\",\n+        binary: @~\"rustc\",\n         test: false,\n         parse_only: false,\n         no_trans: false,"}, {"sha": "67f71682d32f4360d33ed07191a34fea83e99336", "filename": "src/librustc/rustc.rc", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/18db9a2954450cdc5ace4c91a147804824aa153b/src%2Flibrustc%2Frustc.rc", "raw_url": "https://github.com/rust-lang/rust/raw/18db9a2954450cdc5ace4c91a147804824aa153b/src%2Flibrustc%2Frustc.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Frustc.rc?ref=18db9a2954450cdc5ace4c91a147804824aa153b", "patch": "@@ -206,9 +206,9 @@ pub fn run_compiler(args: &~[~str], demitter: diagnostic::Emitter) {\n     ::core::logging::console_off();\n \n     let mut args = /*bad*/copy *args;\n-    let binary = args.shift();\n+    let binary = @args.shift();\n \n-    if args.is_empty() { usage(binary); return; }\n+    if args.is_empty() { usage(*binary); return; }\n \n     let matches =\n         &match getopts::groups::getopts(args, optgroups()) {\n@@ -219,7 +219,7 @@ pub fn run_compiler(args: &~[~str], demitter: diagnostic::Emitter) {\n         };\n \n     if opt_present(matches, ~\"h\") || opt_present(matches, ~\"help\") {\n-        usage(binary);\n+        usage(*binary);\n         return;\n     }\n \n@@ -236,7 +236,7 @@ pub fn run_compiler(args: &~[~str], demitter: diagnostic::Emitter) {\n     }\n \n     if opt_present(matches, ~\"v\") || opt_present(matches, ~\"version\") {\n-        version(binary);\n+        version(*binary);\n         return;\n     }\n     let input = match vec::len(matches.free) {\n@@ -253,8 +253,7 @@ pub fn run_compiler(args: &~[~str], demitter: diagnostic::Emitter) {\n       _ => early_error(demitter, ~\"multiple input filenames provided\")\n     };\n \n-    // XXX: Bad copy.\n-    let sopts = build_session_options(copy binary, matches, demitter);\n+    let sopts = build_session_options(binary, matches, demitter);\n     let sess = build_session(sopts, demitter);\n     let odir = getopts::opt_maybe_str(matches, ~\"out-dir\");\n     let odir = odir.map(|o| Path(*o));"}]}