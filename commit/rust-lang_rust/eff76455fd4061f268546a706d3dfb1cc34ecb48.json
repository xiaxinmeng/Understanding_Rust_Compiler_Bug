{"sha": "eff76455fd4061f268546a706d3dfb1cc34ecb48", "node_id": "C_kwDOAAsO6NoAKGVmZjc2NDU1ZmQ0MDYxZjI2ODU0NmE3MDZkM2RmYjFjYzM0ZWNiNDg", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-12-06T00:13:32Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-12-06T04:30:17Z"}, "message": "Avoid ICE by accounting for missing type\n\nFix #105330", "tree": {"sha": "c798d9fbb4bd61f8e680cd2cf11aa8036541721e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c798d9fbb4bd61f8e680cd2cf11aa8036541721e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eff76455fd4061f268546a706d3dfb1cc34ecb48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eff76455fd4061f268546a706d3dfb1cc34ecb48", "html_url": "https://github.com/rust-lang/rust/commit/eff76455fd4061f268546a706d3dfb1cc34ecb48", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eff76455fd4061f268546a706d3dfb1cc34ecb48/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "203c8765ea33c65d888febe0e8219c4bb11b0d89", "url": "https://api.github.com/repos/rust-lang/rust/commits/203c8765ea33c65d888febe0e8219c4bb11b0d89", "html_url": "https://github.com/rust-lang/rust/commit/203c8765ea33c65d888febe0e8219c4bb11b0d89"}], "stats": {"total": 132, "additions": 131, "deletions": 1}, "files": [{"sha": "fcf0a94462e1087577d8c6ae2ac7e87c631cd353", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eff76455fd4061f268546a706d3dfb1cc34ecb48/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eff76455fd4061f268546a706d3dfb1cc34ecb48/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=eff76455fd4061f268546a706d3dfb1cc34ecb48", "patch": "@@ -1607,7 +1607,7 @@ impl<'tcx> InferCtxtPrivExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n                         | ObligationCauseCode::ObjectCastObligation(..)\n                         | ObligationCauseCode::OpaqueType\n                 );\n-                let expected_ty = data.term.ty().unwrap();\n+                let expected_ty = data.term.ty().unwrap_or_else(|| self.tcx.ty_error());\n \n                 // constrain inference variables a bit more to nested obligations from normalize so\n                 // we can have more helpful errors."}, {"sha": "86e45f10b0e1615280a10d877293375f71163dfd", "filename": "src/test/ui/issues/issue-105330.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/eff76455fd4061f268546a706d3dfb1cc34ecb48/src%2Ftest%2Fui%2Fissues%2Fissue-105330.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eff76455fd4061f268546a706d3dfb1cc34ecb48/src%2Ftest%2Fui%2Fissues%2Fissue-105330.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-105330.rs?ref=eff76455fd4061f268546a706d3dfb1cc34ecb48", "patch": "@@ -0,0 +1,21 @@\n+pub trait TraitWAssocConst {\n+    const A:   usize;\n+}\n+pub struct Demo {}\n+\n+impl TraitWAssocConst for impl Demo { //~ ERROR E0404\n+    //~^ ERROR E0562\n+    pubconst A: str = 32; //~ ERROR expected one of\n+}\n+\n+fn foo<A: TraitWAssocConst<A=32>>() { //~ ERROR E0658\n+    foo::<Demo>()(); //~ ERROR E0271\n+    //~^ ERROR E0618\n+    //~| ERROR E0277\n+}\n+\n+fn main<A: TraitWAssocConst<A=32>>() { //~ ERROR E0131\n+    //~^ ERROR E0658\n+    foo::<Demo>(); //~ ERROR E0277\n+    //~^ ERROR E0271\n+}"}, {"sha": "92f2ccb6544b10c2ba81744c921b4b945fd91d15", "filename": "src/test/ui/issues/issue-105330.stderr", "status": "added", "additions": 109, "deletions": 0, "changes": 109, "blob_url": "https://github.com/rust-lang/rust/blob/eff76455fd4061f268546a706d3dfb1cc34ecb48/src%2Ftest%2Fui%2Fissues%2Fissue-105330.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eff76455fd4061f268546a706d3dfb1cc34ecb48/src%2Ftest%2Fui%2Fissues%2Fissue-105330.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-105330.stderr?ref=eff76455fd4061f268546a706d3dfb1cc34ecb48", "patch": "@@ -0,0 +1,109 @@\n+error: expected one of `!` or `::`, found `A`\n+  --> $DIR/issue-105330.rs:8:14\n+   |\n+LL | impl TraitWAssocConst for impl Demo {\n+   |                                     - while parsing this item list starting here\n+LL |\n+LL |     pubconst A: str = 32;\n+   |              ^ expected one of `!` or `::`\n+LL | }\n+   | - the item list ends here\n+\n+error[E0404]: expected trait, found struct `Demo`\n+  --> $DIR/issue-105330.rs:6:32\n+   |\n+LL | impl TraitWAssocConst for impl Demo {\n+   |                                ^^^^ not a trait\n+\n+error[E0658]: associated const equality is incomplete\n+  --> $DIR/issue-105330.rs:11:28\n+   |\n+LL | fn foo<A: TraitWAssocConst<A=32>>() {\n+   |                            ^^^^\n+   |\n+   = note: see issue #92827 <https://github.com/rust-lang/rust/issues/92827> for more information\n+   = help: add `#![feature(associated_const_equality)]` to the crate attributes to enable\n+\n+error[E0658]: associated const equality is incomplete\n+  --> $DIR/issue-105330.rs:17:29\n+   |\n+LL | fn main<A: TraitWAssocConst<A=32>>() {\n+   |                             ^^^^\n+   |\n+   = note: see issue #92827 <https://github.com/rust-lang/rust/issues/92827> for more information\n+   = help: add `#![feature(associated_const_equality)]` to the crate attributes to enable\n+\n+error[E0562]: `impl Trait` only allowed in function and inherent method return types, not in type\n+  --> $DIR/issue-105330.rs:6:27\n+   |\n+LL | impl TraitWAssocConst for impl Demo {\n+   |                           ^^^^^^^^^\n+\n+error[E0277]: the trait bound `Demo: TraitWAssocConst` is not satisfied\n+  --> $DIR/issue-105330.rs:12:11\n+   |\n+LL |     foo::<Demo>()();\n+   |           ^^^^ the trait `TraitWAssocConst` is not implemented for `Demo`\n+   |\n+note: required by a bound in `foo`\n+  --> $DIR/issue-105330.rs:11:11\n+   |\n+LL | fn foo<A: TraitWAssocConst<A=32>>() {\n+   |           ^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `foo`\n+\n+error[E0271]: type mismatch resolving `<Demo as TraitWAssocConst>::A == 32`\n+  --> $DIR/issue-105330.rs:12:11\n+   |\n+LL |     foo::<Demo>()();\n+   |           ^^^^ types differ\n+   |\n+note: required by a bound in `foo`\n+  --> $DIR/issue-105330.rs:11:28\n+   |\n+LL | fn foo<A: TraitWAssocConst<A=32>>() {\n+   |                            ^^^^ required by this bound in `foo`\n+\n+error[E0618]: expected function, found `()`\n+  --> $DIR/issue-105330.rs:12:5\n+   |\n+LL | fn foo<A: TraitWAssocConst<A=32>>() {\n+   | ----------------------------------- `foo::<Demo>` defined here returns `()`\n+LL |     foo::<Demo>()();\n+   |     ^^^^^^^^^^^^^--\n+   |     |\n+   |     call expression requires function\n+\n+error[E0277]: the trait bound `Demo: TraitWAssocConst` is not satisfied\n+  --> $DIR/issue-105330.rs:19:11\n+   |\n+LL |     foo::<Demo>();\n+   |           ^^^^ the trait `TraitWAssocConst` is not implemented for `Demo`\n+   |\n+note: required by a bound in `foo`\n+  --> $DIR/issue-105330.rs:11:11\n+   |\n+LL | fn foo<A: TraitWAssocConst<A=32>>() {\n+   |           ^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `foo`\n+\n+error[E0271]: type mismatch resolving `<Demo as TraitWAssocConst>::A == 32`\n+  --> $DIR/issue-105330.rs:19:11\n+   |\n+LL |     foo::<Demo>();\n+   |           ^^^^ types differ\n+   |\n+note: required by a bound in `foo`\n+  --> $DIR/issue-105330.rs:11:28\n+   |\n+LL | fn foo<A: TraitWAssocConst<A=32>>() {\n+   |                            ^^^^ required by this bound in `foo`\n+\n+error[E0131]: `main` function is not allowed to have generic parameters\n+  --> $DIR/issue-105330.rs:17:8\n+   |\n+LL | fn main<A: TraitWAssocConst<A=32>>() {\n+   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ `main` cannot have generic parameters\n+\n+error: aborting due to 11 previous errors\n+\n+Some errors have detailed explanations: E0131, E0271, E0277, E0404, E0562, E0618, E0658.\n+For more information about an error, try `rustc --explain E0131`."}]}