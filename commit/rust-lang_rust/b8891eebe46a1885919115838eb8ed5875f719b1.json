{"sha": "b8891eebe46a1885919115838eb8ed5875f719b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4ODkxZWViZTQ2YTE4ODU5MTkxMTU4MzhlYjhlZDU4NzVmNzE5YjE=", "commit": {"author": {"name": "John-John Tedro", "email": "udoprog@tedro.se", "date": "2017-11-13T06:55:20Z"}, "committer": {"name": "John-John Tedro", "email": "udoprog@tedro.se", "date": "2017-11-13T06:55:20Z"}, "message": "Fix style in interner test", "tree": {"sha": "43a31b68b77a2a0870d24bff61c9e33fa1c6c2c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43a31b68b77a2a0870d24bff61c9e33fa1c6c2c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8891eebe46a1885919115838eb8ed5875f719b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8891eebe46a1885919115838eb8ed5875f719b1", "html_url": "https://github.com/rust-lang/rust/commit/b8891eebe46a1885919115838eb8ed5875f719b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8891eebe46a1885919115838eb8ed5875f719b1/comments", "author": {"login": "udoprog", "id": 111092, "node_id": "MDQ6VXNlcjExMTA5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/111092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/udoprog", "html_url": "https://github.com/udoprog", "followers_url": "https://api.github.com/users/udoprog/followers", "following_url": "https://api.github.com/users/udoprog/following{/other_user}", "gists_url": "https://api.github.com/users/udoprog/gists{/gist_id}", "starred_url": "https://api.github.com/users/udoprog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/udoprog/subscriptions", "organizations_url": "https://api.github.com/users/udoprog/orgs", "repos_url": "https://api.github.com/users/udoprog/repos", "events_url": "https://api.github.com/users/udoprog/events{/privacy}", "received_events_url": "https://api.github.com/users/udoprog/received_events", "type": "User", "site_admin": false}, "committer": {"login": "udoprog", "id": 111092, "node_id": "MDQ6VXNlcjExMTA5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/111092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/udoprog", "html_url": "https://github.com/udoprog", "followers_url": "https://api.github.com/users/udoprog/followers", "following_url": "https://api.github.com/users/udoprog/following{/other_user}", "gists_url": "https://api.github.com/users/udoprog/gists{/gist_id}", "starred_url": "https://api.github.com/users/udoprog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/udoprog/subscriptions", "organizations_url": "https://api.github.com/users/udoprog/orgs", "repos_url": "https://api.github.com/users/udoprog/repos", "events_url": "https://api.github.com/users/udoprog/events{/privacy}", "received_events_url": "https://api.github.com/users/udoprog/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "783c6ec55d9d93abf3fd96858fc9e3bd80611845", "url": "https://api.github.com/repos/rust-lang/rust/commits/783c6ec55d9d93abf3fd96858fc9e3bd80611845", "html_url": "https://github.com/rust-lang/rust/commit/783c6ec55d9d93abf3fd96858fc9e3bd80611845"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "69ddd560213778ac53e0ff871bd87de799f780b1", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b8891eebe46a1885919115838eb8ed5875f719b1/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8891eebe46a1885919115838eb8ed5875f719b1/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=b8891eebe46a1885919115838eb8ed5875f719b1", "patch": "@@ -416,7 +416,7 @@ mod tests {\n         // first one is zero:\n         assert_eq!(i.intern(\"dog\"), Symbol(0));\n         // re-use gets the same entry:\n-        assert_eq!(i.intern (\"dog\"), Symbol(0));\n+        assert_eq!(i.intern(\"dog\"), Symbol(0));\n         // different string gets a different #:\n         assert_eq!(i.intern(\"cat\"), Symbol(1));\n         assert_eq!(i.intern(\"cat\"), Symbol(1));"}]}