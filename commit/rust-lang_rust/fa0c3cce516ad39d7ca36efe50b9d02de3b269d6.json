{"sha": "fa0c3cce516ad39d7ca36efe50b9d02de3b269d6", "node_id": "C_kwDOAAsO6NoAKGZhMGMzY2NlNTE2YWQzOWQ3Y2EzNmVmZTUwYjlkMDJkZTNiMjY5ZDY", "commit": {"author": {"name": "Alex Macleod", "email": "alex@macleod.io", "date": "2023-03-06T21:54:24Z"}, "committer": {"name": "Alex Macleod", "email": "alex@macleod.io", "date": "2023-03-06T21:54:40Z"}, "message": "Move test for 10148 to tests/ui/crashes", "tree": {"sha": "8b32213ff5eb7036b0978af919046d54b3ffcad0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b32213ff5eb7036b0978af919046d54b3ffcad0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa0c3cce516ad39d7ca36efe50b9d02de3b269d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa0c3cce516ad39d7ca36efe50b9d02de3b269d6", "html_url": "https://github.com/rust-lang/rust/commit/fa0c3cce516ad39d7ca36efe50b9d02de3b269d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa0c3cce516ad39d7ca36efe50b9d02de3b269d6/comments", "author": {"login": "Alexendoo", "id": 1830331, "node_id": "MDQ6VXNlcjE4MzAzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1830331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexendoo", "html_url": "https://github.com/Alexendoo", "followers_url": "https://api.github.com/users/Alexendoo/followers", "following_url": "https://api.github.com/users/Alexendoo/following{/other_user}", "gists_url": "https://api.github.com/users/Alexendoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexendoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexendoo/subscriptions", "organizations_url": "https://api.github.com/users/Alexendoo/orgs", "repos_url": "https://api.github.com/users/Alexendoo/repos", "events_url": "https://api.github.com/users/Alexendoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexendoo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Alexendoo", "id": 1830331, "node_id": "MDQ6VXNlcjE4MzAzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1830331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexendoo", "html_url": "https://github.com/Alexendoo", "followers_url": "https://api.github.com/users/Alexendoo/followers", "following_url": "https://api.github.com/users/Alexendoo/following{/other_user}", "gists_url": "https://api.github.com/users/Alexendoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexendoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexendoo/subscriptions", "organizations_url": "https://api.github.com/users/Alexendoo/orgs", "repos_url": "https://api.github.com/users/Alexendoo/repos", "events_url": "https://api.github.com/users/Alexendoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexendoo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc23e42fb696b1106d44371170a5fb61c1d725c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc23e42fb696b1106d44371170a5fb61c1d725c6", "html_url": "https://github.com/rust-lang/rust/commit/dc23e42fb696b1106d44371170a5fb61c1d725c6"}], "stats": {"total": 63, "additions": 36, "deletions": 27}, "files": [{"sha": "af33b10c69388fca78d7f9d3840eaf62193f7b1f", "filename": "tests/ui/crashes/ice-10148.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/fa0c3cce516ad39d7ca36efe50b9d02de3b269d6/tests%2Fui%2Fcrashes%2Fice-10148.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa0c3cce516ad39d7ca36efe50b9d02de3b269d6/tests%2Fui%2Fcrashes%2Fice-10148.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-10148.rs?ref=fa0c3cce516ad39d7ca36efe50b9d02de3b269d6", "patch": "@@ -0,0 +1,9 @@\n+// aux-build:../../auxiliary/proc_macro_with_span.rs\n+\n+extern crate proc_macro_with_span;\n+\n+use proc_macro_with_span::with_span;\n+\n+fn main() {\n+    println!(with_span!(\"\"something \"\"));\n+}"}, {"sha": "f23e4433f95ed1bd48a6999b725d1bcb0431ea38", "filename": "tests/ui/crashes/ice-10148.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fa0c3cce516ad39d7ca36efe50b9d02de3b269d6/tests%2Fui%2Fcrashes%2Fice-10148.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa0c3cce516ad39d7ca36efe50b9d02de3b269d6/tests%2Fui%2Fcrashes%2Fice-10148.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-10148.stderr?ref=fa0c3cce516ad39d7ca36efe50b9d02de3b269d6", "patch": "@@ -0,0 +1,12 @@\n+error: empty string literal in `println!`\n+  --> $DIR/ice-10148.rs:8:5\n+   |\n+LL |     println!(with_span!(\"\"something \"\"));\n+   |     ^^^^^^^^^^^^^^^^^^^^-----------^^^^^\n+   |                         |\n+   |                         help: remove the empty string\n+   |\n+   = note: `-D clippy::println-empty-string` implied by `-D warnings`\n+\n+error: aborting due to previous error\n+"}, {"sha": "beedf2c1db292bf15364c86ca10947781493ba10", "filename": "tests/ui/format.fixed", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fa0c3cce516ad39d7ca36efe50b9d02de3b269d6/tests%2Fui%2Fformat.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/fa0c3cce516ad39d7ca36efe50b9d02de3b269d6/tests%2Fui%2Fformat.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat.fixed?ref=fa0c3cce516ad39d7ca36efe50b9d02de3b269d6", "patch": "@@ -1,5 +1,4 @@\n // run-rustfix\n-// aux-build: proc_macro_with_span.rs\n #![warn(clippy::useless_format)]\n #![allow(\n     unused_tuple_struct_fields,\n@@ -10,8 +9,6 @@\n     clippy::uninlined_format_args\n )]\n \n-extern crate proc_macro_with_span;\n-\n struct Foo(pub String);\n \n macro_rules! foo {\n@@ -90,7 +87,4 @@ fn main() {\n     let _ = abc.to_string();\n     let xx = \"xx\";\n     let _ = xx.to_string();\n-\n-    // Issue #10148\n-    println!(proc_macro_with_span::with_span!(\"\"something \"\"));\n }"}, {"sha": "e805f18188989167cf0b7ed0aab8c7613c8e3fae", "filename": "tests/ui/format.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fa0c3cce516ad39d7ca36efe50b9d02de3b269d6/tests%2Fui%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa0c3cce516ad39d7ca36efe50b9d02de3b269d6/tests%2Fui%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat.rs?ref=fa0c3cce516ad39d7ca36efe50b9d02de3b269d6", "patch": "@@ -1,5 +1,4 @@\n // run-rustfix\n-// aux-build: proc_macro_with_span.rs\n #![warn(clippy::useless_format)]\n #![allow(\n     unused_tuple_struct_fields,\n@@ -10,8 +9,6 @@\n     clippy::uninlined_format_args\n )]\n \n-extern crate proc_macro_with_span;\n-\n struct Foo(pub String);\n \n macro_rules! foo {\n@@ -92,7 +89,4 @@ fn main() {\n     let _ = format!(\"{abc}\");\n     let xx = \"xx\";\n     let _ = format!(\"{xx}\");\n-\n-    // Issue #10148\n-    println!(proc_macro_with_span::with_span!(\"\"something \"\"));\n }"}, {"sha": "0ef0ac655d3946a1ced143f01dbe9266f5627068", "filename": "tests/ui/format.stderr", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/fa0c3cce516ad39d7ca36efe50b9d02de3b269d6/tests%2Fui%2Fformat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa0c3cce516ad39d7ca36efe50b9d02de3b269d6/tests%2Fui%2Fformat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat.stderr?ref=fa0c3cce516ad39d7ca36efe50b9d02de3b269d6", "patch": "@@ -1,25 +1,25 @@\n error: useless use of `format!`\n-  --> $DIR/format.rs:22:5\n+  --> $DIR/format.rs:19:5\n    |\n LL |     format!(\"foo\");\n    |     ^^^^^^^^^^^^^^ help: consider using `.to_string()`: `\"foo\".to_string()`\n    |\n    = note: `-D clippy::useless-format` implied by `-D warnings`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:23:5\n+  --> $DIR/format.rs:20:5\n    |\n LL |     format!(\"{{}}\");\n    |     ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `\"{}\".to_string()`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:24:5\n+  --> $DIR/format.rs:21:5\n    |\n LL |     format!(\"{{}} abc {{}}\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `\"{} abc {}\".to_string()`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:25:5\n+  --> $DIR/format.rs:22:5\n    |\n LL | /     format!(\n LL | |         r##\"foo {{}}\n@@ -34,67 +34,67 @@ LL ~ \" bar\"##.to_string();\n    |\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:30:13\n+  --> $DIR/format.rs:27:13\n    |\n LL |     let _ = format!(\"\");\n    |             ^^^^^^^^^^^ help: consider using `String::new()`: `String::new()`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:32:5\n+  --> $DIR/format.rs:29:5\n    |\n LL |     format!(\"{}\", \"foo\");\n    |     ^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `\"foo\".to_string()`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:40:5\n+  --> $DIR/format.rs:37:5\n    |\n LL |     format!(\"{}\", arg);\n    |     ^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `arg.to_string()`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:70:5\n+  --> $DIR/format.rs:67:5\n    |\n LL |     format!(\"{}\", 42.to_string());\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `42.to_string()`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:72:5\n+  --> $DIR/format.rs:69:5\n    |\n LL |     format!(\"{}\", x.display().to_string());\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `x.display().to_string()`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:76:18\n+  --> $DIR/format.rs:73:18\n    |\n LL |     let _ = Some(format!(\"{}\", a + \"bar\"));\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `a + \"bar\"`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:80:22\n+  --> $DIR/format.rs:77:22\n    |\n LL |     let _s: String = format!(\"{}\", &*v.join(\"/n\"));\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `(&*v.join(\"/n\")).to_string()`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:86:13\n+  --> $DIR/format.rs:83:13\n    |\n LL |     let _ = format!(\"{x}\");\n    |             ^^^^^^^^^^^^^^ help: consider using `.to_string()`: `x.to_string()`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:88:13\n+  --> $DIR/format.rs:85:13\n    |\n LL |     let _ = format!(\"{y}\", y = x);\n    |             ^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `x.to_string()`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:92:13\n+  --> $DIR/format.rs:89:13\n    |\n LL |     let _ = format!(\"{abc}\");\n    |             ^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `abc.to_string()`\n \n error: useless use of `format!`\n-  --> $DIR/format.rs:94:13\n+  --> $DIR/format.rs:91:13\n    |\n LL |     let _ = format!(\"{xx}\");\n    |             ^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `xx.to_string()`"}]}