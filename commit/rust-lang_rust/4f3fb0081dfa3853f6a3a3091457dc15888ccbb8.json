{"sha": "4f3fb0081dfa3853f6a3a3091457dc15888ccbb8", "node_id": "C_kwDOAAsO6NoAKDRmM2ZiMDA4MWRmYTM4NTNmNmEzYTMwOTE0NTdkYzE1ODg4Y2NiYjg", "commit": {"author": {"name": "JT", "email": "547158+jntrnr@users.noreply.github.com", "date": "2022-10-24T18:28:09Z"}, "committer": {"name": "JT", "email": "547158+jntrnr@users.noreply.github.com", "date": "2022-10-24T18:28:09Z"}, "message": "Update the corresponding test and bless tests", "tree": {"sha": "f86d8a7aade15a1b8cb7a3cb147de971dad3a24f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f86d8a7aade15a1b8cb7a3cb147de971dad3a24f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f3fb0081dfa3853f6a3a3091457dc15888ccbb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f3fb0081dfa3853f6a3a3091457dc15888ccbb8", "html_url": "https://github.com/rust-lang/rust/commit/4f3fb0081dfa3853f6a3a3091457dc15888ccbb8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f3fb0081dfa3853f6a3a3091457dc15888ccbb8/comments", "author": {"login": "jntrnr", "id": 547158, "node_id": "MDQ6VXNlcjU0NzE1OA==", "avatar_url": "https://avatars.githubusercontent.com/u/547158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jntrnr", "html_url": "https://github.com/jntrnr", "followers_url": "https://api.github.com/users/jntrnr/followers", "following_url": "https://api.github.com/users/jntrnr/following{/other_user}", "gists_url": "https://api.github.com/users/jntrnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/jntrnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jntrnr/subscriptions", "organizations_url": "https://api.github.com/users/jntrnr/orgs", "repos_url": "https://api.github.com/users/jntrnr/repos", "events_url": "https://api.github.com/users/jntrnr/events{/privacy}", "received_events_url": "https://api.github.com/users/jntrnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jntrnr", "id": 547158, "node_id": "MDQ6VXNlcjU0NzE1OA==", "avatar_url": "https://avatars.githubusercontent.com/u/547158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jntrnr", "html_url": "https://github.com/jntrnr", "followers_url": "https://api.github.com/users/jntrnr/followers", "following_url": "https://api.github.com/users/jntrnr/following{/other_user}", "gists_url": "https://api.github.com/users/jntrnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/jntrnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jntrnr/subscriptions", "organizations_url": "https://api.github.com/users/jntrnr/orgs", "repos_url": "https://api.github.com/users/jntrnr/repos", "events_url": "https://api.github.com/users/jntrnr/events{/privacy}", "received_events_url": "https://api.github.com/users/jntrnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e360d0b210b945db8bca2b55d22a2d8eac45c4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e360d0b210b945db8bca2b55d22a2d8eac45c4c", "html_url": "https://github.com/rust-lang/rust/commit/0e360d0b210b945db8bca2b55d22a2d8eac45c4c"}], "stats": {"total": 33, "additions": 17, "deletions": 16}, "files": [{"sha": "fe4209e99b2f56ec85ea4a266bb4c72432ff85d7", "filename": "tests/ui/needless_collect_indirect.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4f3fb0081dfa3853f6a3a3091457dc15888ccbb8/tests%2Fui%2Fneedless_collect_indirect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f3fb0081dfa3853f6a3a3091457dc15888ccbb8/tests%2Fui%2Fneedless_collect_indirect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_collect_indirect.rs?ref=4f3fb0081dfa3853f6a3a3091457dc15888ccbb8", "patch": "@@ -1,4 +1,5 @@\n #![allow(clippy::uninlined_format_args)]\n+#![warn(clippy::needless_collect)]\n \n use std::collections::{BinaryHeap, HashMap, HashSet, LinkedList, VecDeque};\n "}, {"sha": "790d725907f322d2e1d4248aa21002607b553c8f", "filename": "tests/ui/needless_collect_indirect.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/4f3fb0081dfa3853f6a3a3091457dc15888ccbb8/tests%2Fui%2Fneedless_collect_indirect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4f3fb0081dfa3853f6a3a3091457dc15888ccbb8/tests%2Fui%2Fneedless_collect_indirect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_collect_indirect.stderr?ref=4f3fb0081dfa3853f6a3a3091457dc15888ccbb8", "patch": "@@ -1,5 +1,5 @@\n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:7:39\n+  --> $DIR/needless_collect_indirect.rs:8:39\n    |\n LL |     let indirect_iter = sample.iter().collect::<Vec<_>>();\n    |                                       ^^^^^^^\n@@ -14,7 +14,7 @@ LL ~     sample.iter().map(|x| (x, x + 1)).collect::<HashMap<_, _>>();\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:9:38\n+  --> $DIR/needless_collect_indirect.rs:10:38\n    |\n LL |     let indirect_len = sample.iter().collect::<VecDeque<_>>();\n    |                                      ^^^^^^^\n@@ -28,7 +28,7 @@ LL ~     sample.iter().count();\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:11:40\n+  --> $DIR/needless_collect_indirect.rs:12:40\n    |\n LL |     let indirect_empty = sample.iter().collect::<VecDeque<_>>();\n    |                                        ^^^^^^^\n@@ -42,7 +42,7 @@ LL ~     sample.iter().next().is_none();\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:13:43\n+  --> $DIR/needless_collect_indirect.rs:14:43\n    |\n LL |     let indirect_contains = sample.iter().collect::<VecDeque<_>>();\n    |                                           ^^^^^^^\n@@ -56,7 +56,7 @@ LL ~     sample.iter().any(|x| x == &5);\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:25:48\n+  --> $DIR/needless_collect_indirect.rs:26:48\n    |\n LL |     let non_copy_contains = sample.into_iter().collect::<Vec<_>>();\n    |                                                ^^^^^^^\n@@ -70,7 +70,7 @@ LL ~     sample.into_iter().any(|x| x == a);\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:54:51\n+  --> $DIR/needless_collect_indirect.rs:55:51\n    |\n LL |         let buffer: Vec<&str> = string.split('/').collect();\n    |                                                   ^^^^^^^\n@@ -84,7 +84,7 @@ LL ~         string.split('/').count()\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:59:55\n+  --> $DIR/needless_collect_indirect.rs:60:55\n    |\n LL |         let indirect_len: VecDeque<_> = sample.iter().collect();\n    |                                                       ^^^^^^^\n@@ -98,7 +98,7 @@ LL ~         sample.iter().count()\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:64:57\n+  --> $DIR/needless_collect_indirect.rs:65:57\n    |\n LL |         let indirect_len: LinkedList<_> = sample.iter().collect();\n    |                                                         ^^^^^^^\n@@ -112,7 +112,7 @@ LL ~         sample.iter().count()\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:69:57\n+  --> $DIR/needless_collect_indirect.rs:70:57\n    |\n LL |         let indirect_len: BinaryHeap<_> = sample.iter().collect();\n    |                                                         ^^^^^^^\n@@ -126,7 +126,7 @@ LL ~         sample.iter().count()\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:129:59\n+  --> $DIR/needless_collect_indirect.rs:130:59\n    |\n LL |             let y: Vec<usize> = vec.iter().map(|k| k * k).collect();\n    |                                                           ^^^^^^^\n@@ -143,7 +143,7 @@ LL ~             vec.iter().map(|k| k * k).any(|x| x == i);\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:154:59\n+  --> $DIR/needless_collect_indirect.rs:155:59\n    |\n LL |             let y: Vec<usize> = vec.iter().map(|k| k * k).collect();\n    |                                                           ^^^^^^^\n@@ -160,7 +160,7 @@ LL ~             vec.iter().map(|k| k * k).any(|x| x == n);\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:183:63\n+  --> $DIR/needless_collect_indirect.rs:184:63\n    |\n LL |                 let y: Vec<usize> = vec.iter().map(|k| k * k).collect();\n    |                                                               ^^^^^^^\n@@ -177,7 +177,7 @@ LL ~                 vec.iter().map(|k| k * k).any(|x| x == n);\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:219:59\n+  --> $DIR/needless_collect_indirect.rs:220:59\n    |\n LL |             let y: Vec<usize> = vec.iter().map(|k| k * k).collect();\n    |                                                           ^^^^^^^\n@@ -195,7 +195,7 @@ LL ~                 vec.iter().map(|k| k * k).any(|x| x == n);\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:244:26\n+  --> $DIR/needless_collect_indirect.rs:245:26\n    |\n LL |         let w = v.iter().collect::<Vec<_>>();\n    |                          ^^^^^^^\n@@ -211,7 +211,7 @@ LL ~         for _ in 0..v.iter().count() {\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:266:30\n+  --> $DIR/needless_collect_indirect.rs:267:30\n    |\n LL |         let mut w = v.iter().collect::<Vec<_>>();\n    |                              ^^^^^^^\n@@ -227,7 +227,7 @@ LL ~         while 1 == v.iter().count() {\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:288:30\n+  --> $DIR/needless_collect_indirect.rs:289:30\n    |\n LL |         let mut w = v.iter().collect::<Vec<_>>();\n    |                              ^^^^^^^"}]}