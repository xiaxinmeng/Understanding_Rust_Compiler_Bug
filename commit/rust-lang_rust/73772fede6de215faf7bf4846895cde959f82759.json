{"sha": "73772fede6de215faf7bf4846895cde959f82759", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczNzcyZmVkZTZkZTIxNWZhZjdiZjQ4NDY4OTVjZGU5NTlmODI3NTk=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-04-20T08:04:17Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-04-20T08:04:17Z"}, "message": "adjust for Weak::as_raw -> as_ptr rename", "tree": {"sha": "567c44dbeb0ae77abbdb11b7e977978c08a69dd7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/567c44dbeb0ae77abbdb11b7e977978c08a69dd7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73772fede6de215faf7bf4846895cde959f82759", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73772fede6de215faf7bf4846895cde959f82759", "html_url": "https://github.com/rust-lang/rust/commit/73772fede6de215faf7bf4846895cde959f82759", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73772fede6de215faf7bf4846895cde959f82759/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d2c8358f844a943ac5318cfdbe166a6688397cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d2c8358f844a943ac5318cfdbe166a6688397cb", "html_url": "https://github.com/rust-lang/rust/commit/5d2c8358f844a943ac5318cfdbe166a6688397cb"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "0b98c7d2bba3d6c26a5fc543f9f1c2c9070fca10", "filename": "tests/compile-fail/rc_as_ptr.rs", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/73772fede6de215faf7bf4846895cde959f82759/tests%2Fcompile-fail%2Frc_as_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73772fede6de215faf7bf4846895cde959f82759/tests%2Fcompile-fail%2Frc_as_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Frc_as_ptr.rs?ref=73772fede6de215faf7bf4846895cde959f82759", "patch": "@@ -5,17 +5,17 @@\n use std::rc::{Rc, Weak};\n use std::ptr;\n \n-/// Taken from the `Weak::as_raw` doctest.\n+/// Taken from the `Weak::as_ptr` doctest.\n fn main() {\n     let strong = Rc::new(Box::new(42));\n     let weak = Rc::downgrade(&strong);\n     // Both point to the same object\n-    assert!(ptr::eq(&*strong, Weak::as_raw(&weak)));\n+    assert!(ptr::eq(&*strong, Weak::as_ptr(&weak)));\n     // The strong here keeps it alive, so we can still access the object.\n-    assert_eq!(42, **unsafe { &*Weak::as_raw(&weak) });\n+    assert_eq!(42, **unsafe { &*Weak::as_ptr(&weak) });\n     \n     drop(strong);\n     // But not any more. We can do Weak::as_raw(&weak), but accessing the pointer would lead to\n     // undefined behaviour.\n-    assert_eq!(42, **unsafe { &*Weak::as_raw(&weak) }); //~ ERROR dereferenced after this allocation got freed\n+    assert_eq!(42, **unsafe { &*Weak::as_ptr(&weak) }); //~ ERROR dereferenced after this allocation got freed\n }", "previous_filename": "tests/compile-fail/rc_as_raw.rs"}]}