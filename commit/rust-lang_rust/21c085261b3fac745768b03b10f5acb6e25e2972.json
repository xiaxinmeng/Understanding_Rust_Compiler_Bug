{"sha": "21c085261b3fac745768b03b10f5acb6e25e2972", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxYzA4NTI2MWIzZmFjNzQ1NzY4YjAzYjEwZjVhY2I2ZTI1ZTI5NzI=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-01-06T04:02:56Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-01-06T04:02:56Z"}, "message": "Remove `self` from `use foo::bar::self;`\n\nAlso adds the `normalize_imports` config option.\n\nFixes #1252", "tree": {"sha": "1df71672afd8ce92c6f00edb80cb0475bb0f477f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1df71672afd8ce92c6f00edb80cb0475bb0f477f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21c085261b3fac745768b03b10f5acb6e25e2972", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21c085261b3fac745768b03b10f5acb6e25e2972", "html_url": "https://github.com/rust-lang/rust/commit/21c085261b3fac745768b03b10f5acb6e25e2972", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21c085261b3fac745768b03b10f5acb6e25e2972/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ecf5b8e844e5d8a35a21b1901e461033da0b9fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ecf5b8e844e5d8a35a21b1901e461033da0b9fa", "html_url": "https://github.com/rust-lang/rust/commit/6ecf5b8e844e5d8a35a21b1901e461033da0b9fa"}], "stats": {"total": 38, "additions": 30, "deletions": 8}, "files": [{"sha": "641b8993fc59f5ae971228959e4b359d2fedb3a5", "filename": "src/config.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21c085261b3fac745768b03b10f5acb6e25e2972/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21c085261b3fac745768b03b10f5acb6e25e2972/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=21c085261b3fac745768b03b10f5acb6e25e2972", "patch": "@@ -393,6 +393,7 @@ create_config! {\n     reorder_imports: bool, false, \"Reorder import statements alphabetically\";\n     reorder_imported_names: bool, false,\n         \"Reorder lists of names in import statements alphabetically\";\n+    normalize_imports: bool, true, \"Allows removing braces from imports and reducing paths\";\n     single_line_if_else_max_width: usize, 50, \"Maximum line length for single line if-else \\\n                                                 expressions. A value of zero means always break \\\n                                                 if-else expressions.\";"}, {"sha": "b2909cfecd263dd0f7386d108a91667062277e85", "filename": "src/imports.rs", "status": "modified", "additions": 21, "deletions": 8, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/21c085261b3fac745768b03b10f5acb6e25e2972/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21c085261b3fac745768b03b10f5acb6e25e2972/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=21c085261b3fac745768b03b10f5acb6e25e2972", "patch": "@@ -133,15 +133,24 @@ impl Rewrite for ast::ViewPath {\n             ast::ViewPath_::ViewPathList(ref path, ref path_list) => {\n                 rewrite_use_list(width, offset, path, path_list, self.span, context)\n             }\n-            ast::ViewPath_::ViewPathGlob(_) => {\n-                // FIXME convert to list?\n-                None\n-            }\n+            ast::ViewPath_::ViewPathGlob(_) => None,\n             ast::ViewPath_::ViewPathSimple(ident, ref path) => {\n                 let ident_str = ident.to_string();\n                 // 4 = \" as \".len()\n                 let budget = try_opt!(width.checked_sub(ident_str.len() + 4));\n-                let path_str = try_opt!(rewrite_path(context, false, None, path, budget, offset));\n+\n+                let path_str = if context.config.normalize_imports &&\n+                                  path.segments.last().unwrap().identifier.to_string() == \"self\" &&\n+                                  path.segments.len() > 1 {\n+                    let path = &ast::Path {\n+                        span: path.span.clone(),\n+                        segments: path.segments[..path.segments.len() - 1].to_owned(),\n+                        global: path.global,\n+                    };\n+                    try_opt!(rewrite_path(context, false, None, &path, budget, offset))\n+                } else {\n+                    try_opt!(rewrite_path(context, false, None, path, budget, offset))\n+                };\n \n                 Some(if path.segments.last().unwrap().identifier == ident {\n                     path_str\n@@ -239,9 +248,13 @@ impl<'a> FmtVisitor<'a> {\n     }\n }\n \n-fn rewrite_single_use_list(path_str: Option<String>, vpi: &ast::PathListItem) -> String {\n+fn rewrite_single_use_list(path_str: Option<String>,\n+                           vpi: &ast::PathListItem,\n+                           context: &RewriteContext)\n+                           -> String {\n     let path_item_str = match path_str {\n-        Some(ref path_str) if vpi.node.name.to_string() == \"self\" => path_str.to_owned(),\n+        Some(ref path_str) if vpi.node.name.to_string() == \"self\" &&\n+                              context.config.normalize_imports => path_str.to_owned(),\n         Some(path_str) => format!(\"{}::{}\", path_str, vpi.node.name),\n         None => vpi.node.name.to_string(),\n     };\n@@ -281,7 +294,7 @@ pub fn rewrite_use_list(width: usize,\n \n     match path_list.len() {\n         0 => unreachable!(),\n-        1 => return Some(rewrite_single_use_list(opt_path_str, &path_list[0])),\n+        1 => return Some(rewrite_single_use_list(opt_path_str, &path_list[0], context)),\n         _ => (),\n     }\n "}, {"sha": "4296a152f4e59d91663e536f45ca4e1754b22810", "filename": "tests/source/imports.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/21c085261b3fac745768b03b10f5acb6e25e2972/tests%2Fsource%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21c085261b3fac745768b03b10f5acb6e25e2972/tests%2Fsource%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fimports.rs?ref=21c085261b3fac745768b03b10f5acb6e25e2972", "patch": "@@ -20,6 +20,10 @@ use Foo::{Bar, Baz};\n pub use syntax::ast::{Expr_, Expr, ExprAssign, ExprCall, ExprMethodCall, ExprPath};\n use syntax::some::{};\n \n+use self;\n+use std::io::{self};\n+use std::io::self;\n+\n mod Foo {\n     pub use syntax::ast::{\n         ItemForeignMod,"}, {"sha": "0be8f2c35e0b2decb9d51c9a1c386b098bd96007", "filename": "tests/target/imports.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/21c085261b3fac745768b03b10f5acb6e25e2972/tests%2Ftarget%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21c085261b3fac745768b03b10f5acb6e25e2972/tests%2Ftarget%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fimports.rs?ref=21c085261b3fac745768b03b10f5acb6e25e2972", "patch": "@@ -21,6 +21,10 @@ use {/* Pre-comment! */ Foo, Bar /* comment */};\n use Foo::{Bar, Baz};\n pub use syntax::ast::{Expr_, Expr, ExprAssign, ExprCall, ExprMethodCall, ExprPath};\n \n+use self;\n+use std::io;\n+use std::io;\n+\n mod Foo {\n     pub use syntax::ast::{ItemForeignMod, ItemImpl, ItemMac, ItemMod, ItemStatic, ItemDefaultImpl};\n "}]}