{"sha": "4c7ce7c8973ff8f4b9427faffff3ceda8a1ab7f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjN2NlN2M4OTczZmY4ZjRiOTQyN2ZhZmZmZjNjZWRhOGExYWI3ZjI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-11-21T19:24:36Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-11-21T20:34:28Z"}, "message": "pass vis by shared reference\n\nWe are not mutating it now.", "tree": {"sha": "45825e4347261fa766a242ee0e5d17ef47aa5a9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45825e4347261fa766a242ee0e5d17ef47aa5a9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c7ce7c8973ff8f4b9427faffff3ceda8a1ab7f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c7ce7c8973ff8f4b9427faffff3ceda8a1ab7f2", "html_url": "https://github.com/rust-lang/rust/commit/4c7ce7c8973ff8f4b9427faffff3ceda8a1ab7f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c7ce7c8973ff8f4b9427faffff3ceda8a1ab7f2/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2bd2fc9418ee986fd96c32308dc2ef0efcc7973d", "url": "https://api.github.com/repos/rust-lang/rust/commits/2bd2fc9418ee986fd96c32308dc2ef0efcc7973d", "html_url": "https://github.com/rust-lang/rust/commit/2bd2fc9418ee986fd96c32308dc2ef0efcc7973d"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "5b38263f90f0ce6ecca081a9ad21fff0b79592fc", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4c7ce7c8973ff8f4b9427faffff3ceda8a1ab7f2/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c7ce7c8973ff8f4b9427faffff3ceda8a1ab7f2/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=4c7ce7c8973ff8f4b9427faffff3ceda8a1ab7f2", "patch": "@@ -2752,7 +2752,7 @@ impl<'a> LoweringContext<'a> {\n         id: NodeId,\n         name: &mut Name,\n         attrs: &hir::HirVec<Attribute>,\n-        vis: &mut hir::Visibility,\n+        vis: &hir::Visibility,\n         i: &ItemKind,\n     ) -> hir::ItemKind {\n         match *i {\n@@ -2955,7 +2955,7 @@ impl<'a> LoweringContext<'a> {\n         tree: &UseTree,\n         prefix: &Path,\n         id: NodeId,\n-        vis: &mut hir::Visibility,\n+        vis: &hir::Visibility,\n         name: &mut Name,\n         attrs: &hir::HirVec<Attribute>,\n     ) -> hir::ItemKind {\n@@ -3086,7 +3086,7 @@ impl<'a> LoweringContext<'a> {\n                         hir_id: new_hir_id,\n                     } = self.lower_node_id(id);\n \n-                    let mut vis = vis.clone();\n+                    let vis = vis.clone();\n                     let mut name = name.clone();\n                     let mut prefix = prefix.clone();\n \n@@ -3104,7 +3104,7 @@ impl<'a> LoweringContext<'a> {\n                         let item = this.lower_use_tree(use_tree,\n                                                        &prefix,\n                                                        new_id,\n-                                                       &mut vis,\n+                                                       &vis,\n                                                        &mut name,\n                                                        attrs);\n \n@@ -3384,7 +3384,7 @@ impl<'a> LoweringContext<'a> {\n \n     pub fn lower_item(&mut self, i: &Item) -> Option<hir::Item> {\n         let mut name = i.ident.name;\n-        let mut vis = self.lower_visibility(&i.vis, None);\n+        let vis = self.lower_visibility(&i.vis, None);\n         let attrs = self.lower_attrs(&i.attrs);\n         if let ItemKind::MacroDef(ref def) = i.node {\n             if !def.legacy || attr::contains_name(&i.attrs, \"macro_export\") ||\n@@ -3403,7 +3403,7 @@ impl<'a> LoweringContext<'a> {\n             return None;\n         }\n \n-        let node = self.lower_item_kind(i.id, &mut name, &attrs, &mut vis, &i.node);\n+        let node = self.lower_item_kind(i.id, &mut name, &attrs, &vis, &i.node);\n \n         let LoweredNodeId { node_id, hir_id } = self.lower_node_id(i.id);\n "}]}