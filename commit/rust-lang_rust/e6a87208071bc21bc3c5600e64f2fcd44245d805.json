{"sha": "e6a87208071bc21bc3c5600e64f2fcd44245d805", "node_id": "C_kwDOAAsO6NoAKGU2YTg3MjA4MDcxYmMyMWJjM2M1NjAwZTY0ZjJmY2Q0NDI0NWQ4MDU", "commit": {"author": {"name": "Lo\u00efc BRANSTETT", "email": "lolo.branstett@numericable.fr", "date": "2022-04-11T10:28:56Z"}, "committer": {"name": "Lo\u00efc BRANSTETT", "email": "lolo.branstett@numericable.fr", "date": "2022-04-16T16:32:07Z"}, "message": "htmldocck: Compare HTML tree instead of plain text html", "tree": {"sha": "4b263ed600edb6768d63e692fd7193f556a46787", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b263ed600edb6768d63e692fd7193f556a46787"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6a87208071bc21bc3c5600e64f2fcd44245d805", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6a87208071bc21bc3c5600e64f2fcd44245d805", "html_url": "https://github.com/rust-lang/rust/commit/e6a87208071bc21bc3c5600e64f2fcd44245d805", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6a87208071bc21bc3c5600e64f2fcd44245d805/comments", "author": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "febce1fc316f5618d5bb8f05d19e2e3ba868c007", "url": "https://api.github.com/repos/rust-lang/rust/commits/febce1fc316f5618d5bb8f05d19e2e3ba868c007", "html_url": "https://github.com/rust-lang/rust/commit/febce1fc316f5618d5bb8f05d19e2e3ba868c007"}], "stats": {"total": 70, "additions": 66, "deletions": 4}, "files": [{"sha": "df215f318239ec9e7120a0c58d83592704166cae", "filename": "src/etc/htmldocck.py", "status": "modified", "additions": 66, "deletions": 4, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/e6a87208071bc21bc3c5600e64f2fcd44245d805/src%2Fetc%2Fhtmldocck.py", "raw_url": "https://github.com/rust-lang/rust/raw/e6a87208071bc21bc3c5600e64f2fcd44245d805/src%2Fetc%2Fhtmldocck.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fhtmldocck.py?ref=e6a87208071bc21bc3c5600e64f2fcd44245d805", "patch": "@@ -285,6 +285,11 @@ def flatten(node):\n     return ''.join(acc)\n \n \n+def make_xml(text):\n+    xml = ET.XML('<xml>%s</xml>' % text)\n+    return xml\n+\n+\n def normalize_xpath(path):\n     path = path.replace(\"{{channel}}\", channel)\n     if path.startswith('//'):\n@@ -401,7 +406,7 @@ def get_tree_count(tree, path):\n     return len(tree.findall(path))\n \n \n-def check_snapshot(snapshot_name, tree, normalize_to_text):\n+def check_snapshot(snapshot_name, actual_tree, normalize_to_text):\n     assert rust_test_path.endswith('.rs')\n     snapshot_path = '{}.{}.{}'.format(rust_test_path[:-3], snapshot_name, 'html')\n     try:\n@@ -414,11 +419,15 @@ def check_snapshot(snapshot_name, tree, normalize_to_text):\n             raise FailedCheck('No saved snapshot value')\n \n     if not normalize_to_text:\n-        actual_str = ET.tostring(tree).decode('utf-8')\n+        actual_str = ET.tostring(actual_tree).decode('utf-8')\n     else:\n-        actual_str = flatten(tree)\n+        actual_str = flatten(actual_tree)\n+\n+    if not expected_str \\\n+        or (not normalize_to_text and\n+            not compare_tree(make_xml(actual_str), make_xml(expected_str), stderr)) \\\n+        or (normalize_to_text and actual_str != expected_str):\n \n-    if expected_str != actual_str:\n         if bless:\n             with open(snapshot_path, 'w') as snapshot_file:\n                 snapshot_file.write(actual_str)\n@@ -430,6 +439,59 @@ def check_snapshot(snapshot_name, tree, normalize_to_text):\n             print()\n             raise FailedCheck('Actual snapshot value is different than expected')\n \n+\n+# Adapted from https://github.com/formencode/formencode/blob/3a1ba9de2fdd494dd945510a4568a3afeddb0b2e/formencode/doctest_xml_compare.py#L72-L120\n+def compare_tree(x1, x2, reporter=None):\n+    if x1.tag != x2.tag:\n+        if reporter:\n+            reporter('Tags do not match: %s and %s' % (x1.tag, x2.tag))\n+        return False\n+    for name, value in x1.attrib.items():\n+        if x2.attrib.get(name) != value:\n+            if reporter:\n+                reporter('Attributes do not match: %s=%r, %s=%r'\n+                         % (name, value, name, x2.attrib.get(name)))\n+            return False\n+    for name in x2.attrib:\n+        if name not in x1.attrib:\n+            if reporter:\n+                reporter('x2 has an attribute x1 is missing: %s'\n+                         % name)\n+            return False\n+    if not text_compare(x1.text, x2.text):\n+        if reporter:\n+            reporter('text: %r != %r' % (x1.text, x2.text))\n+        return False\n+    if not text_compare(x1.tail, x2.tail):\n+        if reporter:\n+            reporter('tail: %r != %r' % (x1.tail, x2.tail))\n+        return False\n+    cl1 = list(x1)\n+    cl2 = list(x2)\n+    if len(cl1) != len(cl2):\n+        if reporter:\n+            reporter('children length differs, %i != %i'\n+                     % (len(cl1), len(cl2)))\n+        return False\n+    i = 0\n+    for c1, c2 in zip(cl1, cl2):\n+        i += 1\n+        if not compare_tree(c1, c2, reporter=reporter):\n+            if reporter:\n+                reporter('children %i do not match: %s'\n+                         % (i, c1.tag))\n+            return False\n+    return True\n+\n+\n+def text_compare(t1, t2):\n+    if not t1 and not t2:\n+        return True\n+    if t1 == '*' or t2 == '*':\n+        return True\n+    return (t1 or '').strip() == (t2 or '').strip()\n+\n+\n def stderr(*args):\n     if sys.version_info.major < 3:\n         file = codecs.getwriter('utf-8')(sys.stderr)"}]}