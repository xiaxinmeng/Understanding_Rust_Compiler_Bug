{"sha": "74f3e0474b382160a6b0aec6e27fe239025519a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0ZjNlMDQ3NGIzODIxNjBhNmIwYWVjNmUyN2ZlMjM5MDI1NTE5YTA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-02-19T06:16:47Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-02-19T06:16:47Z"}, "message": "auto merge of #12361 : sfackler/rust/rustdoc-test-extern, r=alexcrichton", "tree": {"sha": "cdfe2e15be94d81abc5b956bf64ae7e4225dccd0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cdfe2e15be94d81abc5b956bf64ae7e4225dccd0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74f3e0474b382160a6b0aec6e27fe239025519a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74f3e0474b382160a6b0aec6e27fe239025519a0", "html_url": "https://github.com/rust-lang/rust/commit/74f3e0474b382160a6b0aec6e27fe239025519a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74f3e0474b382160a6b0aec6e27fe239025519a0/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cae5999a542fc391e9764ca181f6ac39beec06cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/cae5999a542fc391e9764ca181f6ac39beec06cb", "html_url": "https://github.com/rust-lang/rust/commit/cae5999a542fc391e9764ca181f6ac39beec06cb"}, {"sha": "06589136167f3a345920260e1dcb00717b6cd68f", "url": "https://api.github.com/repos/rust-lang/rust/commits/06589136167f3a345920260e1dcb00717b6cd68f", "html_url": "https://github.com/rust-lang/rust/commit/06589136167f3a345920260e1dcb00717b6cd68f"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "5043cad6f200cca9bb1d174584d0c53bc2f63684", "filename": "src/libextra/json.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/74f3e0474b382160a6b0aec6e27fe239025519a0/src%2Flibextra%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74f3e0474b382160a6b0aec6e27fe239025519a0/src%2Flibextra%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fjson.rs?ref=74f3e0474b382160a6b0aec6e27fe239025519a0", "patch": "@@ -59,6 +59,7 @@ the code for these traits: `#[deriving(Decodable, Encodable)]`\n To encode using Encodable :\n \n ```rust\n+extern crate extra;\n extern crate serialize;\n use extra::json;\n use std::io;\n@@ -98,6 +99,7 @@ A basic `ToJson` example using a TreeMap of attribute name / attribute value:\n \n \n ```rust\n+extern crate extra;\n extern crate collections;\n \n use extra::json;\n@@ -128,6 +130,7 @@ fn main() {\n To decode a JSON string using `Decodable` trait :\n \n ```rust\n+extern crate extra;\n extern crate serialize;\n use serialize::Decodable;\n \n@@ -154,6 +157,7 @@ Create a struct called TestStruct1 and serialize and deserialize it to and from\n using the serialization API, using the derived serialization code.\n \n ```rust\n+extern crate extra;\n extern crate serialize;\n use extra::json;\n use serialize::{Encodable, Decodable};\n@@ -186,6 +190,7 @@ This example use the ToJson impl to deserialize the JSON string.\n Example of `ToJson` trait implementation for TestStruct1.\n \n ```rust\n+extern crate extra;\n extern crate serialize;\n extern crate collections;\n "}, {"sha": "db4842b79a04bbd23a7599d1f2b2755460418adf", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/74f3e0474b382160a6b0aec6e27fe239025519a0/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74f3e0474b382160a6b0aec6e27fe239025519a0/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=74f3e0474b382160a6b0aec6e27fe239025519a0", "patch": "@@ -144,11 +144,13 @@ fn maketest(s: &str, cratename: &str) -> ~str {\n #[deny(warnings)];\n #[allow(unused_variable, dead_assignment, unused_mut, attribute_usage, dead_code)];\n \";\n-    if s.contains(\"extra\") {\n-        prog.push_str(\"extern crate extra;\\n\");\n-    }\n-    if s.contains(cratename) {\n-        prog.push_str(format!(\"extern crate {};\\n\", cratename));\n+    if !s.contains(\"extern crate\") {\n+        if s.contains(\"extra\") {\n+            prog.push_str(\"extern crate extra;\\n\");\n+        }\n+        if s.contains(cratename) {\n+            prog.push_str(format!(\"extern crate {};\\n\", cratename));\n+        }\n     }\n     if s.contains(\"fn main\") {\n         prog.push_str(s);"}]}