{"sha": "3762d80d68103f9ec20e4db405b631dc1a9729b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3NjJkODBkNjgxMDNmOWVjMjBlNGRiNDA1YjYzMWRjMWE5NzI5YjI=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2018-05-06T04:18:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-05-06T04:18:02Z"}, "message": "Merge pull request #2678 from topecongiro/issue-2676\n\nDo not overflow a long item", "tree": {"sha": "8ba81a5a82bbfcb0aad13c736218f594ba9a1d47", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ba81a5a82bbfcb0aad13c736218f594ba9a1d47"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3762d80d68103f9ec20e4db405b631dc1a9729b2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJa7oH6CRBK7hj4Ov3rIwAAdHIIAF8AuYrNNhwK8hR7qvGzrxNG\ndHYrQ7OiHMOO5Xdn3OB4CLXl+H/jekwOkv+Ci20zVjkqi9d1T1qnBIj/NOK7P8Sa\nMiv2rv0KLxlwSs/+w5IO3DKZiMZfgoilBnZbo66u5psXG6QHfC5kes24HDdKRalu\nknScSRGobemYaCPHqs6GX2RhjXyw74AWJotLu2spAAxP18KqQMDbeEAzwcqIMv9F\npNqAXzG/GVDyjwLVKJU2t1/mEg+6pU9bvVkx/roBcWuySFaCugVzKF+OGHyHAqRb\nlGpJfac26RQ0u6ItbEo6BiobHIIb7GbGncLmRh/mCIOA2hK1uKBXcsSPKaeIrUw=\n=fReV\n-----END PGP SIGNATURE-----\n", "payload": "tree 8ba81a5a82bbfcb0aad13c736218f594ba9a1d47\nparent 17b04f181d75e7eef3cd444fdefb93fa34d12981\nparent f885039e6c2ba75bf50127d4e8e15bc79b772119\nauthor Nick Cameron <nrc@ncameron.org> 1525580282 +1200\ncommitter GitHub <noreply@github.com> 1525580282 +1200\n\nMerge pull request #2678 from topecongiro/issue-2676\n\nDo not overflow a long item"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3762d80d68103f9ec20e4db405b631dc1a9729b2", "html_url": "https://github.com/rust-lang/rust/commit/3762d80d68103f9ec20e4db405b631dc1a9729b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3762d80d68103f9ec20e4db405b631dc1a9729b2/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17b04f181d75e7eef3cd444fdefb93fa34d12981", "url": "https://api.github.com/repos/rust-lang/rust/commits/17b04f181d75e7eef3cd444fdefb93fa34d12981", "html_url": "https://github.com/rust-lang/rust/commit/17b04f181d75e7eef3cd444fdefb93fa34d12981"}, {"sha": "f885039e6c2ba75bf50127d4e8e15bc79b772119", "url": "https://api.github.com/repos/rust-lang/rust/commits/f885039e6c2ba75bf50127d4e8e15bc79b772119", "html_url": "https://github.com/rust-lang/rust/commit/f885039e6c2ba75bf50127d4e8e15bc79b772119"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "96bebc50bfd3f3524aa80b1dac7755fffa2a8cd4", "filename": "src/overflow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3762d80d68103f9ec20e4db405b631dc1a9729b2/src%2Foverflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3762d80d68103f9ec20e4db405b631dc1a9729b2/src%2Foverflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foverflow.rs?ref=3762d80d68103f9ec20e4db405b631dc1a9729b2", "patch": "@@ -422,7 +422,7 @@ impl<'a, T: 'a + Rewrite + ToExpr + Spanned> Context<'a, T> {\n         let extend_width = if items_str.is_empty() {\n             paren_overhead\n         } else {\n-            paren_overhead / 2\n+            first_line_width(items_str) + (paren_overhead / 2)\n         };\n         let nested_indent_str = self.nested_shape\n             .indent"}, {"sha": "5c7c02a4b8246b8670f8049a6517b2eea9f70169", "filename": "tests/source/expr.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3762d80d68103f9ec20e4db405b631dc1a9729b2/tests%2Fsource%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3762d80d68103f9ec20e4db405b631dc1a9729b2/tests%2Fsource%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fexpr.rs?ref=3762d80d68103f9ec20e4db405b631dc1a9729b2", "patch": "@@ -391,3 +391,10 @@ fn dots() {\n     ..= ..= ..;\n     (..) .. ..; // ((..) .. (..))\n }\n+\n+// #2676\n+// A function call with a large single argument.\n+fn foo() {\n+    let my_var =\n+        Mutex::new(RpcClientType::connect(server_iddd).chain_err(|| \"Unable to create RPC client\")?);\n+}"}, {"sha": "50387731d14f515e4949da9ec6a8122368d62df4", "filename": "tests/target/expr.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3762d80d68103f9ec20e4db405b631dc1a9729b2/tests%2Ftarget%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3762d80d68103f9ec20e4db405b631dc1a9729b2/tests%2Ftarget%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr.rs?ref=3762d80d68103f9ec20e4db405b631dc1a9729b2", "patch": "@@ -416,3 +416,11 @@ fn dots() {\n     ..= ..= ..;\n     (..).. ..; // ((..) .. (..))\n }\n+\n+// #2676\n+// A function call with a large single argument.\n+fn foo() {\n+    let my_var = Mutex::new(\n+        RpcClientType::connect(server_iddd).chain_err(|| \"Unable to create RPC client\")?\n+    );\n+}"}]}