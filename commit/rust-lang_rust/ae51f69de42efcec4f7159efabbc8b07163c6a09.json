{"sha": "ae51f69de42efcec4f7159efabbc8b07163c6a09", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlNTFmNjlkZTQyZWZjZWM0ZjcxNTllZmFiYmM4YjA3MTYzYzZhMDk=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-12-05T03:56:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-05T03:56:52Z"}, "message": "Merge pull request #2239 from topecongiro/issue-2157\n\nFix double indented chained closure", "tree": {"sha": "7988752771b87dc0d0e3e65c5e32ea084f1dab76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7988752771b87dc0d0e3e65c5e32ea084f1dab76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae51f69de42efcec4f7159efabbc8b07163c6a09", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaJhkECRBK7hj4Ov3rIwAAdHIIAFoRLd/GRYNs91R7O4zFYTbv\nzJUdatJBhKA95t/POjxnveoE4z0LWHCxByf6xcjd3jxxFSJoXGzkaqqOJzk1tjiM\nVY4frARlL9ZZnyYjPz4HPqx42NKSvfIwYrc7iUvYevi1EKmDDpzoTjbIW0K3fxWe\nlrGftXed0p7VGzhcZgSGXT34RroY2YVwWzToqK/TqmkNBD40d8Vyl8K9QtS8nl7L\nA/z1VNf0VC9GboQjABkw460vi1PrztX02sKZHeaq3GlDwLyAJt1Zlq21c2XANbJX\n3XbDS477ljsJRmR+HzLvCjntzmPRmaTDBHAcORlwwCnzWOCrCrIDOz2ora5XKiE=\n=eJSo\n-----END PGP SIGNATURE-----\n", "payload": "tree 7988752771b87dc0d0e3e65c5e32ea084f1dab76\nparent c4c3f5ba1e934b703c506c3db37772db39daf40b\nparent 0c1eb20575c6d95ac50a5e732130a15808364656\nauthor Nick Cameron <nrc@ncameron.org> 1512446212 +1300\ncommitter GitHub <noreply@github.com> 1512446212 +1300\n\nMerge pull request #2239 from topecongiro/issue-2157\n\nFix double indented chained closure"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae51f69de42efcec4f7159efabbc8b07163c6a09", "html_url": "https://github.com/rust-lang/rust/commit/ae51f69de42efcec4f7159efabbc8b07163c6a09", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae51f69de42efcec4f7159efabbc8b07163c6a09/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4c3f5ba1e934b703c506c3db37772db39daf40b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4c3f5ba1e934b703c506c3db37772db39daf40b", "html_url": "https://github.com/rust-lang/rust/commit/c4c3f5ba1e934b703c506c3db37772db39daf40b"}, {"sha": "0c1eb20575c6d95ac50a5e732130a15808364656", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c1eb20575c6d95ac50a5e732130a15808364656", "html_url": "https://github.com/rust-lang/rust/commit/0c1eb20575c6d95ac50a5e732130a15808364656"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "816ce60ad4d96a3dec43eef929cc1718e7bf8749", "filename": "src/chains.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ae51f69de42efcec4f7159efabbc8b07163c6a09/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae51f69de42efcec4f7159efabbc8b07163c6a09/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=ae51f69de42efcec4f7159efabbc8b07163c6a09", "patch": "@@ -150,7 +150,11 @@ pub fn rewrite_chain(expr: &ast::Expr, context: &RewriteContext, shape: Shape) -\n         .collect::<Option<Vec<_>>>()?;\n \n     // Total of all items excluding the last.\n-    let extend_last_subexpr = last_line_extendable(&parent_rewrite) && rewrites.is_empty();\n+    let extend_last_subexpr = if is_small_parent {\n+        rewrites.len() == 1 && last_line_extendable(&rewrites[0])\n+    } else {\n+        rewrites.is_empty() && last_line_extendable(&parent_rewrite)\n+    };\n     let almost_total = if extend_last_subexpr {\n         last_line_width(&parent_rewrite)\n     } else {"}, {"sha": "0977212ef218df1e150cf1b158667144aa50a624", "filename": "tests/source/chains.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ae51f69de42efcec4f7159efabbc8b07163c6a09/tests%2Fsource%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae51f69de42efcec4f7159efabbc8b07163c6a09/tests%2Fsource%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fchains.rs?ref=ae51f69de42efcec4f7159efabbc8b07163c6a09", "patch": "@@ -53,6 +53,14 @@ fn main() {\n         .map(|x| x / 2)\n         .fold(0, |acc, x| acc + x);\n \n+    body.fold(Body::new(), |mut body, chunk| {\n+        body.extend(chunk);\n+        Ok(body)\n+    }).and_then(move |body| {\n+            let req = Request::from_parts(parts, body);\n+            f(req).map_err(|_| io::Error::new(io::ErrorKind::Other, \"\"))\n+        });\n+\n     aaaaaaaaaaaaaaaa.map(|x| {\n                          x += 1;\n                          x"}, {"sha": "6e1fc809764a5414dfd4df6321011a8ec6e4089a", "filename": "tests/target/chains.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ae51f69de42efcec4f7159efabbc8b07163c6a09/tests%2Ftarget%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae51f69de42efcec4f7159efabbc8b07163c6a09/tests%2Ftarget%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fchains.rs?ref=ae51f69de42efcec4f7159efabbc8b07163c6a09", "patch": "@@ -54,6 +54,14 @@ fn main() {\n     let suuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuum =\n         xxxxxxx.map(|x| x + 5).map(|x| x / 2).fold(0, |acc, x| acc + x);\n \n+    body.fold(Body::new(), |mut body, chunk| {\n+        body.extend(chunk);\n+        Ok(body)\n+    }).and_then(move |body| {\n+        let req = Request::from_parts(parts, body);\n+        f(req).map_err(|_| io::Error::new(io::ErrorKind::Other, \"\"))\n+    });\n+\n     aaaaaaaaaaaaaaaa\n         .map(|x| {\n             x += 1;"}]}