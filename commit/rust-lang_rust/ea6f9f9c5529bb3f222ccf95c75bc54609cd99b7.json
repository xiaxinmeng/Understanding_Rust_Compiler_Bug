{"sha": "ea6f9f9c5529bb3f222ccf95c75bc54609cd99b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhNmY5ZjljNTUyOWJiM2YyMjJjY2Y5NWM3NWJjNTQ2MDljZDk5Yjc=", "commit": {"author": {"name": "jD91mZM2", "email": "me@krake.one", "date": "2018-07-03T09:13:16Z"}, "committer": {"name": "jD91mZM2", "email": "me@krake.one", "date": "2018-07-03T09:13:16Z"}, "message": "Remove stability attributes on private types and leftover docs", "tree": {"sha": "a672f72140786f91248b6caeffb66f307e1611c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a672f72140786f91248b6caeffb66f307e1611c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea6f9f9c5529bb3f222ccf95c75bc54609cd99b7", "comment_count": 0, "verification": {"verified": false, "reason": "unverified_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEvF2uTsFosfm5TJhQMFXVRymnJmYFAls7Pi0ACgkQMFXVRymn\nJmZisAf7BBEiSsykLb5VcCkDL85uE9INGjDK1FfYaqXyXijUa4lbXTIxxEA6BlD7\ndDTZTn9DkZMJwCaHqg1LRTXo8oIphMlIm9Zb/AWRk+eCT5zDt0Adi5lMi55eIik1\nU6vzzDdCz35+b83uCJFbLCfUxyxOSpw7hVIC+bxFTCGx5ij26zJoh9TfrVe3Mk65\nFNGVIEYdCNqBoEMXpFiXd0whTw4ALU1zpy9IwLatZfK4mEkAH8fE2uiX2j2FipO2\nPWsGe0vws+bWDqqQxZyxjG2aC1SY3snvCvtBEZqXH/beFwJ71lIZ2FaM4X4JqW4b\n5XwFDkkWho16FDP5cTF0tQGmjf4STw==\n=qCzu\n-----END PGP SIGNATURE-----", "payload": "tree a672f72140786f91248b6caeffb66f307e1611c4\nparent c98631075748d19c1dce3768fdff9918e8f1492a\nauthor jD91mZM2 <me@krake.one> 1530609196 +0200\ncommitter jD91mZM2 <me@krake.one> 1530609196 +0200\n\nRemove stability attributes on private types and leftover docs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea6f9f9c5529bb3f222ccf95c75bc54609cd99b7", "html_url": "https://github.com/rust-lang/rust/commit/ea6f9f9c5529bb3f222ccf95c75bc54609cd99b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea6f9f9c5529bb3f222ccf95c75bc54609cd99b7/comments", "author": {"login": "jD91mZM2", "id": 12830969, "node_id": "MDQ6VXNlcjEyODMwOTY5", "avatar_url": "https://avatars.githubusercontent.com/u/12830969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jD91mZM2", "html_url": "https://github.com/jD91mZM2", "followers_url": "https://api.github.com/users/jD91mZM2/followers", "following_url": "https://api.github.com/users/jD91mZM2/following{/other_user}", "gists_url": "https://api.github.com/users/jD91mZM2/gists{/gist_id}", "starred_url": "https://api.github.com/users/jD91mZM2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jD91mZM2/subscriptions", "organizations_url": "https://api.github.com/users/jD91mZM2/orgs", "repos_url": "https://api.github.com/users/jD91mZM2/repos", "events_url": "https://api.github.com/users/jD91mZM2/events{/privacy}", "received_events_url": "https://api.github.com/users/jD91mZM2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jD91mZM2", "id": 12830969, "node_id": "MDQ6VXNlcjEyODMwOTY5", "avatar_url": "https://avatars.githubusercontent.com/u/12830969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jD91mZM2", "html_url": "https://github.com/jD91mZM2", "followers_url": "https://api.github.com/users/jD91mZM2/followers", "following_url": "https://api.github.com/users/jD91mZM2/following{/other_user}", "gists_url": "https://api.github.com/users/jD91mZM2/gists{/gist_id}", "starred_url": "https://api.github.com/users/jD91mZM2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jD91mZM2/subscriptions", "organizations_url": "https://api.github.com/users/jD91mZM2/orgs", "repos_url": "https://api.github.com/users/jD91mZM2/repos", "events_url": "https://api.github.com/users/jD91mZM2/events{/privacy}", "received_events_url": "https://api.github.com/users/jD91mZM2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c98631075748d19c1dce3768fdff9918e8f1492a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c98631075748d19c1dce3768fdff9918e8f1492a", "html_url": "https://github.com/rust-lang/rust/commit/c98631075748d19c1dce3768fdff9918e8f1492a"}], "stats": {"total": 18, "additions": 0, "deletions": 18}, "files": [{"sha": "5f7b2df89923a8a610d6762b6a8eaa554ca8735b", "filename": "src/libstd/sys/redox/ext/unixsocket.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea6f9f9c5529bb3f222ccf95c75bc54609cd99b7/src%2Flibstd%2Fsys%2Fredox%2Fext%2Funixsocket.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea6f9f9c5529bb3f222ccf95c75bc54609cd99b7/src%2Flibstd%2Fsys%2Fredox%2Fext%2Funixsocket.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fext%2Funixsocket.rs?ref=ea6f9f9c5529bb3f222ccf95c75bc54609cd99b7", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![stable(feature = \"unix_socket\", since = \"1.10.0\")]\n-\n use fmt;\n use io::{self, Error, ErrorKind, Initializer};\n use net::Shutdown;"}, {"sha": "ad2d7019cb8cee770398f553772eb520d844f77e", "filename": "src/libstd/sys/unix/ext/unixsocket.rs", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ea6f9f9c5529bb3f222ccf95c75bc54609cd99b7/src%2Flibstd%2Fsys%2Funix%2Fext%2Funixsocket.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea6f9f9c5529bb3f222ccf95c75bc54609cd99b7/src%2Flibstd%2Fsys%2Funix%2Fext%2Funixsocket.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fext%2Funixsocket.rs?ref=ea6f9f9c5529bb3f222ccf95c75bc54609cd99b7", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![stable(feature = \"unix_socket\", since = \"1.10.0\")]\n-\n //! Unix-specific networking functionality\n \n #[cfg(unix)]\n@@ -144,20 +142,6 @@ impl<'a> fmt::Display for AsciiEscaped<'a> {\n     }\n }\n \n-/// A Unix stream socket.\n-///\n-/// # Examples\n-///\n-/// ```no_run\n-/// use std::os::unix::net::UnixStream;\n-/// use std::io::prelude::*;\n-///\n-/// let mut stream = UnixStream::connect(\"/path/to/my/socket\").unwrap();\n-/// stream.write_all(b\"hello world\").unwrap();\n-/// let mut response = String::new();\n-/// stream.read_to_string(&mut response).unwrap();\n-/// println!(\"{}\", response);\n-/// ```\n #[stable(feature = \"unix_socket\", since = \"1.10.0\")]\n pub struct UnixStream(Socket);\n "}]}