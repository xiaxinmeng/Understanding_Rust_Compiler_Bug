{"sha": "434c3144050859359d00ab6b9e21151093b99db8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzNGMzMTQ0MDUwODU5MzU5ZDAwYWI2YjllMjExNTEwOTNiOTlkYjg=", "commit": {"author": {"name": "johnthagen", "email": "johnthagen@gmail.com", "date": "2016-11-05T22:21:17Z"}, "committer": {"name": "johnthagen", "email": "johnthagen@gmail.com", "date": "2016-11-05T22:21:17Z"}, "message": "Use From trait as an example usage of Self.", "tree": {"sha": "7387b19ee7ca063f39640a07878430b53a3efb6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7387b19ee7ca063f39640a07878430b53a3efb6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/434c3144050859359d00ab6b9e21151093b99db8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/434c3144050859359d00ab6b9e21151093b99db8", "html_url": "https://github.com/rust-lang/rust/commit/434c3144050859359d00ab6b9e21151093b99db8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/434c3144050859359d00ab6b9e21151093b99db8/comments", "author": {"login": "johnthagen", "id": 10340167, "node_id": "MDQ6VXNlcjEwMzQwMTY3", "avatar_url": "https://avatars.githubusercontent.com/u/10340167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnthagen", "html_url": "https://github.com/johnthagen", "followers_url": "https://api.github.com/users/johnthagen/followers", "following_url": "https://api.github.com/users/johnthagen/following{/other_user}", "gists_url": "https://api.github.com/users/johnthagen/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnthagen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnthagen/subscriptions", "organizations_url": "https://api.github.com/users/johnthagen/orgs", "repos_url": "https://api.github.com/users/johnthagen/repos", "events_url": "https://api.github.com/users/johnthagen/events{/privacy}", "received_events_url": "https://api.github.com/users/johnthagen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "johnthagen", "id": 10340167, "node_id": "MDQ6VXNlcjEwMzQwMTY3", "avatar_url": "https://avatars.githubusercontent.com/u/10340167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnthagen", "html_url": "https://github.com/johnthagen", "followers_url": "https://api.github.com/users/johnthagen/followers", "following_url": "https://api.github.com/users/johnthagen/following{/other_user}", "gists_url": "https://api.github.com/users/johnthagen/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnthagen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnthagen/subscriptions", "organizations_url": "https://api.github.com/users/johnthagen/orgs", "repos_url": "https://api.github.com/users/johnthagen/repos", "events_url": "https://api.github.com/users/johnthagen/events{/privacy}", "received_events_url": "https://api.github.com/users/johnthagen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac468b67bffc6c386dd04b7955eec013ef99dc39", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac468b67bffc6c386dd04b7955eec013ef99dc39", "html_url": "https://github.com/rust-lang/rust/commit/ac468b67bffc6c386dd04b7955eec013ef99dc39"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "f343aecddfad9a8f27b5411fc0e3206c41794f38", "filename": "src/doc/reference.md", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/434c3144050859359d00ab6b9e21151093b99db8/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/434c3144050859359d00ab6b9e21151093b99db8/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=434c3144050859359d00ab6b9e21151093b99db8", "patch": "@@ -3755,6 +3755,21 @@ The special type `Self` has a meaning within traits and impls. In a trait defini\n to an implicit type parameter representing the \"implementing\" type. In an impl,\n it is an alias for the implementing type. For example, in:\n \n+```\n+pub trait From<T> {\n+    fn from(T) -> Self;\n+}\n+\n+impl From<i32> for String {\n+    fn from(x: i32) -> Self {\n+        x.to_string()\n+    }\n+}\n+```\n+\n+The notation `Self` in the impl refers to the implementing type: `String`. In another \n+example:\n+\n ```\n trait Printable {\n     fn make_string(&self) -> String;"}]}