{"sha": "126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyNjU2MWNiMzFlOGViZTFlMmRkOWRmZDBkM2NhNjIxMzA4ZGM1NmY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-24T18:05:35Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-24T18:05:35Z"}, "message": "Auto merge of #85639 - GuillaumeGomez:rollup-modinsi, r=GuillaumeGomez\n\nRollup of 4 pull requests\n\nSuccessful merges:\n\n - #85271 (Fix indentation in move keyword documentation)\n - #85551 (Fix search results display)\n - #85621 (Restore sans-serif font for module items.)\n - #85628 (Replace more \"NULL\" with \"null\")\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "69c30c53a02c9ebb6eda076e7b432cce46e4654d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69c30c53a02c9ebb6eda076e7b432cce46e4654d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f", "html_url": "https://github.com/rust-lang/rust/commit/126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef0ec303fa5ff6fa5654c7ea94322f3f9881f6c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef0ec303fa5ff6fa5654c7ea94322f3f9881f6c2", "html_url": "https://github.com/rust-lang/rust/commit/ef0ec303fa5ff6fa5654c7ea94322f3f9881f6c2"}, {"sha": "16fe40d3a38a197e5a2677332d26a916f6133408", "url": "https://api.github.com/repos/rust-lang/rust/commits/16fe40d3a38a197e5a2677332d26a916f6133408", "html_url": "https://github.com/rust-lang/rust/commit/16fe40d3a38a197e5a2677332d26a916f6133408"}], "stats": {"total": 74, "additions": 57, "deletions": 17}, "files": [{"sha": "0aa4d0fe2cb6d5ad634aa7fe537033cccc7dfb4e", "filename": "compiler/rustc_mir_build/src/check_unsafety.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f/compiler%2Frustc_mir_build%2Fsrc%2Fcheck_unsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f/compiler%2Frustc_mir_build%2Fsrc%2Fcheck_unsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fcheck_unsafety.rs?ref=126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f", "patch": "@@ -296,7 +296,7 @@ impl UnsafeOpKind {\n             ),\n             DerefOfRawPointer => (\n                 \"dereference of raw pointer\",\n-                \"raw pointers may be NULL, dangling or unaligned; they can violate aliasing rules \\\n+                \"raw pointers may be null, dangling or unaligned; they can violate aliasing rules \\\n                  and cause data races: all of these are undefined behavior\",\n             ),\n             AssignToDroppingUnionField => ("}, {"sha": "ba2b8b6955d669068b151e9b673f6370893c5741", "filename": "library/std/src/keyword_docs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f/library%2Fstd%2Fsrc%2Fkeyword_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f/library%2Fstd%2Fsrc%2Fkeyword_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fkeyword_docs.rs?ref=126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f", "patch": "@@ -1008,9 +1008,9 @@ mod mod_keyword {}\n ///     move || println!(\"This is a: {}\", text)\n /// }\n ///\n-///     let fn_plain = create_fn();\n+/// let fn_plain = create_fn();\n ///\n-///     fn_plain();\n+/// fn_plain();\n /// ```\n ///\n /// `move` is often used when [threads] are involved."}, {"sha": "bd03ab85c2c669ae3b2735275126d1fbe8db9f59", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 33, "deletions": 5, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f", "patch": "@@ -145,6 +145,7 @@ h4.type.trait-impl, h4.associatedconstant.trait-impl, h4.associatedtype.trait-im\n \n h1, h2, h3, h4,\n .sidebar, a.source, .search-input, .search-results .result-name,\n+.content table td:first-child > a,\n div.item-list .out-of-band,\n #source-sidebar, #sidebar-toggle,\n details.rustdoc-toggle > summary::before,\n@@ -759,25 +760,40 @@ a {\n \n .search-results.active {\n \tdisplay: block;\n+\t/* prevent overhanging tabs from moving the first result */\n+\tclear: both;\n }\n \n-.search-results .desc {\n+.search-results .desc > span {\n \twhite-space: nowrap;\n \ttext-overflow: ellipsis;\n \toverflow: hidden;\n \tdisplay: block;\n }\n \n-.search-results a {\n+.search-results > a {\n+\tdisplay: block;\n+\twidth: 100%;\n \t/* A little margin ensures the browser's outlining of focused links has room to display. */\n \tmargin-left: 2px;\n \tmargin-right: 2px;\n-\tdisplay: block;\n+\tborder-bottom: 1px solid #aaa3;\n+}\n+\n+.search-results > a > div {\n+\tdisplay: flex;\n+\tflex-flow: row wrap;\n }\n \n-.result-name {\n+.search-results .result-name, .search-results div.desc, .search-results .result-description {\n \twidth: 50%;\n-\tfloat: left;\n+}\n+.search-results .result-name {\n+\tpadding-right: 1em;\n+}\n+\n+.search-results .result-name > span {\n+\tdisplay: inline-block;\n }\n \n .result-name span.primitive::after {\n@@ -1733,6 +1749,18 @@ details.undocumented[open] > summary::before {\n \t.search-container > div {\n \t\twidth: calc(100% - 32px);\n \t}\n+\n+\t/* Display an alternating layout on tablets and phones */\n+\t.search-results > a {\n+\t\tborder-bottom: 1px solid #aaa9;\n+\t\tpadding: 5px 0px;\n+\t}\n+\t.search-results .result-name, .search-results div.desc, .search-results .result-description {\n+\t\twidth: 100%;\n+\t}\n+\t.search-results div.desc, .search-results .result-description {\n+\t\tpadding-left: 2em;\n+\t}\n }\n \n @media print {"}, {"sha": "634e5fa57870828d634bad3cca9ea919f295ed00", "filename": "src/librustdoc/html/static/search.js", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsearch.js", "raw_url": "https://github.com/rust-lang/rust/raw/126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsearch.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsearch.js?ref=126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f", "patch": "@@ -994,8 +994,8 @@ window.initSearch = function(rawSearchIndex) {\n                            (\"<span class=\\\"alias\\\"><b>\" + item.alias + \" </b></span><span \" +\n                               \"class=\\\"grey\\\"><i>&nbsp;- see&nbsp;</i></span>\") : \"\") +\n                           item.displayPath + \"<span class=\\\"\" + type + \"\\\">\" +\n-                          name + \"</span></div><div>\" +\n-                          \"<span class=\\\"desc\\\">\" + item.desc +\n+                          name + \"</span></div><div class=\\\"desc\\\">\" +\n+                          \"<span>\" + item.desc +\n                           \"&nbsp;</span></div></div></a>\";\n             });\n             output += \"</div>\";"}, {"sha": "96d15c624f115e771b10dd6cd568b19ca795a1f0", "filename": "src/test/rustdoc-gui/search-result-display.goml", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f/src%2Ftest%2Frustdoc-gui%2Fsearch-result-display.goml", "raw_url": "https://github.com/rust-lang/rust/raw/126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f/src%2Ftest%2Frustdoc-gui%2Fsearch-result-display.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsearch-result-display.goml?ref=126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f", "patch": "@@ -0,0 +1,12 @@\n+goto: file://|DOC_PATH|/test_docs/index.html\n+size: (900, 1000)\n+write: (\".search-input\", \"test\")\n+// Waiting for the search results to appear...\n+wait-for: \"#titles\"\n+// The width is returned by \"getComputedStyle\" which returns the exact number instead of the\n+// CSS rule which is \"50%\"...\n+assert: (\".search-results div.desc\", {\"width\": \"320px\"})\n+size: (600, 100)\n+// As counter-intuitive as it may seem, in this width, the width is \"100%\", which is why\n+// when computed it's larger.\n+assert: (\".search-results div.desc\", {\"width\": \"570px\"})"}, {"sha": "10d768f19fc7283e973e648be0c1ff38e97d63b3", "filename": "src/test/ui/generator/issue-45729-unsafe-in-generator.thir.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f/src%2Ftest%2Fui%2Fgenerator%2Fissue-45729-unsafe-in-generator.thir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f/src%2Ftest%2Fui%2Fgenerator%2Fissue-45729-unsafe-in-generator.thir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fissue-45729-unsafe-in-generator.thir.stderr?ref=126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f", "patch": "@@ -4,7 +4,7 @@ error[E0133]: dereference of raw pointer is unsafe and requires unsafe function\n LL |         *(1 as *mut u32) = 42;\n    |         ^^^^^^^^^^^^^^^^ dereference of raw pointer\n    |\n-   = note: raw pointers may be NULL, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior\n+   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior\n \n error: aborting due to previous error\n "}, {"sha": "66a0cfcd710f034eb2ae7f88522af088583f802f", "filename": "src/test/ui/issues/issue-47412.thir.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f/src%2Ftest%2Fui%2Fissues%2Fissue-47412.thir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f/src%2Ftest%2Fui%2Fissues%2Fissue-47412.thir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-47412.thir.stderr?ref=126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f", "patch": "@@ -4,7 +4,7 @@ error[E0133]: dereference of raw pointer is unsafe and requires unsafe function\n LL |     match *ptr {}\n    |           ^^^^ dereference of raw pointer\n    |\n-   = note: raw pointers may be NULL, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior\n+   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior\n \n error: aborting due to previous error\n "}, {"sha": "23696c32bef57e8439510b918384f24fbd9434cb", "filename": "src/test/ui/traits/safety-fn-body.thir.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f/src%2Ftest%2Fui%2Ftraits%2Fsafety-fn-body.thir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f/src%2Ftest%2Fui%2Ftraits%2Fsafety-fn-body.thir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fsafety-fn-body.thir.stderr?ref=126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f", "patch": "@@ -4,7 +4,7 @@ error[E0133]: dereference of raw pointer is unsafe and requires unsafe function\n LL |         *self += 1;\n    |         ^^^^^ dereference of raw pointer\n    |\n-   = note: raw pointers may be NULL, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior\n+   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior\n \n error: aborting due to previous error\n "}, {"sha": "73a113652b8338b02f0388078f46b82beba22fca", "filename": "src/test/ui/unsafe/issue-45087-unreachable-unsafe.thir.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f/src%2Ftest%2Fui%2Funsafe%2Fissue-45087-unreachable-unsafe.thir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f/src%2Ftest%2Fui%2Funsafe%2Fissue-45087-unreachable-unsafe.thir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Fissue-45087-unreachable-unsafe.thir.stderr?ref=126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f", "patch": "@@ -4,7 +4,7 @@ error[E0133]: dereference of raw pointer is unsafe and requires unsafe function\n LL |     *(1 as *mut u32) = 42;\n    |     ^^^^^^^^^^^^^^^^ dereference of raw pointer\n    |\n-   = note: raw pointers may be NULL, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior\n+   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior\n \n error: aborting due to previous error\n "}, {"sha": "bbe4a415b5e55133f6252a8151e773178b37d606", "filename": "src/test/ui/unsafe/unsafe-fn-assign-deref-ptr.thir.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-assign-deref-ptr.thir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-assign-deref-ptr.thir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-assign-deref-ptr.thir.stderr?ref=126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f", "patch": "@@ -4,7 +4,7 @@ error[E0133]: dereference of raw pointer is unsafe and requires unsafe function\n LL |     *p = 0;\n    |     ^^ dereference of raw pointer\n    |\n-   = note: raw pointers may be NULL, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior\n+   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior\n \n error: aborting due to previous error\n "}, {"sha": "a26149924458cd0c786af2d8063c857d8ccab44e", "filename": "src/test/ui/unsafe/unsafe-fn-deref-ptr.thir.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-deref-ptr.thir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-deref-ptr.thir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-deref-ptr.thir.stderr?ref=126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f", "patch": "@@ -4,7 +4,7 @@ error[E0133]: dereference of raw pointer is unsafe and requires unsafe function\n LL |     return *p;\n    |            ^^ dereference of raw pointer\n    |\n-   = note: raw pointers may be NULL, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior\n+   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior\n \n error: aborting due to previous error\n "}, {"sha": "99808495ea6757b2c73ae47906ad28b227053e36", "filename": "src/test/ui/unsafe/unsafe-unstable-const-fn.thir.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f/src%2Ftest%2Fui%2Funsafe%2Funsafe-unstable-const-fn.thir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f/src%2Ftest%2Fui%2Funsafe%2Funsafe-unstable-const-fn.thir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Funsafe-unstable-const-fn.thir.stderr?ref=126561cb31e8ebe1e2dd9dfd0d3ca621308dc56f", "patch": "@@ -4,7 +4,7 @@ error[E0133]: dereference of raw pointer is unsafe and requires unsafe function\n LL |     *a == b\n    |     ^^ dereference of raw pointer\n    |\n-   = note: raw pointers may be NULL, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior\n+   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior\n \n error: aborting due to previous error\n "}]}