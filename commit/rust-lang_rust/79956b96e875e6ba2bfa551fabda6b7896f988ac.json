{"sha": "79956b96e875e6ba2bfa551fabda6b7896f988ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5OTU2Yjk2ZTg3NWU2YmEyYmZhNTUxZmFiZGE2Yjc4OTZmOTg4YWM=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-09-22T22:49:29Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-10-29T12:54:11Z"}, "message": "add sub settings in rustdoc", "tree": {"sha": "ddd9cf95f06b8aecb33449ae408c69ab925a9bb9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ddd9cf95f06b8aecb33449ae408c69ab925a9bb9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79956b96e875e6ba2bfa551fabda6b7896f988ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79956b96e875e6ba2bfa551fabda6b7896f988ac", "html_url": "https://github.com/rust-lang/rust/commit/79956b96e875e6ba2bfa551fabda6b7896f988ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79956b96e875e6ba2bfa551fabda6b7896f988ac/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf148a717a275741a35b5f51eab182aa42bd06a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf148a717a275741a35b5f51eab182aa42bd06a6", "html_url": "https://github.com/rust-lang/rust/commit/cf148a717a275741a35b5f51eab182aa42bd06a6"}], "stats": {"total": 151, "additions": 127, "deletions": 24}, "files": [{"sha": "0ad4e2d6ccd9eeb194c415539bed591e420c87e0", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 79, "deletions": 20, "changes": 99, "blob_url": "https://github.com/rust-lang/rust/blob/79956b96e875e6ba2bfa551fabda6b7896f988ac/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79956b96e875e6ba2bfa551fabda6b7896f988ac/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=79956b96e875e6ba2bfa551fabda6b7896f988ac", "patch": "@@ -1230,36 +1230,95 @@ impl AllTypes {\n     }\n }\n \n+#[derive(Debug)]\n+enum Setting {\n+    Section {\n+        description: &'static str,\n+        sub_settings: Vec<Setting>,\n+    },\n+    Entry {\n+        js_data_name: &'static str,\n+        description: &'static str,\n+        default_value: bool,\n+    }\n+}\n+\n+impl Setting {\n+    fn display(&self) -> String {\n+        match *self {\n+            Setting::Section { ref description, ref sub_settings } => {\n+                format!(\n+                    \"<div class='setting-line'>\\\n+                        <div class='title'>{}</div>\\\n+                        <div class='sub-setting'>{}</div>\n+                    </div>\",\n+                    description,\n+                    sub_settings.iter().map(|s| s.display()).collect::<String>()\n+                )\n+            }\n+            Setting::Entry { ref js_data_name, ref description, ref default_value } => {\n+                format!(\n+                    \"<div class='setting-line'>\\\n+                        <label class='toggle'>\\\n+                        <input type='checkbox' id='{}' {}>\\\n+                        <span class='slider'></span>\\\n+                        </label>\\\n+                        <div>{}</div>\\\n+                    </div>\",\n+                    js_data_name,\n+                    if *default_value { \" checked\" } else { \"\" },\n+                    description,\n+                )\n+            }\n+        }\n+    }\n+}\n+\n+impl From<(&'static str, &'static str, bool)> for Setting {\n+    fn from(values: (&'static str, &'static str, bool)) -> Setting {\n+        Setting::Entry {\n+            js_data_name: values.0,\n+            description: values.1,\n+            default_value: values.2,\n+        }\n+    }\n+}\n+\n+impl<T: Into<Setting>> From<(&'static str, Vec<T>)> for Setting {\n+    fn from(values: (&'static str, Vec<T>)) -> Setting {\n+        Setting::Section {\n+            description: values.0,\n+            sub_settings: values.1.into_iter().map(|v| v.into()).collect::<Vec<_>>(),\n+        }\n+    }\n+}\n+\n fn settings(root_path: &str, suffix: &str) -> String {\n     // (id, explanation, default value)\n-    let settings = [\n-        (\"item-declarations\", \"Auto-hide item declarations.\", true),\n-        (\"item-attributes\", \"Auto-hide item attributes.\", true),\n-        (\"trait-implementations\", \"Auto-hide trait implementations documentation\",\n-            true),\n-        (\"method-docs\", \"Auto-hide item methods' documentation\", false),\n+    let settings: &[Setting] = &[\n+        (\"Auto-hide item declarations\", vec![\n+            (\"auto-hide-struct\", \"Auto-hide structs declaration\", true),\n+            (\"auto-hide-enum\", \"Auto-hide enums declaration\", false),\n+            (\"auto-hide-union\", \"Auto-hide unions declaration\", true),\n+            (\"auto-hide-trait\", \"Auto-hide traits declaration\", true),\n+            (\"auto-hide-macro\", \"Auto-hide macros declaration\", false),\n+        ]).into(),\n+        (\"auto-hide-attributes\", \"Auto-hide item attributes.\", true).into(),\n+        (\"auto-hide-method-docs\", \"Auto-hide item methods' documentation\", false).into(),\n+        (\"auto-hide-trait-implementations\", \"Auto-hide trait implementations documentation\",\n+            true).into(),\n         (\"go-to-only-result\", \"Directly go to item in search if there is only one result\",\n-            false),\n-        (\"line-numbers\", \"Show line numbers on code examples\", false),\n-        (\"disable-shortcuts\", \"Disable keyboard shortcuts\", false),\n+            false).into(),\n+        (\"line-numbers\", \"Show line numbers on code examples\", false).into(),\n+        (\"disable-shortcuts\", \"Disable keyboard shortcuts\", false).into(),\n     ];\n     format!(\n \"<h1 class='fqn'>\\\n     <span class='in-band'>Rustdoc settings</span>\\\n </h1>\\\n <div class='settings'>{}</div>\\\n <script src='{}settings{}.js'></script>\",\n-            settings.iter()\n-                        .map(|(id, text, enabled)| {\n-                            format!(\"<div class='setting-line'>\\\n-                                            <label class='toggle'>\\\n-                                            <input type='checkbox' id='{}' {}>\\\n-                                            <span class='slider'></span>\\\n-                                            </label>\\\n-                                            <div>{}</div>\\\n-                                        </div>\", id, if *enabled { \" checked\" } else { \"\" }, text)\n-                        })\n-                        .collect::<String>(),\n+            settings.iter().map(|s| s.display()).collect::<String>(),\n             root_path,\n             suffix)\n }"}, {"sha": "65410a99e181e05b21403ae4ffce620ffcd417cd", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 28, "deletions": 4, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/79956b96e875e6ba2bfa551fabda6b7896f988ac/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/79956b96e875e6ba2bfa551fabda6b7896f988ac/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=79956b96e875e6ba2bfa551fabda6b7896f988ac", "patch": "@@ -2102,7 +2102,7 @@ function getSearchElement() {\n     function autoCollapse(pageId, collapse) {\n         if (collapse) {\n             toggleAllDocs(pageId, true);\n-        } else if (getCurrentValue(\"rustdoc-trait-implementations\") !== \"false\") {\n+        } else if (getCurrentValue(\"rustdoc-auto-hide-trait-implementations\") !== \"false\") {\n             var impl_list = document.getElementById(\"implementations-list\");\n \n             if (impl_list !== null) {\n@@ -2140,7 +2140,7 @@ function getSearchElement() {\n     }\n \n     var toggle = createSimpleToggle(false);\n-    var hideMethodDocs = getCurrentValue(\"rustdoc-method-docs\") === \"true\";\n+    var hideMethodDocs = getCurrentValue(\"rustdoc-auto-hide-method-docs\") === \"true\";\n     var pageId = getPageId();\n \n     var func = function(e) {\n@@ -2270,7 +2270,31 @@ function getSearchElement() {\n         return wrapper;\n     }\n \n-    var showItemDeclarations = getCurrentValue(\"rustdoc-item-declarations\") === \"false\";\n+    var currentType = document.getElementsByClassName(\"type-decl\")[0];\n+    var className = null;\n+    if (currentType) {\n+        currentType = currentType.getElementsByClassName(\"rust\")[0];\n+        if (currentType) {\n+            currentType.classList.forEach(function(item) {\n+                if (item !== \"main\") {\n+                    className = item;\n+                    return true;\n+                }\n+            });\n+        }\n+    }\n+    var showItemDeclarations = getCurrentValue(\"rustdoc-auto-hide-\" + className);\n+    if (showItemDeclarations === null) {\n+        if (className === \"enum\" || className === \"macro\") {\n+            showItemDeclarations = \"false\";\n+        } else if (className === \"struct\" || className === \"union\" || className === \"trait\") {\n+            showItemDeclarations = \"true\";\n+        } else {\n+            // In case we found an unknown type, we just use the \"parent\" value.\n+            showItemDeclarations = getCurrentValue(\"rustdoc-auto-hide-declarations\");\n+        }\n+    }\n+    showItemDeclarations = showItemDeclarations === \"false\";\n     function buildToggleWrapper(e) {\n         if (hasClass(e, \"autohide\")) {\n             var wrap = e.previousElementSibling;\n@@ -2353,7 +2377,7 @@ function getSearchElement() {\n \n     // To avoid checking on \"rustdoc-item-attributes\" value on every loop...\n     var itemAttributesFunc = function() {};\n-    if (getCurrentValue(\"rustdoc-item-attributes\") !== \"false\") {\n+    if (getCurrentValue(\"rustdoc-auto-hide-attributes\") !== \"false\") {\n         itemAttributesFunc = function(x) {\n             collapseDocs(x.previousSibling.childNodes[0], \"toggle\");\n         };"}, {"sha": "c66c5d36360527b3b5f1748c792841912b84d2cf", "filename": "src/librustdoc/html/static/settings.css", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/79956b96e875e6ba2bfa551fabda6b7896f988ac/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsettings.css", "raw_url": "https://github.com/rust-lang/rust/raw/79956b96e875e6ba2bfa551fabda6b7896f988ac/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsettings.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsettings.css?ref=79956b96e875e6ba2bfa551fabda6b7896f988ac", "patch": "@@ -1,5 +1,6 @@\n .setting-line {\n \tpadding: 5px;\n+\tposition: relative;\n }\n \n .setting-line > div {\n@@ -10,6 +11,13 @@\n \tpadding-top: 2px;\n }\n \n+.setting-line > .title {\n+\tfont-size: 19px;\n+\twidth: 100%;\n+\tmax-width: none;\n+\tborder-bottom: 1px solid;\n+}\n+\n .toggle {\n \tposition: relative;\n \tdisplay: inline-block;\n@@ -59,3 +67,9 @@ input:checked + .slider:before {\n \t-ms-transform: translateX(19px);\n \ttransform: translateX(19px);\n }\n+\n+.setting-line > .sub-setting {\n+\tpadding-left: 42px;\n+\twidth: 100%;\n+\tdisplay: block;\n+}"}, {"sha": "a60d543a539369728d635d2a10814b056dc1f830", "filename": "src/librustdoc/html/static/themes/dark.css", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/79956b96e875e6ba2bfa551fabda6b7896f988ac/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "raw_url": "https://github.com/rust-lang/rust/raw/79956b96e875e6ba2bfa551fabda6b7896f988ac/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css?ref=79956b96e875e6ba2bfa551fabda6b7896f988ac", "patch": "@@ -425,3 +425,6 @@ div.files > a:hover, div.name:hover {\n div.files > .selected {\n \tbackground-color: #333;\n }\n+.setting-line > .title {\n+\tborder-bottom-color: #ddd;\n+}"}, {"sha": "351f027b942ff1868b21ba7ab17019fd765560cf", "filename": "src/librustdoc/html/static/themes/light.css", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/79956b96e875e6ba2bfa551fabda6b7896f988ac/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "raw_url": "https://github.com/rust-lang/rust/raw/79956b96e875e6ba2bfa551fabda6b7896f988ac/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css?ref=79956b96e875e6ba2bfa551fabda6b7896f988ac", "patch": "@@ -419,3 +419,6 @@ div.files > a:hover, div.name:hover {\n div.files > .selected {\n \tbackground-color: #fff;\n }\n+.setting-line > .title {\n+\tborder-bottom-color: #D5D5D5;\n+}"}]}