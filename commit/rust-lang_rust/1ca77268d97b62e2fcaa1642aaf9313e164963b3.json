{"sha": "1ca77268d97b62e2fcaa1642aaf9313e164963b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjYTc3MjY4ZDk3YjYyZTJmY2FhMTY0MmFhZjkzMTNlMTY0OTYzYjM=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-12-13T01:36:30Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-12-24T22:42:00Z"}, "message": "std: Change Any::move to never consume the object\n\nIf the dynamic cast fails, this now returns the ~Any instance back to the\ncaller.", "tree": {"sha": "750f69891c2e34dfe5a6b83c79bbd415a11ee785", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/750f69891c2e34dfe5a6b83c79bbd415a11ee785"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ca77268d97b62e2fcaa1642aaf9313e164963b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ca77268d97b62e2fcaa1642aaf9313e164963b3", "html_url": "https://github.com/rust-lang/rust/commit/1ca77268d97b62e2fcaa1642aaf9313e164963b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ca77268d97b62e2fcaa1642aaf9313e164963b3/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76270816d527bfceef64bf6cbdc64f985ca73eba", "url": "https://api.github.com/repos/rust-lang/rust/commits/76270816d527bfceef64bf6cbdc64f985ca73eba", "html_url": "https://github.com/rust-lang/rust/commit/76270816d527bfceef64bf6cbdc64f985ca73eba"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "49bae30a461c22bf42af8609c2e9e2136626ffe5", "filename": "src/libstd/any.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/1ca77268d97b62e2fcaa1642aaf9313e164963b3/src%2Flibstd%2Fany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ca77268d97b62e2fcaa1642aaf9313e164963b3/src%2Flibstd%2Fany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fany.rs?ref=1ca77268d97b62e2fcaa1642aaf9313e164963b3", "patch": "@@ -20,10 +20,11 @@\n \n use cast::transmute;\n use option::{Option, Some, None};\n+use result::{Result, Ok, Err};\n use to_str::ToStr;\n+use unstable::intrinsics::TypeId;\n use unstable::intrinsics;\n use util::Void;\n-use unstable::intrinsics::TypeId;\n \n ///////////////////////////////////////////////////////////////////////////////\n // Any trait\n@@ -119,12 +120,12 @@ impl<'a> AnyMutRefExt<'a> for &'a mut Any {\n pub trait AnyOwnExt {\n     /// Returns the boxed value if it is of type `T`, or\n     /// `None` if it isn't.\n-    fn move<T: 'static>(self) -> Option<~T>;\n+    fn move<T: 'static>(self) -> Result<~T, Self>;\n }\n \n impl AnyOwnExt for ~Any {\n     #[inline]\n-    fn move<T: 'static>(self) -> Option<~T> {\n+    fn move<T: 'static>(self) -> Result<~T, ~Any> {\n         if self.is::<T>() {\n             unsafe {\n                 // Extract the pointer to the boxed value, temporary alias with self\n@@ -133,10 +134,10 @@ impl AnyOwnExt for ~Any {\n                 // Prevent destructor on self being run\n                 intrinsics::forget(self);\n \n-                Some(ptr)\n+                Ok(ptr)\n             }\n         } else {\n-            None\n+            Err(self)\n         }\n     }\n }\n@@ -384,13 +385,13 @@ mod tests {\n         let a = ~8u as ~Any;\n         let b = ~Test as ~Any;\n \n-        assert_eq!(a.move(), Some(~8u));\n-        assert_eq!(b.move(), Some(~Test));\n+        assert_eq!(a.move(), Ok(~8u));\n+        assert_eq!(b.move(), Ok(~Test));\n \n         let a = ~8u as ~Any;\n         let b = ~Test as ~Any;\n \n-        assert_eq!(a.move(), None::<~Test>);\n-        assert_eq!(b.move(), None::<~uint>);\n+        assert!(a.move::<~Test>().is_err());\n+        assert!(b.move::<~uint>().is_err());\n     }\n }"}]}