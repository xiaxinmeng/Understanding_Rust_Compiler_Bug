{"sha": "a9c465ce1f1caaae58a31c57f665217ee58bb876", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5YzQ2NWNlMWYxY2FhYWU1OGEzMWM1N2Y2NjUyMTdlZTU4YmI4NzY=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-05-18T08:20:01Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-05-18T08:35:48Z"}, "message": "iterator: remove `first`\n\nit's the same as `next.unwrap()`, but there's no way to check the\nlength of an iterator so this isn't a good pattern", "tree": {"sha": "8c1d89c807ba21a3212de01b0f4e5971528d839e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c1d89c807ba21a3212de01b0f4e5971528d839e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9c465ce1f1caaae58a31c57f665217ee58bb876", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9c465ce1f1caaae58a31c57f665217ee58bb876", "html_url": "https://github.com/rust-lang/rust/commit/a9c465ce1f1caaae58a31c57f665217ee58bb876", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9c465ce1f1caaae58a31c57f665217ee58bb876/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac74bbec9327ef393041feb544d2468131e1759e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac74bbec9327ef393041feb544d2468131e1759e", "html_url": "https://github.com/rust-lang/rust/commit/ac74bbec9327ef393041feb544d2468131e1759e"}], "stats": {"total": 24, "additions": 0, "deletions": 24}, "files": [{"sha": "68281526e6f9420cb44871f22ffd971a9e7be6b9", "filename": "src/libcore/iterator.rs", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a9c465ce1f1caaae58a31c57f665217ee58bb876/src%2Flibcore%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9c465ce1f1caaae58a31c57f665217ee58bb876/src%2Flibcore%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiterator.rs?ref=a9c465ce1f1caaae58a31c57f665217ee58bb876", "patch": "@@ -49,7 +49,6 @@ pub trait IteratorUtil<A> {\n     fn advance(&mut self, f: &fn(A) -> bool) -> bool;\n     fn to_vec(self) -> ~[A];\n     fn nth(&mut self, n: uint) -> A;\n-    fn first(&mut self) -> A;\n     fn last(&mut self) -> A;\n     fn fold<B>(&mut self, start: B, f: &fn(B, A) -> B) -> B;\n     fn count(&mut self) -> uint;\n@@ -168,15 +167,6 @@ impl<A, T: Iterator<A>> IteratorUtil<A> for T {\n         }\n     }\n \n-    // Get first elemet of an iterator.\n-    #[inline(always)]\n-    fn first(&mut self) -> A {\n-        match self.next() {\n-            Some(x) => x ,\n-            None => fail!(\"cannot get first element\")\n-        }\n-    }\n-\n     // Get last element of an iterator.\n     //\n     // If the iterator have an infinite length, this method won't return.\n@@ -700,20 +690,6 @@ mod tests {\n         v.iter().nth(5);\n     }\n \n-    #[test]\n-    fn test_iterator_first() {\n-        let v = &[0, 1, 2, 3, 4];\n-        assert_eq!(v.iter().first(), &0);\n-        assert_eq!(v.slice(2, 5).iter().first(), &2);\n-    }\n-\n-    #[test]\n-    #[should_fail]\n-    fn test_iterator_first_fail() {\n-        let v: &[uint] = &[];\n-        v.iter().first();\n-    }\n-\n     #[test]\n     fn test_iterator_last() {\n         let v = &[0, 1, 2, 3, 4];"}]}