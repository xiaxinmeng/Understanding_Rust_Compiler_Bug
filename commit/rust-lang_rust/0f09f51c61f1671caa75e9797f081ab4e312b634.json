{"sha": "0f09f51c61f1671caa75e9797f081ab4e312b634", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmMDlmNTFjNjFmMTY3MWNhYTc1ZTk3OTdmMDgxYWI0ZTMxMmI2MzQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-08-13T21:26:28Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-08-13T21:26:28Z"}, "message": "auto merge of #16438 : phi-gamma/rust/doc-fixes, r=brson\n\nFixes wording in the *runtime*, *testing* and *unsafe* guides.", "tree": {"sha": "9f4bac42c721324aa74f8dbf8426614beebea3ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f4bac42c721324aa74f8dbf8426614beebea3ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f09f51c61f1671caa75e9797f081ab4e312b634", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f09f51c61f1671caa75e9797f081ab4e312b634", "html_url": "https://github.com/rust-lang/rust/commit/0f09f51c61f1671caa75e9797f081ab4e312b634", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f09f51c61f1671caa75e9797f081ab4e312b634/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86ecfa491fcaf3dfbc8275fbda5c6e31841a1866", "url": "https://api.github.com/repos/rust-lang/rust/commits/86ecfa491fcaf3dfbc8275fbda5c6e31841a1866", "html_url": "https://github.com/rust-lang/rust/commit/86ecfa491fcaf3dfbc8275fbda5c6e31841a1866"}, {"sha": "061cdec5dfefc91ce2ad00cef1435ce9b7b1db74", "url": "https://api.github.com/repos/rust-lang/rust/commits/061cdec5dfefc91ce2ad00cef1435ce9b7b1db74", "html_url": "https://github.com/rust-lang/rust/commit/061cdec5dfefc91ce2ad00cef1435ce9b7b1db74"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "24b5834ef7c085fc6ffdf8f667b799063e783a2c", "filename": "src/doc/guide-runtime.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f09f51c61f1671caa75e9797f081ab4e312b634/src%2Fdoc%2Fguide-runtime.md", "raw_url": "https://github.com/rust-lang/rust/raw/0f09f51c61f1671caa75e9797f081ab4e312b634/src%2Fdoc%2Fguide-runtime.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide-runtime.md?ref=0f09f51c61f1671caa75e9797f081ab4e312b634", "patch": "@@ -128,7 +128,7 @@ itself, yet again implying that they are not defined in the standard library.\n The full complement of runtime features is defined by the [`Runtime`\n trait](std/rt/trait.Runtime.html) and the [`Task`\n struct](std/rt/task/struct.Task.html). A `Task` is constant among all runtime\n-implementations, but each runtime implements has its own implementation of the\n+implementations, but each runtime has its own implementation of the\n `Runtime` trait.\n \n The local `Task` stores the runtime value inside of itself, and then ownership"}, {"sha": "6fb198fbd2ba4053aa3a809cfe1f6cca975732bc", "filename": "src/doc/guide-testing.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f09f51c61f1671caa75e9797f081ab4e312b634/src%2Fdoc%2Fguide-testing.md", "raw_url": "https://github.com/rust-lang/rust/raw/0f09f51c61f1671caa75e9797f081ab4e312b634/src%2Fdoc%2Fguide-testing.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide-testing.md?ref=0f09f51c61f1671caa75e9797f081ab4e312b634", "patch": "@@ -198,7 +198,7 @@ per-iteration speed of.\n \n For benchmarks relating to processing/generating data, one can set the\n `bytes` field to the number of bytes consumed/produced in each\n-iteration; this will used to show the throughput of the benchmark.\n+iteration; this will be used to show the throughput of the benchmark.\n This must be the amount used in each iteration, *not* the total\n amount.\n "}, {"sha": "2ff63055480834843fa3444796c9431585c5a6ed", "filename": "src/doc/guide-unsafe.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f09f51c61f1671caa75e9797f081ab4e312b634/src%2Fdoc%2Fguide-unsafe.md", "raw_url": "https://github.com/rust-lang/rust/raw/0f09f51c61f1671caa75e9797f081ab4e312b634/src%2Fdoc%2Fguide-unsafe.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide-unsafe.md?ref=0f09f51c61f1671caa75e9797f081ab4e312b634", "patch": "@@ -137,7 +137,7 @@ explicitly with, respectively, `value as *const T` and `value as *mut T`).\n \n Going the opposite direction, from `*const` to a reference `&`, is not\n safe. A `&T` is always valid, and so, at a minimum, the raw pointer\n-`*const T` has to be a valid to a valid instance of type `T`. Furthermore,\n+`*const T` has to point to a valid instance of type `T`. Furthermore,\n the resulting pointer must satisfy the aliasing and mutability laws of\n references. The compiler assumes these properties are true for any\n references, no matter how they are created, and so any conversion from"}]}