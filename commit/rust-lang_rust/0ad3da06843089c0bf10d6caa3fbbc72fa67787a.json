{"sha": "0ad3da06843089c0bf10d6caa3fbbc72fa67787a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhZDNkYTA2ODQzMDg5YzBiZjEwZDZjYWEzZmJiYzcyZmE2Nzc4N2E=", "commit": {"author": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2020-08-11T13:47:45Z"}, "committer": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2020-08-31T08:36:50Z"}, "message": "Enable ASLR for windows-gnu", "tree": {"sha": "217be5eb725515807178a7d53dd6f732bfe724e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/217be5eb725515807178a7d53dd6f732bfe724e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ad3da06843089c0bf10d6caa3fbbc72fa67787a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ad3da06843089c0bf10d6caa3fbbc72fa67787a", "html_url": "https://github.com/rust-lang/rust/commit/0ad3da06843089c0bf10d6caa3fbbc72fa67787a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ad3da06843089c0bf10d6caa3fbbc72fa67787a/comments", "author": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ed5cb56b5e5cc216eb6820a44dd4f7ef65107b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ed5cb56b5e5cc216eb6820a44dd4f7ef65107b0", "html_url": "https://github.com/rust-lang/rust/commit/8ed5cb56b5e5cc216eb6820a44dd4f7ef65107b0"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "787ca28705ac3105cf0150b1a4006e720da95c56", "filename": "compiler/rustc_target/src/spec/windows_gnu_base.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0ad3da06843089c0bf10d6caa3fbbc72fa67787a/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwindows_gnu_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ad3da06843089c0bf10d6caa3fbbc72fa67787a/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwindows_gnu_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwindows_gnu_base.rs?ref=0ad3da06843089c0bf10d6caa3fbbc72fa67787a", "patch": "@@ -11,6 +11,10 @@ pub fn opts() -> TargetOptions {\n             \"-fno-use-linker-plugin\".to_string(),\n             // Always enable DEP (NX bit) when it is available\n             \"-Wl,--nxcompat\".to_string(),\n+            // Enable ASLR\n+            \"-Wl,--dynamicbase\".to_string(),\n+            // ASLR will rebase it anyway so leaving that option enabled only leads to confusion\n+            \"-Wl,--disable-auto-image-base\".to_string(),\n         ],\n     );\n "}, {"sha": "1c5b145a5086ce5b7838b12ca7cf706f72384303", "filename": "compiler/rustc_target/src/spec/x86_64_pc_windows_gnu.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0ad3da06843089c0bf10d6caa3fbbc72fa67787a/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_pc_windows_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ad3da06843089c0bf10d6caa3fbbc72fa67787a/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_pc_windows_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_pc_windows_gnu.rs?ref=0ad3da06843089c0bf10d6caa3fbbc72fa67787a", "patch": "@@ -3,7 +3,10 @@ use crate::spec::{LinkerFlavor, LldFlavor, Target, TargetResult};\n pub fn target() -> TargetResult {\n     let mut base = super::windows_gnu_base::opts();\n     base.cpu = \"x86-64\".to_string();\n-    base.pre_link_args.get_mut(&LinkerFlavor::Gcc).unwrap().push(\"-m64\".to_string());\n+    let gcc_pre_link_args = base.pre_link_args.get_mut(&LinkerFlavor::Gcc).unwrap();\n+    gcc_pre_link_args.push(\"-m64\".to_string());\n+    // Use high-entropy 64 bit address space for ASLR\n+    gcc_pre_link_args.push(\"-Wl,--high-entropy-va\".to_string());\n     base.pre_link_args\n         .insert(LinkerFlavor::Lld(LldFlavor::Ld), vec![\"-m\".to_string(), \"i386pep\".to_string()]);\n     base.max_atomic_width = Some(64);"}, {"sha": "31f20513c33b3bd56c9c463b7245b0c620343f20", "filename": "compiler/rustc_target/src/spec/x86_64_uwp_windows_gnu.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0ad3da06843089c0bf10d6caa3fbbc72fa67787a/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_uwp_windows_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ad3da06843089c0bf10d6caa3fbbc72fa67787a/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_uwp_windows_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_uwp_windows_gnu.rs?ref=0ad3da06843089c0bf10d6caa3fbbc72fa67787a", "patch": "@@ -3,7 +3,10 @@ use crate::spec::{LinkerFlavor, LldFlavor, Target, TargetResult};\n pub fn target() -> TargetResult {\n     let mut base = super::windows_uwp_gnu_base::opts();\n     base.cpu = \"x86-64\".to_string();\n-    base.pre_link_args.get_mut(&LinkerFlavor::Gcc).unwrap().push(\"-m64\".to_string());\n+    let gcc_pre_link_args = base.pre_link_args.get_mut(&LinkerFlavor::Gcc).unwrap();\n+    gcc_pre_link_args.push(\"-m64\".to_string());\n+    // Use high-entropy 64 bit address space for ASLR\n+    gcc_pre_link_args.push(\"-Wl,--high-entropy-va\".to_string());\n     base.pre_link_args\n         .insert(LinkerFlavor::Lld(LldFlavor::Ld), vec![\"-m\".to_string(), \"i386pep\".to_string()]);\n     base.max_atomic_width = Some(64);"}]}