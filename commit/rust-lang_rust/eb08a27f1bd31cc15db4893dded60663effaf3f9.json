{"sha": "eb08a27f1bd31cc15db4893dded60663effaf3f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViMDhhMjdmMWJkMzFjYzE1ZGI0ODkzZGRlZDYwNjYzZWZmYWYzZjk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-05-20T21:23:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-20T21:23:20Z"}, "message": "Merge #8902\n\n8902: fix: Fix code completion not inserting borrow text when client supports InsertAndReplace r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Tobias Wirth <lukastw97@gmail.com>", "tree": {"sha": "b0cbecf0f4fa7cacfe5faf1a761bcb6072873a8f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0cbecf0f4fa7cacfe5faf1a761bcb6072873a8f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb08a27f1bd31cc15db4893dded60663effaf3f9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgptNICRBK7hj4Ov3rIwAAS0AIAEqt6UfzSULAgT/Tz/Qt+8ht\nv4Mv0Ptuy8MJn2SKzc4n7gVw/f1Cqzrai/RtyqN/fI2Vt5ine8zfim1Lr+nWrKAK\nnRb6GneMBTi+hOLocZqsbXDhtgBhdOVjhGxIagt6ogbdKHfcqC+jXs4XFgi0VShj\nURjN0qZOu16oIUnk+zHoGAU4I2/9Hl+Nmu4Yg4DdK6GfWQPUKAr6DcjcvDUuVEGm\n1Cxb2nxTd2qNvuR3d0Zk19XPZrgnAiB+dVpxwmEoijg3ZulMqzBoZJSRibW7Mmtt\n32ndH1jlhKmCDxwBSCa18iuBmZ/aB3g8RN7J9YFAK8KNXY3xiS0TlqG8mqrVnMY=\n=/Kzs\n-----END PGP SIGNATURE-----\n", "payload": "tree b0cbecf0f4fa7cacfe5faf1a761bcb6072873a8f\nparent 8d713b3e462ce1ff5bdeebc5f2bb6f90310c69ac\nparent 6b0ac95df1be5a6423d4141710100f01b3f84b48\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1621545800 +0000\ncommitter GitHub <noreply@github.com> 1621545800 +0000\n\nMerge #8902\n\n8902: fix: Fix code completion not inserting borrow text when client supports InsertAndReplace r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Tobias Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb08a27f1bd31cc15db4893dded60663effaf3f9", "html_url": "https://github.com/rust-lang/rust/commit/eb08a27f1bd31cc15db4893dded60663effaf3f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb08a27f1bd31cc15db4893dded60663effaf3f9/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d713b3e462ce1ff5bdeebc5f2bb6f90310c69ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d713b3e462ce1ff5bdeebc5f2bb6f90310c69ac", "html_url": "https://github.com/rust-lang/rust/commit/8d713b3e462ce1ff5bdeebc5f2bb6f90310c69ac"}, {"sha": "6b0ac95df1be5a6423d4141710100f01b3f84b48", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b0ac95df1be5a6423d4141710100f01b3f84b48", "html_url": "https://github.com/rust-lang/rust/commit/6b0ac95df1be5a6423d4141710100f01b3f84b48"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "0a3a56773dd9e146329d7f4257deb8452c46f7b4", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/eb08a27f1bd31cc15db4893dded60663effaf3f9/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb08a27f1bd31cc15db4893dded60663effaf3f9/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=eb08a27f1bd31cc15db4893dded60663effaf3f9", "patch": "@@ -270,9 +270,12 @@ pub(crate) fn completion_item(\n             set_score(&mut lsp_item_with_ref, relevance);\n             lsp_item_with_ref.label =\n                 format!(\"&{}{}\", mutability.as_keyword_for_ref(), lsp_item_with_ref.label);\n-            if let Some(lsp_types::CompletionTextEdit::Edit(it)) = &mut lsp_item_with_ref.text_edit\n-            {\n-                it.new_text = format!(\"&{}{}\", mutability.as_keyword_for_ref(), it.new_text);\n+            if let Some(it) = &mut lsp_item_with_ref.text_edit {\n+                let new_text = match it {\n+                    lsp_types::CompletionTextEdit::Edit(it) => &mut it.new_text,\n+                    lsp_types::CompletionTextEdit::InsertAndReplace(it) => &mut it.new_text,\n+                };\n+                *new_text = format!(\"&{}{}\", mutability.as_keyword_for_ref(), new_text);\n             }\n             vec![lsp_item_with_ref, lsp_item]\n         }"}]}