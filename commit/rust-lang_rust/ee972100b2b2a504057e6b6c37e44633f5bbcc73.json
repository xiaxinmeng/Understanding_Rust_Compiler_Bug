{"sha": "ee972100b2b2a504057e6b6c37e44633f5bbcc73", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlOTcyMTAwYjJiMmE1MDQwNTdlNmI2YzM3ZTQ0NjMzZjViYmNjNzM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-23T23:30:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-05-23T23:30:23Z"}, "message": "Rollup merge of #61082 - RalfJung:vec, r=alexcrichton\n\nfix dangling reference in Vec::append\n\nTurns out I forgot to enable Miri again for the Vec tests. And there was a dangling reference hiding in there!  `get_unchecked_mut` is UB to call on an empty vector (there is no memory to get a reference to), and yet this code did it.", "tree": {"sha": "41a604306ed684a1182090ab3f71f66b2f14cb81", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41a604306ed684a1182090ab3f71f66b2f14cb81"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee972100b2b2a504057e6b6c37e44633f5bbcc73", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc5y0PCRBK7hj4Ov3rIwAAdHIIABzAnRp1P0HMcqbhcDGs9Cm1\nVFCY1QBXPJtTiSfZicyI7qxSr9i4uolVz9RTqKq2bh3i8QlXTN3UoKTMbf94Pon5\nC4HUFtUiTUpNEzAowsz9jk5ggJDmAZOn4/yE8Xg45sNrdCW9Dt7T0gSIW8i7MMQo\nWayU8vuFR5hEd23GDeX/gcqmakTHaOVMBgJNZaw8ZZeCF2grzTioteQeyZuAkIm+\nHEWbBeG7MPMa7QP3PKEb/GRjIU5P/DA8EgV4aEuAARR0ERRAPQ9O+lVCqzGfTn8+\nkJ4tNnL6KVRAyUFDzcOry6x1u5Szq3/VPlYR14wN4fQTedDSsFr7m4RFlA82L6w=\n=naeD\n-----END PGP SIGNATURE-----\n", "payload": "tree 41a604306ed684a1182090ab3f71f66b2f14cb81\nparent 26f3528434cad89e5bd9fdb4b35ac260c472b740\nparent f44b264447f0d1b42676e7ea99a04d140749f65b\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1558654223 +0200\ncommitter GitHub <noreply@github.com> 1558654223 +0200\n\nRollup merge of #61082 - RalfJung:vec, r=alexcrichton\n\nfix dangling reference in Vec::append\n\nTurns out I forgot to enable Miri again for the Vec tests. And there was a dangling reference hiding in there!  `get_unchecked_mut` is UB to call on an empty vector (there is no memory to get a reference to), and yet this code did it.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee972100b2b2a504057e6b6c37e44633f5bbcc73", "html_url": "https://github.com/rust-lang/rust/commit/ee972100b2b2a504057e6b6c37e44633f5bbcc73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee972100b2b2a504057e6b6c37e44633f5bbcc73/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26f3528434cad89e5bd9fdb4b35ac260c472b740", "url": "https://api.github.com/repos/rust-lang/rust/commits/26f3528434cad89e5bd9fdb4b35ac260c472b740", "html_url": "https://github.com/rust-lang/rust/commit/26f3528434cad89e5bd9fdb4b35ac260c472b740"}, {"sha": "f44b264447f0d1b42676e7ea99a04d140749f65b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f44b264447f0d1b42676e7ea99a04d140749f65b", "html_url": "https://github.com/rust-lang/rust/commit/f44b264447f0d1b42676e7ea99a04d140749f65b"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "3307bdf94f98590a04463d631cdce47c6dca2da1", "filename": "src/liballoc/tests/vec.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ee972100b2b2a504057e6b6c37e44633f5bbcc73/src%2Fliballoc%2Ftests%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee972100b2b2a504057e6b6c37e44633f5bbcc73/src%2Fliballoc%2Ftests%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fvec.rs?ref=ee972100b2b2a504057e6b6c37e44633f5bbcc73", "patch": "@@ -1,5 +1,3 @@\n-#![cfg(not(miri))]\n-\n use std::borrow::Cow;\n use std::mem::size_of;\n use std::{usize, isize};\n@@ -763,6 +761,7 @@ fn from_into_inner() {\n     it.next().unwrap();\n     let vec = it.collect::<Vec<_>>();\n     assert_eq!(vec, [2, 3]);\n+    #[cfg(not(miri))] // Miri does not support comparing dangling pointers\n     assert!(ptr != vec.as_ptr());\n }\n \n@@ -971,6 +970,7 @@ fn test_reserve_exact() {\n }\n \n #[test]\n+#[cfg(not(miri))] // Miri does not support signalling OOM\n fn test_try_reserve() {\n \n     // These are the interesting cases:\n@@ -1073,6 +1073,7 @@ fn test_try_reserve() {\n }\n \n #[test]\n+#[cfg(not(miri))] // Miri does not support signalling OOM\n fn test_try_reserve_exact() {\n \n     // This is exactly the same as test_try_reserve with the method changed."}, {"sha": "dc661a267e2a621f84682065b3276ecd45008d56", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee972100b2b2a504057e6b6c37e44633f5bbcc73/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee972100b2b2a504057e6b6c37e44633f5bbcc73/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=ee972100b2b2a504057e6b6c37e44633f5bbcc73", "patch": "@@ -1094,7 +1094,7 @@ impl<T> Vec<T> {\n         let count = (*other).len();\n         self.reserve(count);\n         let len = self.len();\n-        ptr::copy_nonoverlapping(other as *const T, self.get_unchecked_mut(len), count);\n+        ptr::copy_nonoverlapping(other as *const T, self.as_mut_ptr().add(len), count);\n         self.len += count;\n     }\n "}]}