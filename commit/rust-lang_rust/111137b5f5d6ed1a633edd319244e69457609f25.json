{"sha": "111137b5f5d6ed1a633edd319244e69457609f25", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExMTEzN2I1ZjVkNmVkMWE2MzNlZGQzMTkyNDRlNjk0NTc2MDlmMjU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-03-02T05:39:55Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-03-09T21:17:26Z"}, "message": "mk: Optionally clean the destination when preparing install image", "tree": {"sha": "d7cd4505374fa3aed69786c041171a422fcc8509", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7cd4505374fa3aed69786c041171a422fcc8509"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/111137b5f5d6ed1a633edd319244e69457609f25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/111137b5f5d6ed1a633edd319244e69457609f25", "html_url": "https://github.com/rust-lang/rust/commit/111137b5f5d6ed1a633edd319244e69457609f25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/111137b5f5d6ed1a633edd319244e69457609f25/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8bc65f19ffdf31d0a322c3d6a57472689337889", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8bc65f19ffdf31d0a322c3d6a57472689337889", "html_url": "https://github.com/rust-lang/rust/commit/c8bc65f19ffdf31d0a322c3d6a57472689337889"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "59d78065eb819436e5fadcff9080a27051c2e0a7", "filename": "mk/prepare.mk", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/111137b5f5d6ed1a633edd319244e69457609f25/mk%2Fprepare.mk", "raw_url": "https://github.com/rust-lang/rust/raw/111137b5f5d6ed1a633edd319244e69457609f25/mk%2Fprepare.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fprepare.mk?ref=111137b5f5d6ed1a633edd319244e69457609f25", "patch": "@@ -106,7 +106,7 @@ prepare-host-tools: \\\n             $(foreach host,$(CFG_HOST),\\\n               prepare-host-tool-$(tool)-$(stage)-$(host))))\n \n-prepare-host-dirs:\n+prepare-host-dirs: prepare-maybe-clean\n \t$(call PREPARE_DIR,$(PREPARE_DEST_BIN_DIR))\n \t$(call PREPARE_DIR,$(PREPARE_DEST_LIB_DIR))\n \t$(call PREPARE_DIR,$(PREPARE_DEST_MAN_DIR))\n@@ -115,7 +115,8 @@ prepare-host-dirs:\n # $(2) is stage\n # $(3) is host\n define DEF_PREPARE_HOST_TOOL\n-prepare-host-tool-$(1)-$(2)-$(3): $$(foreach dep,$$(TOOL_DEPS_$(1)),prepare-host-lib-$$(dep)-$(2)-$(3)) \\\n+prepare-host-tool-$(1)-$(2)-$(3): prepare-maybe-clean \\\n+                                  $$(foreach dep,$$(TOOL_DEPS_$(1)),prepare-host-lib-$$(dep)-$(2)-$(3)) \\\n                                   $$(HBIN$(2)_H_$(3))/$(1)$$(X_$(3)) \\\n                                   prepare-host-dirs\n \t$$(if $$(findstring $(2), $$(PREPARE_STAGE)),\\\n@@ -140,7 +141,8 @@ $(foreach tool,$(PREPARE_TOOLS),\\\n define DEF_PREPARE_HOST_LIB\n prepare-host-lib-$(1)-$(2)-$(3): PREPARE_WORKING_SOURCE_LIB_DIR=$$(PREPARE_SOURCE_LIB_DIR)\n prepare-host-lib-$(1)-$(2)-$(3): PREPARE_WORKING_DEST_LIB_DIR=$$(PREPARE_DEST_LIB_DIR)\n-prepare-host-lib-$(1)-$(2)-$(3): $$(foreach dep,$$(RUST_DEPS_$(1)),prepare-host-lib-$$(dep)-$(2)-$(3))\\\n+prepare-host-lib-$(1)-$(2)-$(3): prepare-maybe-clean \\\n+                                 $$(foreach dep,$$(RUST_DEPS_$(1)),prepare-host-lib-$$(dep)-$(2)-$(3))\\\n                                  $$(HLIB$(2)_H_$(3))/stamp.$(1) \\\n                                  prepare-host-dirs\n \t$$(if $$(findstring $(2), $$(PREPARE_STAGE)),\\\n@@ -166,7 +168,7 @@ define DEF_PREPARE_TARGET_N\n # Rebind PREPARE_*_LIB_DIR to point to rustlib, then install the libs for the targets\n prepare-target-$(2)-host-$(3)-$(1): PREPARE_WORKING_SOURCE_LIB_DIR=$$(PREPARE_SOURCE_LIB_DIR)/$$(CFG_RUSTLIBDIR)/$(2)/lib\n prepare-target-$(2)-host-$(3)-$(1): PREPARE_WORKING_DEST_LIB_DIR=$$(PREPARE_DEST_LIB_DIR)/$$(CFG_RUSTLIBDIR)/$(2)/lib\n-prepare-target-$(2)-host-$(3)-$(1): \\\n+prepare-target-$(2)-host-$(3)-$(1): prepare-maybe-clean \\\n         $$(foreach crate,$$(TARGET_CRATES), \\\n           $$(TLIB$(1)_T_$(2)_H_$(3))/stamp.$$(crate)) \\\n         $$(if $$(findstring $(2),$$(CFG_HOST)), \\\n@@ -194,3 +196,9 @@ $(foreach host,$(CFG_HOST),\\\n   $(foreach target,$(CFG_TARGET), \\\n     $(foreach stage,$(PREPARE_STAGES),\\\n       $(eval $(call DEF_PREPARE_TARGET_N,$(stage),$(target),$(host))))))\n+\n+prepare-maybe-clean:\n+\t$(if $(findstring true,$(PREPARE_CLEAN)),\\\n+      @$(call E, cleaning destination $@),)\n+\t$(if $(findstring true,$(PREPARE_CLEAN)),\\\n+      $(Q)rm -r $(PREPARE_DEST_DIR),)"}]}