{"sha": "5a2ebdddccb7d7a0fd344dcb07619c908601cdbc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhMmViZGRkY2NiN2Q3YTBmZDM0NGRjYjA3NjE5YzkwODYwMWNkYmM=", "commit": {"author": {"name": "St\u00e9phane Campinas", "email": "stephane.campinas@gmail.com", "date": "2018-11-05T19:22:06Z"}, "committer": {"name": "St\u00e9phane Campinas", "email": "stephane.campinas@gmail.com", "date": "2018-11-05T19:22:06Z"}, "message": "trim the start of a line when wrapping an item in preparation for formatting", "tree": {"sha": "0016550dc0e7ec9d1b33a74217ea33b9e578a293", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0016550dc0e7ec9d1b33a74217ea33b9e578a293"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a2ebdddccb7d7a0fd344dcb07619c908601cdbc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEipi5pnt+pUplKNfibVYg2QghATMFAlvgmKgACgkQbVYg2Qgh\nATMEYwf+OctiDJBg/boez+SmXJHXpTXrBwhuusvayyXfy2OYPRKtR3oqeBr0dHnV\nsUQ8rurdi7bmsM0F2yootXBd9LPN9FrsTTZSs6IFQ950324CToCnJHAvKQpGXlvW\nrUMKcU6DnWSYvH0CRgpPsUDkD2WwndvXh5qt6x45cZVTYFQ3ubm1ztT4T3Pi3IJE\nm76hlqOQVJIX0ZGx4UaBIpq4x8qK3eQ2AkwFRzfqpg3WRdPnBW3JCT6MYszyeh8z\nivcBIAtnxZcymNsZ4NiWd9diR52OZKCZViDh9UhjoKAmcmt9wvpnp0i8rF3AmYOW\nB7tlePCc7LbJ3b8jwNdtd+rEdiRJxw==\n=yimN\n-----END PGP SIGNATURE-----", "payload": "tree 0016550dc0e7ec9d1b33a74217ea33b9e578a293\nparent 2a34414b4753b5570cd76de2e8f408c6266e90de\nauthor St\u00e9phane Campinas <stephane.campinas@gmail.com> 1541445726 +0100\ncommitter St\u00e9phane Campinas <stephane.campinas@gmail.com> 1541445726 +0100\n\ntrim the start of a line when wrapping an item in preparation for formatting\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a2ebdddccb7d7a0fd344dcb07619c908601cdbc", "html_url": "https://github.com/rust-lang/rust/commit/5a2ebdddccb7d7a0fd344dcb07619c908601cdbc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a2ebdddccb7d7a0fd344dcb07619c908601cdbc/comments", "author": {"login": "scampi", "id": 795879, "node_id": "MDQ6VXNlcjc5NTg3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/795879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scampi", "html_url": "https://github.com/scampi", "followers_url": "https://api.github.com/users/scampi/followers", "following_url": "https://api.github.com/users/scampi/following{/other_user}", "gists_url": "https://api.github.com/users/scampi/gists{/gist_id}", "starred_url": "https://api.github.com/users/scampi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scampi/subscriptions", "organizations_url": "https://api.github.com/users/scampi/orgs", "repos_url": "https://api.github.com/users/scampi/repos", "events_url": "https://api.github.com/users/scampi/events{/privacy}", "received_events_url": "https://api.github.com/users/scampi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scampi", "id": 795879, "node_id": "MDQ6VXNlcjc5NTg3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/795879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scampi", "html_url": "https://github.com/scampi", "followers_url": "https://api.github.com/users/scampi/followers", "following_url": "https://api.github.com/users/scampi/following{/other_user}", "gists_url": "https://api.github.com/users/scampi/gists{/gist_id}", "starred_url": "https://api.github.com/users/scampi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scampi/subscriptions", "organizations_url": "https://api.github.com/users/scampi/orgs", "repos_url": "https://api.github.com/users/scampi/repos", "events_url": "https://api.github.com/users/scampi/events{/privacy}", "received_events_url": "https://api.github.com/users/scampi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a34414b4753b5570cd76de2e8f408c6266e90de", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a34414b4753b5570cd76de2e8f408c6266e90de", "html_url": "https://github.com/rust-lang/rust/commit/2a34414b4753b5570cd76de2e8f408c6266e90de"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "db5102a3755ea069b16fb5754826221db32236de", "filename": "src/comment.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a2ebdddccb7d7a0fd344dcb07619c908601cdbc/src%2Fcomment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a2ebdddccb7d7a0fd344dcb07619c908601cdbc/src%2Fcomment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomment.rs?ref=5a2ebdddccb7d7a0fd344dcb07619c908601cdbc", "patch": "@@ -398,7 +398,7 @@ impl CodeBlockAttribute {\n /// Block that is formatted as an item.\n ///\n /// An item starts with either a star `*` or a dash `-`. Different level of indentation are\n-/// handled.\n+/// handled by shrinking the shape accordingly.\n struct ItemizedBlock {\n     /// the number of whitespaces up to the item sigil\n     indent: usize,\n@@ -585,7 +585,7 @@ impl<'a> CommentRewrite<'a> {\n \n         if let Some(ref ib) = self.item_block {\n             if ib.in_block(&line) {\n-                self.item_block_buffer.push_str(&line);\n+                self.item_block_buffer.push_str(line.trim_start());\n                 self.item_block_buffer.push('\\n');\n                 return false;\n             }"}, {"sha": "2836ce97cf8de768aa87836ae7517c964eb40b3c", "filename": "tests/source/issue-3153.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5a2ebdddccb7d7a0fd344dcb07619c908601cdbc/tests%2Fsource%2Fissue-3153.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a2ebdddccb7d7a0fd344dcb07619c908601cdbc/tests%2Fsource%2Fissue-3153.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-3153.rs?ref=5a2ebdddccb7d7a0fd344dcb07619c908601cdbc", "patch": "@@ -0,0 +1,9 @@\n+// rustfmt-wrap_comments: true\n+\n+/// This may panic if:\n+/// - there are fewer than `max_header_bytes` bytes preceding the body\n+/// - there are fewer than `max_footer_bytes` bytes following the body\n+/// - the sum of the body bytes and post-body bytes is less than the sum\n+///   of `min_body_and_padding_bytes` and `max_footer_bytes` (in other\n+///   words, the minimum body and padding byte requirement is not met)\n+fn foo() {}"}, {"sha": "39e569c0d5430da7f6e4fa6ea4ad5d088e880d6c", "filename": "tests/target/issue-3153.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5a2ebdddccb7d7a0fd344dcb07619c908601cdbc/tests%2Ftarget%2Fissue-3153.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a2ebdddccb7d7a0fd344dcb07619c908601cdbc/tests%2Ftarget%2Fissue-3153.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-3153.rs?ref=5a2ebdddccb7d7a0fd344dcb07619c908601cdbc", "patch": "@@ -0,0 +1,9 @@\n+// rustfmt-wrap_comments: true\n+\n+/// This may panic if:\n+/// - there are fewer than `max_header_bytes` bytes preceding the body\n+/// - there are fewer than `max_footer_bytes` bytes following the body\n+/// - the sum of the body bytes and post-body bytes is less than the sum of\n+///   `min_body_and_padding_bytes` and `max_footer_bytes` (in other words, the\n+///   minimum body and padding byte requirement is not met)\n+fn foo() {}"}]}