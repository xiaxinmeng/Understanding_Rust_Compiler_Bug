{"sha": "3f675ab038cfd82550fe54b7d659f26753987d34", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmNjc1YWIwMzhjZmQ4MjU1MGZlNTRiN2Q2NTlmMjY3NTM5ODdkMzQ=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-03-08T01:20:58Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-01T22:10:57Z"}, "message": "Drive-by comment fixes\n\nCo-Authored-By: Gabriel Smith <yodaldevoid@users.noreply.github.com>", "tree": {"sha": "a271ef3d21311dca88e83796c2a180abfa56898c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a271ef3d21311dca88e83796c2a180abfa56898c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f675ab038cfd82550fe54b7d659f26753987d34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f675ab038cfd82550fe54b7d659f26753987d34", "html_url": "https://github.com/rust-lang/rust/commit/3f675ab038cfd82550fe54b7d659f26753987d34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f675ab038cfd82550fe54b7d659f26753987d34/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d113ff8ada02d4ea253d78b77186637a7d7344bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/d113ff8ada02d4ea253d78b77186637a7d7344bb", "html_url": "https://github.com/rust-lang/rust/commit/d113ff8ada02d4ea253d78b77186637a7d7344bb"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "88933312b0d40d9ccb9a08019ab68d656f838529", "filename": "src/librustc/infer/type_variable.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3f675ab038cfd82550fe54b7d659f26753987d34/src%2Flibrustc%2Finfer%2Ftype_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f675ab038cfd82550fe54b7d659f26753987d34/src%2Flibrustc%2Finfer%2Ftype_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ftype_variable.rs?ref=3f675ab038cfd82550fe54b7d659f26753987d34", "patch": "@@ -17,7 +17,7 @@ pub struct TypeVariableTable<'tcx> {\n     /// the known value.\n     eq_relations: ut::UnificationTable<ut::InPlace<TyVidEqKey<'tcx>>>,\n \n-    /// Two variables are unified in `eq_relations` when we have a\n+    /// Two variables are unified in `sub_relations` when we have a\n     /// constraint `?X <: ?Y` *or* a constraint `?Y <: ?X`. This second\n     /// table exists only to help with the occurs check. In particular,\n     /// we want to report constraints like these as an occurs check\n@@ -365,7 +365,7 @@ impl sv::SnapshotVecDelegate for Delegate {\n \n     fn reverse(_values: &mut Vec<TypeVariableData>, _action: Instantiate) {\n         // We don't actually have to *do* anything to reverse an\n-        // instanation; the value for a variable is stored in the\n+        // instantiation; the value for a variable is stored in the\n         // `eq_relations` and hence its rollback code will handle\n         // it. In fact, we could *almost* just remove the\n         // `SnapshotVec` entirely, except that we would have to"}, {"sha": "208c553aa327f82b82b60863c9daa15eadb9aece", "filename": "src/librustc/infer/unify_key.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3f675ab038cfd82550fe54b7d659f26753987d34/src%2Flibrustc%2Finfer%2Funify_key.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f675ab038cfd82550fe54b7d659f26753987d34/src%2Flibrustc%2Finfer%2Funify_key.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Funify_key.rs?ref=3f675ab038cfd82550fe54b7d659f26753987d34", "patch": "@@ -12,8 +12,7 @@ impl UnifyKey for ty::IntVid {\n     fn tag() -> &'static str { \"IntVid\" }\n }\n \n-impl EqUnifyValue for IntVarValue {\n-}\n+impl EqUnifyValue for IntVarValue {}\n \n #[derive(PartialEq, Copy, Clone, Debug)]\n pub struct RegionVidKey {\n@@ -62,8 +61,7 @@ impl UnifyKey for ty::FloatVid {\n     fn tag() -> &'static str { \"FloatVid\" }\n }\n \n-impl EqUnifyValue for FloatVarValue {\n-}\n+impl EqUnifyValue for FloatVarValue {}\n \n impl ToType for FloatVarValue {\n     fn to_type<'a, 'gcx, 'tcx>(&self, tcx: TyCtxt<'a, 'gcx, 'tcx>) -> Ty<'tcx> {"}]}