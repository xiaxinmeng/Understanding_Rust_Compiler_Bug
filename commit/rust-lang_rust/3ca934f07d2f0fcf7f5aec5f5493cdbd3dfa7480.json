{"sha": "3ca934f07d2f0fcf7f5aec5f5493cdbd3dfa7480", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjYTkzNGYwN2QyZjBmY2Y3ZjVhZWM1ZjU0OTNjZGJkM2RmYTc0ODA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-30T21:32:25Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-07-06T08:07:22Z"}, "message": "gen_random: use check_ptr_access", "tree": {"sha": "27f073794ab5475183638610e6186092e9f81be5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27f073794ab5475183638610e6186092e9f81be5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ca934f07d2f0fcf7f5aec5f5493cdbd3dfa7480", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ca934f07d2f0fcf7f5aec5f5493cdbd3dfa7480", "html_url": "https://github.com/rust-lang/rust/commit/3ca934f07d2f0fcf7f5aec5f5493cdbd3dfa7480", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ca934f07d2f0fcf7f5aec5f5493cdbd3dfa7480/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8093a59ffb0318ab315a6386cfe76e6a595a313e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8093a59ffb0318ab315a6386cfe76e6a595a313e", "html_url": "https://github.com/rust-lang/rust/commit/8093a59ffb0318ab315a6386cfe76e6a595a313e"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "b9fa7bc2a77a4951f35ad11969e84fe507b2b526", "filename": "src/helpers.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3ca934f07d2f0fcf7f5aec5f5493cdbd3dfa7480/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ca934f07d2f0fcf7f5aec5f5493cdbd3dfa7480/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=3ca934f07d2f0fcf7f5aec5f5493cdbd3dfa7480", "patch": "@@ -1,6 +1,6 @@\n use std::mem;\n \n-use rustc::ty::{self, layout::{self, Size}};\n+use rustc::ty::{self, layout::{self, Size, Align}};\n use rustc::hir::def_id::{DefId, CRATE_DEF_INDEX};\n \n use rand::RngCore;\n@@ -71,14 +71,14 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n     fn gen_random(\n         &mut self,\n         len: usize,\n-        dest: Scalar<Tag>,\n+        ptr: Scalar<Tag>,\n     ) -> InterpResult<'tcx>  {\n-        if len == 0 {\n-            // Nothing to do\n-            return Ok(());\n-        }\n         let this = self.eval_context_mut();\n-        let ptr = dest.to_ptr()?;\n+\n+        let ptr = match this.memory().check_ptr_access(ptr, Size::from_bytes(len as u64), Align::from_bytes(1).unwrap())? {\n+            Some(ptr) => ptr,\n+            None => return Ok(()), // zero-sized access\n+        };\n \n         let data = match &mut this.memory_mut().extra.rng {\n             Some(rng) => {"}]}