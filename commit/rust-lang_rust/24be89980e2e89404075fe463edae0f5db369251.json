{"sha": "24be89980e2e89404075fe463edae0f5db369251", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0YmU4OTk4MGUyZTg5NDA0MDc1ZmU0NjNlZGFlMGY1ZGIzNjkyNTE=", "commit": {"author": {"name": "Marco A L Barbosa", "email": "malbarbo@gmail.com", "date": "2017-03-25T20:15:26Z"}, "committer": {"name": "Marco A L Barbosa", "email": "malbarbo@gmail.com", "date": "2017-03-25T20:15:26Z"}, "message": "Avoid using libc::sigemptyset on Android", "tree": {"sha": "9ffba5beb97597bbf80ece0d8dba103690e5cad7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ffba5beb97597bbf80ece0d8dba103690e5cad7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24be89980e2e89404075fe463edae0f5db369251", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24be89980e2e89404075fe463edae0f5db369251", "html_url": "https://github.com/rust-lang/rust/commit/24be89980e2e89404075fe463edae0f5db369251", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24be89980e2e89404075fe463edae0f5db369251/comments", "author": {"login": "malbarbo", "id": 1678126, "node_id": "MDQ6VXNlcjE2NzgxMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1678126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malbarbo", "html_url": "https://github.com/malbarbo", "followers_url": "https://api.github.com/users/malbarbo/followers", "following_url": "https://api.github.com/users/malbarbo/following{/other_user}", "gists_url": "https://api.github.com/users/malbarbo/gists{/gist_id}", "starred_url": "https://api.github.com/users/malbarbo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malbarbo/subscriptions", "organizations_url": "https://api.github.com/users/malbarbo/orgs", "repos_url": "https://api.github.com/users/malbarbo/repos", "events_url": "https://api.github.com/users/malbarbo/events{/privacy}", "received_events_url": "https://api.github.com/users/malbarbo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "malbarbo", "id": 1678126, "node_id": "MDQ6VXNlcjE2NzgxMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1678126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malbarbo", "html_url": "https://github.com/malbarbo", "followers_url": "https://api.github.com/users/malbarbo/followers", "following_url": "https://api.github.com/users/malbarbo/following{/other_user}", "gists_url": "https://api.github.com/users/malbarbo/gists{/gist_id}", "starred_url": "https://api.github.com/users/malbarbo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malbarbo/subscriptions", "organizations_url": "https://api.github.com/users/malbarbo/orgs", "repos_url": "https://api.github.com/users/malbarbo/repos", "events_url": "https://api.github.com/users/malbarbo/events{/privacy}", "received_events_url": "https://api.github.com/users/malbarbo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b45c631382a0bb831dc038973288e3f6d91cb07a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b45c631382a0bb831dc038973288e3f6d91cb07a", "html_url": "https://github.com/rust-lang/rust/commit/b45c631382a0bb831dc038973288e3f6d91cb07a"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "e9f41009064ca43ea267861b2bfe76cc8fd64718", "filename": "src/libstd/sys/unix/process/process_common.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/24be89980e2e89404075fe463edae0f5db369251/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_common.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24be89980e2e89404075fe463edae0f5db369251/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_common.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_common.rs?ref=24be89980e2e89404075fe463edae0f5db369251", "patch": "@@ -417,12 +417,26 @@ mod tests {\n         }\n     }\n \n+    // Android with api less than 21 define sig* functions inline, so it is not\n+    // available for dynamic link. Implementing sigemptyset and sigaddset allow us\n+    // to support older Android version (independent of libc version).\n+    // The following implementations are based on https://git.io/vSkNf\n+\n     #[cfg(not(target_os = \"android\"))]\n     extern {\n+        #[cfg_attr(target_os = \"netbsd\", link_name = \"__sigemptyset14\")]\n+        fn sigemptyset(set: *mut libc::sigset_t) -> libc::c_int;\n+\n         #[cfg_attr(target_os = \"netbsd\", link_name = \"__sigaddset14\")]\n         fn sigaddset(set: *mut libc::sigset_t, signum: libc::c_int) -> libc::c_int;\n     }\n \n+    #[cfg(target_os = \"android\")]\n+    unsafe fn sigemptyset(set: *mut libc::sigset_t) -> libc::c_int {\n+        libc::memset(set as *mut _, 0, mem::size_of::<libc::sigset_t>());\n+        return 0;\n+    }\n+\n     #[cfg(target_os = \"android\")]\n     unsafe fn sigaddset(set: *mut libc::sigset_t, signum: libc::c_int) -> libc::c_int {\n         use slice;\n@@ -450,7 +464,7 @@ mod tests {\n \n             let mut set: libc::sigset_t = mem::uninitialized();\n             let mut old_set: libc::sigset_t = mem::uninitialized();\n-            t!(cvt(libc::sigemptyset(&mut set)));\n+            t!(cvt(sigemptyset(&mut set)));\n             t!(cvt(sigaddset(&mut set, libc::SIGINT)));\n             t!(cvt(libc::pthread_sigmask(libc::SIG_SETMASK, &set, &mut old_set)));\n "}, {"sha": "edd322ca6fa0708b1e4a928f7ecdb3ff66e5480c", "filename": "src/libstd/sys/unix/process/process_unix.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/24be89980e2e89404075fe463edae0f5db369251/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24be89980e2e89404075fe463edae0f5db369251/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs?ref=24be89980e2e89404075fe463edae0f5db369251", "patch": "@@ -193,7 +193,16 @@ impl Command {\n             // need to clean things up now to avoid confusing the program\n             // we're about to run.\n             let mut set: libc::sigset_t = mem::uninitialized();\n-            t!(cvt(libc::sigemptyset(&mut set)));\n+            if cfg!(target_os = \"android\") {\n+                // Implementing sigemptyset allow us to support older Android\n+                // versions. See the comment about Android and sig* functions in\n+                // process_common.rs\n+                libc::memset(&mut set as *mut _ as *mut _,\n+                             0,\n+                             mem::size_of::<libc::sigset_t>());\n+            } else {\n+                t!(cvt(libc::sigemptyset(&mut set)));\n+            }\n             t!(cvt(libc::pthread_sigmask(libc::SIG_SETMASK, &set,\n                                          ptr::null_mut())));\n             let ret = sys::signal(libc::SIGPIPE, libc::SIG_DFL);"}]}