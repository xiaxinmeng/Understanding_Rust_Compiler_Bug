{"sha": "5766b4257248a73b6cbe85b13482f09c9aa2ccdd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3NjZiNDI1NzI0OGE3M2I2Y2JlODViMTM0ODJmMDljOWFhMmNjZGQ=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2016-08-14T17:29:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-14T17:29:51Z"}, "message": "Rollup merge of #35620 - cvubrugier:master, r=Manishearth\n\nbook: fix the hidden find() functions in error-handling.md\n\nThe hidden find() functions always returns None. Consequently, one of the\nexamples using find() prints \"No file extension found\" instead of\n\"File extension: rs\" which is the expected output.\n\nThis patch fixes the issue by implementing find() with std::str::find().\n\nSigned-off-by: Christophe Vu-Brugier <cvubrugier@fastmail.fm>", "tree": {"sha": "d38bad68f7ea287ff281f160aa9b5b064f37e656", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d38bad68f7ea287ff281f160aa9b5b064f37e656"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5766b4257248a73b6cbe85b13482f09c9aa2ccdd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5766b4257248a73b6cbe85b13482f09c9aa2ccdd", "html_url": "https://github.com/rust-lang/rust/commit/5766b4257248a73b6cbe85b13482f09c9aa2ccdd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5766b4257248a73b6cbe85b13482f09c9aa2ccdd/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15f66ad326555011abaccaa2d4a758833cc7d2a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/15f66ad326555011abaccaa2d4a758833cc7d2a1", "html_url": "https://github.com/rust-lang/rust/commit/15f66ad326555011abaccaa2d4a758833cc7d2a1"}, {"sha": "3042fba44c82a42e427b9e301f3d3f3412e747dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/3042fba44c82a42e427b9e301f3d3f3412e747dc", "html_url": "https://github.com/rust-lang/rust/commit/3042fba44c82a42e427b9e301f3d3f3412e747dc"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "6e13b464e4c25767643c637dc406be387671c8ff", "filename": "src/doc/book/error-handling.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5766b4257248a73b6cbe85b13482f09c9aa2ccdd/src%2Fdoc%2Fbook%2Ferror-handling.md", "raw_url": "https://github.com/rust-lang/rust/raw/5766b4257248a73b6cbe85b13482f09c9aa2ccdd/src%2Fdoc%2Fbook%2Ferror-handling.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Ferror-handling.md?ref=5766b4257248a73b6cbe85b13482f09c9aa2ccdd", "patch": "@@ -166,7 +166,7 @@ story. The other half is *using* the `find` function we've written. Let's try\n to use it to find the extension in a file name.\n \n ```rust\n-# fn find(_: &str, _: char) -> Option<usize> { None }\n+# fn find(haystack: &str, needle: char) -> Option<usize> { haystack.find(needle) }\n fn main() {\n     let file_name = \"foobar.rs\";\n     match find(file_name, '.') {\n@@ -223,7 +223,7 @@ Getting the extension of a file name is a pretty common operation, so it makes\n sense to put it into a function:\n \n ```rust\n-# fn find(_: &str, _: char) -> Option<usize> { None }\n+# fn find(haystack: &str, needle: char) -> Option<usize> { haystack.find(needle) }\n // Returns the extension of the given file name, where the extension is defined\n // as all characters following the first `.`.\n // If `file_name` has no `.`, then `None` is returned.\n@@ -272,7 +272,7 @@ Armed with our new combinator, we can rewrite our `extension_explicit` method\n to get rid of the case analysis:\n \n ```rust\n-# fn find(_: &str, _: char) -> Option<usize> { None }\n+# fn find(haystack: &str, needle: char) -> Option<usize> { haystack.find(needle) }\n // Returns the extension of the given file name, where the extension is defined\n // as all characters following the first `.`.\n // If `file_name` has no `.`, then `None` is returned."}]}