{"sha": "d938ba47699a1539b00cbc59e6fc647010df340a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5MzhiYTQ3Njk5YTE1MzliMDBjYmM1OWU2ZmM2NDcwMTBkZjM0MGE=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2016-12-03T23:32:49Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-01-03T19:50:18Z"}, "message": "coherence: check builtin impls after the specialization graph is ready\n\nFixes #33187.", "tree": {"sha": "685ef744810ac9926d35756cc94bf47b936de2a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/685ef744810ac9926d35756cc94bf47b936de2a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d938ba47699a1539b00cbc59e6fc647010df340a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d938ba47699a1539b00cbc59e6fc647010df340a", "html_url": "https://github.com/rust-lang/rust/commit/d938ba47699a1539b00cbc59e6fc647010df340a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d938ba47699a1539b00cbc59e6fc647010df340a/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7309babf1773cde3ee6d9e5ef2b177b44278a809", "url": "https://api.github.com/repos/rust-lang/rust/commits/7309babf1773cde3ee6d9e5ef2b177b44278a809", "html_url": "https://github.com/rust-lang/rust/commit/7309babf1773cde3ee6d9e5ef2b177b44278a809"}], "stats": {"total": 16, "additions": 5, "deletions": 11}, "files": [{"sha": "6cf752dd69fcadea7d82f05ab89999e0c817c87a", "filename": "src/librustc_typeck/coherence/mod.rs", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d938ba47699a1539b00cbc59e6fc647010df340a/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d938ba47699a1539b00cbc59e6fc647010df340a/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs?ref=d938ba47699a1539b00cbc59e6fc647010df340a", "patch": "@@ -39,14 +39,10 @@ struct CoherenceChecker<'a, 'tcx: 'a> {\n     tcx: TyCtxt<'a, 'tcx, 'tcx>,\n }\n \n-struct CoherenceCheckVisitor<'a, 'tcx: 'a> {\n-    cc: &'a CoherenceChecker<'a, 'tcx>,\n-}\n-\n-impl<'a, 'tcx, 'v> ItemLikeVisitor<'v> for CoherenceCheckVisitor<'a, 'tcx> {\n+impl<'a, 'tcx, 'v> ItemLikeVisitor<'v> for CoherenceChecker<'a, 'tcx> {\n     fn visit_item(&mut self, item: &Item) {\n         if let ItemImpl(..) = item.node {\n-            self.cc.check_implementation(item)\n+            self.check_implementation(item)\n         }\n     }\n \n@@ -81,14 +77,11 @@ impl<'a, 'tcx> CoherenceChecker<'a, 'tcx> {\n         }\n     }\n \n-    fn check(&self) {\n+    fn check(&mut self) {\n         // Check implementations and traits. This populates the tables\n         // containing the inherent methods and extension methods. It also\n         // builds up the trait inheritance table.\n-        self.tcx.visit_all_item_likes_in_krate(\n-            DepNode::CoherenceCheckImpl,\n-            &mut CoherenceCheckVisitor { cc: self });\n-        builtin::check(self.tcx);\n+        self.tcx.visit_all_item_likes_in_krate(DepNode::CoherenceCheckImpl, self);\n     }\n \n     fn check_implementation(&self, item: &Item) {\n@@ -174,4 +167,5 @@ pub fn check_coherence(ccx: &CrateCtxt) {\n     unsafety::check(ccx.tcx);\n     orphan::check(ccx.tcx);\n     overlap::check(ccx.tcx);\n+    builtin::check(ccx.tcx);\n }"}]}