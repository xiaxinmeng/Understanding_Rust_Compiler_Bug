{"sha": "1b4623d1dd15db9a99c318c243463a40214f0bd6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiNDYyM2QxZGQxNWRiOWE5OWMzMThjMjQzNDYzYTQwMjE0ZjBiZDY=", "commit": {"author": {"name": "Salem Talha", "email": "salem.a.talha@gmail.com", "date": "2014-01-25T07:44:06Z"}, "committer": {"name": "Salem Talha", "email": "salem.a.talha@gmail.com", "date": "2014-01-25T07:44:06Z"}, "message": "Fixed iter's is_empty to use is_none() and added relevant test flag", "tree": {"sha": "c85621f5e8daa33c32cc174b0451647c5b6213ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c85621f5e8daa33c32cc174b0451647c5b6213ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b4623d1dd15db9a99c318c243463a40214f0bd6", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b4623d1dd15db9a99c318c243463a40214f0bd6", "html_url": "https://github.com/rust-lang/rust/commit/1b4623d1dd15db9a99c318c243463a40214f0bd6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b4623d1dd15db9a99c318c243463a40214f0bd6/comments", "author": {"login": "salemtalha", "id": 1100183, "node_id": "MDQ6VXNlcjExMDAxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1100183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/salemtalha", "html_url": "https://github.com/salemtalha", "followers_url": "https://api.github.com/users/salemtalha/followers", "following_url": "https://api.github.com/users/salemtalha/following{/other_user}", "gists_url": "https://api.github.com/users/salemtalha/gists{/gist_id}", "starred_url": "https://api.github.com/users/salemtalha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/salemtalha/subscriptions", "organizations_url": "https://api.github.com/users/salemtalha/orgs", "repos_url": "https://api.github.com/users/salemtalha/repos", "events_url": "https://api.github.com/users/salemtalha/events{/privacy}", "received_events_url": "https://api.github.com/users/salemtalha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "salemtalha", "id": 1100183, "node_id": "MDQ6VXNlcjExMDAxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1100183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/salemtalha", "html_url": "https://github.com/salemtalha", "followers_url": "https://api.github.com/users/salemtalha/followers", "following_url": "https://api.github.com/users/salemtalha/following{/other_user}", "gists_url": "https://api.github.com/users/salemtalha/gists{/gist_id}", "starred_url": "https://api.github.com/users/salemtalha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/salemtalha/subscriptions", "organizations_url": "https://api.github.com/users/salemtalha/orgs", "repos_url": "https://api.github.com/users/salemtalha/repos", "events_url": "https://api.github.com/users/salemtalha/events{/privacy}", "received_events_url": "https://api.github.com/users/salemtalha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de57a22b9a8c8416cace31c9bd3ec4c9a6888017", "url": "https://api.github.com/repos/rust-lang/rust/commits/de57a22b9a8c8416cace31c9bd3ec4c9a6888017", "html_url": "https://github.com/rust-lang/rust/commit/de57a22b9a8c8416cace31c9bd3ec4c9a6888017"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "83336ac1aafae4a86b8f34d755abfff844861acb", "filename": "src/libstd/iter.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1b4623d1dd15db9a99c318c243463a40214f0bd6/src%2Flibstd%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b4623d1dd15db9a99c318c243463a40214f0bd6/src%2Flibstd%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fiter.rs?ref=1b4623d1dd15db9a99c318c243463a40214f0bd6", "patch": "@@ -1366,7 +1366,7 @@ impl<'a, A, T: Iterator<A>> Peekable<A, T> {\n     /// Check whether peekable iterator is empty or not.\n     #[inline]\n     pub fn is_empty(&mut self) -> bool {\n-        self.peek().is_some()\n+        self.peek().is_none()\n     }\n }\n \n@@ -2936,6 +2936,7 @@ mod tests {\n         assert_eq!(ys, [5, 4, 3, 2, 1]);\n     }\n \n+    #[test]\n     fn test_peekable_is_empty() {\n         let a = [1];\n         let mut it = a.iter().peekable();"}]}