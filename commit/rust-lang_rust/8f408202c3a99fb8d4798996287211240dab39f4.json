{"sha": "8f408202c3a99fb8d4798996287211240dab39f4", "node_id": "C_kwDOAAsO6NoAKDhmNDA4MjAyYzNhOTlmYjhkNDc5ODk5NjI4NzIxMTI0MGRhYjM5ZjQ", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-04-12T11:41:41Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-04-12T11:41:41Z"}, "message": "Remove `pointer_{ref,mut}` from tagged pointers\n\nJust use `deref{,_mut}`!", "tree": {"sha": "4a8908bc864757f9dcffceba3992c084fdd66bb0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a8908bc864757f9dcffceba3992c084fdd66bb0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f408202c3a99fb8d4798996287211240dab39f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f408202c3a99fb8d4798996287211240dab39f4", "html_url": "https://github.com/rust-lang/rust/commit/8f408202c3a99fb8d4798996287211240dab39f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f408202c3a99fb8d4798996287211240dab39f4/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7c0b85f676eff0811a15a99acb01bc98cb2c4d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7c0b85f676eff0811a15a99acb01bc98cb2c4d4", "html_url": "https://github.com/rust-lang/rust/commit/c7c0b85f676eff0811a15a99acb01bc98cb2c4d4"}], "stats": {"total": 31, "additions": 11, "deletions": 20}, "files": [{"sha": "644f1415e732ebbfdd506f274a4b1822bd8785c6", "filename": "compiler/rustc_data_structures/src/tagged_ptr/copy.rs", "status": "modified", "additions": 9, "deletions": 15, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/8f408202c3a99fb8d4798996287211240dab39f4/compiler%2Frustc_data_structures%2Fsrc%2Ftagged_ptr%2Fcopy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f408202c3a99fb8d4798996287211240dab39f4/compiler%2Frustc_data_structures%2Fsrc%2Ftagged_ptr%2Fcopy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Ftagged_ptr%2Fcopy.rs?ref=8f408202c3a99fb8d4798996287211240dab39f4", "patch": "@@ -115,19 +115,6 @@ where\n         unsafe { P::from_ptr(self.pointer_raw()) }\n     }\n \n-    pub fn pointer_ref(&self) -> &P::Target {\n-        // SAFETY: pointer_raw returns the original pointer\n-        unsafe { self.pointer_raw().as_ref() }\n-    }\n-\n-    pub fn pointer_mut(&mut self) -> &mut P::Target\n-    where\n-        P: DerefMut,\n-    {\n-        // SAFETY: pointer_raw returns the original pointer\n-        unsafe { self.pointer_raw().as_mut() }\n-    }\n-\n     #[inline]\n     pub fn tag(&self) -> T {\n         unsafe { T::from_usize(self.packed.addr().get() >> Self::TAG_BIT_SHIFT) }\n@@ -147,7 +134,10 @@ where\n     type Target = P::Target;\n \n     fn deref(&self) -> &Self::Target {\n-        self.pointer_ref()\n+        // Safety:\n+        // `pointer_raw` returns the original pointer from `P::into_ptr` which,\n+        // by the `Pointer`'s contract, must be valid.\n+        unsafe { self.pointer_raw().as_ref() }\n     }\n }\n \n@@ -157,7 +147,11 @@ where\n     T: Tag,\n {\n     fn deref_mut(&mut self) -> &mut Self::Target {\n-        self.pointer_mut()\n+        // Safety:\n+        // `pointer_raw` returns the original pointer from `P::into_ptr` which,\n+        // by the `Pointer`'s contract, must be valid for writes if\n+        // `P: DerefMut`.\n+        unsafe { self.pointer_raw().as_mut() }\n     }\n }\n "}, {"sha": "6e51916838fd97a133f811747daef1149270edb1", "filename": "compiler/rustc_data_structures/src/tagged_ptr/drop.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8f408202c3a99fb8d4798996287211240dab39f4/compiler%2Frustc_data_structures%2Fsrc%2Ftagged_ptr%2Fdrop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f408202c3a99fb8d4798996287211240dab39f4/compiler%2Frustc_data_structures%2Fsrc%2Ftagged_ptr%2Fdrop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Ftagged_ptr%2Fdrop.rs?ref=8f408202c3a99fb8d4798996287211240dab39f4", "patch": "@@ -41,9 +41,6 @@ where\n         TaggedPtr { raw: CopyTaggedPtr::new(pointer, tag) }\n     }\n \n-    pub fn pointer_ref(&self) -> &P::Target {\n-        self.raw.pointer_ref()\n-    }\n     pub fn tag(&self) -> T {\n         self.raw.tag()\n     }\n@@ -56,7 +53,7 @@ where\n {\n     type Target = P::Target;\n     fn deref(&self) -> &Self::Target {\n-        self.raw.pointer_ref()\n+        self.raw.deref()\n     }\n }\n \n@@ -66,7 +63,7 @@ where\n     T: Tag,\n {\n     fn deref_mut(&mut self) -> &mut Self::Target {\n-        self.raw.pointer_mut()\n+        self.raw.deref_mut()\n     }\n }\n "}]}