{"sha": "45aa36bae5b3cfcd0c585d1ab680a27ac3e92315", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1YWEzNmJhZTViM2NmY2QwYzU4NWQxYWI2ODBhMjdhYzNlOTIzMTU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-06-19T12:29:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-19T12:29:29Z"}, "message": "Rollup merge of #73280 - GuillaumeGomez:add-e0763, r=petrochenkov\n\nAdd E0763", "tree": {"sha": "3858ceef7257ad2a89a6dd5c7b2aff311f7e6ea5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3858ceef7257ad2a89a6dd5c7b2aff311f7e6ea5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45aa36bae5b3cfcd0c585d1ab680a27ac3e92315", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe7K+pCRBK7hj4Ov3rIwAAdHIIAK0SAkMNjF/V8b3VeCAUhwmH\n1nM3pSa2qWgnHcd0QmJAGqvc0WRbZ94e4DAy1ywqrhVqVTJ7JEBAUX9orsREuOEh\n5BPNvK3wj3/PLPMYbv0Ch/hKx6BKsH3iZdr1OH2uejXDIivOP0ntXKg+nnNgmarJ\n+CoozIQr2O5lls4RQVkxlJ/+8tMf+cx1KWKCa9AIyr2TVzEwZBgBzWUFL6Txzlgb\nvSAN+31teK33YMPmFzJj4uCGf/y15HJCm6o6ENN8AHiRfxOtZ5pZ99H8cow9/lOT\n+YUDZ0iNFZQluD9M0N53+MZEDMtv9I3sLEp/r2nOZowICrF/8LF/FSSdMSMRQV4=\n=uB/d\n-----END PGP SIGNATURE-----\n", "payload": "tree 3858ceef7257ad2a89a6dd5c7b2aff311f7e6ea5\nparent 1e31a7c1e7c7c060eaaca9cf2a52ad2baafdba91\nparent bad252c9faebf55565091f50bad784a0a3f1e756\nauthor Ralf Jung <post@ralfj.de> 1592569769 +0200\ncommitter GitHub <noreply@github.com> 1592569769 +0200\n\nRollup merge of #73280 - GuillaumeGomez:add-e0763, r=petrochenkov\n\nAdd E0763\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45aa36bae5b3cfcd0c585d1ab680a27ac3e92315", "html_url": "https://github.com/rust-lang/rust/commit/45aa36bae5b3cfcd0c585d1ab680a27ac3e92315", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45aa36bae5b3cfcd0c585d1ab680a27ac3e92315/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e31a7c1e7c7c060eaaca9cf2a52ad2baafdba91", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e31a7c1e7c7c060eaaca9cf2a52ad2baafdba91", "html_url": "https://github.com/rust-lang/rust/commit/1e31a7c1e7c7c060eaaca9cf2a52ad2baafdba91"}, {"sha": "bad252c9faebf55565091f50bad784a0a3f1e756", "url": "https://api.github.com/repos/rust-lang/rust/commits/bad252c9faebf55565091f50bad784a0a3f1e756", "html_url": "https://github.com/rust-lang/rust/commit/bad252c9faebf55565091f50bad784a0a3f1e756"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "997762efcb3e5f3dd0314c5ece1d0ccc5b8d4178", "filename": "src/librustc_error_codes/error_codes.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/45aa36bae5b3cfcd0c585d1ab680a27ac3e92315/src%2Flibrustc_error_codes%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45aa36bae5b3cfcd0c585d1ab680a27ac3e92315/src%2Flibrustc_error_codes%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes.rs?ref=45aa36bae5b3cfcd0c585d1ab680a27ac3e92315", "patch": "@@ -443,6 +443,7 @@ E0759: include_str!(\"./error_codes/E0759.md\"),\n E0760: include_str!(\"./error_codes/E0760.md\"),\n E0761: include_str!(\"./error_codes/E0761.md\"),\n E0762: include_str!(\"./error_codes/E0762.md\"),\n+E0763: include_str!(\"./error_codes/E0763.md\"),\n ;\n //  E0006, // merged with E0005\n //  E0008, // cannot bind by-move into a pattern guard"}, {"sha": "095b779f3e78afdf50a425e1fa914896e76fae36", "filename": "src/librustc_error_codes/error_codes/E0763.md", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/45aa36bae5b3cfcd0c585d1ab680a27ac3e92315/src%2Flibrustc_error_codes%2Ferror_codes%2FE0763.md", "raw_url": "https://github.com/rust-lang/rust/raw/45aa36bae5b3cfcd0c585d1ab680a27ac3e92315/src%2Flibrustc_error_codes%2Ferror_codes%2FE0763.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0763.md?ref=45aa36bae5b3cfcd0c585d1ab680a27ac3e92315", "patch": "@@ -0,0 +1,13 @@\n+A byte constant wasn't correctly ended.\n+\n+Erroneous code example:\n+\n+```compile_fail,E0763\n+let c = b'a; // error!\n+```\n+\n+To fix this error, add the missing quote:\n+\n+```\n+let c = b'a'; // ok!\n+```"}, {"sha": "2e3cf4e746ae959778a5a2df14b1794288814a7f", "filename": "src/librustc_parse/lexer/mod.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/45aa36bae5b3cfcd0c585d1ab680a27ac3e92315/src%2Flibrustc_parse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45aa36bae5b3cfcd0c585d1ab680a27ac3e92315/src%2Flibrustc_parse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Flexer%2Fmod.rs?ref=45aa36bae5b3cfcd0c585d1ab680a27ac3e92315", "patch": "@@ -339,8 +339,15 @@ impl<'a> StringReader<'a> {\n             }\n             rustc_lexer::LiteralKind::Byte { terminated } => {\n                 if !terminated {\n-                    self.fatal_span_(start + BytePos(1), suffix_start, \"unterminated byte constant\")\n-                        .raise()\n+                    self.sess\n+                        .span_diagnostic\n+                        .struct_span_fatal_with_code(\n+                            self.mk_sp(start + BytePos(1), suffix_start),\n+                            \"unterminated byte constant\",\n+                            error_code!(E0763),\n+                        )\n+                        .emit();\n+                    FatalError.raise();\n                 }\n                 (token::Byte, Mode::Byte, 2, 1) // b' '\n             }"}, {"sha": "9683a83e72095b09ecdc07abad6385811d48ccde", "filename": "src/test/ui/parser/byte-literals.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45aa36bae5b3cfcd0c585d1ab680a27ac3e92315/src%2Ftest%2Fui%2Fparser%2Fbyte-literals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45aa36bae5b3cfcd0c585d1ab680a27ac3e92315/src%2Ftest%2Fui%2Fparser%2Fbyte-literals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbyte-literals.rs?ref=45aa36bae5b3cfcd0c585d1ab680a27ac3e92315", "patch": "@@ -8,5 +8,5 @@ pub fn main() {\n     b'\t';  //~ ERROR byte constant must be escaped\n     b''';  //~ ERROR byte constant must be escaped\n     b'\u00e9';  //~ ERROR byte constant must be ASCII\n-    b'a  //~ ERROR unterminated byte constant\n+    b'a  //~ ERROR unterminated byte constant [E0763]\n }"}, {"sha": "7bbdc07cd835fa02c70a119c299e5a0a53056128", "filename": "src/test/ui/parser/byte-literals.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/45aa36bae5b3cfcd0c585d1ab680a27ac3e92315/src%2Ftest%2Fui%2Fparser%2Fbyte-literals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45aa36bae5b3cfcd0c585d1ab680a27ac3e92315/src%2Ftest%2Fui%2Fparser%2Fbyte-literals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbyte-literals.stderr?ref=45aa36bae5b3cfcd0c585d1ab680a27ac3e92315", "patch": "@@ -34,11 +34,12 @@ error: byte constant must be ASCII. Use a \\xHH escape for a non-ASCII byte\n LL |     b'\u00e9';\n    |       ^\n \n-error: unterminated byte constant\n+error[E0763]: unterminated byte constant\n   --> $DIR/byte-literals.rs:11:6\n    |\n LL |     b'a\n    |      ^^^^\n \n error: aborting due to 7 previous errors\n \n+For more information about this error, try `rustc --explain E0763`."}]}