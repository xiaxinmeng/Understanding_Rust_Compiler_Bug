{"sha": "8aac1077ed495ef8d1241ce76d4b64d7eb13a856", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhYWMxMDc3ZWQ0OTVlZjhkMTI0MWNlNzZkNGI2NGQ3ZWIxM2E4NTY=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2020-04-07T23:50:16Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2020-04-07T23:50:16Z"}, "message": "Reduce callsites in Chain::count()", "tree": {"sha": "c58c2a1675c5e5445b1976ffd3436eb5723e4a3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c58c2a1675c5e5445b1976ffd3436eb5723e4a3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8aac1077ed495ef8d1241ce76d4b64d7eb13a856", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8aac1077ed495ef8d1241ce76d4b64d7eb13a856", "html_url": "https://github.com/rust-lang/rust/commit/8aac1077ed495ef8d1241ce76d4b64d7eb13a856", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8aac1077ed495ef8d1241ce76d4b64d7eb13a856/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "859b8da21fc82c08fde8b3aafefc12881a0c3f09", "url": "https://api.github.com/repos/rust-lang/rust/commits/859b8da21fc82c08fde8b3aafefc12881a0c3f09", "html_url": "https://github.com/rust-lang/rust/commit/859b8da21fc82c08fde8b3aafefc12881a0c3f09"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "0100e62fae655da287f4a704bbdd4c9e49acabbd", "filename": "src/libcore/iter/adapters/chain.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8aac1077ed495ef8d1241ce76d4b64d7eb13a856/src%2Flibcore%2Fiter%2Fadapters%2Fchain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aac1077ed495ef8d1241ce76d4b64d7eb13a856/src%2Flibcore%2Fiter%2Fadapters%2Fchain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fadapters%2Fchain.rs?ref=8aac1077ed495ef8d1241ce76d4b64d7eb13a856", "patch": "@@ -62,12 +62,15 @@ where\n     #[inline]\n     #[rustc_inherit_overflow_checks]\n     fn count(self) -> usize {\n-        match self {\n-            Chain { a: Some(a), b: Some(b) } => a.count() + b.count(),\n-            Chain { a: Some(a), b: None } => a.count(),\n-            Chain { a: None, b: Some(b) } => b.count(),\n-            Chain { a: None, b: None } => 0,\n-        }\n+        let a_count = match self.a {\n+            Some(a) => a.count(),\n+            None => 0,\n+        };\n+        let b_count = match self.b {\n+            Some(b) => b.count(),\n+            None => 0,\n+        };\n+        a_count + b_count\n     }\n \n     fn try_fold<Acc, F, R>(&mut self, mut acc: Acc, mut f: F) -> R"}]}