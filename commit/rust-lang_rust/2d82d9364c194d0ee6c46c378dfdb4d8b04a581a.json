{"sha": "2d82d9364c194d0ee6c46c378dfdb4d8b04a581a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkODJkOTM2NGMxOTRkMGVlNmM0NmMzNzhkZmRiNGQ4YjA0YTU4MWE=", "commit": {"author": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2013-07-16T22:31:08Z"}, "committer": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2013-07-17T21:04:03Z"}, "message": "rt: Print alloc backtraces for bad release_alloc with RUSTRT_TRACK_ALLOCATIONS\n\nProbably the env var should be renamed from DETAILED_LEAKS but I'm leaving\naside that breaking change for now.", "tree": {"sha": "ccddc3b9967bb1ce821e5c4087db1948c41528a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ccddc3b9967bb1ce821e5c4087db1948c41528a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d82d9364c194d0ee6c46c378dfdb4d8b04a581a", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d82d9364c194d0ee6c46c378dfdb4d8b04a581a", "html_url": "https://github.com/rust-lang/rust/commit/2d82d9364c194d0ee6c46c378dfdb4d8b04a581a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d82d9364c194d0ee6c46c378dfdb4d8b04a581a/comments", "author": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfa5595628651f55bda7437c80631d596c8b61f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfa5595628651f55bda7437c80631d596c8b61f9", "html_url": "https://github.com/rust-lang/rust/commit/dfa5595628651f55bda7437c80631d596c8b61f9"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "0d58d4dae922ff430ee8aae82ae9380d0cbaa9a5", "filename": "src/rt/memory_region.cpp", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/2d82d9364c194d0ee6c46c378dfdb4d8b04a581a/src%2Frt%2Fmemory_region.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/2d82d9364c194d0ee6c46c378dfdb4d8b04a581a/src%2Frt%2Fmemory_region.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fmemory_region.cpp?ref=2d82d9364c194d0ee6c46c378dfdb4d8b04a581a", "patch": "@@ -34,6 +34,14 @@ void *memory_region::get_data(alloc_header *ptr) {\n     return (void*)((char *)ptr + HEADER_SIZE);\n }\n \n+inline void memory_region::maybe_print_backtrace(const alloc_header *header) const {\n+#   if RUSTRT_TRACK_ALLOCATIONS >= 3\n+    if (_detailed_leaks) {\n+        backtrace_symbols_fd(header->bt + 1, header->btframes - 1, 2);\n+    }\n+#   endif\n+}\n+\n memory_region::memory_region(bool synchronized,\n                              bool detailed_leaks,\n                              bool poison_on_free) :\n@@ -174,13 +182,7 @@ memory_region::~memory_region() {\n                        header->tag,\n                        (uintptr_t) get_data(header));\n                 ++leak_count;\n-\n-#               if RUSTRT_TRACK_ALLOCATIONS >= 3\n-                if (_detailed_leaks) {\n-                    backtrace_symbols_fd(header->bt + 1,\n-                                         header->btframes - 1, 2);\n-                }\n-#               endif\n+                maybe_print_backtrace(header);\n             }\n         }\n         assert(leak_count == _live_allocations);\n@@ -206,11 +208,13 @@ memory_region::release_alloc(void *mem) {\n     if (((size_t) alloc->index) >= _allocation_list.size()) {\n         printf(\"free: ptr 0x%\" PRIxPTR \" (%s) index %d is beyond allocation_list of size %zu\\n\",\n                (uintptr_t) get_data(alloc), alloc->tag, alloc->index, _allocation_list.size());\n+        maybe_print_backtrace(alloc);\n         assert(false && \"index beyond allocation_list\");\n     }\n     if (_allocation_list[alloc->index] != alloc) {\n         printf(\"free: ptr 0x%\" PRIxPTR \" (%s) is not in allocation_list\\n\",\n                (uintptr_t) get_data(alloc), alloc->tag);\n+        maybe_print_backtrace(alloc);\n         assert(false && \"not in allocation_list\");\n     }\n     else {"}, {"sha": "b833b90d42accb18f264f810b3128dc4470edbab", "filename": "src/rt/memory_region.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2d82d9364c194d0ee6c46c378dfdb4d8b04a581a/src%2Frt%2Fmemory_region.h", "raw_url": "https://github.com/rust-lang/rust/raw/2d82d9364c194d0ee6c46c378dfdb4d8b04a581a/src%2Frt%2Fmemory_region.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fmemory_region.h?ref=2d82d9364c194d0ee6c46c378dfdb4d8b04a581a", "patch": "@@ -69,6 +69,8 @@ class memory_region {\n     void release_alloc(void *mem);\n     void claim_alloc(void *mem);\n \n+    void maybe_print_backtrace(const alloc_header *) const;\n+\n private:\n     // private and undefined to disable copying\n     memory_region(const memory_region& rhs);"}]}