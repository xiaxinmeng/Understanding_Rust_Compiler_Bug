{"sha": "5750d81e3032cf925aa9422a8ac128a2b3a1950c", "node_id": "C_kwDOAAsO6NoAKDU3NTBkODFlMzAzMmNmOTI1YWE5NDIyYThhYzEyOGEyYjNhMTk1MGM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-22T11:13:35Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-22T11:13:35Z"}, "message": "Auto merge of #14632 - Veykril:lru-macro, r=lnicola\n\ninternal: Increase LRU cache size for parse_expansion and macro_expand queries", "tree": {"sha": "c7d24702d532f43c8c76fb9ff7b9d8b0b64e64f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7d24702d532f43c8c76fb9ff7b9d8b0b64e64f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5750d81e3032cf925aa9422a8ac128a2b3a1950c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5750d81e3032cf925aa9422a8ac128a2b3a1950c", "html_url": "https://github.com/rust-lang/rust/commit/5750d81e3032cf925aa9422a8ac128a2b3a1950c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5750d81e3032cf925aa9422a8ac128a2b3a1950c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "442a769f823fa9161d90a967f499d3a8571d836f", "url": "https://api.github.com/repos/rust-lang/rust/commits/442a769f823fa9161d90a967f499d3a8571d836f", "html_url": "https://github.com/rust-lang/rust/commit/442a769f823fa9161d90a967f499d3a8571d836f"}, {"sha": "6253fc031be94f1b73953af8ae5f9a3f4e4cb2a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/6253fc031be94f1b73953af8ae5f9a3f4e4cb2a1", "html_url": "https://github.com/rust-lang/rust/commit/6253fc031be94f1b73953af8ae5f9a3f4e4cb2a1"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "b65cf7341f350e4fbb721f3ae41ef5501a0e16fd", "filename": "crates/base-db/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5750d81e3032cf925aa9422a8ac128a2b3a1950c/crates%2Fbase-db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5750d81e3032cf925aa9422a8ac128a2b3a1950c/crates%2Fbase-db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase-db%2Fsrc%2Flib.rs?ref=5750d81e3032cf925aa9422a8ac128a2b3a1950c", "patch": "@@ -53,7 +53,7 @@ pub struct FileRange {\n     pub range: TextRange,\n }\n \n-pub const DEFAULT_LRU_CAP: usize = 128;\n+pub const DEFAULT_PARSE_LRU_CAP: usize = 128;\n \n pub trait FileLoader {\n     /// Text of the file."}, {"sha": "e48caca790cf059837538bb38b4125142c7717c2", "filename": "crates/hir-expand/src/ast_id_map.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5750d81e3032cf925aa9422a8ac128a2b3a1950c/crates%2Fhir-expand%2Fsrc%2Fast_id_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5750d81e3032cf925aa9422a8ac128a2b3a1950c/crates%2Fhir-expand%2Fsrc%2Fast_id_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-expand%2Fsrc%2Fast_id_map.rs?ref=5750d81e3032cf925aa9422a8ac128a2b3a1950c", "patch": "@@ -115,6 +115,7 @@ impl AstIdMap {\n                 }\n             }\n         }\n+        res.arena.shrink_to_fit();\n         res\n     }\n "}, {"sha": "b0c5820fb0910ec86dddc23bb1c68a4949af9c86", "filename": "crates/ide-db/src/lib.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5750d81e3032cf925aa9422a8ac128a2b3a1950c/crates%2Fide-db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5750d81e3032cf925aa9422a8ac128a2b3a1950c/crates%2Fide-db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-db%2Fsrc%2Flib.rs?ref=5750d81e3032cf925aa9422a8ac128a2b3a1950c", "patch": "@@ -149,29 +149,33 @@ impl RootDatabase {\n     }\n \n     pub fn update_parse_query_lru_capacity(&mut self, lru_capacity: Option<usize>) {\n-        let lru_capacity = lru_capacity.unwrap_or(base_db::DEFAULT_LRU_CAP);\n+        let lru_capacity = lru_capacity.unwrap_or(base_db::DEFAULT_PARSE_LRU_CAP);\n         base_db::ParseQuery.in_db_mut(self).set_lru_capacity(lru_capacity);\n-        hir::db::ParseMacroExpansionQuery.in_db_mut(self).set_lru_capacity(lru_capacity);\n-        hir::db::MacroExpandQuery.in_db_mut(self).set_lru_capacity(lru_capacity);\n+        // macro expansions are usually rather small, so we can afford to keep more of them alive\n+        hir::db::ParseMacroExpansionQuery.in_db_mut(self).set_lru_capacity(4 * lru_capacity);\n+        hir::db::MacroExpandQuery.in_db_mut(self).set_lru_capacity(4 * lru_capacity);\n     }\n \n     pub fn update_lru_capacities(&mut self, lru_capacities: &FxHashMap<Box<str>, usize>) {\n         use hir::db as hir_db;\n \n         base_db::ParseQuery.in_db_mut(self).set_lru_capacity(\n-            lru_capacities.get(stringify!(ParseQuery)).copied().unwrap_or(base_db::DEFAULT_LRU_CAP),\n+            lru_capacities\n+                .get(stringify!(ParseQuery))\n+                .copied()\n+                .unwrap_or(base_db::DEFAULT_PARSE_LRU_CAP),\n         );\n         hir_db::ParseMacroExpansionQuery.in_db_mut(self).set_lru_capacity(\n             lru_capacities\n                 .get(stringify!(ParseMacroExpansionQuery))\n                 .copied()\n-                .unwrap_or(base_db::DEFAULT_LRU_CAP),\n+                .unwrap_or(4 * base_db::DEFAULT_PARSE_LRU_CAP),\n         );\n         hir_db::MacroExpandQuery.in_db_mut(self).set_lru_capacity(\n             lru_capacities\n                 .get(stringify!(MacroExpandQuery))\n                 .copied()\n-                .unwrap_or(base_db::DEFAULT_LRU_CAP),\n+                .unwrap_or(4 * base_db::DEFAULT_PARSE_LRU_CAP),\n         );\n \n         macro_rules! update_lru_capacity_per_query {"}]}