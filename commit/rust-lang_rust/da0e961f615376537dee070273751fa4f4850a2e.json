{"sha": "da0e961f615376537dee070273751fa4f4850a2e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhMGU5NjFmNjE1Mzc2NTM3ZGVlMDcwMjczNzUxZmE0ZjQ4NTBhMmU=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-05-21T00:55:59Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-05-22T06:10:09Z"}, "message": "stdlib: Use if/alt expressions in std::fs", "tree": {"sha": "8baa96fc7b4892704c4666412e612e77a708f74b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8baa96fc7b4892704c4666412e612e77a708f74b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da0e961f615376537dee070273751fa4f4850a2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da0e961f615376537dee070273751fa4f4850a2e", "html_url": "https://github.com/rust-lang/rust/commit/da0e961f615376537dee070273751fa4f4850a2e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da0e961f615376537dee070273751fa4f4850a2e/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85bcf75da1a09fe52ce851ff8a288f0a819900d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/85bcf75da1a09fe52ce851ff8a288f0a819900d3", "html_url": "https://github.com/rust-lang/rust/commit/85bcf75da1a09fe52ce851ff8a288f0a819900d3"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "d051d574fd2f1702ad7f1e543e380775bee56004", "filename": "src/lib/fs.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/da0e961f615376537dee070273751fa4f4850a2e/src%2Flib%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da0e961f615376537dee070273751fa4f4850a2e/src%2Flib%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Ffs.rs?ref=da0e961f615376537dee070273751fa4f4850a2e", "patch": "@@ -22,10 +22,11 @@ fn dirname(path p) -> path {\n // FIXME: Need some typestate to avoid bounds check when len(pre) == 0\n fn connect(path pre, path post) -> path {\n     auto len = str::byte_len(pre);\n-    if (pre.(len - 1u) == (os_fs::path_sep as u8)) { // Trailing '/'?\n-        ret pre + post;\n-    }\n-    ret pre + path_sep() + post;\n+    ret if (pre.(len - 1u) == (os_fs::path_sep as u8)) { // Trailing '/'?\n+        pre + post\n+    } else {\n+        pre + path_sep() + post\n+    };\n }\n \n fn file_is_dir(path p) -> bool {"}]}