{"sha": "15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1Y2VmZTRiMmE2NWJiMmE0ZmViY2QzNTNjYjM3YjkwZGZhZmE0ZjE=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-12-20T22:47:03Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-12-27T12:51:37Z"}, "message": "Make sure feature gate errors are recoverable", "tree": {"sha": "0751ff1245a5e139c0bb3399441b9e8c76e71d9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0751ff1245a5e139c0bb3399441b9e8c76e71d9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1", "html_url": "https://github.com/rust-lang/rust/commit/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b99fb2f5445fa5a791cca7601c7d609aaf708304", "url": "https://api.github.com/repos/rust-lang/rust/commits/b99fb2f5445fa5a791cca7601c7d609aaf708304", "html_url": "https://github.com/rust-lang/rust/commit/b99fb2f5445fa5a791cca7601c7d609aaf708304"}], "stats": {"total": 90, "additions": 32, "deletions": 58}, "files": [{"sha": "1ae12fec50661e89fa4a9c278ef5e6426d963142", "filename": "src/librustc/lint/levels.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Flibrustc%2Flint%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Flibrustc%2Flint%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Flevels.rs?ref=15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1", "patch": "@@ -222,24 +222,22 @@ impl<'a> LintLevelsBuilder<'a> {\n                 match item.node {\n                     ast::MetaItemKind::Word => {}  // actual lint names handled later\n                     ast::MetaItemKind::NameValue(ref name_value) => {\n-                        let gate_reasons = !self.sess.features_untracked().lint_reasons;\n                         if item.ident == \"reason\" {\n                             // found reason, reslice meta list to exclude it\n                             metas = &metas[0..metas.len()-1];\n                             // FIXME (#55112): issue unused-attributes lint if we thereby\n                             // don't have any lint names (`#[level(reason = \"foo\")]`)\n                             if let ast::LitKind::Str(rationale, _) = name_value.node {\n-                                if gate_reasons {\n+                                if !self.sess.features_untracked().lint_reasons {\n                                     feature_gate::emit_feature_err(\n                                         &self.sess.parse_sess,\n                                         \"lint_reasons\",\n                                         item.span,\n                                         feature_gate::GateIssue::Language,\n                                         \"lint reasons are experimental\"\n                                     );\n-                                } else {\n-                                    reason = Some(rationale);\n                                 }\n+                                reason = Some(rationale);\n                             } else {\n                                 let mut err = bad_attr(name_value.span);\n                                 err.help(\"reason must be a string literal\");"}, {"sha": "54dfc57bac6743588cb93d5c173513ede5ce9836", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1", "patch": "@@ -2210,7 +2210,6 @@ fn from_target_feature(\n                     feature_gate::GateIssue::Language,\n                     &format!(\"the target feature `{}` is currently unstable\", feature),\n                 );\n-                return None;\n             }\n             Some(Symbol::intern(feature))\n         }));"}, {"sha": "3863778fe72af4bd47ccc5390534b971a87f6d8e", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1", "patch": "@@ -722,7 +722,6 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n                     emit_feature_err(this.cx.parse_sess, &*feature.as_str(), span,\n                                      GateIssue::Library(Some(issue)), &explain);\n                     this.cx.trace_macros_diag();\n-                    return Err(kind.dummy(span));\n                 }\n             }\n "}, {"sha": "a8f3c40db609ccb8928a486695272939bd27d845", "filename": "src/libsyntax_ext/asm.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Flibsyntax_ext%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Flibsyntax_ext%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fasm.rs?ref=15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1", "patch": "@@ -49,7 +49,6 @@ pub fn expand_asm<'cx>(cx: &'cx mut ExtCtxt,\n                                        sp,\n                                        feature_gate::GateIssue::Language,\n                                        feature_gate::EXPLAIN_ASM);\n-        return DummyResult::expr(sp);\n     }\n \n     // Split the tts before the first colon, to avoid `asm!(\"x\": y)`  being"}, {"sha": "9c49a59678fdbf434606aa99e41347db8e2c2d40", "filename": "src/libsyntax_ext/concat_idents.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Flibsyntax_ext%2Fconcat_idents.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Flibsyntax_ext%2Fconcat_idents.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fconcat_idents.rs?ref=15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1", "patch": "@@ -20,7 +20,6 @@ pub fn expand_syntax_ext<'cx>(cx: &'cx mut ExtCtxt,\n                                        sp,\n                                        feature_gate::GateIssue::Language,\n                                        feature_gate::EXPLAIN_CONCAT_IDENTS);\n-        return base::DummyResult::expr(sp);\n     }\n \n     if tts.is_empty() {"}, {"sha": "9d29e2b0fb69ac559762cba877944e15d4dc0652", "filename": "src/libsyntax_ext/format.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Flibsyntax_ext%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Flibsyntax_ext%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fformat.rs?ref=15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1", "patch": "@@ -713,7 +713,6 @@ pub fn expand_format_args_nl<'cx>(\n                                        sp,\n                                        feature_gate::GateIssue::Language,\n                                        feature_gate::EXPLAIN_FORMAT_ARGS_NL);\n-        return DummyResult::expr(sp);\n     }\n     sp = sp.apply_mark(ecx.current_expansion.mark);\n     match parse_args(ecx, sp, tts) {"}, {"sha": "a58c267ab4fae778e91af1c3178963f952fb80f0", "filename": "src/libsyntax_ext/global_asm.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Flibsyntax_ext%2Fglobal_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Flibsyntax_ext%2Fglobal_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fglobal_asm.rs?ref=15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1", "patch": "@@ -29,7 +29,6 @@ pub fn expand_global_asm<'cx>(cx: &'cx mut ExtCtxt,\n                                        sp,\n                                        feature_gate::GateIssue::Language,\n                                        feature_gate::EXPLAIN_GLOBAL_ASM);\n-        return DummyResult::any(sp);\n     }\n \n     let mut p = cx.new_parser_from_tts(tts);"}, {"sha": "a143186b9451f6d99b0a1123c5d6b5ab48e00816", "filename": "src/libsyntax_ext/log_syntax.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Flibsyntax_ext%2Flog_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Flibsyntax_ext%2Flog_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Flog_syntax.rs?ref=15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1", "patch": "@@ -14,7 +14,6 @@ pub fn expand_syntax_ext<'cx>(cx: &'cx mut base::ExtCtxt,\n                                        sp,\n                                        feature_gate::GateIssue::Language,\n                                        feature_gate::EXPLAIN_LOG_SYNTAX);\n-        return base::DummyResult::any(sp);\n     }\n \n     println!(\"{}\", print::pprust::tts_to_string(tts));"}, {"sha": "04e33671872f57950bb976c386fcbaadc4e2a4bb", "filename": "src/libsyntax_ext/test_case.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Flibsyntax_ext%2Ftest_case.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Flibsyntax_ext%2Ftest_case.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Ftest_case.rs?ref=15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1", "patch": "@@ -31,8 +31,6 @@ pub fn expand(\n                                        attr_sp,\n                                        feature_gate::GateIssue::Language,\n                                        feature_gate::EXPLAIN_CUSTOM_TEST_FRAMEWORKS);\n-\n-        return vec![anno_item];\n     }\n \n     if !ecx.ecfg.should_test { return vec![]; }"}, {"sha": "638d7b5568bfb142271d3a094ae82caccd89afb4", "filename": "src/libsyntax_ext/trace_macros.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Flibsyntax_ext%2Ftrace_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Flibsyntax_ext%2Ftrace_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Ftrace_macros.rs?ref=15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1", "patch": "@@ -15,7 +15,6 @@ pub fn expand_trace_macros(cx: &mut ExtCtxt,\n                                        sp,\n                                        feature_gate::GateIssue::Language,\n                                        feature_gate::EXPLAIN_TRACE_MACROS);\n-        return base::DummyResult::any(sp);\n     }\n \n     match (tt.len(), tt.first()) {"}, {"sha": "259b0a14e5c9bb3a333bc8b0c31c802bc713f00f", "filename": "src/test/ui/feature-gates/feature-gate-asm2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-asm2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-asm2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-asm2.rs?ref=15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1", "patch": "@@ -2,6 +2,6 @@\n \n fn main() {\n     unsafe {\n-        println!(\"{}\", asm!(\"\")); //~ ERROR inline assembly is not stable\n+        println!(\"{:?}\", asm!(\"\")); //~ ERROR inline assembly is not stable\n     }\n }"}, {"sha": "65c267a76959a14ce9c62cf5e1fcf60d18bc1a4d", "filename": "src/test/ui/feature-gates/feature-gate-asm2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-asm2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-asm2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-asm2.stderr?ref=15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1", "patch": "@@ -1,8 +1,8 @@\n error[E0658]: inline assembly is not stable enough for use and is subject to change (see issue #29722)\n   --> $DIR/feature-gate-asm2.rs:5:24\n    |\n-LL |         println!(\"{}\", asm!(\"\")); //~ ERROR inline assembly is not stable\n-   |                        ^^^^^^^^\n+LL |         println!(\"{:?}\", asm!(\"\")); //~ ERROR inline assembly is not stable\n+   |                          ^^^^^^^^\n    |\n    = help: add #![feature(asm)] to the crate attributes to enable\n "}, {"sha": "0cc6c577e8d5e9a1350d4ea37d0090b52893fc41", "filename": "src/test/ui/feature-gates/feature-gate-concat_idents2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-concat_idents2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-concat_idents2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-concat_idents2.rs?ref=15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1", "patch": "@@ -2,4 +2,5 @@\n \n fn main() {\n     concat_idents!(a, b); //~ ERROR `concat_idents` is not stable enough\n+                          //~| ERROR cannot find value `ab` in this scope\n }"}, {"sha": "eb648cbd56f1126e6848c621bd12daa1ecb2fecb", "filename": "src/test/ui/feature-gates/feature-gate-concat_idents2.stderr", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-concat_idents2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-concat_idents2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-concat_idents2.stderr?ref=15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1", "patch": "@@ -6,6 +6,13 @@ LL |     concat_idents!(a, b); //~ ERROR `concat_idents` is not stable enough\n    |\n    = help: add #![feature(concat_idents)] to the crate attributes to enable\n \n-error: aborting due to previous error\n+error[E0425]: cannot find value `ab` in this scope\n+  --> $DIR/feature-gate-concat_idents2.rs:14:5\n+   |\n+LL |     concat_idents!(a, b); //~ ERROR `concat_idents` is not stable enough\n+   |     ^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n+\n+error: aborting due to 2 previous errors\n \n-For more information about this error, try `rustc --explain E0658`.\n+Some errors occurred: E0425, E0658.\n+For more information about an error, try `rustc --explain E0425`."}, {"sha": "8b137891791fe96927ad78e64b0aad7bded08bdc", "filename": "src/test/ui/feature-gates/feature-gate-log_syntax.stdout", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-log_syntax.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-log_syntax.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-log_syntax.stdout?ref=15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1", "patch": "@@ -0,0 +1 @@\n+"}, {"sha": "a3906dcc16e1cb6f1444a75892c9519002c46e75", "filename": "src/test/ui/feature-gates/feature-gate-log_syntax2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-log_syntax2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-log_syntax2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-log_syntax2.rs?ref=15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1", "patch": "@@ -1,5 +1,5 @@\n // gate-test-log_syntax\n \n fn main() {\n-    println!(\"{}\", log_syntax!()); //~ ERROR `log_syntax!` is not stable\n+    println!(\"{:?}\", log_syntax!()); //~ ERROR `log_syntax!` is not stable\n }"}, {"sha": "9ed3bbf7b7588b6db273813ed7544916e4b91609", "filename": "src/test/ui/feature-gates/feature-gate-log_syntax2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-log_syntax2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-log_syntax2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-log_syntax2.stderr?ref=15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1", "patch": "@@ -1,8 +1,8 @@\n error[E0658]: `log_syntax!` is not stable enough for use and is subject to change (see issue #29598)\n   --> $DIR/feature-gate-log_syntax2.rs:4:20\n    |\n-LL |     println!(\"{}\", log_syntax!()); //~ ERROR `log_syntax!` is not stable\n-   |                    ^^^^^^^^^^^^^\n+LL |     println!(\"{:?}\", log_syntax!()); //~ ERROR `log_syntax!` is not stable\n+   |                      ^^^^^^^^^^^^^\n    |\n    = help: add #![feature(log_syntax)] to the crate attributes to enable\n "}, {"sha": "8b137891791fe96927ad78e64b0aad7bded08bdc", "filename": "src/test/ui/feature-gates/feature-gate-log_syntax2.stdout", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-log_syntax2.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-log_syntax2.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-log_syntax2.stdout?ref=15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1", "patch": "@@ -0,0 +1 @@\n+"}, {"sha": "c9af04741ac7701e086ebaac37f77d9a834bf046", "filename": "src/test/ui/trace_macros-gate.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Ftest%2Fui%2Ftrace_macros-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Ftest%2Fui%2Ftrace_macros-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrace_macros-gate.rs?ref=15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1", "patch": "@@ -2,15 +2,9 @@\n \n fn main() {\n     trace_macros!(); //~ ERROR `trace_macros` is not stable\n-    trace_macros!(1); //~ ERROR `trace_macros` is not stable\n-    trace_macros!(ident); //~ ERROR `trace_macros` is not stable\n-    trace_macros!(for); //~ ERROR `trace_macros` is not stable\n-    trace_macros!(true,); //~ ERROR `trace_macros` is not stable\n-    trace_macros!(false 1); //~ ERROR `trace_macros` is not stable\n-\n-    // Errors are signalled early for the above, before expansion.\n-    // See trace_macros-gate2 and trace_macros-gate3. for examples\n-    // of the below being caught.\n+                     //~| ERROR trace_macros! accepts only `true` or `false`\n+    trace_macros!(true); //~ ERROR `trace_macros` is not stable\n+    trace_macros!(false); //~ ERROR `trace_macros` is not stable\n \n     macro_rules! expando {\n         ($x: ident) => { trace_macros!($x) } //~ ERROR `trace_macros` is not stable"}, {"sha": "a411fae8bcb610ceac72897165a9309a63470e05", "filename": "src/test/ui/trace_macros-gate.stderr", "status": "modified", "additions": 9, "deletions": 27, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Ftest%2Fui%2Ftrace_macros-gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1/src%2Ftest%2Fui%2Ftrace_macros-gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrace_macros-gate.stderr?ref=15cefe4b2a65bb2a4febcd353cb37b90dfafa4f1", "patch": "@@ -6,48 +6,30 @@ LL |     trace_macros!(); //~ ERROR `trace_macros` is not stable\n    |\n    = help: add #![feature(trace_macros)] to the crate attributes to enable\n \n-error[E0658]: `trace_macros` is not stable enough for use and is subject to change (see issue #29598)\n-  --> $DIR/trace_macros-gate.rs:5:5\n-   |\n-LL |     trace_macros!(1); //~ ERROR `trace_macros` is not stable\n-   |     ^^^^^^^^^^^^^^^^^\n+error: trace_macros! accepts only `true` or `false`\n+  --> $DIR/trace_macros-gate.rs:14:5\n    |\n-   = help: add #![feature(trace_macros)] to the crate attributes to enable\n+LL |     trace_macros!(); //~ ERROR `trace_macros` is not stable\n+   |     ^^^^^^^^^^^^^^^^\n \n error[E0658]: `trace_macros` is not stable enough for use and is subject to change (see issue #29598)\n   --> $DIR/trace_macros-gate.rs:6:5\n    |\n-LL |     trace_macros!(ident); //~ ERROR `trace_macros` is not stable\n-   |     ^^^^^^^^^^^^^^^^^^^^^\n+LL |     trace_macros!(true); //~ ERROR `trace_macros` is not stable\n+   |     ^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: add #![feature(trace_macros)] to the crate attributes to enable\n \n error[E0658]: `trace_macros` is not stable enough for use and is subject to change (see issue #29598)\n   --> $DIR/trace_macros-gate.rs:7:5\n    |\n-LL |     trace_macros!(for); //~ ERROR `trace_macros` is not stable\n-   |     ^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: add #![feature(trace_macros)] to the crate attributes to enable\n-\n-error[E0658]: `trace_macros` is not stable enough for use and is subject to change (see issue #29598)\n-  --> $DIR/trace_macros-gate.rs:8:5\n-   |\n-LL |     trace_macros!(true,); //~ ERROR `trace_macros` is not stable\n+LL |     trace_macros!(false); //~ ERROR `trace_macros` is not stable\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: add #![feature(trace_macros)] to the crate attributes to enable\n \n error[E0658]: `trace_macros` is not stable enough for use and is subject to change (see issue #29598)\n-  --> $DIR/trace_macros-gate.rs:9:5\n-   |\n-LL |     trace_macros!(false 1); //~ ERROR `trace_macros` is not stable\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: add #![feature(trace_macros)] to the crate attributes to enable\n-\n-error[E0658]: `trace_macros` is not stable enough for use and is subject to change (see issue #29598)\n-  --> $DIR/trace_macros-gate.rs:16:26\n+  --> $DIR/trace_macros-gate.rs:20:26\n    |\n LL |         ($x: ident) => { trace_macros!($x) } //~ ERROR `trace_macros` is not stable\n    |                          ^^^^^^^^^^^^^^^^^\n@@ -57,6 +39,6 @@ LL |     expando!(true);\n    |\n    = help: add #![feature(trace_macros)] to the crate attributes to enable\n \n-error: aborting due to 7 previous errors\n+error: aborting due to 5 previous errors\n \n For more information about this error, try `rustc --explain E0658`."}]}