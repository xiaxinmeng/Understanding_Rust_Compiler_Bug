{"sha": "95d3e0cb782016d7e360741a590cb07cc6413d27", "node_id": "C_kwDOAAsO6NoAKDk1ZDNlMGNiNzgyMDE2ZDdlMzYwNzQxYTU5MGNiMDdjYzY0MTNkMjc", "commit": {"author": {"name": "Rejyr", "email": "jerrylwang123@gmail.com", "date": "2022-09-05T19:37:30Z"}, "committer": {"name": "Rejyr", "email": "jerrylwang123@gmail.com", "date": "2023-01-09T22:07:25Z"}, "message": "migrate: `methods.rs`", "tree": {"sha": "d6109049746a9fff3e3ef890f895c9d583d50a98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6109049746a9fff3e3ef890f895c9d583d50a98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95d3e0cb782016d7e360741a590cb07cc6413d27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95d3e0cb782016d7e360741a590cb07cc6413d27", "html_url": "https://github.com/rust-lang/rust/commit/95d3e0cb782016d7e360741a590cb07cc6413d27", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95d3e0cb782016d7e360741a590cb07cc6413d27/comments", "author": {"login": "Rejyr", "id": 88239847, "node_id": "MDQ6VXNlcjg4MjM5ODQ3", "avatar_url": "https://avatars.githubusercontent.com/u/88239847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rejyr", "html_url": "https://github.com/Rejyr", "followers_url": "https://api.github.com/users/Rejyr/followers", "following_url": "https://api.github.com/users/Rejyr/following{/other_user}", "gists_url": "https://api.github.com/users/Rejyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rejyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rejyr/subscriptions", "organizations_url": "https://api.github.com/users/Rejyr/orgs", "repos_url": "https://api.github.com/users/Rejyr/repos", "events_url": "https://api.github.com/users/Rejyr/events{/privacy}", "received_events_url": "https://api.github.com/users/Rejyr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Rejyr", "id": 88239847, "node_id": "MDQ6VXNlcjg4MjM5ODQ3", "avatar_url": "https://avatars.githubusercontent.com/u/88239847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rejyr", "html_url": "https://github.com/Rejyr", "followers_url": "https://api.github.com/users/Rejyr/followers", "following_url": "https://api.github.com/users/Rejyr/following{/other_user}", "gists_url": "https://api.github.com/users/Rejyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rejyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rejyr/subscriptions", "organizations_url": "https://api.github.com/users/Rejyr/orgs", "repos_url": "https://api.github.com/users/Rejyr/repos", "events_url": "https://api.github.com/users/Rejyr/events{/privacy}", "received_events_url": "https://api.github.com/users/Rejyr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f69c1b523b4606d09dfdb3c8d9cb7d05e239595", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f69c1b523b4606d09dfdb3c8d9cb7d05e239595", "html_url": "https://github.com/rust-lang/rust/commit/3f69c1b523b4606d09dfdb3c8d9cb7d05e239595"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "8ad62672f6e637a5de054b4b7eac75add800a7ca", "filename": "compiler/rustc_lint/src/lints.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/95d3e0cb782016d7e360741a590cb07cc6413d27/compiler%2Frustc_lint%2Fsrc%2Flints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95d3e0cb782016d7e360741a590cb07cc6413d27/compiler%2Frustc_lint%2Fsrc%2Flints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flints.rs?ref=95d3e0cb782016d7e360741a590cb07cc6413d27", "patch": "@@ -6,6 +6,16 @@ use rustc_span::{symbol::Ident, Span, Symbol};\n \n use crate::LateContext;\n \n+#[derive(LintDiagnostic)]\n+#[diag(lint_cstring_ptr)]\n+#[note]\n+#[help]\n+pub struct CStringPtr {\n+    #[label(as_ptr_label)]\n+    pub as_ptr: Span,\n+    #[label(unwrap_label)]\n+    pub unwrap: Span,\n+}\n #[derive(LintDiagnostic)]\n #[diag(lint_identifier_non_ascii_char)]\n pub struct IdentifierNonAsciiChar;"}, {"sha": "06d4d2d23403d1c7d60a8757ea3b1fa1f4bd9305", "filename": "compiler/rustc_lint/src/methods.rs", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/95d3e0cb782016d7e360741a590cb07cc6413d27/compiler%2Frustc_lint%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95d3e0cb782016d7e360741a590cb07cc6413d27/compiler%2Frustc_lint%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fmethods.rs?ref=95d3e0cb782016d7e360741a590cb07cc6413d27", "patch": "@@ -1,7 +1,9 @@\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n+use crate::lints::CStringPtr;\n use crate::LateContext;\n use crate::LateLintPass;\n use crate::LintContext;\n-use rustc_errors::fluent;\n use rustc_hir::{Expr, ExprKind, PathSegment};\n use rustc_middle::ty;\n use rustc_span::{symbol::sym, ExpnKind, Span};\n@@ -90,16 +92,10 @@ fn lint_cstring_as_ptr(\n         if cx.tcx.is_diagnostic_item(sym::Result, def.did()) {\n             if let ty::Adt(adt, _) = substs.type_at(0).kind() {\n                 if cx.tcx.is_diagnostic_item(sym::cstring_type, adt.did()) {\n-                    cx.struct_span_lint(\n+                    cx.emit_spanned_lint(\n                         TEMPORARY_CSTRING_AS_PTR,\n                         as_ptr_span,\n-                        fluent::lint_cstring_ptr,\n-                        |diag| {\n-                            diag.span_label(as_ptr_span, fluent::as_ptr_label)\n-                                .span_label(unwrap.span, fluent::unwrap_label)\n-                                .note(fluent::note)\n-                                .help(fluent::help)\n-                        },\n+                        CStringPtr { as_ptr: as_ptr_span, unwrap: unwrap.span },\n                     );\n                 }\n             }"}]}