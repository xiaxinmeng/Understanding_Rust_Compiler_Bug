{"sha": "a8eeb7cdb135da1cd582c6093c1739732727a4a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4ZWViN2NkYjEzNWRhMWNkNTgyYzYwOTNjMTczOTczMjcyN2E0YTI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-05-22T08:37:27Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-05-22T08:37:27Z"}, "message": "Auto merge of #4125 - Manishearth:rustup, r=oli-obk\n\nRustup to rustc 1.36.0-nightly (dbfe70dfc 2019-05-22)\n\nnot 100% sure of the Symbol stuff\n\nr? @oli-obk", "tree": {"sha": "9b7e5262bfb091b3432b69f307b2ca32eb1ce710", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b7e5262bfb091b3432b69f307b2ca32eb1ce710"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8eeb7cdb135da1cd582c6093c1739732727a4a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8eeb7cdb135da1cd582c6093c1739732727a4a2", "html_url": "https://github.com/rust-lang/rust/commit/a8eeb7cdb135da1cd582c6093c1739732727a4a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8eeb7cdb135da1cd582c6093c1739732727a4a2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2cc23a5b18de3726de81202802fc459559342215", "url": "https://api.github.com/repos/rust-lang/rust/commits/2cc23a5b18de3726de81202802fc459559342215", "html_url": "https://github.com/rust-lang/rust/commit/2cc23a5b18de3726de81202802fc459559342215"}, {"sha": "833ef0036a0e6cc6186e9ca617c3d73fdd00b939", "url": "https://api.github.com/repos/rust-lang/rust/commits/833ef0036a0e6cc6186e9ca617c3d73fdd00b939", "html_url": "https://github.com/rust-lang/rust/commit/833ef0036a0e6cc6186e9ca617c3d73fdd00b939"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "130a7f1fa6d61277fe4cd20d7c2ada7858c4d1f2", "filename": ".travis.yml", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a8eeb7cdb135da1cd582c6093c1739732727a4a2/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/a8eeb7cdb135da1cd582c6093c1739732727a4a2/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=a8eeb7cdb135da1cd582c6093c1739732727a4a2", "patch": "@@ -51,8 +51,9 @@ matrix:\n     # We don't want to run these always because they go towards\n     # the build limit within the Travis rust-lang account.\n     # The jobs are approximately sorted by execution time\n-    - env: INTEGRATION=rust-lang/cargo\n-      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n+    # disabled cargo integration test due to https://github.com/rust-lang/rust-clippy/issues/4121\n+    #- env: INTEGRATION=rust-lang/cargo\n+    #  if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=rust-lang-nursery/chalk\n       if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=rust-lang/rls"}, {"sha": "782d80a7b643b815929143647ccbfba5f022eec1", "filename": "clippy_lints/src/enum_variants.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8eeb7cdb135da1cd582c6093c1739732727a4a2/clippy_lints%2Fsrc%2Fenum_variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8eeb7cdb135da1cd582c6093c1739732727a4a2/clippy_lints%2Fsrc%2Fenum_variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_variants.rs?ref=a8eeb7cdb135da1cd582c6093c1739732727a4a2", "patch": "@@ -248,7 +248,7 @@ impl EarlyLintPass for EnumVariantNames {\n             if let Some(&(ref mod_name, ref mod_camel)) = self.modules.last() {\n                 // constants don't have surrounding modules\n                 if !mod_camel.is_empty() {\n-                    if *mod_name == item_name {\n+                    if mod_name.as_symbol() == item.ident.name {\n                         if let ItemKind::Mod(..) = item.node {\n                             span_lint(\n                                 cx,"}, {"sha": "2eaa1ac45647497aa16e8a35586965f409c52555", "filename": "clippy_lints/src/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8eeb7cdb135da1cd582c6093c1739732727a4a2/clippy_lints%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8eeb7cdb135da1cd582c6093c1739732727a4a2/clippy_lints%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformat.rs?ref=a8eeb7cdb135da1cd582c6093c1739732727a4a2", "patch": "@@ -61,7 +61,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UselessFormat {\n                         then {\n                             let (message, sugg) = if_chain! {\n                                 if let ExprKind::MethodCall(ref path, _, _) = format_arg.node;\n-                                if path.ident.as_interned_str() == \"to_string\";\n+                                if path.ident.as_interned_str().as_symbol() == sym!(to_string);\n                                 then {\n                                     (\"`to_string()` is enough\",\n                                     snippet(cx, format_arg.span, \"<arg>\").to_string())"}, {"sha": "dda05d3fbc5248238c19119002750bda98c5e309", "filename": "clippy_lints/src/utils/higher.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a8eeb7cdb135da1cd582c6093c1739732727a4a2/clippy_lints%2Fsrc%2Futils%2Fhigher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8eeb7cdb135da1cd582c6093c1739732727a4a2/clippy_lints%2Fsrc%2Futils%2Fhigher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhigher.rs?ref=a8eeb7cdb135da1cd582c6093c1739732727a4a2", "patch": "@@ -63,10 +63,10 @@ pub fn range<'a, 'b, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &'b hir::Expr) -> O\n     if def_path.data.len() != 3 {\n         return None;\n     }\n-    if def_path.data.get(0)?.data.as_interned_str() != \"ops\" {\n+    if def_path.data.get(0)?.data.as_interned_str().as_symbol() != sym!(ops) {\n         return None;\n     }\n-    if def_path.data.get(1)?.data.as_interned_str() != \"range\" {\n+    if def_path.data.get(1)?.data.as_interned_str().as_symbol() != sym!(range) {\n         return None;\n     }\n     let type_name = def_path.data.get(2)?.data.as_interned_str();"}]}