{"sha": "f6af4efec579edc8d10f8c2ba5d3c43331130b39", "node_id": "C_kwDOAAsO6NoAKGY2YWY0ZWZlYzU3OWVkYzhkMTBmOGMyYmE1ZDNjNDMzMzExMzBiMzk", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-08-07T12:35:11Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-08-07T12:35:11Z"}, "message": "Use start_point instead of next_point to point to elided lifetime ampersand.", "tree": {"sha": "45b07c47717ae0dd4f5ec33455169ad50797c76f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45b07c47717ae0dd4f5ec33455169ad50797c76f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6af4efec579edc8d10f8c2ba5d3c43331130b39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6af4efec579edc8d10f8c2ba5d3c43331130b39", "html_url": "https://github.com/rust-lang/rust/commit/f6af4efec579edc8d10f8c2ba5d3c43331130b39", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6af4efec579edc8d10f8c2ba5d3c43331130b39/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55f46419afd2e49acfc6be176ad4aeadaa5686d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/55f46419afd2e49acfc6be176ad4aeadaa5686d7", "html_url": "https://github.com/rust-lang/rust/commit/55f46419afd2e49acfc6be176ad4aeadaa5686d7"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "0562f7b88a3b0a7d8f4bac5f2d4015a857374aea", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f6af4efec579edc8d10f8c2ba5d3c43331130b39/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6af4efec579edc8d10f8c2ba5d3c43331130b39/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=f6af4efec579edc8d10f8c2ba5d3c43331130b39", "patch": "@@ -1228,7 +1228,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                     } else {\n                         self.next_node_id()\n                     };\n-                    let span = self.tcx.sess.source_map().next_point(t.span.shrink_to_lo());\n+                    let span = self.tcx.sess.source_map().start_point(t.span);\n                     Lifetime { ident: Ident::new(kw::UnderscoreLifetime, span), id }\n                 });\n                 let lifetime = self.lower_lifetime(&region);"}, {"sha": "ac8d26fb0724a0a36a8ca210ac517c7c463f6c0c", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f6af4efec579edc8d10f8c2ba5d3c43331130b39/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6af4efec579edc8d10f8c2ba5d3c43331130b39/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=f6af4efec579edc8d10f8c2ba5d3c43331130b39", "patch": "@@ -629,7 +629,7 @@ impl<'a: 'ast, 'ast> Visitor<'ast> for LateResolutionVisitor<'a, '_, 'ast> {\n                 // Elided lifetime in reference: we resolve as if there was some lifetime `'_` with\n                 // NodeId `ty.id`.\n                 // This span will be used in case of elision failure.\n-                let span = self.r.session.source_map().next_point(ty.span.shrink_to_lo());\n+                let span = self.r.session.source_map().start_point(ty.span);\n                 self.resolve_elided_lifetime(ty.id, span);\n                 visit::walk_ty(self, ty);\n             }"}, {"sha": "7d8948bd844cf03832e4417e26e46d5fef71c656", "filename": "src/test/ui/lifetimes/fullwidth-ampersand.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f6af4efec579edc8d10f8c2ba5d3c43331130b39/src%2Ftest%2Fui%2Flifetimes%2Ffullwidth-ampersand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6af4efec579edc8d10f8c2ba5d3c43331130b39/src%2Ftest%2Fui%2Flifetimes%2Ffullwidth-ampersand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Ffullwidth-ampersand.rs?ref=f6af4efec579edc8d10f8c2ba5d3c43331130b39", "patch": "@@ -0,0 +1,7 @@\n+// Verify that we do not ICE when the user uses a multubyte ampersand.\n+\n+fn f(_: &\uff06()) -> &() { todo!() }\n+//~^ ERROR unknown start of token: \\u{ff06}\n+//~| ERROR missing lifetime specifier [E0106]\n+\n+fn main() {}"}, {"sha": "4645254f4b70d2f6709459da29cd2063d2a47da5", "filename": "src/test/ui/lifetimes/fullwidth-ampersand.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f6af4efec579edc8d10f8c2ba5d3c43331130b39/src%2Ftest%2Fui%2Flifetimes%2Ffullwidth-ampersand.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f6af4efec579edc8d10f8c2ba5d3c43331130b39/src%2Ftest%2Fui%2Flifetimes%2Ffullwidth-ampersand.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Ffullwidth-ampersand.stderr?ref=f6af4efec579edc8d10f8c2ba5d3c43331130b39", "patch": "@@ -0,0 +1,26 @@\n+error: unknown start of token: \\u{ff06}\n+  --> $DIR/fullwidth-ampersand.rs:3:10\n+   |\n+LL | fn f(_: &\uff06()) -> &() { todo!() }\n+   |          ^^\n+   |\n+help: Unicode character '\uff06' (Fullwidth Ampersand) looks like '&' (Ampersand), but it is not\n+   |\n+LL | fn f(_: &&()) -> &() { todo!() }\n+   |          ~\n+\n+error[E0106]: missing lifetime specifier\n+  --> $DIR/fullwidth-ampersand.rs:3:18\n+   |\n+LL | fn f(_: &\uff06()) -> &() { todo!() }\n+   |         -----     ^ expected named lifetime parameter\n+   |\n+   = help: this function's return type contains a borrowed value, but the signature does not say which one of argument 1's 2 lifetimes it is borrowed from\n+help: consider introducing a named lifetime parameter\n+   |\n+LL | fn f<'a>(_: &'a \uff06'a ()) -> &'a () { todo!() }\n+   |     ++++     ++   ++         ++\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0106`."}]}