{"sha": "5860e78ce9b5926de2d856d2dc8e4f3790584b81", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4NjBlNzhjZTliNTkyNmRlMmQ4NTZkMmRjOGU0ZjM3OTA1ODRiODE=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-01-20T23:15:37Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-02-11T20:14:05Z"}, "message": "Skip caching block transfer functions for acyclic MIR", "tree": {"sha": "ab4a857425fba75710c1b8514be359bb1d711ffe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab4a857425fba75710c1b8514be359bb1d711ffe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5860e78ce9b5926de2d856d2dc8e4f3790584b81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5860e78ce9b5926de2d856d2dc8e4f3790584b81", "html_url": "https://github.com/rust-lang/rust/commit/5860e78ce9b5926de2d856d2dc8e4f3790584b81", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5860e78ce9b5926de2d856d2dc8e4f3790584b81/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42d19a4e18d96bca6c56770a549eeda386d5b189", "url": "https://api.github.com/repos/rust-lang/rust/commits/42d19a4e18d96bca6c56770a549eeda386d5b189", "html_url": "https://github.com/rust-lang/rust/commit/42d19a4e18d96bca6c56770a549eeda386d5b189"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "b81f0adc2015b972812dc0b860b65f10a0bc62c6", "filename": "src/librustc_mir/dataflow/generic/engine.rs", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/5860e78ce9b5926de2d856d2dc8e4f3790584b81/src%2Flibrustc_mir%2Fdataflow%2Fgeneric%2Fengine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5860e78ce9b5926de2d856d2dc8e4f3790584b81/src%2Flibrustc_mir%2Fdataflow%2Fgeneric%2Fengine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fgeneric%2Fengine.rs?ref=5860e78ce9b5926de2d856d2dc8e4f3790584b81", "patch": "@@ -44,15 +44,20 @@ where\n         def_id: DefId,\n         analysis: A,\n     ) -> Self {\n+        // If there are no back-edges in the control-flow graph, we only ever need to apply the\n+        // transfer function for each block exactly once (assuming that we process blocks in RPO).\n+        //\n+        // In this case, there's no need to compute the block transfer functions ahead of time.\n+        if !body.is_cfg_cyclic() {\n+            return Self::new(tcx, body, def_id, analysis, None);\n+        }\n+\n+        // Otherwise, compute and store the cumulative transfer function for each block.\n+\n         let bits_per_block = analysis.bits_per_block(body);\n         let mut trans_for_block =\n             IndexVec::from_elem(GenKillSet::identity(bits_per_block), body.basic_blocks());\n \n-        // Compute cumulative block transfer functions.\n-        //\n-        // FIXME: we may want to skip this if the MIR is acyclic, since we will never access a\n-        // block transfer function more than once.\n-\n         for (block, block_data) in body.basic_blocks().iter_enumerated() {\n             let trans = &mut trans_for_block[block];\n \n@@ -62,11 +67,10 @@ where\n                 analysis.statement_effect(trans, statement, loc);\n             }\n \n-            if let Some(terminator) = &block_data.terminator {\n-                let loc = Location { block, statement_index: block_data.statements.len() };\n-                analysis.before_terminator_effect(trans, terminator, loc);\n-                analysis.terminator_effect(trans, terminator, loc);\n-            }\n+            let terminator = block_data.terminator();\n+            let loc = Location { block, statement_index: block_data.statements.len() };\n+            analysis.before_terminator_effect(trans, terminator, loc);\n+            analysis.terminator_effect(trans, terminator, loc);\n         }\n \n         Self::new(tcx, body, def_id, analysis, Some(trans_for_block))"}]}