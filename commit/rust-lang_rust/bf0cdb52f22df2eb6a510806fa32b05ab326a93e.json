{"sha": "bf0cdb52f22df2eb6a510806fa32b05ab326a93e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmMGNkYjUyZjIyZGYyZWI2YTUxMDgwNmZhMzJiMDVhYjMyNmE5M2U=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2017-10-20T21:00:57Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2017-10-29T19:14:23Z"}, "message": "Add several lints into `unused` lint group\n\nRemove a couple of obsolete lints", "tree": {"sha": "5012f67e5c6015e0b6d8db87ac257a6157aa95f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5012f67e5c6015e0b6d8db87ac257a6157aa95f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf0cdb52f22df2eb6a510806fa32b05ab326a93e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf0cdb52f22df2eb6a510806fa32b05ab326a93e", "html_url": "https://github.com/rust-lang/rust/commit/bf0cdb52f22df2eb6a510806fa32b05ab326a93e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "690ff045949ac3f3c5bd341e1584f90bc49f0596", "url": "https://api.github.com/repos/rust-lang/rust/commits/690ff045949ac3f3c5bd341e1584f90bc49f0596", "html_url": "https://github.com/rust-lang/rust/commit/690ff045949ac3f3c5bd341e1584f90bc49f0596"}], "stats": {"total": 108, "additions": 53, "deletions": 55}, "files": [{"sha": "0cec26d339c6931da15173e39509cea485424e9b", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=bf0cdb52f22df2eb6a510806fa32b05ab326a93e", "patch": "@@ -47,6 +47,7 @@\n #![feature(core_intrinsics)]\n #![feature(i128_type)]\n #![cfg_attr(windows, feature(libc))]\n+#![feature(macro_vis_matcher)]\n #![feature(never_type)]\n #![feature(nonzero)]\n #![feature(quote)]"}, {"sha": "855cc069d117a4184c258b8d562ddd8da8b94a0c", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=bf0cdb52f22df2eb6a510806fa32b05ab326a93e", "patch": "@@ -106,12 +106,6 @@ declare_lint! {\n     \"unknown crate type found in #[crate_type] directive\"\n }\n \n-declare_lint! {\n-    pub FAT_PTR_TRANSMUTES,\n-    Allow,\n-    \"detects transmutes of fat pointers\"\n-}\n-\n declare_lint! {\n     pub TRIVIAL_CASTS,\n     Allow,\n@@ -250,7 +244,6 @@ impl LintPass for HardwiredLints {\n             UNUSED_FEATURES,\n             STABLE_FEATURES,\n             UNKNOWN_CRATE_TYPES,\n-            FAT_PTR_TRANSMUTES,\n             TRIVIAL_CASTS,\n             TRIVIAL_NUMERIC_CASTS,\n             PRIVATE_IN_PUBLIC,"}, {"sha": "52dcbfdedef5d23a3ceec8af92095fac62e79a51", "filename": "src/librustc/lint/mod.rs", "status": "modified", "additions": 7, "deletions": 20, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Flibrustc%2Flint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Flibrustc%2Flint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fmod.rs?ref=bf0cdb52f22df2eb6a510806fa32b05ab326a93e", "patch": "@@ -84,29 +84,16 @@ impl Lint {\n     }\n }\n \n-/// Build a `Lint` initializer.\n-#[macro_export]\n-macro_rules! lint_initializer {\n-    ($name:ident, $level:ident, $desc:expr) => (\n-        ::rustc::lint::Lint {\n-            name: stringify!($name),\n-            default_level: ::rustc::lint::$level,\n-            desc: $desc,\n-        }\n-    )\n-}\n-\n /// Declare a static item of type `&'static Lint`.\n #[macro_export]\n macro_rules! declare_lint {\n-    (pub $name:ident, $level:ident, $desc:expr) => (\n-        pub static $name: &'static ::rustc::lint::Lint\n-            = &lint_initializer!($name, $level, $desc);\n-    );\n-    ($name:ident, $level:ident, $desc:expr) => (\n-        static $name: &'static ::rustc::lint::Lint\n-            = &lint_initializer!($name, $level, $desc);\n-    );\n+    ($vis: vis $NAME: ident, $Level: ident, $desc: expr) => (\n+        $vis static $NAME: &$crate::lint::Lint = &$crate::lint::Lint {\n+            name: stringify!($NAME),\n+            default_level: $crate::lint::$Level,\n+            desc: $desc\n+        };\n+    )\n }\n \n /// Declare a static `LintArray` and return it as an expression."}, {"sha": "70cac419648d5e663427369a577cac2c27cd2a44", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=bf0cdb52f22df2eb6a510806fa32b05ab326a93e", "patch": "@@ -621,12 +621,6 @@ impl EarlyLintPass for AnonymousParameters {\n     }\n }\n \n-declare_lint! {\n-    DEPRECATED_ATTR,\n-    Warn,\n-    \"detects use of deprecated attributes\"\n-}\n-\n /// Checks for use of attributes which have been deprecated.\n #[derive(Clone)]\n pub struct DeprecatedAttr {\n@@ -645,7 +639,7 @@ impl DeprecatedAttr {\n \n impl LintPass for DeprecatedAttr {\n     fn get_lints(&self) -> LintArray {\n-        lint_array!(DEPRECATED_ATTR)\n+        lint_array!()\n     }\n }\n "}, {"sha": "42fcf377d65396a29034d8f557b4ff6f22d4fcdc", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=bf0cdb52f22df2eb6a510806fa32b05ab326a93e", "patch": "@@ -28,6 +28,7 @@\n #![feature(box_patterns)]\n #![feature(box_syntax)]\n #![feature(i128_type)]\n+#![feature(macro_vis_matcher)]\n #![feature(quote)]\n #![feature(rustc_diagnostic_macros)]\n #![feature(slice_patterns)]\n@@ -163,7 +164,12 @@ pub fn register_builtins(store: &mut lint::LintStore, sess: Option<&Session>) {\n                     UNUSED_UNSAFE,\n                     PATH_STATEMENTS,\n                     UNUSED_ATTRIBUTES,\n-                    UNUSED_MACROS);\n+                    UNUSED_MACROS,\n+                    UNUSED_ALLOCATION,\n+                    UNUSED_DOC_COMMENT,\n+                    UNUSED_EXTERN_CRATES,\n+                    UNUSED_FEATURES,\n+                    UNUSED_PARENS);\n \n     // Guidelines for creating a future incompatibility lint:\n     //\n@@ -239,15 +245,15 @@ pub fn register_builtins(store: &mut lint::LintStore, sess: Option<&Session>) {\n \n     // Register renamed and removed lints\n     store.register_renamed(\"unknown_features\", \"unused_features\");\n-    store.register_removed(\"unsigned_negation\",\n-                           \"replaced by negate_unsigned feature gate\");\n+    store.register_removed(\"unsigned_negation\", \"replaced by negate_unsigned feature gate\");\n     store.register_removed(\"negate_unsigned\", \"cast a signed value instead\");\n     store.register_removed(\"raw_pointer_derive\", \"using derive with raw pointers is ok\");\n     // This was renamed to raw_pointer_derive, which was then removed,\n     // so it is also considered removed\n-    store.register_removed(\"raw_pointer_deriving\",\n-                           \"using derive with raw pointers is ok\");\n+    store.register_removed(\"raw_pointer_deriving\", \"using derive with raw pointers is ok\");\n     store.register_removed(\"drop_with_repr_extern\", \"drop flags have been removed\");\n+    store.register_removed(\"fat_ptr_transmutes\", \"was accidentally removed back in 2014\");\n+    store.register_removed(\"deprecated_attr\", \"use `deprecated` instead\");\n     store.register_removed(\"transmute_from_fn_item_types\",\n         \"always cast functions before transmuting them\");\n     store.register_removed(\"hr_lifetime_in_assoc_type\","}, {"sha": "32f724f7541c7638da2e1a850afa497d9ea833aa", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=bf0cdb52f22df2eb6a510806fa32b05ab326a93e", "patch": "@@ -225,7 +225,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnusedAttributes {\n }\n \n declare_lint! {\n-    UNUSED_PARENS,\n+    pub(super) UNUSED_PARENS,\n     Warn,\n     \"`if`, `match`, `while` and `return` do not need parentheses\"\n }\n@@ -350,7 +350,7 @@ impl EarlyLintPass for UnusedImportBraces {\n }\n \n declare_lint! {\n-    UNUSED_ALLOCATION,\n+    pub(super) UNUSED_ALLOCATION,\n     Warn,\n     \"detects unnecessary allocations that can be eliminated\"\n }"}, {"sha": "a6eaff4481c769b8a599a34049f9cc9287532552", "filename": "src/librustc_passes/consts.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Flibrustc_passes%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Flibrustc_passes%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fconsts.rs?ref=bf0cdb52f22df2eb6a510806fa32b05ab326a93e", "patch": "@@ -140,8 +140,7 @@ impl<'a, 'gcx> CheckCrateVisitor<'a, 'gcx> {\n                     self.tcx.lint_node(CONST_ERR,\n                                        expr.id,\n                                        expr.span,\n-                                       &format!(\"constant evaluation error: {}. This will \\\n-                                                 become a HARD ERROR in the future\",\n+                                       &format!(\"constant evaluation error: {}\",\n                                                 err.description().into_oneline()));\n                 }\n             }"}, {"sha": "d3f921e0878aeb43fd82fc040752618e875aad8b", "filename": "src/test/compile-fail-fulldeps/auxiliary/lint_for_crate.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_for_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_for_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_for_crate.rs?ref=bf0cdb52f22df2eb6a510806fa32b05ab326a93e", "patch": "@@ -12,6 +12,7 @@\n \n #![feature(plugin_registrar, rustc_private)]\n #![feature(box_syntax)]\n+#![feature(macro_vis_matcher)]\n \n #[macro_use] extern crate rustc;\n extern crate rustc_plugin;"}, {"sha": "a0c72243d4821fad1fc9d81fb0c4c2e18b1c26a9", "filename": "src/test/compile-fail-fulldeps/auxiliary/lint_group_plugin_test.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_group_plugin_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_group_plugin_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_group_plugin_test.rs?ref=bf0cdb52f22df2eb6a510806fa32b05ab326a93e", "patch": "@@ -12,6 +12,7 @@\n \n #![feature(plugin_registrar)]\n #![feature(box_syntax, rustc_private)]\n+#![feature(macro_vis_matcher)]\n \n // Load rustc as a plugin to get macros\n #[macro_use]"}, {"sha": "cbbfbd80603606ac9070bb06c102076ab98024ef", "filename": "src/test/compile-fail-fulldeps/auxiliary/lint_plugin_test.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_plugin_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_plugin_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_plugin_test.rs?ref=bf0cdb52f22df2eb6a510806fa32b05ab326a93e", "patch": "@@ -12,6 +12,7 @@\n \n #![feature(plugin_registrar)]\n #![feature(box_syntax, rustc_private)]\n+#![feature(macro_vis_matcher)]\n \n extern crate syntax;\n "}, {"sha": "058a8d0a1bd4f5532dde59920b1783be1c71c2b8", "filename": "src/test/compile-fail/const-eval-overflow.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow.rs?ref=bf0cdb52f22df2eb6a510806fa32b05ab326a93e", "patch": "@@ -82,7 +82,7 @@ const VALS_I64: (i64, i64, i64, i64) =\n      );\n \n const VALS_U8: (u8, u8, u8, u8) =\n-    ( //~ WARN constant evaluation error: attempt to subtract with overflow.\n+    ( //~ WARN constant evaluation error: attempt to subtract with overflow\n      -(u8::MIN as i8) as u8,\n      u8::MIN - 1,\n      //~^ ERROR constant evaluation error\n@@ -96,7 +96,7 @@ const VALS_U8: (u8, u8, u8, u8) =\n      );\n \n const VALS_U16: (u16, u16, u16, u16) =\n-    ( //~ WARN constant evaluation error: attempt to subtract with overflow.\n+    ( //~ WARN constant evaluation error: attempt to subtract with overflow\n      -(u16::MIN as i16) as u16,\n      u16::MIN - 1,\n      //~^ ERROR constant evaluation error\n@@ -110,7 +110,7 @@ const VALS_U16: (u16, u16, u16, u16) =\n      );\n \n const VALS_U32: (u32, u32, u32, u32) =\n-    ( //~ WARN constant evaluation error: attempt to subtract with overflow.\n+    ( //~ WARN constant evaluation error: attempt to subtract with overflow\n      -(u32::MIN as i32) as u32,\n      u32::MIN - 1,\n      //~^ ERROR constant evaluation error\n@@ -124,7 +124,7 @@ const VALS_U32: (u32, u32, u32, u32) =\n      );\n \n const VALS_U64: (u64, u64, u64, u64) =\n-    ( //~ WARN constant evaluation error: attempt to subtract with overflow.\n+    ( //~ WARN constant evaluation error: attempt to subtract with overflow\n      -(u64::MIN as i64) as u64,\n      u64::MIN - 1,\n      //~^ ERROR constant evaluation error"}, {"sha": "d3f921e0878aeb43fd82fc040752618e875aad8b", "filename": "src/test/run-pass-fulldeps/auxiliary/lint_for_crate.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Flint_for_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Flint_for_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Flint_for_crate.rs?ref=bf0cdb52f22df2eb6a510806fa32b05ab326a93e", "patch": "@@ -12,6 +12,7 @@\n \n #![feature(plugin_registrar, rustc_private)]\n #![feature(box_syntax)]\n+#![feature(macro_vis_matcher)]\n \n #[macro_use] extern crate rustc;\n extern crate rustc_plugin;"}, {"sha": "29b6cc012b393ad759a640338c3245e845e301cd", "filename": "src/test/run-pass-fulldeps/proc-macro/auxiliary/issue-40001-plugin.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fissue-40001-plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fissue-40001-plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fissue-40001-plugin.rs?ref=bf0cdb52f22df2eb6a510806fa32b05ab326a93e", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n #![feature(box_syntax, plugin, plugin_registrar, rustc_private)]\n+#![feature(macro_vis_matcher)]\n #![crate_type = \"dylib\"]\n \n #[macro_use]"}, {"sha": "a0c72243d4821fad1fc9d81fb0c4c2e18b1c26a9", "filename": "src/test/ui-fulldeps/auxiliary/lint_group_plugin_test.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint_group_plugin_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint_group_plugin_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint_group_plugin_test.rs?ref=bf0cdb52f22df2eb6a510806fa32b05ab326a93e", "patch": "@@ -12,6 +12,7 @@\n \n #![feature(plugin_registrar)]\n #![feature(box_syntax, rustc_private)]\n+#![feature(macro_vis_matcher)]\n \n // Load rustc as a plugin to get macros\n #[macro_use]"}, {"sha": "cbbfbd80603606ac9070bb06c102076ab98024ef", "filename": "src/test/ui-fulldeps/auxiliary/lint_plugin_test.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint_plugin_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint_plugin_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint_plugin_test.rs?ref=bf0cdb52f22df2eb6a510806fa32b05ab326a93e", "patch": "@@ -12,6 +12,7 @@\n \n #![feature(plugin_registrar)]\n #![feature(box_syntax, rustc_private)]\n+#![feature(macro_vis_matcher)]\n \n extern crate syntax;\n "}, {"sha": "58dedcfd9b10317e82ab16bee93589a2b27a4d07", "filename": "src/test/ui/const-eval/issue-43197.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Ftest%2Fui%2Fconst-eval%2Fissue-43197.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Ftest%2Fui%2Fconst-eval%2Fissue-43197.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fissue-43197.stderr?ref=bf0cdb52f22df2eb6a510806fa32b05ab326a93e", "patch": "@@ -1,12 +1,12 @@\n-warning: constant evaluation error: attempt to subtract with overflow. This will become a HARD ERROR in the future\n+warning: constant evaluation error: attempt to subtract with overflow\n   --> $DIR/issue-43197.rs:18:20\n    |\n 18 |     const X: u32 = 0-1;\n    |                    ^^^\n    |\n    = note: #[warn(const_err)] on by default\n \n-warning: constant evaluation error: attempt to subtract with overflow. This will become a HARD ERROR in the future\n+warning: constant evaluation error: attempt to subtract with overflow\n   --> $DIR/issue-43197.rs:19:20\n    |\n 19 |     const Y: u32 = foo(0-1);"}, {"sha": "bf2b5769bf83047b01133ba5183e4c1e6957393e", "filename": "src/test/ui/lint/suggestions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Ftest%2Fui%2Flint%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Ftest%2Fui%2Flint%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fsuggestions.rs?ref=bf0cdb52f22df2eb6a510806fa32b05ab326a93e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![warn(unused_mut)] // UI tests pass `-A unused`\u2014see Issue #43896\n+#![warn(unused_mut, unused_parens)] // UI tests pass `-A unused`\u2014see Issue #43896\n #![feature(no_debug)]\n \n #[no_mangle] static SHENZHOU: usize = 1; // should suggest `pub`"}, {"sha": "a00146668362a2c3d3a7ab4d3f57386aa472a44b", "filename": "src/test/ui/lint/suggestions.stderr", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Ftest%2Fui%2Flint%2Fsuggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Ftest%2Fui%2Flint%2Fsuggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fsuggestions.stderr?ref=bf0cdb52f22df2eb6a510806fa32b05ab326a93e", "patch": "@@ -4,7 +4,11 @@ warning: unnecessary parentheses around assigned value\n 30 |         let mut a = (1); // should suggest no `mut`, no parens\n    |                     ^^^ help: remove these parentheses\n    |\n-   = note: #[warn(unused_parens)] on by default\n+note: lint level defined here\n+  --> $DIR/suggestions.rs:11:21\n+   |\n+11 | #![warn(unused_mut, unused_parens)] // UI tests pass `-A unused`\u2014see Issue #43896\n+   |                     ^^^^^^^^^^^^^\n \n warning: use of deprecated attribute `no_debug`: the `#[no_debug]` attribute was an experimental feature that has been deprecated due to lack of demand. See https://github.com/rust-lang/rust/issues/29721\n   --> $DIR/suggestions.rs:27:1\n@@ -25,7 +29,7 @@ warning: variable does not need to be mutable\n note: lint level defined here\n   --> $DIR/suggestions.rs:11:9\n    |\n-11 | #![warn(unused_mut)] // UI tests pass `-A unused`\u2014see Issue #43896\n+11 | #![warn(unused_mut, unused_parens)] // UI tests pass `-A unused`\u2014see Issue #43896\n    |         ^^^^^^^^^^\n \n warning: static is marked #[no_mangle], but not exported"}, {"sha": "15251795d5e082a5078b1dfee673aa62e85d1ee2", "filename": "src/test/ui/lint/unused_parens_json_suggestion.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Ftest%2Fui%2Flint%2Funused_parens_json_suggestion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Ftest%2Fui%2Flint%2Funused_parens_json_suggestion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_parens_json_suggestion.rs?ref=bf0cdb52f22df2eb6a510806fa32b05ab326a93e", "patch": "@@ -16,6 +16,8 @@\n // stripping away any starting or ending parenthesis characters\u2014hence this\n // test of the JSON error format.\n \n+#![warn(unused_parens)]\n+\n fn main() {\n     // We want to suggest the properly-balanced expression `1 / (2 + 3)`, not\n     // the malformed `1 / (2 + 3`"}, {"sha": "ae5b53da1750387f461b47cb47c33438d53eff58", "filename": "src/test/ui/lint/unused_parens_json_suggestion.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Ftest%2Fui%2Flint%2Funused_parens_json_suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Ftest%2Fui%2Flint%2Funused_parens_json_suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_parens_json_suggestion.stderr?ref=bf0cdb52f22df2eb6a510806fa32b05ab326a93e", "patch": "@@ -1 +1 @@\n-{\"message\":\"unnecessary parentheses around assigned value\",\"code\":null,\"level\":\"warning\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_json_suggestion.rs\",\"byte_start\":976,\"byte_end\":989,\"line_start\":22,\"line_end\":22,\"column_start\":14,\"column_end\":27,\"is_primary\":true,\"text\":[{\"text\":\"    let _a = (1 / (2 + 3));\",\"highlight_start\":14,\"highlight_end\":27}],\"label\":null,\"suggested_replacement\":null,\"expansion\":null}],\"children\":[{\"message\":\"#[warn(unused_parens)] on by default\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"remove these parentheses\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_json_suggestion.rs\",\"byte_start\":976,\"byte_end\":989,\"line_start\":22,\"line_end\":22,\"column_start\":14,\"column_end\":27,\"is_primary\":true,\"text\":[{\"text\":\"    let _a = (1 / (2 + 3));\",\"highlight_start\":14,\"highlight_end\":27}],\"label\":null,\"suggested_replacement\":\"1 / (2 + 3)\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":null}\n+{\"message\":\"unnecessary parentheses around assigned value\",\"code\":null,\"level\":\"warning\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_json_suggestion.rs\",\"byte_start\":1001,\"byte_end\":1014,\"line_start\":24,\"line_end\":24,\"column_start\":14,\"column_end\":27,\"is_primary\":true,\"text\":[{\"text\":\"    let _a = (1 / (2 + 3));\",\"highlight_start\":14,\"highlight_end\":27}],\"label\":null,\"suggested_replacement\":null,\"expansion\":null}],\"children\":[{\"message\":\"lint level defined here\",\"code\":null,\"level\":\"note\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_json_suggestion.rs\",\"byte_start\":847,\"byte_end\":860,\"line_start\":19,\"line_end\":19,\"column_start\":9,\"column_end\":22,\"is_primary\":true,\"text\":[{\"text\":\"#![warn(unused_parens)]\",\"highlight_start\":9,\"highlight_end\":22}],\"label\":null,\"suggested_replacement\":null,\"expansion\":null}],\"children\":[],\"rendered\":null},{\"message\":\"remove these parentheses\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_json_suggestion.rs\",\"byte_start\":1001,\"byte_end\":1014,\"line_start\":24,\"line_end\":24,\"column_start\":14,\"column_end\":27,\"is_primary\":true,\"text\":[{\"text\":\"    let _a = (1 / (2 + 3));\",\"highlight_start\":14,\"highlight_end\":27}],\"label\":null,\"suggested_replacement\":\"1 / (2 + 3)\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":null}"}, {"sha": "059312b2851c6ccbefc02addf9dbc4eb48cf0d3a", "filename": "src/test/ui/path-lookahead.stderr", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Ftest%2Fui%2Fpath-lookahead.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Ftest%2Fui%2Fpath-lookahead.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpath-lookahead.stderr?ref=bf0cdb52f22df2eb6a510806fa32b05ab326a93e", "patch": "@@ -4,7 +4,12 @@ warning: unnecessary parentheses around `return` value\n 18 |   return (<T as ToString>::to_string(&arg)); //~WARN unnecessary parentheses around `return` value\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove these parentheses\n    |\n-   = note: #[warn(unused_parens)] on by default\n+note: lint level defined here\n+  --> $DIR/path-lookahead.rs:13:9\n+   |\n+13 | #![warn(unused)]\n+   |         ^^^^^^\n+   = note: #[warn(unused_parens)] implied by #[warn(unused)]\n \n warning: function is never used: `with_parens`\n   --> $DIR/path-lookahead.rs:17:1"}, {"sha": "9dd420c14586d5add18cde7756c6af237e51d04a", "filename": "src/tools/toolstate.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Ftools%2Ftoolstate.toml", "raw_url": "https://github.com/rust-lang/rust/raw/bf0cdb52f22df2eb6a510806fa32b05ab326a93e/src%2Ftools%2Ftoolstate.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftoolstate.toml?ref=bf0cdb52f22df2eb6a510806fa32b05ab326a93e", "patch": "@@ -26,7 +26,7 @@\n miri = \"Broken\"\n \n # ping @Manishearth @llogiq @mcarton @oli-obk\n-clippy = \"Compiling\"\n+clippy = \"Broken\"\n \n # ping @nrc\n rls = \"Broken\""}]}