{"sha": "33f34bdb4e67e670b6b6979c690c510eab00c135", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzZjM0YmRiNGU2N2U2NzBiNmI2OTc5YzY5MGM1MTBlYWIwMGMxMzU=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-12-05T19:19:50Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-12-05T19:19:50Z"}, "message": "Merge remote-tracking branch 'csouth3/trieset-bitops' into rollup-2014_12_03\n\nConflicts:\n\tsrc/libcollections/trie/set.rs", "tree": {"sha": "2434196ae0426a6ef84dbdc2e664f974667b7a3d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2434196ae0426a6ef84dbdc2e664f974667b7a3d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33f34bdb4e67e670b6b6979c690c510eab00c135", "comment_count": 3, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33f34bdb4e67e670b6b6979c690c510eab00c135", "html_url": "https://github.com/rust-lang/rust/commit/33f34bdb4e67e670b6b6979c690c510eab00c135", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33f34bdb4e67e670b6b6979c690c510eab00c135/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "090110779fef952af868109ff39fa08974165bf0", "url": "https://api.github.com/repos/rust-lang/rust/commits/090110779fef952af868109ff39fa08974165bf0", "html_url": "https://github.com/rust-lang/rust/commit/090110779fef952af868109ff39fa08974165bf0"}, {"sha": "309ab34b7ad80c43f619d4ed7faa8e3905eae530", "url": "https://api.github.com/repos/rust-lang/rust/commits/309ab34b7ad80c43f619d4ed7faa8e3905eae530", "html_url": "https://github.com/rust-lang/rust/commit/309ab34b7ad80c43f619d4ed7faa8e3905eae530"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "1b3657943da6dbad8765c03a668a7ead9fb2ec54", "filename": "src/libcollections/trie/set.rs", "status": "modified", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/33f34bdb4e67e670b6b6979c690c510eab00c135/src%2Flibcollections%2Ftrie%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33f34bdb4e67e670b6b6979c690c510eab00c135/src%2Flibcollections%2Ftrie%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Ftrie%2Fset.rs?ref=33f34bdb4e67e670b6b6979c690c510eab00c135", "patch": "@@ -462,25 +462,85 @@ impl Extend<uint> for TrieSet {\n     }\n }\n \n+#[unstable = \"matches collection reform specification, waiting for dust to settle\"]\n impl BitOr<TrieSet, TrieSet> for TrieSet {\n+    /// Returns the union of `self` and `rhs` as a new `TrieSet`.\n+    ///\n+    /// # Example\n+    ///\n+    /// ```\n+    /// use std::collections::TrieSet;\n+    ///\n+    /// let a: TrieSet = vec![1, 2, 3].into_iter().collect();\n+    /// let b: TrieSet = vec![3, 4, 5].into_iter().collect();\n+    ///\n+    /// let set: TrieSet = a | b;\n+    /// let v: Vec<uint> = set.iter().collect();\n+    /// assert_eq!(v, vec![1u, 2, 3, 4, 5]);\n+    /// ```\n     fn bitor(&self, rhs: &TrieSet) -> TrieSet {\n         self.union(rhs).collect()\n     }\n }\n \n+#[unstable = \"matches collection reform specification, waiting for dust to settle\"]\n impl BitAnd<TrieSet, TrieSet> for TrieSet {\n+    /// Returns the intersection of `self` and `rhs` as a new `TrieSet`.\n+    ///\n+    /// # Example\n+    ///\n+    /// ```\n+    /// use std::collections::TrieSet;\n+    ///\n+    /// let a: TrieSet = vec![1, 2, 3].into_iter().collect();\n+    /// let b: TrieSet = vec![2, 3, 4].into_iter().collect();\n+    ///\n+    /// let set: TrieSet = a & b;\n+    /// let v: Vec<uint> = set.iter().collect();\n+    /// assert_eq!(v, vec![2u, 3]);\n+    /// ```\n     fn bitand(&self, rhs: &TrieSet) -> TrieSet {\n         self.intersection(rhs).collect()\n     }\n }\n \n+#[unstable = \"matches collection reform specification, waiting for dust to settle\"]\n impl BitXor<TrieSet, TrieSet> for TrieSet {\n+    /// Returns the symmetric difference of `self` and `rhs` as a new `TrieSet`.\n+    ///\n+    /// # Example\n+    ///\n+    /// ```\n+    /// use std::collections::TrieSet;\n+    ///\n+    /// let a: TrieSet = vec![1, 2, 3].into_iter().collect();\n+    /// let b: TrieSet = vec![3, 4, 5].into_iter().collect();\n+    ///\n+    /// let set: TrieSet = a ^ b;\n+    /// let v: Vec<uint> = set.iter().collect();\n+    /// assert_eq!(v, vec![1u, 2, 4, 5]);\n+    /// ```\n     fn bitxor(&self, rhs: &TrieSet) -> TrieSet {\n         self.symmetric_difference(rhs).collect()\n     }\n }\n \n+#[unstable = \"matches collection reform specification, waiting for dust to settle\"]\n impl Sub<TrieSet, TrieSet> for TrieSet {\n+    /// Returns the difference of `self` and `rhs` as a new `TrieSet`.\n+    ///\n+    /// # Example\n+    ///\n+    /// ```\n+    /// use std::collections::TrieSet;\n+    ///\n+    /// let a: TrieSet = vec![1, 2, 3].into_iter().collect();\n+    /// let b: TrieSet = vec![3, 4, 5].into_iter().collect();\n+    ///\n+    /// let set: TrieSet = a - b;\n+    /// let v: Vec<uint> = set.iter().collect();\n+    /// assert_eq!(v, vec![1u, 2]);\n+    /// ```\n     fn sub(&self, rhs: &TrieSet) -> TrieSet {\n         self.difference(rhs).collect()\n     }"}]}