{"sha": "dc00efff9f44ddda1ce318e28f69e716f58d39dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjMDBlZmZmOWY0NGRkZGExY2UzMThlMjhmNjllNzE2ZjU4ZDM5ZGQ=", "commit": {"author": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2020-08-21T07:55:33Z"}, "committer": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2020-09-05T04:51:28Z"}, "message": "Explain contract of {read, write}_target_uint", "tree": {"sha": "c4905ab0f98e2f1d4fe865518415e3a805be04d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4905ab0f98e2f1d4fe865518415e3a805be04d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc00efff9f44ddda1ce318e28f69e716f58d39dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc00efff9f44ddda1ce318e28f69e716f58d39dd", "html_url": "https://github.com/rust-lang/rust/commit/dc00efff9f44ddda1ce318e28f69e716f58d39dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc00efff9f44ddda1ce318e28f69e716f58d39dd/comments", "author": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe2a867125ff80dcb12df19581bd28b342b15c28", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe2a867125ff80dcb12df19581bd28b342b15c28", "html_url": "https://github.com/rust-lang/rust/commit/fe2a867125ff80dcb12df19581bd28b342b15c28"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "99966121e4d97301f13806087deee20630c08e5f", "filename": "compiler/rustc_middle/src/mir/interpret/mod.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dc00efff9f44ddda1ce318e28f69e716f58d39dd/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc00efff9f44ddda1ce318e28f69e716f58d39dd/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fmod.rs?ref=dc00efff9f44ddda1ce318e28f69e716f58d39dd", "patch": "@@ -561,17 +561,23 @@ pub fn write_target_uint(\n     mut target: &mut [u8],\n     data: u128,\n ) -> Result<(), io::Error> {\n+    // This u128 holds an \"any-size uint\" (since smaller uints can fits in it)\n+    // So we do not write all bytes of the u128, just the \"payload\".\n     match endianness {\n         Endian::Little => target.write(&data.to_le_bytes())?,\n         Endian::Big => target.write(&data.to_be_bytes())?,\n     };\n+    debug_assert!(target.len() == 0); // We should have filled the target buffer.\n     Ok(())\n }\n \n #[inline]\n pub fn read_target_uint(endianness: Endian, mut source: &[u8]) -> Result<u128, io::Error> {\n+    // This u128 holds an \"any-size uint\" (since smaller uints can fits in it)\n     let mut buf = [0u8; std::mem::size_of::<u128>()];\n+    // So we do not read exactly 16 bytes into the u128, just the \"payload\".\n     source.read(&mut buf)?;\n+    debug_assert!(source.len() == 0); // We should have consumed the source buffer.\n     match endianness {\n         Endian::Little => Ok(u128::from_le_bytes(buf)),\n         Endian::Big => Ok(u128::from_be_bytes(buf)),"}]}