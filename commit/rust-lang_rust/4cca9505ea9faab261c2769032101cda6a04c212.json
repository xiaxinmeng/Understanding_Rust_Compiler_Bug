{"sha": "4cca9505ea9faab261c2769032101cda6a04c212", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjY2E5NTA1ZWE5ZmFhYjI2MWMyNzY5MDMyMTAxY2RhNmEwNGMyMTI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-07-28T23:45:05Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-07-28T23:45:05Z"}, "message": "Auto merge of #74791 - tmiasko:raw-waker-inline, r=LukasKalbertodt\n\nAdd #[inline] to RawWaker::new\n\n`RawWaker::new` is used when creating a new waker or cloning an existing one,\nfor example as in code below. The `RawWakerVTable::new` can be const evaluated,\nbut `RawWaker::new` itself cannot since waker pointer is not known at compile\ntime. Add `#[inline]` to avoid overhead of a function call.\n\n```rust\nunsafe fn clone_waker<W: Wake + Send + Sync + 'static>(waker: *const ()) -> RawWaker {\n    unsafe { Arc::incr_strong_count(waker as *const W) };\n    RawWaker::new(\n        waker as *const (),\n        &RawWakerVTable::new(clone_waker::<W>, wake::<W>, wake_by_ref::<W>, drop_waker::<W>),\n    )\n}\n```", "tree": {"sha": "315fbb56ddc0990b91b5a29f55b3f382425ca4a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/315fbb56ddc0990b91b5a29f55b3f382425ca4a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4cca9505ea9faab261c2769032101cda6a04c212", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4cca9505ea9faab261c2769032101cda6a04c212", "html_url": "https://github.com/rust-lang/rust/commit/4cca9505ea9faab261c2769032101cda6a04c212", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4cca9505ea9faab261c2769032101cda6a04c212/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7eff79135de09a49b50acb029925275a7b42ccb", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7eff79135de09a49b50acb029925275a7b42ccb", "html_url": "https://github.com/rust-lang/rust/commit/a7eff79135de09a49b50acb029925275a7b42ccb"}, {"sha": "0a51a9fb0013b33ddec221343b2fbfcd475b286f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a51a9fb0013b33ddec221343b2fbfcd475b286f", "html_url": "https://github.com/rust-lang/rust/commit/0a51a9fb0013b33ddec221343b2fbfcd475b286f"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "92057209d8bfdf848ce9f0354ae6ad2ac1372dac", "filename": "library/core/src/task/wake.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4cca9505ea9faab261c2769032101cda6a04c212/library%2Fcore%2Fsrc%2Ftask%2Fwake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cca9505ea9faab261c2769032101cda6a04c212/library%2Fcore%2Fsrc%2Ftask%2Fwake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ftask%2Fwake.rs?ref=4cca9505ea9faab261c2769032101cda6a04c212", "patch": "@@ -37,6 +37,7 @@ impl RawWaker {\n     /// The `vtable` customizes the behavior of a `Waker` which gets created\n     /// from a `RawWaker`. For each operation on the `Waker`, the associated\n     /// function in the `vtable` of the underlying `RawWaker` will be called.\n+    #[inline]\n     #[rustc_promotable]\n     #[stable(feature = \"futures_api\", since = \"1.36.0\")]\n     #[rustc_const_stable(feature = \"futures_api\", since = \"1.36.0\")]"}]}