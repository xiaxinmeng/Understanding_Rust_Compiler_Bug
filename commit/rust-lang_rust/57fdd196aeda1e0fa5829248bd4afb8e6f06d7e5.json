{"sha": "57fdd196aeda1e0fa5829248bd4afb8e6f06d7e5", "node_id": "C_kwDOAAsO6NoAKDU3ZmRkMTk2YWVkYTFlMGZhNTgyOTI0OGJkNGFmYjhlNmYwNmQ3ZTU", "commit": {"author": {"name": "Nikita Tomashevich", "email": "quant3234@gmail.com", "date": "2022-09-22T14:29:21Z"}, "committer": {"name": "Nikita Tomashevich", "email": "quant3234@gmail.com", "date": "2022-12-28T11:53:47Z"}, "message": "Rebase and fix", "tree": {"sha": "93629ba900f2a7e7000234c3b438ade93e6182ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93629ba900f2a7e7000234c3b438ade93e6182ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57fdd196aeda1e0fa5829248bd4afb8e6f06d7e5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEAWou4Gq79HasRseDspeR1Nh440UFAmOsLksACgkQspeR1Nh4\n40XX4g//ZJrjY2XpcD5h4Q/aS3g8c4UT+oQgI4u6fmR7AmpEQe47r6z4l57+D3a4\nCpGEAdnVXILg1mLpEU1O2LVSDnZ8TiR77FjWTI9Us9Byo+PXByRuJ9R1kpGoLjKX\ngyzqX9iDAh6xZxt/8RkKLBgZKQuhSALoqGhWVFYF29TRZwCr8zPToH5gyjqn7DdZ\nC2eYZlkLPQyH0EtFq3GEWGZDf8+gYZjBWy9WUkzdLQVBy8/Kj0/a5KWE5rroSGZ/\nbi2SyICDwbzZrLMxKfNnduR5e7phsP3zT9+lccay0jJCEA35Ssr5c5pFl9Fdkxdv\nWb8Oo3u8d23P/5/wGOXdIfOiVdrILwVrXv5aS249ZD1Z3I0UB/WUTInPo9y7g5Op\ndOkNsRWYv4LoZ+uHw9ZX1eXhBhdtNdfMwy+z4ujNilkwAkvMTm1cBnmTefYpuUM9\n3H4bJbLcwrpcxlzHy6+ColXzBwUQzZBO4WJ8LPvpotofIsJhJ0bUOyOuGCMviVM0\nequlI5cYHRvEIcyiDo82VTn6nqODOF3c2ayot0xuSx2xhYNcG9RliIk35+ZlzTak\nNZSCeGyL8H+TYht3qgh7RouLKQOrxN7cUHFaH8UxNnpuCxXoTe9Gs36LSulioTKF\ntNf3nRpl8qY9NigBZ232QJDQJBIdG6atWoHBv9dvNr7pViIt1m4=\n=WwHu\n-----END PGP SIGNATURE-----", "payload": "tree 93629ba900f2a7e7000234c3b438ade93e6182ba\nparent 0634b0119cadbf4fcc90d8a399b1c46e1442a5b5\nauthor Nikita Tomashevich <quant3234@gmail.com> 1663856961 +0300\ncommitter Nikita Tomashevich <quant3234@gmail.com> 1672228427 +0300\n\nRebase and fix\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57fdd196aeda1e0fa5829248bd4afb8e6f06d7e5", "html_url": "https://github.com/rust-lang/rust/commit/57fdd196aeda1e0fa5829248bd4afb8e6f06d7e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57fdd196aeda1e0fa5829248bd4afb8e6f06d7e5/comments", "author": {"login": "IntQuant", "id": 25219447, "node_id": "MDQ6VXNlcjI1MjE5NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/25219447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IntQuant", "html_url": "https://github.com/IntQuant", "followers_url": "https://api.github.com/users/IntQuant/followers", "following_url": "https://api.github.com/users/IntQuant/following{/other_user}", "gists_url": "https://api.github.com/users/IntQuant/gists{/gist_id}", "starred_url": "https://api.github.com/users/IntQuant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IntQuant/subscriptions", "organizations_url": "https://api.github.com/users/IntQuant/orgs", "repos_url": "https://api.github.com/users/IntQuant/repos", "events_url": "https://api.github.com/users/IntQuant/events{/privacy}", "received_events_url": "https://api.github.com/users/IntQuant/received_events", "type": "User", "site_admin": false}, "committer": {"login": "IntQuant", "id": 25219447, "node_id": "MDQ6VXNlcjI1MjE5NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/25219447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IntQuant", "html_url": "https://github.com/IntQuant", "followers_url": "https://api.github.com/users/IntQuant/followers", "following_url": "https://api.github.com/users/IntQuant/following{/other_user}", "gists_url": "https://api.github.com/users/IntQuant/gists{/gist_id}", "starred_url": "https://api.github.com/users/IntQuant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IntQuant/subscriptions", "organizations_url": "https://api.github.com/users/IntQuant/orgs", "repos_url": "https://api.github.com/users/IntQuant/repos", "events_url": "https://api.github.com/users/IntQuant/events{/privacy}", "received_events_url": "https://api.github.com/users/IntQuant/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0634b0119cadbf4fcc90d8a399b1c46e1442a5b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/0634b0119cadbf4fcc90d8a399b1c46e1442a5b5", "html_url": "https://github.com/rust-lang/rust/commit/0634b0119cadbf4fcc90d8a399b1c46e1442a5b5"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "55df63075d22f488373527a5423f3de7a17b4a81", "filename": "compiler/rustc_infer/src/errors/mod.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/57fdd196aeda1e0fa5829248bd4afb8e6f06d7e5/compiler%2Frustc_infer%2Fsrc%2Ferrors%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57fdd196aeda1e0fa5829248bd4afb8e6f06d7e5/compiler%2Frustc_infer%2Fsrc%2Ferrors%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Ferrors%2Fmod.rs?ref=57fdd196aeda1e0fa5829248bd4afb8e6f06d7e5", "patch": "@@ -4,9 +4,9 @@ use rustc_errors::{\n     MultiSpan, SubdiagnosticMessage,\n };\n use rustc_hir as hir;\n-use rustc_hir::{FnRetTy, Ty};\n+use rustc_hir::FnRetTy;\n use rustc_macros::{Diagnostic, Subdiagnostic};\n-use rustc_middle::ty::{Region, TyCtxt};\n+use rustc_middle::ty::{Region, Ty, TyCtxt};\n use rustc_span::symbol::kw;\n use rustc_span::Symbol;\n use rustc_span::{symbol::Ident, BytePos, Span};\n@@ -522,7 +522,7 @@ pub struct MismatchedStaticLifetime<'a> {\n     pub implicit_static_lifetimes: Vec<ImplicitStaticLifetimeSubdiag>,\n }\n \n-#[derive(SessionDiagnostic)]\n+#[derive(Diagnostic)]\n #[diag(infer::explicit_lifetime_required, code = \"E0621\")]\n pub struct ExplicitLifetimeRequired<'a> {\n     #[primary_span]\n@@ -542,7 +542,7 @@ pub struct ExplicitLifetimeRequired<'a> {\n     pub new_ty: Ty<'a>,\n }\n \n-#[derive(SessionSubdiagnostic)]\n+#[derive(Subdiagnostic)]\n pub enum ActualImplExplNotes {\n     // Field names have to be different across all variants\n     #[note(infer::actual_impl_expl_1)]\n@@ -565,7 +565,7 @@ pub enum ActualImplExplNotes {\n     },\n }\n \n-#[derive(SessionDiagnostic)]\n+#[derive(Diagnostic)]\n #[diag(infer::trait_placeholder_mismatch)]\n pub struct TraitPlaceholderMismatch {\n     #[primary_span]\n@@ -587,7 +587,7 @@ pub struct ConsiderBorrowingParamHelp {\n     pub spans: Vec<Span>,\n }\n \n-impl AddSubdiagnostic for ConsiderBorrowingParamHelp {\n+impl AddToDiagnostic for ConsiderBorrowingParamHelp {\n     fn add_to_diagnostic(self, diag: &mut rustc_errors::Diagnostic) {\n         let mut type_param_span: MultiSpan = self.spans.clone().into();\n         for &span in &self.spans {\n@@ -597,11 +597,11 @@ impl AddSubdiagnostic for ConsiderBorrowingParamHelp {\n     }\n }\n \n-#[derive(SessionSubdiagnostic)]\n+#[derive(Subdiagnostic)]\n #[help(infer::tid_rel_help)]\n pub struct RelationshipHelp;\n \n-#[derive(SessionDiagnostic)]\n+#[derive(Diagnostic)]\n #[diag(infer::trait_impl_diff)]\n pub struct TraitImplDiff {\n     #[primary_span]\n@@ -626,7 +626,7 @@ pub struct DynTraitConstraintSuggestion {\n     pub ident: Ident,\n }\n \n-impl AddSubdiagnostic for DynTraitConstraintSuggestion {\n+impl AddToDiagnostic for DynTraitConstraintSuggestion {\n     fn add_to_diagnostic(self, diag: &mut rustc_errors::Diagnostic) {\n         let mut multi_span: MultiSpan = vec![self.span].into();\n         multi_span.push_span_label(self.span, fluent::infer::dtcs_has_lifetime_req_label);\n@@ -641,7 +641,7 @@ impl AddSubdiagnostic for DynTraitConstraintSuggestion {\n     }\n }\n \n-#[derive(SessionDiagnostic)]\n+#[derive(Diagnostic)]\n #[diag(infer::but_calling_introduces, code = \"E0772\")]\n pub struct ButCallingIntroduces {\n     #[label(infer::label1)]\n@@ -667,7 +667,7 @@ pub struct ReqIntroducedLocations {\n     pub add_label: bool,\n }\n \n-impl AddSubdiagnostic for ReqIntroducedLocations {\n+impl AddToDiagnostic for ReqIntroducedLocations {\n     fn add_to_diagnostic(mut self, diag: &mut rustc_errors::Diagnostic) {\n         for sp in self.spans {\n             self.span.push_span_label(sp, fluent::infer::ril_introduced_here);\n@@ -685,15 +685,15 @@ pub struct MoreTargeted {\n     pub ident: Symbol,\n }\n \n-impl AddSubdiagnostic for MoreTargeted {\n+impl AddToDiagnostic for MoreTargeted {\n     fn add_to_diagnostic(self, diag: &mut rustc_errors::Diagnostic) {\n         diag.code(rustc_errors::error_code!(E0772));\n         diag.set_primary_message(fluent::infer::more_targeted);\n         diag.set_arg(\"ident\", self.ident);\n     }\n }\n \n-#[derive(SessionDiagnostic)]\n+#[derive(Diagnostic)]\n #[diag(infer::but_needs_to_satisfy, code = \"E0759\")]\n pub struct ButNeedsToSatisfy {\n     #[primary_span]"}, {"sha": "fbc71bd7e01961be74726b984dd14d293c217bd0", "filename": "compiler/rustc_infer/src/infer/error_reporting/nice_region_error/static_impl_trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57fdd196aeda1e0fa5829248bd4afb8e6f06d7e5/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57fdd196aeda1e0fa5829248bd4afb8e6f06d7e5/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs?ref=57fdd196aeda1e0fa5829248bd4afb8e6f06d7e5", "patch": "@@ -9,7 +9,7 @@ use crate::infer::lexical_region_resolve::RegionResolutionError;\n use crate::infer::{SubregionOrigin, TypeTrace};\n use crate::traits::{ObligationCauseCode, UnifyReceiverContext};\n use rustc_data_structures::fx::FxHashSet;\n-use rustc_errors::{AddSubdiagnostic, Applicability, Diagnostic, ErrorGuaranteed, MultiSpan};\n+use rustc_errors::{AddToDiagnostic, Applicability, Diagnostic, ErrorGuaranteed, MultiSpan};\n use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit::{walk_ty, Visitor};\n use rustc_hir::{self as hir, GenericBound, Item, ItemKind, Lifetime, LifetimeName, Node, TyKind};"}]}