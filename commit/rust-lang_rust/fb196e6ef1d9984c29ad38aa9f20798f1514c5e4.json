{"sha": "fb196e6ef1d9984c29ad38aa9f20798f1514c5e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiMTk2ZTZlZjFkOTk4NGMyOWFkMzhhYTlmMjA3OThmMTUxNGM1ZTQ=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-01T14:38:30Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-01T14:38:30Z"}, "message": "Make alias analysis properly recognize closures in call position\n\nI figured this'd break a few things, but in fact it causes no problems\nwhatsoever.", "tree": {"sha": "f4d5d3a7f6c1934322450a2dd2851127b9459135", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4d5d3a7f6c1934322450a2dd2851127b9459135"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb196e6ef1d9984c29ad38aa9f20798f1514c5e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb196e6ef1d9984c29ad38aa9f20798f1514c5e4", "html_url": "https://github.com/rust-lang/rust/commit/fb196e6ef1d9984c29ad38aa9f20798f1514c5e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb196e6ef1d9984c29ad38aa9f20798f1514c5e4/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ba4eacddf2a07e13f6589f04303ce7fb4c4d70c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ba4eacddf2a07e13f6589f04303ce7fb4c4d70c", "html_url": "https://github.com/rust-lang/rust/commit/6ba4eacddf2a07e13f6589f04303ce7fb4c4d70c"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f56d2c64d825cf911a43de27c84727ea30dab355", "filename": "src/comp/middle/alias.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb196e6ef1d9984c29ad38aa9f20798f1514c5e4/src%2Fcomp%2Fmiddle%2Falias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb196e6ef1d9984c29ad38aa9f20798f1514c5e4/src%2Fcomp%2Fmiddle%2Falias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Falias.rs?ref=fb196e6ef1d9984c29ad38aa9f20798f1514c5e4", "patch": "@@ -181,7 +181,7 @@ fn check_call(cx: &ctx, f: &@ast::expr, args: &[@ast::expr], sc: &scope)\n     }\n     let f_may_close = alt f.node {\n       ast::expr_path(_) { def_is_local(cx.tcx.def_map.get(f.id), true) }\n-      _ { false } // FIXME should be true!\n+      _ { true }\n     };\n     if f_may_close {\n         let i = 0u;"}]}