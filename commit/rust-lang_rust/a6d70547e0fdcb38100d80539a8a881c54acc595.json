{"sha": "a6d70547e0fdcb38100d80539a8a881c54acc595", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2ZDcwNTQ3ZTBmZGNiMzgxMDBkODA1MzlhOGE4ODFjNTRhY2M1OTU=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2016-02-03T06:26:38Z"}, "committer": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2016-02-03T06:26:38Z"}, "message": "Merge pull request #799 from kamalmarhubi/const-instead-of-static\n\ncleanup: Use const instead of static", "tree": {"sha": "4393464ba046dfd6e657cd2f2f8d2ae450ced488", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4393464ba046dfd6e657cd2f2f8d2ae450ced488"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6d70547e0fdcb38100d80539a8a881c54acc595", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6d70547e0fdcb38100d80539a8a881c54acc595", "html_url": "https://github.com/rust-lang/rust/commit/a6d70547e0fdcb38100d80539a8a881c54acc595", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6d70547e0fdcb38100d80539a8a881c54acc595/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "586f525cf1be21ece404c8718930be0f42ff12b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/586f525cf1be21ece404c8718930be0f42ff12b4", "html_url": "https://github.com/rust-lang/rust/commit/586f525cf1be21ece404c8718930be0f42ff12b4"}, {"sha": "8b601812a6d4d8a26628be12bf2244440e935b52", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b601812a6d4d8a26628be12bf2244440e935b52", "html_url": "https://github.com/rust-lang/rust/commit/8b601812a6d4d8a26628be12bf2244440e935b52"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "40b09fdfca5bd2f6089970d949498b224fd51c6a", "filename": "src/issues.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a6d70547e0fdcb38100d80539a8a881c54acc595/src%2Fissues.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6d70547e0fdcb38100d80539a8a881c54acc595/src%2Fissues.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fissues.rs?ref=a6d70547e0fdcb38100d80539a8a881c54acc595", "patch": "@@ -15,8 +15,8 @@\n use std::fmt;\n pub use config::ReportTactic;\n \n-static TO_DO_CHARS: &'static [char] = &['T', 'O', 'D', 'O'];\n-static FIX_ME_CHARS: &'static [char] = &['F', 'I', 'X', 'M', 'E'];\n+const TO_DO_CHARS: &'static [char] = &['T', 'O', 'D', 'O'];\n+const FIX_ME_CHARS: &'static [char] = &['F', 'I', 'X', 'M', 'E'];\n \n // Enabled implementation detail is here because it is\n // irrelevant outside the issues module"}, {"sha": "a8da45c6408fe1bdde46a693bc736714535ac71d", "filename": "src/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6d70547e0fdcb38100d80539a8a881c54acc595/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6d70547e0fdcb38100d80539a8a881c54acc595/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=a6d70547e0fdcb38100d80539a8a881c54acc595", "patch": "@@ -30,7 +30,7 @@ use expr::{rewrite_call, rewrite_array};\n use comment::FindUncommented;\n use utils::{wrap_str, span_after};\n \n-static FORCED_BRACKET_MACROS: &'static [&'static str] = &[\"vec!\"];\n+const FORCED_BRACKET_MACROS: &'static [&'static str] = &[\"vec!\"];\n \n // FIXME: use the enum from libsyntax?\n #[derive(Clone, Copy, PartialEq, Eq)]"}, {"sha": "8c7ea6c5fe5e7b184972629aee850b19d7e7d14e", "filename": "tests/system.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6d70547e0fdcb38100d80539a8a881c54acc595/tests%2Fsystem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6d70547e0fdcb38100d80539a8a881c54acc595/tests%2Fsystem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsystem.rs?ref=a6d70547e0fdcb38100d80539a8a881c54acc595", "patch": "@@ -23,7 +23,7 @@ use rustfmt::filemap::{write_system_newlines, FileMap};\n use rustfmt::config::{Config, ReportTactic, WriteMode};\n use rustfmt::rustfmt_diff::*;\n \n-static DIFF_CONTEXT_SIZE: usize = 3;\n+const DIFF_CONTEXT_SIZE: usize = 3;\n \n fn get_path_string(dir_entry: io::Result<fs::DirEntry>) -> String {\n     let path = dir_entry.expect(\"Couldn't get DirEntry\").path();"}]}