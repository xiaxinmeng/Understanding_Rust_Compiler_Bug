{"sha": "7045b101cc9a69b012758bf72ecd4f2622f4cdbe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwNDViMTAxY2M5YTY5YjAxMjc1OGJmNzJlY2Q0ZjI2MjJmNGNkYmU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-10-15T14:15:04Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-10-15T14:15:04Z"}, "message": "Use MetadataRef in the metadata loader to fix parallel rustc", "tree": {"sha": "1cb0ddf74eeca94f6b5472f366c1e06e76dcb620", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1cb0ddf74eeca94f6b5472f366c1e06e76dcb620"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7045b101cc9a69b012758bf72ecd4f2622f4cdbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7045b101cc9a69b012758bf72ecd4f2622f4cdbe", "html_url": "https://github.com/rust-lang/rust/commit/7045b101cc9a69b012758bf72ecd4f2622f4cdbe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7045b101cc9a69b012758bf72ecd4f2622f4cdbe/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c408407385b791c9c643e018ade22535e1203cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c408407385b791c9c643e018ade22535e1203cb", "html_url": "https://github.com/rust-lang/rust/commit/1c408407385b791c9c643e018ade22535e1203cb"}], "stats": {"total": 16, "additions": 4, "deletions": 12}, "files": [{"sha": "7ba6ec6d7508490ae808a2e377226ca2fd9aae86", "filename": "src/metadata.rs", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7045b101cc9a69b012758bf72ecd4f2622f4cdbe/src%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7045b101cc9a69b012758bf72ecd4f2622f4cdbe/src%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmetadata.rs?ref=7045b101cc9a69b012758bf72ecd4f2622f4cdbe", "patch": "@@ -5,8 +5,9 @@ use std::fs::File;\n use std::path::Path;\n \n use rustc_codegen_ssa::METADATA_FILENAME;\n-use rustc_data_structures::owning_ref::{self, OwningRef};\n+use rustc_data_structures::owning_ref::OwningRef;\n use rustc_data_structures::rustc_erase_owner;\n+use rustc_data_structures::sync::MetadataRef;\n use rustc_middle::middle::cstore::{EncodedMetadata, MetadataLoader};\n use rustc_middle::ty::TyCtxt;\n use rustc_session::config;\n@@ -17,11 +18,7 @@ use crate::backend::WriteMetadata;\n pub(crate) struct CraneliftMetadataLoader;\n \n impl MetadataLoader for CraneliftMetadataLoader {\n-    fn get_rlib_metadata(\n-        &self,\n-        _target: &Target,\n-        path: &Path,\n-    ) -> Result<owning_ref::ErasedBoxRef<[u8]>, String> {\n+    fn get_rlib_metadata(&self, _target: &Target, path: &Path) -> Result<MetadataRef, String> {\n         let mut archive = ar::Archive::new(File::open(path).map_err(|e| format!(\"{:?}\", e))?);\n         // Iterate over all entries in the archive:\n         while let Some(entry_result) = archive.next_entry() {\n@@ -38,14 +35,9 @@ impl MetadataLoader for CraneliftMetadataLoader {\n         }\n \n         Err(\"couldn't find metadata entry\".to_string())\n-        //self.get_dylib_metadata(target, path)\n     }\n \n-    fn get_dylib_metadata(\n-        &self,\n-        _target: &Target,\n-        path: &Path,\n-    ) -> Result<owning_ref::ErasedBoxRef<[u8]>, String> {\n+    fn get_dylib_metadata(&self, _target: &Target, path: &Path) -> Result<MetadataRef, String> {\n         use object::{Object, ObjectSection};\n         let file = std::fs::read(path).map_err(|e| format!(\"read:{:?}\", e))?;\n         let file = object::File::parse(&file).map_err(|e| format!(\"parse: {:?}\", e))?;"}]}