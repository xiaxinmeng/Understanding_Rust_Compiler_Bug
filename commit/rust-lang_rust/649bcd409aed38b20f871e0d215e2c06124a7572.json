{"sha": "649bcd409aed38b20f871e0d215e2c06124a7572", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0OWJjZDQwOWFlZDM4YjIwZjg3MWUwZDIxNWUyYzA2MTI0YTc1NzI=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-10-13T08:05:03Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-11-21T09:21:54Z"}, "message": "Fix fallout in tests.", "tree": {"sha": "29fe95198e00b89da9c590585580b08dc2521a1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29fe95198e00b89da9c590585580b08dc2521a1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/649bcd409aed38b20f871e0d215e2c06124a7572", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/649bcd409aed38b20f871e0d215e2c06124a7572", "html_url": "https://github.com/rust-lang/rust/commit/649bcd409aed38b20f871e0d215e2c06124a7572", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/649bcd409aed38b20f871e0d215e2c06124a7572/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf41c85c24857b0d7a6dbcc876abbe8c5c131f59", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf41c85c24857b0d7a6dbcc876abbe8c5c131f59", "html_url": "https://github.com/rust-lang/rust/commit/bf41c85c24857b0d7a6dbcc876abbe8c5c131f59"}], "stats": {"total": 551, "additions": 23, "deletions": 528}, "files": [{"sha": "a0234c1185a9789f8e449952538dba150886f0fa", "filename": "src/test/compile-fail/auxiliary/issue_12612_1.rs", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/bf41c85c24857b0d7a6dbcc876abbe8c5c131f59/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fissue_12612_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf41c85c24857b0d7a6dbcc876abbe8c5c131f59/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fissue_12612_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fissue_12612_1.rs?ref=bf41c85c24857b0d7a6dbcc876abbe8c5c131f59", "patch": "@@ -1,13 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-pub mod bar {\n-    pub fn foo() {}\n-}"}, {"sha": "29b139d771b0deebe0fa6054f8059831bee9fc3b", "filename": "src/test/compile-fail/auxiliary/namespace-mix-old.rs", "status": "removed", "additions": 0, "deletions": 83, "changes": 83, "blob_url": "https://github.com/rust-lang/rust/blob/bf41c85c24857b0d7a6dbcc876abbe8c5c131f59/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fnamespace-mix-old.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf41c85c24857b0d7a6dbcc876abbe8c5c131f59/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fnamespace-mix-old.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fnamespace-mix-old.rs?ref=bf41c85c24857b0d7a6dbcc876abbe8c5c131f59", "patch": "@@ -1,83 +0,0 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// FIXME: Remove when `item_like_imports` is stabilized.\n-\n-pub mod c {\n-    pub struct S {}\n-    pub struct TS();\n-    pub struct US;\n-    pub enum E {\n-        V {},\n-        TV(),\n-        UV,\n-    }\n-\n-    pub struct Item;\n-}\n-\n-pub mod proxy {\n-    pub use c::*;\n-    pub use c::E::*;\n-}\n-\n-pub mod xm1 {\n-    pub use ::proxy::*;\n-    pub type S = ::c::Item;\n-}\n-pub mod xm2 {\n-    pub use ::proxy::*;\n-    pub const S: ::c::Item = ::c::Item;\n-}\n-\n-pub mod xm3 {\n-    pub use ::proxy::*;\n-    pub type TS = ::c::Item;\n-}\n-pub mod xm4 {\n-    pub use ::proxy::*;\n-    pub const TS: ::c::Item = ::c::Item;\n-}\n-\n-pub mod xm5 {\n-    pub use ::proxy::*;\n-    pub type US = ::c::Item;\n-}\n-pub mod xm6 {\n-    pub use ::proxy::*;\n-    pub const US: ::c::Item = ::c::Item;\n-}\n-\n-pub mod xm7 {\n-    pub use ::proxy::*;\n-    pub type V = ::c::Item;\n-}\n-pub mod xm8 {\n-    pub use ::proxy::*;\n-    pub const V: ::c::Item = ::c::Item;\n-}\n-\n-pub mod xm9 {\n-    pub use ::proxy::*;\n-    pub type TV = ::c::Item;\n-}\n-pub mod xmA {\n-    pub use ::proxy::*;\n-    pub const TV: ::c::Item = ::c::Item;\n-}\n-\n-pub mod xmB {\n-    pub use ::proxy::*;\n-    pub type UV = ::c::Item;\n-}\n-pub mod xmC {\n-    pub use ::proxy::*;\n-    pub const UV: ::c::Item = ::c::Item;\n-}"}, {"sha": "d82e9bb7022839b251017326536bf308d72fa51c", "filename": "src/test/compile-fail/auxiliary/namespace-mix.rs", "status": "renamed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/649bcd409aed38b20f871e0d215e2c06124a7572/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fnamespace-mix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/649bcd409aed38b20f871e0d215e2c06124a7572/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fnamespace-mix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fnamespace-mix.rs?ref=649bcd409aed38b20f871e0d215e2c06124a7572", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(item_like_imports)]\n-\n pub mod c {\n     pub struct S {}\n     pub struct TS();", "previous_filename": "src/test/compile-fail/auxiliary/namespace-mix-new.rs"}, {"sha": "8f1b8ec91db38aafa4b79e74ebe7cbb89a71387e", "filename": "src/test/compile-fail/glob-cycles.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/649bcd409aed38b20f871e0d215e2c06124a7572/src%2Ftest%2Fcompile-fail%2Fglob-cycles.rs", "raw_url": "https://github.com/rust-lang/rust/raw/649bcd409aed38b20f871e0d215e2c06124a7572/src%2Ftest%2Fcompile-fail%2Fglob-cycles.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fglob-cycles.rs?ref=649bcd409aed38b20f871e0d215e2c06124a7572", "patch": "@@ -8,19 +8,22 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(rustc_attrs)]\n+\n mod foo {\n     pub use bar::*;\n-    pub use main as f; //~ ERROR has already been imported\n+    pub use main as f;\n }\n \n mod bar {\n     pub use foo::*;\n }\n \n pub use foo::*;\n-pub use baz::*; //~ ERROR has already been imported\n+pub use baz::*;\n mod baz {\n     pub use super::*;\n }\n \n-pub fn main() {}\n+#[rustc_error]\n+pub fn main() {} //~ ERROR compilation successful"}, {"sha": "503fa4eca527bbc9c1b1639076d43d79837af58f", "filename": "src/test/compile-fail/import-shadow-1.rs", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/bf41c85c24857b0d7a6dbcc876abbe8c5c131f59/src%2Ftest%2Fcompile-fail%2Fimport-shadow-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf41c85c24857b0d7a6dbcc876abbe8c5c131f59/src%2Ftest%2Fcompile-fail%2Fimport-shadow-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport-shadow-1.rs?ref=bf41c85c24857b0d7a6dbcc876abbe8c5c131f59", "patch": "@@ -1,30 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// Test that import shadowing using globs causes errors\n-\n-#![no_implicit_prelude]\n-\n-use foo::*;\n-use bar::*; //~ERROR a type named `Baz` has already been imported in this module\n-\n-mod foo {\n-    pub type Baz = isize;\n-}\n-\n-mod bar {\n-    pub type Baz = isize;\n-}\n-\n-mod qux {\n-    pub use bar::Baz;\n-}\n-\n-fn main() {}"}, {"sha": "0c107cf27f5928fc96087c3bcc325e0de6cd9962", "filename": "src/test/compile-fail/import-shadow-2.rs", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/bf41c85c24857b0d7a6dbcc876abbe8c5c131f59/src%2Ftest%2Fcompile-fail%2Fimport-shadow-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf41c85c24857b0d7a6dbcc876abbe8c5c131f59/src%2Ftest%2Fcompile-fail%2Fimport-shadow-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport-shadow-2.rs?ref=bf41c85c24857b0d7a6dbcc876abbe8c5c131f59", "patch": "@@ -1,30 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// Test that import shadowing using globs causes errors\n-\n-#![no_implicit_prelude]\n-\n-use foo::*;\n-use foo::*; //~ERROR a type named `Baz` has already been imported in this module\n-\n-mod foo {\n-    pub type Baz = isize;\n-}\n-\n-mod bar {\n-    pub type Baz = isize;\n-}\n-\n-mod qux {\n-    pub use bar::Baz;\n-}\n-\n-fn main() {}"}, {"sha": "bf90973c2857e7a8039d7a0685cf9157ef2728fb", "filename": "src/test/compile-fail/import-shadow-3.rs", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/bf41c85c24857b0d7a6dbcc876abbe8c5c131f59/src%2Ftest%2Fcompile-fail%2Fimport-shadow-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf41c85c24857b0d7a6dbcc876abbe8c5c131f59/src%2Ftest%2Fcompile-fail%2Fimport-shadow-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport-shadow-3.rs?ref=bf41c85c24857b0d7a6dbcc876abbe8c5c131f59", "patch": "@@ -1,30 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// Test that import shadowing using globs causes errors\n-\n-#![no_implicit_prelude]\n-\n-use foo::Baz;\n-use bar::*; //~ERROR a type named `Baz` has already been imported in this module\n-\n-mod foo {\n-    pub type Baz = isize;\n-}\n-\n-mod bar {\n-    pub type Baz = isize;\n-}\n-\n-mod qux {\n-    pub use bar::Baz;\n-}\n-\n-fn main() {}"}, {"sha": "f21fdaae47ba0e29e5f789afec78e05271321e42", "filename": "src/test/compile-fail/import-shadow-4.rs", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/bf41c85c24857b0d7a6dbcc876abbe8c5c131f59/src%2Ftest%2Fcompile-fail%2Fimport-shadow-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf41c85c24857b0d7a6dbcc876abbe8c5c131f59/src%2Ftest%2Fcompile-fail%2Fimport-shadow-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport-shadow-4.rs?ref=bf41c85c24857b0d7a6dbcc876abbe8c5c131f59", "patch": "@@ -1,30 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// Test that import shadowing using globs causes errors\n-\n-#![no_implicit_prelude]\n-\n-use foo::*;\n-use bar::Baz; //~ERROR a type named `Baz` has already been imported in this module\n-\n-mod foo {\n-    pub type Baz = isize;\n-}\n-\n-mod bar {\n-    pub type Baz = isize;\n-}\n-\n-mod qux {\n-    pub use bar::Baz;\n-}\n-\n-fn main() {}"}, {"sha": "dc300bc7baa7705823103a9f7c2f37382eb8399a", "filename": "src/test/compile-fail/import-shadow-5.rs", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/bf41c85c24857b0d7a6dbcc876abbe8c5c131f59/src%2Ftest%2Fcompile-fail%2Fimport-shadow-5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf41c85c24857b0d7a6dbcc876abbe8c5c131f59/src%2Ftest%2Fcompile-fail%2Fimport-shadow-5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport-shadow-5.rs?ref=bf41c85c24857b0d7a6dbcc876abbe8c5c131f59", "patch": "@@ -1,30 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// Test that import shadowing using globs causes errors\n-\n-#![no_implicit_prelude]\n-\n-use foo::Baz;\n-use bar::Baz; //~ERROR a type named `Baz` has already been imported in this module\n-\n-mod foo {\n-    pub type Baz = isize;\n-}\n-\n-mod bar {\n-    pub type Baz = isize;\n-}\n-\n-mod qux {\n-    pub use bar::Baz;\n-}\n-\n-fn main() {}"}, {"sha": "fa3b75c70f0b68a75250c93b5c50638e20257bf6", "filename": "src/test/compile-fail/import-shadow-6.rs", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/bf41c85c24857b0d7a6dbcc876abbe8c5c131f59/src%2Ftest%2Fcompile-fail%2Fimport-shadow-6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf41c85c24857b0d7a6dbcc876abbe8c5c131f59/src%2Ftest%2Fcompile-fail%2Fimport-shadow-6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport-shadow-6.rs?ref=bf41c85c24857b0d7a6dbcc876abbe8c5c131f59", "patch": "@@ -1,30 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// Test that import shadowing using globs causes errors\n-\n-#![no_implicit_prelude]\n-\n-use qux::*;\n-use foo::*; //~ERROR a type named `Baz` has already been imported in this module\n-\n-mod foo {\n-    pub type Baz = isize;\n-}\n-\n-mod bar {\n-    pub type Baz = isize;\n-}\n-\n-mod qux {\n-    pub use bar::Baz;\n-}\n-\n-fn main() {}"}, {"sha": "34aba15b3922892d781b5b15545ec9f39115f10e", "filename": "src/test/compile-fail/import-shadow-7.rs", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/bf41c85c24857b0d7a6dbcc876abbe8c5c131f59/src%2Ftest%2Fcompile-fail%2Fimport-shadow-7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf41c85c24857b0d7a6dbcc876abbe8c5c131f59/src%2Ftest%2Fcompile-fail%2Fimport-shadow-7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport-shadow-7.rs?ref=bf41c85c24857b0d7a6dbcc876abbe8c5c131f59", "patch": "@@ -1,30 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// Test that import shadowing using globs causes errors\n-\n-#![no_implicit_prelude]\n-\n-use foo::*;\n-use qux::*; //~ERROR a type named `Baz` has already been imported in this module\n-\n-mod foo {\n-    pub type Baz = isize;\n-}\n-\n-mod bar {\n-    pub type Baz = isize;\n-}\n-\n-mod qux {\n-    pub use bar::Baz;\n-}\n-\n-fn main() {}"}, {"sha": "81a5334ed7ab7675867ad8c184784b12d72095c6", "filename": "src/test/compile-fail/import.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/649bcd409aed38b20f871e0d215e2c06124a7572/src%2Ftest%2Fcompile-fail%2Fimport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/649bcd409aed38b20f871e0d215e2c06124a7572/src%2Ftest%2Fcompile-fail%2Fimport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport.rs?ref=649bcd409aed38b20f871e0d215e2c06124a7572", "patch": "@@ -20,6 +20,6 @@ mod zed {\n }\n \n fn main() {\n-    zed::foo(); //~ ERROR unresolved name\n+    zed::foo(); //~ ERROR `foo` is private\n     bar();\n }"}, {"sha": "8dd69d8c24c855afc267e983199f09e1ed103675", "filename": "src/test/compile-fail/imports/duplicate.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/649bcd409aed38b20f871e0d215e2c06124a7572/src%2Ftest%2Fcompile-fail%2Fimports%2Fduplicate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/649bcd409aed38b20f871e0d215e2c06124a7572/src%2Ftest%2Fcompile-fail%2Fimports%2Fduplicate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimports%2Fduplicate.rs?ref=649bcd409aed38b20f871e0d215e2c06124a7572", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(item_like_imports)]\n-\n mod a {\n     pub fn foo() {}\n }"}, {"sha": "65e6e8d01b05f119c6bd6de43eb287c5ed4df57c", "filename": "src/test/compile-fail/imports/reexports.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/649bcd409aed38b20f871e0d215e2c06124a7572/src%2Ftest%2Fcompile-fail%2Fimports%2Freexports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/649bcd409aed38b20f871e0d215e2c06124a7572/src%2Ftest%2Fcompile-fail%2Fimports%2Freexports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimports%2Freexports.rs?ref=649bcd409aed38b20f871e0d215e2c06124a7572", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(item_like_imports)]\n-\n mod a {\n     fn foo() {}\n     mod foo {}"}, {"sha": "05ecc781af30d53b22689e613d3ab4ca74eb8351", "filename": "src/test/compile-fail/imports/unused.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/649bcd409aed38b20f871e0d215e2c06124a7572/src%2Ftest%2Fcompile-fail%2Fimports%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/649bcd409aed38b20f871e0d215e2c06124a7572/src%2Ftest%2Fcompile-fail%2Fimports%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimports%2Funused.rs?ref=649bcd409aed38b20f871e0d215e2c06124a7572", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(pub_restricted, item_like_imports)]\n+#![feature(pub_restricted)]\n #![deny(unused)]\n \n mod foo {"}, {"sha": "c6f76ca78874bdc74e290e685ec285a503207e67", "filename": "src/test/compile-fail/issue-12612.rs", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/bf41c85c24857b0d7a6dbcc876abbe8c5c131f59/src%2Ftest%2Fcompile-fail%2Fissue-12612.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf41c85c24857b0d7a6dbcc876abbe8c5c131f59/src%2Ftest%2Fcompile-fail%2Fissue-12612.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-12612.rs?ref=bf41c85c24857b0d7a6dbcc876abbe8c5c131f59", "patch": "@@ -1,22 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// aux-build:issue_12612_1.rs\n-\n-extern crate issue_12612_1 as foo;\n-\n-use foo::bar;\n-\n-mod test {\n-    use bar::foo; //~ ERROR unresolved import `bar::foo` [E0432]\n-                  //~^ Maybe a missing `extern crate bar;`?\n-}\n-\n-fn main() {}"}, {"sha": "2c54ed3e857e93130c5456b62fd54417b7214945", "filename": "src/test/compile-fail/issue-32797.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/649bcd409aed38b20f871e0d215e2c06124a7572/src%2Ftest%2Fcompile-fail%2Fissue-32797.rs", "raw_url": "https://github.com/rust-lang/rust/raw/649bcd409aed38b20f871e0d215e2c06124a7572/src%2Ftest%2Fcompile-fail%2Fissue-32797.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-32797.rs?ref=649bcd409aed38b20f871e0d215e2c06124a7572", "patch": "@@ -8,14 +8,17 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(rustc_attrs)]\n+\n pub use bar::*;\n mod bar {\n     pub use super::*;\n }\n \n-pub use baz::*; //~ ERROR already been imported\n+pub use baz::*;\n mod baz {\n     pub use main as f;\n }\n \n-pub fn main() {}\n+#[rustc_error]\n+pub fn main() {} //~ ERROR compilation successful"}, {"sha": "41383e93603d36cd3b12921a95c3f774b9535900", "filename": "src/test/compile-fail/issue-32833.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/649bcd409aed38b20f871e0d215e2c06124a7572/src%2Ftest%2Fcompile-fail%2Fissue-32833.rs", "raw_url": "https://github.com/rust-lang/rust/raw/649bcd409aed38b20f871e0d215e2c06124a7572/src%2Ftest%2Fcompile-fail%2Fissue-32833.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-32833.rs?ref=649bcd409aed38b20f871e0d215e2c06124a7572", "patch": "@@ -11,8 +11,7 @@\n use bar::Foo; //~ ERROR unresolved import `bar::Foo` [E0432]\n               //~^ no `Foo` in `bar`\n mod bar {\n-    use Foo; //~ ERROR unresolved import `Foo` [E0432]\n-             //~^ no `Foo` in the root\n+    use Foo;\n }\n \n fn main() {}"}, {"sha": "8cd82050814a001674d250edccb542fddc0e3b18", "filename": "src/test/compile-fail/namespace-mix-old.rs", "status": "removed", "additions": 0, "deletions": 172, "changes": 172, "blob_url": "https://github.com/rust-lang/rust/blob/bf41c85c24857b0d7a6dbcc876abbe8c5c131f59/src%2Ftest%2Fcompile-fail%2Fnamespace-mix-old.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf41c85c24857b0d7a6dbcc876abbe8c5c131f59/src%2Ftest%2Fcompile-fail%2Fnamespace-mix-old.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnamespace-mix-old.rs?ref=bf41c85c24857b0d7a6dbcc876abbe8c5c131f59", "patch": "@@ -1,172 +0,0 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// FIXME: Remove when `item_like_imports` is stabilized.\n-\n-// aux-build:namespace-mix-old.rs\n-\n-extern crate namespace_mix_old;\n-use namespace_mix_old::{xm1, xm2, xm3, xm4, xm5, xm6, xm7, xm8, xm9, xmA, xmB, xmC};\n-\n-mod c {\n-    pub struct S {}\n-    pub struct TS();\n-    pub struct US;\n-    pub enum E {\n-        V {},\n-        TV(),\n-        UV,\n-    }\n-\n-    pub struct Item;\n-}\n-\n-mod proxy {\n-    pub use c::*;\n-    pub use c::E::*;\n-}\n-\n-// Use something emitting the type argument name, e.g. unsatisfied bound.\n-trait Impossible {}\n-fn check<T: Impossible>(_: T) {}\n-\n-mod m1 {\n-    pub use ::proxy::*;\n-    pub type S = ::c::Item;\n-}\n-mod m2 {\n-    pub use ::proxy::*;\n-    pub const S: ::c::Item = ::c::Item;\n-}\n-\n-fn f12() {\n-    check(m1::S{}); //~ ERROR c::Item\n-    check(m1::S); //~ ERROR unresolved name\n-    check(m2::S{}); //~ ERROR c::S\n-    check(m2::S); //~ ERROR c::Item\n-}\n-fn xf12() {\n-    check(xm1::S{}); //~ ERROR c::Item\n-    check(xm1::S); //~ ERROR unresolved name\n-    check(xm2::S{}); //~ ERROR c::S\n-    check(xm2::S); //~ ERROR c::Item\n-}\n-\n-mod m3 {\n-    pub use ::proxy::*;\n-    pub type TS = ::c::Item;\n-}\n-mod m4 {\n-    pub use ::proxy::*;\n-    pub const TS: ::c::Item = ::c::Item;\n-}\n-\n-fn f34() {\n-    check(m3::TS{}); //~ ERROR c::Item\n-    check(m3::TS); //~ ERROR c::TS\n-    check(m4::TS{}); //~ ERROR c::TS\n-    check(m4::TS); //~ ERROR c::Item\n-}\n-fn xf34() {\n-    check(xm3::TS{}); //~ ERROR c::Item\n-    check(xm3::TS); //~ ERROR c::TS\n-    check(xm4::TS{}); //~ ERROR c::TS\n-    check(xm4::TS); //~ ERROR c::Item\n-}\n-\n-mod m5 {\n-    pub use ::proxy::*;\n-    pub type US = ::c::Item;\n-}\n-mod m6 {\n-    pub use ::proxy::*;\n-    pub const US: ::c::Item = ::c::Item;\n-}\n-\n-fn f56() {\n-    check(m5::US{}); //~ ERROR c::Item\n-    check(m5::US); //~ ERROR c::US\n-    check(m6::US{}); //~ ERROR c::US\n-    check(m6::US); //~ ERROR c::Item\n-}\n-fn xf56() {\n-    check(xm5::US{}); //~ ERROR c::Item\n-    check(xm5::US); //~ ERROR c::US\n-    check(xm6::US{}); //~ ERROR c::US\n-    check(xm6::US); //~ ERROR c::Item\n-}\n-\n-mod m7 {\n-    pub use ::proxy::*;\n-    pub type V = ::c::Item;\n-}\n-mod m8 {\n-    pub use ::proxy::*;\n-    pub const V: ::c::Item = ::c::Item;\n-}\n-\n-fn f78() {\n-    check(m7::V{}); //~ ERROR c::Item\n-    check(m7::V); //~ ERROR name of a struct or struct variant\n-    check(m8::V{}); //~ ERROR c::E\n-    check(m8::V); //~ ERROR c::Item\n-}\n-fn xf78() {\n-    check(xm7::V{}); //~ ERROR c::Item\n-    check(xm7::V); //~ ERROR name of a struct or struct variant\n-    check(xm8::V{}); //~ ERROR c::E\n-    check(xm8::V); //~ ERROR c::Item\n-}\n-\n-mod m9 {\n-    pub use ::proxy::*;\n-    pub type TV = ::c::Item;\n-}\n-mod mA {\n-    pub use ::proxy::*;\n-    pub const TV: ::c::Item = ::c::Item;\n-}\n-\n-fn f9A() {\n-    check(m9::TV{}); //~ ERROR c::Item\n-    check(m9::TV); //~ ERROR c::E\n-    check(mA::TV{}); //~ ERROR c::E\n-    check(mA::TV); //~ ERROR c::Item\n-}\n-fn xf9A() {\n-    check(xm9::TV{}); //~ ERROR c::Item\n-    check(xm9::TV); //~ ERROR c::E\n-    check(xmA::TV{}); //~ ERROR c::E\n-    check(xmA::TV); //~ ERROR c::Item\n-}\n-\n-mod mB {\n-    pub use ::proxy::*;\n-    pub type UV = ::c::Item;\n-}\n-mod mC {\n-    pub use ::proxy::*;\n-    pub const UV: ::c::Item = ::c::Item;\n-}\n-\n-fn fBC() {\n-    check(mB::UV{}); //~ ERROR c::Item\n-    check(mB::UV); //~ ERROR c::E\n-    check(mC::UV{}); //~ ERROR c::E\n-    check(mC::UV); //~ ERROR c::Item\n-}\n-fn xfBC() {\n-    check(xmB::UV{}); //~ ERROR c::Item\n-    check(xmB::UV); //~ ERROR c::E\n-    check(xmC::UV{}); //~ ERROR c::E\n-    check(xmC::UV); //~ ERROR c::Item\n-}\n-\n-fn main() {}"}, {"sha": "cb7894b726f46f597e60d1a102302a6c8ec375c2", "filename": "src/test/compile-fail/namespace-mix.rs", "status": "renamed", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/649bcd409aed38b20f871e0d215e2c06124a7572/src%2Ftest%2Fcompile-fail%2Fnamespace-mix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/649bcd409aed38b20f871e0d215e2c06124a7572/src%2Ftest%2Fcompile-fail%2Fnamespace-mix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnamespace-mix.rs?ref=649bcd409aed38b20f871e0d215e2c06124a7572", "patch": "@@ -8,12 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// aux-build:namespace-mix-new.rs\n+// aux-build:namespace-mix.rs\n \n-#![feature(item_like_imports)]\n-\n-extern crate namespace_mix_new;\n-use namespace_mix_new::*;\n+extern crate namespace_mix;\n+use namespace_mix::*;\n \n mod c {\n     pub struct S {}", "previous_filename": "src/test/compile-fail/namespace-mix-new.rs"}, {"sha": "113dd2879406892e60fa0938d6e433b76393b258", "filename": "src/test/compile-fail/privacy2.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/649bcd409aed38b20f871e0d215e2c06124a7572/src%2Ftest%2Fcompile-fail%2Fprivacy2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/649bcd409aed38b20f871e0d215e2c06124a7572/src%2Ftest%2Fcompile-fail%2Fprivacy2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy2.rs?ref=649bcd409aed38b20f871e0d215e2c06124a7572", "patch": "@@ -31,8 +31,7 @@ fn test1() {\n \n fn test2() {\n     use bar::glob::foo;\n-    //~^ ERROR unresolved import `bar::glob::foo` [E0432]\n-    //~| no `foo` in `bar::glob`\n+    //~^ ERROR `foo` is private\n }\n \n #[start] fn main(_: isize, _: *const *const u8) -> isize { 3 }"}, {"sha": "e7e57a73de02f7176fa6d6a8a70b77114489a29d", "filename": "src/test/compile-fail/shadowed-use-visibility.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/649bcd409aed38b20f871e0d215e2c06124a7572/src%2Ftest%2Fcompile-fail%2Fshadowed-use-visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/649bcd409aed38b20f871e0d215e2c06124a7572/src%2Ftest%2Fcompile-fail%2Fshadowed-use-visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fshadowed-use-visibility.rs?ref=649bcd409aed38b20f871e0d215e2c06124a7572", "patch": "@@ -16,11 +16,11 @@ mod foo {\n }\n \n mod bar {\n-    use foo::bar::f as g; //~ ERROR unresolved import\n+    use foo::bar::f as g; //~ ERROR module `bar` is private\n \n     use foo as f;\n     pub use foo::*;\n }\n \n-use bar::f::f; //~ ERROR unresolved import\n+use bar::f::f; //~ ERROR module `f` is private\n fn main() {}"}, {"sha": "44e9260770e03ccfe83441c2b83b1dc32566310b", "filename": "src/test/compile-fail/variant-namespacing.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/649bcd409aed38b20f871e0d215e2c06124a7572/src%2Ftest%2Fcompile-fail%2Fvariant-namespacing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/649bcd409aed38b20f871e0d215e2c06124a7572/src%2Ftest%2Fcompile-fail%2Fvariant-namespacing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvariant-namespacing.rs?ref=649bcd409aed38b20f871e0d215e2c06124a7572", "patch": "@@ -31,11 +31,11 @@ const XTuple: u8 = 0;\n const XUnit: u8 = 0;\n \n extern crate variant_namespacing;\n-pub use variant_namespacing::XE::*;\n+pub use variant_namespacing::XE::{XStruct, XTuple, XUnit};\n //~^ ERROR `XStruct` has already been defined\n //~| ERROR `XTuple` has already been defined\n //~| ERROR `XUnit` has already been defined\n-pub use E::*;\n+pub use E::{Struct, Tuple, Unit};\n //~^ ERROR `Struct` has already been defined\n //~| ERROR `Tuple` has already been defined\n //~| ERROR `Unit` has already been defined"}, {"sha": "4e402721a7b39383e2d08c1433bb82eb668aceca", "filename": "src/test/run-pass-fulldeps/auxiliary/custom_derive_partial_eq.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/649bcd409aed38b20f871e0d215e2c06124a7572/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcustom_derive_partial_eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/649bcd409aed38b20f871e0d215e2c06124a7572/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcustom_derive_partial_eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcustom_derive_partial_eq.rs?ref=649bcd409aed38b20f871e0d215e2c06124a7572", "patch": "@@ -10,7 +10,7 @@\n \n // force-host\n \n-#![feature(plugin_registrar, rustc_private, item_like_imports)]\n+#![feature(plugin_registrar, rustc_private)]\n \n extern crate syntax;\n extern crate syntax_ext;"}, {"sha": "f845a2ee571622b699ce35054b0480f63d14177d", "filename": "src/test/run-pass/imports.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/649bcd409aed38b20f871e0d215e2c06124a7572/src%2Ftest%2Frun-pass%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/649bcd409aed38b20f871e0d215e2c06124a7572/src%2Ftest%2Frun-pass%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimports.rs?ref=649bcd409aed38b20f871e0d215e2c06124a7572", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(item_like_imports)]\n #![allow(unused)]\n \n // Like other items, private imports can be imported and used non-lexically in paths."}]}