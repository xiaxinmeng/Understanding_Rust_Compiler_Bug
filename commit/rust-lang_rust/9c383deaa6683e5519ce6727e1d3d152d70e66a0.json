{"sha": "9c383deaa6683e5519ce6727e1d3d152d70e66a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljMzgzZGVhYTY2ODNlNTUxOWNlNjcyN2UxZDNkMTUyZDcwZTY2YTA=", "commit": {"author": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2013-01-07T19:41:37Z"}, "committer": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2013-01-07T22:22:01Z"}, "message": "fmt: simplify parse_count", "tree": {"sha": "ce11cb94871cc169b9ec72fab743f7c911bb0d5e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce11cb94871cc169b9ec72fab743f7c911bb0d5e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c383deaa6683e5519ce6727e1d3d152d70e66a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c383deaa6683e5519ce6727e1d3d152d70e66a0", "html_url": "https://github.com/rust-lang/rust/commit/9c383deaa6683e5519ce6727e1d3d152d70e66a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c383deaa6683e5519ce6727e1d3d152d70e66a0/comments", "author": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4bc9e6d57c1e005c6539db59762e4030bd7bd2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4bc9e6d57c1e005c6539db59762e4030bd7bd2f", "html_url": "https://github.com/rust-lang/rust/commit/f4bc9e6d57c1e005c6539db59762e4030bd7bd2f"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "1216d96530062bf5dae5affc68b9a1e70044c9db", "filename": "src/libcore/extfmt.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9c383deaa6683e5519ce6727e1d3d152d70e66a0/src%2Flibcore%2Fextfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c383deaa6683e5519ce6727e1d3d152d70e66a0/src%2Flibcore%2Fextfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fextfmt.rs?ref=9c383deaa6683e5519ce6727e1d3d152d70e66a0", "patch": "@@ -264,7 +264,7 @@ pub mod ct {\n     }\n         pub fn parse_count(s: &str, i: uint, lim: uint)\n         -> Parsed<Count> {\n-        return if i >= lim {\n+            if i >= lim {\n                 Parsed::new(CountImplied, i)\n             } else if s[i] == '*' as u8 {\n                 let param = parse_parameter(s, i + 1, lim);\n@@ -274,15 +274,14 @@ pub mod ct {\n                   Some(n) => Parsed::new(CountIsParam(n), j)\n                 }\n             } else {\n-                let num = peek_num(s, i, lim);\n-                match num {\n+                match peek_num(s, i, lim) {\n                   None => Parsed::new(CountImplied, i),\n                   Some(num) => Parsed::new(\n                     CountIs(num.val),\n                     num.next\n                   )\n                 }\n-            };\n+            }\n     }\n     pub fn parse_precision(s: &str, i: uint, lim: uint) ->\n        Parsed<Count> {"}]}