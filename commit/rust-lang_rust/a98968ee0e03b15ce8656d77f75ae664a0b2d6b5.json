{"sha": "a98968ee0e03b15ce8656d77f75ae664a0b2d6b5", "node_id": "C_kwDOAAsO6NoAKGE5ODk2OGVlMGUwM2IxNWNlODY1NmQ3N2Y3NWFlNjY0YTBiMmQ2YjU", "commit": {"author": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2023-04-16T20:03:09Z"}, "committer": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2023-04-30T19:58:47Z"}, "message": "Parallelize initial rust extraction\n\nThis is quite slow and embarassingly parallel, even in python.\n\nThis speeds up the initial bootstrap build by about 5-10s.", "tree": {"sha": "9f22161a40746b6a89b8f4506f66a4fe5a98a87b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f22161a40746b6a89b8f4506f66a4fe5a98a87b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a98968ee0e03b15ce8656d77f75ae664a0b2d6b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a98968ee0e03b15ce8656d77f75ae664a0b2d6b5", "html_url": "https://github.com/rust-lang/rust/commit/a98968ee0e03b15ce8656d77f75ae664a0b2d6b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a98968ee0e03b15ce8656d77f75ae664a0b2d6b5/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46a25581aae5815382aa9291ec7071aafbfea7ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/46a25581aae5815382aa9291ec7071aafbfea7ba", "html_url": "https://github.com/rust-lang/rust/commit/46a25581aae5815382aa9291ec7071aafbfea7ba"}], "stats": {"total": 70, "additions": 68, "deletions": 2}, "files": [{"sha": "771dca51ede97d4697cb5f4eb7cae3d414c96e90", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 68, "deletions": 2, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/a98968ee0e03b15ce8656d77f75ae664a0b2d6b5/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/a98968ee0e03b15ce8656d77f75ae664a0b2d6b5/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=a98968ee0e03b15ce8656d77f75ae664a0b2d6b5", "patch": "@@ -13,6 +13,7 @@\n import tempfile\n \n from time import time\n+from multiprocessing import Pool, cpu_count\n \n try:\n     import lzma\n@@ -392,6 +393,48 @@ def channel(self):\n         return self.version + \"-\" + self.date\n \n \n+class DownloadInfo:\n+    \"\"\"A helper class that can be pickled into a parallel subprocess\"\"\"\n+\n+    def __init__(\n+        self,\n+        base_download_url,\n+        download_path,\n+        bin_root,\n+        tarball_path,\n+        tarball_suffix,\n+        checksums_sha256,\n+        pattern,\n+        verbose,\n+    ):\n+        self.base_download_url = base_download_url\n+        self.download_path = download_path\n+        self.bin_root = bin_root\n+        self.tarball_path = tarball_path\n+        self.tarball_suffix = tarball_suffix\n+        self.checksums_sha256 = checksums_sha256\n+        self.pattern = pattern\n+        self.verbose = verbose\n+\n+def download_component(download_info):\n+    if not os.path.exists(download_info.tarball_path):\n+        get(\n+            download_info.base_download_url,\n+            download_info.download_path,\n+            download_info.tarball_path,\n+            download_info.checksums_sha256,\n+            verbose=download_info.verbose,\n+        )\n+\n+def unpack_component(download_info):\n+    unpack(\n+        download_info.tarball_path,\n+        download_info.tarball_suffix,\n+        download_info.bin_root,\n+        match=download_info.pattern,\n+        verbose=download_info.verbose,\n+    )\n+\n class RustBuild(object):\n     \"\"\"Provide all the methods required to build Rust\"\"\"\n     def __init__(self):\n@@ -446,8 +489,31 @@ def download_toolchain(self):\n                 (\"cargo-{}\".format(toolchain_suffix), \"cargo\"),\n             ]\n \n-            for filename, pattern in tarballs_to_download:\n-                self._download_component_helper(filename, pattern, tarball_suffix, rustc_cache)\n+            tarballs_download_info = [\n+                DownloadInfo(\n+                    base_download_url=self.download_url,\n+                    download_path=\"dist/{}/{}\".format(self.stage0_compiler.date, filename),\n+                    bin_root=self.bin_root(),\n+                    tarball_path=os.path.join(rustc_cache, filename),\n+                    tarball_suffix=tarball_suffix,\n+                    checksums_sha256=self.checksums_sha256,\n+                    pattern=pattern,\n+                    verbose=self.verbose,\n+                )\n+                for filename, pattern in tarballs_to_download\n+            ]\n+\n+            # Download the components serially to show the progress bars properly.\n+            for download_info in tarballs_download_info:\n+                download_component(download_info)\n+\n+            # Unpack the tarballs in parallle.\n+            # In Python 2.7, Pool cannot be used as a context manager.\n+            p = Pool(min(len(tarballs_download_info), cpu_count()))\n+            try:\n+                p.map(unpack_component, tarballs_download_info)\n+            finally:\n+                p.close()\n \n             if self.should_fix_bins_and_dylibs():\n                 self.fix_bin_or_dylib(\"{}/bin/cargo\".format(bin_root))"}]}