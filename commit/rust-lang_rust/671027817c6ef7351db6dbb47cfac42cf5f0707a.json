{"sha": "671027817c6ef7351db6dbb47cfac42cf5f0707a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3MTAyNzgxN2M2ZWY3MzUxZGI2ZGJiNDdjZmFjNDJjZjVmMDcwN2E=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-03-26T03:37:22Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-03-26T08:12:04Z"}, "message": "Rollup merge of #32456 - bluss:str-zero, r=alexcrichton\n\nHardcode accepting 0 as a valid str char boundary\n\nIf we check explicitly for index == 0, that removes the need to read the\nbyte at index 0, so it avoids a trip to the string's memory, and it\noptimizes out the slicing index' bounds check whenever it is (a constant) zero.", "tree": {"sha": "14bd20964129c705112fb078874230aaf5419fad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14bd20964129c705112fb078874230aaf5419fad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/671027817c6ef7351db6dbb47cfac42cf5f0707a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/671027817c6ef7351db6dbb47cfac42cf5f0707a", "html_url": "https://github.com/rust-lang/rust/commit/671027817c6ef7351db6dbb47cfac42cf5f0707a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/671027817c6ef7351db6dbb47cfac42cf5f0707a/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "023fae61751a572f722b59ef78862878580f204d", "url": "https://api.github.com/repos/rust-lang/rust/commits/023fae61751a572f722b59ef78862878580f204d", "html_url": "https://github.com/rust-lang/rust/commit/023fae61751a572f722b59ef78862878580f204d"}, {"sha": "f621193e5ea7ac54fcd37f0e730e955fd9f61200", "url": "https://api.github.com/repos/rust-lang/rust/commits/f621193e5ea7ac54fcd37f0e730e955fd9f61200", "html_url": "https://github.com/rust-lang/rust/commit/f621193e5ea7ac54fcd37f0e730e955fd9f61200"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "d5a5e2b47419f00ccd9fa4cf8fd4c579ffd7e6b9", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/671027817c6ef7351db6dbb47cfac42cf5f0707a/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/671027817c6ef7351db6dbb47cfac42cf5f0707a/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=671027817c6ef7351db6dbb47cfac42cf5f0707a", "patch": "@@ -1953,7 +1953,10 @@ impl StrExt for str {\n \n     #[inline]\n     fn is_char_boundary(&self, index: usize) -> bool {\n-        if index == self.len() { return true; }\n+        // 0 and len are always ok.\n+        // Test for 0 explicitly so that it can optimize out the check\n+        // easily and skip reading string data for that case.\n+        if index == 0 || index == self.len() { return true; }\n         match self.as_bytes().get(index) {\n             None => false,\n             Some(&b) => b < 128 || b >= 192,\n@@ -2026,6 +2029,7 @@ impl StrExt for str {\n         self.find(pat)\n     }\n \n+    #[inline]\n     fn split_at(&self, mid: usize) -> (&str, &str) {\n         // is_char_boundary checks that the index is in [0, .len()]\n         if self.is_char_boundary(mid) {"}]}