{"sha": "c317d3f6fa9475e65b6276743c09444441059ca7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzMTdkM2Y2ZmE5NDc1ZTY1YjYyNzY3NDNjMDk0NDQ0NDEwNTljYTc=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-03-27T06:15:14Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-03-27T14:04:17Z"}, "message": "std: add some better failure msgs to json", "tree": {"sha": "ad263ba2492d57fe9d6c587d5a7992680dc8d82b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad263ba2492d57fe9d6c587d5a7992680dc8d82b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c317d3f6fa9475e65b6276743c09444441059ca7", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c317d3f6fa9475e65b6276743c09444441059ca7", "html_url": "https://github.com/rust-lang/rust/commit/c317d3f6fa9475e65b6276743c09444441059ca7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c317d3f6fa9475e65b6276743c09444441059ca7/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83e831bc229c2346e2322aaad1fdaa219325a4b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/83e831bc229c2346e2322aaad1fdaa219325a4b3", "html_url": "https://github.com/rust-lang/rust/commit/83e831bc229c2346e2322aaad1fdaa219325a4b3"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "c48b210dca219c3023eb4a6eebdcd049037f1394", "filename": "src/libstd/json.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c317d3f6fa9475e65b6276743c09444441059ca7/src%2Flibstd%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c317d3f6fa9475e65b6276743c09444441059ca7/src%2Flibstd%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fjson.rs?ref=c317d3f6fa9475e65b6276743c09444441059ca7", "patch": "@@ -827,15 +827,15 @@ impl<'self> serialize::Decoder for Decoder<'self> {\n         debug!(\"read_owned_str\");\n         match *self.pop() {\n             String(ref s) => copy *s,\n-            _ => fail!(~\"not a string\")\n+            ref json => fail!(fmt!(\"not a string: %?\", *json))\n         }\n     }\n \n     fn read_managed_str(&self) -> @str {\n         debug!(\"read_managed_str\");\n         match *self.pop() {\n             String(ref s) => s.to_managed(),\n-            _ => fail!(~\"not a string\")\n+            ref json => fail!(fmt!(\"not a string: %?\", *json))\n         }\n     }\n \n@@ -872,7 +872,7 @@ impl<'self> serialize::Decoder for Decoder<'self> {\n         let name = match *self.peek() {\n             String(ref s) => s,\n             List([String(ref s), .. _]) => s,\n-            json => fail!(fmt!(\"invalid variant: %?\", json)),\n+            ref json => fail!(fmt!(\"invalid variant: %?\", *json)),\n         };\n         let idx = match vec::position(names, |n| str::eq_slice(*n, *name)) {\n             Some(idx) => idx,"}]}