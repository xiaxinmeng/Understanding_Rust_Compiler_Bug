{"sha": "54875908607aeba57477e117a08e5f8f3611bf76", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0ODc1OTA4NjA3YWViYTU3NDc3ZTExN2EwOGU1ZjhmMzYxMWJmNzY=", "commit": {"author": {"name": "Kevin Atkinson", "email": "kevina@cs.utah.edu", "date": "2012-02-10T20:22:15Z"}, "committer": {"name": "Kevin Atkinson", "email": "kevina@cs.utah.edu", "date": "2012-02-11T00:51:22Z"}, "message": "When parsing a source string, fail when the entire string is not parsed.\n\n(For now only fail when parse_from_source_str is used to avoid\npossible compatibility problems; parse_expr_from_source_str still\ndoes not check.)", "tree": {"sha": "b320d06a1d4dd91070b988df2eb2c08aecb242f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b320d06a1d4dd91070b988df2eb2c08aecb242f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54875908607aeba57477e117a08e5f8f3611bf76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54875908607aeba57477e117a08e5f8f3611bf76", "html_url": "https://github.com/rust-lang/rust/commit/54875908607aeba57477e117a08e5f8f3611bf76", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54875908607aeba57477e117a08e5f8f3611bf76/comments", "author": {"login": "kevina", "id": 1271492, "node_id": "MDQ6VXNlcjEyNzE0OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1271492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevina", "html_url": "https://github.com/kevina", "followers_url": "https://api.github.com/users/kevina/followers", "following_url": "https://api.github.com/users/kevina/following{/other_user}", "gists_url": "https://api.github.com/users/kevina/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevina/subscriptions", "organizations_url": "https://api.github.com/users/kevina/orgs", "repos_url": "https://api.github.com/users/kevina/repos", "events_url": "https://api.github.com/users/kevina/events{/privacy}", "received_events_url": "https://api.github.com/users/kevina/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kevina", "id": 1271492, "node_id": "MDQ6VXNlcjEyNzE0OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1271492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevina", "html_url": "https://github.com/kevina", "followers_url": "https://api.github.com/users/kevina/followers", "following_url": "https://api.github.com/users/kevina/following{/other_user}", "gists_url": "https://api.github.com/users/kevina/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevina/subscriptions", "organizations_url": "https://api.github.com/users/kevina/orgs", "repos_url": "https://api.github.com/users/kevina/repos", "events_url": "https://api.github.com/users/kevina/events{/privacy}", "received_events_url": "https://api.github.com/users/kevina/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48eda22835e58ec1f14f6333e444ccc8a32244b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/48eda22835e58ec1f14f6333e444ccc8a32244b7", "html_url": "https://github.com/rust-lang/rust/commit/48eda22835e58ec1f14f6333e444ccc8a32244b7"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "1cfd96c97cb10c8ca228920a1deb3f8b8f5ff1d6", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/54875908607aeba57477e117a08e5f8f3611bf76/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54875908607aeba57477e117a08e5f8f3611bf76/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=54875908607aeba57477e117a08e5f8f3611bf76", "patch": "@@ -2622,6 +2622,9 @@ fn parse_from_source_str<T>(f: fn (p: parser) -> T,\n {\n     let p = new_parser_from_source_str(sess, cfg, name, ss, source);\n     let r = f(p);\n+    if !p.reader.is_eof() {\n+        p.reader.fatal(\"expected end-of-string\");\n+    }\n     sess.chpos = p.reader.chpos;\n     sess.byte_pos = sess.byte_pos + p.reader.pos;\n     ret r;"}, {"sha": "243e90c35df3e06236da547cc23672643162effd", "filename": "src/test/compile-fail/qquote-1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/54875908607aeba57477e117a08e5f8f3611bf76/src%2Ftest%2Fcompile-fail%2Fqquote-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54875908607aeba57477e117a08e5f8f3611bf76/src%2Ftest%2Fcompile-fail%2Fqquote-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fqquote-1.rs?ref=54875908607aeba57477e117a08e5f8f3611bf76", "previous_filename": "src/test/compile-fail/qquote.rs"}, {"sha": "a29543e29d8218e935f601c6900693a735b7ea38", "filename": "src/test/compile-fail/qquote-2.rs", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/54875908607aeba57477e117a08e5f8f3611bf76/src%2Ftest%2Fcompile-fail%2Fqquote-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54875908607aeba57477e117a08e5f8f3611bf76/src%2Ftest%2Fcompile-fail%2Fqquote-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fqquote-2.rs?ref=54875908607aeba57477e117a08e5f8f3611bf76", "patch": "@@ -0,0 +1,48 @@\n+// xfail-pretty\n+\n+use std;\n+use rustc;\n+\n+import rustc::*;\n+import std::io::*;\n+\n+import rustc::driver::diagnostic;\n+import rustc::syntax::ast;\n+import rustc::syntax::codemap;\n+import rustc::syntax::parse::parser;\n+import rustc::syntax::print::*;\n+\n+fn new_parse_sess() -> parser::parse_sess {\n+  fail;\n+}\n+\n+iface fake_ext_ctxt {\n+    fn session() -> fake_session;\n+}\n+\n+type fake_options = {cfg: ast::crate_cfg};\n+\n+type fake_session = {opts: @fake_options,\n+                     parse_sess: parser::parse_sess};\n+\n+impl of fake_ext_ctxt for fake_session {\n+    fn session() -> fake_session {self}\n+}\n+\n+fn mk_ctxt() -> fake_ext_ctxt {\n+    let opts : fake_options = {cfg: []};\n+    {opts: @opts, parse_sess: new_parse_sess()} as fake_ext_ctxt\n+}\n+\n+\n+fn main() {\n+    let ext_cx = mk_ctxt();\n+\n+    let stmt = #ast(stmt){let x int = 20;}; //! ERROR expected end-of-string\n+    check_pp(*stmt,  pprust::print_stmt, \"\");\n+}\n+\n+fn check_pp<T>(expr: T, f: fn(pprust::ps, T), expect: str) {\n+    fail;\n+}\n+"}]}