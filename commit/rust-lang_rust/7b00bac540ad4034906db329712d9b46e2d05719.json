{"sha": "7b00bac540ad4034906db329712d9b46e2d05719", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiMDBiYWM1NDBhZDQwMzQ5MDZkYjMyOTcxMmQ5YjQ2ZTJkMDU3MTk=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-01-06T16:50:55Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-01-06T16:50:55Z"}, "message": "Add some basic comments to trans_imp.rs", "tree": {"sha": "ec0d1a13f8353606274e5c535791c5b6d0ed7fd7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec0d1a13f8353606274e5c535791c5b6d0ed7fd7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b00bac540ad4034906db329712d9b46e2d05719", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b00bac540ad4034906db329712d9b46e2d05719", "html_url": "https://github.com/rust-lang/rust/commit/7b00bac540ad4034906db329712d9b46e2d05719", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b00bac540ad4034906db329712d9b46e2d05719/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "822acdd1703af1714cb084a76c10937713339f6d", "url": "https://api.github.com/repos/rust-lang/rust/commits/822acdd1703af1714cb084a76c10937713339f6d", "html_url": "https://github.com/rust-lang/rust/commit/822acdd1703af1714cb084a76c10937713339f6d"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "77422065f1148de2493285e0f344d1921e6f0483", "filename": "src/comp/middle/trans_impl.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/7b00bac540ad4034906db329712d9b46e2d05719/src%2Fcomp%2Fmiddle%2Ftrans_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b00bac540ad4034906db329712d9b46e2d05719/src%2Fcomp%2Fmiddle%2Ftrans_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans_impl.rs?ref=7b00bac540ad4034906db329712d9b46e2d05719", "patch": "@@ -8,6 +8,36 @@ import back::link;\n import lib::llvm::llvm;\n import llvm::{ValueRef, TypeRef, LLVMGetParam};\n \n+// Translation functionality related to impls and ifaces\n+//\n+// Terminology:\n+//  vtable:  a table of function pointers pointing to method wrappers\n+//           of an impl that implements an iface\n+//  dict:    a record containing a vtable pointer along with pointers to\n+//           all tydescs and other dicts needed to run methods in this vtable\n+//           (i.e. corresponding to the type parameters of the impl)\n+//  wrapper: a function that takes a dict as first argument, along\n+//           with the method-specific tydescs for a method (and all\n+//           other args the method expects), which fetches the extra\n+//           tydescs and dicts from the dict, splices them into the\n+//           arglist, and calls through to the actual method\n+//\n+// Generic functions take, along with their normal arguments, a number\n+// of extra tydesc and dict arguments -- one tydesc for each type\n+// parameter, one dict (following the tydesc in the arg order) for\n+// each interface bound on a type parameter.\n+//\n+// Most dicts are completely static, and are allocated and filled at\n+// compile time. Dicts that depend on run-time values (tydescs or\n+// dicts for type parameter types) are built at run-time, and interned\n+// through upcall_intern_dict in the runtime. This means that dict\n+// pointers are self-contained things that do not need to be cleaned\n+// up.\n+//\n+// The trans_constants pass in trans.rs outputs the vtables. Typeck\n+// annotates notes with information about the methods and dicts that\n+// are referenced (ccx.method_map and ccx.dict_map).\n+\n fn trans_impl(cx: @local_ctxt, name: ast::ident, methods: [@ast::method],\n               id: ast::node_id, tps: [ast::ty_param]) {\n     let sub_cx = extend_path(cx, name);"}]}