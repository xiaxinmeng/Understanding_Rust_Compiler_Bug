{"sha": "44c686113fe93bb67ac2dcb1db500b5b8cbf0b6a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0YzY4NjExM2ZlOTNiYjY3YWMyZGNiMWRiNTAwYjViOGNiZjBiNmE=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-02-12T22:21:20Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-04-14T15:25:35Z"}, "message": "Add error codes for libsyntax_ext", "tree": {"sha": "bd95d07830493a742fdd067ea22dd2e46a34de55", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd95d07830493a742fdd067ea22dd2e46a34de55"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44c686113fe93bb67ac2dcb1db500b5b8cbf0b6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44c686113fe93bb67ac2dcb1db500b5b8cbf0b6a", "html_url": "https://github.com/rust-lang/rust/commit/44c686113fe93bb67ac2dcb1db500b5b8cbf0b6a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44c686113fe93bb67ac2dcb1db500b5b8cbf0b6a/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb730d75d4c1c05c90419841758300b6fbf01250", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb730d75d4c1c05c90419841758300b6fbf01250", "html_url": "https://github.com/rust-lang/rust/commit/fb730d75d4c1c05c90419841758300b6fbf01250"}], "stats": {"total": 48, "additions": 45, "deletions": 3}, "files": [{"sha": "0c313ab14899f54b824d0181f6ff8d4244824331", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/44c686113fe93bb67ac2dcb1db500b5b8cbf0b6a/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44c686113fe93bb67ac2dcb1db500b5b8cbf0b6a/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=44c686113fe93bb67ac2dcb1db500b5b8cbf0b6a", "patch": "@@ -14,7 +14,7 @@ use ast::{self, Attribute, Name, PatKind, MetaItem};\n use attr::HasAttrs;\n use codemap::{self, CodeMap, Spanned, respan};\n use syntax_pos::{Span, MultiSpan, DUMMY_SP};\n-use errors::DiagnosticBuilder;\n+use errors::{DiagnosticBuilder, DiagnosticId};\n use ext::expand::{self, Expansion, Invocation};\n use ext::hygiene::{Mark, SyntaxContext};\n use fold::{self, Folder};\n@@ -841,6 +841,9 @@ impl<'a> ExtCtxt<'a> {\n     pub fn span_err<S: Into<MultiSpan>>(&self, sp: S, msg: &str) {\n         self.parse_sess.span_diagnostic.span_err(sp, msg);\n     }\n+    pub fn span_err_with_code<S: Into<MultiSpan>>(&self, sp: S, msg: &str, code: DiagnosticId) {\n+        self.parse_sess.span_diagnostic.span_err_with_code(sp, msg, code);\n+    }\n     pub fn mut_span_err<S: Into<MultiSpan>>(&self, sp: S, msg: &str)\n                         -> DiagnosticBuilder<'a> {\n         self.parse_sess.span_diagnostic.mut_span_err(sp, msg)"}, {"sha": "e1eabc5cb01455919db258bcefeaae0abe8cdd98", "filename": "src/libsyntax_ext/asm.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/44c686113fe93bb67ac2dcb1db500b5b8cbf0b6a/src%2Flibsyntax_ext%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44c686113fe93bb67ac2dcb1db500b5b8cbf0b6a/src%2Flibsyntax_ext%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fasm.rs?ref=44c686113fe93bb67ac2dcb1db500b5b8cbf0b6a", "patch": "@@ -45,6 +45,17 @@ impl State {\n     }\n }\n \n+macro_rules! span_err_if_not_stage0 {\n+    ($cx:expr, $sp:expr, $code:ident, $text:tt) => {\n+        #[cfg(not(stage0))] {\n+            span_err!($cx, $sp, $code, $text)\n+        }\n+        #[cfg(stage0)] {\n+            $cx.span_err($sp, $text)\n+        }\n+    }\n+}\n+\n const OPTIONS: &'static [&'static str] = &[\"volatile\", \"alignstack\", \"intel\"];\n \n pub fn expand_asm<'cx>(cx: &'cx mut ExtCtxt,\n@@ -89,7 +100,7 @@ pub fn expand_asm<'cx>(cx: &'cx mut ExtCtxt,\n                 if asm_str_style.is_some() {\n                     // If we already have a string with instructions,\n                     // ending up in Asm state again is an error.\n-                    cx.span_err(sp, \"malformed inline assembly\");\n+                    span_err_if_not_stage0!(cx, sp, E0660, \"malformed inline assembly\");\n                     return DummyResult::expr(sp);\n                 }\n                 // Nested parser, stop before the first colon (see above).\n@@ -142,7 +153,8 @@ pub fn expand_asm<'cx>(cx: &'cx mut ExtCtxt,\n                             Some(Symbol::intern(&format!(\"={}\", ch.as_str())))\n                         }\n                         _ => {\n-                            cx.span_err(span, \"output operand constraint lacks '=' or '+'\");\n+                            span_err_if_not_stage0!(cx, span, E0661,\n+                                                    \"output operand constraint lacks '=' or '+'\");\n                             None\n                         }\n                     };"}, {"sha": "e247a22aeb073b373a2a62c56b6b17c8bf5de5b8", "filename": "src/libsyntax_ext/diagnostics.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/44c686113fe93bb67ac2dcb1db500b5b8cbf0b6a/src%2Flibsyntax_ext%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44c686113fe93bb67ac2dcb1db500b5b8cbf0b6a/src%2Flibsyntax_ext%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fdiagnostics.rs?ref=44c686113fe93bb67ac2dcb1db500b5b8cbf0b6a", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![allow(non_snake_case)]\n+\n+// Error messages for EXXXX errors.\n+// Each message should start and end with a new line, and be wrapped to 80 characters.\n+// In vim you can `:set tw=80` and use `gq` to wrap paragraphs. Use `:set tw=0` to disable.\n+register_long_diagnostics! {\n+E0660: r##\"\n+\"##,\n+\n+E0661: r##\"\n+\"##,\n+}"}, {"sha": "39ad594e5c5770b788a9effb25356d3e38813ae0", "filename": "src/libsyntax_ext/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/44c686113fe93bb67ac2dcb1db500b5b8cbf0b6a/src%2Flibsyntax_ext%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44c686113fe93bb67ac2dcb1db500b5b8cbf0b6a/src%2Flibsyntax_ext%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Flib.rs?ref=44c686113fe93bb67ac2dcb1db500b5b8cbf0b6a", "patch": "@@ -18,6 +18,8 @@\n #![feature(decl_macro)]\n #![feature(str_escape)]\n \n+#![cfg_attr(not(stage0), feature(rustc_diagnostic_macros))]\n+\n extern crate fmt_macros;\n #[macro_use]\n extern crate syntax;\n@@ -26,6 +28,9 @@ extern crate proc_macro;\n extern crate rustc_data_structures;\n extern crate rustc_errors as errors;\n \n+#[cfg(not(stage0))]\n+mod diagnostics;\n+\n mod assert;\n mod asm;\n mod cfg;"}]}