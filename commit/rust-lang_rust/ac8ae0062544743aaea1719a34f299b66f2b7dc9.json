{"sha": "ac8ae0062544743aaea1719a34f299b66f2b7dc9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjOGFlMDA2MjU0NDc0M2FhZWExNzE5YTM0ZjI5OWI2NmYyYjdkYzk=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-04-24T22:21:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-04-24T22:21:23Z"}, "message": "Cargo update and clippy (#2643)", "tree": {"sha": "7d52377eed6f2fd6e5647c78d4dc4aedbd3d5136", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d52377eed6f2fd6e5647c78d4dc4aedbd3d5136"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac8ae0062544743aaea1719a34f299b66f2b7dc9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJa363jCRBK7hj4Ov3rIwAAdHIIAIaiO/9JMWbZu9XQcBaoJCXy\nuTL37sTHngw1N5FHj7ekERNaj33wfBwSD6jWiC9uyKXUGalkw3m0GxAwAVkDoBTH\n+b2I9y1JuPTiMdvKDPLQ1tuCfGa+/a2ImWAXXOtBSLCTu7rLTo/Jr9kc0sTDBFe4\nj075Kq0JppwTFRn7FUGJcMu/Y4/xNUH8QXHvh2EPzJ2vDvTLnT9SMzzFCHkAk12k\nmDZc7GrfDIMr+aHu90A2L8vJw2oVChGYjpKuTaApcXRhgpkFxnXNYidsD5suj6nf\nAmD0LPFeFysJOqxl3wK+hHRzL4asqpyhpMjtesT4HJC2X5MqHpgHlsxa/rjckuk=\n=ZFpu\n-----END PGP SIGNATURE-----\n", "payload": "tree 7d52377eed6f2fd6e5647c78d4dc4aedbd3d5136\nparent fbdd0e815c80d0c7dde62cc541e866440039bafc\nauthor Seiichi Uchida <seuchida@gmail.com> 1524608483 +0900\ncommitter GitHub <noreply@github.com> 1524608483 +0900\n\nCargo update and clippy (#2643)\n\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac8ae0062544743aaea1719a34f299b66f2b7dc9", "html_url": "https://github.com/rust-lang/rust/commit/ac8ae0062544743aaea1719a34f299b66f2b7dc9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac8ae0062544743aaea1719a34f299b66f2b7dc9/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fbdd0e815c80d0c7dde62cc541e866440039bafc", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbdd0e815c80d0c7dde62cc541e866440039bafc", "html_url": "https://github.com/rust-lang/rust/commit/fbdd0e815c80d0c7dde62cc541e866440039bafc"}], "stats": {"total": 230, "additions": 104, "deletions": 126}, "files": [{"sha": "fdee0b8ebe83a6fda6fb7397db70bf632d7fbc5d", "filename": "Cargo.lock", "status": "modified", "additions": 70, "deletions": 77, "changes": 147, "blob_url": "https://github.com/rust-lang/rust/blob/ac8ae0062544743aaea1719a34f299b66f2b7dc9/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/ac8ae0062544743aaea1719a34f299b66f2b7dc9/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=ac8ae0062544743aaea1719a34f299b66f2b7dc9", "patch": "@@ -15,13 +15,13 @@ dependencies = [\n  \"difference 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"environment 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"error-chain 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_json 1.0.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_json 1.0.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"skeptic 0.13.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"atty\"\n-version = \"0.2.8\"\n+version = \"0.2.9\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"libc 0.2.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -77,9 +77,9 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"error-chain 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"semver 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_derive 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_json 1.0.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_derive 1.0.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_json 1.0.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -89,9 +89,9 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"error-chain 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_derive 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_json 1.0.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_derive 1.0.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_json 1.0.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -117,8 +117,8 @@ name = \"derive-new\"\n version = \"0.5.4\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"proc-macro2 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"quote 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"proc-macro2 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"quote 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"syn 0.13.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -152,10 +152,10 @@ dependencies = [\n \n [[package]]\n name = \"env_logger\"\n-version = \"0.5.8\"\n+version = \"0.5.9\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"atty 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"atty 0.2.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"humantime 1.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex 0.2.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -260,11 +260,6 @@ dependencies = [\n  \"libc 0.2.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n-[[package]]\n-name = \"num-traits\"\n-version = \"0.2.2\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-\n [[package]]\n name = \"owning_ref\"\n version = \"0.3.3\"\n@@ -289,13 +284,13 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"libc 0.2.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"smallvec 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"smallvec 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"proc-macro2\"\n-version = \"0.3.6\"\n+version = \"0.3.7\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -316,10 +311,10 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"quote\"\n-version = \"0.5.1\"\n+version = \"0.5.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"proc-macro2 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"proc-macro2 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -367,15 +362,15 @@ dependencies = [\n \n [[package]]\n name = \"remove_dir_all\"\n-version = \"0.5.0\"\n+version = \"0.5.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"winapi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"rustc-ap-rustc_cratesio_shim\"\n-version = \"103.0.0\"\n+version = \"110.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"bitflags 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -384,61 +379,61 @@ dependencies = [\n \n [[package]]\n name = \"rustc-ap-rustc_data_structures\"\n-version = \"103.0.0\"\n+version = \"110.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cfg-if 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"ena 0.9.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot 0.5.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot_core 0.2.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-serialize 103.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-serialize 110.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"stable_deref_trait 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"term 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"rustc-ap-rustc_errors\"\n-version = \"103.0.0\"\n+version = \"110.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"atty 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_data_structures 103.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-serialize 103.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-syntax_pos 103.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"atty 0.2.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_data_structures 110.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-serialize 110.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-syntax_pos 110.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"term 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"termcolor 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unicode-width 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"rustc-ap-serialize\"\n-version = \"103.0.0\"\n+version = \"110.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"rustc-ap-syntax\"\n-version = \"103.0.0\"\n+version = \"110.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"bitflags 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_cratesio_shim 103.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_data_structures 103.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_errors 103.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-serialize 103.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-syntax_pos 103.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_cratesio_shim 110.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_data_structures 110.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_errors 110.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-serialize 110.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-syntax_pos 110.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"scoped-tls 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"term 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"rustc-ap-syntax_pos\"\n-version = \"103.0.0\"\n+version = \"110.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"rustc-ap-rustc_data_structures 103.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-serialize 103.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_data_structures 110.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-serialize 110.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"scoped-tls 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"term 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unicode-width 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -457,17 +452,17 @@ dependencies = [\n  \"cargo_metadata 0.5.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"derive-new 0.5.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"diff 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"env_logger 0.5.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"env_logger 0.5.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"getopts 0.2.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"itertools 0.7.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.2.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex 0.2.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-syntax 103.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_derive 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_json 1.0.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-syntax 110.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_derive 1.0.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_json 1.0.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"term 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"toml 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unicode-segmentation 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -494,7 +489,7 @@ version = \"0.8.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -503,7 +498,7 @@ version = \"0.9.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -513,16 +508,16 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"serde\"\n-version = \"1.0.39\"\n+version = \"1.0.43\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"serde_derive\"\n-version = \"1.0.39\"\n+version = \"1.0.43\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"proc-macro2 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"quote 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"proc-macro2 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"quote 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive_internals 0.23.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"syn 0.13.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -532,19 +527,18 @@ name = \"serde_derive_internals\"\n version = \"0.23.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"proc-macro2 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"proc-macro2 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"syn 0.13.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"serde_json\"\n-version = \"1.0.15\"\n+version = \"1.0.16\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"dtoa 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"itoa 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"num-traits 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -557,14 +551,14 @@ dependencies = [\n  \"error-chain 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"glob 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"pulldown-cmark 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_json 1.0.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_json 1.0.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"tempdir 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"walkdir 1.0.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"smallvec\"\n-version = \"0.6.0\"\n+version = \"0.6.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n@@ -577,8 +571,8 @@ name = \"syn\"\n version = \"0.13.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"proc-macro2 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"quote 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"proc-macro2 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"quote 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -588,7 +582,7 @@ version = \"0.3.7\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"rand 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"remove_dir_all 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"remove_dir_all 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -641,7 +635,7 @@ name = \"toml\"\n version = \"0.4.6\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"serde 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -732,7 +726,7 @@ dependencies = [\n [metadata]\n \"checksum aho-corasick 0.6.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d6531d44de723825aa81398a6415283229725a00fa30713812ab9323faa82fc4\"\n \"checksum assert_cli 0.5.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"72342c21057a3cb5f7c2d849bf7999a83795434dd36d74fa8c24680581bd1930\"\n-\"checksum atty 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"af80143d6f7608d746df1520709e5d141c96f240b0e62b0aa41bdfb53374d9d4\"\n+\"checksum atty 0.2.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6609a866dd1a1b2d0ee1362195bf3e4f6438abb2d80120b83b1e1f4fb6476dd0\"\n \"checksum backtrace 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ebbe525f66f42d207968308ee86bc2dd60aa5fab535b22e616323a173d097d8e\"\n \"checksum backtrace-sys 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)\" = \"44585761d6161b0f57afc49482ab6bd067e4edef48c12a152c237eb0203f7661\"\n \"checksum bitflags 0.9.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4efd02e230a02e18f92fc2735f44597385ed02ad8f831e7c1c1156ee5e1ab3a5\"\n@@ -750,7 +744,7 @@ dependencies = [\n \"checksum dtoa 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"09c3753c3db574d215cba4ea76018483895d7bff25a31b49ba45db21c48e50ab\"\n \"checksum either 1.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3be565ca5c557d7f59e7cfcf1844f9e3033650c929c6566f511e8005f205c1d0\"\n \"checksum ena 0.9.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f8b449f3b18c89d2dbe40548d2ee4fa58ea0a08b761992da6ecb9788e4688834\"\n-\"checksum env_logger 0.5.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"be27f8ea102a7182093a80d98f0b78623b580eda8791cbe8e2345fe6e57567a6\"\n+\"checksum env_logger 0.5.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"00c45cec4cde3daac5f036c74098b4956151525cdf360cff5ee0092c98823e54\"\n \"checksum environment 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1f4b14e20978669064c33b4c1e0fb4083412e40fe56cbea2eae80fd7591503ee\"\n \"checksum error-chain 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ff511d5dc435d703f4971bc399647c9bc38e20cb41452e3b9feb4765419ed3f3\"\n \"checksum fuchsia-zircon 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2e9763c69ebaae630ba35f74888db465e49e259ba1bc0eda7d06f4a067615d82\"\n@@ -766,38 +760,37 @@ dependencies = [\n \"checksum libc 0.2.40 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6fd41f331ac7c5b8ac259b8bf82c75c0fb2e469bbf37d2becbba9a6a2221965b\"\n \"checksum log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"89f010e843f2b1a31dbd316b3b8d443758bc634bed37aabade59c686d644e0a2\"\n \"checksum memchr 2.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"796fba70e76612589ed2ce7f45282f5af869e0fdd7cc6199fa1aa1f1d591ba9d\"\n-\"checksum num-traits 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dee092fcdf725aee04dd7da1d21debff559237d49ef1cb3e69bcb8ece44c7364\"\n \"checksum owning_ref 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cdf84f41639e037b484f93433aa3897863b561ed65c6e59c7073d7c561710f37\"\n \"checksum parking_lot 0.5.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9fd9d732f2de194336fb02fe11f9eed13d9e76f13f4315b4d88a14ca411750cd\"\n \"checksum parking_lot_core 0.2.13 (registry+https://github.com/rust-lang/crates.io-index)\" = \"538ef00b7317875071d5e00f603f24d16f0b474c1a5fc0ccb8b454ca72eafa79\"\n-\"checksum proc-macro2 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"49b6a521dc81b643e9a51e0d1cf05df46d5a2f3c0280ea72bcb68276ba64a118\"\n+\"checksum proc-macro2 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b16749538926f394755373f0dfec0852d79b3bd512a5906ceaeb72ee64a4eaa0\"\n \"checksum pulldown-cmark 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d6fdf85cda6cadfae5428a54661d431330b312bc767ddbc57adbedc24da66e32\"\n \"checksum quick-error 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"eda5fe9b71976e62bc81b781206aaa076401769b2143379d3eb2118388babac4\"\n-\"checksum quote 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7b0ff51282f28dc1b53fd154298feaa2e77c5ea0dba68e1fd8b03b72fbe13d2a\"\n+\"checksum quote 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9949cfe66888ffe1d53e6ec9d9f3b70714083854be20fd5e271b232a017401e8\"\n \"checksum rand 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"eba5f8cb59cc50ed56be8880a5c7b496bfd9bd26394e176bc67884094145c2c5\"\n \"checksum redox_syscall 0.1.37 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0d92eecebad22b767915e4d529f89f28ee96dbbf5a4810d2b844373f136417fd\"\n \"checksum redox_termios 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7e891cfe48e9100a70a3b6eb652fef28920c117d366339687bd5576160db0f76\"\n \"checksum regex 0.2.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"aec3f58d903a7d2a9dc2bf0e41a746f4530e0cab6b615494e058f67a3ef947fb\"\n \"checksum regex-syntax 0.5.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bd90079345f4a4c3409214734ae220fd773c6f2e8a543d07370c6c1c369cfbfb\"\n-\"checksum remove_dir_all 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dfc5b3ce5d5ea144bb04ebd093a9e14e9765bcfec866aecda9b6dec43b3d1e24\"\n-\"checksum rustc-ap-rustc_cratesio_shim 103.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"463834ac5ea777cb56c073586675fac37292f8425aafb3757efca7e6a76545aa\"\n-\"checksum rustc-ap-rustc_data_structures 103.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5d256eeab1b8639c2a1fd341e54f3613f8150bc262e4ec9361a29bbcb162906d\"\n-\"checksum rustc-ap-rustc_errors 103.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cf6dd73033bb512845a6df347174c65ad430c92ecd35527e24d8bb186f5664ee\"\n-\"checksum rustc-ap-serialize 103.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"356d338dbe538c7d6428296872d5d68da8f091e34eb89bca3b3f245ed0785e5e\"\n-\"checksum rustc-ap-syntax 103.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0f02edede4ba70963a7dac2308876f03f76f9edd48a035e5abc8fa37c57a77c8\"\n-\"checksum rustc-ap-syntax_pos 103.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ad8e50d4c38121fa8ded3ffbf94926ec74c95f24316c3b80de84fbfb42c005cf\"\n+\"checksum remove_dir_all 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3488ba1b9a2084d38645c4c08276a1752dcbf2c7130d74f1569681ad5d2799c5\"\n+\"checksum rustc-ap-rustc_cratesio_shim 110.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0256e318ad99c467d24bd7188f2d4a3028360621bb92d769b4b65fc44717d514\"\n+\"checksum rustc-ap-rustc_data_structures 110.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"83430df7f76ea85c1f70fe145041576eee8fd5d77053bf426df24b480918d185\"\n+\"checksum rustc-ap-rustc_errors 110.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2b03f874277103039816f6467b1ff30a81b1d6a29d4de6efccefe4c488f6535a\"\n+\"checksum rustc-ap-serialize 110.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a2e47cf949f06b0c7ab7566c2f69d49f28cb3ecf1bb8bf0bda48b1ba5b7945ae\"\n+\"checksum rustc-ap-syntax 110.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"625e6fb41fde299082cda3bceb08f81c9ba56b14a2ec737b4366f9c3c9be07d8\"\n+\"checksum rustc-ap-syntax_pos 110.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"474a23ef1a1245ae02c5fd6a1e9a0725ce6fd25ca2294703c03bddce041f867b\"\n \"checksum rustc-demangle 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"11fb43a206a04116ffd7cfcf9bcb941f8eb6cc7ff667272246b0a1c74259a3cb\"\n \"checksum same-file 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d931a44fdaa43b8637009e7632a02adc4f2b2e0733c08caa4cf00e8da4a117a7\"\n \"checksum scoped-tls 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8674d439c964889e2476f474a3bf198cc9e199e77499960893bac5de7e9218a4\"\n \"checksum semver 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bee2bc909ab2d8d60dab26e8cad85b25d795b14603a0dcb627b78b9d30b6454b\"\n \"checksum semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1d7eb9ef2c18661902cc47e535f9bc51b78acd254da71d375c2f6720d9a40403\"\n \"checksum semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"388a1df253eca08550bef6c72392cfe7c30914bf41df5269b68cbd6ff8f570a3\"\n-\"checksum serde 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)\" = \"53e6b6859395f46cf528414659ce43e70902b2277519707c3bd91797b3320330\"\n-\"checksum serde_derive 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)\" = \"16e97f8dc5b2dabc0183e0cde24b1a53835e5bb3d2c9e0fdb077f895bba7f2a9\"\n+\"checksum serde 1.0.43 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0c855d888276f20d140223bd06515e5bf1647fd6d02593cb5792466d9a8ec2d0\"\n+\"checksum serde_derive 1.0.43 (registry+https://github.com/rust-lang/crates.io-index)\" = \"aa113e5fc4b008a626ba2bbd41330b56c9987d667f79f7b243e5a2d03d91ed1c\"\n \"checksum serde_derive_internals 0.23.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9d30c4596450fd7bbda79ef15559683f9a79ac0193ea819db90000d7e1cae794\"\n-\"checksum serde_json 1.0.15 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7bf1cbb1387028a13739cb018ee0d9b3db534f22ca3c84a5904f7eadfde14e75\"\n+\"checksum serde_json 1.0.16 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8c6c4e049dc657a99e394bd85c22acbf97356feeec6dbf44150f2dcf79fb3118\"\n \"checksum skeptic 0.13.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c8431f8fca168e2db4be547bd8329eac70d095dff1444fee4b0fa0fabc7df75a\"\n-\"checksum smallvec 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"44db0ecb22921ef790d17ae13a3f6d15784183ff5f2a01aa32098c7498d2b4b9\"\n+\"checksum smallvec 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"03dab98ab5ded3a8b43b2c80751194608d0b2aa0f1d46cf95d1c35e192844aa7\"\n \"checksum stable_deref_trait 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"15132e0e364248108c5e2c02e3ab539be8d6f5d52a01ca9bbf27ed657316f02b\"\n \"checksum syn 0.13.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"91b52877572087400e83d24b9178488541e3d535259e04ff17a63df1e5ceff59\"\n \"checksum tempdir 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"15f2b5fb00ccdf689e0149d1b1b3c03fead81c2b37735d812fa8bddbbf41b6d8\""}, {"sha": "0924527f372300e403fde1ac06db55c32abac31c", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ac8ae0062544743aaea1719a34f299b66f2b7dc9/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ac8ae0062544743aaea1719a34f299b66f2b7dc9/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=ac8ae0062544743aaea1719a34f299b66f2b7dc9", "patch": "@@ -46,7 +46,7 @@ env_logger = \"0.5\"\n getopts = \"0.2\"\n derive-new = \"0.5\"\n cargo_metadata = \"0.5.1\"\n-rustc-ap-syntax = \"103.0.0\"\n+rustc-ap-syntax = \"110.0.0\"\n \n [dev-dependencies]\n assert_cli = \"0.5\""}, {"sha": "cd8bfa8a72bad6e1b7880fcaf558f01c71b68d58", "filename": "src/expr.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ac8ae0062544743aaea1719a34f299b66f2b7dc9/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac8ae0062544743aaea1719a34f299b66f2b7dc9/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=ac8ae0062544743aaea1719a34f299b66f2b7dc9", "patch": "@@ -1661,11 +1661,7 @@ fn rewrite_struct_lit<'a>(\n         let nested_shape = shape_for_tactic(tactic, h_shape, v_shape);\n \n         let ends_with_comma = span_ends_with_comma(context, span);\n-        let force_no_trailing_comma = if context.inside_macro() && !ends_with_comma {\n-            true\n-        } else {\n-            false\n-        };\n+        let force_no_trailing_comma = context.inside_macro() && !ends_with_comma;\n \n         let fmt = struct_lit_formatting(\n             nested_shape,\n@@ -1846,12 +1842,10 @@ where\n             } else {\n                 Some(SeparatorTactic::Never)\n             }\n+        } else if items.len() == 1 {\n+            Some(SeparatorTactic::Always)\n         } else {\n-            if items.len() == 1 {\n-                Some(SeparatorTactic::Always)\n-            } else {\n-                None\n-            }\n+            None\n         };\n         overflow::rewrite_with_parens(\n             context,"}, {"sha": "f7286fc3b43c81a329d5392290eb02e4625f54de", "filename": "src/imports.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ac8ae0062544743aaea1719a34f299b66f2b7dc9/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac8ae0062544743aaea1719a34f299b66f2b7dc9/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=ac8ae0062544743aaea1719a34f299b66f2b7dc9", "patch": "@@ -381,7 +381,7 @@ impl UseTree {\n \n         // Normalise foo::self -> foo.\n         if let UseSegment::Slf(None) = last {\n-            if self.path.len() > 0 {\n+            if !self.path.is_empty() {\n                 return self;\n             }\n         }\n@@ -494,8 +494,8 @@ impl UseTree {\n             UseSegment::List(list) => {\n                 let prefix = &self.path[..self.path.len() - 1];\n                 let mut result = vec![];\n-                for nested_use_tree in list.into_iter() {\n-                    for mut flattend in nested_use_tree.clone().flatten().iter_mut() {\n+                for nested_use_tree in list {\n+                    for mut flattend in &mut nested_use_tree.clone().flatten() {\n                         let mut new_path = prefix.to_vec();\n                         new_path.append(&mut flattend.path);\n                         result.push(UseTree {\n@@ -672,15 +672,16 @@ fn rewrite_nested_use_tree(\n             list_items.push(ListItem::from_str(use_tree.rewrite(context, nested_shape)?));\n         }\n     }\n-    let (tactic, remaining_width) = if use_tree_list.iter().any(|use_segment| {\n+    let has_nested_list = use_tree_list.iter().any(|use_segment| {\n         use_segment\n             .path\n             .last()\n             .map_or(false, |last_segment| match last_segment {\n                 UseSegment::List(..) => true,\n                 _ => false,\n             })\n-    }) {\n+    });\n+    let (tactic, remaining_width) = if has_nested_list {\n         (DefinitiveListTactic::Vertical, 0)\n     } else {\n         let remaining_width = shape.width.checked_sub(2).unwrap_or(0);"}, {"sha": "80e837ed9046f6145b26ddbb4144bade2115341b", "filename": "src/items.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ac8ae0062544743aaea1719a34f299b66f2b7dc9/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac8ae0062544743aaea1719a34f299b66f2b7dc9/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=ac8ae0062544743aaea1719a34f299b66f2b7dc9", "patch": "@@ -2722,17 +2722,7 @@ impl Rewrite for ast::ForeignItem {\n                 let mut_str = if is_mutable { \"mut \" } else { \"\" };\n                 let prefix = format!(\"{}static {}{}:\", vis, mut_str, self.ident);\n                 // 1 = ;\n-                let shape = shape.sub_width(1)?;\n-                ty.rewrite(context, shape).map(|ty_str| {\n-                    // 1 = space between prefix and type.\n-                    let sep = if prefix.len() + ty_str.len() + 1 <= shape.width {\n-                        Cow::from(\" \")\n-                    } else {\n-                        let nested_indent = shape.indent.block_indent(context.config);\n-                        nested_indent.to_string_with_newline(context.config)\n-                    };\n-                    format!(\"{}{}{};\", prefix, sep, ty_str)\n-                })\n+                rewrite_assign_rhs(context, prefix, &**ty, shape.sub_width(1)?).map(|s| s + \";\")\n             }\n             ast::ForeignItemKind::Ty => {\n                 let vis = format_visibility(&self.vis);"}, {"sha": "0a5c7307e4f331da18369d8040cb7980147d7c9f", "filename": "src/lib.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/ac8ae0062544743aaea1719a34f299b66f2b7dc9/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac8ae0062544743aaea1719a34f299b66f2b7dc9/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=ac8ae0062544743aaea1719a34f299b66f2b7dc9", "patch": "@@ -220,24 +220,24 @@ impl FormatReport {\n                 write!(t, \"{} \", error.msg_prefix())?;\n                 t.reset()?;\n                 t.attr(term::Attr::Bold)?;\n-                write!(t, \"{}\\n\", error.kind)?;\n+                writeln!(t, \"{}\", error.kind)?;\n \n                 // Second line: file info\n                 write!(t, \"{}--> \", &prefix_spaces[1..])?;\n                 t.reset()?;\n-                write!(t, \"{}:{}\\n\", file, error.line)?;\n+                writeln!(t, \"{}:{}\", file, error.line)?;\n \n                 // Third to fifth lines: show the line which triggered error, if available.\n                 if !error.line_buffer.is_empty() {\n                     let (space_len, target_len) = error.format_len();\n                     t.attr(term::Attr::Bold)?;\n                     write!(t, \"{}|\\n{} | \", prefix_spaces, error.line)?;\n                     t.reset()?;\n-                    write!(t, \"{}\\n\", error.line_buffer)?;\n+                    writeln!(t, \"{}\", error.line_buffer)?;\n                     t.attr(term::Attr::Bold)?;\n                     write!(t, \"{}| \", prefix_spaces)?;\n                     t.fg(term::color::RED)?;\n-                    write!(t, \"{}\\n\", target_str(space_len, target_len))?;\n+                    writeln!(t, \"{}\", target_str(space_len, target_len))?;\n                     t.reset()?;\n                 }\n \n@@ -247,9 +247,9 @@ impl FormatReport {\n                     t.attr(term::Attr::Bold)?;\n                     write!(t, \"{}= note: \", prefix_spaces)?;\n                     t.reset()?;\n-                    write!(t, \"{}\\n\", error.msg_suffix())?;\n+                    writeln!(t, \"{}\", error.msg_suffix())?;\n                 } else {\n-                    write!(t, \"\\n\")?;\n+                    writeln!(t)?;\n                 }\n                 t.reset()?;\n             }\n@@ -307,9 +307,9 @@ impl fmt::Display for FormatReport {\n                     format!(\"{}note= \", prefix_spaces)\n                 };\n \n-                write!(\n+                writeln!(\n                     fmt,\n-                    \"{}\\n{}\\n{}\\n{}{}\\n\",\n+                    \"{}\\n{}\\n{}\\n{}{}\",\n                     error_info,\n                     file_info,\n                     error_line_buffer,\n@@ -319,9 +319,9 @@ impl fmt::Display for FormatReport {\n             }\n         }\n         if !self.file_error_map.is_empty() {\n-            write!(\n+            writeln!(\n                 fmt,\n-                \"warning: rustfmt may have failed to format. See previous {} errors.\\n\",\n+                \"warning: rustfmt may have failed to format. See previous {} errors.\",\n                 self.warning_count(),\n             )?;\n         }\n@@ -384,7 +384,7 @@ where\n \n         debug_assert_eq!(\n             visitor.line_number,\n-            ::utils::count_newlines(&format!(\"{}\", visitor.buffer))\n+            ::utils::count_newlines(&visitor.buffer)\n         );\n \n         let filename = path.clone();\n@@ -627,7 +627,7 @@ fn enclose_in_main_block(s: &str, config: &Config) -> String {\n         }\n         result.push_str(&line);\n         result.push('\\n');\n-        need_indent = !(kind.is_string() && !line.ends_with('\\\\'));\n+        need_indent = !kind.is_string() || line.ends_with('\\\\');\n     }\n     result.push('}');\n     result\n@@ -680,7 +680,7 @@ pub fn format_code_block(code_snippet: &str, config: &Config) -> Option<String>\n             line\n         };\n         result.push_str(trimmed_line);\n-        is_indented = !(kind.is_string() && !line.ends_with('\\\\'));\n+        is_indented = !kind.is_string() || line.ends_with('\\\\');\n     }\n     Some(result)\n }"}, {"sha": "9e5ea33d296b396cb727ba01cf2f89debce8747f", "filename": "src/lists.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ac8ae0062544743aaea1719a34f299b66f2b7dc9/src%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac8ae0062544743aaea1719a34f299b66f2b7dc9/src%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flists.rs?ref=ac8ae0062544743aaea1719a34f299b66f2b7dc9", "patch": "@@ -458,7 +458,7 @@ where\n         let item = item.as_ref();\n         let inner_item_width = item.inner_as_ref().len();\n         if !first\n-            && (item.is_different_group() || !item.post_comment.is_some()\n+            && (item.is_different_group() || item.post_comment.is_none()\n                 || inner_item_width + overhead > max_budget)\n         {\n             return max_width;"}, {"sha": "a76520c8fe6e16d3cfcd003155527fe86c1b9cb3", "filename": "src/macros.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ac8ae0062544743aaea1719a34f299b66f2b7dc9/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac8ae0062544743aaea1719a34f299b66f2b7dc9/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=ac8ae0062544743aaea1719a34f299b66f2b7dc9", "patch": "@@ -580,7 +580,7 @@ impl MacroArgKind {\n                 let another = another\n                     .as_ref()\n                     .and_then(|a| a.rewrite(context, shape, use_multiple_lines))\n-                    .unwrap_or(\"\".to_owned());\n+                    .unwrap_or_else(|| \"\".to_owned());\n                 let repeat_tok = pprust::token_to_string(tok);\n \n                 Some(format!(\"${}{}{}{}{}\", lhs, inner, rhs, another, repeat_tok))\n@@ -685,7 +685,7 @@ impl MacroArgParser {\n         match iter.next() {\n             Some(TokenTree::Token(sp, Token::Ident(ref ident, _))) => {\n                 self.result.push(ParsedMacroArg {\n-                    kind: MacroArgKind::MetaVariable(ident.clone(), self.buf.clone()),\n+                    kind: MacroArgKind::MetaVariable(*ident, self.buf.clone()),\n                     span: mk_sp(self.lo, sp.hi()),\n                 });\n \n@@ -718,7 +718,7 @@ impl MacroArgParser {\n         let mut hi = span.hi();\n \n         // Parse '*', '+' or '?.\n-        while let Some(ref tok) = iter.next() {\n+        for ref tok in iter {\n             self.set_last_tok(tok);\n             if first {\n                 first = false;\n@@ -1080,7 +1080,7 @@ fn indent_macro_snippet(\n         .min()?;\n \n     Some(\n-        String::from(first_line) + \"\\n\"\n+        first_line + \"\\n\"\n             + &trimmed_lines\n                 .iter()\n                 .map(\n@@ -1250,7 +1250,7 @@ impl MacroBranch {\n                     if !l.is_empty() && need_indent {\n                         s += &indent_str;\n                     }\n-                    (s + l + \"\\n\", !(kind.is_string() && !l.ends_with('\\\\')))\n+                    (s + l + \"\\n\", !kind.is_string() || l.ends_with('\\\\'))\n                 },\n             )\n             .0;"}, {"sha": "7d7c1ff8d32ab1a99864f2be2fc92471b7fc034c", "filename": "src/reorder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ac8ae0062544743aaea1719a34f299b66f2b7dc9/src%2Freorder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac8ae0062544743aaea1719a34f299b66f2b7dc9/src%2Freorder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Freorder.rs?ref=ac8ae0062544743aaea1719a34f299b66f2b7dc9", "patch": "@@ -149,7 +149,7 @@ fn rewrite_reorderable_items(\n                 .into_iter()\n                 .map(|use_tree| ListItem {\n                     item: use_tree.rewrite_top_level(context, nested_shape),\n-                    ..use_tree.list_item.unwrap_or_else(|| ListItem::empty())\n+                    ..use_tree.list_item.unwrap_or_else(ListItem::empty)\n                 })\n                 .collect();\n "}, {"sha": "178ed99f69608ac06376f5b72ac3edafac0a4a97", "filename": "src/rustfmt_diff.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ac8ae0062544743aaea1719a34f299b66f2b7dc9/src%2Frustfmt_diff.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac8ae0062544743aaea1719a34f299b66f2b7dc9/src%2Frustfmt_diff.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustfmt_diff.rs?ref=ac8ae0062544743aaea1719a34f299b66f2b7dc9", "patch": "@@ -160,7 +160,7 @@ where\n \n     for mismatch in diff {\n         let title = get_section_title(mismatch.line_number);\n-        writer.writeln(&format!(\"{}\", title), None);\n+        writer.writeln(&title, None);\n \n         for line in mismatch.lines {\n             match line {"}, {"sha": "4bde91f67f17d55994a0cb528c5dea39ec4fe3ec", "filename": "src/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ac8ae0062544743aaea1719a34f299b66f2b7dc9/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac8ae0062544743aaea1719a34f299b66f2b7dc9/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=ac8ae0062544743aaea1719a34f299b66f2b7dc9", "patch": "@@ -482,7 +482,7 @@ fn rewrite_bounded_lifetime(\n ) -> Option<String> {\n     let result = lt.rewrite(context, shape)?;\n \n-    if bounds.len() == 0 {\n+    if bounds.is_empty() {\n         Some(result)\n     } else {\n         let colon = type_bound_colon(context);"}]}