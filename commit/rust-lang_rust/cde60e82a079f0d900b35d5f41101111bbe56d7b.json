{"sha": "cde60e82a079f0d900b35d5f41101111bbe56d7b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkZTYwZTgyYTA3OWYwZDkwMGIzNWQ1ZjQxMTAxMTExYmJlNTZkN2I=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-10-21T23:48:01Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-10-21T23:48:01Z"}, "message": "Add long error explanation for E0728", "tree": {"sha": "623cbea25ad7a81c63625130f8631d371d1e45e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/623cbea25ad7a81c63625130f8631d371d1e45e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cde60e82a079f0d900b35d5f41101111bbe56d7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cde60e82a079f0d900b35d5f41101111bbe56d7b", "html_url": "https://github.com/rust-lang/rust/commit/cde60e82a079f0d900b35d5f41101111bbe56d7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cde60e82a079f0d900b35d5f41101111bbe56d7b/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10f12fe3e73f3b6f7e6d6f8bbd87b1a8b4e74a07", "url": "https://api.github.com/repos/rust-lang/rust/commits/10f12fe3e73f3b6f7e6d6f8bbd87b1a8b4e74a07", "html_url": "https://github.com/rust-lang/rust/commit/10f12fe3e73f3b6f7e6d6f8bbd87b1a8b4e74a07"}], "stats": {"total": 83, "additions": 78, "deletions": 5}, "files": [{"sha": "bc66beab86262c7f856702255852bfa7950dcc6e", "filename": "src/librustc/error_codes.rs", "status": "modified", "additions": 70, "deletions": 3, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/cde60e82a079f0d900b35d5f41101111bbe56d7b/src%2Flibrustc%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cde60e82a079f0d900b35d5f41101111bbe56d7b/src%2Flibrustc%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ferror_codes.rs?ref=cde60e82a079f0d900b35d5f41101111bbe56d7b", "patch": "@@ -2045,8 +2045,8 @@ so that a generator can then be constructed:\n async fn bar<T>() -> () {}\n \n async fn foo() {\n-  bar::<String>().await;\n-  //   ^^^^^^^^ specify type explicitly\n+    bar::<String>().await;\n+    //   ^^^^^^^^ specify type explicitly\n }\n ```\n \"##,\n@@ -2126,6 +2126,74 @@ static X: u32 = 42;\n ```\n \"##,\n \n+E0728: r##\"\n+`await` has been used outside `async` function or block.\n+\n+Erroneous code examples:\n+\n+```edition2018,compile_fail,E0728\n+# use std::pin::Pin;\n+# use std::future::Future;\n+# use std::task::{Context, Poll};\n+\n+# struct WakeOnceThenComplete(bool);\n+\n+# fn wake_and_yield_once() -> WakeOnceThenComplete {\n+#     WakeOnceThenComplete(false)\n+# }\n+\n+# impl Future for WakeOnceThenComplete {\n+#     type Output = ();\n+#     fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<()> {\n+#         if self.0 {\n+#             Poll::Ready(())\n+#         } else {\n+#             cx.waker().wake_by_ref();\n+#             self.0 = true;\n+#             Poll::Pending\n+#         }\n+#     }\n+# }\n+\n+fn foo() {\n+    wake_and_yield_once().await // `await` is used outside `async` context\n+}\n+```\n+\n+`await` is used to suspend the current computation until the given\n+future is ready to produce a value. So it is legal only within\n+an async context, like an `async fn` or an `async` block.\n+\n+```edition2018\n+# use std::pin::Pin;\n+# use std::future::Future;\n+# use std::task::{Context, Poll};\n+\n+# struct WakeOnceThenComplete(bool);\n+\n+# fn wake_and_yield_once() -> WakeOnceThenComplete {\n+#     WakeOnceThenComplete(false)\n+# }\n+\n+# impl Future for WakeOnceThenComplete {\n+#     type Output = ();\n+#     fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<()> {\n+#         if self.0 {\n+#             Poll::Ready(())\n+#         } else {\n+#             cx.waker().wake_by_ref();\n+#             self.0 = true;\n+#             Poll::Pending\n+#         }\n+#     }\n+# }\n+\n+async fn foo() {\n+    wake_and_yield_once().await // `await` is used within `async` context\n+}\n+```\n+\"##,\n+\n E0734: r##\"\n A stability attribute has been used outside of the standard library.\n \n@@ -2218,6 +2286,5 @@ See [RFC 2091] for details on this and other limitations.\n //  E0702, // replaced with a generic attribute input check\n     E0726, // non-explicit (not `'_`) elided lifetime in unsupported position\n     E0727, // `async` generators are not yet supported\n-    E0728, // `await` must be in an `async` function or block\n     E0739, // invalid track_caller application/syntax\n }"}, {"sha": "4b5e2d59e38c999e6c89eed59fddcd429b92e13e", "filename": "src/test/ui/async-await/await-keyword/incorrect-syntax-suggestions.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cde60e82a079f0d900b35d5f41101111bbe56d7b/src%2Ftest%2Fui%2Fasync-await%2Fawait-keyword%2Fincorrect-syntax-suggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cde60e82a079f0d900b35d5f41101111bbe56d7b/src%2Ftest%2Fui%2Fasync-await%2Fawait-keyword%2Fincorrect-syntax-suggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fawait-keyword%2Fincorrect-syntax-suggestions.stderr?ref=cde60e82a079f0d900b35d5f41101111bbe56d7b", "patch": "@@ -244,4 +244,5 @@ LL |     let _ = await bar()?;\n \n error: aborting due to 35 previous errors\n \n-For more information about this error, try `rustc --explain E0277`.\n+Some errors have detailed explanations: E0277, E0728.\n+For more information about an error, try `rustc --explain E0277`."}, {"sha": "5b9adb253d968450ede33800bd85b3b46da05510", "filename": "src/test/ui/async-await/issues/issue-51719.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cde60e82a079f0d900b35d5f41101111bbe56d7b/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-51719.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cde60e82a079f0d900b35d5f41101111bbe56d7b/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-51719.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-51719.stderr?ref=cde60e82a079f0d900b35d5f41101111bbe56d7b", "patch": "@@ -8,3 +8,4 @@ LL |     let _gen = || foo().await;\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0728`."}, {"sha": "f120bd119c540296f25ba3ae4fb1878d34567d62", "filename": "src/test/ui/async-await/issues/issue-51751.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cde60e82a079f0d900b35d5f41101111bbe56d7b/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-51751.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cde60e82a079f0d900b35d5f41101111bbe56d7b/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-51751.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-51751.stderr?ref=cde60e82a079f0d900b35d5f41101111bbe56d7b", "patch": "@@ -9,3 +9,4 @@ LL |     let finished = result.await;\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0728`."}, {"sha": "538430290d299ba4c9681ff5ec7d25bffa4b81e8", "filename": "src/test/ui/async-await/issues/issue-62009-1.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cde60e82a079f0d900b35d5f41101111bbe56d7b/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cde60e82a079f0d900b35d5f41101111bbe56d7b/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-1.stderr?ref=cde60e82a079f0d900b35d5f41101111bbe56d7b", "patch": "@@ -40,4 +40,5 @@ LL |     F: Future\n \n error: aborting due to 4 previous errors\n \n-For more information about this error, try `rustc --explain E0277`.\n+Some errors have detailed explanations: E0277, E0728.\n+For more information about an error, try `rustc --explain E0277`."}, {"sha": "47b74b5574fea57e240acefd77849261fbf64adf", "filename": "src/test/ui/async-await/issues/issue-62009-2.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cde60e82a079f0d900b35d5f41101111bbe56d7b/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cde60e82a079f0d900b35d5f41101111bbe56d7b/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-2.stderr?ref=cde60e82a079f0d900b35d5f41101111bbe56d7b", "patch": "@@ -8,3 +8,4 @@ LL |     (async || 2333)().await;\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0728`."}, {"sha": "f826a86f089853d4ea27609aae7a8254efd2ecc0", "filename": "src/test/ui/async-await/issues/non-async-enclosing-span.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cde60e82a079f0d900b35d5f41101111bbe56d7b/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fnon-async-enclosing-span.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cde60e82a079f0d900b35d5f41101111bbe56d7b/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fnon-async-enclosing-span.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fnon-async-enclosing-span.stderr?ref=cde60e82a079f0d900b35d5f41101111bbe56d7b", "patch": "@@ -9,3 +9,4 @@ LL |     let y = do_the_thing().await;\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0728`."}]}