{"sha": "ef9aa80438c61c1080269ca8b379decc96b49dd5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmOWFhODA0MzhjNjFjMTA4MDI2OWNhOGIzNzlkZWNjOTZiNDlkZDU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-10T06:03:46Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-10T19:07:19Z"}, "message": "Promote most restricted keywords to strict keywords", "tree": {"sha": "c7a215485bf72f258ac27bcc2101f8383cc0e478", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7a215485bf72f258ac27bcc2101f8383cc0e478"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef9aa80438c61c1080269ca8b379decc96b49dd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef9aa80438c61c1080269ca8b379decc96b49dd5", "html_url": "https://github.com/rust-lang/rust/commit/ef9aa80438c61c1080269ca8b379decc96b49dd5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef9aa80438c61c1080269ca8b379decc96b49dd5/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "233e595b617d3eb1fe50b9aba0b4844369d42398", "url": "https://api.github.com/repos/rust-lang/rust/commits/233e595b617d3eb1fe50b9aba0b4844369d42398", "html_url": "https://github.com/rust-lang/rust/commit/233e595b617d3eb1fe50b9aba0b4844369d42398"}], "stats": {"total": 55, "additions": 31, "deletions": 24}, "files": [{"sha": "6e82e6d11b84260de962a37a2e28d7afbd1ed502", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/ef9aa80438c61c1080269ca8b379decc96b49dd5/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef9aa80438c61c1080269ca8b379decc96b49dd5/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=ef9aa80438c61c1080269ca8b379decc96b49dd5", "patch": "@@ -411,22 +411,13 @@ fn contextual_keyword_table() -> hashmap<~str, ()> {\n fn restricted_keyword_table() -> hashmap<~str, ()> {\n     let words = str_hash();\n     let keys = ~[\n-        ~\"as\",\n-        ~\"assert\",\n-        ~\"break\",\n         ~\"const\", ~\"copy\",\n-        ~\"do\", ~\"drop\",\n-        ~\"else\", ~\"enum\", ~\"export\", ~\"extern\",\n-        ~\"fail\", ~\"false\", ~\"fn\", ~\"for\",\n-        ~\"if\", ~\"impl\", ~\"import\",\n-        ~\"let\", ~\"log\", ~\"loop\",\n-        ~\"match\", ~\"mod\", ~\"move\", ~\"mut\",\n-        ~\"priv\", ~\"pub\", ~\"pure\",\n-        ~\"ref\", ~\"return\",\n+        ~\"fail\", ~\"fn\",\n+        ~\"impl\",\n+        ~\"priv\", ~\"pub\",\n+        ~\"return\",\n         ~\"struct\",\n-        ~\"true\", ~\"trait\", ~\"type\",\n-        ~\"unchecked\", ~\"unsafe\", ~\"use\",\n-        ~\"while\"\n+        ~\"unsafe\"\n     ];\n     for keys.each |word| {\n         words.insert(word, ());\n@@ -438,6 +429,19 @@ fn restricted_keyword_table() -> hashmap<~str, ()> {\n fn strict_keyword_table() -> hashmap<~str, ()> {\n     let words = str_hash();\n     let keys = ~[\n+        ~\"as\", ~\"assert\",\n+        ~\"break\",\n+        ~\"do\", ~\"drop\",\n+        ~\"else\", ~\"enum\", ~\"export\", ~\"extern\",\n+        ~\"false\", ~\"for\",\n+        ~\"if\", ~\"import\",\n+        ~\"let\", ~\"log\", ~\"loop\",\n+        ~\"match\", ~\"mod\", ~\"move\", ~\"mut\",\n+        ~\"pure\",\n+        ~\"ref\",\n+        ~\"true\", ~\"trait\", ~\"type\",\n+        ~\"unchecked\", ~\"use\",\n+        ~\"while\"\n     ];\n     for keys.each |word| {\n         words.insert(word, ());"}, {"sha": "4e0dd93cb0407e61bff34f9df844e9741d962507", "filename": "src/test/compile-fail/bad-value-ident-false.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ef9aa80438c61c1080269ca8b379decc96b49dd5/src%2Ftest%2Fcompile-fail%2Fbad-value-ident-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef9aa80438c61c1080269ca8b379decc96b49dd5/src%2Ftest%2Fcompile-fail%2Fbad-value-ident-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-value-ident-false.rs?ref=ef9aa80438c61c1080269ca8b379decc96b49dd5", "patch": "@@ -1,2 +1,2 @@\n-fn false() { } //~ ERROR found `false` in restricted position\n+fn false() { } //~ ERROR found `false` in ident position\n fn main() { }\n\\ No newline at end of file"}, {"sha": "a99e5eecaca67a63801c0b38cf44183d6834c7ff", "filename": "src/test/compile-fail/bad-value-ident-true.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ef9aa80438c61c1080269ca8b379decc96b49dd5/src%2Ftest%2Fcompile-fail%2Fbad-value-ident-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef9aa80438c61c1080269ca8b379decc96b49dd5/src%2Ftest%2Fcompile-fail%2Fbad-value-ident-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-value-ident-true.rs?ref=ef9aa80438c61c1080269ca8b379decc96b49dd5", "patch": "@@ -1,2 +1,2 @@\n-fn true() { } //~ ERROR found `true` in restricted position\n+fn true() { } //~ ERROR found `true` in ident position\n fn main() { }\n\\ No newline at end of file"}, {"sha": "02d0b0891992c544893a3343decf6de1cc6c025b", "filename": "src/test/compile-fail/keyword.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ef9aa80438c61c1080269ca8b379decc96b49dd5/src%2Ftest%2Fcompile-fail%2Fkeyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef9aa80438c61c1080269ca8b379decc96b49dd5/src%2Ftest%2Fcompile-fail%2Fkeyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fkeyword.rs?ref=ef9aa80438c61c1080269ca8b379decc96b49dd5", "patch": "@@ -0,0 +1,3 @@\n+mod break {\n+    //~^ ERROR found `break` in ident position\n+}\n\\ No newline at end of file"}, {"sha": "36d472bc4a2c27b21be51fb1e632a955dbd7b4c9", "filename": "src/test/compile-fail/restricted-keyword1.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ef9aa80438c61c1080269ca8b379decc96b49dd5/src%2Ftest%2Fcompile-fail%2Frestricted-keyword1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef9aa80438c61c1080269ca8b379decc96b49dd5/src%2Ftest%2Fcompile-fail%2Frestricted-keyword1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frestricted-keyword1.rs?ref=ef9aa80438c61c1080269ca8b379decc96b49dd5", "patch": "@@ -1,7 +1,7 @@\n-// error-pattern:found `let` in restricted position\n+// error-pattern:found `fail` in restricted position\n \n fn main() {\n     match true {\n-      {let} { }\n+      {fail} { }\n     }\n }"}, {"sha": "76d258ef1966d48fc26271d92d9fadbb386db164", "filename": "src/test/compile-fail/restricted-keyword2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ef9aa80438c61c1080269ca8b379decc96b49dd5/src%2Ftest%2Fcompile-fail%2Frestricted-keyword2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef9aa80438c61c1080269ca8b379decc96b49dd5/src%2Ftest%2Fcompile-fail%2Frestricted-keyword2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frestricted-keyword2.rs?ref=ef9aa80438c61c1080269ca8b379decc96b49dd5", "patch": "@@ -1,5 +1,5 @@\n-// error-pattern:found `let` in restricted position\n+// error-pattern:found `fail` in restricted position\n \n fn main() {\n-    enum let = int;\n+    enum fail = int;\n }"}, {"sha": "983a4039eeb2e284acc4860a94f8bd20377230ee", "filename": "src/test/run-pass/module-polymorphism4-files/trait_.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ef9aa80438c61c1080269ca8b379decc96b49dd5/src%2Ftest%2Frun-pass%2Fmodule-polymorphism4-files%2Ftrait_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef9aa80438c61c1080269ca8b379decc96b49dd5/src%2Ftest%2Frun-pass%2Fmodule-polymorphism4-files%2Ftrait_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmodule-polymorphism4-files%2Ftrait_.rs?ref=ef9aa80438c61c1080269ca8b379decc96b49dd5", "previous_filename": "src/test/run-pass/module-polymorphism4-files/trait.rs"}, {"sha": "b6be5ae8086c79a3c44011c2d90f527e13a7f613", "filename": "src/test/run-pass/module-polymorphism4.rc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ef9aa80438c61c1080269ca8b379decc96b49dd5/src%2Ftest%2Frun-pass%2Fmodule-polymorphism4.rc", "raw_url": "https://github.com/rust-lang/rust/raw/ef9aa80438c61c1080269ca8b379decc96b49dd5/src%2Ftest%2Frun-pass%2Fmodule-polymorphism4.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmodule-polymorphism4.rc?ref=ef9aa80438c61c1080269ca8b379decc96b49dd5", "patch": "@@ -7,8 +7,8 @@ mod cat {\n     #[path = \"cat.rs\"]\n     mod inst;\n \n-    #[path = \"trait.rs\"]\n-    mod trait;\n+    #[path = \"trait_.rs\"]\n+    mod trait_;\n \n }\n \n@@ -20,7 +20,7 @@ mod dog {\n     #[path = \"dog.rs\"]\n     mod inst;\n \n-    #[path = \"trait.rs\"]\n-    mod trait;\n+    #[path = \"trait_.rs\"]\n+    mod trait_;\n \n }"}]}