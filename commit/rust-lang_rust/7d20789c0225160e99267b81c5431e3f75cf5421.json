{"sha": "7d20789c0225160e99267b81c5431e3f75cf5421", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkMjA3ODljMDIyNTE2MGU5OTI2N2I4MWM1NDMxZTNmNzVjZjU0MjE=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2021-08-03T01:33:05Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2021-08-03T01:33:05Z"}, "message": "Make the UTF-8 statement more explicit and explicitly test for it", "tree": {"sha": "f1097c6b3125a62b75069c0c4dde2efc1dd39f5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1097c6b3125a62b75069c0c4dde2efc1dd39f5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d20789c0225160e99267b81c5431e3f75cf5421", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d20789c0225160e99267b81c5431e3f75cf5421", "html_url": "https://github.com/rust-lang/rust/commit/7d20789c0225160e99267b81c5431e3f75cf5421", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d20789c0225160e99267b81c5431e3f75cf5421/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d7b6595ceed4edb77a558a340f73120610d76fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d7b6595ceed4edb77a558a340f73120610d76fe", "html_url": "https://github.com/rust-lang/rust/commit/5d7b6595ceed4edb77a558a340f73120610d76fe"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "22a67c450a66d7e7b4021e2ae13ea0b3c103fc8c", "filename": "library/proc_macro/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7d20789c0225160e99267b81c5431e3f75cf5421/library%2Fproc_macro%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d20789c0225160e99267b81c5431e3f75cf5421/library%2Fproc_macro%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fproc_macro%2Fsrc%2Flib.rs?ref=7d20789c0225160e99267b81c5431e3f75cf5421", "patch": "@@ -432,8 +432,8 @@ pub struct LineColumn {\n     /// The 1-indexed line in the source file on which the span starts or ends (inclusive).\n     #[unstable(feature = \"proc_macro_span\", issue = \"54725\")]\n     pub line: usize,\n-    /// The 1-indexed column (in UTF-8 characters) in the source file on which\n-    /// the span starts or ends (inclusive).\n+    /// The 1-indexed column (number of bytes in UTF-8 encoding) in the source\n+    /// file on which the span starts or ends (inclusive).\n     #[unstable(feature = \"proc_macro_span\", issue = \"54725\")]\n     pub column: usize,\n }"}, {"sha": "6d70fe611c47e8a3b43ceb52bd75385289de21fb", "filename": "src/test/ui/proc-macro/span-absolute-posititions.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7d20789c0225160e99267b81c5431e3f75cf5421/src%2Ftest%2Fui%2Fproc-macro%2Fspan-absolute-posititions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d20789c0225160e99267b81c5431e3f75cf5421/src%2Ftest%2Fui%2Fproc-macro%2Fspan-absolute-posititions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fspan-absolute-posititions.rs?ref=7d20789c0225160e99267b81c5431e3f75cf5421", "patch": "@@ -9,8 +9,16 @@ assert_span_pos::assert_span_pos!(5, 35);\n // Test tab indentation\n \tassert_span_pos::assert_span_pos!(10, 36);\n \n+// Two tests to ensure the promise of the docs that the column is the number\n+// of UTF-8 bytes instead of some other number like number of code points.\n+\n+// Test that multi byte UTF-8 characters indeed count as multiple bytes\n+/*\ud83c\udf08*/assert_span_pos::assert_span_pos!(16, 40);\n+// Test with a complete grapheme cluster\n+/*\ud83c\udff3\ufe0f\u200d\ud83c\udf08*/assert_span_pos::assert_span_pos!(18, 43);\n+\n // Test that the macro actually emits an error on a mismatch:\n-assert_span_pos::assert_span_pos!(0, 35); //~ ERROR line/column mismatch: (0, 35) != (13, 35)\n-assert_span_pos::assert_span_pos!(14, 0); //~ ERROR line/column mismatch: (14, 0) != (14, 35)\n+assert_span_pos::assert_span_pos!(0, 35); //~ ERROR line/column mismatch: (0, 35) != (21, 35)\n+assert_span_pos::assert_span_pos!(22, 0); //~ ERROR line/column mismatch: (22, 0) != (22, 35)\n \n fn main() {}"}, {"sha": "6aca44a6b57a6199b621709fec317ed328a16fc7", "filename": "src/test/ui/proc-macro/span-absolute-posititions.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7d20789c0225160e99267b81c5431e3f75cf5421/src%2Ftest%2Fui%2Fproc-macro%2Fspan-absolute-posititions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7d20789c0225160e99267b81c5431e3f75cf5421/src%2Ftest%2Fui%2Fproc-macro%2Fspan-absolute-posititions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fspan-absolute-posititions.stderr?ref=7d20789c0225160e99267b81c5431e3f75cf5421", "patch": "@@ -1,13 +1,13 @@\n-error: line/column mismatch: (0, 35) != (13, 35)\n-  --> $DIR/span-absolute-posititions.rs:13:35\n+error: line/column mismatch: (0, 35) != (21, 35)\n+  --> $DIR/span-absolute-posititions.rs:21:35\n    |\n LL | assert_span_pos::assert_span_pos!(0, 35);\n    |                                   ^\n \n-error: line/column mismatch: (14, 0) != (14, 35)\n-  --> $DIR/span-absolute-posititions.rs:14:35\n+error: line/column mismatch: (22, 0) != (22, 35)\n+  --> $DIR/span-absolute-posititions.rs:22:35\n    |\n-LL | assert_span_pos::assert_span_pos!(14, 0);\n+LL | assert_span_pos::assert_span_pos!(22, 0);\n    |                                   ^^\n \n error: aborting due to 2 previous errors"}]}