{"sha": "2ea0410f090ae06d18f5535e62e888e49a4f21a7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlYTA0MTBmMDkwYWUwNmQxOGY1NTM1ZTYyZTg4OGU0OWE0ZjIxYTc=", "commit": {"author": {"name": "Soveu", "email": "marx.tomasz@gmail.com", "date": "2021-04-30T14:13:00Z"}, "committer": {"name": "Soveu", "email": "marx.tomasz@gmail.com", "date": "2021-04-30T14:13:00Z"}, "message": "str::is_char_boundary - slight optimization", "tree": {"sha": "9c72784c05961ee762e78a4613d6842310402218", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c72784c05961ee762e78a4613d6842310402218"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ea0410f090ae06d18f5535e62e888e49a4f21a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ea0410f090ae06d18f5535e62e888e49a4f21a7", "html_url": "https://github.com/rust-lang/rust/commit/2ea0410f090ae06d18f5535e62e888e49a4f21a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ea0410f090ae06d18f5535e62e888e49a4f21a7/comments", "author": {"login": "Soveu", "id": 34382234, "node_id": "MDQ6VXNlcjM0MzgyMjM0", "avatar_url": "https://avatars.githubusercontent.com/u/34382234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Soveu", "html_url": "https://github.com/Soveu", "followers_url": "https://api.github.com/users/Soveu/followers", "following_url": "https://api.github.com/users/Soveu/following{/other_user}", "gists_url": "https://api.github.com/users/Soveu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Soveu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Soveu/subscriptions", "organizations_url": "https://api.github.com/users/Soveu/orgs", "repos_url": "https://api.github.com/users/Soveu/repos", "events_url": "https://api.github.com/users/Soveu/events{/privacy}", "received_events_url": "https://api.github.com/users/Soveu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Soveu", "id": 34382234, "node_id": "MDQ6VXNlcjM0MzgyMjM0", "avatar_url": "https://avatars.githubusercontent.com/u/34382234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Soveu", "html_url": "https://github.com/Soveu", "followers_url": "https://api.github.com/users/Soveu/followers", "following_url": "https://api.github.com/users/Soveu/following{/other_user}", "gists_url": "https://api.github.com/users/Soveu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Soveu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Soveu/subscriptions", "organizations_url": "https://api.github.com/users/Soveu/orgs", "repos_url": "https://api.github.com/users/Soveu/repos", "events_url": "https://api.github.com/users/Soveu/events{/privacy}", "received_events_url": "https://api.github.com/users/Soveu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49920bc581743d6edb9f82fbff4cbafebc212619", "url": "https://api.github.com/repos/rust-lang/rust/commits/49920bc581743d6edb9f82fbff4cbafebc212619", "html_url": "https://github.com/rust-lang/rust/commit/49920bc581743d6edb9f82fbff4cbafebc212619"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "e7970bf5c8f1357e8c00214d9d2b179d08617dac", "filename": "library/core/src/str/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2ea0410f090ae06d18f5535e62e888e49a4f21a7/library%2Fcore%2Fsrc%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ea0410f090ae06d18f5535e62e888e49a4f21a7/library%2Fcore%2Fsrc%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fstr%2Fmod.rs?ref=2ea0410f090ae06d18f5535e62e888e49a4f21a7", "patch": "@@ -195,11 +195,11 @@ impl str {\n         // 0 and len are always ok.\n         // Test for 0 explicitly so that it can optimize out the check\n         // easily and skip reading string data for that case.\n-        if index == 0 || index == self.len() {\n+        if index == 0 {\n             return true;\n         }\n         match self.as_bytes().get(index) {\n-            None => false,\n+            None => index == self.len(),\n             // This is bit magic equivalent to: b < 128 || b >= 192\n             Some(&b) => (b as i8) >= -0x40,\n         }"}]}