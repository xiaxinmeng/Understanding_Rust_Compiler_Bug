{"sha": "8690cfb868f6116f223ab424d48945f7db45cb02", "node_id": "C_kwDOAAsO6NoAKDg2OTBjZmI4NjhmNjExNmYyMjNhYjQyNGQ0ODk0NWY3ZGI0NWNiMDI", "commit": {"author": {"name": "zhoufan", "email": "1247714429@qq.com", "date": "2021-09-21T22:32:23Z"}, "committer": {"name": "zhoufan", "email": "1247714429@qq.com", "date": "2021-09-21T22:32:23Z"}, "message": "Change the style of the code", "tree": {"sha": "50262a0edc6cc648c622dea58bb50f68afe06341", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50262a0edc6cc648c622dea58bb50f68afe06341"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8690cfb868f6116f223ab424d48945f7db45cb02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8690cfb868f6116f223ab424d48945f7db45cb02", "html_url": "https://github.com/rust-lang/rust/commit/8690cfb868f6116f223ab424d48945f7db45cb02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8690cfb868f6116f223ab424d48945f7db45cb02/comments", "author": {"login": "xffxff", "id": 30254428, "node_id": "MDQ6VXNlcjMwMjU0NDI4", "avatar_url": "https://avatars.githubusercontent.com/u/30254428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xffxff", "html_url": "https://github.com/xffxff", "followers_url": "https://api.github.com/users/xffxff/followers", "following_url": "https://api.github.com/users/xffxff/following{/other_user}", "gists_url": "https://api.github.com/users/xffxff/gists{/gist_id}", "starred_url": "https://api.github.com/users/xffxff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xffxff/subscriptions", "organizations_url": "https://api.github.com/users/xffxff/orgs", "repos_url": "https://api.github.com/users/xffxff/repos", "events_url": "https://api.github.com/users/xffxff/events{/privacy}", "received_events_url": "https://api.github.com/users/xffxff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xffxff", "id": 30254428, "node_id": "MDQ6VXNlcjMwMjU0NDI4", "avatar_url": "https://avatars.githubusercontent.com/u/30254428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xffxff", "html_url": "https://github.com/xffxff", "followers_url": "https://api.github.com/users/xffxff/followers", "following_url": "https://api.github.com/users/xffxff/following{/other_user}", "gists_url": "https://api.github.com/users/xffxff/gists{/gist_id}", "starred_url": "https://api.github.com/users/xffxff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xffxff/subscriptions", "organizations_url": "https://api.github.com/users/xffxff/orgs", "repos_url": "https://api.github.com/users/xffxff/repos", "events_url": "https://api.github.com/users/xffxff/events{/privacy}", "received_events_url": "https://api.github.com/users/xffxff/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7912d3a4b385c98c8b6faf29b1093df07718beb9", "url": "https://api.github.com/repos/rust-lang/rust/commits/7912d3a4b385c98c8b6faf29b1093df07718beb9", "html_url": "https://github.com/rust-lang/rust/commit/7912d3a4b385c98c8b6faf29b1093df07718beb9"}], "stats": {"total": 24, "additions": 9, "deletions": 15}, "files": [{"sha": "0255e508b4fc4733451d2ebe6950fdf5b6aec042", "filename": "crates/ide_assists/src/handlers/generate_function.rs", "status": "modified", "additions": 9, "deletions": 15, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/8690cfb868f6116f223ab424d48945f7db45cb02/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8690cfb868f6116f223ab424d48945f7db45cb02/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs?ref=8690cfb868f6116f223ab424d48945f7db45cb02", "patch": "@@ -1,8 +1,9 @@\n-use hir::{HasSource, HirDisplay, Module, ModuleDef, TypeInfo};\n+use hir::{HasSource, HirDisplay, Module, ModuleDef, Semantics, TypeInfo};\n use ide_db::{\n     base_db::FileId,\n     defs::{Definition, NameRefClass},\n     helpers::SnippetCap,\n+    RootDatabase,\n };\n use rustc_hash::{FxHashMap, FxHashSet};\n use stdx::to_lower_snake_case;\n@@ -442,7 +443,7 @@ fn fn_args(\n     let mut arg_names = Vec::new();\n     let mut arg_types = Vec::new();\n     for arg in call.arg_list()?.args() {\n-        arg_names.push(fn_arg_name(ctx, &arg));\n+        arg_names.push(fn_arg_name(&ctx.sema, &arg));\n         arg_types.push(match fn_arg_type(ctx, target_module, &arg) {\n             Some(ty) => {\n                 if !ty.is_empty() && ty.starts_with('&') {\n@@ -507,23 +508,16 @@ fn deduplicate_arg_names(arg_names: &mut Vec<String>) {\n     }\n }\n \n-fn fn_arg_name(ctx: &AssistContext, arg_expr: &ast::Expr) -> String {\n+fn fn_arg_name(sema: &Semantics<RootDatabase>, arg_expr: &ast::Expr) -> String {\n     let name = (|| match arg_expr {\n-        ast::Expr::CastExpr(cast_expr) => Some(fn_arg_name(ctx, &cast_expr.expr()?)),\n+        ast::Expr::CastExpr(cast_expr) => Some(fn_arg_name(sema, &cast_expr.expr()?)),\n         expr => {\n             let name_ref = expr.syntax().descendants().filter_map(ast::NameRef::cast).last()?;\n-            if let Some(NameRefClass::Definition(def)) =\n-                NameRefClass::classify(&ctx.sema, &name_ref)\n+            if let Some(NameRefClass::Definition(Definition::ModuleDef(\n+                ModuleDef::Const(_) | ModuleDef::Static(_),\n+            ))) = NameRefClass::classify(sema, &name_ref)\n             {\n-                match def {\n-                    Definition::ModuleDef(ModuleDef::Const(_)) => {\n-                        return Some(name_ref.to_string().to_lowercase());\n-                    }\n-                    Definition::ModuleDef(ModuleDef::Static(_)) => {\n-                        return Some(name_ref.to_string().to_lowercase());\n-                    }\n-                    _ => {}\n-                }\n+                return Some(name_ref.to_string().to_lowercase());\n             };\n             Some(to_lower_snake_case(&name_ref.to_string()))\n         }"}]}