{"sha": "b423b85ca99c2a085797e228ec405038bbd3308f", "node_id": "C_kwDOAAsO6NoAKGI0MjNiODVjYTk5YzJhMDg1Nzk3ZTIyOGVjNDA1MDM4YmJkMzMwOGY", "commit": {"author": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2021-10-08T14:16:56Z"}, "committer": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2021-10-08T14:16:56Z"}, "message": "Don't trigger semicolon_if_nothing_returned in expanded code\n\nBefore this lint didn't trigger on macros. With rust-lang/rust#88175\nthis isn't enough anymore. In this PR a `WhileLoop` desugaring kind was\nintroduced. This overrides the span of expanded expressions when\nlowering the while loop. So if a while loop is in a macro, the\nexpressions that it expands to are no longer marked with\n`ExpnKind::Macro`, but with `ExpnKind::Desugaring`. In general, this is\nthe correct behavior and the same that is done for `ForLoop`s. It just\ntripped up this lint.", "tree": {"sha": "b7adcb3469429666e4d9dbb72271a889d272cd59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7adcb3469429666e4d9dbb72271a889d272cd59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b423b85ca99c2a085797e228ec405038bbd3308f", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEij1UXJ/PQTcb99vTHKDfKvWdaKUFAmFgVW8ACgkQHKDfKvWd\naKV+3xAAklgl//pPbSwmzn/x/15y1AO/JrJoch0DEYgUxPWkceze7B8xQp634Sxn\nu4Q09EM0ZCtI0mmoe1kckI5CmYDDOA+tCod/fG4WydmKO8vMjxDZ4yJfjj5RPX11\nsRX/re0A6BKzLK7jPVmq69XE+LQ6TlOrvPcPFHkhvJ96BTHCzB7nkvMCiXeqXOkp\nFRbVC+L6Fuh3H8KvKUmPQWW9XTiwrElC3CHPOiGFphGvViExGiYzGb1JPrYU8V2R\nSwXQ0SNEGR7cGf+J2ulpI3f8lLQjcH86NwzEcddZ07GLlZNaiehs+Ed7ucLxeLIM\nbXel37ZcfphY8nThATzyX3xfY+Cygzcpzj92IDrp0fXTC4jmPSyRGNc2VCuQWvsv\nTsL7U9ImD/ZU+QLvGdFMHbNqWGLjiqLzfhYj6NlPW5m1ulaIvEN0Am0ylpFk6co+\nACK37fL7eiB+WIBCpx81sxRvjnNEykQlEEPc3mjgaJ2VhFVgWXrRp3jv/0HISOUK\nio0wQ7YLlw7sFa6XbgEamwUTy7D7chilPSBY77yrXtF7jZQp9yejB4dy45IZRaRQ\nT8vVHTN1vmbeem21H9VG/1bnzCsTWC93N6pjSoTV5veXrPLknpSrgDfrupBYiai6\nkF6vtFis8+M19I7uORFQYOV5PNW/9ztMwZdR9qSZI8tUa3ubzAs=\n=UojR\n-----END PGP SIGNATURE-----", "payload": "tree b7adcb3469429666e4d9dbb72271a889d272cd59\nparent 78e73129baf65f4095002422303157d5e64e9479\nauthor flip1995 <philipp.krones@embecosm.com> 1633702616 +0200\ncommitter flip1995 <philipp.krones@embecosm.com> 1633702616 +0200\n\nDon't trigger semicolon_if_nothing_returned in expanded code\n\nBefore this lint didn't trigger on macros. With rust-lang/rust#88175\nthis isn't enough anymore. In this PR a `WhileLoop` desugaring kind was\nintroduced. This overrides the span of expanded expressions when\nlowering the while loop. So if a while loop is in a macro, the\nexpressions that it expands to are no longer marked with\n`ExpnKind::Macro`, but with `ExpnKind::Desugaring`. In general, this is\nthe correct behavior and the same that is done for `ForLoop`s. It just\ntripped up this lint.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b423b85ca99c2a085797e228ec405038bbd3308f", "html_url": "https://github.com/rust-lang/rust/commit/b423b85ca99c2a085797e228ec405038bbd3308f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b423b85ca99c2a085797e228ec405038bbd3308f/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78e73129baf65f4095002422303157d5e64e9479", "url": "https://api.github.com/repos/rust-lang/rust/commits/78e73129baf65f4095002422303157d5e64e9479", "html_url": "https://github.com/rust-lang/rust/commit/78e73129baf65f4095002422303157d5e64e9479"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "c0e4914efe0bd1778a8ba68d4505c65048bdb310", "filename": "clippy_lints/src/semicolon_if_nothing_returned.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b423b85ca99c2a085797e228ec405038bbd3308f/clippy_lints%2Fsrc%2Fsemicolon_if_nothing_returned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b423b85ca99c2a085797e228ec405038bbd3308f/clippy_lints%2Fsrc%2Fsemicolon_if_nothing_returned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsemicolon_if_nothing_returned.rs?ref=b423b85ca99c2a085797e228ec405038bbd3308f", "patch": "@@ -1,7 +1,7 @@\n use crate::rustc_lint::LintContext;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet_with_macro_callsite;\n-use clippy_utils::{in_macro, sugg};\n+use clippy_utils::sugg;\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::{Block, ExprKind};\n@@ -39,7 +39,7 @@ declare_lint_pass!(SemicolonIfNothingReturned => [SEMICOLON_IF_NOTHING_RETURNED]\n impl LateLintPass<'_> for SemicolonIfNothingReturned {\n     fn check_block(&mut self, cx: &LateContext<'tcx>, block: &'tcx Block<'tcx>) {\n         if_chain! {\n-            if !in_macro(block.span);\n+            if !block.span.from_expansion();\n             if let Some(expr) = block.expr;\n             let t_expr = cx.typeck_results().expr_ty(expr);\n             if t_expr.is_unit();"}, {"sha": "7a45f1b18d4af2c8d920676b4f96b755083867d1", "filename": "tests/ui/semicolon_if_nothing_returned.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b423b85ca99c2a085797e228ec405038bbd3308f/tests%2Fui%2Fsemicolon_if_nothing_returned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b423b85ca99c2a085797e228ec405038bbd3308f/tests%2Fui%2Fsemicolon_if_nothing_returned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsemicolon_if_nothing_returned.rs?ref=b423b85ca99c2a085797e228ec405038bbd3308f", "patch": "@@ -98,3 +98,15 @@ fn unsafe_checks() {\n     let mut s = MaybeUninit::<String>::uninit();\n     let _d = || unsafe { ptr::drop_in_place(s.as_mut_ptr()) };\n }\n+\n+// Issue #7768\n+#[rustfmt::skip]\n+fn macro_with_semicolon() {\n+    macro_rules! repro {\n+        () => {\n+            while false {\n+            }\n+        };\n+    }\n+    repro!();\n+}"}]}