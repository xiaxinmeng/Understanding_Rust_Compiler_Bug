{"sha": "3a92b9987abd01c4b7e59c870e85beb9dd4d4aa2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhOTJiOTk4N2FiZDAxYzRiN2U1OWM4NzBlODViZWI5ZGQ0ZDRhYTI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-07-31T08:26:33Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-07-31T08:26:33Z"}, "message": "Auto merge of #74956 - ecstatic-morse:const-option-unwrap, r=oli-obk\n\nMake `Option::unwrap` unstably const\n\nThis is lumped into the `const_option` feature gate (#67441), which enables a potpourri of `Option` methods.\n\ncc @rust-lang/wg-const-eval\n\nr? @oli-obk", "tree": {"sha": "7899dba3d40d3347bf27278f4ed655c0ab63078b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7899dba3d40d3347bf27278f4ed655c0ab63078b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a92b9987abd01c4b7e59c870e85beb9dd4d4aa2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a92b9987abd01c4b7e59c870e85beb9dd4d4aa2", "html_url": "https://github.com/rust-lang/rust/commit/3a92b9987abd01c4b7e59c870e85beb9dd4d4aa2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a92b9987abd01c4b7e59c870e85beb9dd4d4aa2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac91673d895a0c578ed773e1280bdde8adb87b8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac91673d895a0c578ed773e1280bdde8adb87b8c", "html_url": "https://github.com/rust-lang/rust/commit/ac91673d895a0c578ed773e1280bdde8adb87b8c"}, {"sha": "96c84ac3cbc4f2c81580893dacf263d00306649c", "url": "https://api.github.com/repos/rust-lang/rust/commits/96c84ac3cbc4f2c81580893dacf263d00306649c", "html_url": "https://github.com/rust-lang/rust/commit/96c84ac3cbc4f2c81580893dacf263d00306649c"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "fcf5454308b475a73a412bc720bddc4e905d3892", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a92b9987abd01c4b7e59c870e85beb9dd4d4aa2/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a92b9987abd01c4b7e59c870e85beb9dd4d4aa2/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=3a92b9987abd01c4b7e59c870e85beb9dd4d4aa2", "patch": "@@ -81,6 +81,7 @@\n #![feature(const_fn_union)]\n #![feature(const_generics)]\n #![feature(const_option)]\n+#![feature(const_precise_live_drops)]\n #![feature(const_ptr_offset)]\n #![feature(const_ptr_offset_from)]\n #![feature(const_raw_ptr_comparison)]"}, {"sha": "3c7211fe040dcd384226f59d85ebedd29d9ed00c", "filename": "library/core/src/option.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3a92b9987abd01c4b7e59c870e85beb9dd4d4aa2/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a92b9987abd01c4b7e59c870e85beb9dd4d4aa2/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=3a92b9987abd01c4b7e59c870e85beb9dd4d4aa2", "patch": "@@ -380,7 +380,8 @@ impl<T> Option<T> {\n     #[inline]\n     #[track_caller]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn unwrap(self) -> T {\n+    #[rustc_const_unstable(feature = \"const_option\", issue = \"67441\")]\n+    pub const fn unwrap(self) -> T {\n         match self {\n             Some(val) => val,\n             None => panic!(\"called `Option::unwrap()` on a `None` value\"),"}, {"sha": "6ed60ed87bf7690048f68452d5e8709ce3070a5e", "filename": "src/test/ui/consts/const-unwrap.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3a92b9987abd01c4b7e59c870e85beb9dd4d4aa2/src%2Ftest%2Fui%2Fconsts%2Fconst-unwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a92b9987abd01c4b7e59c870e85beb9dd4d4aa2/src%2Ftest%2Fui%2Fconsts%2Fconst-unwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-unwrap.rs?ref=3a92b9987abd01c4b7e59c870e85beb9dd4d4aa2", "patch": "@@ -0,0 +1,14 @@\n+// check-fail\n+\n+#![feature(const_option)]\n+\n+const FOO: i32 = Some(42i32).unwrap();\n+\n+// This causes an error, but it is attributed to the `panic` *inside* `Option::unwrap` (maybe due\n+// to `track_caller`?). A note points to the originating `const`.\n+const BAR: i32 = Option::<i32>::None.unwrap(); //~ NOTE\n+\n+fn main() {\n+    println!(\"{}\", FOO);\n+    println!(\"{}\", BAR);\n+}"}, {"sha": "7f2c1f4151097abcbb923d8f225e92bbacf5d172", "filename": "src/test/ui/consts/const-unwrap.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/3a92b9987abd01c4b7e59c870e85beb9dd4d4aa2/src%2Ftest%2Fui%2Fconsts%2Fconst-unwrap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3a92b9987abd01c4b7e59c870e85beb9dd4d4aa2/src%2Ftest%2Fui%2Fconsts%2Fconst-unwrap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-unwrap.stderr?ref=3a92b9987abd01c4b7e59c870e85beb9dd4d4aa2", "patch": "@@ -0,0 +1,20 @@\n+error: any use of this value will cause an error\n+  --> $SRC_DIR/core/src/option.rs:LL:COL\n+   |\n+LL |             None => panic!(\"called `Option::unwrap()` on a `None` value\"),\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                     |\n+   |                     the evaluated program panicked at 'called `Option::unwrap()` on a `None` value', $DIR/const-unwrap.rs:9:38\n+   |                     inside `std::option::Option::<i32>::unwrap` at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+   |                     inside `BAR` at $DIR/const-unwrap.rs:9:18\n+   | \n+  ::: $DIR/const-unwrap.rs:9:1\n+   |\n+LL | const BAR: i32 = Option::<i32>::None.unwrap();\n+   | ----------------------------------------------\n+   |\n+   = note: `#[deny(const_err)]` on by default\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to previous error\n+"}]}