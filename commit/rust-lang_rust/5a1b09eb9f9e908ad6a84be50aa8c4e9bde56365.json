{"sha": "5a1b09eb9f9e908ad6a84be50aa8c4e9bde56365", "node_id": "C_kwDOAAsO6NoAKDVhMWIwOWViOWY5ZTkwOGFkNmE4NGJlNTBhYThjNGU5YmRlNTYzNjU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-04T23:44:29Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-04T23:44:29Z"}, "message": "Auto merge of #2190 - RalfJung:rustup, r=RalfJung\n\nrustup\n\nCc https://github.com/rust-lang/rust/issues/97745", "tree": {"sha": "8bf3cca7c80dc191678708aa2e93933c768fea71", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8bf3cca7c80dc191678708aa2e93933c768fea71"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a1b09eb9f9e908ad6a84be50aa8c4e9bde56365", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a1b09eb9f9e908ad6a84be50aa8c4e9bde56365", "html_url": "https://github.com/rust-lang/rust/commit/5a1b09eb9f9e908ad6a84be50aa8c4e9bde56365", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a1b09eb9f9e908ad6a84be50aa8c4e9bde56365/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92c2e3c0bcf8becc753e923780ec3b3fb0ca54f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/92c2e3c0bcf8becc753e923780ec3b3fb0ca54f2", "html_url": "https://github.com/rust-lang/rust/commit/92c2e3c0bcf8becc753e923780ec3b3fb0ca54f2"}, {"sha": "32c03080f184704d4ccb19cd359a1d5784d78770", "url": "https://api.github.com/repos/rust-lang/rust/commits/32c03080f184704d4ccb19cd359a1d5784d78770", "html_url": "https://github.com/rust-lang/rust/commit/32c03080f184704d4ccb19cd359a1d5784d78770"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "e7a7ad9dd818c10cfe6dc24fc8f97cd2c5ae0342", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5a1b09eb9f9e908ad6a84be50aa8c4e9bde56365/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/5a1b09eb9f9e908ad6a84be50aa8c4e9bde56365/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=5a1b09eb9f9e908ad6a84be50aa8c4e9bde56365", "patch": "@@ -1 +1 @@\n-c35035cefc709abddabfb28ecc6a326458d46ce2\n+4e725bad73747a4c93a3ac53106e4b4006edc665"}, {"sha": "60ef11b7960885f3744ffbc1f54bc138ce12dcbc", "filename": "src/shims/windows/dlsym.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5a1b09eb9f9e908ad6a84be50aa8c4e9bde56365/src%2Fshims%2Fwindows%2Fdlsym.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a1b09eb9f9e908ad6a84be50aa8c4e9bde56365/src%2Fshims%2Fwindows%2Fdlsym.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fwindows%2Fdlsym.rs?ref=5a1b09eb9f9e908ad6a84be50aa8c4e9bde56365", "patch": "@@ -18,6 +18,7 @@ impl Dlsym {\n     pub fn from_str<'tcx>(name: &str) -> InterpResult<'tcx, Option<Dlsym>> {\n         Ok(match name {\n             \"GetSystemTimePreciseAsFileTime\" => None,\n+            \"SetThreadDescription\" => None,\n             \"NtWriteFile\" => Some(Dlsym::NtWriteFile),\n             _ => throw_unsup_format!(\"unsupported Windows dlsym: {}\", name),\n         })"}, {"sha": "05f9aed1747651bf9b50b26532a90320db2a4fa6", "filename": "src/shims/windows/foreign_items.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a1b09eb9f9e908ad6a84be50aa8c4e9bde56365/src%2Fshims%2Fwindows%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a1b09eb9f9e908ad6a84be50aa8c4e9bde56365/src%2Fshims%2Fwindows%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fwindows%2Fforeign_items.rs?ref=5a1b09eb9f9e908ad6a84be50aa8c4e9bde56365", "patch": "@@ -415,6 +415,10 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 // There is only one thread, so this always succeeds and returns TRUE.\n                 this.write_scalar(Scalar::from_i32(1), dest)?;\n             }\n+            \"GetCurrentThread\" if this.frame_in_std() => {\n+                let [] = this.check_shim(abi, Abi::System { unwind: false }, link_name, args)?;\n+                this.write_scalar(Scalar::from_machine_isize(1, this), dest)?;\n+            }\n \n             _ => return Ok(EmulateByNameResult::NotSupported),\n         }"}]}