{"sha": "571e22d7e82d471a38ebba1e6fdeed635b2a9953", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3MWUyMmQ3ZTgyZDQ3MWEzOGViYmExZTZmZGVlZDYzNWIyYTk5NTM=", "commit": {"author": {"name": "Jake Goulding", "email": "jake.goulding@gmail.com", "date": "2019-08-05T15:57:55Z"}, "committer": {"name": "Jake Goulding", "email": "jake.goulding@gmail.com", "date": "2019-08-05T23:44:07Z"}, "message": "Clarify align_to's requirements and obligations", "tree": {"sha": "292686368f66316ca43c4ad6076637445d6785f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/292686368f66316ca43c4ad6076637445d6785f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/571e22d7e82d471a38ebba1e6fdeed635b2a9953", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/571e22d7e82d471a38ebba1e6fdeed635b2a9953", "html_url": "https://github.com/rust-lang/rust/commit/571e22d7e82d471a38ebba1e6fdeed635b2a9953", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/571e22d7e82d471a38ebba1e6fdeed635b2a9953/comments", "author": {"login": "shepmaster", "id": 174509, "node_id": "MDQ6VXNlcjE3NDUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/174509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shepmaster", "html_url": "https://github.com/shepmaster", "followers_url": "https://api.github.com/users/shepmaster/followers", "following_url": "https://api.github.com/users/shepmaster/following{/other_user}", "gists_url": "https://api.github.com/users/shepmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/shepmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shepmaster/subscriptions", "organizations_url": "https://api.github.com/users/shepmaster/orgs", "repos_url": "https://api.github.com/users/shepmaster/repos", "events_url": "https://api.github.com/users/shepmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/shepmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "shepmaster", "id": 174509, "node_id": "MDQ6VXNlcjE3NDUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/174509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shepmaster", "html_url": "https://github.com/shepmaster", "followers_url": "https://api.github.com/users/shepmaster/followers", "following_url": "https://api.github.com/users/shepmaster/following{/other_user}", "gists_url": "https://api.github.com/users/shepmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/shepmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shepmaster/subscriptions", "organizations_url": "https://api.github.com/users/shepmaster/orgs", "repos_url": "https://api.github.com/users/shepmaster/repos", "events_url": "https://api.github.com/users/shepmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/shepmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4be067558962c004b638e4c6f162d50f7c0c98b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/4be067558962c004b638e4c6f162d50f7c0c98b6", "html_url": "https://github.com/rust-lang/rust/commit/4be067558962c004b638e4c6f162d50f7c0c98b6"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "d5a34ea2bd5a17edda41537a4194c82aa96cbadd", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/571e22d7e82d471a38ebba1e6fdeed635b2a9953/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/571e22d7e82d471a38ebba1e6fdeed635b2a9953/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=571e22d7e82d471a38ebba1e6fdeed635b2a9953", "patch": "@@ -2308,9 +2308,10 @@ impl<T> [T] {\n     /// maintained.\n     ///\n     /// This method splits the slice into three distinct slices: prefix, correctly aligned middle\n-    /// slice of a new type, and the suffix slice. The method does a best effort to make the\n-    /// middle slice the greatest length possible for a given type and input slice, but only\n-    /// your algorithm's performance should depend on that, not its correctness.\n+    /// slice of a new type, and the suffix slice. The method may make the middle slice the greatest\n+    /// length possible for a given type and input slice, but only your algorithm's performance\n+    /// should depend on that, not its correctness. It is permissible for all of the input data to\n+    /// be returned as the prefix or suffix slice.\n     ///\n     /// This method has no purpose when either input element `T` or output element `U` are\n     /// zero-sized and will return the original slice without splitting anything.\n@@ -2361,9 +2362,10 @@ impl<T> [T] {\n     /// maintained.\n     ///\n     /// This method splits the slice into three distinct slices: prefix, correctly aligned middle\n-    /// slice of a new type, and the suffix slice. The method does a best effort to make the\n-    /// middle slice the greatest length possible for a given type and input slice, but only\n-    /// your algorithm's performance should depend on that, not its correctness.\n+    /// slice of a new type, and the suffix slice. The method may make the middle slice the greatest\n+    /// length possible for a given type and input slice, but only your algorithm's performance\n+    /// should depend on that, not its correctness. It is permissible for all of the input data to\n+    /// be returned as the prefix or suffix slice.\n     ///\n     /// This method has no purpose when either input element `T` or output element `U` are\n     /// zero-sized and will return the original slice without splitting anything."}]}