{"sha": "ea03c0d9e3afcef4d4494cda14f238037232b8c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhMDNjMGQ5ZTNhZmNlZjRkNDQ5NGNkYTE0ZjIzODAzNzIzMmI4YzQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-12-22T04:48:12Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-12-22T04:48:12Z"}, "message": "Merge pull request #514 from mcarton/remove-dup\n\nRemove dup", "tree": {"sha": "83fc5b1398032922ca7edf11986f12108298ec7a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83fc5b1398032922ca7edf11986f12108298ec7a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea03c0d9e3afcef4d4494cda14f238037232b8c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea03c0d9e3afcef4d4494cda14f238037232b8c4", "html_url": "https://github.com/rust-lang/rust/commit/ea03c0d9e3afcef4d4494cda14f238037232b8c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea03c0d9e3afcef4d4494cda14f238037232b8c4/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c090c3f48cdb10fd1173ddffa389b44f4fd7ed4", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c090c3f48cdb10fd1173ddffa389b44f4fd7ed4", "html_url": "https://github.com/rust-lang/rust/commit/5c090c3f48cdb10fd1173ddffa389b44f4fd7ed4"}, {"sha": "934ead14b566a80785ea1e647b2a3c5f747cf92e", "url": "https://api.github.com/repos/rust-lang/rust/commits/934ead14b566a80785ea1e647b2a3c5f747cf92e", "html_url": "https://github.com/rust-lang/rust/commit/934ead14b566a80785ea1e647b2a3c5f747cf92e"}], "stats": {"total": 48, "additions": 1, "deletions": 47}, "files": [{"sha": "ac094d1c828bf02932e3d04ba53a9745d5752a7a", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea03c0d9e3afcef4d4494cda14f238037232b8c4/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/ea03c0d9e3afcef4d4494cda14f238037232b8c4/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=ea03c0d9e3afcef4d4494cda14f238037232b8c4", "patch": "@@ -28,7 +28,7 @@ how this syntax structure is encoded in the AST, it is recommended to run `rustc\n example of the structure and compare with the\n [nodes in the AST docs](http://manishearth.github.io/rust-internals-docs/syntax/ast/). Usually\n the lint will end up to be a nested series of matches and ifs,\n-[like so](https://github.com/Manishearth/rust-clippy/blob/de5ccdfab68a5e37689f3c950ed1532ba9d652a0/src/misc.rs#L34)\n+[like so](https://github.com/Manishearth/rust-clippy/blob/de5ccdfab68a5e37689f3c950ed1532ba9d652a0/src/misc.rs#L34).\n \n T-middle issues can be more involved and require verifying types. The\n [`middle::ty`](http://manishearth.github.io/rust-internals-docs/rustc/middle/ty) module contains a"}, {"sha": "92b1cb1cd3a937cfbd274597f4695ae8a59c6e88", "filename": "src/utils.rs", "status": "modified", "additions": 0, "deletions": 46, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/ea03c0d9e3afcef4d4494cda14f238037232b8c4/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea03c0d9e3afcef4d4494cda14f238037232b8c4/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=ea03c0d9e3afcef4d4494cda14f238037232b8c4", "patch": "@@ -370,52 +370,6 @@ pub fn is_adjusted(cx: &LateContext, e: &Expr) -> bool {\n     cx.tcx.tables.borrow().adjustments.get(&e.id).is_some()\n }\n \n-/// Produce a nested chain of if-lets and ifs from the patterns:\n-///\n-///     if_let_chain! {\n-///         [\n-///             Some(y) = x,\n-///             y.len() == 2,\n-///             Some(z) = y,\n-///         ],\n-///         {\n-///             block\n-///         }\n-///     }\n-///\n-/// becomes\n-///\n-///     if let Some(y) = x {\n-///         if y.len() == 2 {\n-///             if let Some(z) = y {\n-///                 block\n-///             }\n-///         }\n-///     }\n-#[macro_export]\n-macro_rules! if_let_chain {\n-    ([let $pat:pat = $expr:expr, $($tt:tt)+], $block:block) => {\n-        if let $pat = $expr {\n-           if_let_chain!{ [$($tt)+], $block }\n-        }\n-    };\n-    ([let $pat:pat = $expr:expr], $block:block) => {\n-        if let $pat = $expr {\n-           $block\n-        }\n-    };\n-    ([$expr:expr, $($tt:tt)+], $block:block) => {\n-        if $expr {\n-           if_let_chain!{ [$($tt)+], $block }\n-        }\n-    };\n-    ([$expr:expr], $block:block) => {\n-        if $expr {\n-           $block\n-        }\n-    };\n-}\n-\n pub struct LimitStack {\n     stack: Vec<u64>,\n }"}]}