{"sha": "e3b6b5d27ec5976ba0d2390829a29185bcd71eba", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzYjZiNWQyN2VjNTk3NmJhMGQyMzkwODI5YTI5MTg1YmNkNzFlYmE=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-23T19:09:48Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-23T19:09:48Z"}, "message": "Merge #619\n\n619: More correct raw ident handling r=matklad a=jrobsonchase\n\nAlso added the suggested test from #616.\r\n\r\nIt passed before the change to `scan_ident`, but at least now it should ensure that the behavior stays the same.\n\nCo-authored-by: Josh Robson Chase <josh@robsonchase.com>", "tree": {"sha": "6167216e6ac713186437e2bc7e32a674069bfda8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6167216e6ac713186437e2bc7e32a674069bfda8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3b6b5d27ec5976ba0d2390829a29185bcd71eba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3b6b5d27ec5976ba0d2390829a29185bcd71eba", "html_url": "https://github.com/rust-lang/rust/commit/e3b6b5d27ec5976ba0d2390829a29185bcd71eba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3b6b5d27ec5976ba0d2390829a29185bcd71eba/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "302508d5bbcc261f8fe403714a7a7e1f5382879b", "url": "https://api.github.com/repos/rust-lang/rust/commits/302508d5bbcc261f8fe403714a7a7e1f5382879b", "html_url": "https://github.com/rust-lang/rust/commit/302508d5bbcc261f8fe403714a7a7e1f5382879b"}, {"sha": "2ffea72f7481eafb564a0910c4b3a8ccae4a5c27", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ffea72f7481eafb564a0910c4b3a8ccae4a5c27", "html_url": "https://github.com/rust-lang/rust/commit/2ffea72f7481eafb564a0910c4b3a8ccae4a5c27"}], "stats": {"total": 63, "additions": 58, "deletions": 5}, "files": [{"sha": "f9362120e1491e6755e2468e938b0e14a2e8d6dc", "filename": "crates/ra_syntax/src/lexer.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e3b6b5d27ec5976ba0d2390829a29185bcd71eba/crates%2Fra_syntax%2Fsrc%2Flexer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3b6b5d27ec5976ba0d2390829a29185bcd71eba/crates%2Fra_syntax%2Fsrc%2Flexer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Flexer.rs?ref=e3b6b5d27ec5976ba0d2390829a29185bcd71eba", "patch": "@@ -190,16 +190,19 @@ fn next_token_inner(c: char, ptr: &mut Ptr) -> SyntaxKind {\n }\n \n fn scan_ident(c: char, ptr: &mut Ptr) -> SyntaxKind {\n-    match (c, ptr.current()) {\n+    let is_raw = match (c, ptr.current()) {\n         ('r', Some('#')) => {\n             ptr.bump();\n+            true\n         }\n         ('_', Some(c)) if !is_ident_continue(c) => return UNDERSCORE,\n-        _ => {}\n-    }\n+        _ => false,\n+    };\n     ptr.bump_while(is_ident_continue);\n-    if let Some(kind) = SyntaxKind::from_keyword(ptr.current_token_text()) {\n-        return kind;\n+    if !is_raw {\n+        if let Some(kind) = SyntaxKind::from_keyword(ptr.current_token_text()) {\n+            return kind;\n+        }\n     }\n     IDENT\n }"}, {"sha": "d59a6d3476bb98e80291484c89e40d507387180e", "filename": "crates/ra_syntax/tests/data/parser/ok/0041_raw_keywords.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e3b6b5d27ec5976ba0d2390829a29185bcd71eba/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0041_raw_keywords.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3b6b5d27ec5976ba0d2390829a29185bcd71eba/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0041_raw_keywords.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0041_raw_keywords.rs?ref=e3b6b5d27ec5976ba0d2390829a29185bcd71eba", "patch": "@@ -0,0 +1 @@\n+fn foo() { let r#struct = 92; let r#trait = r#struct * 2; }\n\\ No newline at end of file"}, {"sha": "f03ed17f5d9b023b7f48fe533372876bd52f134b", "filename": "crates/ra_syntax/tests/data/parser/ok/0041_raw_keywords.txt", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/e3b6b5d27ec5976ba0d2390829a29185bcd71eba/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0041_raw_keywords.txt", "raw_url": "https://github.com/rust-lang/rust/raw/e3b6b5d27ec5976ba0d2390829a29185bcd71eba/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0041_raw_keywords.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0041_raw_keywords.txt?ref=e3b6b5d27ec5976ba0d2390829a29185bcd71eba", "patch": "@@ -0,0 +1,49 @@\n+SOURCE_FILE@[0; 59)\n+  FN_DEF@[0; 59)\n+    FN_KW@[0; 2)\n+    WHITESPACE@[2; 3)\n+    NAME@[3; 6)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 8)\n+      L_PAREN@[6; 7)\n+      R_PAREN@[7; 8)\n+    WHITESPACE@[8; 9)\n+    BLOCK@[9; 59)\n+      L_CURLY@[9; 10)\n+      WHITESPACE@[10; 11)\n+      LET_STMT@[11; 29)\n+        LET_KW@[11; 14)\n+        WHITESPACE@[14; 15)\n+        BIND_PAT@[15; 23)\n+          NAME@[15; 23)\n+            IDENT@[15; 23) \"r#struct\"\n+        WHITESPACE@[23; 24)\n+        EQ@[24; 25)\n+        WHITESPACE@[25; 26)\n+        LITERAL@[26; 28)\n+          INT_NUMBER@[26; 28) \"92\"\n+        SEMI@[28; 29)\n+      WHITESPACE@[29; 30)\n+      LET_STMT@[30; 57)\n+        LET_KW@[30; 33)\n+        WHITESPACE@[33; 34)\n+        BIND_PAT@[34; 41)\n+          NAME@[34; 41)\n+            IDENT@[34; 41) \"r#trait\"\n+        WHITESPACE@[41; 42)\n+        EQ@[42; 43)\n+        WHITESPACE@[43; 44)\n+        BIN_EXPR@[44; 56)\n+          PATH_EXPR@[44; 52)\n+            PATH@[44; 52)\n+              PATH_SEGMENT@[44; 52)\n+                NAME_REF@[44; 52)\n+                  IDENT@[44; 52) \"r#struct\"\n+          WHITESPACE@[52; 53)\n+          STAR@[53; 54)\n+          WHITESPACE@[54; 55)\n+          LITERAL@[55; 56)\n+            INT_NUMBER@[55; 56) \"2\"\n+        SEMI@[56; 57)\n+      WHITESPACE@[57; 58)\n+      R_CURLY@[58; 59)"}]}