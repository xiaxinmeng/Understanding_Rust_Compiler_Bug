{"sha": "a5a6c95da813ce81d9d4c83d2632379284e0fc06", "node_id": "C_kwDOAAsO6NoAKGE1YTZjOTVkYTgxM2NlODFkOWQ0YzgzZDI2MzIzNzkyODRlMGZjMDY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-01T12:16:45Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-01T12:16:45Z"}, "message": "Auto merge of #9273 - tabokie:assert_ok_fp, r=flip1995\n\nMove [`assertions_on_result_states`] to restriction\n\nClose #9263\n\nThis lint causes regression on readability of code and log output. And printing runtime values is not particularly useful for majority of tests which should be reproducible.\n\nchangelog: Move [`assertions_on_result_states`] to restriction and don't lint it for unit type\n\nSigned-off-by: tabokie <xy.tao@outlook.com>", "tree": {"sha": "9cdd734585d178da0091f9238a637c7fb7ad0be9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cdd734585d178da0091f9238a637c7fb7ad0be9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5a6c95da813ce81d9d4c83d2632379284e0fc06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5a6c95da813ce81d9d4c83d2632379284e0fc06", "html_url": "https://github.com/rust-lang/rust/commit/a5a6c95da813ce81d9d4c83d2632379284e0fc06", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5a6c95da813ce81d9d4c83d2632379284e0fc06/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c427f0fdadf07c117d23d0b3352a4870c9b17d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c427f0fdadf07c117d23d0b3352a4870c9b17d3", "html_url": "https://github.com/rust-lang/rust/commit/7c427f0fdadf07c117d23d0b3352a4870c9b17d3"}, {"sha": "48ad9d8bc7d50fd5ebe90c1bbe760fcb8dc0dc14", "url": "https://api.github.com/repos/rust-lang/rust/commits/48ad9d8bc7d50fd5ebe90c1bbe760fcb8dc0dc14", "html_url": "https://github.com/rust-lang/rust/commit/48ad9d8bc7d50fd5ebe90c1bbe760fcb8dc0dc14"}], "stats": {"total": 45, "additions": 34, "deletions": 11}, "files": [{"sha": "6a6554f968b334e5ca3ce1802ff475440df66090", "filename": "clippy_lints/src/assertions_on_result_states.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a5a6c95da813ce81d9d4c83d2632379284e0fc06/clippy_lints%2Fsrc%2Fassertions_on_result_states.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5a6c95da813ce81d9d4c83d2632379284e0fc06/clippy_lints%2Fsrc%2Fassertions_on_result_states.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassertions_on_result_states.rs?ref=a5a6c95da813ce81d9d4c83d2632379284e0fc06", "patch": "@@ -19,6 +19,9 @@ declare_clippy_lint! {\n     /// ### Why is this bad?\n     /// An assertion failure cannot output an useful message of the error.\n     ///\n+    /// ### Known problems\n+    /// The suggested replacement decreases the readability of code and log output.\n+    ///\n     /// ### Example\n     /// ```rust,ignore\n     /// # let r = Ok::<_, ()>(());\n@@ -28,7 +31,7 @@ declare_clippy_lint! {\n     /// ```\n     #[clippy::version = \"1.64.0\"]\n     pub ASSERTIONS_ON_RESULT_STATES,\n-    style,\n+    restriction,\n     \"`assert!(r.is_ok())`/`assert!(r.is_err())` gives worse error message than directly calling `r.unwrap()`/`r.unwrap_err()`\"\n }\n \n@@ -50,13 +53,14 @@ impl<'tcx> LateLintPass<'tcx> for AssertionsOnResultStates {\n                 if result_type_with_refs != result_type {\n                     return;\n                 } else if let Res::Local(binding_id) = path_res(cx, recv)\n-                    && local_used_after_expr(cx, binding_id, recv) {\n+                    && local_used_after_expr(cx, binding_id, recv)\n+                {\n                     return;\n                 }\n             }\n             let mut app = Applicability::MachineApplicable;\n             match method_segment.ident.as_str() {\n-                \"is_ok\" if has_debug_impl(cx, substs.type_at(1)) => {\n+                \"is_ok\" if type_suitable_to_unwrap(cx, substs.type_at(1)) => {\n                     span_lint_and_sugg(\n                         cx,\n                         ASSERTIONS_ON_RESULT_STATES,\n@@ -70,7 +74,7 @@ impl<'tcx> LateLintPass<'tcx> for AssertionsOnResultStates {\n                         app,\n                     );\n                 }\n-                \"is_err\" if has_debug_impl(cx, substs.type_at(0)) => {\n+                \"is_err\" if type_suitable_to_unwrap(cx, substs.type_at(0)) => {\n                     span_lint_and_sugg(\n                         cx,\n                         ASSERTIONS_ON_RESULT_STATES,\n@@ -96,3 +100,7 @@ fn has_debug_impl<'tcx>(cx: &LateContext<'tcx>, ty: Ty<'tcx>) -> bool {\n         .get_diagnostic_item(sym::Debug)\n         .map_or(false, |debug| implements_trait(cx, ty, debug, &[]))\n }\n+\n+fn type_suitable_to_unwrap<'tcx>(cx: &LateContext<'tcx>, ty: Ty<'tcx>) -> bool {\n+    has_debug_impl(cx, ty) && !ty.is_unit() && !ty.is_never()\n+}"}, {"sha": "b9cc9fc1e85b0aebffc9e349e1212c58ef32775c", "filename": "clippy_lints/src/lib.register_all.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a5a6c95da813ce81d9d4c83d2632379284e0fc06/clippy_lints%2Fsrc%2Flib.register_all.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5a6c95da813ce81d9d4c83d2632379284e0fc06/clippy_lints%2Fsrc%2Flib.register_all.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_all.rs?ref=a5a6c95da813ce81d9d4c83d2632379284e0fc06", "patch": "@@ -6,7 +6,6 @@ store.register_group(true, \"clippy::all\", Some(\"clippy_all\"), vec![\n     LintId::of(almost_complete_letter_range::ALMOST_COMPLETE_LETTER_RANGE),\n     LintId::of(approx_const::APPROX_CONSTANT),\n     LintId::of(assertions_on_constants::ASSERTIONS_ON_CONSTANTS),\n-    LintId::of(assertions_on_result_states::ASSERTIONS_ON_RESULT_STATES),\n     LintId::of(async_yields_async::ASYNC_YIELDS_ASYNC),\n     LintId::of(attrs::BLANKET_CLIPPY_RESTRICTION_LINTS),\n     LintId::of(attrs::DEPRECATED_CFG_ATTR),"}, {"sha": "a7339ef272174d4ee4955b60edd66778cd032461", "filename": "clippy_lints/src/lib.register_restriction.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a5a6c95da813ce81d9d4c83d2632379284e0fc06/clippy_lints%2Fsrc%2Flib.register_restriction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5a6c95da813ce81d9d4c83d2632379284e0fc06/clippy_lints%2Fsrc%2Flib.register_restriction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_restriction.rs?ref=a5a6c95da813ce81d9d4c83d2632379284e0fc06", "patch": "@@ -7,6 +7,7 @@ store.register_group(true, \"clippy::restriction\", Some(\"clippy_restriction\"), ve\n     LintId::of(as_underscore::AS_UNDERSCORE),\n     LintId::of(asm_syntax::INLINE_ASM_X86_ATT_SYNTAX),\n     LintId::of(asm_syntax::INLINE_ASM_X86_INTEL_SYNTAX),\n+    LintId::of(assertions_on_result_states::ASSERTIONS_ON_RESULT_STATES),\n     LintId::of(attrs::ALLOW_ATTRIBUTES_WITHOUT_REASON),\n     LintId::of(casts::FN_TO_NUMERIC_CAST_ANY),\n     LintId::of(create_dir::CREATE_DIR),"}, {"sha": "ebc0933e31d277cc21587c96d6a06fd202eb9ec0", "filename": "clippy_lints/src/lib.register_style.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a5a6c95da813ce81d9d4c83d2632379284e0fc06/clippy_lints%2Fsrc%2Flib.register_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5a6c95da813ce81d9d4c83d2632379284e0fc06/clippy_lints%2Fsrc%2Flib.register_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_style.rs?ref=a5a6c95da813ce81d9d4c83d2632379284e0fc06", "patch": "@@ -4,7 +4,6 @@\n \n store.register_group(true, \"clippy::style\", Some(\"clippy_style\"), vec![\n     LintId::of(assertions_on_constants::ASSERTIONS_ON_CONSTANTS),\n-    LintId::of(assertions_on_result_states::ASSERTIONS_ON_RESULT_STATES),\n     LintId::of(blocks_in_if_conditions::BLOCKS_IN_IF_CONDITIONS),\n     LintId::of(bool_assert_comparison::BOOL_ASSERT_COMPARISON),\n     LintId::of(casts::FN_TO_NUMERIC_CAST),"}, {"sha": "795f435f24cd40b3e713959334ff266aaba3cc9f", "filename": "tests/ui/assertions_on_result_states.fixed", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a5a6c95da813ce81d9d4c83d2632379284e0fc06/tests%2Fui%2Fassertions_on_result_states.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/a5a6c95da813ce81d9d4c83d2632379284e0fc06/tests%2Fui%2Fassertions_on_result_states.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassertions_on_result_states.fixed?ref=a5a6c95da813ce81d9d4c83d2632379284e0fc06", "patch": "@@ -27,6 +27,14 @@ fn main() {\n     let r: Result<Foo, Foo> = Ok(Foo);\n     assert!(r.is_ok());\n \n+    // test ok with some messages\n+    let r: Result<Foo, DebugFoo> = Ok(Foo);\n+    assert!(r.is_ok(), \"oops\");\n+\n+    // test ok with unit error\n+    let r: Result<Foo, ()> = Ok(Foo);\n+    assert!(r.is_ok());\n+\n     // test temporary ok\n     fn get_ok() -> Result<Foo, DebugFoo> {\n         Ok(Foo)"}, {"sha": "1101aec1e1b34d5cfc29a591b1292ff6bc35d3f6", "filename": "tests/ui/assertions_on_result_states.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a5a6c95da813ce81d9d4c83d2632379284e0fc06/tests%2Fui%2Fassertions_on_result_states.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5a6c95da813ce81d9d4c83d2632379284e0fc06/tests%2Fui%2Fassertions_on_result_states.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassertions_on_result_states.rs?ref=a5a6c95da813ce81d9d4c83d2632379284e0fc06", "patch": "@@ -27,6 +27,14 @@ fn main() {\n     let r: Result<Foo, Foo> = Ok(Foo);\n     assert!(r.is_ok());\n \n+    // test ok with some messages\n+    let r: Result<Foo, DebugFoo> = Ok(Foo);\n+    assert!(r.is_ok(), \"oops\");\n+\n+    // test ok with unit error\n+    let r: Result<Foo, ()> = Ok(Foo);\n+    assert!(r.is_ok());\n+\n     // test temporary ok\n     fn get_ok() -> Result<Foo, DebugFoo> {\n         Ok(Foo)"}, {"sha": "97a5f3dfca4a65f93f8d49f1f326fea941531c04", "filename": "tests/ui/assertions_on_result_states.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a5a6c95da813ce81d9d4c83d2632379284e0fc06/tests%2Fui%2Fassertions_on_result_states.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a5a6c95da813ce81d9d4c83d2632379284e0fc06/tests%2Fui%2Fassertions_on_result_states.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassertions_on_result_states.stderr?ref=a5a6c95da813ce81d9d4c83d2632379284e0fc06", "patch": "@@ -7,31 +7,31 @@ LL |     assert!(r.is_ok());\n    = note: `-D clippy::assertions-on-result-states` implied by `-D warnings`\n \n error: called `assert!` with `Result::is_ok`\n-  --> $DIR/assertions_on_result_states.rs:34:5\n+  --> $DIR/assertions_on_result_states.rs:42:5\n    |\n LL |     assert!(get_ok().is_ok());\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `get_ok().unwrap()`\n \n error: called `assert!` with `Result::is_ok`\n-  --> $DIR/assertions_on_result_states.rs:37:5\n+  --> $DIR/assertions_on_result_states.rs:45:5\n    |\n LL |     assert!(get_ok_macro!().is_ok());\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `get_ok_macro!().unwrap()`\n \n error: called `assert!` with `Result::is_ok`\n-  --> $DIR/assertions_on_result_states.rs:50:5\n+  --> $DIR/assertions_on_result_states.rs:58:5\n    |\n LL |     assert!(r.is_ok());\n    |     ^^^^^^^^^^^^^^^^^^ help: replace with: `r.unwrap()`\n \n error: called `assert!` with `Result::is_ok`\n-  --> $DIR/assertions_on_result_states.rs:56:9\n+  --> $DIR/assertions_on_result_states.rs:64:9\n    |\n LL |         assert!(r.is_ok());\n    |         ^^^^^^^^^^^^^^^^^^ help: replace with: `r.unwrap()`\n \n error: called `assert!` with `Result::is_err`\n-  --> $DIR/assertions_on_result_states.rs:64:5\n+  --> $DIR/assertions_on_result_states.rs:72:5\n    |\n LL |     assert!(r.is_err());\n    |     ^^^^^^^^^^^^^^^^^^^ help: replace with: `r.unwrap_err()`"}]}