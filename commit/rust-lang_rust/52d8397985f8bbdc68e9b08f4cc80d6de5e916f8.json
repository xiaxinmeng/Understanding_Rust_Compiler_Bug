{"sha": "52d8397985f8bbdc68e9b08f4cc80d6de5e916f8", "node_id": "C_kwDOAAsO6NoAKDUyZDgzOTc5ODVmOGJiZGM2OGU5YjA4ZjRjYzgwZDZkZTVlOTE2Zjg", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-08-17T02:38:21Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-08-17T02:38:21Z"}, "message": "Remove `AttributesExt::other_attrs`.\n\nIt's unused.", "tree": {"sha": "206288e665c23e795b146c96b6ace374dc64ab91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/206288e665c23e795b146c96b6ace374dc64ab91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52d8397985f8bbdc68e9b08f4cc80d6de5e916f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52d8397985f8bbdc68e9b08f4cc80d6de5e916f8", "html_url": "https://github.com/rust-lang/rust/commit/52d8397985f8bbdc68e9b08f4cc80d6de5e916f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52d8397985f8bbdc68e9b08f4cc80d6de5e916f8/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6cd40d0e518b1bd2477932e411aaf6502807edea", "url": "https://api.github.com/repos/rust-lang/rust/commits/6cd40d0e518b1bd2477932e411aaf6502807edea", "html_url": "https://github.com/rust-lang/rust/commit/6cd40d0e518b1bd2477932e411aaf6502807edea"}], "stats": {"total": 6, "additions": 0, "deletions": 6}, "files": [{"sha": "2a38713d43b8a082e025f6a4dc5938a99b354918", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/52d8397985f8bbdc68e9b08f4cc80d6de5e916f8/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52d8397985f8bbdc68e9b08f4cc80d6de5e916f8/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=52d8397985f8bbdc68e9b08f4cc80d6de5e916f8", "patch": "@@ -820,8 +820,6 @@ pub(crate) trait AttributesExt {\n \n     fn inner_docs(&self) -> bool;\n \n-    fn other_attrs(&self) -> Vec<ast::Attribute>;\n-\n     fn cfg(&self, tcx: TyCtxt<'_>, hidden_cfg: &FxHashSet<Cfg>) -> Option<Arc<Cfg>>;\n }\n \n@@ -848,10 +846,6 @@ impl AttributesExt for [ast::Attribute] {\n         self.iter().find(|a| a.doc_str().is_some()).map_or(true, |a| a.style == AttrStyle::Inner)\n     }\n \n-    fn other_attrs(&self) -> Vec<ast::Attribute> {\n-        self.iter().filter(|attr| attr.doc_str().is_none()).cloned().collect()\n-    }\n-\n     fn cfg(&self, tcx: TyCtxt<'_>, hidden_cfg: &FxHashSet<Cfg>) -> Option<Arc<Cfg>> {\n         let sess = tcx.sess;\n         let doc_cfg_active = tcx.features().doc_cfg;"}]}