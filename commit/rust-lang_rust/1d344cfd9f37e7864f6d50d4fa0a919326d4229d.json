{"sha": "1d344cfd9f37e7864f6d50d4fa0a919326d4229d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkMzQ0Y2ZkOWYzN2U3ODY0ZjZkNTBkNGZhMGE5MTkzMjZkNDIyOWQ=", "commit": {"author": {"name": "Florian Zeitz", "email": "florob@babelmonkeys.de", "date": "2016-08-30T03:44:21Z"}, "committer": {"name": "Florian Zeitz", "email": "florob@babelmonkeys.de", "date": "2016-09-05T01:35:29Z"}, "message": "typeck: Fix error reporting of wrong entry function signatures\n\nExpected and actual type were switched, this was introduced by\nrefactoring in 8eb12d91aaf95432ca73bda429af04e0710c984d.", "tree": {"sha": "5b58fb6caf045f57216810c8c55e74a1e2ef8568", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b58fb6caf045f57216810c8c55e74a1e2ef8568"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d344cfd9f37e7864f6d50d4fa0a919326d4229d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d344cfd9f37e7864f6d50d4fa0a919326d4229d", "html_url": "https://github.com/rust-lang/rust/commit/1d344cfd9f37e7864f6d50d4fa0a919326d4229d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d344cfd9f37e7864f6d50d4fa0a919326d4229d/comments", "author": {"login": "Florob", "id": 133684, "node_id": "MDQ6VXNlcjEzMzY4NA==", "avatar_url": "https://avatars.githubusercontent.com/u/133684?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Florob", "html_url": "https://github.com/Florob", "followers_url": "https://api.github.com/users/Florob/followers", "following_url": "https://api.github.com/users/Florob/following{/other_user}", "gists_url": "https://api.github.com/users/Florob/gists{/gist_id}", "starred_url": "https://api.github.com/users/Florob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Florob/subscriptions", "organizations_url": "https://api.github.com/users/Florob/orgs", "repos_url": "https://api.github.com/users/Florob/repos", "events_url": "https://api.github.com/users/Florob/events{/privacy}", "received_events_url": "https://api.github.com/users/Florob/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Florob", "id": 133684, "node_id": "MDQ6VXNlcjEzMzY4NA==", "avatar_url": "https://avatars.githubusercontent.com/u/133684?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Florob", "html_url": "https://github.com/Florob", "followers_url": "https://api.github.com/users/Florob/followers", "following_url": "https://api.github.com/users/Florob/following{/other_user}", "gists_url": "https://api.github.com/users/Florob/gists{/gist_id}", "starred_url": "https://api.github.com/users/Florob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Florob/subscriptions", "organizations_url": "https://api.github.com/users/Florob/orgs", "repos_url": "https://api.github.com/users/Florob/repos", "events_url": "https://api.github.com/users/Florob/events{/privacy}", "received_events_url": "https://api.github.com/users/Florob/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77d2cd28fd715d2b9751de82b14d28ce6e376728", "url": "https://api.github.com/repos/rust-lang/rust/commits/77d2cd28fd715d2b9751de82b14d28ce6e376728", "html_url": "https://github.com/rust-lang/rust/commit/77d2cd28fd715d2b9751de82b14d28ce6e376728"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "6318574b142890df4635ade645736950e515bf4d", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1d344cfd9f37e7864f6d50d4fa0a919326d4229d/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d344cfd9f37e7864f6d50d4fa0a919326d4229d/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=1d344cfd9f37e7864f6d50d4fa0a919326d4229d", "patch": "@@ -192,12 +192,12 @@ fn require_c_abi_if_variadic(tcx: TyCtxt,\n \n fn require_same_types<'a, 'tcx>(ccx: &CrateCtxt<'a, 'tcx>,\n                                 origin: TypeOrigin,\n-                                t1: Ty<'tcx>,\n-                                t2: Ty<'tcx>)\n+                                expected: Ty<'tcx>,\n+                                actual: Ty<'tcx>)\n                                 -> bool {\n     ccx.tcx.infer_ctxt(None, None, Reveal::NotSpecializable).enter(|infcx| {\n-        if let Err(err) = infcx.eq_types(false, origin.clone(), t1, t2) {\n-            infcx.report_mismatched_types(origin, t1, t2, err);\n+        if let Err(err) = infcx.eq_types(false, origin.clone(), expected, actual) {\n+            infcx.report_mismatched_types(origin, expected, actual, err);\n             false\n         } else {\n             true\n@@ -246,8 +246,8 @@ fn check_main_fn_ty(ccx: &CrateCtxt,\n             require_same_types(\n                 ccx,\n                 TypeOrigin::MainFunctionType(main_span),\n-                main_t,\n-                se_ty);\n+                se_ty,\n+                main_t);\n         }\n         _ => {\n             span_bug!(main_span,\n@@ -302,8 +302,8 @@ fn check_start_fn_ty(ccx: &CrateCtxt,\n             require_same_types(\n                 ccx,\n                 TypeOrigin::StartFunctionType(start_span),\n-                start_t,\n-                se_ty);\n+                se_ty,\n+                start_t);\n         }\n         _ => {\n             span_bug!(start_span,"}]}