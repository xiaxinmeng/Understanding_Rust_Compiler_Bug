{"sha": "050d7fd30805dcc995cd99575af2ff4db3ae0b90", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1MGQ3ZmQzMDgwNWRjYzk5NWNkOTk1NzVhZjJmZjRkYjNhZTBiOTA=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-03-23T13:50:47Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-03-29T08:45:18Z"}, "message": "fallout and tests", "tree": {"sha": "aa345c099084912358aa2413906ab64a401305b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa345c099084912358aa2413906ab64a401305b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/050d7fd30805dcc995cd99575af2ff4db3ae0b90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/050d7fd30805dcc995cd99575af2ff4db3ae0b90", "html_url": "https://github.com/rust-lang/rust/commit/050d7fd30805dcc995cd99575af2ff4db3ae0b90", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/050d7fd30805dcc995cd99575af2ff4db3ae0b90/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5911ccaba8ff0a308660c83e4d307609f8236146", "url": "https://api.github.com/repos/rust-lang/rust/commits/5911ccaba8ff0a308660c83e4d307609f8236146", "html_url": "https://github.com/rust-lang/rust/commit/5911ccaba8ff0a308660c83e4d307609f8236146"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "e9197cf85c69ffc9cb7226c6be34c5f00a7725d0", "filename": "src/booleans.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/050d7fd30805dcc995cd99575af2ff4db3ae0b90/src%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/050d7fd30805dcc995cd99575af2ff4db3ae0b90/src%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbooleans.rs?ref=050d7fd30805dcc995cd99575af2ff4db3ae0b90", "patch": "@@ -2,17 +2,17 @@ use rustc::lint::*;\n use rustc_front::hir::*;\n use rustc_front::intravisit::*;\n use syntax::ast::LitKind;\n-use utils::{span_lint_and_then, in_macro, snippet_opt};\n+use utils::{span_lint_and_then, in_macro, snippet_opt, SpanlessEq};\n \n /// **What it does:** This lint checks for boolean expressions that can be written more concisely\n ///\n /// **Why is this bad?** Readability of boolean expressions suffers from unnecesessary duplication\n ///\n-/// **Known problems:** None\n+/// **Known problems:** Ignores short circuting behavior, bitwise and/or and xor. Ends up suggesting things like !(a == b)\n ///\n /// **Example:** `if a && b || a` should be `if a`\n declare_lint! {\n-    pub NONMINIMAL_BOOL, Warn,\n+    pub NONMINIMAL_BOOL, Allow,\n     \"checks for boolean expressions that can be written more concisely\"\n }\n "}, {"sha": "87373c7a0ded2e535525c8427d9e1e1e7b2014eb", "filename": "src/non_expressive_names.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/050d7fd30805dcc995cd99575af2ff4db3ae0b90/src%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/050d7fd30805dcc995cd99575af2ff4db3ae0b90/src%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fnon_expressive_names.rs?ref=050d7fd30805dcc995cd99575af2ff4db3ae0b90", "patch": "@@ -262,7 +262,7 @@ fn levenstein_not_1(a_name: &str, b_name: &str) -> bool {\n         }\n         if let Some(b2) = b_chars.next() {\n             // check if there's just one character inserted\n-            return !(a == b2 && a_chars.eq(b_chars));\n+            return a != b2 || a_chars.ne(b_chars);\n         } else {\n             // tuple\n             // ntuple"}, {"sha": "3d47fc74a113deb6e97e489db744496c7ef11182", "filename": "tests/compile-fail/block_in_if_condition.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/050d7fd30805dcc995cd99575af2ff4db3ae0b90/tests%2Fcompile-fail%2Fblock_in_if_condition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/050d7fd30805dcc995cd99575af2ff4db3ae0b90/tests%2Fcompile-fail%2Fblock_in_if_condition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fblock_in_if_condition.rs?ref=050d7fd30805dcc995cd99575af2ff4db3ae0b90", "patch": "@@ -4,6 +4,7 @@\n #![deny(block_in_if_condition_expr)]\n #![deny(block_in_if_condition_stmt)]\n #![allow(unused, let_and_return)]\n+#![warn(nonminimal_bool)]\n \n \n macro_rules! blocky {"}, {"sha": "ed989c0e84b06073feaee69588d8f3504ffe2436", "filename": "tests/compile-fail/booleans.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/050d7fd30805dcc995cd99575af2ff4db3ae0b90/tests%2Fcompile-fail%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/050d7fd30805dcc995cd99575af2ff4db3ae0b90/tests%2Fcompile-fail%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fbooleans.rs?ref=050d7fd30805dcc995cd99575af2ff4db3ae0b90", "patch": "@@ -0,0 +1,24 @@\n+#![feature(plugin)]\n+#![plugin(clippy)]\n+#![deny(nonminimal_bool)]\n+\n+#[allow(unused)]\n+fn main() {\n+    let a: bool = unimplemented!();\n+    let b: bool = unimplemented!();\n+    let _ = a && b || a; //~ ERROR this boolean expression can be simplified\n+    //|~ HELP for further information visit\n+    //|~ SUGGESTION let _ = a;\n+    let _ = !(a && b); //~ ERROR this boolean expression can be simplified\n+    //|~ HELP for further information visit\n+    //|~ SUGGESTION let _ = !b || !a;\n+    let _ = !true; //~ ERROR this boolean expression can be simplified\n+    //|~ HELP for further information visit\n+    //|~ SUGGESTION let _ = false;\n+    let _ = !false; //~ ERROR this boolean expression can be simplified\n+    //|~ HELP for further information visit\n+    //|~ SUGGESTION let _ = true;\n+    let _ = !!a; //~ ERROR this boolean expression can be simplified\n+    //|~ HELP for further information visit\n+    //|~ SUGGESTION let _ = a;\n+}"}, {"sha": "d49dcc6f84be62c2c19e8ece300e835ea89874e2", "filename": "tests/compile-fail/eq_op.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/050d7fd30805dcc995cd99575af2ff4db3ae0b90/tests%2Fcompile-fail%2Feq_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/050d7fd30805dcc995cd99575af2ff4db3ae0b90/tests%2Fcompile-fail%2Feq_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Feq_op.rs?ref=050d7fd30805dcc995cd99575af2ff4db3ae0b90", "patch": "@@ -4,6 +4,7 @@\n #[deny(eq_op)]\n #[allow(identity_op)]\n #[allow(no_effect)]\n+#[deny(nonminimal_bool)]\n fn main() {\n     // simple values and comparisons\n     1 == 1; //~ERROR equal expressions\n@@ -38,9 +39,9 @@ fn main() {\n     1 - 1; //~ERROR equal expressions\n     1 / 1; //~ERROR equal expressions\n     true && true; //~ERROR equal expressions\n-    //~|WARN this boolean expression can be simplified\n+    //~|ERROR this boolean expression can be simplified\n     true || true; //~ERROR equal expressions\n-    //~|WARN this boolean expression can be simplified\n+    //~|ERROR this boolean expression can be simplified\n \n     let mut a = vec![1];\n     a == a; //~ERROR equal expressions"}]}