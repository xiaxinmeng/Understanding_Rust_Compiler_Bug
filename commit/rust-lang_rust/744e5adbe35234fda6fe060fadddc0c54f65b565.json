{"sha": "744e5adbe35234fda6fe060fadddc0c54f65b565", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0NGU1YWRiZTM1MjM0ZmRhNmZlMDYwZmFkZGRjMGM1NGY2NWI1NjU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-02-11T21:02:24Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-02-11T23:01:23Z"}, "message": "Merge remote-tracking branch 'cyndis/expansion-span'", "tree": {"sha": "c46041b1307bf667bc9448bd651fab6493cbdcdd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c46041b1307bf667bc9448bd651fab6493cbdcdd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/744e5adbe35234fda6fe060fadddc0c54f65b565", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/744e5adbe35234fda6fe060fadddc0c54f65b565", "html_url": "https://github.com/rust-lang/rust/commit/744e5adbe35234fda6fe060fadddc0c54f65b565", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/744e5adbe35234fda6fe060fadddc0c54f65b565/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "faef933e753a3767c3d81ee12e581bf6e63ebc54", "url": "https://api.github.com/repos/rust-lang/rust/commits/faef933e753a3767c3d81ee12e581bf6e63ebc54", "html_url": "https://github.com/rust-lang/rust/commit/faef933e753a3767c3d81ee12e581bf6e63ebc54"}, {"sha": "ca030b4fc85b4273c025287fb38c4d83432f5bf2", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca030b4fc85b4273c025287fb38c4d83432f5bf2", "html_url": "https://github.com/rust-lang/rust/commit/ca030b4fc85b4273c025287fb38c4d83432f5bf2"}], "stats": {"total": 44, "additions": 34, "deletions": 10}, "files": [{"sha": "a061c0dfafd4742ffee1b26d7125ef20f15fa774", "filename": "src/libsyntax/ext/source_util.rs", "status": "modified", "additions": 29, "deletions": 8, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/744e5adbe35234fda6fe060fadddc0c54f65b565/src%2Flibsyntax%2Fext%2Fsource_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/744e5adbe35234fda6fe060fadddc0c54f65b565/src%2Flibsyntax%2Fext%2Fsource_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fsource_util.rs?ref=744e5adbe35234fda6fe060fadddc0c54f65b565", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2012-2013 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use codemap;\n-use codemap::{FileMap, Loc, Pos, span};\n+use codemap::{FileMap, Loc, Pos, ExpandedFrom, span};\n use ext::base::*;\n use ext::base;\n use ext::build::{mk_base_vec_e, mk_uint, mk_u8, mk_base_str};\n@@ -21,20 +21,39 @@ use core::result;\n use core::str;\n use core::vec;\n \n+fn topmost_expn_info(expn_info: @codemap::ExpnInfo) -> @codemap::ExpnInfo {\n+    let ExpandedFrom({call_site, _}) = *expn_info;\n+    match call_site.expn_info {\n+        Some(next_expn_info) => {\n+            let ExpandedFrom({callie: {name, _}, _}) = *next_expn_info;\n+            // Don't recurse into file using \"include!\"\n+            if name == ~\"include\" { return expn_info; }\n+\n+            topmost_expn_info(next_expn_info)\n+        },\n+        None => expn_info\n+    }\n+}\n+\n /* line!(): expands to the current line number */\n pub fn expand_line(cx: ext_ctxt, sp: span, tts: ~[ast::token_tree])\n     -> base::MacResult {\n     base::check_zero_tts(cx, sp, tts, \"line!\");\n-    let loc = cx.codemap().lookup_char_pos(sp.lo);\n-    base::MRExpr(mk_uint(cx, sp, loc.line))\n+\n+    let topmost = topmost_expn_info(cx.backtrace().get());\n+    let loc = cx.codemap().lookup_char_pos(topmost.call_site.lo);\n+\n+    base::MRExpr(mk_uint(cx, topmost.call_site, loc.line))\n }\n \n /* col!(): expands to the current column number */\n pub fn expand_col(cx: ext_ctxt, sp: span, tts: ~[ast::token_tree])\n     -> base::MacResult {\n     base::check_zero_tts(cx, sp, tts, \"col!\");\n-    let loc = cx.codemap().lookup_char_pos(sp.lo);\n-    base::MRExpr(mk_uint(cx, sp, loc.col.to_uint()))\n+\n+    let topmost = topmost_expn_info(cx.backtrace().get());\n+    let loc = cx.codemap().lookup_char_pos(topmost.call_site.lo);\n+    base::MRExpr(mk_uint(cx, topmost.call_site, loc.col.to_uint()))\n }\n \n /* file!(): expands to the current filename */\n@@ -43,9 +62,11 @@ pub fn expand_col(cx: ext_ctxt, sp: span, tts: ~[ast::token_tree])\n pub fn expand_file(cx: ext_ctxt, sp: span, tts: ~[ast::token_tree])\n     -> base::MacResult {\n     base::check_zero_tts(cx, sp, tts, \"file!\");\n+\n+    let topmost = topmost_expn_info(cx.backtrace().get());\n     let Loc { file: @FileMap { name: filename, _ }, _ } =\n-        cx.codemap().lookup_char_pos(sp.lo);\n-    base::MRExpr(mk_base_str(cx, sp, filename))\n+        cx.codemap().lookup_char_pos(topmost.call_site.lo);\n+    base::MRExpr(mk_base_str(cx, topmost.call_site, filename))\n }\n \n pub fn expand_stringify(cx: ext_ctxt, sp: span, tts: ~[ast::token_tree])"}, {"sha": "65ef3cc4f69fc2774a5ed001bfb16da1fed8236f", "filename": "src/test/run-pass/syntax-extension-source-utils.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/744e5adbe35234fda6fe060fadddc0c54f65b565/src%2Ftest%2Frun-pass%2Fsyntax-extension-source-utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/744e5adbe35234fda6fe060fadddc0c54f65b565/src%2Ftest%2Frun-pass%2Fsyntax-extension-source-utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsyntax-extension-source-utils.rs?ref=744e5adbe35234fda6fe060fadddc0c54f65b565", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2012-2013 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -17,9 +17,12 @@ pub mod m1 {\n     }\n }\n \n+macro_rules! indirect_line( () => ( line!() ) )\n+\n pub fn main() {\n-    assert(line!() == 21);\n+    assert(line!() == 23);\n     assert(col!() == 11);\n+    assert(indirect_line!() == 25);\n     assert(file!().to_owned().ends_with(~\"syntax-extension-source-utils.rs\"));\n     assert(stringify!((2*3) + 5).to_owned() == ~\"( 2 * 3 ) + 5\");\n     assert(include!(\"syntax-extension-source-utils-files/includeme.fragment\").to_owned()"}]}