{"sha": "aa58242b287195283cf30533d5d258456ee20005", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhNTgyNDJiMjg3MTk1MjgzY2YzMDUzM2Q1ZDI1ODQ1NmVlMjAwMDU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-04-19T04:03:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-19T04:03:21Z"}, "message": "Rollup merge of #60061 - estebank:field-sugg, r=davidtwco\n\nChange suggestion of field when not in self context\n\nFix #60057.", "tree": {"sha": "0ef84af6bc553aeff85fcb10dcc70d2388b11e39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ef84af6bc553aeff85fcb10dcc70d2388b11e39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa58242b287195283cf30533d5d258456ee20005", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcuUiJCRBK7hj4Ov3rIwAAdHIIAHQ/ZsfGlSoLz7P7i/VvwEgJ\ncxNePcep1GE/M8d5oUd1UlHi4rVE3Y/TM7ldd/7E6HJjgynbbc4XVCQURnD2a7iy\nWHFC5zC1mARNYGnI9qRrAlKzH1kRq3HAXWVTu2NyZEIPlOU1SGGrft7E8sFKxzgA\nLWX45IrCpIknkzd/+RlmIhKZuCWoERwljTKyEky8kTlZ/YvuC2lmisnlTN0NHxoN\nU61I+AAEXi3PkqMlfGzQGP+mZ/EDuATwewNOMzqsHgq7tQd3wxafIJKVPruAMuEa\naEb0O5zsVZvsZ2+qg0rpv805DVxhkw8aN75QvnBl0wD/SlP2j79lNO65QrrmeFw=\n=dkLG\n-----END PGP SIGNATURE-----\n", "payload": "tree 0ef84af6bc553aeff85fcb10dcc70d2388b11e39\nparent dd9f9b4b9dc782f307e9873f7a99828c4f58398e\nparent 2f4035d27eaebf24370303e1dadedf3bf148a4af\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1555646601 +0200\ncommitter GitHub <noreply@github.com> 1555646601 +0200\n\nRollup merge of #60061 - estebank:field-sugg, r=davidtwco\n\nChange suggestion of field when not in self context\n\nFix #60057.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa58242b287195283cf30533d5d258456ee20005", "html_url": "https://github.com/rust-lang/rust/commit/aa58242b287195283cf30533d5d258456ee20005", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa58242b287195283cf30533d5d258456ee20005/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd9f9b4b9dc782f307e9873f7a99828c4f58398e", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd9f9b4b9dc782f307e9873f7a99828c4f58398e", "html_url": "https://github.com/rust-lang/rust/commit/dd9f9b4b9dc782f307e9873f7a99828c4f58398e"}, {"sha": "2f4035d27eaebf24370303e1dadedf3bf148a4af", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f4035d27eaebf24370303e1dadedf3bf148a4af", "html_url": "https://github.com/rust-lang/rust/commit/2f4035d27eaebf24370303e1dadedf3bf148a4af"}], "stats": {"total": 90, "additions": 60, "deletions": 30}, "files": [{"sha": "9b02f98164fdf9c0aba89153d9931c415b9d3e23", "filename": "src/librustc_resolve/diagnostics.rs", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/aa58242b287195283cf30533d5d258456ee20005/src%2Flibrustc_resolve%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa58242b287195283cf30533d5d258456ee20005/src%2Flibrustc_resolve%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdiagnostics.rs?ref=aa58242b287195283cf30533d5d258456ee20005", "patch": "@@ -166,16 +166,18 @@ impl<'a> Resolver<'a> {\n                 let self_is_available = self.self_value_is_available(path[0].ident.span, span);\n                 match candidate {\n                     AssocSuggestion::Field => {\n-                        err.span_suggestion(\n-                            span,\n-                            \"try\",\n-                            format!(\"self.{}\", path_str),\n-                            Applicability::MachineApplicable,\n-                        );\n-                        if !self_is_available {\n-                            err.span_label(span, format!(\"`self` value is a keyword \\\n-                                                         only available in \\\n-                                                         methods with `self` parameter\"));\n+                        if self_is_available {\n+                            err.span_suggestion(\n+                                span,\n+                                \"you might have meant to use the available field\",\n+                                format!(\"self.{}\", path_str),\n+                                Applicability::MachineApplicable,\n+                            );\n+                        } else {\n+                            err.span_label(\n+                                span,\n+                                \"a field by this name exists in `Self`\",\n+                            );\n                         }\n                     }\n                     AssocSuggestion::MethodWithSelf if self_is_available => {"}, {"sha": "25cb85dadb903dcae01f9193a74aad1b6d130157", "filename": "src/test/ui/class-missing-self.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa58242b287195283cf30533d5d258456ee20005/src%2Ftest%2Fui%2Fclass-missing-self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aa58242b287195283cf30533d5d258456ee20005/src%2Ftest%2Fui%2Fclass-missing-self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclass-missing-self.stderr?ref=aa58242b287195283cf30533d5d258456ee20005", "patch": "@@ -2,7 +2,7 @@ error[E0425]: cannot find value `meows` in this scope\n   --> $DIR/class-missing-self.rs:9:7\n    |\n LL |       meows += 1;\n-   |       ^^^^^ help: try: `self.meows`\n+   |       ^^^^^ help: you might have meant to use the available field: `self.meows`\n \n error[E0425]: cannot find function `sleep` in this scope\n   --> $DIR/class-missing-self.rs:10:7"}, {"sha": "3027d01c5325bd41f5d1159b878cb29d59fb319b", "filename": "src/test/ui/issues/issue-60057.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/aa58242b287195283cf30533d5d258456ee20005/src%2Ftest%2Fui%2Fissues%2Fissue-60057.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa58242b287195283cf30533d5d258456ee20005/src%2Ftest%2Fui%2Fissues%2Fissue-60057.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-60057.rs?ref=aa58242b287195283cf30533d5d258456ee20005", "patch": "@@ -0,0 +1,17 @@\n+struct A {\n+    banana: u8,\n+}\n+\n+impl A {\n+    fn new(peach: u8) -> A {\n+        A {\n+            banana: banana //~ ERROR cannot find value `banana` in this scope\n+        }\n+    }\n+\n+    fn foo(&self, peach: u8) -> A {\n+        A {\n+            banana: banana //~ ERROR cannot find value `banana` in this scope\n+        }\n+    }\n+}"}, {"sha": "6b967204ce6fb6f685f6ff116c5f1209c374bee1", "filename": "src/test/ui/issues/issue-60057.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/aa58242b287195283cf30533d5d258456ee20005/src%2Ftest%2Fui%2Fissues%2Fissue-60057.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aa58242b287195283cf30533d5d258456ee20005/src%2Ftest%2Fui%2Fissues%2Fissue-60057.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-60057.stderr?ref=aa58242b287195283cf30533d5d258456ee20005", "patch": "@@ -0,0 +1,20 @@\n+error[E0425]: cannot find value `banana` in this scope\n+  --> $DIR/issue-60057.rs:8:21\n+   |\n+LL |             banana: banana\n+   |                     ^^^^^^ a field by this name exists in `Self`\n+\n+error[E0425]: cannot find value `banana` in this scope\n+  --> $DIR/issue-60057.rs:14:21\n+   |\n+LL |             banana: banana\n+   |                     ^^^^^^ help: you might have meant to use the available field: `self.banana`\n+\n+error[E0601]: `main` function not found in crate `issue_60057`\n+   |\n+   = note: consider adding a `main` function to `$DIR/issue-60057.rs`\n+\n+error: aborting due to 3 previous errors\n+\n+Some errors have detailed explanations: E0425, E0601.\n+For more information about an error, try `rustc --explain E0425`."}, {"sha": "97d42aa8ef4a5e166b61bdfeeda38744b682d445", "filename": "src/test/ui/resolve/issue-14254.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/aa58242b287195283cf30533d5d258456ee20005/src%2Ftest%2Fui%2Fresolve%2Fissue-14254.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aa58242b287195283cf30533d5d258456ee20005/src%2Ftest%2Fui%2Fresolve%2Fissue-14254.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-14254.stderr?ref=aa58242b287195283cf30533d5d258456ee20005", "patch": "@@ -20,13 +20,13 @@ error[E0425]: cannot find value `x` in this scope\n   --> $DIR/issue-14254.rs:30:9\n    |\n LL |         x;\n-   |         ^ help: try: `self.x`\n+   |         ^ help: you might have meant to use the available field: `self.x`\n \n error[E0425]: cannot find value `y` in this scope\n   --> $DIR/issue-14254.rs:32:9\n    |\n LL |         y;\n-   |         ^ help: try: `self.y`\n+   |         ^ help: you might have meant to use the available field: `self.y`\n \n error[E0425]: cannot find value `a` in this scope\n   --> $DIR/issue-14254.rs:34:9\n@@ -56,13 +56,13 @@ error[E0425]: cannot find value `x` in this scope\n   --> $DIR/issue-14254.rs:47:9\n    |\n LL |         x;\n-   |         ^ help: try: `self.x`\n+   |         ^ help: you might have meant to use the available field: `self.x`\n \n error[E0425]: cannot find value `y` in this scope\n   --> $DIR/issue-14254.rs:49:9\n    |\n LL |         y;\n-   |         ^ help: try: `self.y`\n+   |         ^ help: you might have meant to use the available field: `self.y`\n \n error[E0425]: cannot find value `a` in this scope\n   --> $DIR/issue-14254.rs:51:9"}, {"sha": "7790383843e17743a1c0cc99f619c4b783484e2c", "filename": "src/test/ui/resolve/issue-2356.stderr", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/aa58242b287195283cf30533d5d258456ee20005/src%2Ftest%2Fui%2Fresolve%2Fissue-2356.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aa58242b287195283cf30533d5d258456ee20005/src%2Ftest%2Fui%2Fresolve%2Fissue-2356.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-2356.stderr?ref=aa58242b287195283cf30533d5d258456ee20005", "patch": "@@ -20,10 +20,7 @@ error[E0425]: cannot find value `whiskers` in this scope\n   --> $DIR/issue-2356.rs:39:5\n    |\n LL |     whiskers -= other;\n-   |     ^^^^^^^^\n-   |     |\n-   |     `self` value is a keyword only available in methods with `self` parameter\n-   |     help: try: `self.whiskers`\n+   |     ^^^^^^^^ a field by this name exists in `Self`\n \n error[E0425]: cannot find function `shave` in this scope\n   --> $DIR/issue-2356.rs:41:5\n@@ -83,16 +80,13 @@ error[E0425]: cannot find value `whiskers` in this scope\n   --> $DIR/issue-2356.rs:79:5\n    |\n LL |     whiskers = 0;\n-   |     ^^^^^^^^ help: try: `self.whiskers`\n+   |     ^^^^^^^^ help: you might have meant to use the available field: `self.whiskers`\n \n error[E0425]: cannot find value `whiskers` in this scope\n   --> $DIR/issue-2356.rs:84:5\n    |\n LL |     whiskers = 4;\n-   |     ^^^^^^^^\n-   |     |\n-   |     `self` value is a keyword only available in methods with `self` parameter\n-   |     help: try: `self.whiskers`\n+   |     ^^^^^^^^ a field by this name exists in `Self`\n \n error[E0425]: cannot find function `purr_louder` in this scope\n   --> $DIR/issue-2356.rs:86:5"}, {"sha": "87040015b8d805add6bd2b422e4429b97420abc5", "filename": "src/test/ui/resolve/resolve-assoc-suggestions.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa58242b287195283cf30533d5d258456ee20005/src%2Ftest%2Fui%2Fresolve%2Fresolve-assoc-suggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aa58242b287195283cf30533d5d258456ee20005/src%2Ftest%2Fui%2Fresolve%2Fresolve-assoc-suggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-assoc-suggestions.stderr?ref=aa58242b287195283cf30533d5d258456ee20005", "patch": "@@ -14,7 +14,7 @@ error[E0425]: cannot find value `field` in this scope\n   --> $DIR/resolve-assoc-suggestions.rs:20:9\n    |\n LL |         field;\n-   |         ^^^^^ help: try: `self.field`\n+   |         ^^^^^ help: you might have meant to use the available field: `self.field`\n \n error[E0412]: cannot find type `Type` in this scope\n   --> $DIR/resolve-assoc-suggestions.rs:23:16"}, {"sha": "892b50309a905daeab7848418c6196bb9332729b", "filename": "src/test/ui/resolve/resolve-speculative-adjustment.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa58242b287195283cf30533d5d258456ee20005/src%2Ftest%2Fui%2Fresolve%2Fresolve-speculative-adjustment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aa58242b287195283cf30533d5d258456ee20005/src%2Ftest%2Fui%2Fresolve%2Fresolve-speculative-adjustment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-speculative-adjustment.stderr?ref=aa58242b287195283cf30533d5d258456ee20005", "patch": "@@ -14,7 +14,7 @@ error[E0425]: cannot find value `field` in this scope\n   --> $DIR/resolve-speculative-adjustment.rs:23:9\n    |\n LL |         field;\n-   |         ^^^^^ help: try: `self.field`\n+   |         ^^^^^ help: you might have meant to use the available field: `self.field`\n \n error[E0425]: cannot find function `method` in this scope\n   --> $DIR/resolve-speculative-adjustment.rs:25:9"}, {"sha": "06926b53ddd35e3eee1319df19a4a5f4b8e7dc8f", "filename": "src/test/ui/resolve/unresolved_static_type_field.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/aa58242b287195283cf30533d5d258456ee20005/src%2Ftest%2Fui%2Fresolve%2Funresolved_static_type_field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aa58242b287195283cf30533d5d258456ee20005/src%2Ftest%2Fui%2Fresolve%2Funresolved_static_type_field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Funresolved_static_type_field.stderr?ref=aa58242b287195283cf30533d5d258456ee20005", "patch": "@@ -2,10 +2,7 @@ error[E0425]: cannot find value `cx` in this scope\n   --> $DIR/unresolved_static_type_field.rs:9:11\n    |\n LL |         f(cx);\n-   |           ^^\n-   |           |\n-   |           `self` value is a keyword only available in methods with `self` parameter\n-   |           help: try: `self.cx`\n+   |           ^^ a field by this name exists in `Self`\n \n error: aborting due to previous error\n "}]}