{"sha": "b6cecdd4de2824b3f07c2c7126300479037f0b3b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2Y2VjZGQ0ZGUyODI0YjNmMDdjMmM3MTI2MzAwNDc5MDM3ZjBiM2I=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2011-12-28T08:30:04Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2011-12-28T19:19:41Z"}, "message": "libstd: add bytes_reader and bytes_writer\n\nThis parallels nicely with string_reader and string_writer, but\nworking with raw byte strings. I'm not quite sure if the return\ntype for bytes_writer.get_bytes should be [u8] or [mutable u8]\nthough, so I'm arbitrarily picking mutable for now.", "tree": {"sha": "2bf9aef00c49aa44e6ac95736f69b5b9f66283b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2bf9aef00c49aa44e6ac95736f69b5b9f66283b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6cecdd4de2824b3f07c2c7126300479037f0b3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6cecdd4de2824b3f07c2c7126300479037f0b3b", "html_url": "https://github.com/rust-lang/rust/commit/b6cecdd4de2824b3f07c2c7126300479037f0b3b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6cecdd4de2824b3f07c2c7126300479037f0b3b/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f0757c684b11d56519ffe006ce7be891b3eb940", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f0757c684b11d56519ffe006ce7be891b3eb940", "html_url": "https://github.com/rust-lang/rust/commit/1f0757c684b11d56519ffe006ce7be891b3eb940"}], "stats": {"total": 29, "additions": 24, "deletions": 5}, "files": [{"sha": "1928cd4b3d79ef754b54ed0d0ecbf3108456b69c", "filename": "src/libstd/io.rs", "status": "modified", "additions": 24, "deletions": 5, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/b6cecdd4de2824b3f07c2c7126300479037f0b3b/src%2Flibstd%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6cecdd4de2824b3f07c2c7126300479037f0b3b/src%2Flibstd%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio.rs?ref=b6cecdd4de2824b3f07c2c7126300479037f0b3b", "patch": "@@ -242,6 +242,10 @@ fn new_byte_buf_reader(buf: [u8]) -> buf_reader {\n     ret byte_buf_reader(@{buf: buf, mutable pos: 0u});\n }\n \n+fn bytes_reader(bytes: [u8]) -> reader {\n+    ret new_reader(new_byte_buf_reader(bytes));\n+}\n+\n fn string_reader(s: str) -> reader {\n     ret new_reader(new_byte_buf_reader(str::bytes(s)));\n }\n@@ -426,6 +430,12 @@ fn stderr() -> writer { ret new_writer(fd_buf_writer(2i32, option::none)); }\n fn print(s: str) { stdout().write_str(s); }\n fn println(s: str) { stdout().write_str(s + \"\\n\"); }\n \n+type bytes_writer =\n+    obj {\n+        fn get_writer() -> writer;\n+        fn get_bytes() -> [mutable u8];\n+    };\n+\n type str_writer =\n     obj {\n         fn get_writer() -> writer;\n@@ -466,17 +476,26 @@ obj byte_buf_writer(buf: mutable_byte_buf) {\n     fn fsync(_level: fsync::level) -> int { ret 0; }\n }\n \n-fn string_writer() -> str_writer {\n+fn bytes_writer() -> bytes_writer {\n     // FIXME: yikes, this is bad. Needs fixing of mutable syntax.\n \n     let b: [mutable u8] = [mutable 0u8];\n     vec::pop(b);\n-    let buf: mutable_byte_buf = @{mutable buf: b, mutable pos: 0u};\n-    obj str_writer_wrap(wr: writer, buf: mutable_byte_buf) {\n+    let buf = @{mutable buf: b, mutable pos: 0u};\n+    obj byte_buf_writer_wrap(wr: writer, buf: mutable_byte_buf) {\n         fn get_writer() -> writer { ret wr; }\n-        fn get_str() -> str { ret str::unsafe_from_bytes(buf.buf); }\n+        fn get_bytes() -> [mutable u8] { ret buf.buf; }\n+    }\n+    ret byte_buf_writer_wrap(new_writer(byte_buf_writer(buf)), buf);\n+}\n+\n+fn string_writer() -> str_writer {\n+    let writer = bytes_writer();\n+    obj str_writer_wrap(wr: bytes_writer) {\n+        fn get_writer() -> writer { wr.get_writer() }\n+        fn get_str() -> str { str::unsafe_from_bytes(wr.get_bytes()) }\n     }\n-    ret str_writer_wrap(new_writer(byte_buf_writer(buf)), buf);\n+    str_writer_wrap(writer)\n }\n \n "}]}