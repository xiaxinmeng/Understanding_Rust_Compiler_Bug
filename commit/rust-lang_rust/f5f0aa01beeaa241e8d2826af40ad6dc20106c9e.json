{"sha": "f5f0aa01beeaa241e8d2826af40ad6dc20106c9e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1ZjBhYTAxYmVlYWEyNDFlOGQyODI2YWY0MGFkNmRjMjAxMDZjOWU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-01-22T05:01:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-01-22T05:01:44Z"}, "message": "Merge pull request #2390 from topecongiro/rustup\n\nRustup to rustc 1.25.0-nightly (97520ccb1 2018-01-21)", "tree": {"sha": "4949938f704f4ab108449785f8588a2e8b0b02f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4949938f704f4ab108449785f8588a2e8b0b02f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5f0aa01beeaa241e8d2826af40ad6dc20106c9e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaZXA4CRBK7hj4Ov3rIwAAdHIIAEzesNvXMbhCm0IniO6tvheQ\ngg2lymvueoawciVbVhg8XvavrVbEyr9r1F1UN04JKAEVONmGyiwHzav7o8rm5IKP\ngwnkkUWd6VGhgSTMWhTd3EXpQokeRC+sOKR78QOfzGMXEbr3nLAmkeqfB1k5vNFj\nWSrHbJ0ulWvw3t8dY05L6DtjR/+XIMfMzo+tekUkrDis2SqX4O61anNGLaKgvhQP\nso2lP5aItUaVen3gjnHX70ZsP41HGiEX9vholHHvvM8YGmIlEOZNMXV/1OgXWPZH\nm6wKyyPnkcCFgAQwPK4rXODkXaD8nJZaibXJQzXj0HfnRM3dAEVHhM9c7kMEtI4=\n=iwUS\n-----END PGP SIGNATURE-----\n", "payload": "tree 4949938f704f4ab108449785f8588a2e8b0b02f8\nparent 5b9444e82163e1254cafbd7730f49d5bd5a34118\nparent a2fec0e3e3a43554ea83977cb8d99f10cd56759d\nauthor Manish Goregaokar <manishsmail@gmail.com> 1516597304 +0530\ncommitter GitHub <noreply@github.com> 1516597304 +0530\n\nMerge pull request #2390 from topecongiro/rustup\n\nRustup to rustc 1.25.0-nightly (97520ccb1 2018-01-21)"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5f0aa01beeaa241e8d2826af40ad6dc20106c9e", "html_url": "https://github.com/rust-lang/rust/commit/f5f0aa01beeaa241e8d2826af40ad6dc20106c9e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5f0aa01beeaa241e8d2826af40ad6dc20106c9e/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b9444e82163e1254cafbd7730f49d5bd5a34118", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b9444e82163e1254cafbd7730f49d5bd5a34118", "html_url": "https://github.com/rust-lang/rust/commit/5b9444e82163e1254cafbd7730f49d5bd5a34118"}, {"sha": "a2fec0e3e3a43554ea83977cb8d99f10cd56759d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2fec0e3e3a43554ea83977cb8d99f10cd56759d", "html_url": "https://github.com/rust-lang/rust/commit/a2fec0e3e3a43554ea83977cb8d99f10cd56759d"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "7e0a82188f9e2eb700e77884f6afe35759c986f1", "filename": "src/driver.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f5f0aa01beeaa241e8d2826af40ad6dc20106c9e/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5f0aa01beeaa241e8d2826af40ad6dc20106c9e/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=f5f0aa01beeaa241e8d2826af40ad6dc20106c9e", "patch": "@@ -9,9 +9,11 @@ extern crate rustc;\n extern crate rustc_driver;\n extern crate rustc_errors;\n extern crate rustc_plugin;\n+extern crate rustc_trans_utils;\n extern crate syntax;\n \n use rustc_driver::{driver, Compilation, CompilerCalls, RustcDefaultCalls};\n+use rustc_trans_utils::trans_crate::TransCrate;\n use rustc::session::{config, Session};\n use rustc::session::config::{ErrorOutputType, Input};\n use std::path::PathBuf;\n@@ -58,6 +60,7 @@ impl<'a> CompilerCalls<'a> for ClippyCompilerCalls {\n     }\n     fn late_callback(\n         &mut self,\n+        trans_crate: &TransCrate,\n         matches: &getopts::Matches,\n         sess: &Session,\n         crate_stores: &rustc::middle::cstore::CrateStore,\n@@ -66,7 +69,7 @@ impl<'a> CompilerCalls<'a> for ClippyCompilerCalls {\n         ofile: &Option<PathBuf>,\n     ) -> Compilation {\n         self.default\n-            .late_callback(matches, sess, crate_stores, input, odir, ofile)\n+            .late_callback(trans_crate, matches, sess, crate_stores, input, odir, ofile)\n     }\n     fn build_controller(&mut self, sess: &Session, matches: &getopts::Matches) -> driver::CompileController<'a> {\n         let mut control = self.default.build_controller(sess, matches);"}]}