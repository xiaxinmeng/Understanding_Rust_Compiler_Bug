{"sha": "ca3daa0fb69127ed75e79f8e97b5854288b12d51", "node_id": "C_kwDOAAsO6NoAKGNhM2RhYTBmYjY5MTI3ZWQ3NWU3OWY4ZTk3YjU4NTQyODhiMTJkNTE", "commit": {"author": {"name": "Joshua Nelson", "email": "github@jyn.dev", "date": "2023-04-09T20:19:03Z"}, "committer": {"name": "Joshua Nelson", "email": "github@jyn.dev", "date": "2023-04-11T03:30:07Z"}, "message": "Fix `x check --stage 1` when `download-ci-llvm=false`", "tree": {"sha": "53a0c5b66e2ff77f538ae5fb58567f60a8799c48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53a0c5b66e2ff77f538ae5fb58567f60a8799c48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca3daa0fb69127ed75e79f8e97b5854288b12d51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca3daa0fb69127ed75e79f8e97b5854288b12d51", "html_url": "https://github.com/rust-lang/rust/commit/ca3daa0fb69127ed75e79f8e97b5854288b12d51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca3daa0fb69127ed75e79f8e97b5854288b12d51/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb927968cc3dd76353dcc9627dd5eca6ac07bf31", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb927968cc3dd76353dcc9627dd5eca6ac07bf31", "html_url": "https://github.com/rust-lang/rust/commit/fb927968cc3dd76353dcc9627dd5eca6ac07bf31"}], "stats": {"total": 46, "additions": 24, "deletions": 22}, "files": [{"sha": "44efc502e39d48e96560bfc423c0671a5a33af23", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca3daa0fb69127ed75e79f8e97b5854288b12d51/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca3daa0fb69127ed75e79f8e97b5854288b12d51/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=ca3daa0fb69127ed75e79f8e97b5854288b12d51", "patch": "@@ -237,7 +237,7 @@ impl Step for Rustc {\n             target,\n             cargo_subcommand(builder.kind),\n         );\n-        rustc_cargo(builder, &mut cargo, target);\n+        rustc_cargo(builder, &mut cargo, target, compiler.stage);\n \n         // For ./x.py clippy, don't run with --all-targets because\n         // linting tests and benchmarks can produce very noisy results\n@@ -315,7 +315,7 @@ impl Step for CodegenBackend {\n         cargo\n             .arg(\"--manifest-path\")\n             .arg(builder.src.join(format!(\"compiler/rustc_codegen_{}/Cargo.toml\", backend)));\n-        rustc_cargo_env(builder, &mut cargo, target);\n+        rustc_cargo_env(builder, &mut cargo, target, compiler.stage);\n \n         let msg = if compiler.host == target {\n             format!(\"Checking stage{} {} artifacts ({target})\", builder.top_stage, backend)"}, {"sha": "2e91b968d1cb517ebadbc018123a303c167df314", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 20, "deletions": 18, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/ca3daa0fb69127ed75e79f8e97b5854288b12d51/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca3daa0fb69127ed75e79f8e97b5854288b12d51/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=ca3daa0fb69127ed75e79f8e97b5854288b12d51", "patch": "@@ -696,7 +696,7 @@ impl Step for Rustc {\n         ));\n \n         let mut cargo = builder.cargo(compiler, Mode::Rustc, SourceType::InTree, target, \"build\");\n-        rustc_cargo(builder, &mut cargo, target);\n+        rustc_cargo(builder, &mut cargo, target, compiler.stage);\n \n         if builder.config.rust_profile_use.is_some()\n             && builder.config.rust_profile_generate.is_some()\n@@ -813,16 +813,21 @@ impl Step for Rustc {\n     }\n }\n \n-pub fn rustc_cargo(builder: &Builder<'_>, cargo: &mut Cargo, target: TargetSelection) {\n+pub fn rustc_cargo(builder: &Builder<'_>, cargo: &mut Cargo, target: TargetSelection, stage: u32) {\n     cargo\n         .arg(\"--features\")\n         .arg(builder.rustc_features(builder.kind))\n         .arg(\"--manifest-path\")\n         .arg(builder.src.join(\"compiler/rustc/Cargo.toml\"));\n-    rustc_cargo_env(builder, cargo, target);\n+    rustc_cargo_env(builder, cargo, target, stage);\n }\n \n-pub fn rustc_cargo_env(builder: &Builder<'_>, cargo: &mut Cargo, target: TargetSelection) {\n+pub fn rustc_cargo_env(\n+    builder: &Builder<'_>,\n+    cargo: &mut Cargo,\n+    target: TargetSelection,\n+    stage: u32,\n+) {\n     // Set some configuration variables picked up by build scripts and\n     // the compiler alike\n     cargo\n@@ -867,16 +872,18 @@ pub fn rustc_cargo_env(builder: &Builder<'_>, cargo: &mut Cargo, target: TargetS\n         cargo.env(\"RUSTC_VERIFY_LLVM_IR\", \"1\");\n     }\n \n-    //\n     // Note that this is disabled if LLVM itself is disabled or we're in a check\n     // build. If we are in a check build we still go ahead here presuming we've\n     // detected that LLVM is already built and good to go which helps prevent\n     // busting caches (e.g. like #71152).\n-    if builder.config.llvm_enabled()\n-        && (builder.kind != Kind::Check\n-            || crate::llvm::prebuilt_llvm_config(builder, target).is_ok())\n-    {\n-        rustc_llvm_env(builder, cargo, target)\n+    if builder.config.llvm_enabled() {\n+        let building_is_expensive = crate::llvm::prebuilt_llvm_config(builder, target).is_err();\n+        // `top_stage == stage` might be false for `check --stage 1`, if we are building the stage 1 compiler\n+        let can_skip_build = builder.kind == Kind::Check && builder.top_stage == stage;\n+        let should_skip_build = building_is_expensive && can_skip_build;\n+        if !should_skip_build {\n+            rustc_llvm_env(builder, cargo, target)\n+        }\n     }\n }\n \n@@ -933,13 +940,8 @@ fn rustc_llvm_env(builder: &Builder<'_>, cargo: &mut Cargo, target: TargetSelect\n         && !target.contains(\"apple\")\n         && !target.contains(\"solaris\")\n     {\n-        let file = compiler_file(\n-            builder,\n-            builder.cxx(target).unwrap(),\n-            target,\n-            CLang::Cxx,\n-            \"libstdc++.a\",\n-        );\n+        let file =\n+            compiler_file(builder, builder.cxx(target).unwrap(), target, CLang::Cxx, \"libstdc++.a\");\n         cargo.env(\"LLVM_STATIC_STDCPP\", file);\n     }\n     if builder.llvm_link_shared() {\n@@ -1054,7 +1056,7 @@ impl Step for CodegenBackend {\n         cargo\n             .arg(\"--manifest-path\")\n             .arg(builder.src.join(format!(\"compiler/rustc_codegen_{}/Cargo.toml\", backend)));\n-        rustc_cargo_env(builder, &mut cargo, target);\n+        rustc_cargo_env(builder, &mut cargo, target, compiler.stage);\n \n         let tmp_stamp = out_dir.join(\".tmp.stamp\");\n "}, {"sha": "9ad98eb57022c968565b54ca6fd12c6fcbdde68d", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca3daa0fb69127ed75e79f8e97b5854288b12d51/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca3daa0fb69127ed75e79f8e97b5854288b12d51/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=ca3daa0fb69127ed75e79f8e97b5854288b12d51", "patch": "@@ -696,7 +696,7 @@ impl Step for Rustc {\n         cargo.rustdocflag(\"-Znormalize-docs\");\n         cargo.rustdocflag(\"--show-type-layout\");\n         cargo.rustdocflag(\"--generate-link-to-definition\");\n-        compile::rustc_cargo(builder, &mut cargo, target);\n+        compile::rustc_cargo(builder, &mut cargo, target, compiler.stage);\n         cargo.arg(\"-Zunstable-options\");\n         cargo.arg(\"-Zskip-rustdoc-fingerprint\");\n "}, {"sha": "03f20a3390acfdfcaf2a39a99b99739595693292", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca3daa0fb69127ed75e79f8e97b5854288b12d51/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca3daa0fb69127ed75e79f8e97b5854288b12d51/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=ca3daa0fb69127ed75e79f8e97b5854288b12d51", "patch": "@@ -2143,7 +2143,7 @@ impl Step for Crate {\n                 compile::std_cargo(builder, target, compiler.stage, &mut cargo);\n             }\n             Mode::Rustc => {\n-                compile::rustc_cargo(builder, &mut cargo, target);\n+                compile::rustc_cargo(builder, &mut cargo, target, compiler.stage);\n             }\n             _ => panic!(\"can only test libraries\"),\n         };"}]}