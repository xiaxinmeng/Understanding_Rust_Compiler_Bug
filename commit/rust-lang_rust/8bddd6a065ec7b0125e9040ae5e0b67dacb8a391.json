{"sha": "8bddd6a065ec7b0125e9040ae5e0b67dacb8a391", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiZGRkNmEwNjVlYzdiMDEyNWU5MDQwYWU1ZTBiNjdkYWNiOGEzOTE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-09-16T11:49:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-09-16T11:49:01Z"}, "message": "Merge pull request #344 from RalfJung/test\n\nget rid of the --miri_host_target hack", "tree": {"sha": "b418e4b9983e73c663aa83121bdfa55e9ee4f724", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b418e4b9983e73c663aa83121bdfa55e9ee4f724"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8bddd6a065ec7b0125e9040ae5e0b67dacb8a391", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8bddd6a065ec7b0125e9040ae5e0b67dacb8a391", "html_url": "https://github.com/rust-lang/rust/commit/8bddd6a065ec7b0125e9040ae5e0b67dacb8a391", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8bddd6a065ec7b0125e9040ae5e0b67dacb8a391/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "605c82be7a9624e9a5d4f71b6f3ae4fbad8ca001", "url": "https://api.github.com/repos/rust-lang/rust/commits/605c82be7a9624e9a5d4f71b6f3ae4fbad8ca001", "html_url": "https://github.com/rust-lang/rust/commit/605c82be7a9624e9a5d4f71b6f3ae4fbad8ca001"}, {"sha": "5a5aa49db7db969f456bac7bf8c4533b09fc887e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a5aa49db7db969f456bac7bf8c4533b09fc887e", "html_url": "https://github.com/rust-lang/rust/commit/5a5aa49db7db969f456bac7bf8c4533b09fc887e"}], "stats": {"total": 19, "additions": 3, "deletions": 16}, "files": [{"sha": "d38f63610a0e00f9a5b50003e0d9a7ea4b70f66f", "filename": "miri/bin/miri.rs", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8bddd6a065ec7b0125e9040ae5e0b67dacb8a391/miri%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bddd6a065ec7b0125e9040ae5e0b67dacb8a391/miri%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri%2Fbin%2Fmiri.rs?ref=8bddd6a065ec7b0125e9040ae5e0b67dacb8a391", "patch": "@@ -22,8 +22,6 @@ use std::path::PathBuf;\n \n struct MiriCompilerCalls {\n     default: RustcDefaultCalls,\n-    /// whether we are building for the host\n-    host_target: bool,\n }\n \n impl<'a> CompilerCalls<'a> for MiriCompilerCalls {\n@@ -80,8 +78,8 @@ impl<'a> CompilerCalls<'a> for MiriCompilerCalls {\n         let mut control = self.default.build_controller(sess, matches);\n         control.after_hir_lowering.callback = Box::new(after_hir_lowering);\n         control.after_analysis.callback = Box::new(after_analysis);\n-        if !self.host_target {\n-            // only fully compile targets on the host\n+        if sess.target.target != sess.host {\n+            // only fully compile targets on the host. linking will fail for cross-compilation.\n             control.after_analysis.stop = Compilation::Stop;\n         }\n         control\n@@ -258,18 +256,10 @@ fn main() {\n         args.push(find_sysroot());\n     }\n \n-    // for auxilary builds in unit tests\n+    // Make sure we always have all the MIR (e.g. for auxilary builds in unit tests).\n     args.push(\"-Zalways-encode-mir\".to_owned());\n-    let mut host_target = false;\n-    args.retain(|arg| if arg == \"--miri_host_target\" {\n-        host_target = true;\n-        false // remove the flag, rustc doesn't know it\n-    } else {\n-        true\n-    });\n \n     rustc_driver::run_compiler(&args, &mut MiriCompilerCalls {\n         default: RustcDefaultCalls,\n-        host_target,\n     }, None, None);\n }"}, {"sha": "f0849af00ea3383c1bf0cd1dbd6bddfbfbba082b", "filename": "tests/compiletest.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8bddd6a065ec7b0125e9040ae5e0b67dacb8a391/tests%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bddd6a065ec7b0125e9040ae5e0b67dacb8a391/tests%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompiletest.rs?ref=8bddd6a065ec7b0125e9040ae5e0b67dacb8a391", "patch": "@@ -122,9 +122,6 @@ fn miri_pass(path: &str, target: &str, host: &str, fullmir: bool, opt: bool) {\n         // For now, only validate without optimizations.  Inlining breaks validation.\n         flags.push(\"-Zmir-emit-validate=1\".to_owned());\n     }\n-    if target == host {\n-        flags.push(\"--miri_host_target\".to_owned());\n-    }\n     config.target_rustcflags = Some(flags.join(\" \"));\n     compiletest::run_tests(&config);\n }"}]}