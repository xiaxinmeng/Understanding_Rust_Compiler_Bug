{"sha": "cd69d86c89a5f230f799ae4a52d2a0f6a9fdec45", "node_id": "C_kwDOAAsO6NoAKGNkNjlkODZjODlhNWYyMzBmNzk5YWU0YTUyZDJhMGY2YTlmZGVjNDU", "commit": {"author": {"name": "kraktus", "email": "kraktus@users.noreply.github.com", "date": "2022-09-10T08:30:19Z"}, "committer": {"name": "kraktus", "email": "kraktus@users.noreply.github.com", "date": "2022-09-10T08:30:19Z"}, "message": "`assertions_on_result_states` fix suggestion when `assert!` not in a statement", "tree": {"sha": "d8293d705b2c7c7811aff821deb0fb65d4c57561", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8293d705b2c7c7811aff821deb0fb65d4c57561"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd69d86c89a5f230f799ae4a52d2a0f6a9fdec45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd69d86c89a5f230f799ae4a52d2a0f6a9fdec45", "html_url": "https://github.com/rust-lang/rust/commit/cd69d86c89a5f230f799ae4a52d2a0f6a9fdec45", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd69d86c89a5f230f799ae4a52d2a0f6a9fdec45/comments", "author": {"login": "kraktus", "id": 56031107, "node_id": "MDQ6VXNlcjU2MDMxMTA3", "avatar_url": "https://avatars.githubusercontent.com/u/56031107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kraktus", "html_url": "https://github.com/kraktus", "followers_url": "https://api.github.com/users/kraktus/followers", "following_url": "https://api.github.com/users/kraktus/following{/other_user}", "gists_url": "https://api.github.com/users/kraktus/gists{/gist_id}", "starred_url": "https://api.github.com/users/kraktus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kraktus/subscriptions", "organizations_url": "https://api.github.com/users/kraktus/orgs", "repos_url": "https://api.github.com/users/kraktus/repos", "events_url": "https://api.github.com/users/kraktus/events{/privacy}", "received_events_url": "https://api.github.com/users/kraktus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kraktus", "id": 56031107, "node_id": "MDQ6VXNlcjU2MDMxMTA3", "avatar_url": "https://avatars.githubusercontent.com/u/56031107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kraktus", "html_url": "https://github.com/kraktus", "followers_url": "https://api.github.com/users/kraktus/followers", "following_url": "https://api.github.com/users/kraktus/following{/other_user}", "gists_url": "https://api.github.com/users/kraktus/gists{/gist_id}", "starred_url": "https://api.github.com/users/kraktus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kraktus/subscriptions", "organizations_url": "https://api.github.com/users/kraktus/orgs", "repos_url": "https://api.github.com/users/kraktus/repos", "events_url": "https://api.github.com/users/kraktus/events{/privacy}", "received_events_url": "https://api.github.com/users/kraktus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5652ccbc0ff4e3895caca34a147db04c40d734c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/5652ccbc0ff4e3895caca34a147db04c40d734c6", "html_url": "https://github.com/rust-lang/rust/commit/5652ccbc0ff4e3895caca34a147db04c40d734c6"}], "stats": {"total": 33, "additions": 27, "deletions": 6}, "files": [{"sha": "63664d66662b5a103c3c2ae810135e484746e166", "filename": "clippy_lints/src/assertions_on_result_states.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/cd69d86c89a5f230f799ae4a52d2a0f6a9fdec45/clippy_lints%2Fsrc%2Fassertions_on_result_states.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd69d86c89a5f230f799ae4a52d2a0f6a9fdec45/clippy_lints%2Fsrc%2Fassertions_on_result_states.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassertions_on_result_states.rs?ref=cd69d86c89a5f230f799ae4a52d2a0f6a9fdec45", "patch": "@@ -1,9 +1,9 @@\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::macros::{find_assert_args, root_macro_call_first_node, PanicExpn};\n-use clippy_utils::path_res;\n use clippy_utils::source::snippet_with_context;\n use clippy_utils::ty::{implements_trait, is_copy, is_type_diagnostic_item};\n use clippy_utils::usage::local_used_after_expr;\n+use clippy_utils::{is_expr_final_block_expr, path_res};\n use rustc_errors::Applicability;\n use rustc_hir::def::Res;\n use rustc_hir::{Expr, ExprKind};\n@@ -58,6 +58,7 @@ impl<'tcx> LateLintPass<'tcx> for AssertionsOnResultStates {\n                     return;\n                 }\n             }\n+            let semicolon = if is_expr_final_block_expr(cx.tcx, e) {\";\"} else {\"\"};\n             let mut app = Applicability::MachineApplicable;\n             match method_segment.ident.as_str() {\n                 \"is_ok\" if type_suitable_to_unwrap(cx, substs.type_at(1)) => {\n@@ -68,8 +69,9 @@ impl<'tcx> LateLintPass<'tcx> for AssertionsOnResultStates {\n                         \"called `assert!` with `Result::is_ok`\",\n                         \"replace with\",\n                         format!(\n-                            \"{}.unwrap()\",\n-                            snippet_with_context(cx, recv.span, condition.span.ctxt(), \"..\", &mut app).0\n+                            \"{}.unwrap(){}\",\n+                            snippet_with_context(cx, recv.span, condition.span.ctxt(), \"..\", &mut app).0,\n+                            semicolon\n                         ),\n                         app,\n                     );\n@@ -82,8 +84,9 @@ impl<'tcx> LateLintPass<'tcx> for AssertionsOnResultStates {\n                         \"called `assert!` with `Result::is_err`\",\n                         \"replace with\",\n                         format!(\n-                            \"{}.unwrap_err()\",\n-                            snippet_with_context(cx, recv.span, condition.span.ctxt(), \"..\", &mut app).0\n+                            \"{}.unwrap_err(){}\",\n+                            snippet_with_context(cx, recv.span, condition.span.ctxt(), \"..\", &mut app).0,\n+                            semicolon\n                         ),\n                         app,\n                     );"}, {"sha": "2bb755290c508b812c6c6ce4a7b53fae5a47f521", "filename": "tests/ui/assertions_on_result_states.fixed", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cd69d86c89a5f230f799ae4a52d2a0f6a9fdec45/tests%2Fui%2Fassertions_on_result_states.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/cd69d86c89a5f230f799ae4a52d2a0f6a9fdec45/tests%2Fui%2Fassertions_on_result_states.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassertions_on_result_states.fixed?ref=cd69d86c89a5f230f799ae4a52d2a0f6a9fdec45", "patch": "@@ -75,3 +75,9 @@ fn main() {\n     let r: Result<Foo, Foo> = Err(Foo);\n     assert!(r.is_err());\n }\n+\n+#[allow(dead_code)]\n+fn issue9450() {\n+    let res: Result<i32, i32> = Ok(1);\n+    res.unwrap_err();\n+}"}, {"sha": "d8a9bd2f1c45576e191d3d02cf71deeb7cd8a8a3", "filename": "tests/ui/assertions_on_result_states.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cd69d86c89a5f230f799ae4a52d2a0f6a9fdec45/tests%2Fui%2Fassertions_on_result_states.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd69d86c89a5f230f799ae4a52d2a0f6a9fdec45/tests%2Fui%2Fassertions_on_result_states.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassertions_on_result_states.rs?ref=cd69d86c89a5f230f799ae4a52d2a0f6a9fdec45", "patch": "@@ -75,3 +75,9 @@ fn main() {\n     let r: Result<Foo, Foo> = Err(Foo);\n     assert!(r.is_err());\n }\n+\n+#[allow(dead_code)]\n+fn issue9450() {\n+    let res: Result<i32, i32> = Ok(1);\n+    assert!(res.is_err())\n+}"}, {"sha": "298d63c9c34fb38fc0a304b7aeb09c07db15cdcb", "filename": "tests/ui/assertions_on_result_states.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cd69d86c89a5f230f799ae4a52d2a0f6a9fdec45/tests%2Fui%2Fassertions_on_result_states.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cd69d86c89a5f230f799ae4a52d2a0f6a9fdec45/tests%2Fui%2Fassertions_on_result_states.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassertions_on_result_states.stderr?ref=cd69d86c89a5f230f799ae4a52d2a0f6a9fdec45", "patch": "@@ -36,5 +36,11 @@ error: called `assert!` with `Result::is_err`\n LL |     assert!(r.is_err());\n    |     ^^^^^^^^^^^^^^^^^^^ help: replace with: `r.unwrap_err()`\n \n-error: aborting due to 6 previous errors\n+error: called `assert!` with `Result::is_err`\n+  --> $DIR/assertions_on_result_states.rs:82:5\n+   |\n+LL |     assert!(res.is_err())\n+   |     ^^^^^^^^^^^^^^^^^^^^^ help: replace with: `res.unwrap_err();`\n+\n+error: aborting due to 7 previous errors\n "}]}