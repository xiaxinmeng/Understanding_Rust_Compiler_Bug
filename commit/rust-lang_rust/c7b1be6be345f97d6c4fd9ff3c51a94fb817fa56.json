{"sha": "c7b1be6be345f97d6c4fd9ff3c51a94fb817fa56", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3YjFiZTZiZTM0NWY5N2Q2YzRmZDlmZjNjNTFhOTRmYjgxN2ZhNTY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-17T19:03:55Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-17T19:03:55Z"}, "message": "Owned", "tree": {"sha": "123b895ad8b2797b3b6ebcceebd36fb375ec7a38", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/123b895ad8b2797b3b6ebcceebd36fb375ec7a38"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7b1be6be345f97d6c4fd9ff3c51a94fb817fa56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7b1be6be345f97d6c4fd9ff3c51a94fb817fa56", "html_url": "https://github.com/rust-lang/rust/commit/c7b1be6be345f97d6c4fd9ff3c51a94fb817fa56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7b1be6be345f97d6c4fd9ff3c51a94fb817fa56/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3c90ded2b9a4f75e101fa3abc60cd3aebc439c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3c90ded2b9a4f75e101fa3abc60cd3aebc439c9", "html_url": "https://github.com/rust-lang/rust/commit/d3c90ded2b9a4f75e101fa3abc60cd3aebc439c9"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "171e406921ee792585a48c0fa697c8f838a37824", "filename": "crates/libeditor/src/extend_selection.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c7b1be6be345f97d6c4fd9ff3c51a94fb817fa56/crates%2Flibeditor%2Fsrc%2Fextend_selection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7b1be6be345f97d6c4fd9ff3c51a94fb817fa56/crates%2Flibeditor%2Fsrc%2Fextend_selection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Fsrc%2Fextend_selection.rs?ref=c7b1be6be345f97d6c4fd9ff3c51a94fb817fa56", "patch": "@@ -6,7 +6,7 @@ use libsyntax2::{\n \n pub fn extend_selection(file: &ParsedFile, range: TextRange) -> Option<TextRange> {\n     let syntax = file.syntax();\n-    extend(syntax.as_ref(), range)\n+    extend(syntax.borrowed(), range)\n }\n \n pub(crate) fn extend(root: SyntaxNodeRef, range: TextRange) -> Option<TextRange> {"}, {"sha": "5b9a07db4d089d04ff5d53fe4c9ce976be1196e5", "filename": "crates/libsyntax2/src/ast/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c7b1be6be345f97d6c4fd9ff3c51a94fb817fa56/crates%2Flibsyntax2%2Fsrc%2Fast%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7b1be6be345f97d6c4fd9ff3c51a94fb817fa56/crates%2Flibsyntax2%2Fsrc%2Fast%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fast%2Fmod.rs?ref=c7b1be6be345f97d6c4fd9ff3c51a94fb817fa56", "patch": "@@ -46,7 +46,7 @@ impl ParsedFile {\n         File::cast(self.syntax()).unwrap()\n     }\n     pub fn syntax(&self) -> SyntaxNodeRef {\n-        self.root.as_ref()\n+        self.root.borrowed()\n     }\n     pub fn errors(&self) -> Vec<SyntaxError> {\n         self.syntax().root.syntax_root().errors.clone()"}, {"sha": "8f1b1d79ac47b612aeb08359454ddca785238214", "filename": "crates/libsyntax2/src/yellow/syntax.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c7b1be6be345f97d6c4fd9ff3c51a94fb817fa56/crates%2Flibsyntax2%2Fsrc%2Fyellow%2Fsyntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7b1be6be345f97d6c4fd9ff3c51a94fb817fa56/crates%2Flibsyntax2%2Fsrc%2Fyellow%2Fsyntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fyellow%2Fsyntax.rs?ref=c7b1be6be345f97d6c4fd9ff3c51a94fb817fa56", "patch": "@@ -51,13 +51,20 @@ impl SyntaxNode<OwnedRoot> {\n }\n \n impl<R: TreeRoot> SyntaxNode<R> {\n-    pub fn as_ref<'a>(&'a self) -> SyntaxNode<RefRoot<'a>> {\n+    pub fn borrowed<'a>(&'a self) -> SyntaxNodeRef<'a> {\n         SyntaxNode {\n             root: self.root.borrowed(),\n             red: self.red,\n         }\n     }\n \n+    pub fn owned<'a>(&'a self) -> SyntaxNode {\n+        SyntaxNode {\n+            root: self.root.owned(),\n+            red: self.red,\n+        }\n+    }\n+\n     pub fn kind(&self) -> SyntaxKind {\n         self.red().green().kind()\n     }"}, {"sha": "7e5dc32d92a64603e5cfa9c202e04a415f554bf5", "filename": "crates/libsyntax2/tests/test/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c7b1be6be345f97d6c4fd9ff3c51a94fb817fa56/crates%2Flibsyntax2%2Ftests%2Ftest%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7b1be6be345f97d6c4fd9ff3c51a94fb817fa56/crates%2Flibsyntax2%2Ftests%2Ftest%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Ftest%2Fmain.rs?ref=c7b1be6be345f97d6c4fd9ff3c51a94fb817fa56", "patch": "@@ -21,7 +21,7 @@ fn lexer_tests() {\n fn parser_tests() {\n     dir_tests(&[\"parser/inline\", \"parser/ok\", \"parser/err\"], |text| {\n         let file = libsyntax2::parse(text);\n-        libsyntax2::utils::dump_tree(file.as_ref())\n+        libsyntax2::utils::dump_tree(file.borrowed())\n     })\n }\n "}]}