{"sha": "52d7246a9368048154b9cb666f4b7a79377bd17d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyZDcyNDZhOTM2ODA0ODE1NGI5Y2I2NjZmNGI3YTc5Mzc3YmQxN2Q=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-16T08:27:06Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-16T08:29:26Z"}, "message": "miri panic_unwind: fix hack for SEH platforms", "tree": {"sha": "8a5b469d888ea691e0fb4766ca77a9aa2ac0cb5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a5b469d888ea691e0fb4766ca77a9aa2ac0cb5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52d7246a9368048154b9cb666f4b7a79377bd17d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52d7246a9368048154b9cb666f4b7a79377bd17d", "html_url": "https://github.com/rust-lang/rust/commit/52d7246a9368048154b9cb666f4b7a79377bd17d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52d7246a9368048154b9cb666f4b7a79377bd17d/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "065e1b8d8a68efeaaa4eb603e66fc937ae12b1b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/065e1b8d8a68efeaaa4eb603e66fc937ae12b1b0", "html_url": "https://github.com/rust-lang/rust/commit/065e1b8d8a68efeaaa4eb603e66fc937ae12b1b0"}], "stats": {"total": 31, "additions": 25, "deletions": 6}, "files": [{"sha": "d97a7a8a87d8d20ae244cc0585d9614e6bd6218f", "filename": "src/libpanic_unwind/lib.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/52d7246a9368048154b9cb666f4b7a79377bd17d/src%2Flibpanic_unwind%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52d7246a9368048154b9cb666f4b7a79377bd17d/src%2Flibpanic_unwind%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibpanic_unwind%2Flib.rs?ref=52d7246a9368048154b9cb666f4b7a79377bd17d", "patch": "@@ -39,11 +39,6 @@ cfg_if::cfg_if! {\n     if #[cfg(miri)] {\n         #[path = \"miri.rs\"]\n         mod imp;\n-        // On MSVC we need the SEH lang items as well...\n-        // This should match the conditions of the `seh.rs` import below.\n-        #[cfg(all(target_env = \"msvc\", not(target_arch = \"aarch64\")))]\n-        #[allow(unused)]\n-        mod seh;\n     } else if #[cfg(target_os = \"emscripten\")] {\n         #[path = \"emcc.rs\"]\n         mod imp;"}, {"sha": "7fdbf46ea487def2da2d77f096c66d2159db21aa", "filename": "src/libpanic_unwind/miri.rs", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/52d7246a9368048154b9cb666f4b7a79377bd17d/src%2Flibpanic_unwind%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52d7246a9368048154b9cb666f4b7a79377bd17d/src%2Flibpanic_unwind%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibpanic_unwind%2Fmiri.rs?ref=52d7246a9368048154b9cb666f4b7a79377bd17d", "patch": "@@ -1,3 +1,5 @@\n+#![allow(nonstandard_style)]\n+\n use core::any::Any;\n use alloc::boxed::Box;\n \n@@ -13,11 +15,33 @@ pub unsafe fn cleanup(ptr: *mut u8) -> Box<dyn Any + Send> {\n     Box::from_raw(ptr)\n }\n \n-\n // This is required by the compiler to exist (e.g., it's a lang item),\n // but is never used by Miri. Therefore, we just use a stub here\n #[lang = \"eh_personality\"]\n #[cfg(not(test))]\n fn rust_eh_personality() {\n     unsafe { core::intrinsics::abort() }\n }\n+\n+// The rest is required on *some* targets to exist (specifically, MSVC targets that use SEH).\n+// We just add it on all targets. Copied from `seh.rs`.\n+#[repr(C)]\n+pub struct _TypeDescriptor {\n+    pub pVFTable: *const u8,\n+    pub spare: *mut u8,\n+    pub name: [u8; 11],\n+}\n+\n+extern \"C\" {\n+    #[link_name = \"\\x01??_7type_info@@6B@\"]\n+    static TYPE_INFO_VTABLE: *const u8;\n+}\n+\n+const TYPE_NAME: [u8; 11] = *b\"rust_panic\\0\";\n+\n+#[cfg_attr(not(test), lang = \"eh_catch_typeinfo\")]\n+static mut TYPE_DESCRIPTOR: _TypeDescriptor = _TypeDescriptor {\n+    pVFTable: unsafe { &TYPE_INFO_VTABLE } as *const _ as *const _,\n+    spare: core::ptr::null_mut(),\n+    name: TYPE_NAME,\n+};"}]}