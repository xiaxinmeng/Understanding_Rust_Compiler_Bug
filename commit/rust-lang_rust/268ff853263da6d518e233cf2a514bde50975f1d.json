{"sha": "268ff853263da6d518e233cf2a514bde50975f1d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2OGZmODUzMjYzZGE2ZDUxOGUyMzNjZjJhNTE0YmRlNTA5NzVmMWQ=", "commit": {"author": {"name": "rhysd", "email": "lin90162@yahoo.co.jp", "date": "2019-02-01T19:52:21Z"}, "committer": {"name": "rhysd", "email": "lin90162@yahoo.co.jp", "date": "2019-02-01T19:52:21Z"}, "message": "use span_help_and_lint() instead of span_lint_and_sugg()", "tree": {"sha": "38a3ec4cacfd4b2fff3575689d222c0a9b88f8e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38a3ec4cacfd4b2fff3575689d222c0a9b88f8e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/268ff853263da6d518e233cf2a514bde50975f1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/268ff853263da6d518e233cf2a514bde50975f1d", "html_url": "https://github.com/rust-lang/rust/commit/268ff853263da6d518e233cf2a514bde50975f1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/268ff853263da6d518e233cf2a514bde50975f1d/comments", "author": {"login": "rhysd", "id": 823277, "node_id": "MDQ6VXNlcjgyMzI3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/823277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rhysd", "html_url": "https://github.com/rhysd", "followers_url": "https://api.github.com/users/rhysd/followers", "following_url": "https://api.github.com/users/rhysd/following{/other_user}", "gists_url": "https://api.github.com/users/rhysd/gists{/gist_id}", "starred_url": "https://api.github.com/users/rhysd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rhysd/subscriptions", "organizations_url": "https://api.github.com/users/rhysd/orgs", "repos_url": "https://api.github.com/users/rhysd/repos", "events_url": "https://api.github.com/users/rhysd/events{/privacy}", "received_events_url": "https://api.github.com/users/rhysd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rhysd", "id": 823277, "node_id": "MDQ6VXNlcjgyMzI3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/823277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rhysd", "html_url": "https://github.com/rhysd", "followers_url": "https://api.github.com/users/rhysd/followers", "following_url": "https://api.github.com/users/rhysd/following{/other_user}", "gists_url": "https://api.github.com/users/rhysd/gists{/gist_id}", "starred_url": "https://api.github.com/users/rhysd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rhysd/subscriptions", "organizations_url": "https://api.github.com/users/rhysd/orgs", "repos_url": "https://api.github.com/users/rhysd/repos", "events_url": "https://api.github.com/users/rhysd/events{/privacy}", "received_events_url": "https://api.github.com/users/rhysd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b52a9bd9665218207015092ce574de86e3610df3", "url": "https://api.github.com/repos/rust-lang/rust/commits/b52a9bd9665218207015092ce574de86e3610df3", "html_url": "https://github.com/rust-lang/rust/commit/b52a9bd9665218207015092ce574de86e3610df3"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "93d2007d3a55f1c41f46744ca7db1fce98a13bb1", "filename": "clippy_lints/src/dbg_macro.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/268ff853263da6d518e233cf2a514bde50975f1d/clippy_lints%2Fsrc%2Fdbg_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/268ff853263da6d518e233cf2a514bde50975f1d/clippy_lints%2Fsrc%2Fdbg_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdbg_macro.rs?ref=268ff853263da6d518e233cf2a514bde50975f1d", "patch": "@@ -1,4 +1,4 @@\n-use crate::utils::span_lint_and_sugg;\n+use crate::utils::span_help_and_lint;\n use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n use rustc::{declare_tool_lint, lint_array};\n use rustc_errors::Applicability;\n@@ -41,14 +41,12 @@ impl LintPass for Pass {\n impl EarlyLintPass for Pass {\n     fn check_mac(&mut self, cx: &EarlyContext<'_>, mac: &ast::Mac) {\n         if mac.node.path == \"dbg\" {\n-            span_lint_and_sugg(\n+            span_help_and_lint(\n                 cx,\n                 DBG_MACRO,\n                 mac.span,\n                 \"`dbg!` macro is intended as a debugging tool\",\n                 \"ensure to avoid having uses of it in version control\",\n-                mac.node.tts.to_string(),\n-                Applicability::MaybeIncorrect,\n             );\n         }\n     }"}]}