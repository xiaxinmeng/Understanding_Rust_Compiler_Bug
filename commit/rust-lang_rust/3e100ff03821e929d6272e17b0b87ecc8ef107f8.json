{"sha": "3e100ff03821e929d6272e17b0b87ecc8ef107f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlMTAwZmYwMzgyMWU5MjlkNjI3MmUxN2IwYjg3ZWNjOGVmMTA3Zjg=", "commit": {"author": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2015-03-26T20:02:45Z"}, "committer": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2015-03-26T20:10:59Z"}, "message": "book: make it one sentence", "tree": {"sha": "06618ead037f8945a2062e3f8d60b9f85edaffef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06618ead037f8945a2062e3f8d60b9f85edaffef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e100ff03821e929d6272e17b0b87ecc8ef107f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e100ff03821e929d6272e17b0b87ecc8ef107f8", "html_url": "https://github.com/rust-lang/rust/commit/3e100ff03821e929d6272e17b0b87ecc8ef107f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e100ff03821e929d6272e17b0b87ecc8ef107f8/comments", "author": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "557d4346a26266d2eb13f6b0adf106b8873b0da1", "url": "https://api.github.com/repos/rust-lang/rust/commits/557d4346a26266d2eb13f6b0adf106b8873b0da1", "html_url": "https://github.com/rust-lang/rust/commit/557d4346a26266d2eb13f6b0adf106b8873b0da1"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "85472ff5db76727dde9dad6ec3a7f226305cb0b8", "filename": "src/doc/trpl/method-syntax.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e100ff03821e929d6272e17b0b87ecc8ef107f8/src%2Fdoc%2Ftrpl%2Fmethod-syntax.md", "raw_url": "https://github.com/rust-lang/rust/raw/3e100ff03821e929d6272e17b0b87ecc8ef107f8/src%2Fdoc%2Ftrpl%2Fmethod-syntax.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fmethod-syntax.md?ref=3e100ff03821e929d6272e17b0b87ecc8ef107f8", "patch": "@@ -46,7 +46,7 @@ This will print `12.566371`.\n \n We've made a struct that represents a circle. We then write an `impl` block,\n and inside it, define a method, `area`. Methods take a  special first\n-parameter, `&self`. There are three variants: `self`, `&self`, and `&mut self`.\n+parameter, of which there are three variants: `self`, `&self`, and `&mut self`.\n You can think of this first parameter as being the `x` in `x.foo()`. The three\n variants correspond to the three kinds of thing `x` could be: `self` if it's\n just a value on the stack, `&self` if it's a reference, and `&mut self` if it's"}]}