{"sha": "06d401948ba7451d8ed10b4a58e1e2d08c0094f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2ZDQwMTk0OGJhNzQ1MWQ4ZWQxMGI0YTU4ZTFlMmQwOGMwMDk0Zjc=", "commit": {"author": {"name": "Sean Patrick Santos", "email": "SeanPatrickSantos@gmail.com", "date": "2015-01-15T20:49:23Z"}, "committer": {"name": "Sean Patrick Santos", "email": "SeanPatrickSantos@gmail.com", "date": "2015-01-15T20:49:23Z"}, "message": "For issue 15149 test, don't execute from tmpfs, and wait to see if the child panics before passing.", "tree": {"sha": "67c056def91b99944a58741d89dde881a8e685fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67c056def91b99944a58741d89dde881a8e685fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/06d401948ba7451d8ed10b4a58e1e2d08c0094f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/06d401948ba7451d8ed10b4a58e1e2d08c0094f7", "html_url": "https://github.com/rust-lang/rust/commit/06d401948ba7451d8ed10b4a58e1e2d08c0094f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/06d401948ba7451d8ed10b4a58e1e2d08c0094f7/comments", "author": {"login": "quantheory", "id": 1740206, "node_id": "MDQ6VXNlcjE3NDAyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1740206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quantheory", "html_url": "https://github.com/quantheory", "followers_url": "https://api.github.com/users/quantheory/followers", "following_url": "https://api.github.com/users/quantheory/following{/other_user}", "gists_url": "https://api.github.com/users/quantheory/gists{/gist_id}", "starred_url": "https://api.github.com/users/quantheory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quantheory/subscriptions", "organizations_url": "https://api.github.com/users/quantheory/orgs", "repos_url": "https://api.github.com/users/quantheory/repos", "events_url": "https://api.github.com/users/quantheory/events{/privacy}", "received_events_url": "https://api.github.com/users/quantheory/received_events", "type": "User", "site_admin": false}, "committer": {"login": "quantheory", "id": 1740206, "node_id": "MDQ6VXNlcjE3NDAyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1740206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quantheory", "html_url": "https://github.com/quantheory", "followers_url": "https://api.github.com/users/quantheory/followers", "following_url": "https://api.github.com/users/quantheory/following{/other_user}", "gists_url": "https://api.github.com/users/quantheory/gists{/gist_id}", "starred_url": "https://api.github.com/users/quantheory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quantheory/subscriptions", "organizations_url": "https://api.github.com/users/quantheory/orgs", "repos_url": "https://api.github.com/users/quantheory/repos", "events_url": "https://api.github.com/users/quantheory/events{/privacy}", "received_events_url": "https://api.github.com/users/quantheory/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "451e134c180e88b06e3b747ed750e4901ca93721", "url": "https://api.github.com/repos/rust-lang/rust/commits/451e134c180e88b06e3b747ed750e4901ca93721", "html_url": "https://github.com/rust-lang/rust/commit/451e134c180e88b06e3b747ed750e4901ca93721"}], "stats": {"total": 30, "additions": 17, "deletions": 13}, "files": [{"sha": "59b1bb287fa747869dea9c1ea4e72a0a87e18625", "filename": "src/test/run-pass/issue-15149.rs", "status": "modified", "additions": 17, "deletions": 13, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/06d401948ba7451d8ed10b4a58e1e2d08c0094f7/src%2Ftest%2Frun-pass%2Fissue-15149.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06d401948ba7451d8ed10b4a58e1e2d08c0094f7/src%2Ftest%2Frun-pass%2Fissue-15149.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-15149.rs?ref=06d401948ba7451d8ed10b4a58e1e2d08c0094f7", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::io::{TempDir, Command, fs};\n+use std::io::{Command, fs, USER_RWX};\n use std::os;\n \n fn main() {\n@@ -22,19 +22,23 @@ fn main() {\n }\n \n fn test() {\n-    // If we're the parent, copy our own binary to a tempr directory, and then\n-    // make it executable.\n-    let dir = TempDir::new(\"mytest\").unwrap();\n-    let me = os::self_exe_name().unwrap();\n-    let dest = dir.path().join(format!(\"mytest{}\", os::consts::EXE_SUFFIX));\n-    fs::copy(&me, &dest).unwrap();\n-\n-    // Append the temp directory to our own PATH.\n+    // If we're the parent, copy our own binary to a new directory.\n+    let my_path = os::self_exe_name().unwrap();\n+    let my_dir  = my_path.dir_path();\n+\n+    let child_dir = Path::new(my_dir.join(\"issue-15149-child\"));\n+    drop(fs::mkdir(&child_dir, USER_RWX));\n+\n+    let child_path = child_dir.join(format!(\"mytest{}\",\n+                                            os::consts::EXE_SUFFIX));\n+    fs::copy(&my_path, &child_path).unwrap();\n+\n+    // Append the new directory to our own PATH.\n     let mut path = os::split_paths(os::getenv(\"PATH\").unwrap_or(String::new()));\n-    path.push(dir.path().clone());\n+    path.push(child_dir.clone());\n     let path = os::join_paths(path.as_slice()).unwrap();\n \n-    Command::new(\"mytest\").env(\"PATH\", path.as_slice())\n-                          .arg(\"child\")\n-                          .spawn().unwrap();\n+    assert!(Command::new(\"mytest\").env(\"PATH\", path.as_slice())\n+                                  .arg(\"child\")\n+                                  .status().unwrap().success());\n }"}]}