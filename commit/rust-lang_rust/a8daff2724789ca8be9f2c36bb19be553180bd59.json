{"sha": "a8daff2724789ca8be9f2c36bb19be553180bd59", "node_id": "C_kwDOAAsO6NoAKGE4ZGFmZjI3MjQ3ODljYThiZTlmMmMzNmJiMTliZTU1MzE4MGJkNTk", "commit": {"author": {"name": "Fabian Wolff", "email": "fabian.wolff@alumni.ethz.ch", "date": "2021-12-05T21:24:34Z"}, "committer": {"name": "Fabian Wolff", "email": "fabian.wolff@alumni.ethz.ch", "date": "2021-12-05T21:24:34Z"}, "message": "Fix ICE in `check_must_not_suspend_ty()`", "tree": {"sha": "91aa72e773a1bcc11c58bf6303bb2ee526ee0285", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91aa72e773a1bcc11c58bf6303bb2ee526ee0285"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8daff2724789ca8be9f2c36bb19be553180bd59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8daff2724789ca8be9f2c36bb19be553180bd59", "html_url": "https://github.com/rust-lang/rust/commit/a8daff2724789ca8be9f2c36bb19be553180bd59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8daff2724789ca8be9f2c36bb19be553180bd59/comments", "author": {"login": "FabianWolff", "id": 16052130, "node_id": "MDQ6VXNlcjE2MDUyMTMw", "avatar_url": "https://avatars.githubusercontent.com/u/16052130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabianWolff", "html_url": "https://github.com/FabianWolff", "followers_url": "https://api.github.com/users/FabianWolff/followers", "following_url": "https://api.github.com/users/FabianWolff/following{/other_user}", "gists_url": "https://api.github.com/users/FabianWolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabianWolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabianWolff/subscriptions", "organizations_url": "https://api.github.com/users/FabianWolff/orgs", "repos_url": "https://api.github.com/users/FabianWolff/repos", "events_url": "https://api.github.com/users/FabianWolff/events{/privacy}", "received_events_url": "https://api.github.com/users/FabianWolff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "FabianWolff", "id": 16052130, "node_id": "MDQ6VXNlcjE2MDUyMTMw", "avatar_url": "https://avatars.githubusercontent.com/u/16052130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabianWolff", "html_url": "https://github.com/FabianWolff", "followers_url": "https://api.github.com/users/FabianWolff/followers", "following_url": "https://api.github.com/users/FabianWolff/following{/other_user}", "gists_url": "https://api.github.com/users/FabianWolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabianWolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabianWolff/subscriptions", "organizations_url": "https://api.github.com/users/FabianWolff/orgs", "repos_url": "https://api.github.com/users/FabianWolff/repos", "events_url": "https://api.github.com/users/FabianWolff/events{/privacy}", "received_events_url": "https://api.github.com/users/FabianWolff/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "772d51f887fa407216860bf8ecf3f1a32fb795b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/772d51f887fa407216860bf8ecf3f1a32fb795b4", "html_url": "https://github.com/rust-lang/rust/commit/772d51f887fa407216860bf8ecf3f1a32fb795b4"}], "stats": {"total": 84, "additions": 75, "deletions": 9}, "files": [{"sha": "37e601fa40442e9bec20b50650bbfaccd6e74609", "filename": "compiler/rustc_typeck/src/check/generator_interior.rs", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a8daff2724789ca8be9f2c36bb19be553180bd59/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8daff2724789ca8be9f2c36bb19be553180bd59/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior.rs?ref=a8daff2724789ca8be9f2c36bb19be553180bd59", "patch": "@@ -536,22 +536,28 @@ pub fn check_must_not_suspend_ty<'tcx>(\n             }\n             has_emitted\n         }\n-        ty::Tuple(ref tys) => {\n+        ty::Tuple(_) => {\n             let mut has_emitted = false;\n-            let spans = if let Some(hir::ExprKind::Tup(comps)) = data.expr.map(|e| &e.kind) {\n-                debug_assert_eq!(comps.len(), tys.len());\n-                comps.iter().map(|e| e.span).collect()\n-            } else {\n-                vec![]\n+            let comps = match data.expr.map(|e| &e.kind) {\n+                Some(hir::ExprKind::Tup(comps)) => {\n+                    debug_assert_eq!(comps.len(), ty.tuple_fields().count());\n+                    Some(comps)\n+                }\n+                _ => None,\n             };\n-            for (i, ty) in tys.iter().map(|k| k.expect_ty()).enumerate() {\n+            for (i, ty) in ty.tuple_fields().enumerate() {\n                 let descr_post = &format!(\" in tuple element {}\", i);\n-                let span = *spans.get(i).unwrap_or(&data.source_span);\n+                let span = comps.and_then(|c| c.get(i)).map(|e| e.span).unwrap_or(data.source_span);\n                 if check_must_not_suspend_ty(\n                     fcx,\n                     ty,\n                     hir_id,\n-                    SuspendCheckData { descr_post, source_span: span, ..data },\n+                    SuspendCheckData {\n+                        descr_post,\n+                        expr: comps.and_then(|comps| comps.get(i)),\n+                        source_span: span,\n+                        ..data\n+                    },\n                 ) {\n                     has_emitted = true;\n                 }"}, {"sha": "bf9a5a62620d96002aa360bebbd0f554b9962f69", "filename": "src/test/ui/typeck/issue-91334.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a8daff2724789ca8be9f2c36bb19be553180bd59/src%2Ftest%2Fui%2Ftypeck%2Fissue-91334.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8daff2724789ca8be9f2c36bb19be553180bd59/src%2Ftest%2Fui%2Ftypeck%2Fissue-91334.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-91334.rs?ref=a8daff2724789ca8be9f2c36bb19be553180bd59", "patch": "@@ -0,0 +1,10 @@\n+// Regression test for the ICE described in issue #91334.\n+\n+// error-pattern: this file contains an unclosed delimiter\n+// error-pattern: expected one of\n+// error-pattern: mismatched closing delimiter\n+// error-pattern: mismatched types\n+\n+#![feature(generators)]\n+\n+fn f(){||yield(((){),"}, {"sha": "358cc771b7c458e986741377bad39637826e8b4a", "filename": "src/test/ui/typeck/issue-91334.stderr", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/a8daff2724789ca8be9f2c36bb19be553180bd59/src%2Ftest%2Fui%2Ftypeck%2Fissue-91334.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a8daff2724789ca8be9f2c36bb19be553180bd59/src%2Ftest%2Fui%2Ftypeck%2Fissue-91334.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-91334.stderr?ref=a8daff2724789ca8be9f2c36bb19be553180bd59", "patch": "@@ -0,0 +1,50 @@\n+error: this file contains an unclosed delimiter\n+  --> $DIR/issue-91334.rs:10:23\n+   |\n+LL | fn f(){||yield(((){),\n+   |       -       -       ^\n+   |       |       |\n+   |       |       unclosed delimiter\n+   |       unclosed delimiter\n+\n+error: this file contains an unclosed delimiter\n+  --> $DIR/issue-91334.rs:10:23\n+   |\n+LL | fn f(){||yield(((){),\n+   |       -       -       ^\n+   |       |       |\n+   |       |       unclosed delimiter\n+   |       unclosed delimiter\n+\n+error: expected one of `)`, `,`, `.`, `?`, or an operator, found `{`\n+  --> $DIR/issue-91334.rs:10:19\n+   |\n+LL | fn f(){||yield(((){),\n+   |                   ^\n+   |                   |\n+   |                   expected one of `)`, `,`, `.`, `?`, or an operator\n+   |                   help: missing `,`\n+\n+error: mismatched closing delimiter: `)`\n+  --> $DIR/issue-91334.rs:10:19\n+   |\n+LL | fn f(){||yield(((){),\n+   |                -  ^^ mismatched closing delimiter\n+   |                |  |\n+   |                |  unclosed delimiter\n+   |                closing delimiter possibly meant for this\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-91334.rs:10:8\n+   |\n+LL | fn f(){||yield(((){),\n+   |       -^^^^^^^^^^^^^^^ expected `()`, found generator\n+   |       |\n+   |       help: try adding a return type: `-> [generator@$DIR/issue-91334.rs:10:8: 10:23]`\n+   |\n+   = note: expected unit type `()`\n+              found generator `[generator@$DIR/issue-91334.rs:10:8: 10:23]`\n+\n+error: aborting due to 5 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}]}