{"sha": "4bbb58d429a56652acfd186295d05de7d84ee74e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiYmI1OGQ0MjlhNTY2NTJhY2ZkMTg2Mjk1ZDA1ZGU3ZDg0ZWU3NGU=", "commit": {"author": {"name": "gaurikholkar", "email": "f2013002@goa.bits-pilani.ac.in", "date": "2017-09-23T21:54:49Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-09-26T15:55:53Z"}, "message": "remove error code description", "tree": {"sha": "8e49930dda8fb68bbde9311b07446d9270fbe54f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e49930dda8fb68bbde9311b07446d9270fbe54f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bbb58d429a56652acfd186295d05de7d84ee74e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bbb58d429a56652acfd186295d05de7d84ee74e", "html_url": "https://github.com/rust-lang/rust/commit/4bbb58d429a56652acfd186295d05de7d84ee74e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bbb58d429a56652acfd186295d05de7d84ee74e/comments", "author": {"login": "gaurikholkar", "id": 117768111, "node_id": "U_kgDOBwT_rw", "avatar_url": "https://avatars.githubusercontent.com/u/117768111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaurikholkar", "html_url": "https://github.com/gaurikholkar", "followers_url": "https://api.github.com/users/gaurikholkar/followers", "following_url": "https://api.github.com/users/gaurikholkar/following{/other_user}", "gists_url": "https://api.github.com/users/gaurikholkar/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaurikholkar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaurikholkar/subscriptions", "organizations_url": "https://api.github.com/users/gaurikholkar/orgs", "repos_url": "https://api.github.com/users/gaurikholkar/repos", "events_url": "https://api.github.com/users/gaurikholkar/events{/privacy}", "received_events_url": "https://api.github.com/users/gaurikholkar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e4649ebf80679090786074c020d3d2e2c0e8a84", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e4649ebf80679090786074c020d3d2e2c0e8a84", "html_url": "https://github.com/rust-lang/rust/commit/9e4649ebf80679090786074c020d3d2e2c0e8a84"}], "stats": {"total": 69, "additions": 1, "deletions": 68}, "files": [{"sha": "26f56ffacae7fd5c7a53968045d39991678488bc", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 68, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/4bbb58d429a56652acfd186295d05de7d84ee74e/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bbb58d429a56652acfd186295d05de7d84ee74e/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=4bbb58d429a56652acfd186295d05de7d84ee74e", "patch": "@@ -1351,74 +1351,6 @@ struct Foo<T: 'static> {\n ```\n \"##,\n \n-E0312: r##\"\n-A lifetime of reference outlives lifetime of borrowed content.\n-\n-Erroneous code example:\n-\n-```compile_fail,E0312\n-fn make_child<'tree, 'human>(\n-  x: &'human i32,\n-  y: &'tree i32\n-) -> &'human i32 {\n-    if x > y\n-       { x }\n-    else\n-       { y }\n-       // error: lifetime of reference outlives lifetime of borrowed content\n-}\n-```\n-\n-The function declares that it returns a reference with the `'human`\n-lifetime, but it may return data with the `'tree` lifetime. As neither\n-lifetime is declared longer than the other, this results in an\n-error. Sometimes, this error is because the function *body* is\n-incorrect -- that is, maybe you did not *mean* to return data from\n-`y`. In that case, you should fix the function body.\n-\n-Often, however, the body is correct. In that case, the function\n-signature needs to be altered to match the body, so that the caller\n-understands that data from either `x` or `y` may be returned. The\n-simplest way to do this is to give both function parameters the *same*\n-named lifetime:\n-\n-```\n-fn make_child<'human>(\n-  x: &'human i32,\n-  y: &'human i32\n-) -> &'human i32 {\n-    if x > y\n-       { x }\n-    else\n-       { y } // ok!\n-}\n-```\n-\n-However, in some cases, you may prefer to explicitly declare that one lifetime\n-outlives another using a `where` clause:\n-\n-```\n-fn make_child<'tree, 'human>(\n-  x: &'human i32,\n-  y: &'tree i32\n-) -> &'human i32\n-where\n-  'tree: 'human\n-{\n-    if x > y\n-       { x }\n-    else\n-       { y } // ok!\n-}\n-```\n-\n-Here, the where clause `'tree: 'human` can be read as \"the lifetime\n-'tree outlives the lifetime 'human\" -- meaning, references with the\n-`'tree` lifetime live *at least as long as* references with the\n-`'human` lifetime. Therefore, it is safe to return data with lifetime\n-`'tree` when data with the lifetime `'human` is needed.\n-\"##,\n-\n E0317: r##\"\n This error occurs when an `if` expression without an `else` block is used in a\n context where a type other than `()` is expected, for example a `let`\n@@ -2028,6 +1960,7 @@ register_diagnostics! {\n //  E0304, // expected signed integer constant\n //  E0305, // expected constant\n     E0311, // thing may not live long enough\n+    E0312, // lifetime of reference outlives lifetime of borrowed content\n     E0313, // lifetime of borrowed pointer outlives lifetime of captured variable\n     E0314, // closure outlives stack frame\n     E0315, // cannot invoke closure outside of its lifetime"}]}