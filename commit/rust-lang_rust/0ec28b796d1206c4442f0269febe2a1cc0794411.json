{"sha": "0ec28b796d1206c4442f0269febe2a1cc0794411", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlYzI4Yjc5NmQxMjA2YzQ0NDJmMDI2OWZlYmUyYTFjYzA3OTQ0MTE=", "commit": {"author": {"name": "Dawid Ci\u0119\u017carkiewicz", "email": "dpc@dpc.pw", "date": "2017-03-11T16:04:30Z"}, "committer": {"name": "Dawid Ci\u0119\u017carkiewicz", "email": "dpc@dpc.pw", "date": "2017-03-18T03:15:05Z"}, "message": "Fix new version of `create_dir_all`\n\nIt will now correctly fail on existing non-directories.", "tree": {"sha": "0369fe06721d732b4ec945e2be53f2874ccc2cee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0369fe06721d732b4ec945e2be53f2874ccc2cee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ec28b796d1206c4442f0269febe2a1cc0794411", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ec28b796d1206c4442f0269febe2a1cc0794411", "html_url": "https://github.com/rust-lang/rust/commit/0ec28b796d1206c4442f0269febe2a1cc0794411", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ec28b796d1206c4442f0269febe2a1cc0794411/comments", "author": {"login": "dpc", "id": 9209, "node_id": "MDQ6VXNlcjkyMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/9209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpc", "html_url": "https://github.com/dpc", "followers_url": "https://api.github.com/users/dpc/followers", "following_url": "https://api.github.com/users/dpc/following{/other_user}", "gists_url": "https://api.github.com/users/dpc/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpc/subscriptions", "organizations_url": "https://api.github.com/users/dpc/orgs", "repos_url": "https://api.github.com/users/dpc/repos", "events_url": "https://api.github.com/users/dpc/events{/privacy}", "received_events_url": "https://api.github.com/users/dpc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dpc", "id": 9209, "node_id": "MDQ6VXNlcjkyMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/9209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpc", "html_url": "https://github.com/dpc", "followers_url": "https://api.github.com/users/dpc/followers", "following_url": "https://api.github.com/users/dpc/following{/other_user}", "gists_url": "https://api.github.com/users/dpc/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpc/subscriptions", "organizations_url": "https://api.github.com/users/dpc/orgs", "repos_url": "https://api.github.com/users/dpc/repos", "events_url": "https://api.github.com/users/dpc/events{/privacy}", "received_events_url": "https://api.github.com/users/dpc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db00ba9eb2afa1a3db24e208cbd63125d0157090", "url": "https://api.github.com/repos/rust-lang/rust/commits/db00ba9eb2afa1a3db24e208cbd63125d0157090", "html_url": "https://github.com/rust-lang/rust/commit/db00ba9eb2afa1a3db24e208cbd63125d0157090"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "6a465e38f3810cbf5f9e18cbe6e720824c37193e", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0ec28b796d1206c4442f0269febe2a1cc0794411/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ec28b796d1206c4442f0269febe2a1cc0794411/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=0ec28b796d1206c4442f0269febe2a1cc0794411", "patch": "@@ -1777,7 +1777,7 @@ impl DirBuilder {\n     fn create_dir_all(&self, path: &Path) -> io::Result<()> {\n         match self.inner.mkdir(path) {\n             Ok(()) => return Ok(()),\n-            Err(ref e) if e.kind() == io::ErrorKind::AlreadyExists => return Ok(()),\n+            Err(ref e) if e.kind() == io::ErrorKind::AlreadyExists && path.is_dir() => return Ok(()),\n             Err(ref e) if e.kind() == io::ErrorKind::NotFound => {}\n             Err(e) => return Err(e),\n         }\n@@ -1787,7 +1787,7 @@ impl DirBuilder {\n         }\n         match self.inner.mkdir(path) {\n             Ok(()) => Ok(()),\n-            Err(ref e) if e.kind() == io::ErrorKind::AlreadyExists => Ok(()),\n+            Err(ref e) if e.kind() == io::ErrorKind::AlreadyExists && path.is_dir() => Ok(()),\n             Err(e) => Err(e),\n         }\n     }"}]}