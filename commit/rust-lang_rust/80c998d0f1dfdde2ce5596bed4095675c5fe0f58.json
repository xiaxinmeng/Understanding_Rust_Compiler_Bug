{"sha": "80c998d0f1dfdde2ce5596bed4095675c5fe0f58", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwYzk5OGQwZjFkZmRkZTJjZTU1OTZiZWQ0MDk1Njc1YzVmZTBmNTg=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-07-28T10:50:10Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-07-28T15:03:06Z"}, "message": "Rollup merge of #34951 - tomgarcia:covariant-vec, r=brson\n\nMake vec::Drain and binary_heap::Drain covariant\n\nI removed all mutable pointers/references, and added covariance tests similar to the ones in #32635. It builds and passes the tests, but I noticed that there weren't any tests of Drain's behaviour (at least not in libcollectionstest), so I'm not sure if my changes accidently broke Drain's behaviour. Should I add some tests for that (and if so, what should the tests include)?", "tree": {"sha": "6e726ce8cb2e0d80f4bd02d8b8fd1e9b6e27f526", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e726ce8cb2e0d80f4bd02d8b8fd1e9b6e27f526"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80c998d0f1dfdde2ce5596bed4095675c5fe0f58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80c998d0f1dfdde2ce5596bed4095675c5fe0f58", "html_url": "https://github.com/rust-lang/rust/commit/80c998d0f1dfdde2ce5596bed4095675c5fe0f58", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80c998d0f1dfdde2ce5596bed4095675c5fe0f58/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1895bf760d4f7d11510619fd7ee794aa5afc4803", "url": "https://api.github.com/repos/rust-lang/rust/commits/1895bf760d4f7d11510619fd7ee794aa5afc4803", "html_url": "https://github.com/rust-lang/rust/commit/1895bf760d4f7d11510619fd7ee794aa5afc4803"}, {"sha": "d1e2a935d2d35e768d0a56af7938c725f243fc28", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1e2a935d2d35e768d0a56af7938c725f243fc28", "html_url": "https://github.com/rust-lang/rust/commit/d1e2a935d2d35e768d0a56af7938c725f243fc28"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "275f38b2f787d469a8596be0b0d6bcce64fc3b19", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/80c998d0f1dfdde2ce5596bed4095675c5fe0f58/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80c998d0f1dfdde2ce5596bed4095675c5fe0f58/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=80c998d0f1dfdde2ce5596bed4095675c5fe0f58", "patch": "@@ -73,6 +73,7 @@ use core::mem;\n use core::ops::{Index, IndexMut};\n use core::ops;\n use core::ptr;\n+use core::ptr::Shared;\n use core::slice;\n \n use super::SpecExtend;\n@@ -899,8 +900,8 @@ impl<T> Vec<T> {\n             Drain {\n                 tail_start: end,\n                 tail_len: len - end,\n-                iter: range_slice.iter_mut(),\n-                vec: self as *mut _,\n+                iter: range_slice.iter(),\n+                vec: Shared::new(self as *mut _),\n             }\n         }\n     }\n@@ -1806,8 +1807,8 @@ pub struct Drain<'a, T: 'a> {\n     /// Length of tail\n     tail_len: usize,\n     /// Current remaining range to remove\n-    iter: slice::IterMut<'a, T>,\n-    vec: *mut Vec<T>,\n+    iter: slice::Iter<'a, T>,\n+    vec: Shared<Vec<T>>,\n }\n \n #[stable(feature = \"drain\", since = \"1.6.0\")]\n@@ -1845,7 +1846,7 @@ impl<'a, T> Drop for Drain<'a, T> {\n \n         if self.tail_len > 0 {\n             unsafe {\n-                let source_vec = &mut *self.vec;\n+                let source_vec = &mut **self.vec;\n                 // memmove back untouched tail, update to new length\n                 let start = source_vec.len();\n                 let tail = self.tail_start;"}, {"sha": "e2a57bd8d3862df021cf5325a4c68a5b926901d8", "filename": "src/libcollectionstest/binary_heap.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/80c998d0f1dfdde2ce5596bed4095675c5fe0f58/src%2Flibcollectionstest%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80c998d0f1dfdde2ce5596bed4095675c5fe0f58/src%2Flibcollectionstest%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fbinary_heap.rs?ref=80c998d0f1dfdde2ce5596bed4095675c5fe0f58", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n use std::collections::BinaryHeap;\n+use std::collections::binary_heap::Drain;\n \n #[test]\n fn test_iterator() {\n@@ -292,3 +293,8 @@ fn test_extend_specialization() {\n \n     assert_eq!(a.into_sorted_vec(), [-20, -10, 1, 2, 3, 3, 5, 43]);\n }\n+\n+#[allow(dead_code)]\n+fn assert_covariance() {\n+    fn drain<'new>(d: Drain<'static, &'static str>) -> Drain<'new, &'new str> { d }\n+}"}, {"sha": "7a6bd958a5f8c7cb915c5756e055d1d25a65be78", "filename": "src/libcollectionstest/vec.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/80c998d0f1dfdde2ce5596bed4095675c5fe0f58/src%2Flibcollectionstest%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80c998d0f1dfdde2ce5596bed4095675c5fe0f58/src%2Flibcollectionstest%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fvec.rs?ref=80c998d0f1dfdde2ce5596bed4095675c5fe0f58", "patch": "@@ -11,6 +11,7 @@\n use std::borrow::Cow;\n use std::iter::{FromIterator, repeat};\n use std::mem::size_of;\n+use std::vec::Drain;\n \n use test::Bencher;\n \n@@ -510,6 +511,11 @@ fn test_cow_from() {\n     }\n }\n \n+#[allow(dead_code)]\n+fn assert_covariance() {\n+    fn drain<'new>(d: Drain<'static, &'static str>) -> Drain<'new, &'new str> { d }\n+}\n+\n #[bench]\n fn bench_new(b: &mut Bencher) {\n     b.iter(|| {"}]}