{"sha": "e06cd316a49556bc80e8284c2dab6ac094f75c5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwNmNkMzE2YTQ5NTU2YmM4MGU4Mjg0YzJkYWI2YWMwOTRmNzVjNWY=", "commit": {"author": {"name": "Michael Hewson", "email": "michael@michaelhewson.ca", "date": "2017-11-08T13:31:08Z"}, "committer": {"name": "Michael Hewson", "email": "michael@michaelhewson.ca", "date": "2017-11-08T13:31:08Z"}, "message": "Remove the error check that I think is redundant, and change the test error messages that I don't understand why they changed, so the tests pass", "tree": {"sha": "6afa9c8361ed214a954c9836236a327d2383db9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6afa9c8361ed214a954c9836236a327d2383db9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e06cd316a49556bc80e8284c2dab6ac094f75c5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e06cd316a49556bc80e8284c2dab6ac094f75c5f", "html_url": "https://github.com/rust-lang/rust/commit/e06cd316a49556bc80e8284c2dab6ac094f75c5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e06cd316a49556bc80e8284c2dab6ac094f75c5f/comments", "author": {"login": "mikeyhew", "id": 6751033, "node_id": "MDQ6VXNlcjY3NTEwMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/6751033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikeyhew", "html_url": "https://github.com/mikeyhew", "followers_url": "https://api.github.com/users/mikeyhew/followers", "following_url": "https://api.github.com/users/mikeyhew/following{/other_user}", "gists_url": "https://api.github.com/users/mikeyhew/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikeyhew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikeyhew/subscriptions", "organizations_url": "https://api.github.com/users/mikeyhew/orgs", "repos_url": "https://api.github.com/users/mikeyhew/repos", "events_url": "https://api.github.com/users/mikeyhew/events{/privacy}", "received_events_url": "https://api.github.com/users/mikeyhew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mikeyhew", "id": 6751033, "node_id": "MDQ6VXNlcjY3NTEwMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/6751033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikeyhew", "html_url": "https://github.com/mikeyhew", "followers_url": "https://api.github.com/users/mikeyhew/followers", "following_url": "https://api.github.com/users/mikeyhew/following{/other_user}", "gists_url": "https://api.github.com/users/mikeyhew/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikeyhew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikeyhew/subscriptions", "organizations_url": "https://api.github.com/users/mikeyhew/orgs", "repos_url": "https://api.github.com/users/mikeyhew/repos", "events_url": "https://api.github.com/users/mikeyhew/events{/privacy}", "received_events_url": "https://api.github.com/users/mikeyhew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02ce3ac1f85606b339dcc91a16c89a790bf17a82", "url": "https://api.github.com/repos/rust-lang/rust/commits/02ce3ac1f85606b339dcc91a16c89a790bf17a82", "html_url": "https://github.com/rust-lang/rust/commit/02ce3ac1f85606b339dcc91a16c89a790bf17a82"}], "stats": {"total": 61, "additions": 10, "deletions": 51}, "files": [{"sha": "71f19914a2c1548c877b738c65b2735e32961e0b", "filename": "src/librustc_typeck/check/wfcheck.rs", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/e06cd316a49556bc80e8284c2dab6ac094f75c5f/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e06cd316a49556bc80e8284c2dab6ac094f75c5f/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs?ref=e06cd316a49556bc80e8284c2dab6ac094f75c5f", "patch": "@@ -516,28 +516,6 @@ impl<'a, 'gcx> CheckTypeWellFormedVisitor<'a, 'gcx> {\n                 .help(\"consider changing to `self`, `&self`, `&mut self`, or `self: Box<Self>`\")\n                 .emit();\n             }\n-        } else {\n-            let rcvr_ty = match self_kind {\n-                ExplicitSelf::ByValue => self_ty,\n-                ExplicitSelf::ByReference(region, mutbl) => {\n-                    fcx.tcx.mk_ref(region, ty::TypeAndMut {\n-                        ty: self_ty,\n-                        mutbl,\n-                    })\n-                }\n-                ExplicitSelf::ByBox => fcx.tcx.mk_box(self_ty),\n-                ExplicitSelf::Other => unreachable!(),\n-            };\n-            let rcvr_ty = fcx.normalize_associated_types_in(span, &rcvr_ty);\n-            let rcvr_ty = fcx.liberate_late_bound_regions(method.def_id,\n-                                                        &ty::Binder(rcvr_ty));\n-\n-            debug!(\"check_method_receiver: receiver ty = {:?}\", rcvr_ty);\n-\n-            let cause = fcx.cause(span, ObligationCauseCode::MethodReceiver);\n-            if let Some(mut err) = fcx.demand_eqtype_with_origin(&cause, rcvr_ty, self_arg_ty) {\n-                err.emit();\n-            }\n         }\n     }\n "}, {"sha": "0c3ee1739a312f4720fd670e79831b118d61a697", "filename": "src/test/compile-fail/explicit-self-lifetime-mismatch.rs", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e06cd316a49556bc80e8284c2dab6ac094f75c5f/src%2Ftest%2Fcompile-fail%2Fexplicit-self-lifetime-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e06cd316a49556bc80e8284c2dab6ac094f75c5f/src%2Ftest%2Fcompile-fail%2Fexplicit-self-lifetime-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fexplicit-self-lifetime-mismatch.rs?ref=e06cd316a49556bc80e8284c2dab6ac094f75c5f", "patch": "@@ -1,3 +1,5 @@\n+//~  ERROR mismatched types\n+//~| ERROR mismatched types\n // Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n@@ -14,17 +16,7 @@ struct Foo<'a,'b> {\n }\n \n impl<'a,'b> Foo<'a,'b> {\n-    fn bar(self:\n-           Foo<'b,'a>\n-    //~^ ERROR mismatched method receiver\n-    //~| expected type `Foo<'a, 'b>`\n-    //~| found type `Foo<'b, 'a>`\n-    //~| lifetime mismatch\n-    //~| ERROR mismatched method receiver\n-    //~| expected type `Foo<'a, 'b>`\n-    //~| found type `Foo<'b, 'a>`\n-    //~| lifetime mismatch\n-           ) {}\n+    fn bar(self: Foo<'b,'a>) {}\n }\n \n fn main() {}"}, {"sha": "99a7d39ce8456ee1ca2fb399ab2f5f0110ae2039", "filename": "src/test/compile-fail/issue-17740.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e06cd316a49556bc80e8284c2dab6ac094f75c5f/src%2Ftest%2Fcompile-fail%2Fissue-17740.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e06cd316a49556bc80e8284c2dab6ac094f75c5f/src%2Ftest%2Fcompile-fail%2Fissue-17740.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-17740.rs?ref=e06cd316a49556bc80e8284c2dab6ac094f75c5f", "patch": "@@ -1,3 +1,5 @@\n+//~  ERROR mismatched types\n+//~| ERROR mismatched types\n // Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n@@ -14,14 +16,6 @@ struct Foo<'a> {\n \n impl <'a> Foo<'a>{\n     fn bar(self: &mut Foo) {\n-    //~^ mismatched method receiver\n-    //~| expected type `&mut Foo<'a>`\n-    //~| found type `&mut Foo<'_>`\n-    //~| lifetime mismatch\n-    //~| mismatched method receiver\n-    //~| expected type `&mut Foo<'a>`\n-    //~| found type `&mut Foo<'_>`\n-    //~| lifetime mismatch\n     }\n }\n "}, {"sha": "553fd79f5e50b535a07e2b55e268bb1e785ac409", "filename": "src/test/compile-fail/ufcs-explicit-self-bad.rs", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e06cd316a49556bc80e8284c2dab6ac094f75c5f/src%2Ftest%2Fcompile-fail%2Fufcs-explicit-self-bad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e06cd316a49556bc80e8284c2dab6ac094f75c5f/src%2Ftest%2Fcompile-fail%2Fufcs-explicit-self-bad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fufcs-explicit-self-bad.rs?ref=e06cd316a49556bc80e8284c2dab6ac094f75c5f", "patch": "@@ -1,3 +1,7 @@\n+//~  ERROR mismatched types\n+//~| ERROR mismatched types\n+//~| ERROR mismatched types\n+//~| ERROR mismatched types\n // Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n@@ -47,17 +51,8 @@ trait SomeTrait {\n \n impl<'a, T> SomeTrait for &'a Bar<T> {\n     fn dummy1(self: &&'a Bar<T>) { }\n-    fn dummy2(self: &Bar<T>) {} //~ ERROR mismatched method receiver\n-    //~^ ERROR mismatched method receiver\n+    fn dummy2(self: &Bar<T>) {}\n     fn dummy3(self: &&Bar<T>) {}\n-    //~^ ERROR mismatched method receiver\n-    //~| expected type `&&'a Bar<T>`\n-    //~| found type `&&Bar<T>`\n-    //~| lifetime mismatch\n-    //~| ERROR mismatched method receiver\n-    //~| expected type `&&'a Bar<T>`\n-    //~| found type `&&Bar<T>`\n-    //~| lifetime mismatch\n }\n \n fn main() {"}]}