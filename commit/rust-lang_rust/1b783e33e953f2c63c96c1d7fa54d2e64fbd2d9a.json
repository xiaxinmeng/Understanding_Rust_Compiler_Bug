{"sha": "1b783e33e953f2c63c96c1d7fa54d2e64fbd2d9a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiNzgzZTMzZTk1M2YyYzYzYzk2YzFkN2ZhNTRkMmU2NGZiZDJkOWE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-06-08T11:48:56Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-06-08T11:48:56Z"}, "message": "one macro def should be enough", "tree": {"sha": "391c4e4ca264830a19045b2016034bb1bdbb98d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/391c4e4ca264830a19045b2016034bb1bdbb98d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b783e33e953f2c63c96c1d7fa54d2e64fbd2d9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b783e33e953f2c63c96c1d7fa54d2e64fbd2d9a", "html_url": "https://github.com/rust-lang/rust/commit/1b783e33e953f2c63c96c1d7fa54d2e64fbd2d9a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b783e33e953f2c63c96c1d7fa54d2e64fbd2d9a/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c28f5245dd8ede715d99b55fdad0ceb3de9dbe7", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c28f5245dd8ede715d99b55fdad0ceb3de9dbe7", "html_url": "https://github.com/rust-lang/rust/commit/2c28f5245dd8ede715d99b55fdad0ceb3de9dbe7"}], "stats": {"total": 58, "additions": 25, "deletions": 33}, "files": [{"sha": "27850028b7d408bb1a2f5ae9d190706332defa2f", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1b783e33e953f2c63c96c1d7fa54d2e64fbd2d9a/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b783e33e953f2c63c96c1d7fa54d2e64fbd2d9a/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=1b783e33e953f2c63c96c1d7fa54d2e64fbd2d9a", "patch": "@@ -939,6 +939,15 @@ pub struct MacroDef {\n     pub(crate) id: MacroDefId,\n }\n \n+impl MacroDef {\n+    pub fn source(\n+        &self,\n+        db: &(impl DefDatabase + AstDatabase),\n+    ) -> (HirFileId, TreeArc<ast::MacroCall>) {\n+        (self.id.0.file_id(), self.id.0.to_node(db))\n+    }\n+}\n+\n pub enum Container {\n     Trait(Trait),\n     ImplBlock(ImplBlock),"}, {"sha": "1b0f84de5235609b9e453c02eb63d97d440f1d01", "filename": "crates/ra_hir/src/docs.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1b783e33e953f2c63c96c1d7fa54d2e64fbd2d9a/crates%2Fra_hir%2Fsrc%2Fdocs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b783e33e953f2c63c96c1d7fa54d2e64fbd2d9a/crates%2Fra_hir%2Fsrc%2Fdocs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fdocs.rs?ref=1b783e33e953f2c63c96c1d7fa54d2e64fbd2d9a", "patch": "@@ -4,7 +4,7 @@ use ra_syntax::ast;\n \n use crate::{\n     HirDatabase, DefDatabase, AstDatabase,\n-    Module, StructField, Struct, Enum, EnumVariant, Static, Const, Function, Union, Trait, TypeAlias, FieldSource\n+    Module, StructField, Struct, Enum, EnumVariant, Static, Const, Function, Union, Trait, TypeAlias, FieldSource, MacroDef,\n };\n \n #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n@@ -20,6 +20,7 @@ pub enum DocDef {\n     Union(Union),\n     Trait(Trait),\n     TypeAlias(TypeAlias),\n+    MacroDef(MacroDef),\n }\n \n impl_froms!(\n@@ -33,7 +34,8 @@ impl_froms!(\n     Function,\n     Union,\n     Trait,\n-    TypeAlias\n+    TypeAlias,\n+    MacroDef\n );\n \n /// Holds documentation\n@@ -83,6 +85,7 @@ pub(crate) fn documentation_query(\n         DocDef::Union(it) => docs_from_ast(&*it.source(db).1),\n         DocDef::Trait(it) => docs_from_ast(&*it.source(db).1),\n         DocDef::TypeAlias(it) => docs_from_ast(&*it.source(db).1),\n+        DocDef::MacroDef(it) => docs_from_ast(&*it.source(db).1),\n     }\n }\n "}, {"sha": "0e4aaf678ea49758b5030e8d53d4dee26bc829b4", "filename": "crates/ra_hir/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b783e33e953f2c63c96c1d7fa54d2e64fbd2d9a/crates%2Fra_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b783e33e953f2c63c96c1d7fa54d2e64fbd2d9a/crates%2Fra_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Flib.rs?ref=1b783e33e953f2c63c96c1d7fa54d2e64fbd2d9a", "patch": "@@ -69,7 +69,7 @@ pub use self::{\n     expr::ExprScopes,\n     resolve::Resolution,\n     generics::{GenericParams, GenericParam, HasGenericParams},\n-    source_binder::{SourceAnalyzer, PathResolution, ScopeEntryWithSyntax,MacroByExampleDef},\n+    source_binder::{SourceAnalyzer, PathResolution, ScopeEntryWithSyntax},\n };\n \n pub use self::code_model::{"}, {"sha": "410064d45acb721d1ee71039327f914c6ca56d83", "filename": "crates/ra_hir/src/source_binder.rs", "status": "modified", "additions": 6, "deletions": 24, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/1b783e33e953f2c63c96c1d7fa54d2e64fbd2d9a/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b783e33e953f2c63c96c1d7fa54d2e64fbd2d9a/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs?ref=1b783e33e953f2c63c96c1d7fa54d2e64fbd2d9a", "patch": "@@ -10,18 +10,17 @@ use std::sync::Arc;\n use rustc_hash::{FxHashSet, FxHashMap};\n use ra_db::{FileId, FilePosition};\n use ra_syntax::{\n-    SyntaxNode, AstPtr, TextUnit, SyntaxNodePtr, TextRange,TreeArc,\n+    SyntaxNode, AstPtr, TextUnit, SyntaxNodePtr, TextRange,\n     ast::{self, AstNode, NameOwner},\n     algo::find_node_at_offset,\n     SyntaxKind::*,\n };\n \n use crate::{\n     HirDatabase, Function, Struct, Enum, Const, Static, Either, DefWithBody, PerNs, Name,\n-    AsName, Module, HirFileId, Crate, Trait, Resolver, Ty,Path,\n+    AsName, Module, HirFileId, Crate, Trait, Resolver, Ty, Path, MacroDef,\n     expr::{BodySourceMap, scope::{ScopeId, ExprScopes}},\n-    ids::{LocationCtx, MacroDefId},\n-    docs::{docs_from_ast,Documentation},\n+    ids::LocationCtx,\n     expr, AstId,\n };\n \n@@ -182,27 +181,10 @@ pub enum PathResolution {\n     /// A generic parameter\n     GenericParam(u32),\n     SelfType(crate::ImplBlock),\n-    Macro(MacroByExampleDef),\n+    Macro(MacroDef),\n     AssocItem(crate::ImplItem),\n }\n \n-#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n-pub struct MacroByExampleDef {\n-    pub(crate) id: MacroDefId,\n-}\n-\n-impl MacroByExampleDef {\n-    pub fn source(&self, db: &impl HirDatabase) -> (HirFileId, TreeArc<ast::MacroCall>) {\n-        (self.id.0.file_id(), self.id.0.to_node(db))\n-    }\n-}\n-\n-impl crate::Docs for MacroByExampleDef {\n-    fn docs(&self, db: &impl HirDatabase) -> Option<Documentation> {\n-        docs_from_ast(&*self.source(db).1)\n-    }\n-}\n-\n #[derive(Debug, Clone, PartialEq, Eq)]\n pub struct ScopeEntryWithSyntax {\n     pub(crate) name: Name,\n@@ -284,10 +266,10 @@ impl SourceAnalyzer {\n         &self,\n         db: &impl HirDatabase,\n         macro_call: &ast::MacroCall,\n-    ) -> Option<MacroByExampleDef> {\n+    ) -> Option<MacroDef> {\n         let id =\n             self.resolver.resolve_macro_call(db, macro_call.path().and_then(Path::from_ast))?;\n-        Some(MacroByExampleDef { id })\n+        Some(MacroDef { id })\n     }\n \n     pub fn resolve_hir_path("}, {"sha": "45002d098baec428ac23a42f4fb6d3c49d128257", "filename": "crates/ra_ide_api/src/display/navigation_target.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1b783e33e953f2c63c96c1d7fa54d2e64fbd2d9a/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b783e33e953f2c63c96c1d7fa54d2e64fbd2d9a/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fnavigation_target.rs?ref=1b783e33e953f2c63c96c1d7fa54d2e64fbd2d9a", "patch": "@@ -238,10 +238,7 @@ impl NavigationTarget {\n         }\n     }\n \n-    pub(crate) fn from_macro_def(\n-        db: &RootDatabase,\n-        macro_call: hir::MacroByExampleDef,\n-    ) -> NavigationTarget {\n+    pub(crate) fn from_macro_def(db: &RootDatabase, macro_call: hir::MacroDef) -> NavigationTarget {\n         let (file_id, node) = macro_call.source(db);\n         log::debug!(\"nav target {}\", node.syntax().debug_dump());\n         NavigationTarget::from_named(file_id.original_file(db), &*node)"}, {"sha": "000036db423cdd288cad77086e9e243ddd6d2fc5", "filename": "crates/ra_ide_api/src/name_ref_kind.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1b783e33e953f2c63c96c1d7fa54d2e64fbd2d9a/crates%2Fra_ide_api%2Fsrc%2Fname_ref_kind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b783e33e953f2c63c96c1d7fa54d2e64fbd2d9a/crates%2Fra_ide_api%2Fsrc%2Fname_ref_kind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fname_ref_kind.rs?ref=1b783e33e953f2c63c96c1d7fa54d2e64fbd2d9a", "patch": "@@ -1,11 +1,12 @@\n use ra_syntax::{AstNode, AstPtr, ast};\n use hir::Either;\n-use crate::db::RootDatabase;\n use test_utils::tested_by;\n \n+use crate::db::RootDatabase;\n+\n pub enum NameRefKind {\n     Method(hir::Function),\n-    Macro(hir::MacroByExampleDef),\n+    Macro(hir::MacroDef),\n     FieldAccess(hir::StructField),\n     AssocItem(hir::ImplItem),\n     Def(hir::ModuleDef),"}]}