{"sha": "749cb1931fbad28ead9c619c3c5f53bbe1824aff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0OWNiMTkzMWZiYWQyOGVhZDljNjE5YzNjNWY1M2JiZTE4MjRhZmY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-05-20T09:13:28Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-05-20T09:13:28Z"}, "message": "Auto merge of #25596 - Ms2ger:rbml-docs, r=alexcrichton\n\nThis leads to more idiomatic code in the callers.", "tree": {"sha": "e5bc202d606686692f7b22c15d274da222938a16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5bc202d606686692f7b22c15d274da222938a16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/749cb1931fbad28ead9c619c3c5f53bbe1824aff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/749cb1931fbad28ead9c619c3c5f53bbe1824aff", "html_url": "https://github.com/rust-lang/rust/commit/749cb1931fbad28ead9c619c3c5f53bbe1824aff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/749cb1931fbad28ead9c619c3c5f53bbe1824aff/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d718f236dfdb086099d6147895416422aae4283", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d718f236dfdb086099d6147895416422aae4283", "html_url": "https://github.com/rust-lang/rust/commit/6d718f236dfdb086099d6147895416422aae4283"}, {"sha": "fb7c0b44bb8dd47de07a05d6a17813dd614e3dff", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb7c0b44bb8dd47de07a05d6a17813dd614e3dff", "html_url": "https://github.com/rust-lang/rust/commit/fb7c0b44bb8dd47de07a05d6a17813dd614e3dff"}], "stats": {"total": 69, "additions": 42, "deletions": 27}, "files": [{"sha": "65433c528bc52b92cc6679d0669585471fbaf75d", "filename": "src/librbml/lib.rs", "status": "modified", "additions": 35, "deletions": 12, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/749cb1931fbad28ead9c619c3c5f53bbe1824aff/src%2Flibrbml%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/749cb1931fbad28ead9c619c3c5f53bbe1824aff/src%2Flibrbml%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrbml%2Flib.rs?ref=749cb1931fbad28ead9c619c3c5f53bbe1824aff", "patch": "@@ -397,20 +397,43 @@ pub mod reader {\n         }\n     }\n \n-    pub fn docs<F>(d: Doc, mut it: F) -> bool where\n-        F: FnMut(usize, Doc) -> bool,\n-    {\n-        let mut pos = d.start;\n-        while pos < d.end {\n-            let elt_tag = try_or!(tag_at(d.data, pos), false);\n-            let elt_size = try_or!(tag_len_at(d.data, elt_tag), false);\n-            pos = elt_size.next + elt_size.val;\n-            let doc = Doc { data: d.data, start: elt_size.next, end: pos };\n-            if !it(elt_tag.val, doc) {\n-                return false;\n+    pub fn docs<'a>(d: Doc<'a>) -> DocsIterator<'a> {\n+        DocsIterator {\n+            d: d\n+        }\n+    }\n+\n+    pub struct DocsIterator<'a> {\n+        d: Doc<'a>,\n+    }\n+\n+    impl<'a> Iterator for DocsIterator<'a> {\n+        type Item = (usize, Doc<'a>);\n+\n+        fn next(&mut self) -> Option<(usize, Doc<'a>)> {\n+            if self.d.start >= self.d.end {\n+                return None;\n             }\n+\n+            let elt_tag = try_or!(tag_at(self.d.data, self.d.start), {\n+                self.d.start = self.d.end;\n+                None\n+            });\n+            let elt_size = try_or!(tag_len_at(self.d.data, elt_tag), {\n+                self.d.start = self.d.end;\n+                None\n+            });\n+\n+            let end = elt_size.next + elt_size.val;\n+            let doc = Doc {\n+                data: self.d.data,\n+                start: elt_size.next,\n+                end: end,\n+            };\n+\n+            self.d.start = end;\n+            return Some((elt_tag.val, doc));\n         }\n-        return true;\n     }\n \n     pub fn tagged_docs<F>(d: Doc, tg: usize, mut it: F) -> bool where"}, {"sha": "2c11ee8baa9d6503ca079265c97c454e9d936c0d", "filename": "src/librustc/metadata/decoder.rs", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/749cb1931fbad28ead9c619c3c5f53bbe1824aff/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/749cb1931fbad28ead9c619c3c5f53bbe1824aff/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fdecoder.rs?ref=749cb1931fbad28ead9c619c3c5f53bbe1824aff", "patch": "@@ -275,25 +275,18 @@ fn enum_variant_ids(item: rbml::Doc, cdata: Cmd) -> Vec<ast::DefId> {\n \n fn item_path(item_doc: rbml::Doc) -> Vec<ast_map::PathElem> {\n     let path_doc = reader::get_doc(item_doc, tag_path);\n-\n-    let len_doc = reader::get_doc(path_doc, tag_path_len);\n-    let len = reader::doc_as_u32(len_doc) as usize;\n-\n-    let mut result = Vec::with_capacity(len);\n-    reader::docs(path_doc, |tag, elt_doc| {\n+    reader::docs(path_doc).filter_map(|(tag, elt_doc)| {\n         if tag == tag_path_elem_mod {\n             let s = elt_doc.as_str_slice();\n-            result.push(ast_map::PathMod(token::intern(s)));\n+            Some(ast_map::PathMod(token::intern(s)))\n         } else if tag == tag_path_elem_name {\n             let s = elt_doc.as_str_slice();\n-            result.push(ast_map::PathName(token::intern(s)));\n+            Some(ast_map::PathName(token::intern(s)))\n         } else {\n             // ignore tag_path_len element\n+            None\n         }\n-        true\n-    });\n-\n-    result\n+    }).collect()\n }\n \n fn item_name(intr: &IdentInterner, item: rbml::Doc) -> ast::Name {"}, {"sha": "226010aaa817c7c5bfe9d0a14e7fc9a8f6b43b57", "filename": "src/librustc/middle/astencode.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/749cb1931fbad28ead9c619c3c5f53bbe1824aff/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/749cb1931fbad28ead9c619c3c5f53bbe1824aff/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fastencode.rs?ref=749cb1931fbad28ead9c619c3c5f53bbe1824aff", "patch": "@@ -1726,7 +1726,7 @@ impl<'a, 'tcx> rbml_decoder_decoder_helpers<'tcx> for reader::Decoder<'a> {\n fn decode_side_tables(dcx: &DecodeContext,\n                       ast_doc: rbml::Doc) {\n     let tbl_doc = ast_doc.get(c::tag_table as usize);\n-    reader::docs(tbl_doc, |tag, entry_doc| {\n+    for (tag, entry_doc) in reader::docs(tbl_doc) {\n         let mut entry_dsr = reader::Decoder::new(entry_doc);\n         let id0: ast::NodeId = Decodable::decode(&mut entry_dsr).unwrap();\n         let id = dcx.tr_id(id0);\n@@ -1840,8 +1840,7 @@ fn decode_side_tables(dcx: &DecodeContext,\n         }\n \n         debug!(\">< Side table doc loaded\");\n-        true\n-    });\n+    }\n }\n \n // ______________________________________________________________________"}]}