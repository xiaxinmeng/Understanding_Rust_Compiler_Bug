{"sha": "c2a79fb490201e81b3d90191c8462dd2264ec174", "node_id": "C_kwDOAAsO6NoAKGMyYTc5ZmI0OTAyMDFlODFiM2Q5MDE5MWM4NDYyZGQyMjY0ZWMxNzQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-27T13:10:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-27T13:10:52Z"}, "message": "Rollup merge of #110426 - calebcartwright:style-let-else-examples, r=compiler-errors\n\ndocs(style): add more let-else examples\n\nAdding a few more examples for increased clarity based on subsequent discussion that arose after implementation work began.\n\nWill need approval from t-style, but also cc ```@ytmimi``` to make sure these examples don't contradict any examples we've been incorporating as part of the rustfmt implementation", "tree": {"sha": "282bb70289ef3b9813e894b0cf6750ffcb0daee1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/282bb70289ef3b9813e894b0cf6750ffcb0daee1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2a79fb490201e81b3d90191c8462dd2264ec174", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkSnRcCRBK7hj4Ov3rIwAAFzwIAKZGUq9uEKR45FbwjNlrp8Ph\n+ZBCcQ4t9mel/KtL29bSkVmioIYRK2gqY7Cx+CjDFj/L+vZaDGr7MtJAIy4TfAZB\nCy57CNuhdLznj4s+soabBaJT475wAszo7ppCeZLKOLE1RRJII8eZupRNA0/bbkx6\nmSR+0qY6eiy6XyH+DwkExObwT5m874FA9eNSpK/yiDjLg2rQtiergnIGeoX/DSkZ\nI2NyZLQ+Oj9IZY6mOUitUczvQ/YXCx0bvmPFPdwTMrRkFSEqW3jmMgXevLwztqJy\nF8IzPbhRSyJSpi20HU3GAnbjwy5NgDHCq8swLxLHIc/JVyNLQURpXmWAihajigg=\n=TlXd\n-----END PGP SIGNATURE-----\n", "payload": "tree 282bb70289ef3b9813e894b0cf6750ffcb0daee1\nparent 6ce22733b973355573efd1e6294e585460e90e17\nparent 0776a4bf27bd8fe813e33354b43b5b50e5469852\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1682601052 +0200\ncommitter GitHub <noreply@github.com> 1682601052 +0200\n\nRollup merge of #110426 - calebcartwright:style-let-else-examples, r=compiler-errors\n\ndocs(style): add more let-else examples\n\nAdding a few more examples for increased clarity based on subsequent discussion that arose after implementation work began.\n\nWill need approval from t-style, but also cc ```@ytmimi``` to make sure these examples don't contradict any examples we've been incorporating as part of the rustfmt implementation\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2a79fb490201e81b3d90191c8462dd2264ec174", "html_url": "https://github.com/rust-lang/rust/commit/c2a79fb490201e81b3d90191c8462dd2264ec174", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2a79fb490201e81b3d90191c8462dd2264ec174/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ce22733b973355573efd1e6294e585460e90e17", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ce22733b973355573efd1e6294e585460e90e17", "html_url": "https://github.com/rust-lang/rust/commit/6ce22733b973355573efd1e6294e585460e90e17"}, {"sha": "0776a4bf27bd8fe813e33354b43b5b50e5469852", "url": "https://api.github.com/repos/rust-lang/rust/commits/0776a4bf27bd8fe813e33354b43b5b50e5469852", "html_url": "https://github.com/rust-lang/rust/commit/0776a4bf27bd8fe813e33354b43b5b50e5469852"}], "stats": {"total": 37, "additions": 25, "deletions": 12}, "files": [{"sha": "671e6d31a5775aeb25196da84044adc90a61c80e", "filename": "src/doc/style-guide/src/statements.md", "status": "modified", "additions": 25, "deletions": 12, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/c2a79fb490201e81b3d90191c8462dd2264ec174/src%2Fdoc%2Fstyle-guide%2Fsrc%2Fstatements.md", "raw_url": "https://github.com/rust-lang/rust/raw/c2a79fb490201e81b3d90191c8462dd2264ec174/src%2Fdoc%2Fstyle-guide%2Fsrc%2Fstatements.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fstyle-guide%2Fsrc%2Fstatements.md?ref=c2a79fb490201e81b3d90191c8462dd2264ec174", "patch": "@@ -138,18 +138,31 @@ Otherwise, the `else` keyword and opening brace should be placed on the next lin\n For example:\n \n ```rust\n-let Some(x) = abcdef()\n-    .foo(\n-        \"abc\",\n-        some_really_really_really_long_ident,\n-        \"ident\",\n-        \"123456\",\n-    )\n-    .bar()\n-    .baz()\n-    .qux(\"fffffffffffffffff\")\n-else {\n-    foo_bar()\n+fn main() {\n+    let Some(x) = abcdef()\n+        .foo(\n+            \"abc\",\n+            some_really_really_really_long_ident,\n+            \"ident\",\n+            \"123456\",\n+        )\n+        .bar()\n+        .baz()\n+        .qux(\"fffffffffffffffff\")\n+    else {\n+        return\n+    };\n+\n+    let Some(x) = some_really_really_really_really_really_really_really_really_really_long_name\n+    else {\n+        return;\n+    };\n+\n+    let Some(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa) =\n+        bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n+    else {\n+        return;\n+    };\n }\n ```\n "}]}