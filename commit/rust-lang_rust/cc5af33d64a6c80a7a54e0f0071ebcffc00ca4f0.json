{"sha": "cc5af33d64a6c80a7a54e0f0071ebcffc00ca4f0", "node_id": "C_kwDOAAsO6NoAKGNjNWFmMzNkNjRhNmM4MGE3YTU0ZTBmMDA3MWViY2ZmYzAwY2E0ZjA", "commit": {"author": {"name": "mejrs", "email": "59372212+mejrs@users.noreply.github.com", "date": "2023-01-19T12:52:15Z"}, "committer": {"name": "mejrs", "email": "59372212+mejrs@users.noreply.github.com", "date": "2023-01-19T12:52:15Z"}, "message": "Autoderive ExternBlockSuggestion", "tree": {"sha": "82ff73025a6e464957a2361d734514f8dd22613f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82ff73025a6e464957a2361d734514f8dd22613f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc5af33d64a6c80a7a54e0f0071ebcffc00ca4f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc5af33d64a6c80a7a54e0f0071ebcffc00ca4f0", "html_url": "https://github.com/rust-lang/rust/commit/cc5af33d64a6c80a7a54e0f0071ebcffc00ca4f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc5af33d64a6c80a7a54e0f0071ebcffc00ca4f0/comments", "author": {"login": "mejrs", "id": 59372212, "node_id": "MDQ6VXNlcjU5MzcyMjEy", "avatar_url": "https://avatars.githubusercontent.com/u/59372212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mejrs", "html_url": "https://github.com/mejrs", "followers_url": "https://api.github.com/users/mejrs/followers", "following_url": "https://api.github.com/users/mejrs/following{/other_user}", "gists_url": "https://api.github.com/users/mejrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/mejrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mejrs/subscriptions", "organizations_url": "https://api.github.com/users/mejrs/orgs", "repos_url": "https://api.github.com/users/mejrs/repos", "events_url": "https://api.github.com/users/mejrs/events{/privacy}", "received_events_url": "https://api.github.com/users/mejrs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mejrs", "id": 59372212, "node_id": "MDQ6VXNlcjU5MzcyMjEy", "avatar_url": "https://avatars.githubusercontent.com/u/59372212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mejrs", "html_url": "https://github.com/mejrs", "followers_url": "https://api.github.com/users/mejrs/followers", "following_url": "https://api.github.com/users/mejrs/following{/other_user}", "gists_url": "https://api.github.com/users/mejrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/mejrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mejrs/subscriptions", "organizations_url": "https://api.github.com/users/mejrs/orgs", "repos_url": "https://api.github.com/users/mejrs/repos", "events_url": "https://api.github.com/users/mejrs/events{/privacy}", "received_events_url": "https://api.github.com/users/mejrs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f72129ffe5e8c495113f9a2d4e1730f7fad3209", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f72129ffe5e8c495113f9a2d4e1730f7fad3209", "html_url": "https://github.com/rust-lang/rust/commit/1f72129ffe5e8c495113f9a2d4e1730f7fad3209"}], "stats": {"total": 60, "additions": 27, "deletions": 33}, "files": [{"sha": "902b4b1a1ecfefb5fa53fbbfd499f2a2b0329dfb", "filename": "compiler/rustc_ast_passes/src/ast_validation.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/cc5af33d64a6c80a7a54e0f0071ebcffc00ca4f0/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc5af33d64a6c80a7a54e0f0071ebcffc00ca4f0/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs?ref=cc5af33d64a6c80a7a54e0f0071ebcffc00ca4f0", "patch": "@@ -1100,16 +1100,17 @@ impl<'a> Visitor<'a> for AstValidator<'a> {\n                         replace_span: self.ending_semi_or_hi(item.span),\n                         extern_block_suggestion: match sig.header.ext {\n                             Extern::None => None,\n-                            Extern::Implicit(start_span) => Some(ExternBlockSuggestion {\n+                            Extern::Implicit(start_span) => Some(ExternBlockSuggestion::Implicit {\n                                 start_span,\n                                 end_span: item.span.shrink_to_hi(),\n-                                abi: None,\n-                            }),\n-                            Extern::Explicit(abi, start_span) => Some(ExternBlockSuggestion {\n-                                start_span,\n-                                end_span: item.span.shrink_to_hi(),\n-                                abi: Some(abi.symbol_unescaped),\n                             }),\n+                            Extern::Explicit(abi, start_span) => {\n+                                Some(ExternBlockSuggestion::Explicit {\n+                                    start_span,\n+                                    end_span: item.span.shrink_to_hi(),\n+                                    abi: abi.symbol_unescaped,\n+                                })\n+                            }\n                         },\n                     });\n                 }"}, {"sha": "09e262452b11d5819d0f743fa53b0ca1f264f2cd", "filename": "compiler/rustc_ast_passes/src/errors.rs", "status": "modified", "additions": 17, "deletions": 25, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/cc5af33d64a6c80a7a54e0f0071ebcffc00ca4f0/compiler%2Frustc_ast_passes%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc5af33d64a6c80a7a54e0f0071ebcffc00ca4f0/compiler%2Frustc_ast_passes%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Ferrors.rs?ref=cc5af33d64a6c80a7a54e0f0071ebcffc00ca4f0", "patch": "@@ -1,6 +1,5 @@\n //! Errors emitted by ast_passes.\n \n-use rustc_errors::{fluent, AddToDiagnostic, Applicability, Diagnostic, SubdiagnosticMessage};\n use rustc_macros::{Diagnostic, Subdiagnostic};\n use rustc_span::{Span, Symbol};\n \n@@ -207,28 +206,21 @@ pub struct FnWithoutBody {\n     pub extern_block_suggestion: Option<ExternBlockSuggestion>,\n }\n \n-pub struct ExternBlockSuggestion {\n-    pub start_span: Span,\n-    pub end_span: Span,\n-    pub abi: Option<Symbol>,\n-}\n-\n-impl AddToDiagnostic for ExternBlockSuggestion {\n-    fn add_to_diagnostic_with<F>(self, diag: &mut Diagnostic, _: F)\n-    where\n-        F: Fn(&mut Diagnostic, SubdiagnosticMessage) -> SubdiagnosticMessage,\n-    {\n-        let start_suggestion = if let Some(abi) = self.abi {\n-            format!(\"extern \\\"{}\\\" {{\", abi)\n-        } else {\n-            \"extern {\".to_owned()\n-        };\n-        let end_suggestion = \" }\".to_owned();\n-\n-        diag.multipart_suggestion(\n-            fluent::extern_block_suggestion,\n-            vec![(self.start_span, start_suggestion), (self.end_span, end_suggestion)],\n-            Applicability::MaybeIncorrect,\n-        );\n-    }\n+#[derive(Subdiagnostic)]\n+pub enum ExternBlockSuggestion {\n+    #[multipart_suggestion(ast_passes_extern_block_suggestion, applicability = \"maybe-incorrect\")]\n+    Implicit {\n+        #[suggestion_part(code = \"extern {{\")]\n+        start_span: Span,\n+        #[suggestion_part(code = \" }}\")]\n+        end_span: Span,\n+    },\n+    #[multipart_suggestion(ast_passes_extern_block_suggestion, applicability = \"maybe-incorrect\")]\n+    Explicit {\n+        #[suggestion_part(code = \"extern \\\"{abi}\\\" {{\")]\n+        start_span: Span,\n+        #[suggestion_part(code = \" }}\")]\n+        end_span: Span,\n+        abi: Symbol,\n+    },\n }"}, {"sha": "5f28839f136d6276fd3fb465dd749b8edb7d5ad2", "filename": "compiler/rustc_error_messages/locales/en-US/ast_passes.ftl", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cc5af33d64a6c80a7a54e0f0071ebcffc00ca4f0/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fast_passes.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/cc5af33d64a6c80a7a54e0f0071ebcffc00ca4f0/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fast_passes.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fast_passes.ftl?ref=cc5af33d64a6c80a7a54e0f0071ebcffc00ca4f0", "patch": "@@ -88,4 +88,5 @@ ast_passes_ty_alias_without_body =\n ast_passes_fn_without_body =\n     free function without a body\n     .suggestion = provide a definition for the function\n-    .extern_block_suggestion = if you meant to declare an externally defined function, use an `extern` block\n+\n+ast_passes_extern_block_suggestion = if you meant to declare an externally defined function, use an `extern` block"}]}