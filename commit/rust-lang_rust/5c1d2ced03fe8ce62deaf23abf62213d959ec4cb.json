{"sha": "5c1d2ced03fe8ce62deaf23abf62213d959ec4cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjMWQyY2VkMDNmZThjZTYyZGVhZjIzYWJmNjIyMTNkOTU5ZWM0Y2I=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "eddyb@lyken.rs", "date": "2020-12-09T19:54:24Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "eddyb@lyken.rs", "date": "2020-12-09T19:54:24Z"}, "message": "tests: add 3 cases involving pointers to codegen/transmute-scalar.", "tree": {"sha": "f69a1aa0517112738015be32e8c35dab8b048434", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f69a1aa0517112738015be32e8c35dab8b048434"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c1d2ced03fe8ce62deaf23abf62213d959ec4cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c1d2ced03fe8ce62deaf23abf62213d959ec4cb", "html_url": "https://github.com/rust-lang/rust/commit/5c1d2ced03fe8ce62deaf23abf62213d959ec4cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c1d2ced03fe8ce62deaf23abf62213d959ec4cb/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97c7022d08fac94c09f671322c0696d65a75cca0", "url": "https://api.github.com/repos/rust-lang/rust/commits/97c7022d08fac94c09f671322c0696d65a75cca0", "html_url": "https://github.com/rust-lang/rust/commit/97c7022d08fac94c09f671322c0696d65a75cca0"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "f16335fdc74f3176a631ee9bc55633a6ce665c1d", "filename": "src/test/codegen/transmute-scalar.rs", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/5c1d2ced03fe8ce62deaf23abf62213d959ec4cb/src%2Ftest%2Fcodegen%2Ftransmute-scalar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c1d2ced03fe8ce62deaf23abf62213d959ec4cb/src%2Ftest%2Fcodegen%2Ftransmute-scalar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Ftransmute-scalar.rs?ref=5c1d2ced03fe8ce62deaf23abf62213d959ec4cb", "patch": "@@ -2,6 +2,9 @@\n \n #![crate_type = \"lib\"]\n \n+// FIXME(eddyb) all of these tests show memory stores and loads, even after a\n+// scalar `bitcast`, more special-casing is required to remove `alloca` usage.\n+\n // CHECK: define i32 @f32_to_bits(float %x)\n // CHECK: %2 = bitcast float %x to i32\n // CHECK-NEXT: store i32 %2, i32* %0\n@@ -33,3 +36,50 @@ pub fn bool_to_byte(b: bool) -> u8 {\n pub unsafe fn byte_to_bool(byte: u8) -> bool {\n     std::mem::transmute(byte)\n }\n+\n+// CHECK: define i8* @ptr_to_ptr(i16* %p)\n+// CHECK: %2 = bitcast i16* %p to i8*\n+// CHECK-NEXT: store i8* %2, i8** %0\n+// CHECK-NEXT: %3 = load i8*, i8** %0\n+// CHECK: ret i8* %3\n+#[no_mangle]\n+pub fn ptr_to_ptr(p: *mut u16) -> *mut u8 {\n+    unsafe { std::mem::transmute(p) }\n+}\n+\n+// HACK(eddyb) scalar `transmute`s between pointers and non-pointers are\n+// currently not special-cased like other scalar `transmute`s, because\n+// LLVM requires specifically `ptrtoint`/`inttoptr` instead of `bitcast`.\n+//\n+// Tests below show the non-special-cased behavior (with the possible\n+// future special-cased instructions in the \"NOTE(eddyb)\" comments).\n+\n+// CHECK: define [[USIZE:i[0-9]+]] @ptr_to_int(i16* %p)\n+\n+// NOTE(eddyb) see above, the following two CHECK lines should ideally be this:\n+//        %2 = ptrtoint i16* %p to [[USIZE]]\n+//             store [[USIZE]] %2, [[USIZE]]* %0\n+// CHECK: %2 = bitcast [[USIZE]]* %0 to i16**\n+// CHECK-NEXT: store i16* %p, i16** %2\n+\n+// CHECK-NEXT: %3 = load [[USIZE]], [[USIZE]]* %0\n+// CHECK: ret [[USIZE]] %3\n+#[no_mangle]\n+pub fn ptr_to_int(p: *mut u16) -> usize {\n+    unsafe { std::mem::transmute(p) }\n+}\n+\n+// CHECK: define i16* @int_to_ptr([[USIZE]] %i)\n+\n+// NOTE(eddyb) see above, the following two CHECK lines should ideally be this:\n+//        %2 = inttoptr [[USIZE]] %i to i16*\n+//             store i16* %2, i16** %0\n+// CHECK: %2 = bitcast i16** %0 to [[USIZE]]*\n+// CHECK-NEXT: store [[USIZE]] %i, [[USIZE]]* %2\n+\n+// CHECK-NEXT: %3 = load i16*, i16** %0\n+// CHECK: ret i16* %3\n+#[no_mangle]\n+pub fn int_to_ptr(i: usize) -> *mut u16 {\n+    unsafe { std::mem::transmute(i) }\n+}"}]}