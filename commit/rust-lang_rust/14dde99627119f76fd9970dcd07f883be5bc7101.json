{"sha": "14dde99627119f76fd9970dcd07f883be5bc7101", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0ZGRlOTk2MjcxMTlmNzZmZDk5NzBkY2QwN2Y4ODNiZTViYzcxMDE=", "commit": {"author": {"name": "Christophe MASSOLIN", "email": "christophe.massolin@gmail.com", "date": "2020-05-05T16:15:13Z"}, "committer": {"name": "Christophe MASSOLIN", "email": "christophe.massolin@gmail.com", "date": "2020-05-05T16:15:13Z"}, "message": "Pass cargo.target to rustc", "tree": {"sha": "687af617a53f8eb238d9251fc9ec8cdf1edb0e76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/687af617a53f8eb238d9251fc9ec8cdf1edb0e76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14dde99627119f76fd9970dcd07f883be5bc7101", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14dde99627119f76fd9970dcd07f883be5bc7101", "html_url": "https://github.com/rust-lang/rust/commit/14dde99627119f76fd9970dcd07f883be5bc7101", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14dde99627119f76fd9970dcd07f883be5bc7101/comments", "author": {"login": "FuriouZz", "id": 1800468, "node_id": "MDQ6VXNlcjE4MDA0Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/1800468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FuriouZz", "html_url": "https://github.com/FuriouZz", "followers_url": "https://api.github.com/users/FuriouZz/followers", "following_url": "https://api.github.com/users/FuriouZz/following{/other_user}", "gists_url": "https://api.github.com/users/FuriouZz/gists{/gist_id}", "starred_url": "https://api.github.com/users/FuriouZz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FuriouZz/subscriptions", "organizations_url": "https://api.github.com/users/FuriouZz/orgs", "repos_url": "https://api.github.com/users/FuriouZz/repos", "events_url": "https://api.github.com/users/FuriouZz/events{/privacy}", "received_events_url": "https://api.github.com/users/FuriouZz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "FuriouZz", "id": 1800468, "node_id": "MDQ6VXNlcjE4MDA0Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/1800468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FuriouZz", "html_url": "https://github.com/FuriouZz", "followers_url": "https://api.github.com/users/FuriouZz/followers", "following_url": "https://api.github.com/users/FuriouZz/following{/other_user}", "gists_url": "https://api.github.com/users/FuriouZz/gists{/gist_id}", "starred_url": "https://api.github.com/users/FuriouZz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FuriouZz/subscriptions", "organizations_url": "https://api.github.com/users/FuriouZz/orgs", "repos_url": "https://api.github.com/users/FuriouZz/repos", "events_url": "https://api.github.com/users/FuriouZz/events{/privacy}", "received_events_url": "https://api.github.com/users/FuriouZz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ab4340cdb31ac4d50f039f0a56ebaff86710eb7", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ab4340cdb31ac4d50f039f0a56ebaff86710eb7", "html_url": "https://github.com/rust-lang/rust/commit/0ab4340cdb31ac4d50f039f0a56ebaff86710eb7"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "8fa895aa653d587c52266db325b24d4a1f0ed43d", "filename": "crates/ra_project_model/src/lib.rs", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/14dde99627119f76fd9970dcd07f883be5bc7101/crates%2Fra_project_model%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14dde99627119f76fd9970dcd07f883be5bc7101/crates%2Fra_project_model%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Flib.rs?ref=14dde99627119f76fd9970dcd07f883be5bc7101", "patch": "@@ -543,7 +543,7 @@ impl ProjectWorkspace {\n     }\n }\n \n-pub fn get_rustc_cfg_options() -> CfgOptions {\n+pub fn get_rustc_cfg_options(target: Option<&String>) -> CfgOptions {\n     let mut cfg_options = CfgOptions::default();\n \n     // Some nightly-only cfgs, which are required for stdlib\n@@ -558,10 +558,18 @@ pub fn get_rustc_cfg_options() -> CfgOptions {\n \n     match (|| -> Result<String> {\n         // `cfg(test)` and `cfg(debug_assertion)` are handled outside, so we suppress them here.\n-        let output = Command::new(\"rustc\")\n-            .args(&[\"--print\", \"cfg\", \"-O\"])\n-            .output()\n-            .context(\"Failed to get output from rustc --print cfg -O\")?;\n+        let output = if let Some(target) = target {\n+            Command::new(\"rustc\")\n+                .args(&[\"--print\", \"cfg\", \"-O\", \"--target\", target.as_str()])\n+                .output()\n+                .context(\"Failed to get output from rustc --print cfg -O\")?\n+        } else {\n+            Command::new(\"rustc\")\n+                .args(&[\"--print\", \"cfg\", \"-O\"])\n+                .output()\n+                .context(\"Failed to get output from rustc --print cfg -O\")?\n+        };\n+\n         if !output.status.success() {\n             bail!(\n                 \"rustc --print cfg -O exited with exit code ({})\","}, {"sha": "023ced6cfb9f02f135d5614559ef24117057211e", "filename": "crates/rust-analyzer/src/cli/load_cargo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/14dde99627119f76fd9970dcd07f883be5bc7101/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14dde99627119f76fd9970dcd07f883be5bc7101/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs?ref=14dde99627119f76fd9970dcd07f883be5bc7101", "patch": "@@ -149,7 +149,7 @@ pub(crate) fn load(\n \n     // FIXME: cfg options?\n     let default_cfg_options = {\n-        let mut opts = get_rustc_cfg_options();\n+        let mut opts = get_rustc_cfg_options(None);\n         opts.insert_atom(\"test\".into());\n         opts.insert_atom(\"debug_assertion\".into());\n         opts"}, {"sha": "16020648df68aefab0b75dabc17eebd5241fa71f", "filename": "crates/rust-analyzer/src/world.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/14dde99627119f76fd9970dcd07f883be5bc7101/crates%2Frust-analyzer%2Fsrc%2Fworld.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14dde99627119f76fd9970dcd07f883be5bc7101/crates%2Frust-analyzer%2Fsrc%2Fworld.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fworld.rs?ref=14dde99627119f76fd9970dcd07f883be5bc7101", "patch": "@@ -131,7 +131,7 @@ impl WorldState {\n \n         // FIXME: Read default cfgs from config\n         let default_cfg_options = {\n-            let mut opts = get_rustc_cfg_options();\n+            let mut opts = get_rustc_cfg_options(config.cargo.target.as_ref());\n             opts.insert_atom(\"test\".into());\n             opts.insert_atom(\"debug_assertion\".into());\n             opts"}]}