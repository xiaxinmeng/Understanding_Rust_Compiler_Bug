{"sha": "7abb2350df361effc0f2f4bad938c42547fbb8ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhYmIyMzUwZGYzNjFlZmZjMGYyZjRiYWQ5MzhjNDI1NDdmYmI4ZWQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-22T23:39:13Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-22T23:39:13Z"}, "message": "let_chains: Revert 'fn with' in ast_validation.", "tree": {"sha": "f9e324d3e5656392dd281ccaa8645bf137a132a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9e324d3e5656392dd281ccaa8645bf137a132a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7abb2350df361effc0f2f4bad938c42547fbb8ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7abb2350df361effc0f2f4bad938c42547fbb8ed", "html_url": "https://github.com/rust-lang/rust/commit/7abb2350df361effc0f2f4bad938c42547fbb8ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7abb2350df361effc0f2f4bad938c42547fbb8ed/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90b9e96cc343b81d8f3e4105b222c573e95ee71c", "url": "https://api.github.com/repos/rust-lang/rust/commits/90b9e96cc343b81d8f3e4105b222c573e95ee71c", "html_url": "https://github.com/rust-lang/rust/commit/90b9e96cc343b81d8f3e4105b222c573e95ee71c"}], "stats": {"total": 29, "additions": 10, "deletions": 19}, "files": [{"sha": "2da9c5adf9baf7a24fd96bed15978cccd37375a0", "filename": "src/librustc_passes/ast_validation.rs", "status": "modified", "additions": 10, "deletions": 19, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/7abb2350df361effc0f2f4bad938c42547fbb8ed/src%2Flibrustc_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7abb2350df361effc0f2f4bad938c42547fbb8ed/src%2Flibrustc_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fast_validation.rs?ref=7abb2350df361effc0f2f4bad938c42547fbb8ed", "patch": "@@ -76,29 +76,18 @@ struct AstValidator<'a> {\n     warning_period_57979_impl_trait_in_proj: bool,\n }\n \n-/// With the `new` value in `store`,\n-/// runs and returns the `scoped` computation,\n-/// resetting the old value of `store` after,\n-/// and returning the result of `scoped`.\n-fn with<C, T, S>(\n-    this: &mut C,\n-    new: S,\n-    store: impl Fn(&mut C) -> &mut S,\n-    scoped: impl FnOnce(&mut C) -> T\n-) -> T {\n-    let old = mem::replace(store(this), new);\n-    let ret = scoped(this);\n-    *store(this) = old;\n-    ret\n-}\n-\n impl<'a> AstValidator<'a> {\n     fn with_impl_trait_in_proj_warning<T>(&mut self, v: bool, f: impl FnOnce(&mut Self) -> T) -> T {\n-        with(self, v, |this| &mut this.warning_period_57979_impl_trait_in_proj, f)\n+        let old = mem::replace(&mut self.warning_period_57979_impl_trait_in_proj, v);\n+        let ret = f(self);\n+        self.warning_period_57979_impl_trait_in_proj = old;\n+        ret\n     }\n \n     fn with_banned_impl_trait(&mut self, f: impl FnOnce(&mut Self)) {\n-        with(self, true, |this| &mut this.is_impl_trait_banned, f)\n+        let old = mem::replace(&mut self.is_impl_trait_banned, true);\n+        f(self);\n+        self.is_impl_trait_banned = old;\n     }\n \n     fn with_banned_assoc_ty_bound(&mut self, f: impl FnOnce(&mut Self)) {\n@@ -108,7 +97,9 @@ impl<'a> AstValidator<'a> {\n     }\n \n     fn with_impl_trait(&mut self, outer: Option<OuterImplTrait>, f: impl FnOnce(&mut Self)) {\n-        with(self, outer, |this| &mut this.outer_impl_trait, f)\n+        let old = mem::replace(&mut self.outer_impl_trait, outer);\n+        f(self);\n+        self.outer_impl_trait = old;\n     }\n \n     fn visit_assoc_ty_constraint_from_generic_args(&mut self, constraint: &'a AssocTyConstraint) {"}]}