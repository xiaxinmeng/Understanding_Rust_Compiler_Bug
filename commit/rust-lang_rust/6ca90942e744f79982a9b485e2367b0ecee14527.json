{"sha": "6ca90942e744f79982a9b485e2367b0ecee14527", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjYTkwOTQyZTc0NGY3OTk4MmE5YjQ4NWUyMzY3YjBlY2VlMTQ1Mjc=", "commit": {"author": {"name": "Jupp M\u00fcller", "email": "jupp0r@gmail.com", "date": "2016-08-06T07:01:12Z"}, "committer": {"name": "Jupp M\u00fcller", "email": "jupp0r@gmail.com", "date": "2016-08-07T07:41:13Z"}, "message": "Add --test-threads option to test binaries\n\nThis change allows parallelism of test runs to be specified by a\ncommand line flag names --test-threads in addition to the existing\nenvironment variable RUST_TEST_THREADS. Fixes #25636.", "tree": {"sha": "c536d947b467be3c4d5a6e8a7ba20a662712d848", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c536d947b467be3c4d5a6e8a7ba20a662712d848"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ca90942e744f79982a9b485e2367b0ecee14527", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ca90942e744f79982a9b485e2367b0ecee14527", "html_url": "https://github.com/rust-lang/rust/commit/6ca90942e744f79982a9b485e2367b0ecee14527", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ca90942e744f79982a9b485e2367b0ecee14527/comments", "author": {"login": "jupp0r", "id": 161598, "node_id": "MDQ6VXNlcjE2MTU5OA==", "avatar_url": "https://avatars.githubusercontent.com/u/161598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jupp0r", "html_url": "https://github.com/jupp0r", "followers_url": "https://api.github.com/users/jupp0r/followers", "following_url": "https://api.github.com/users/jupp0r/following{/other_user}", "gists_url": "https://api.github.com/users/jupp0r/gists{/gist_id}", "starred_url": "https://api.github.com/users/jupp0r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jupp0r/subscriptions", "organizations_url": "https://api.github.com/users/jupp0r/orgs", "repos_url": "https://api.github.com/users/jupp0r/repos", "events_url": "https://api.github.com/users/jupp0r/events{/privacy}", "received_events_url": "https://api.github.com/users/jupp0r/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jupp0r", "id": 161598, "node_id": "MDQ6VXNlcjE2MTU5OA==", "avatar_url": "https://avatars.githubusercontent.com/u/161598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jupp0r", "html_url": "https://github.com/jupp0r", "followers_url": "https://api.github.com/users/jupp0r/followers", "following_url": "https://api.github.com/users/jupp0r/following{/other_user}", "gists_url": "https://api.github.com/users/jupp0r/gists{/gist_id}", "starred_url": "https://api.github.com/users/jupp0r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jupp0r/subscriptions", "organizations_url": "https://api.github.com/users/jupp0r/orgs", "repos_url": "https://api.github.com/users/jupp0r/repos", "events_url": "https://api.github.com/users/jupp0r/events{/privacy}", "received_events_url": "https://api.github.com/users/jupp0r/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c02363852e6ce41cf2da1b43a32cb7780a9b067", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c02363852e6ce41cf2da1b43a32cb7780a9b067", "html_url": "https://github.com/rust-lang/rust/commit/4c02363852e6ce41cf2da1b43a32cb7780a9b067"}], "stats": {"total": 31, "additions": 26, "deletions": 5}, "files": [{"sha": "95650255c5d268be6c7ba1eb5c3e338d518f4990", "filename": "man/rustc.1", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6ca90942e744f79982a9b485e2367b0ecee14527/man%2Frustc.1", "raw_url": "https://github.com/rust-lang/rust/raw/6ca90942e744f79982a9b485e2367b0ecee14527/man%2Frustc.1", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/man%2Frustc.1?ref=6ca90942e744f79982a9b485e2367b0ecee14527", "patch": "@@ -264,7 +264,8 @@ which link to the standard library.\n .TP\n \\fBRUST_TEST_THREADS\\fR\n The test framework Rust provides executes tests in parallel. This variable sets\n-the maximum number of threads used for this purpose.\n+the maximum number of threads used for this purpose. This setting is overridden\n+by the --test-threads option.\n \n .TP\n \\fBRUST_TEST_NOCAPTURE\\fR"}, {"sha": "710df24525ef4ab78a32b49a1c64bf2c006e7ec5", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 23, "deletions": 4, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/6ca90942e744f79982a9b485e2367b0ecee14527/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ca90942e744f79982a9b485e2367b0ecee14527/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=6ca90942e744f79982a9b485e2367b0ecee14527", "patch": "@@ -300,6 +300,7 @@ pub struct TestOpts {\n     pub nocapture: bool,\n     pub color: ColorConfig,\n     pub quiet: bool,\n+    pub test_threads: Option<usize>,\n }\n \n impl TestOpts {\n@@ -314,6 +315,7 @@ impl TestOpts {\n             nocapture: false,\n             color: AutoColor,\n             quiet: false,\n+            test_threads: None,\n         }\n     }\n }\n@@ -331,6 +333,8 @@ fn optgroups() -> Vec<getopts::OptGroup> {\n                           of stdout\", \"PATH\"),\n       getopts::optflag(\"\", \"nocapture\", \"don't capture stdout/stderr of each \\\n                                          task, allow printing directly\"),\n+      getopts::optopt(\"\", \"test-threads\", \"Number of threads used for running tests \\\n+                                           in parallel\", \"n_threads\"),\n       getopts::optflag(\"q\", \"quiet\", \"Display one character per test instead of one line\"),\n       getopts::optopt(\"\", \"color\", \"Configure coloring of output:\n             auto   = colorize if stdout is a tty and tests are run on serially (default);\n@@ -346,7 +350,8 @@ The FILTER string is tested against the name of all tests, and only those\n tests whose names contain the filter are run.\n \n By default, all tests are run in parallel. This can be altered with the\n-RUST_TEST_THREADS environment variable when running tests (set it to 1).\n+--test-threads flag or the RUST_TEST_THREADS environment variable when running\n+tests (set it to 1).\n \n All tests have their standard output and standard error captured by default.\n This can be overridden with the --nocapture flag or setting RUST_TEST_NOCAPTURE\n@@ -405,6 +410,18 @@ pub fn parse_opts(args: &[String]) -> Option<OptRes> {\n         };\n     }\n \n+    let test_threads = match matches.opt_str(\"test-threads\") {\n+        Some(n_str) =>\n+            match n_str.parse::<usize>() {\n+                Ok(n) => Some(n),\n+                Err(e) =>\n+                    return Some(Err(format!(\"argument for --test-threads must be a number > 0 \\\n+                                             (error: {})\", e)))\n+            },\n+        None =>\n+            None,\n+    };\n+\n     let color = match matches.opt_str(\"color\").as_ref().map(|s| &**s) {\n         Some(\"auto\") | None => AutoColor,\n         Some(\"always\") => AlwaysColor,\n@@ -426,6 +443,7 @@ pub fn parse_opts(args: &[String]) -> Option<OptRes> {\n         nocapture: nocapture,\n         color: color,\n         quiet: quiet,\n+        test_threads: test_threads,\n     };\n \n     Some(Ok(test_opts))\n@@ -857,9 +875,10 @@ fn run_tests<F>(opts: &TestOpts, tests: Vec<TestDescAndFn>, mut callback: F) ->\n             }\n         });\n \n-    // It's tempting to just spawn all the tests at once, but since we have\n-    // many tests that run in other processes we would be making a big mess.\n-    let concurrency = get_concurrency();\n+    let concurrency = match opts.test_threads {\n+        Some(n) => n,\n+        None => get_concurrency(),\n+    };\n \n     let mut remaining = filtered_tests;\n     remaining.reverse();"}, {"sha": "90641b5c476d7bbd93412d4eeb878fa0f7295e52", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6ca90942e744f79982a9b485e2367b0ecee14527/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ca90942e744f79982a9b485e2367b0ecee14527/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=6ca90942e744f79982a9b485e2367b0ecee14527", "patch": "@@ -310,6 +310,7 @@ pub fn test_opts(config: &Config) -> test::TestOpts {\n             Err(_) => false\n         },\n         color: test::AutoColor,\n+        test_threads: None,\n     }\n }\n "}]}