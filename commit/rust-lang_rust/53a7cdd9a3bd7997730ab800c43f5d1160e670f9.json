{"sha": "53a7cdd9a3bd7997730ab800c43f5d1160e670f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzYTdjZGQ5YTNiZDc5OTc3MzBhYjgwMGM0M2Y1ZDExNjBlNjcwZjk=", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2021-08-14T17:28:21Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2021-08-16T18:33:47Z"}, "message": "Forbid inline const block referencing params from being used in patterns", "tree": {"sha": "bd21ddae883a16d1b1b47c393d41c26568a36bd3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd21ddae883a16d1b1b47c393d41c26568a36bd3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53a7cdd9a3bd7997730ab800c43f5d1160e670f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53a7cdd9a3bd7997730ab800c43f5d1160e670f9", "html_url": "https://github.com/rust-lang/rust/commit/53a7cdd9a3bd7997730ab800c43f5d1160e670f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53a7cdd9a3bd7997730ab800c43f5d1160e670f9/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2bd17c1d43bba43412cc2f051323a279d6751e43", "url": "https://api.github.com/repos/rust-lang/rust/commits/2bd17c1d43bba43412cc2f051323a279d6751e43", "html_url": "https://github.com/rust-lang/rust/commit/2bd17c1d43bba43412cc2f051323a279d6751e43"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "2a4ec2804bcb09ca40d5118383fda409a301d1be", "filename": "compiler/rustc_mir_build/src/thir/pattern/mod.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/53a7cdd9a3bd7997730ab800c43f5d1160e670f9/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53a7cdd9a3bd7997730ab800c43f5d1160e670f9/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fmod.rs?ref=53a7cdd9a3bd7997730ab800c43f5d1160e670f9", "patch": "@@ -21,7 +21,7 @@ use rustc_middle::mir::UserTypeProjection;\n use rustc_middle::mir::{BorrowKind, Field, Mutability};\n use rustc_middle::thir::{Ascription, BindingMode, FieldPat, Pat, PatKind, PatRange, PatTyProj};\n use rustc_middle::ty::subst::{GenericArg, SubstsRef};\n-use rustc_middle::ty::{self, AdtDef, DefIdTree, Region, Ty, TyCtxt, UserType};\n+use rustc_middle::ty::{self, AdtDef, ConstKind, DefIdTree, Region, Ty, TyCtxt, UserType};\n use rustc_span::{Span, Symbol};\n \n use std::cmp::Ordering;\n@@ -545,6 +545,11 @@ impl<'a, 'tcx> PatCtxt<'a, 'tcx> {\n                 hir::ExprKind::ConstBlock(ref anon_const) => {\n                     let anon_const_def_id = self.tcx.hir().local_def_id(anon_const.hir_id);\n                     let value = ty::Const::from_anon_const(self.tcx, anon_const_def_id);\n+                    if matches!(value.val, ConstKind::Param(_)) {\n+                        let span = self.tcx.hir().span(anon_const.hir_id);\n+                        self.errors.push(PatternError::ConstParamInPattern(span));\n+                        return PatKind::Wild;\n+                    }\n                     return *self.const_to_pat(value, expr.hir_id, expr.span, false).kind;\n                 }\n                 hir::ExprKind::Lit(ref lit) => (lit, false),"}]}