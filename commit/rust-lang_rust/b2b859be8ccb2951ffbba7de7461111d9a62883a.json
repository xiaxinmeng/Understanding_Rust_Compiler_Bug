{"sha": "b2b859be8ccb2951ffbba7de7461111d9a62883a", "node_id": "C_kwDOAAsO6NoAKGIyYjg1OWJlOGNjYjI5NTFmZmJiYTdkZTc0NjExMTFkOWE2Mjg4M2E", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-10-12T14:16:31Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-20T15:01:37Z"}, "message": "Some track_caller additions", "tree": {"sha": "9af62f21c8682ba737b5eded5677f2546fd9355e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9af62f21c8682ba737b5eded5677f2546fd9355e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2b859be8ccb2951ffbba7de7461111d9a62883a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2b859be8ccb2951ffbba7de7461111d9a62883a", "html_url": "https://github.com/rust-lang/rust/commit/b2b859be8ccb2951ffbba7de7461111d9a62883a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2b859be8ccb2951ffbba7de7461111d9a62883a/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0ed631ad47a15df6e23f4a34fd2f75162341889", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0ed631ad47a15df6e23f4a34fd2f75162341889", "html_url": "https://github.com/rust-lang/rust/commit/b0ed631ad47a15df6e23f4a34fd2f75162341889"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "f5cb89fa62463db7acb9d4ea47f66f270c97af48", "filename": "compiler/rustc_middle/src/hir/map/mod.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b2b859be8ccb2951ffbba7de7461111d9a62883a/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2b859be8ccb2951ffbba7de7461111d9a62883a/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs?ref=b2b859be8ccb2951ffbba7de7461111d9a62883a", "patch": "@@ -170,6 +170,7 @@ impl<'hir> Map<'hir> {\n     }\n \n     #[inline]\n+    #[track_caller]\n     pub fn local_def_id(self, hir_id: HirId) -> LocalDefId {\n         self.opt_local_def_id(hir_id).unwrap_or_else(|| {\n             bug!(\n@@ -310,6 +311,7 @@ impl<'hir> Map<'hir> {\n         }\n     }\n \n+    #[track_caller]\n     pub fn get_parent_node(self, hir_id: HirId) -> HirId {\n         self.find_parent_node(hir_id)\n             .unwrap_or_else(|| bug!(\"No parent for node {:?}\", self.node_to_string(hir_id)))\n@@ -334,12 +336,14 @@ impl<'hir> Map<'hir> {\n     }\n \n     /// Retrieves the `Node` corresponding to `id`, panicking if it cannot be found.\n+    #[track_caller]\n     pub fn get(self, id: HirId) -> Node<'hir> {\n         self.find(id).unwrap_or_else(|| bug!(\"couldn't find hir id {} in the HIR map\", id))\n     }\n \n     /// Retrieves the `Node` corresponding to `id`, panicking if it cannot be found.\n     #[inline]\n+    #[track_caller]\n     pub fn get_by_def_id(self, id: LocalDefId) -> Node<'hir> {\n         self.find_by_def_id(id).unwrap_or_else(|| bug!(\"couldn't find {:?} in the HIR map\", id))\n     }\n@@ -377,6 +381,7 @@ impl<'hir> Map<'hir> {\n         self.tcx.hir_owner_nodes(id.hir_id.owner).unwrap().bodies[&id.hir_id.local_id]\n     }\n \n+    #[track_caller]\n     pub fn fn_decl_by_hir_id(self, hir_id: HirId) -> Option<&'hir FnDecl<'hir>> {\n         if let Some(node) = self.find(hir_id) {\n             node.fn_decl()\n@@ -385,6 +390,7 @@ impl<'hir> Map<'hir> {\n         }\n     }\n \n+    #[track_caller]\n     pub fn fn_sig_by_hir_id(self, hir_id: HirId) -> Option<&'hir FnSig<'hir>> {\n         if let Some(node) = self.find(hir_id) {\n             node.fn_sig()\n@@ -393,6 +399,7 @@ impl<'hir> Map<'hir> {\n         }\n     }\n \n+    #[track_caller]\n     pub fn enclosing_body_owner(self, hir_id: HirId) -> LocalDefId {\n         for (_, node) in self.parent_iter(hir_id) {\n             if let Some(body) = associated_body(node) {\n@@ -423,6 +430,7 @@ impl<'hir> Map<'hir> {\n     }\n \n     /// Given a body owner's id, returns the `BodyId` associated with it.\n+    #[track_caller]\n     pub fn body_owned_by(self, id: LocalDefId) -> BodyId {\n         self.maybe_body_owned_by(id).unwrap_or_else(|| {\n             let hir_id = self.local_def_id_to_hir_id(id);"}]}