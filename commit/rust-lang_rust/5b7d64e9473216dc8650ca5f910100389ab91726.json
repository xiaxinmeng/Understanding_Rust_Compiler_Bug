{"sha": "5b7d64e9473216dc8650ca5f910100389ab91726", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViN2Q2NGU5NDczMjE2ZGM4NjUwY2E1ZjkxMDEwMDM4OWFiOTE3MjY=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-01-04T00:41:25Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-01-12T16:22:42Z"}, "message": "Fix error codes explanation' code examples", "tree": {"sha": "05d7f02f846401764da4b616e4b84170cb2a2620", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05d7f02f846401764da4b616e4b84170cb2a2620"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b7d64e9473216dc8650ca5f910100389ab91726", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b7d64e9473216dc8650ca5f910100389ab91726", "html_url": "https://github.com/rust-lang/rust/commit/5b7d64e9473216dc8650ca5f910100389ab91726", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b7d64e9473216dc8650ca5f910100389ab91726/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9876f6bd9c2927633e6df21889a585469dc5fce6", "url": "https://api.github.com/repos/rust-lang/rust/commits/9876f6bd9c2927633e6df21889a585469dc5fce6", "html_url": "https://github.com/rust-lang/rust/commit/9876f6bd9c2927633e6df21889a585469dc5fce6"}], "stats": {"total": 44, "additions": 28, "deletions": 16}, "files": [{"sha": "e6a28a9c2c460e1413fc170d26537933079ccf82", "filename": "src/librustc_error_codes/error_codes/E0445.md", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5b7d64e9473216dc8650ca5f910100389ab91726/src%2Flibrustc_error_codes%2Ferror_codes%2FE0445.md", "raw_url": "https://github.com/rust-lang/rust/raw/5b7d64e9473216dc8650ca5f910100389ab91726/src%2Flibrustc_error_codes%2Ferror_codes%2FE0445.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0445.md?ref=5b7d64e9473216dc8650ca5f910100389ab91726", "patch": "@@ -12,6 +12,8 @@ trait Foo {\n pub trait Bar : Foo {} // error: private trait in public interface\n pub struct Bar2<T: Foo>(pub T); // same error\n pub fn foo<T: Foo> (t: T) {} // same error\n+\n+fn main() {}\n ```\n \n To solve this error, please ensure that the trait is also public. The trait\n@@ -26,4 +28,6 @@ pub trait Foo { // we set the Foo trait public\n pub trait Bar : Foo {} // ok!\n pub struct Bar2<T: Foo>(pub T); // ok!\n pub fn foo<T: Foo> (t: T) {} // ok!\n+\n+fn main() {}\n ```"}, {"sha": "77a1834ece42f74758c3cf85f284bf43d0c98e94", "filename": "src/librustc_error_codes/error_codes/E0446.md", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5b7d64e9473216dc8650ca5f910100389ab91726/src%2Flibrustc_error_codes%2Ferror_codes%2FE0446.md", "raw_url": "https://github.com/rust-lang/rust/raw/5b7d64e9473216dc8650ca5f910100389ab91726/src%2Flibrustc_error_codes%2Ferror_codes%2FE0446.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0446.md?ref=5b7d64e9473216dc8650ca5f910100389ab91726", "patch": "@@ -12,6 +12,8 @@ mod Foo {\n         Bar(0)\n     }\n }\n+\n+fn main() {}\n ```\n \n To solve this error, please ensure that the type is also public. The type\n@@ -27,4 +29,6 @@ mod Foo {\n         Bar(0)\n     }\n }\n+\n+fn main() {}\n ```"}, {"sha": "d45663f3a5347732b302d9a637c68dcd9b07f5ed", "filename": "src/librustc_error_codes/error_codes/E0491.md", "status": "modified", "additions": 20, "deletions": 16, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/5b7d64e9473216dc8650ca5f910100389ab91726/src%2Flibrustc_error_codes%2Ferror_codes%2FE0491.md", "raw_url": "https://github.com/rust-lang/rust/raw/5b7d64e9473216dc8650ca5f910100389ab91726/src%2Flibrustc_error_codes%2Ferror_codes%2FE0491.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0491.md?ref=5b7d64e9473216dc8650ca5f910100389ab91726", "patch": "@@ -3,30 +3,34 @@ A reference has a longer lifetime than the data it references.\n Erroneous code example:\n \n ```compile_fail,E0491\n-trait SomeTrait<'a> {\n-    type Output;\n+struct Foo<'a> {\n+    x: fn(&'a i32),\n }\n \n-impl<'a, T> SomeTrait<'a> for T {\n-    type Output = &'a T; // compile error E0491\n+trait Trait<'a, 'b> {\n+    type Out;\n+}\n+\n+impl<'a, 'b> Trait<'a, 'b> for usize {\n+    type Out = &'a Foo<'b>; // error!\n }\n ```\n \n-Here, the problem is that a reference type like `&'a T` is only valid\n-if all the data in T outlives the lifetime `'a`. But this impl as written\n-is applicable to any lifetime `'a` and any type `T` -- we have no guarantee\n-that `T` outlives `'a`. To fix this, you can add a where clause like\n-`where T: 'a`.\n+Here, the problem is that the compiler cannot be sure that the `'b` lifetime\n+will live longer than `'a`, which should be mandatory in order to be sure that\n+`Trait::Out` will always have a reference pointing to an existing type. So in\n+this case, we just need to tell the compiler than `'b` must outlive `'a`:\n \n ```\n-trait SomeTrait<'a> {\n-    type Output;\n+struct Foo<'a> {\n+    x: fn(&'a i32),\n+}\n+\n+trait Trait<'a, 'b> {\n+    type Out;\n }\n \n-impl<'a, T> SomeTrait<'a> for T\n-where\n-    T: 'a,\n-{\n-    type Output = &'a T; // compile error E0491\n+impl<'a, 'b: 'a> Trait<'a, 'b> for usize { // we added the lifetime enforcement\n+    type Out = &'a Foo<'b>; // it now works!\n }\n ```"}]}