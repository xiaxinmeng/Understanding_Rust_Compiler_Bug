{"sha": "f9aaad0939e1507990f02676e7f70b88a85a9aea", "node_id": "C_kwDOAAsO6NoAKGY5YWFhZDA5MzllMTUwNzk5MGYwMjY3NmU3ZjcwYjg4YTg1YTlhZWE", "commit": {"author": {"name": "Ed Page", "email": "eopage@gmail.com", "date": "2023-05-17T02:03:29Z"}, "committer": {"name": "Ed Page", "email": "eopage@gmail.com", "date": "2023-05-17T02:03:29Z"}, "message": "docs: Add examples of OsStr safety violation", "tree": {"sha": "31edba8364c52e3065edf7e4f70b45a3273a0096", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31edba8364c52e3065edf7e4f70b45a3273a0096"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9aaad0939e1507990f02676e7f70b88a85a9aea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9aaad0939e1507990f02676e7f70b88a85a9aea", "html_url": "https://github.com/rust-lang/rust/commit/f9aaad0939e1507990f02676e7f70b88a85a9aea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9aaad0939e1507990f02676e7f70b88a85a9aea/comments", "author": {"login": "epage", "id": 60961, "node_id": "MDQ6VXNlcjYwOTYx", "avatar_url": "https://avatars.githubusercontent.com/u/60961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/epage", "html_url": "https://github.com/epage", "followers_url": "https://api.github.com/users/epage/followers", "following_url": "https://api.github.com/users/epage/following{/other_user}", "gists_url": "https://api.github.com/users/epage/gists{/gist_id}", "starred_url": "https://api.github.com/users/epage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/epage/subscriptions", "organizations_url": "https://api.github.com/users/epage/orgs", "repos_url": "https://api.github.com/users/epage/repos", "events_url": "https://api.github.com/users/epage/events{/privacy}", "received_events_url": "https://api.github.com/users/epage/received_events", "type": "User", "site_admin": false}, "committer": {"login": "epage", "id": 60961, "node_id": "MDQ6VXNlcjYwOTYx", "avatar_url": "https://avatars.githubusercontent.com/u/60961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/epage", "html_url": "https://github.com/epage", "followers_url": "https://api.github.com/users/epage/followers", "following_url": "https://api.github.com/users/epage/following{/other_user}", "gists_url": "https://api.github.com/users/epage/gists{/gist_id}", "starred_url": "https://api.github.com/users/epage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/epage/subscriptions", "organizations_url": "https://api.github.com/users/epage/orgs", "repos_url": "https://api.github.com/users/epage/repos", "events_url": "https://api.github.com/users/epage/events{/privacy}", "received_events_url": "https://api.github.com/users/epage/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b9290384e88e6960bc574e83219df50df5fe4e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b9290384e88e6960bc574e83219df50df5fe4e1", "html_url": "https://github.com/rust-lang/rust/commit/7b9290384e88e6960bc574e83219df50df5fe4e1"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "d40c6d3174927f041517ff08eee3c9e2fb971a77", "filename": "library/std/src/ffi/os_str.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f9aaad0939e1507990f02676e7f70b88a85a9aea/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9aaad0939e1507990f02676e7f70b88a85a9aea/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs?ref=f9aaad0939e1507990f02676e7f70b88a85a9aea", "patch": "@@ -678,8 +678,10 @@ impl OsStr {\n     /// `OsStr`'s encoding is an unspecified superset of UTF-8 and callers must\n     /// pass in bytes that originated as a mixture of validated UTF-8 and bytes from\n     /// [`OsStr::as_os_str_bytes`] from within the same rust version built for the same target\n-    /// platform.  The bytes from `OsStr::as_os_str_bytes` may be split either\n-    /// immediately before or immediately after some valid non-empty UTF-8 substring\n+    /// platform.  For example, reconstructing an `OsStr` from bytes sent over the network or stored\n+    /// in a file will likely violate these safety rules.  The bytes from `OsStr::as_os_str_bytes`\n+    /// may be split either immediately before or immediately after some valid non-empty UTF-8\n+    /// substring\n     ///\n     /// # Example\n     ///\n@@ -881,8 +883,9 @@ impl OsStr {\n     ///\n     /// Note: As the encoding is unspecified, any sub-slice of bytes that is not valid UTF-8 should\n     /// be treated as opaque and only comparable within the same rust version built for the same\n-    /// target platform.  See [`OsString`] for more encoding details and [`std::ffi`] for\n-    /// platform-specific, specified conversions.\n+    /// target platform.  For example, sending the slice over the network or storing it in a file\n+    /// will likely result in incompatible byte slices  See [`OsString`] for more encoding details\n+    /// and [`std::ffi`] for platform-specific, specified conversions.\n     ///\n     /// [`std::ffi`]: crate::ffi\n     #[inline]"}]}