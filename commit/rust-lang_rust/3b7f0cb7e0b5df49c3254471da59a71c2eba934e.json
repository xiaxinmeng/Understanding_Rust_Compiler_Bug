{"sha": "3b7f0cb7e0b5df49c3254471da59a71c2eba934e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiN2YwY2I3ZTBiNWRmNDljMzI1NDQ3MWRhNTlhNzFjMmViYTkzNGU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-17T22:34:55Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-22T23:29:29Z"}, "message": "let_chains: Fix outdated doc-comment re. 'parse_if_expr'.", "tree": {"sha": "493410cf2af9814bac1827a6c3a799511fd8c323", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/493410cf2af9814bac1827a6c3a799511fd8c323"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b7f0cb7e0b5df49c3254471da59a71c2eba934e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b7f0cb7e0b5df49c3254471da59a71c2eba934e", "html_url": "https://github.com/rust-lang/rust/commit/3b7f0cb7e0b5df49c3254471da59a71c2eba934e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b7f0cb7e0b5df49c3254471da59a71c2eba934e/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b72e4c8151c176e8f2ec58f95e16c256d2c059b", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b72e4c8151c176e8f2ec58f95e16c256d2c059b", "html_url": "https://github.com/rust-lang/rust/commit/8b72e4c8151c176e8f2ec58f95e16c256d2c059b"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "56b363439d1e3b33b102aafb470796611df6398c", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b7f0cb7e0b5df49c3254471da59a71c2eba934e/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b7f0cb7e0b5df49c3254471da59a71c2eba934e/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=3b7f0cb7e0b5df49c3254471da59a71c2eba934e", "patch": "@@ -3154,7 +3154,7 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n-    /// Parses an `if` or `if let` expression (`if` token already eaten).\n+    /// Parses an `if` expression (`if` token already eaten).\n     fn parse_if_expr(&mut self, attrs: ThinVec<Attribute>) -> PResult<'a, P<Expr>> {\n         let lo = self.prev_span;\n         let cond = self.parse_expr_res(Restrictions::NO_STRUCT_LITERAL, None)?;"}]}