{"sha": "2f387e9d11f1ea6222af0ff00e4de956496fc83f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmMzg3ZTlkMTFmMWVhNjIyMmFmMGZmMDBlNGRlOTU2NDk2ZmM4M2Y=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-10-09T17:49:13Z"}, "committer": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-10-12T17:53:24Z"}, "message": "bootstrap: add disabled by default build-manifest dist component", "tree": {"sha": "b030c32d73172df0c934dc67999a3a6de2205a78", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b030c32d73172df0c934dc67999a3a6de2205a78"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f387e9d11f1ea6222af0ff00e4de956496fc83f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE1JbYPtLJAsc22U9xPgar6Auq8ZwFAl+EmBQACgkQPgar6Auq\n8ZwZ5A/9HenpycnyVlmIF2UwOYB1e2jSP4NIjA8MTV5IpG0tmbopHosSuvbT+5KE\nOVfqNbl9i/n8sbvtrlJ/yswhX4l85/UmtJrUVYhxX3HdFqUwbu5YeTxJBAIp7bsz\nKARgjtuzpZahf9RXp50ZDYlyuq+nJSf3N8ceE/IOxJ6jMMOB/qNatEo+pu+8qIuB\nYdfeLaEa1PUwsyDcS48+OdRMGFnETkWHtUgUxQS3CCKvplhNRcrhpUcEZeoij8vl\nHaT2mpRuV35451RXwGzldDr977KEkOHCXzf4cXCG2pb2et6vmEvAOIpbYI52iAQb\nqy4DT03ZnqGodytz3bttq/GLAotyL184AwsNKVqT3FkIp/q7j1wM7WVpR0lGSNxZ\n/59+Ffy5+eXN8tEQPxRXkDNC0JyWn8fziaSB3n3Qree0Jj75xZSYL71jSskkQLnt\niFkuRdiHR7aI6TBEfswCAzgn0Tm6yMkHzbajk4KAXasB4rrzvVsQJmaWU3fOJDbn\nQ3/5yxvqsHr61ETIQ9l4BuBcL8eb0S2qsXAGAt9B52UEuB2G1l5BGpfHKR3qNZo8\ndlPq39OWnvpnIescS8Q40L1gSQBsTZO+L6wl9dzDDe35JBVjAUYcs9Ed7W+oHqkq\nkoxoswfCS6ZtAZKBnBexc6hq36TwhvdDTZnOQ1wjvJ3l6SBCyWs=\n=MXb1\n-----END PGP SIGNATURE-----", "payload": "tree b030c32d73172df0c934dc67999a3a6de2205a78\nparent 25cc75c9245664f239a52de60a0c0baa8b4c81d5\nauthor Pietro Albini <pietro@pietroalbini.org> 1602265753 +0200\ncommitter Pietro Albini <pietro@pietroalbini.org> 1602525204 +0200\n\nbootstrap: add disabled by default build-manifest dist component\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f387e9d11f1ea6222af0ff00e4de956496fc83f", "html_url": "https://github.com/rust-lang/rust/commit/2f387e9d11f1ea6222af0ff00e4de956496fc83f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f387e9d11f1ea6222af0ff00e4de956496fc83f/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25cc75c9245664f239a52de60a0c0baa8b4c81d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/25cc75c9245664f239a52de60a0c0baa8b4c81d5", "html_url": "https://github.com/rust-lang/rust/commit/25cc75c9245664f239a52de60a0c0baa8b4c81d5"}], "stats": {"total": 68, "additions": 68, "deletions": 0}, "files": [{"sha": "73761b57a8d442196cbeba4c400da236db0482f9", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2f387e9d11f1ea6222af0ff00e4de956496fc83f/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f387e9d11f1ea6222af0ff00e4de956496fc83f/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=2f387e9d11f1ea6222af0ff00e4de956496fc83f", "patch": "@@ -462,6 +462,7 @@ impl<'a> Builder<'a> {\n                 dist::LlvmTools,\n                 dist::RustDev,\n                 dist::Extended,\n+                dist::BuildManifest,\n                 dist::HashSign\n             ),\n             Kind::Install => describe!("}, {"sha": "12533d29809cf9a70cb9b114e9613ab10ebc9c99", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/2f387e9d11f1ea6222af0ff00e4de956496fc83f/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f387e9d11f1ea6222af0ff00e4de956496fc83f/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=2f387e9d11f1ea6222af0ff00e4de956496fc83f", "patch": "@@ -2584,3 +2584,70 @@ impl Step for RustDev {\n         Some(distdir(builder).join(format!(\"{}-{}.tar.gz\", name, target.triple)))\n     }\n }\n+\n+/// Tarball containing a prebuilt version of the build-manifest tool, intented to be used by the\n+/// release process to avoid cloning the monorepo and building stuff.\n+///\n+/// Should not be considered stable by end users.\n+#[derive(Clone, Debug, Eq, Hash, PartialEq)]\n+pub struct BuildManifest {\n+    pub target: TargetSelection,\n+}\n+\n+impl Step for BuildManifest {\n+    type Output = PathBuf;\n+    const DEFAULT: bool = false;\n+    const ONLY_HOSTS: bool = true;\n+\n+    fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n+        run.path(\"src/tools/build-manifest\")\n+    }\n+\n+    fn make_run(run: RunConfig<'_>) {\n+        run.builder.ensure(BuildManifest { target: run.target });\n+    }\n+\n+    fn run(self, builder: &Builder<'_>) -> PathBuf {\n+        let build_manifest = builder.tool_exe(Tool::BuildManifest);\n+\n+        let name = pkgname(builder, \"build-manifest\");\n+        let tmp = tmpdir(builder);\n+\n+        // Prepare the image.\n+        let image = tmp.join(\"build-manifest-image\");\n+        let image_bin = image.join(\"bin\");\n+        let _ = fs::remove_dir_all(&image);\n+        t!(fs::create_dir_all(&image_bin));\n+        builder.install(&build_manifest, &image_bin.join(\"build-manifest\"), 0o755);\n+\n+        // Prepare the overlay.\n+        let overlay = tmp.join(\"build-manifest-overlay\");\n+        let _ = fs::remove_dir_all(&overlay);\n+        builder.create_dir(&overlay);\n+        builder.create(&overlay.join(\"version\"), &builder.rust_version());\n+        for file in &[\"COPYRIGHT\", \"LICENSE-APACHE\", \"LICENSE-MIT\", \"README.md\"] {\n+            builder.install(&builder.src.join(file), &overlay, 0o644);\n+        }\n+\n+        // Create the final tarball.\n+        let mut cmd = rust_installer(builder);\n+        cmd.arg(\"generate\")\n+            .arg(\"--product-name=Rust\")\n+            .arg(\"--rel-manifest-dir=rustlib\")\n+            .arg(\"--success-message=build-manifest installed.\")\n+            .arg(\"--image-dir\")\n+            .arg(&image)\n+            .arg(\"--work-dir\")\n+            .arg(&tmpdir(builder))\n+            .arg(\"--output-dir\")\n+            .arg(&distdir(builder))\n+            .arg(\"--non-installed-overlay\")\n+            .arg(&overlay)\n+            .arg(format!(\"--package-name={}-{}\", name, self.target.triple))\n+            .arg(\"--legacy-manifest-dirs=rustlib,cargo\")\n+            .arg(\"--component-name=build-manifest\");\n+\n+        builder.run(&mut cmd);\n+        distdir(builder).join(format!(\"{}-{}.tar.gz\", name, self.target.triple))\n+    }\n+}"}]}