{"sha": "1c97c1ac11459d45f7bfc57dc72428d2b294520c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjOTdjMWFjMTE0NTlkNDVmN2JmYzU3ZGM3MjQyOGQyYjI5NDUyMGM=", "commit": {"author": {"name": "Ville Penttinen", "email": "villem.penttinen@gmail.com", "date": "2019-02-17T17:08:34Z"}, "committer": {"name": "Ville Penttinen", "email": "villem.penttinen@gmail.com", "date": "2019-02-17T17:26:57Z"}, "message": "Enable parsing of attributes inside a match block\n\nWe allow invalid inner attributes to be parsed, e.g. inner attributes that are\nnot directly after the opening brace of the match block.\n\nInstead we run validation on `MatchArmList` to allow better reporting of errors.", "tree": {"sha": "70638cabf61f96a7511f974cc66dae40175bfb22", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70638cabf61f96a7511f974cc66dae40175bfb22"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c97c1ac11459d45f7bfc57dc72428d2b294520c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c97c1ac11459d45f7bfc57dc72428d2b294520c", "html_url": "https://github.com/rust-lang/rust/commit/1c97c1ac11459d45f7bfc57dc72428d2b294520c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c97c1ac11459d45f7bfc57dc72428d2b294520c/comments", "author": {"login": "vipentti", "id": 4726680, "node_id": "MDQ6VXNlcjQ3MjY2ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/4726680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vipentti", "html_url": "https://github.com/vipentti", "followers_url": "https://api.github.com/users/vipentti/followers", "following_url": "https://api.github.com/users/vipentti/following{/other_user}", "gists_url": "https://api.github.com/users/vipentti/gists{/gist_id}", "starred_url": "https://api.github.com/users/vipentti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vipentti/subscriptions", "organizations_url": "https://api.github.com/users/vipentti/orgs", "repos_url": "https://api.github.com/users/vipentti/repos", "events_url": "https://api.github.com/users/vipentti/events{/privacy}", "received_events_url": "https://api.github.com/users/vipentti/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vipentti", "id": 4726680, "node_id": "MDQ6VXNlcjQ3MjY2ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/4726680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vipentti", "html_url": "https://github.com/vipentti", "followers_url": "https://api.github.com/users/vipentti/followers", "following_url": "https://api.github.com/users/vipentti/following{/other_user}", "gists_url": "https://api.github.com/users/vipentti/gists{/gist_id}", "starred_url": "https://api.github.com/users/vipentti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vipentti/subscriptions", "organizations_url": "https://api.github.com/users/vipentti/orgs", "repos_url": "https://api.github.com/users/vipentti/repos", "events_url": "https://api.github.com/users/vipentti/events{/privacy}", "received_events_url": "https://api.github.com/users/vipentti/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "982f72c022b45629e6adbaef22884359d3495ecf", "url": "https://api.github.com/repos/rust-lang/rust/commits/982f72c022b45629e6adbaef22884359d3495ecf", "html_url": "https://github.com/rust-lang/rust/commit/982f72c022b45629e6adbaef22884359d3495ecf"}], "stats": {"total": 590, "additions": 589, "deletions": 1}, "files": [{"sha": "350f01f3359c5c5ce4f09fe48158c573769129b2", "filename": "crates/ra_syntax/src/ast.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1c97c1ac11459d45f7bfc57dc72428d2b294520c/crates%2Fra_syntax%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c97c1ac11459d45f7bfc57dc72428d2b294520c/crates%2Fra_syntax%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast.rs?ref=1c97c1ac11459d45f7bfc57dc72428d2b294520c", "patch": "@@ -153,6 +153,20 @@ impl FnDef {\n }\n \n impl Attr {\n+    pub fn is_inner(&self) -> bool {\n+        let tt = match self.value() {\n+            None => return false,\n+            Some(tt) => tt,\n+        };\n+\n+        let prev = match tt.syntax().prev_sibling() {\n+            None => return false,\n+            Some(prev) => prev,\n+        };\n+\n+        prev.kind() == EXCL\n+    }\n+\n     pub fn as_atom(&self) -> Option<SmolStr> {\n         let tt = self.value()?;\n         let (_bra, attr, _ket) = tt.syntax().children().collect_tuple()?;"}, {"sha": "c7aaccc95a699a3cb50d43bd0213c99873852343", "filename": "crates/ra_syntax/src/ast/generated.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1c97c1ac11459d45f7bfc57dc72428d2b294520c/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c97c1ac11459d45f7bfc57dc72428d2b294520c/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs?ref=1c97c1ac11459d45f7bfc57dc72428d2b294520c", "patch": "@@ -1946,6 +1946,7 @@ impl ToOwned for MatchArm {\n }\n \n \n+impl ast::AttrsOwner for MatchArm {}\n impl MatchArm {\n     pub fn pats(&self) -> impl Iterator<Item = &Pat> {\n         super::children(self)\n@@ -1986,6 +1987,7 @@ impl ToOwned for MatchArmList {\n }\n \n \n+impl ast::AttrsOwner for MatchArmList {}\n impl MatchArmList {\n     pub fn arms(&self) -> impl Iterator<Item = &MatchArm> {\n         super::children(self)"}, {"sha": "193b563aa53f7d2b6d47225239f102b77a8a1e32", "filename": "crates/ra_syntax/src/grammar.ron", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1c97c1ac11459d45f7bfc57dc72428d2b294520c/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/1c97c1ac11459d45f7bfc57dc72428d2b294520c/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron?ref=1c97c1ac11459d45f7bfc57dc72428d2b294520c", "patch": "@@ -413,13 +413,15 @@ Grammar(\n         ),\n         \"MatchArmList\": (\n             collections: [ [\"arms\", \"MatchArm\"] ],\n+            traits: [ \"AttrsOwner\" ]\n         ),\n         \"MatchArm\": (\n             options: [\n                 [ \"guard\", \"MatchGuard\" ],\n                 \"Expr\",\n             ],\n-            collections: [ [ \"pats\", \"Pat\" ] ]\n+            collections: [ [ \"pats\", \"Pat\" ] ],\n+            traits: [ \"AttrsOwner\" ]\n         ),\n         \"MatchGuard\": (options: [\"Expr\"]),\n         \"StructLit\": (options: [\"Path\", \"NamedFieldList\", [\"spread\", \"Expr\"]]),"}, {"sha": "2624d2e16f5f5085ed43132fcb2ad85917a0fd77", "filename": "crates/ra_syntax/src/grammar/attributes.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1c97c1ac11459d45f7bfc57dc72428d2b294520c/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c97c1ac11459d45f7bfc57dc72428d2b294520c/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fattributes.rs?ref=1c97c1ac11459d45f7bfc57dc72428d2b294520c", "patch": "@@ -1,5 +1,15 @@\n use super::*;\n \n+/// Parses both inner & outer attributes.\n+///\n+/// Allowing to run validation for reporting errors\n+/// regarding attributes\n+pub(super) fn all_attributes(p: &mut Parser) {\n+    while p.at(POUND) {\n+        attribute(p, p.nth(1) == EXCL)\n+    }\n+}\n+\n pub(super) fn inner_attributes(p: &mut Parser) {\n     while p.current() == POUND && p.nth(1) == EXCL {\n         attribute(p, true)"}, {"sha": "67cd7e6b02145eb67caac36448485c9042f1cb31", "filename": "crates/ra_syntax/src/grammar/expressions/atom.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/1c97c1ac11459d45f7bfc57dc72428d2b294520c/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c97c1ac11459d45f7bfc57dc72428d2b294520c/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs?ref=1c97c1ac11459d45f7bfc57dc72428d2b294520c", "patch": "@@ -313,11 +313,44 @@ pub(crate) fn match_arm_list(p: &mut Parser) {\n     assert!(p.at(L_CURLY));\n     let m = p.start();\n     p.eat(L_CURLY);\n+\n+    // test match_arms_inner_attribute\n+    // fn foo() {\n+    //     match () {\n+    //         #![doc(\"Inner attribute\")]\n+    //         #![doc(\"Can be\")]\n+    //         #![doc(\"Stacked\")]\n+    //         _ => (),\n+    //     }\n+    // }\n+    attributes::inner_attributes(p);\n+\n     while !p.at(EOF) && !p.at(R_CURLY) {\n         if p.at(L_CURLY) {\n             error_block(p, \"expected match arm\");\n             continue;\n         }\n+\n+        // This may result in invalid attributes\n+        // if there are inner attributes mixed in together\n+        // with the outer attributes, but we allow parsing\n+        // those so we can run validation and report better errors\n+\n+        // test match_arms_outer_attributes\n+        // fn foo() {\n+        //     match () {\n+        //         #[cfg(feature = \"some\")]\n+        //         _ => (),\n+        //         #[cfg(feature = \"other\")]\n+        //         _ => (),\n+        //         #[cfg(feature = \"many\")]\n+        //         #[cfg(feature = \"attributes\")]\n+        //         #[cfg(feature = \"before\")]\n+        //         _ => (),\n+        //     }\n+        // }\n+        attributes::all_attributes(p);\n+\n         // test match_arms_commas\n         // fn foo() {\n         //     match () {"}, {"sha": "4ff99809066a9610653905ea2bd936bd035a584b", "filename": "crates/ra_syntax/src/syntax_node/syntax_error.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1c97c1ac11459d45f7bfc57dc72428d2b294520c/crates%2Fra_syntax%2Fsrc%2Fsyntax_node%2Fsyntax_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c97c1ac11459d45f7bfc57dc72428d2b294520c/crates%2Fra_syntax%2Fsrc%2Fsyntax_node%2Fsyntax_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fsyntax_node%2Fsyntax_error.rs?ref=1c97c1ac11459d45f7bfc57dc72428d2b294520c", "patch": "@@ -92,6 +92,7 @@ pub enum SyntaxErrorKind {\n     UnclosedString,\n     InvalidSuffix,\n     InvalidBlockAttr,\n+    InvalidMatchInnerAttr,\n }\n \n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n@@ -136,6 +137,9 @@ impl fmt::Display for SyntaxErrorKind {\n             InvalidBlockAttr => {\n                 write!(f, \"A block in this position cannot accept inner attributes\")\n             }\n+            InvalidMatchInnerAttr => {\n+                write!(f, \"Inner attributes are only allowed directly after the opening brace of the match expression\")\n+            }\n             ParseError(msg) => write!(f, \"{}\", msg.0),\n         }\n     }"}, {"sha": "27a465a78598bf831357e81a962fef741f023922", "filename": "crates/ra_syntax/src/validation.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1c97c1ac11459d45f7bfc57dc72428d2b294520c/crates%2Fra_syntax%2Fsrc%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c97c1ac11459d45f7bfc57dc72428d2b294520c/crates%2Fra_syntax%2Fsrc%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fvalidation.rs?ref=1c97c1ac11459d45f7bfc57dc72428d2b294520c", "patch": "@@ -3,6 +3,7 @@ mod byte_string;\n mod char;\n mod string;\n mod block;\n+mod match_armlist;\n \n use crate::{\n     SourceFile, syntax_node::SyntaxError, AstNode,\n@@ -19,6 +20,7 @@ pub(crate) fn validate(file: &SourceFile) -> Vec<SyntaxError> {\n             .visit::<ast::Char, _>(self::char::validate_char_node)\n             .visit::<ast::String, _>(self::string::validate_string_node)\n             .visit::<ast::Block, _>(self::block::validate_block_node)\n+            .visit::<ast::MatchArmList, _>(self::match_armlist::validate_match_armlist)\n             .accept(node);\n     }\n     errors"}, {"sha": "c43ed70922413e9012f6273bfb213f55ec3277e1", "filename": "crates/ra_syntax/src/validation/match_armlist.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/1c97c1ac11459d45f7bfc57dc72428d2b294520c/crates%2Fra_syntax%2Fsrc%2Fvalidation%2Fmatch_armlist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c97c1ac11459d45f7bfc57dc72428d2b294520c/crates%2Fra_syntax%2Fsrc%2Fvalidation%2Fmatch_armlist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fvalidation%2Fmatch_armlist.rs?ref=1c97c1ac11459d45f7bfc57dc72428d2b294520c", "patch": "@@ -0,0 +1,28 @@\n+use crate::{\r\n+    ast::{self, AttrsOwner, AstNode},\r\n+    syntax_node::{\r\n+        SyntaxError,\r\n+        SyntaxErrorKind::*,\r\n+        Direction,\r\n+    },\r\n+};\r\n+\r\n+pub(crate) fn validate_match_armlist(node: &ast::MatchArmList, errors: &mut Vec<SyntaxError>) {\r\n+    // Report errors for any inner attribute\r\n+    // which has a preceding matcharm or an outer attribute\r\n+    for inner_attr in node.attrs().filter(|s| s.is_inner()) {\r\n+        let any_errors = inner_attr.syntax().siblings(Direction::Prev).any(|s| {\r\n+            match (ast::MatchArm::cast(s), ast::Attr::cast(s)) {\r\n+                (Some(_), _) => true,\r\n+                // Outer attributes which preceed an inner attribute are not allowed\r\n+                (_, Some(a)) if !a.is_inner() => true,\r\n+                (_, Some(_)) => false,\r\n+                (None, None) => false,\r\n+            }\r\n+        });\r\n+\r\n+        if any_errors {\r\n+            errors.push(SyntaxError::new(InvalidMatchInnerAttr, inner_attr.syntax().range()));\r\n+        }\r\n+    }\r\n+}\r"}, {"sha": "06aa4777043400e5b55cfeed44189d8f449e619f", "filename": "crates/ra_syntax/tests/data/parser/err/0032_match_arms_inner_attrs.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1c97c1ac11459d45f7bfc57dc72428d2b294520c/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0032_match_arms_inner_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c97c1ac11459d45f7bfc57dc72428d2b294520c/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0032_match_arms_inner_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0032_match_arms_inner_attrs.rs?ref=1c97c1ac11459d45f7bfc57dc72428d2b294520c", "patch": "@@ -0,0 +1,20 @@\n+fn foo() {\n+    match () {\n+        _ => (),\n+        #![doc(\"Not allowed here\")]\n+        _ => (),\n+    }\n+\n+    match () {\n+        _ => (),\n+        _ => (),\n+        #![doc(\"Nor here\")]\n+    }\n+\n+    match () {\n+        #[cfg(test)]\n+        #![doc(\"Nor here\")]\n+        _ => (),\n+        _ => (),\n+    }\n+}"}, {"sha": "b3ff3636444b11abe00c1c20a85d7ad0cc13283a", "filename": "crates/ra_syntax/tests/data/parser/err/0032_match_arms_inner_attrs.txt", "status": "added", "additions": 173, "deletions": 0, "changes": 173, "blob_url": "https://github.com/rust-lang/rust/blob/1c97c1ac11459d45f7bfc57dc72428d2b294520c/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0032_match_arms_inner_attrs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/1c97c1ac11459d45f7bfc57dc72428d2b294520c/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0032_match_arms_inner_attrs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0032_match_arms_inner_attrs.txt?ref=1c97c1ac11459d45f7bfc57dc72428d2b294520c", "patch": "@@ -0,0 +1,173 @@\n+SOURCE_FILE@[0; 293)\n+  FN_DEF@[0; 292)\n+    FN_KW@[0; 2)\n+    WHITESPACE@[2; 3)\n+    NAME@[3; 6)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 8)\n+      L_PAREN@[6; 7)\n+      R_PAREN@[7; 8)\n+    WHITESPACE@[8; 9)\n+    BLOCK@[9; 292)\n+      L_CURLY@[9; 10)\n+      WHITESPACE@[10; 15)\n+      EXPR_STMT@[15; 101)\n+        MATCH_EXPR@[15; 101)\n+          MATCH_KW@[15; 20)\n+          WHITESPACE@[20; 21)\n+          TUPLE_EXPR@[21; 23)\n+            L_PAREN@[21; 22)\n+            R_PAREN@[22; 23)\n+          WHITESPACE@[23; 24)\n+          MATCH_ARM_LIST@[24; 101)\n+            L_CURLY@[24; 25)\n+            WHITESPACE@[25; 34)\n+            MATCH_ARM@[34; 41)\n+              PLACEHOLDER_PAT@[34; 35)\n+                UNDERSCORE@[34; 35)\n+              WHITESPACE@[35; 36)\n+              FAT_ARROW@[36; 38)\n+              WHITESPACE@[38; 39)\n+              TUPLE_EXPR@[39; 41)\n+                L_PAREN@[39; 40)\n+                R_PAREN@[40; 41)\n+            COMMA@[41; 42)\n+            WHITESPACE@[42; 51)\n+            err: `Inner attributes are only allowed directly after the opening brace of the match expression`\n+            ATTR@[51; 78)\n+              POUND@[51; 52)\n+              EXCL@[52; 53)\n+              TOKEN_TREE@[53; 78)\n+                L_BRACK@[53; 54)\n+                IDENT@[54; 57) \"doc\"\n+                TOKEN_TREE@[57; 77)\n+                  L_PAREN@[57; 58)\n+                  STRING@[58; 76)\n+                  R_PAREN@[76; 77)\n+                R_BRACK@[77; 78)\n+            WHITESPACE@[78; 87)\n+            MATCH_ARM@[87; 94)\n+              PLACEHOLDER_PAT@[87; 88)\n+                UNDERSCORE@[87; 88)\n+              WHITESPACE@[88; 89)\n+              FAT_ARROW@[89; 91)\n+              WHITESPACE@[91; 92)\n+              TUPLE_EXPR@[92; 94)\n+                L_PAREN@[92; 93)\n+                R_PAREN@[93; 94)\n+            COMMA@[94; 95)\n+            WHITESPACE@[95; 100)\n+            R_CURLY@[100; 101)\n+      WHITESPACE@[101; 107)\n+      EXPR_STMT@[107; 185)\n+        MATCH_EXPR@[107; 185)\n+          MATCH_KW@[107; 112)\n+          WHITESPACE@[112; 113)\n+          TUPLE_EXPR@[113; 115)\n+            L_PAREN@[113; 114)\n+            R_PAREN@[114; 115)\n+          WHITESPACE@[115; 116)\n+          MATCH_ARM_LIST@[116; 185)\n+            L_CURLY@[116; 117)\n+            WHITESPACE@[117; 126)\n+            MATCH_ARM@[126; 133)\n+              PLACEHOLDER_PAT@[126; 127)\n+                UNDERSCORE@[126; 127)\n+              WHITESPACE@[127; 128)\n+              FAT_ARROW@[128; 130)\n+              WHITESPACE@[130; 131)\n+              TUPLE_EXPR@[131; 133)\n+                L_PAREN@[131; 132)\n+                R_PAREN@[132; 133)\n+            COMMA@[133; 134)\n+            WHITESPACE@[134; 143)\n+            MATCH_ARM@[143; 150)\n+              PLACEHOLDER_PAT@[143; 144)\n+                UNDERSCORE@[143; 144)\n+              WHITESPACE@[144; 145)\n+              FAT_ARROW@[145; 147)\n+              WHITESPACE@[147; 148)\n+              TUPLE_EXPR@[148; 150)\n+                L_PAREN@[148; 149)\n+                R_PAREN@[149; 150)\n+            COMMA@[150; 151)\n+            WHITESPACE@[151; 160)\n+            err: `Inner attributes are only allowed directly after the opening brace of the match expression`\n+            ATTR@[160; 179)\n+              POUND@[160; 161)\n+              EXCL@[161; 162)\n+              TOKEN_TREE@[162; 179)\n+                L_BRACK@[162; 163)\n+                IDENT@[163; 166) \"doc\"\n+                TOKEN_TREE@[166; 178)\n+                  L_PAREN@[166; 167)\n+                  STRING@[167; 177)\n+                  R_PAREN@[177; 178)\n+                R_BRACK@[178; 179)\n+            WHITESPACE@[179; 184)\n+            err: `expected pattern`\n+            err: `expected FAT_ARROW`\n+            err: `expected expression`\n+            MATCH_ARM@[184; 184)\n+            R_CURLY@[184; 185)\n+      WHITESPACE@[185; 191)\n+      MATCH_EXPR@[191; 290)\n+        MATCH_KW@[191; 196)\n+        WHITESPACE@[196; 197)\n+        TUPLE_EXPR@[197; 199)\n+          L_PAREN@[197; 198)\n+          R_PAREN@[198; 199)\n+        WHITESPACE@[199; 200)\n+        MATCH_ARM_LIST@[200; 290)\n+          L_CURLY@[200; 201)\n+          WHITESPACE@[201; 210)\n+          ATTR@[210; 222)\n+            POUND@[210; 211)\n+            TOKEN_TREE@[211; 222)\n+              L_BRACK@[211; 212)\n+              IDENT@[212; 215) \"cfg\"\n+              TOKEN_TREE@[215; 221)\n+                L_PAREN@[215; 216)\n+                IDENT@[216; 220) \"test\"\n+                R_PAREN@[220; 221)\n+              R_BRACK@[221; 222)\n+          WHITESPACE@[222; 231)\n+          err: `Inner attributes are only allowed directly after the opening brace of the match expression`\n+          ATTR@[231; 250)\n+            POUND@[231; 232)\n+            EXCL@[232; 233)\n+            TOKEN_TREE@[233; 250)\n+              L_BRACK@[233; 234)\n+              IDENT@[234; 237) \"doc\"\n+              TOKEN_TREE@[237; 249)\n+                L_PAREN@[237; 238)\n+                STRING@[238; 248)\n+                R_PAREN@[248; 249)\n+              R_BRACK@[249; 250)\n+          WHITESPACE@[250; 259)\n+          MATCH_ARM@[259; 266)\n+            PLACEHOLDER_PAT@[259; 260)\n+              UNDERSCORE@[259; 260)\n+            WHITESPACE@[260; 261)\n+            FAT_ARROW@[261; 263)\n+            WHITESPACE@[263; 264)\n+            TUPLE_EXPR@[264; 266)\n+              L_PAREN@[264; 265)\n+              R_PAREN@[265; 266)\n+          COMMA@[266; 267)\n+          WHITESPACE@[267; 276)\n+          MATCH_ARM@[276; 283)\n+            PLACEHOLDER_PAT@[276; 277)\n+              UNDERSCORE@[276; 277)\n+            WHITESPACE@[277; 278)\n+            FAT_ARROW@[278; 280)\n+            WHITESPACE@[280; 281)\n+            TUPLE_EXPR@[281; 283)\n+              L_PAREN@[281; 282)\n+              R_PAREN@[282; 283)\n+          COMMA@[283; 284)\n+          WHITESPACE@[284; 289)\n+          R_CURLY@[289; 290)\n+      WHITESPACE@[290; 291)\n+      R_CURLY@[291; 292)\n+  WHITESPACE@[292; 293)"}, {"sha": "4635222da28215581921919a9a08aec80d2b0c57", "filename": "crates/ra_syntax/tests/data/parser/err/0033_match_arms_outer_attrs.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1c97c1ac11459d45f7bfc57dc72428d2b294520c/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0033_match_arms_outer_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c97c1ac11459d45f7bfc57dc72428d2b294520c/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0033_match_arms_outer_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0033_match_arms_outer_attrs.rs?ref=1c97c1ac11459d45f7bfc57dc72428d2b294520c", "patch": "@@ -0,0 +1,7 @@\n+fn foo() {\n+    match () {\n+        _ => (),\n+        _ => (),\n+        #[cfg(test)]\n+    }\n+}"}, {"sha": "7f8767001cd1ff1eaa6d098299b40b1495fda74d", "filename": "crates/ra_syntax/tests/data/parser/err/0033_match_arms_outer_attrs.txt", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/1c97c1ac11459d45f7bfc57dc72428d2b294520c/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0033_match_arms_outer_attrs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/1c97c1ac11459d45f7bfc57dc72428d2b294520c/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0033_match_arms_outer_attrs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0033_match_arms_outer_attrs.txt?ref=1c97c1ac11459d45f7bfc57dc72428d2b294520c", "patch": "@@ -0,0 +1,64 @@\n+SOURCE_FILE@[0; 89)\n+  FN_DEF@[0; 88)\n+    FN_KW@[0; 2)\n+    WHITESPACE@[2; 3)\n+    NAME@[3; 6)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 8)\n+      L_PAREN@[6; 7)\n+      R_PAREN@[7; 8)\n+    WHITESPACE@[8; 9)\n+    BLOCK@[9; 88)\n+      L_CURLY@[9; 10)\n+      WHITESPACE@[10; 15)\n+      MATCH_EXPR@[15; 86)\n+        MATCH_KW@[15; 20)\n+        WHITESPACE@[20; 21)\n+        TUPLE_EXPR@[21; 23)\n+          L_PAREN@[21; 22)\n+          R_PAREN@[22; 23)\n+        WHITESPACE@[23; 24)\n+        MATCH_ARM_LIST@[24; 86)\n+          L_CURLY@[24; 25)\n+          WHITESPACE@[25; 34)\n+          MATCH_ARM@[34; 41)\n+            PLACEHOLDER_PAT@[34; 35)\n+              UNDERSCORE@[34; 35)\n+            WHITESPACE@[35; 36)\n+            FAT_ARROW@[36; 38)\n+            WHITESPACE@[38; 39)\n+            TUPLE_EXPR@[39; 41)\n+              L_PAREN@[39; 40)\n+              R_PAREN@[40; 41)\n+          COMMA@[41; 42)\n+          WHITESPACE@[42; 51)\n+          MATCH_ARM@[51; 58)\n+            PLACEHOLDER_PAT@[51; 52)\n+              UNDERSCORE@[51; 52)\n+            WHITESPACE@[52; 53)\n+            FAT_ARROW@[53; 55)\n+            WHITESPACE@[55; 56)\n+            TUPLE_EXPR@[56; 58)\n+              L_PAREN@[56; 57)\n+              R_PAREN@[57; 58)\n+          COMMA@[58; 59)\n+          WHITESPACE@[59; 68)\n+          ATTR@[68; 80)\n+            POUND@[68; 69)\n+            TOKEN_TREE@[69; 80)\n+              L_BRACK@[69; 70)\n+              IDENT@[70; 73) \"cfg\"\n+              TOKEN_TREE@[73; 79)\n+                L_PAREN@[73; 74)\n+                IDENT@[74; 78) \"test\"\n+                R_PAREN@[78; 79)\n+              R_BRACK@[79; 80)\n+          WHITESPACE@[80; 85)\n+          err: `expected pattern`\n+          err: `expected FAT_ARROW`\n+          err: `expected expression`\n+          MATCH_ARM@[85; 85)\n+          R_CURLY@[85; 86)\n+      WHITESPACE@[86; 87)\n+      R_CURLY@[87; 88)\n+  WHITESPACE@[88; 89)"}, {"sha": "54a67c9d7b7a1cdf3c2fae81cc12d2fc3cf1adc2", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0120_match_arms_inner_attribute.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1c97c1ac11459d45f7bfc57dc72428d2b294520c/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0120_match_arms_inner_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c97c1ac11459d45f7bfc57dc72428d2b294520c/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0120_match_arms_inner_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0120_match_arms_inner_attribute.rs?ref=1c97c1ac11459d45f7bfc57dc72428d2b294520c", "patch": "@@ -0,0 +1,8 @@\n+fn foo() {\n+    match () {\n+        #![doc(\"Inner attribute\")]\n+        #![doc(\"Can be\")]\n+        #![doc(\"Stacked\")]\n+        _ => (),\n+    }\n+}"}, {"sha": "b39a217bdbc216fba362afdcd3dbf999378a98e1", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0120_match_arms_inner_attribute.txt", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/1c97c1ac11459d45f7bfc57dc72428d2b294520c/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0120_match_arms_inner_attribute.txt", "raw_url": "https://github.com/rust-lang/rust/raw/1c97c1ac11459d45f7bfc57dc72428d2b294520c/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0120_match_arms_inner_attribute.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0120_match_arms_inner_attribute.txt?ref=1c97c1ac11459d45f7bfc57dc72428d2b294520c", "patch": "@@ -0,0 +1,74 @@\n+SOURCE_FILE@[0; 139)\n+  FN_DEF@[0; 138)\n+    FN_KW@[0; 2)\n+    WHITESPACE@[2; 3)\n+    NAME@[3; 6)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 8)\n+      L_PAREN@[6; 7)\n+      R_PAREN@[7; 8)\n+    WHITESPACE@[8; 9)\n+    BLOCK@[9; 138)\n+      L_CURLY@[9; 10)\n+      WHITESPACE@[10; 15)\n+      MATCH_EXPR@[15; 136)\n+        MATCH_KW@[15; 20)\n+        WHITESPACE@[20; 21)\n+        TUPLE_EXPR@[21; 23)\n+          L_PAREN@[21; 22)\n+          R_PAREN@[22; 23)\n+        WHITESPACE@[23; 24)\n+        MATCH_ARM_LIST@[24; 136)\n+          L_CURLY@[24; 25)\n+          WHITESPACE@[25; 34)\n+          ATTR@[34; 60)\n+            POUND@[34; 35)\n+            EXCL@[35; 36)\n+            TOKEN_TREE@[36; 60)\n+              L_BRACK@[36; 37)\n+              IDENT@[37; 40) \"doc\"\n+              TOKEN_TREE@[40; 59)\n+                L_PAREN@[40; 41)\n+                STRING@[41; 58)\n+                R_PAREN@[58; 59)\n+              R_BRACK@[59; 60)\n+          WHITESPACE@[60; 69)\n+          ATTR@[69; 86)\n+            POUND@[69; 70)\n+            EXCL@[70; 71)\n+            TOKEN_TREE@[71; 86)\n+              L_BRACK@[71; 72)\n+              IDENT@[72; 75) \"doc\"\n+              TOKEN_TREE@[75; 85)\n+                L_PAREN@[75; 76)\n+                STRING@[76; 84)\n+                R_PAREN@[84; 85)\n+              R_BRACK@[85; 86)\n+          WHITESPACE@[86; 95)\n+          ATTR@[95; 113)\n+            POUND@[95; 96)\n+            EXCL@[96; 97)\n+            TOKEN_TREE@[97; 113)\n+              L_BRACK@[97; 98)\n+              IDENT@[98; 101) \"doc\"\n+              TOKEN_TREE@[101; 112)\n+                L_PAREN@[101; 102)\n+                STRING@[102; 111)\n+                R_PAREN@[111; 112)\n+              R_BRACK@[112; 113)\n+          WHITESPACE@[113; 122)\n+          MATCH_ARM@[122; 129)\n+            PLACEHOLDER_PAT@[122; 123)\n+              UNDERSCORE@[122; 123)\n+            WHITESPACE@[123; 124)\n+            FAT_ARROW@[124; 126)\n+            WHITESPACE@[126; 127)\n+            TUPLE_EXPR@[127; 129)\n+              L_PAREN@[127; 128)\n+              R_PAREN@[128; 129)\n+          COMMA@[129; 130)\n+          WHITESPACE@[130; 135)\n+          R_CURLY@[135; 136)\n+      WHITESPACE@[136; 137)\n+      R_CURLY@[137; 138)\n+  WHITESPACE@[138; 139)"}, {"sha": "676db42d1a70b6996e8388dd9a76e8adb17ad0cc", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0121_match_arms_outer_attributes.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1c97c1ac11459d45f7bfc57dc72428d2b294520c/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0121_match_arms_outer_attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c97c1ac11459d45f7bfc57dc72428d2b294520c/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0121_match_arms_outer_attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0121_match_arms_outer_attributes.rs?ref=1c97c1ac11459d45f7bfc57dc72428d2b294520c", "patch": "@@ -0,0 +1,12 @@\n+fn foo() {\n+    match () {\n+        #[cfg(feature = \"some\")]\n+        _ => (),\n+        #[cfg(feature = \"other\")]\n+        _ => (),\n+        #[cfg(feature = \"many\")]\n+        #[cfg(feature = \"attributes\")]\n+        #[cfg(feature = \"before\")]\n+        _ => (),\n+    }\n+}"}, {"sha": "c888fb8f0cc53828ae707403fd1e37afaf2268e0", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0121_match_arms_outer_attributes.txt", "status": "added", "additions": 135, "deletions": 0, "changes": 135, "blob_url": "https://github.com/rust-lang/rust/blob/1c97c1ac11459d45f7bfc57dc72428d2b294520c/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0121_match_arms_outer_attributes.txt", "raw_url": "https://github.com/rust-lang/rust/raw/1c97c1ac11459d45f7bfc57dc72428d2b294520c/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0121_match_arms_outer_attributes.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0121_match_arms_outer_attributes.txt?ref=1c97c1ac11459d45f7bfc57dc72428d2b294520c", "patch": "@@ -0,0 +1,135 @@\n+SOURCE_FILE@[0; 259)\n+  FN_DEF@[0; 258)\n+    FN_KW@[0; 2)\n+    WHITESPACE@[2; 3)\n+    NAME@[3; 6)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 8)\n+      L_PAREN@[6; 7)\n+      R_PAREN@[7; 8)\n+    WHITESPACE@[8; 9)\n+    BLOCK@[9; 258)\n+      L_CURLY@[9; 10)\n+      WHITESPACE@[10; 15)\n+      MATCH_EXPR@[15; 256)\n+        MATCH_KW@[15; 20)\n+        WHITESPACE@[20; 21)\n+        TUPLE_EXPR@[21; 23)\n+          L_PAREN@[21; 22)\n+          R_PAREN@[22; 23)\n+        WHITESPACE@[23; 24)\n+        MATCH_ARM_LIST@[24; 256)\n+          L_CURLY@[24; 25)\n+          WHITESPACE@[25; 34)\n+          ATTR@[34; 58)\n+            POUND@[34; 35)\n+            TOKEN_TREE@[35; 58)\n+              L_BRACK@[35; 36)\n+              IDENT@[36; 39) \"cfg\"\n+              TOKEN_TREE@[39; 57)\n+                L_PAREN@[39; 40)\n+                IDENT@[40; 47) \"feature\"\n+                WHITESPACE@[47; 48)\n+                EQ@[48; 49)\n+                WHITESPACE@[49; 50)\n+                STRING@[50; 56)\n+                R_PAREN@[56; 57)\n+              R_BRACK@[57; 58)\n+          WHITESPACE@[58; 67)\n+          MATCH_ARM@[67; 74)\n+            PLACEHOLDER_PAT@[67; 68)\n+              UNDERSCORE@[67; 68)\n+            WHITESPACE@[68; 69)\n+            FAT_ARROW@[69; 71)\n+            WHITESPACE@[71; 72)\n+            TUPLE_EXPR@[72; 74)\n+              L_PAREN@[72; 73)\n+              R_PAREN@[73; 74)\n+          COMMA@[74; 75)\n+          WHITESPACE@[75; 84)\n+          ATTR@[84; 109)\n+            POUND@[84; 85)\n+            TOKEN_TREE@[85; 109)\n+              L_BRACK@[85; 86)\n+              IDENT@[86; 89) \"cfg\"\n+              TOKEN_TREE@[89; 108)\n+                L_PAREN@[89; 90)\n+                IDENT@[90; 97) \"feature\"\n+                WHITESPACE@[97; 98)\n+                EQ@[98; 99)\n+                WHITESPACE@[99; 100)\n+                STRING@[100; 107)\n+                R_PAREN@[107; 108)\n+              R_BRACK@[108; 109)\n+          WHITESPACE@[109; 118)\n+          MATCH_ARM@[118; 125)\n+            PLACEHOLDER_PAT@[118; 119)\n+              UNDERSCORE@[118; 119)\n+            WHITESPACE@[119; 120)\n+            FAT_ARROW@[120; 122)\n+            WHITESPACE@[122; 123)\n+            TUPLE_EXPR@[123; 125)\n+              L_PAREN@[123; 124)\n+              R_PAREN@[124; 125)\n+          COMMA@[125; 126)\n+          WHITESPACE@[126; 135)\n+          ATTR@[135; 159)\n+            POUND@[135; 136)\n+            TOKEN_TREE@[136; 159)\n+              L_BRACK@[136; 137)\n+              IDENT@[137; 140) \"cfg\"\n+              TOKEN_TREE@[140; 158)\n+                L_PAREN@[140; 141)\n+                IDENT@[141; 148) \"feature\"\n+                WHITESPACE@[148; 149)\n+                EQ@[149; 150)\n+                WHITESPACE@[150; 151)\n+                STRING@[151; 157)\n+                R_PAREN@[157; 158)\n+              R_BRACK@[158; 159)\n+          WHITESPACE@[159; 168)\n+          ATTR@[168; 198)\n+            POUND@[168; 169)\n+            TOKEN_TREE@[169; 198)\n+              L_BRACK@[169; 170)\n+              IDENT@[170; 173) \"cfg\"\n+              TOKEN_TREE@[173; 197)\n+                L_PAREN@[173; 174)\n+                IDENT@[174; 181) \"feature\"\n+                WHITESPACE@[181; 182)\n+                EQ@[182; 183)\n+                WHITESPACE@[183; 184)\n+                STRING@[184; 196)\n+                R_PAREN@[196; 197)\n+              R_BRACK@[197; 198)\n+          WHITESPACE@[198; 207)\n+          ATTR@[207; 233)\n+            POUND@[207; 208)\n+            TOKEN_TREE@[208; 233)\n+              L_BRACK@[208; 209)\n+              IDENT@[209; 212) \"cfg\"\n+              TOKEN_TREE@[212; 232)\n+                L_PAREN@[212; 213)\n+                IDENT@[213; 220) \"feature\"\n+                WHITESPACE@[220; 221)\n+                EQ@[221; 222)\n+                WHITESPACE@[222; 223)\n+                STRING@[223; 231)\n+                R_PAREN@[231; 232)\n+              R_BRACK@[232; 233)\n+          WHITESPACE@[233; 242)\n+          MATCH_ARM@[242; 249)\n+            PLACEHOLDER_PAT@[242; 243)\n+              UNDERSCORE@[242; 243)\n+            WHITESPACE@[243; 244)\n+            FAT_ARROW@[244; 246)\n+            WHITESPACE@[246; 247)\n+            TUPLE_EXPR@[247; 249)\n+              L_PAREN@[247; 248)\n+              R_PAREN@[248; 249)\n+          COMMA@[249; 250)\n+          WHITESPACE@[250; 255)\n+          R_CURLY@[255; 256)\n+      WHITESPACE@[256; 257)\n+      R_CURLY@[257; 258)\n+  WHITESPACE@[258; 259)"}]}