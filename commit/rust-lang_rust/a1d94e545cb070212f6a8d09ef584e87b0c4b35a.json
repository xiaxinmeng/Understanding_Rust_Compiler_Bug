{"sha": "a1d94e545cb070212f6a8d09ef584e87b0c4b35a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExZDk0ZTU0NWNiMDcwMjEyZjZhOGQwOWVmNTg0ZTg3YjBjNGIzNWE=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-03-10T02:58:35Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-03-10T02:58:35Z"}, "message": "Attempt to fixup impls with long generics", "tree": {"sha": "6bb1398b277117f326245e482f12b52d381f1b54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6bb1398b277117f326245e482f12b52d381f1b54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1d94e545cb070212f6a8d09ef584e87b0c4b35a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1d94e545cb070212f6a8d09ef584e87b0c4b35a", "html_url": "https://github.com/rust-lang/rust/commit/a1d94e545cb070212f6a8d09ef584e87b0c4b35a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1d94e545cb070212f6a8d09ef584e87b0c4b35a/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8af03f4750f81069e9915643d771e4aebae1b80", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8af03f4750f81069e9915643d771e4aebae1b80", "html_url": "https://github.com/rust-lang/rust/commit/c8af03f4750f81069e9915643d771e4aebae1b80"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "6bb30425073f2e2ec62f25b448a8ed0befaad838", "filename": "src/items.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a1d94e545cb070212f6a8d09ef584e87b0c4b35a/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1d94e545cb070212f6a8d09ef584e87b0c4b35a/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=a1d94e545cb070212f6a8d09ef584e87b0c4b35a", "patch": "@@ -527,7 +527,7 @@ pub fn format_impl(context: &RewriteContext, item: &ast::Item, offset: Indent) -\n                                                              context.config.where_density,\n                                                              \"{\",\n                                                              false,\n-                                                             false,\n+                                                             last_line_width(&ref_and_type) == 1,\n                                                              None));\n \n         if try_opt!(is_impl_single_line(context, &items, &result, &where_clause_str, &item)) {\n@@ -626,7 +626,7 @@ fn format_impl_ref_and_type(context: &RewriteContext,\n         item.node {\n         let mut result = String::new();\n \n-        result.push_str(&*format_visibility(&item.vis));\n+        result.push_str(&format_visibility(&item.vis));\n         result.push_str(format_unsafety(unsafety));\n         result.push_str(\"impl\");\n \n@@ -650,8 +650,9 @@ fn format_impl_ref_and_type(context: &RewriteContext,\n             if polarity != ast::ImplPolarity::Negative {\n                 result.push_str(\" \");\n             }\n-            let budget = try_opt!(context.config.max_width.checked_sub(result.len()));\n-            let indent = offset + result.len();\n+            let used_space = last_line_width(&result);\n+            let budget = try_opt!(context.config.max_width.checked_sub(used_space));\n+            let indent = offset + used_space;\n             result.push_str(&*try_opt!(trait_ref.rewrite(context, Shape::legacy(budget, indent))));\n \n             if split_at_for {\n@@ -1119,7 +1120,7 @@ pub fn rewrite_type_alias(context: &RewriteContext,\n                                                          context.config.where_density,\n                                                          \"=\",\n                                                          true,\n-                                                         false,\n+                                                         true,\n                                                          Some(span.hi)));\n     result.push_str(&where_clause_str);\n     result.push_str(\" = \");"}]}