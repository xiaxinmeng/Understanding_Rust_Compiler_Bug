{"sha": "08d18e0edda948215a9bb649d022a342d01e77a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4ZDE4ZTBlZGRhOTQ4MjE1YTliYjY0OWQwMjJhMzQyZDAxZTc3YTg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-07-30T20:10:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-30T20:10:07Z"}, "message": "Merge #5610\n\n5610: Bump deps r=flodiebold a=lnicola\n\n\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>", "tree": {"sha": "68362f93ce9beb614b30317e6b9405b82e62e535", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68362f93ce9beb614b30317e6b9405b82e62e535"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08d18e0edda948215a9bb649d022a342d01e77a8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfIykfCRBK7hj4Ov3rIwAAdHIIAKHyrk+4VSGhk3GJvcL+6Yq7\nqo7fgUggmYe3BOdeoMIl5ln8/xIzwW8z6HY6HZN0Slfbokp3b/LfGOqioiGvMi7m\nWGyG6bBEbylAYhLN8Btdj2WKTQRkZfJFHyUTc9AHow/0FedC9ZL0YeGUPHL1rRAm\nsFy/hWqd0++OsYWLIAHBGQgmwaB7nLfrUx5DTs5zB/UQYLwW+KmynTC3CSs7qsX7\niINURPc8ZUfrgUePaTYbnFInLv2ccCOc/9NwTuiUiV9h94T8+kMq08GXBNWnMvG8\nc3v/hZNPrrVvPKjqEqSr0OoP3ajaIR3oEP+ikts6AnvWhNwD6ZneLsB7iE3F4h0=\n=3Qc/\n-----END PGP SIGNATURE-----\n", "payload": "tree 68362f93ce9beb614b30317e6b9405b82e62e535\nparent 239dd506f68db0cbe4417b6e5c7f737d8ff8a159\nparent 797cdb00d91a221d62438b23dfd625a78163a58d\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1596139807 +0000\ncommitter GitHub <noreply@github.com> 1596139807 +0000\n\nMerge #5610\n\n5610: Bump deps r=flodiebold a=lnicola\n\n\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08d18e0edda948215a9bb649d022a342d01e77a8", "html_url": "https://github.com/rust-lang/rust/commit/08d18e0edda948215a9bb649d022a342d01e77a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08d18e0edda948215a9bb649d022a342d01e77a8/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "239dd506f68db0cbe4417b6e5c7f737d8ff8a159", "url": "https://api.github.com/repos/rust-lang/rust/commits/239dd506f68db0cbe4417b6e5c7f737d8ff8a159", "html_url": "https://github.com/rust-lang/rust/commit/239dd506f68db0cbe4417b6e5c7f737d8ff8a159"}, {"sha": "797cdb00d91a221d62438b23dfd625a78163a58d", "url": "https://api.github.com/repos/rust-lang/rust/commits/797cdb00d91a221d62438b23dfd625a78163a58d", "html_url": "https://github.com/rust-lang/rust/commit/797cdb00d91a221d62438b23dfd625a78163a58d"}], "stats": {"total": 84, "additions": 45, "deletions": 39}, "files": [{"sha": "234c314067e563acfb22ffa8aad3e7a3794074ad", "filename": "Cargo.lock", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/08d18e0edda948215a9bb649d022a342d01e77a8/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/08d18e0edda948215a9bb649d022a342d01e77a8/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=08d18e0edda948215a9bb649d022a342d01e77a8", "patch": "@@ -125,9 +125,9 @@ checksum = \"4785bdd1c96b2a846b2bd7cc02e86b6b3dbf14e7e53446c4f54c92a361040822\"\n \n [[package]]\n name = \"chalk-derive\"\n-version = \"0.18.0\"\n+version = \"0.19.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"eea3a22f0c30b2504ac4ab58934dac0d00b92a4d7788df32795cabca24c3f929\"\n+checksum = \"654c611946ba2629c5028cb7708687af975faf2c29d731824cb294c873df4697\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n@@ -137,19 +137,19 @@ dependencies = [\n \n [[package]]\n name = \"chalk-ir\"\n-version = \"0.18.0\"\n+version = \"0.19.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"fb617b643e145e3b151502799e91a9625dd5daf1cf05dc2cb821bc75ae0c9cbd\"\n+checksum = \"0a5341fbc654ca886b73b804a36aebf0e621057ccc1a68e9815b5b39b3ac9ae8\"\n dependencies = [\n  \"chalk-derive\",\n  \"lazy_static\",\n ]\n \n [[package]]\n name = \"chalk-recursive\"\n-version = \"0.18.0\"\n+version = \"0.19.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"d280565c8eefbf9b2bc615df49c7dfd971faad37774bf65734e626fd23864bd6\"\n+checksum = \"4484807b155b5a411e6135d330295f9ba5042e2920b8712c6574ca6ea91e9ee5\"\n dependencies = [\n  \"chalk-derive\",\n  \"chalk-ir\",\n@@ -160,9 +160,9 @@ dependencies = [\n \n [[package]]\n name = \"chalk-solve\"\n-version = \"0.18.0\"\n+version = \"0.19.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"be906fbca3f3077dce0e76d9864771d0f450c946af0d86b569fb9504148a065a\"\n+checksum = \"281f82facd2538997fbe52132b1941ed213d266748215c31d15f62a8664429ad\"\n dependencies = [\n  \"chalk-derive\",\n  \"chalk-ir\",\n@@ -607,9 +607,9 @@ dependencies = [\n \n [[package]]\n name = \"lsp-types\"\n-version = \"0.78.0\"\n+version = \"0.79.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"d2e6cf68e3492cfa2035f0382c1da1b6ab045db0320feca505b86b4f13d66c27\"\n+checksum = \"7f1f86677fdbe8df5f88b99131b1424e50aad27bbe3e5900d221bc414bd72e9b\"\n dependencies = [\n  \"base64\",\n  \"bitflags\",\n@@ -842,9 +842,9 @@ checksum = \"d4fd5641d01c8f18a23da7b6fe29298ff4b55afcccdf78973b24cf3175fee32e\"\n \n [[package]]\n name = \"perf-event\"\n-version = \"0.4.3\"\n+version = \"0.4.4\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"0cb38a2f363560fb3cfcb47f28848b245a41c7e0d63e0b190918b712b6bf6803\"\n+checksum = \"76c42ba5d85a2f4472b99f475fb60cf336d9b4c85b1ea8bb300fef2e3c7c8f89\"\n dependencies = [\n  \"libc\",\n  \"perf-event-open-sys\",\n@@ -1344,9 +1344,9 @@ dependencies = [\n \n [[package]]\n name = \"rustc-ap-rustc_lexer\"\n-version = \"669.0.0\"\n+version = \"671.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"456af5f09c006cf6c22c1a433ee0232c4bb74bdc6c647a010166a47c94ed2a63\"\n+checksum = \"22e1221f3bfa2943c942cf8da319ab2346887f8757778c29c7f1822cd27b521f\"\n dependencies = [\n  \"unicode-xid\",\n ]"}, {"sha": "623ce261a0598591e25232b4d13ee456daaec4b1", "filename": "crates/ra_hir_ty/Cargo.toml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/08d18e0edda948215a9bb649d022a342d01e77a8/crates%2Fra_hir_ty%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/08d18e0edda948215a9bb649d022a342d01e77a8/crates%2Fra_hir_ty%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2FCargo.toml?ref=08d18e0edda948215a9bb649d022a342d01e77a8", "patch": "@@ -28,9 +28,9 @@ test_utils = { path = \"../test_utils\" }\n \n scoped-tls = \"1\"\n \n-chalk-solve = { version = \"0.18.0\" }\n-chalk-ir = { version = \"0.18.0\" }\n-chalk-recursive = { version = \"0.18.0\" }\n+chalk-solve = { version = \"0.19.0\" }\n+chalk-ir = { version = \"0.19.0\" }\n+chalk-recursive = { version = \"0.19.0\" }\n \n [dev-dependencies]\n expect = { path = \"../expect\" }"}, {"sha": "1c7065364450c26d2da0e2ed2e50d9d888c9eed4", "filename": "crates/ra_hir_ty/src/traits/chalk.rs", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/08d18e0edda948215a9bb649d022a342d01e77a8/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08d18e0edda948215a9bb649d022a342d01e77a8/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk.rs?ref=08d18e0edda948215a9bb649d022a342d01e77a8", "patch": "@@ -183,6 +183,7 @@ impl<'a> chalk_solve::RustIrDatabase<Interner> for ChalkContext<'a> {\n                     .collect(),\n                 1,\n             ),\n+            where_clauses: make_binders(vec![], 0),\n         };\n         let num_vars = datas.num_binders;\n         Arc::new(OpaqueTyDatum { opaque_ty_id: id, bound: make_binders(bound, num_vars) })\n@@ -193,15 +194,6 @@ impl<'a> chalk_solve::RustIrDatabase<Interner> for ChalkContext<'a> {\n         Ty::Unknown.to_chalk(self.db)\n     }\n \n-    fn force_impl_for(\n-        &self,\n-        _well_known: rust_ir::WellKnownTrait,\n-        _ty: &chalk_ir::TyData<Interner>,\n-    ) -> Option<bool> {\n-        // this method is mostly for rustc\n-        None\n-    }\n-\n     fn is_object_safe(&self, _trait_id: chalk_ir::TraitId<Interner>) -> bool {\n         // FIXME: implement actual object safety\n         true\n@@ -547,8 +539,13 @@ pub(crate) fn fn_def_datum_query(\n         ),\n         where_clauses,\n     };\n-    let datum =\n-        FnDefDatum { id: fn_def_id, binders: make_binders(bound, sig.num_binders), abi: () };\n+    let datum = FnDefDatum {\n+        id: fn_def_id,\n+        abi: (),\n+        safety: chalk_ir::Safety::Safe,\n+        variadic: sig.value.is_varargs,\n+        binders: make_binders(bound, sig.num_binders),\n+    };\n     Arc::new(datum)\n }\n "}, {"sha": "b3e92993d2dd3f5d4f28a18d3bcb3f0c6f6b0af6", "filename": "crates/ra_hir_ty/src/traits/chalk/mapping.rs", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/08d18e0edda948215a9bb649d022a342d01e77a8/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk%2Fmapping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08d18e0edda948215a9bb649d022a342d01e77a8/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk%2Fmapping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk%2Fmapping.rs?ref=08d18e0edda948215a9bb649d022a342d01e77a8", "patch": "@@ -30,11 +30,16 @@ impl ToChalk for Ty {\n             Ty::Apply(apply_ty) => match apply_ty.ctor {\n                 TypeCtor::Ref(m) => ref_to_chalk(db, m, apply_ty.parameters),\n                 TypeCtor::Array => array_to_chalk(db, apply_ty.parameters),\n-                TypeCtor::FnPtr { num_args: _, is_varargs: _ } => {\n-                    // FIXME: handle is_varargs\n+                TypeCtor::FnPtr { num_args: _, is_varargs } => {\n                     let substitution = apply_ty.parameters.to_chalk(db).shifted_in(&Interner);\n-                    chalk_ir::TyData::Function(chalk_ir::Fn { num_binders: 0, substitution })\n-                        .intern(&Interner)\n+                    chalk_ir::TyData::Function(chalk_ir::FnPointer {\n+                        num_binders: 0,\n+                        abi: (),\n+                        safety: chalk_ir::Safety::Safe,\n+                        variadic: is_varargs,\n+                        substitution,\n+                    })\n+                    .intern(&Interner)\n                 }\n                 _ => {\n                     let name = apply_ty.ctor.to_chalk(db);\n@@ -118,7 +123,12 @@ impl ToChalk for Ty {\n                 let parameters = from_chalk(db, opaque_ty.substitution);\n                 Ty::Opaque(OpaqueTy { opaque_ty_id: impl_trait_id, parameters })\n             }\n-            chalk_ir::TyData::Function(chalk_ir::Fn { num_binders, substitution }) => {\n+            chalk_ir::TyData::Function(chalk_ir::FnPointer {\n+                num_binders,\n+                variadic,\n+                substitution,\n+                ..\n+            }) => {\n                 assert_eq!(num_binders, 0);\n                 let parameters: Substs = from_chalk(\n                     db,\n@@ -127,7 +137,7 @@ impl ToChalk for Ty {\n                 Ty::Apply(ApplicationTy {\n                     ctor: TypeCtor::FnPtr {\n                         num_args: (parameters.len() - 1) as u16,\n-                        is_varargs: false,\n+                        is_varargs: variadic,\n                     },\n                     parameters,\n                 })"}, {"sha": "fc4d7aa048b80551460d2c2df9639cf4d3e7b58d", "filename": "crates/ra_syntax/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/08d18e0edda948215a9bb649d022a342d01e77a8/crates%2Fra_syntax%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/08d18e0edda948215a9bb649d022a342d01e77a8/crates%2Fra_syntax%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2FCargo.toml?ref=08d18e0edda948215a9bb649d022a342d01e77a8", "patch": "@@ -13,7 +13,7 @@ doctest = false\n [dependencies]\n itertools = \"0.9.0\"\n rowan = \"0.10.0\"\n-rustc_lexer = { version = \"669.0.0\", package = \"rustc-ap-rustc_lexer\" }\n+rustc_lexer = { version = \"671.0.0\", package = \"rustc-ap-rustc_lexer\" }\n rustc-hash = \"1.1.0\"\n arrayvec = \"0.5.1\"\n once_cell = \"1.3.1\""}, {"sha": "f5ba872233f9e7f6fbf60e1b22258d4e9e3546a5", "filename": "crates/ra_syntax/src/ast/expr_ext.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/08d18e0edda948215a9bb649d022a342d01e77a8/crates%2Fra_syntax%2Fsrc%2Fast%2Fexpr_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08d18e0edda948215a9bb649d022a342d01e77a8/crates%2Fra_syntax%2Fsrc%2Fast%2Fexpr_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fexpr_ext.rs?ref=08d18e0edda948215a9bb649d022a342d01e77a8", "patch": "@@ -333,13 +333,12 @@ impl ast::Literal {\n \n         match token.kind() {\n             INT_NUMBER => {\n-                // FYI: there was a bug here previously, thus an if statement bellow is necessary.\n+                // FYI: there was a bug here previously, thus the if statement below is necessary.\n                 // The lexer treats e.g. `1f64` as an integer literal. See\n                 // https://github.com/rust-analyzer/rust-analyzer/issues/1592\n                 // and the comments on the linked PR.\n \n                 let text = token.text();\n-\n                 if let suffix @ Some(_) = Self::find_suffix(&text, &FLOAT_SUFFIXES) {\n                     LiteralKind::FloatNumber { suffix }\n                 } else {"}, {"sha": "02c1371ac0954745c927dcc4e62de6770c9c0539", "filename": "crates/rust-analyzer/Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/08d18e0edda948215a9bb649d022a342d01e77a8/crates%2Frust-analyzer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/08d18e0edda948215a9bb649d022a342d01e77a8/crates%2Frust-analyzer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2FCargo.toml?ref=08d18e0edda948215a9bb649d022a342d01e77a8", "patch": "@@ -20,7 +20,7 @@ env_logger = { version = \"0.7.1\", default-features = false }\n itertools = \"0.9.0\"\n jod-thread = \"0.1.0\"\n log = \"0.4.8\"\n-lsp-types = { version = \"0.78.0\", features = [\"proposed\"] }\n+lsp-types = { version = \"0.79.0\", features = [\"proposed\"] }\n parking_lot = \"0.11.0\"\n pico-args = \"0.3.1\"\n oorandom = \"11.1.2\"\n@@ -42,7 +42,7 @@ ra_syntax = { path = \"../ra_syntax\" }\n ra_text_edit = { path = \"../ra_text_edit\" }\n vfs = { path = \"../vfs\" }\n vfs-notify = { path = \"../vfs-notify\" }\n-ra_cfg = { path = \"../ra_cfg\"}\n+ra_cfg = { path = \"../ra_cfg\" }\n ra_toolchain = { path = \"../ra_toolchain\" }\n \n # This should only be used in CLI"}]}