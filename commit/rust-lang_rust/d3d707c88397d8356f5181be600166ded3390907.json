{"sha": "d3d707c88397d8356f5181be600166ded3390907", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzZDcwN2M4ODM5N2Q4MzU2ZjUxODFiZTYwMDE2NmRlZDMzOTA5MDc=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-08T19:14:06Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-13T22:03:47Z"}, "message": "librustc: fix fallout", "tree": {"sha": "15888f8aebb60a8f5a1cf1430108579f27289674", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15888f8aebb60a8f5a1cf1430108579f27289674"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3d707c88397d8356f5181be600166ded3390907", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3d707c88397d8356f5181be600166ded3390907", "html_url": "https://github.com/rust-lang/rust/commit/d3d707c88397d8356f5181be600166ded3390907", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3d707c88397d8356f5181be600166ded3390907/comments", "author": null, "committer": null, "parents": [{"sha": "0dac05dd627612232403c07ca8bd6d3376eec64a", "url": "https://api.github.com/repos/rust-lang/rust/commits/0dac05dd627612232403c07ca8bd6d3376eec64a", "html_url": "https://github.com/rust-lang/rust/commit/0dac05dd627612232403c07ca8bd6d3376eec64a"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "ffca616d76a816cb70f1f8d90c9837e0f36f5e4d", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d3d707c88397d8356f5181be600166ded3390907/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3d707c88397d8356f5181be600166ded3390907/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=d3d707c88397d8356f5181be600166ded3390907", "patch": "@@ -4916,7 +4916,9 @@ pub fn has_dtor(cx: &ctxt, struct_id: DefId) -> bool {\n     cx.destructor_for_type.borrow().contains_key(&struct_id)\n }\n \n-pub fn with_path<T>(cx: &ctxt, id: ast::DefId, f: |ast_map::PathElems| -> T) -> T {\n+pub fn with_path<T, F>(cx: &ctxt, id: ast::DefId, f: F) -> T where\n+    F: FnOnce(ast_map::PathElems) -> T,\n+{\n     if id.krate == ast::LOCAL_CRATE {\n         cx.map.with_path(id.node, f)\n     } else {"}, {"sha": "8516ece202c7598edd331e8ef3334879c891177f", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d3d707c88397d8356f5181be600166ded3390907/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3d707c88397d8356f5181be600166ded3390907/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=d3d707c88397d8356f5181be600166ded3390907", "patch": "@@ -288,7 +288,9 @@ pub fn build_session_(sopts: config::Options,\n }\n \n // Seems out of place, but it uses session, so I'm putting it here\n-pub fn expect<T>(sess: &Session, opt: Option<T>, msg: || -> String) -> T {\n+pub fn expect<T, M>(sess: &Session, opt: Option<T>, msg: M) -> T where\n+    M: FnOnce() -> String,\n+{\n     diagnostic::expect(sess.diagnostic(), opt, msg)\n }\n "}]}