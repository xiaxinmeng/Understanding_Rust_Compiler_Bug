{"sha": "dc340f12a39e7cd8b495b84c009052c4d441d867", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjMzQwZjEyYTM5ZTdjZDhiNDk1Yjg0YzAwOTA1MmM0ZDQ0MWQ4Njc=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-06-06T17:55:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-06T17:55:13Z"}, "message": "Merge #4772\n\n4772: Document certain invariants r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "a36b249c79f1f944793ff21ed5a739fe26f5ddf4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a36b249c79f1f944793ff21ed5a739fe26f5ddf4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc340f12a39e7cd8b495b84c009052c4d441d867", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe29iBCRBK7hj4Ov3rIwAAdHIIAKwS4m27z7HXro96ZCaDO0l/\nNBOUmhNEVPOXkwC2gGG1TY3bLWkt4r0yEfG43KTEh9e4Gzepca7yVYkl97xWa1HW\nwFJMD6uUkrzsnJgdjeWNYzqWl5QIUBDT3a5i52/wjuSu1QVXE3G9Anb5g89Qfj9m\nEDW56P3OIIUdpzPiz4vIC2qc49rrnl36bCQqQ2UHFAtG6jtRMoVRPXvTomP7ND+h\n16pN+5lB8z4hR2cSv3LU4xk9yIx6AKJgNs7g10h9xu5L5rHaCZ7hFkqzQgD8gxqM\njGZ6+ZzvcfbtjirXtY64ZWTsMlphzYUrtc/GjoJDAyUnm4nlqzMZ/a49T6JewGE=\n=mDnR\n-----END PGP SIGNATURE-----\n", "payload": "tree a36b249c79f1f944793ff21ed5a739fe26f5ddf4\nparent d4a92b4fefecbd63d8c7c82a5553cd209c068144\nparent 81ffe973ac265507419024048c166bbeef9aa275\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1591466113 +0000\ncommitter GitHub <noreply@github.com> 1591466113 +0000\n\nMerge #4772\n\n4772: Document certain invariants r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc340f12a39e7cd8b495b84c009052c4d441d867", "html_url": "https://github.com/rust-lang/rust/commit/dc340f12a39e7cd8b495b84c009052c4d441d867", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc340f12a39e7cd8b495b84c009052c4d441d867/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4a92b4fefecbd63d8c7c82a5553cd209c068144", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4a92b4fefecbd63d8c7c82a5553cd209c068144", "html_url": "https://github.com/rust-lang/rust/commit/d4a92b4fefecbd63d8c7c82a5553cd209c068144"}, {"sha": "81ffe973ac265507419024048c166bbeef9aa275", "url": "https://api.github.com/repos/rust-lang/rust/commits/81ffe973ac265507419024048c166bbeef9aa275", "html_url": "https://github.com/rust-lang/rust/commit/81ffe973ac265507419024048c166bbeef9aa275"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "903cb4055a8398bb27328934ef2ebb8945e477e4", "filename": "docs/dev/README.md", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/dc340f12a39e7cd8b495b84c009052c4d441d867/docs%2Fdev%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/dc340f12a39e7cd8b495b84c009052c4d441d867/docs%2Fdev%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2FREADME.md?ref=dc340f12a39e7cd8b495b84c009052c4d441d867", "patch": "@@ -184,6 +184,27 @@ use crate::{}\n use super::{} // but prefer `use crate::`\n ```\n \n+## Import Style\n+\n+Items from `hir` and `ast` should be used qualified:\n+\n+```rust\n+// Good\n+use ra_syntax::ast;\n+\n+fn frobnicate(func: hir::Function, strukt: ast::StructDef) {}\n+\n+// Not as good\n+use hir::Function;\n+use ra_syntax::ast::StructDef;\n+\n+fn frobnicate(func: Function, strukt: StructDef) {}\n+```\n+\n+Avoid local `use MyEnum::*` imports.\n+\n+Prefer `use crate::foo::bar` to `use super::bar`.\n+\n ## Order of Items\n \n Optimize for the reader who sees the file for the first time, and wants to get the general idea about what's going on.\n@@ -220,6 +241,33 @@ struct Foo {\n For `.md` and `.adoc` files, prefer a sentence-per-line format, don't wrap lines.\n If the line is too long, you want to split the sentence in two :-)\n \n+# Architecture Invariants\n+\n+This section tries to document high-level design constraints, which are not\n+always obvious from the low-level code.\n+\n+## Incomplete syntax trees\n+\n+Syntax trees are by design incomplete and do not enforce well-formedness.\n+If ast method returns an `Option`, it *can* be `None` at runtime, even if this is forbidden by the grammar.\n+\n+## LSP indenpendence\n+\n+rust-analyzer is independent from LSP.\n+It provides features for a hypothetical perfect Rust-specific IDE client.\n+Internal representations are lowered to LSP in the `rust-analyzer` crate (the only crate which is allowed to use LSP types).\n+\n+## IDE/Compiler split\n+\n+There's a semi-hard split between \"compiler\" and \"IDE\", at the `ra_hir` crate.\n+Compiler derives new facts about source code.\n+It explicitly acknowledges that not all info is available (ie, you can't look at types during name resolution).\n+\n+IDE assumes that all information is available at all times.\n+\n+IDE should use only types from `ra_hir`, and should not depend on the underling compiler types.\n+`ra_hir` is a facade.\n+\n # Logging\n \n Logging is done by both rust-analyzer and VS Code, so it might be tricky to"}]}