{"sha": "4c92b3dc7d189bdff8f7e78be293d03e43466621", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjOTJiM2RjN2QxODliZGZmOGY3ZTc4YmUyOTNkMDNlNDM0NjY2MjE=", "commit": {"author": {"name": "Poliorcetics", "email": "poliorcetics@users.noreply.github.com", "date": "2020-09-18T07:52:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-18T07:52:35Z"}, "message": "Apply suggestions from code review\n\nCo-authored-by: Joshua Nelson <joshua@yottadb.com>", "tree": {"sha": "df400b452944f929b4b58ffcfedee4e8294378d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df400b452944f929b4b58ffcfedee4e8294378d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c92b3dc7d189bdff8f7e78be293d03e43466621", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfZGdDCRBK7hj4Ov3rIwAAdHIIAIxO8epRtM9xIYjZc84N9OZj\n+HFIenVP1qGiVfVLoJKtiTAbPooE5GMXZSAuNDGtWvFaw3wRRoyifAw9jNoYooV/\nxlNmecX4WG4bAVTpkHYU6B/aHyRCHM+UnfBzmi3OgXAY/r/asfDpo/U3kp5DTRWg\npj/Fg0fRBDfA5lWXdp4X6KpiZCW6Q8kIDGcQXnQv0V0LCLN1n+q2z1N0vV8vyUaL\n8FYRcWTj9vKTfqv2e3UReVOVl/DqelpkCEeB0c04DDybMa4GXO1KeCciI9hKONrC\nL9soSeQQWUp7AZCK/RXB+lc6EgXbMmwbd84HLRl1l6HOzDdMrbrLZENw8C9gZE4=\n=XuGi\n-----END PGP SIGNATURE-----\n", "payload": "tree df400b452944f929b4b58ffcfedee4e8294378d4\nparent 76ec3f8d2b9b1ae547652762d8ab5909eaa5793d\nauthor Poliorcetics <poliorcetics@users.noreply.github.com> 1600415555 +0200\ncommitter GitHub <noreply@github.com> 1600415555 +0200\n\nApply suggestions from code review\n\nCo-authored-by: Joshua Nelson <joshua@yottadb.com>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c92b3dc7d189bdff8f7e78be293d03e43466621", "html_url": "https://github.com/rust-lang/rust/commit/4c92b3dc7d189bdff8f7e78be293d03e43466621", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c92b3dc7d189bdff8f7e78be293d03e43466621/comments", "author": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76ec3f8d2b9b1ae547652762d8ab5909eaa5793d", "url": "https://api.github.com/repos/rust-lang/rust/commits/76ec3f8d2b9b1ae547652762d8ab5909eaa5793d", "html_url": "https://github.com/rust-lang/rust/commit/76ec3f8d2b9b1ae547652762d8ab5909eaa5793d"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "ab162638a1cfe24d2fb257bd0fe8850883c7e3f2", "filename": "library/core/src/future/pending.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c92b3dc7d189bdff8f7e78be293d03e43466621/library%2Fcore%2Fsrc%2Ffuture%2Fpending.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c92b3dc7d189bdff8f7e78be293d03e43466621/library%2Fcore%2Fsrc%2Ffuture%2Fpending.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffuture%2Fpending.rs?ref=4c92b3dc7d189bdff8f7e78be293d03e43466621", "patch": "@@ -7,7 +7,7 @@ use crate::task::{Context, Poll};\n /// Creates a future which never resolves, representing a computation that never\n /// finishes.\n ///\n-/// This `struct` is created by the [`pending`] function. See its\n+/// This `struct` is created by [`pending()`]. See its\n /// documentation for more.\n #[stable(feature = \"future_readiness_fns\", since = \"1.48.0\")]\n #[must_use = \"futures do nothing unless you `.await` or poll them\"]"}, {"sha": "f302cda09e721166e2d6929402d46e621aa5db4c", "filename": "library/core/src/future/poll_fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c92b3dc7d189bdff8f7e78be293d03e43466621/library%2Fcore%2Fsrc%2Ffuture%2Fpoll_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c92b3dc7d189bdff8f7e78be293d03e43466621/library%2Fcore%2Fsrc%2Ffuture%2Fpoll_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffuture%2Fpoll_fn.rs?ref=4c92b3dc7d189bdff8f7e78be293d03e43466621", "patch": "@@ -33,7 +33,7 @@ where\n \n /// A Future that wraps a function returning `Poll`.\n ///\n-/// This `struct` is created by the [`poll_fn`] function. See its\n+/// This `struct` is created by [`poll_fn()`]. See its\n /// documentation for more.\n #[must_use = \"futures do nothing unless you `.await` or poll them\"]\n #[unstable(feature = \"future_poll_fn\", issue = \"72302\")]"}, {"sha": "e98f5c570bf3cb70a5e5ce814acab0146817d917", "filename": "library/core/src/future/ready.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c92b3dc7d189bdff8f7e78be293d03e43466621/library%2Fcore%2Fsrc%2Ffuture%2Fready.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c92b3dc7d189bdff8f7e78be293d03e43466621/library%2Fcore%2Fsrc%2Ffuture%2Fready.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffuture%2Fready.rs?ref=4c92b3dc7d189bdff8f7e78be293d03e43466621", "patch": "@@ -4,7 +4,7 @@ use crate::task::{Context, Poll};\n \n /// Creates a future that is immediately ready with a value.\n ///\n-/// This `struct` is created by the [`ready`] function. See its\n+/// This `struct` is created by [`ready()`]. See its\n /// documentation for more.\n #[stable(feature = \"future_readiness_fns\", since = \"1.48.0\")]\n #[derive(Debug, Clone)]"}]}