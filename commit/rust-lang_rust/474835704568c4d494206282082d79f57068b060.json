{"sha": "474835704568c4d494206282082d79f57068b060", "node_id": "C_kwDOAAsO6NoAKDQ3NDgzNTcwNDU2OGM0ZDQ5NDIwNjI4MjA4MmQ3OWY1NzA2OGIwNjA", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-12-21T18:17:42Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-12-21T18:17:42Z"}, "message": "Drive-by cleanup: fully qualify `ast::Expr` in `hir`", "tree": {"sha": "e9e97cecd8d95b7c18b5896c48f2524ee3ae9fca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9e97cecd8d95b7c18b5896c48f2524ee3ae9fca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/474835704568c4d494206282082d79f57068b060", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/474835704568c4d494206282082d79f57068b060", "html_url": "https://github.com/rust-lang/rust/commit/474835704568c4d494206282082d79f57068b060", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/474835704568c4d494206282082d79f57068b060/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "761b127c473f8324bc9fe46a3fb502bb0a8ba6ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/761b127c473f8324bc9fe46a3fb502bb0a8ba6ba", "html_url": "https://github.com/rust-lang/rust/commit/761b127c473f8324bc9fe46a3fb502bb0a8ba6ba"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "2933d488a186af2c92ec8964f34f555f65d7be74", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/474835704568c4d494206282082d79f57068b060/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/474835704568c4d494206282082d79f57068b060/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=474835704568c4d494206282082d79f57068b060", "patch": "@@ -74,7 +74,7 @@ use once_cell::unsync::Lazy;\n use rustc_hash::FxHashSet;\n use stdx::{impl_from, never};\n use syntax::{\n-    ast::{self, Expr, HasAttrs as _, HasDocComments, HasName},\n+    ast::{self, HasAttrs as _, HasDocComments, HasName},\n     AstNode, AstPtr, SmolStr, SyntaxNodePtr, TextRange, T,\n };\n \n@@ -1074,7 +1074,7 @@ impl Variant {\n         db.enum_data(self.parent.id).variants[self.id].variant_data.clone()\n     }\n \n-    pub fn value(self, db: &dyn HirDatabase) -> Option<Expr> {\n+    pub fn value(self, db: &dyn HirDatabase) -> Option<ast::Expr> {\n         self.source(db)?.value.expr()\n     }\n "}]}