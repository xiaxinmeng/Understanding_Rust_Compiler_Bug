{"sha": "e660d52e3ddcea7c45070526064a45f5a1964366", "node_id": "C_kwDOAAsO6NoAKGU2NjBkNTJlM2RkY2VhN2M0NTA3MDUyNjA2NGE0NWY1YTE5NjQzNjY", "commit": {"author": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2022-02-12T19:48:07Z"}, "committer": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2022-02-12T23:44:09Z"}, "message": "Use known-bug prop for GAT bug tests", "tree": {"sha": "afbc905fb4d2f75a2ad168d74532dde85562fde2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/afbc905fb4d2f75a2ad168d74532dde85562fde2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e660d52e3ddcea7c45070526064a45f5a1964366", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e660d52e3ddcea7c45070526064a45f5a1964366", "html_url": "https://github.com/rust-lang/rust/commit/e660d52e3ddcea7c45070526064a45f5a1964366", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e660d52e3ddcea7c45070526064a45f5a1964366/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c6ff4b269a588ddd39f80fa443d3cd161cfc88b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c6ff4b269a588ddd39f80fa443d3cd161cfc88b", "html_url": "https://github.com/rust-lang/rust/commit/7c6ff4b269a588ddd39f80fa443d3cd161cfc88b"}], "stats": {"total": 59, "additions": 32, "deletions": 27}, "files": [{"sha": "a637da6cf6fa778a9ceddb57aaf61b1530dbb4d8", "filename": "src/test/ui/generic-associated-types/bugs/issue-80626.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-80626.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-80626.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-80626.rs?ref=e660d52e3ddcea7c45070526064a45f5a1964366", "patch": "@@ -1,4 +1,5 @@\n // check-fail\n+// known-bug\n \n // This should pass, but it requires `Sized` to be coinductive.\n \n@@ -11,7 +12,6 @@ trait Allocator {\n enum LinkedList<A: Allocator> {\n     Head,\n     Next(A::Allocated<Self>)\n-    //~^ overflow\n }\n \n fn main() {}"}, {"sha": "8b0cc78e9994964889441231f0d895f04ff57776", "filename": "src/test/ui/generic-associated-types/bugs/issue-80626.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-80626.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-80626.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-80626.stderr?ref=e660d52e3ddcea7c45070526064a45f5a1964366", "patch": "@@ -1,5 +1,5 @@\n error[E0275]: overflow evaluating the requirement `LinkedList<A>: Sized`\n-  --> $DIR/issue-80626.rs:13:10\n+  --> $DIR/issue-80626.rs:14:10\n    |\n LL |     Next(A::Allocated<Self>)\n    |          ^^^^^^^^^^^^^^^^^^"}, {"sha": "68cd0fd7efce0ffe0ca242ad0d89a96eac05a01f", "filename": "src/test/ui/generic-associated-types/bugs/issue-86218.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-86218.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-86218.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-86218.rs?ref=e660d52e3ddcea7c45070526064a45f5a1964366", "patch": "@@ -1,4 +1,5 @@\n // check-fail\n+// known-bug\n \n // This should pass, but seems to run into a TAIT issue.\n \n@@ -20,7 +21,6 @@ trait Yay<AdditionalValue> {\n \n impl<'a> Yay<&'a ()> for () {\n     type InnerStream<'s> = impl Stream<Item = i32> + 's;\n-    //~^ the type\n     fn foo<'s>() -> Self::InnerStream<'s> { todo!() }\n }\n "}, {"sha": "98a5f4254bb1b9f5c33a36c7090e9de2dc47002a", "filename": "src/test/ui/generic-associated-types/bugs/issue-86218.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-86218.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-86218.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-86218.stderr?ref=e660d52e3ddcea7c45070526064a45f5a1964366", "patch": "@@ -1,11 +1,11 @@\n error[E0477]: the type `impl Stream<Item = i32>` does not fulfill the required lifetime\n-  --> $DIR/issue-86218.rs:22:28\n+  --> $DIR/issue-86218.rs:23:28\n    |\n LL |     type InnerStream<'s> = impl Stream<Item = i32> + 's;\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: type must outlive the lifetime `'s` as defined here as required by this binding\n-  --> $DIR/issue-86218.rs:22:22\n+  --> $DIR/issue-86218.rs:23:22\n    |\n LL |     type InnerStream<'s> = impl Stream<Item = i32> + 's;\n    |                      ^^"}, {"sha": "6d6063f8085ba5bc253de9560b41dc797c448363", "filename": "src/test/ui/generic-associated-types/bugs/issue-87735.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-87735.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-87735.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-87735.rs?ref=e660d52e3ddcea7c45070526064a45f5a1964366", "patch": "@@ -1,4 +1,5 @@\n // check-fail\n+// known-bug\n \n // This should pass, but we need an extension of implied bounds (probably).\n \n@@ -23,7 +24,7 @@ struct Foo<T>(T);\n #[derive(Debug)]\n struct FooRef<'a, U>(&'a [U]);\n \n-impl<'b, T, U> AsRef2 for Foo<T> //~ the type parameter\n+impl<'b, T, U> AsRef2 for Foo<T>\n where\n     // * `for<'b, 'c> T: AsRef2<Output<'b> = &'c [U]>>` does not work\n     //"}, {"sha": "0a18b5f0cbdaaa0b77d09901c869fac18cbea8e6", "filename": "src/test/ui/generic-associated-types/bugs/issue-87735.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-87735.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-87735.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-87735.stderr?ref=e660d52e3ddcea7c45070526064a45f5a1964366", "patch": "@@ -1,5 +1,5 @@\n error[E0207]: the type parameter `U` is not constrained by the impl trait, self type, or predicates\n-  --> $DIR/issue-87735.rs:26:13\n+  --> $DIR/issue-87735.rs:27:13\n    |\n LL | impl<'b, T, U> AsRef2 for Foo<T>\n    |             ^ unconstrained type parameter"}, {"sha": "ffcfd62cbb3be48c6e81f62c6d0ac008487d3a6c", "filename": "src/test/ui/generic-associated-types/bugs/issue-87748.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-87748.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-87748.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-87748.rs?ref=e660d52e3ddcea7c45070526064a45f5a1964366", "patch": "@@ -1,4 +1,5 @@\n // check-fail\n+// known-bug\n \n // This should pass, but unnormalized input args aren't treated as implied.\n \n@@ -14,7 +15,7 @@ struct Foo;\n impl MyTrait for Foo {\n     type Assoc<'a, 'b> where 'b: 'a = u32;\n \n-    fn do_sth(_: u32) {} //~ lifetime bound\n+    fn do_sth(_: u32) {}\n     // fn do_sth(_: Self::Assoc<'static, 'static>) {}\n     // fn do_sth(_: Self::Assoc<'_, '_>) {}\n }"}, {"sha": "60bb48efbc89504a0244dad0e17865b508cf158a", "filename": "src/test/ui/generic-associated-types/bugs/issue-87748.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-87748.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-87748.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-87748.stderr?ref=e660d52e3ddcea7c45070526064a45f5a1964366", "patch": "@@ -1,16 +1,16 @@\n error[E0478]: lifetime bound not satisfied\n-  --> $DIR/issue-87748.rs:17:5\n+  --> $DIR/issue-87748.rs:18:5\n    |\n LL |     fn do_sth(_: u32) {}\n    |     ^^^^^^^^^^^^^^^^^\n    |\n note: lifetime parameter instantiated with the anonymous lifetime #2 defined here\n-  --> $DIR/issue-87748.rs:17:5\n+  --> $DIR/issue-87748.rs:18:5\n    |\n LL |     fn do_sth(_: u32) {}\n    |     ^^^^^^^^^^^^^^^^^\n note: but lifetime parameter must outlive the anonymous lifetime #1 defined here\n-  --> $DIR/issue-87748.rs:17:5\n+  --> $DIR/issue-87748.rs:18:5\n    |\n LL |     fn do_sth(_: u32) {}\n    |     ^^^^^^^^^^^^^^^^^"}, {"sha": "31cea12a3e2416a7365b81edd9c0f6cbae30e9c3", "filename": "src/test/ui/generic-associated-types/bugs/issue-87755.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-87755.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-87755.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-87755.rs?ref=e660d52e3ddcea7c45070526064a45f5a1964366", "patch": "@@ -1,4 +1,5 @@\n // check-fail\n+// known-bug\n \n // This should pass.\n \n@@ -15,7 +16,6 @@ struct Bar;\n \n impl Foo for Bar {\n     type Ass = Bar;\n-    //~^ overflow\n }\n \n fn main() {}"}, {"sha": "5d1aff0117c13cb838bcdde5f94e7aa770dee397", "filename": "src/test/ui/generic-associated-types/bugs/issue-87755.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-87755.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-87755.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-87755.stderr?ref=e660d52e3ddcea7c45070526064a45f5a1964366", "patch": "@@ -1,5 +1,5 @@\n error[E0275]: overflow evaluating the requirement `<Bar as Foo>::Ass == _`\n-  --> $DIR/issue-87755.rs:17:16\n+  --> $DIR/issue-87755.rs:18:16\n    |\n LL |     type Ass = Bar;\n    |                ^^^"}, {"sha": "57a4b028d93ea67bf3e1b5cbb6ef8ff8369084e5", "filename": "src/test/ui/generic-associated-types/bugs/issue-87803.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-87803.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-87803.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-87803.rs?ref=e660d52e3ddcea7c45070526064a45f5a1964366", "patch": "@@ -1,4 +1,5 @@\n // check-fail\n+// known-bug\n \n // This should pass, but using a type alias vs a reference directly\n // changes late-bound -> early-bound.\n@@ -18,7 +19,7 @@ impl Scanner for IdScanner {\n     type Input<'a> = &'a str;\n     type Token<'a> = &'a str;\n \n-    fn scan<'a>(&mut self, s : &'a str) -> &'a str { //~ lifetime parameters\n+    fn scan<'a>(&mut self, s : &'a str) -> &'a str {\n         s\n     }\n }"}, {"sha": "c81c051d32a89616271abfbd7e4bf0f9c79487aa", "filename": "src/test/ui/generic-associated-types/bugs/issue-87803.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-87803.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-87803.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-87803.stderr?ref=e660d52e3ddcea7c45070526064a45f5a1964366", "patch": "@@ -1,5 +1,5 @@\n error[E0195]: lifetime parameters or bounds on method `scan` do not match the trait declaration\n-  --> $DIR/issue-87803.rs:21:12\n+  --> $DIR/issue-87803.rs:22:12\n    |\n LL |     fn scan<'a>(&mut self, i : Self::Input<'a>) -> Self::Token<'a>;\n    |            ---- lifetimes in impl do not match this method in trait"}, {"sha": "c9f342405278a90597f39b6a236532dc8701bbfd", "filename": "src/test/ui/generic-associated-types/bugs/issue-88382.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-88382.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-88382.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-88382.rs?ref=e660d52e3ddcea7c45070526064a45f5a1964366", "patch": "@@ -1,4 +1,5 @@\n // check-fail\n+// known-bug\n \n // This should pass, but has a missed normalization due to HRTB.\n \n@@ -25,7 +26,6 @@ fn do_something<I: Iterable>(i: I, mut f: impl for<'a> Fn(&mut I::Iterator<'a>))\n fn main() {\n     do_something(SomeImplementation(), |_| ());\n     do_something(SomeImplementation(), test);\n-    //~^ type mismatch\n }\n \n fn test<'a, I: Iterable>(_: &mut I::Iterator<'a>) {}"}, {"sha": "d06c3ec8de75ec436c4461bc5b4749ce244132e4", "filename": "src/test/ui/generic-associated-types/bugs/issue-88382.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-88382.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-88382.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-88382.stderr?ref=e660d52e3ddcea7c45070526064a45f5a1964366", "patch": "@@ -1,5 +1,5 @@\n error[E0631]: type mismatch in function arguments\n-  --> $DIR/issue-88382.rs:27:40\n+  --> $DIR/issue-88382.rs:28:40\n    |\n LL |     do_something(SomeImplementation(), test);\n    |     ------------                       ^^^^ expected signature of `for<'a> fn(&mut <SomeImplementation as Iterable>::Iterator<'a>) -> _`\n@@ -10,7 +10,7 @@ LL | fn test<'a, I: Iterable>(_: &mut I::Iterator<'a>) {}\n    | ------------------------------------------------- found signature of `for<'r> fn(&'r mut std::iter::Empty<usize>) -> _`\n    |\n note: required by a bound in `do_something`\n-  --> $DIR/issue-88382.rs:21:56\n+  --> $DIR/issue-88382.rs:22:56\n    |\n LL | fn do_something<I: Iterable>(i: I, mut f: impl for<'a> Fn(&mut I::Iterator<'a>)) {\n    |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `do_something`"}, {"sha": "b31d012d2fc4163c1f5478933ecca9062cdb849a", "filename": "src/test/ui/generic-associated-types/bugs/issue-88460.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-88460.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-88460.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-88460.rs?ref=e660d52e3ddcea7c45070526064a45f5a1964366", "patch": "@@ -1,4 +1,5 @@\n // check-fail\n+// known-bug\n \n // This should pass, but has a missed normalization due to HRTB.\n \n@@ -27,5 +28,4 @@ impl Trait for Foo {\n \n fn main() {\n     test(Foo);\n-    //~^ the trait bound\n }"}, {"sha": "0b83e9da1ab7ade398c3f3aa31a2be73c6ea39b8", "filename": "src/test/ui/generic-associated-types/bugs/issue-88460.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-88460.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-88460.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-88460.stderr?ref=e660d52e3ddcea7c45070526064a45f5a1964366", "patch": "@@ -1,11 +1,11 @@\n error[E0277]: the trait bound `for<'a> <_ as Trait>::Assoc<'a>: Marker` is not satisfied\n-  --> $DIR/issue-88460.rs:29:5\n+  --> $DIR/issue-88460.rs:30:5\n    |\n LL |     test(Foo);\n    |     ^^^^ the trait `for<'a> Marker` is not implemented for `<_ as Trait>::Assoc<'a>`\n    |\n note: required by a bound in `test`\n-  --> $DIR/issue-88460.rs:16:27\n+  --> $DIR/issue-88460.rs:17:27\n    |\n LL | fn test<T>(value: T)\n    |    ---- required by a bound in this"}, {"sha": "c72a450b9261cac5ee88b46fd963ff19de228382", "filename": "src/test/ui/generic-associated-types/bugs/issue-88526.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-88526.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-88526.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-88526.rs?ref=e660d52e3ddcea7c45070526064a45f5a1964366", "patch": "@@ -1,4 +1,5 @@\n // check-fail\n+// known-bug\n \n // This should pass, but requires more logic.\n \n@@ -23,7 +24,7 @@ struct TestB<Q, F>\n     f: F,\n }\n \n-impl<'q, Q, I, F> A for TestB<Q, F> //~ the type parameter\n+impl<'q, Q, I, F> A for TestB<Q, F>\n where\n     Q: A<I<'q> = &'q I>,\n     F: Fn(I),"}, {"sha": "127c889bf715e3c41e515fadae67b70fe827fcef", "filename": "src/test/ui/generic-associated-types/bugs/issue-88526.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-88526.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-88526.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-88526.stderr?ref=e660d52e3ddcea7c45070526064a45f5a1964366", "patch": "@@ -1,5 +1,5 @@\n error[E0207]: the type parameter `I` is not constrained by the impl trait, self type, or predicates\n-  --> $DIR/issue-88526.rs:26:13\n+  --> $DIR/issue-88526.rs:27:13\n    |\n LL | impl<'q, Q, I, F> A for TestB<Q, F>\n    |             ^ unconstrained type parameter"}, {"sha": "1581b7105a867518a077c998fe2f2eb667743ad5", "filename": "src/test/ui/generic-associated-types/bugs/issue-89008.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-89008.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-89008.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-89008.rs?ref=e660d52e3ddcea7c45070526064a45f5a1964366", "patch": "@@ -1,5 +1,6 @@\n // check-fail\n // edition:2021\n+// known-bug\n \n // This should pass, but seems to run into a TAIT bug.\n \n@@ -31,11 +32,11 @@ trait X {\n struct Y;\n \n impl X for Y {\n-    type LineStream<'a, Repr> = impl Stream<Item = Repr>; //~ could not find\n+    type LineStream<'a, Repr> = impl Stream<Item = Repr>;\n \n     type LineStreamFut<'a, Repr> = impl Future<Output = Self::LineStream<'a, Repr>> ;\n \n-    fn line_stream<'a, Repr>(&'a self) -> Self::LineStreamFut<'a, Repr> { //~ type mismatch\n+    fn line_stream<'a, Repr>(&'a self) -> Self::LineStreamFut<'a, Repr> {\n         async {empty()}\n     }\n }"}, {"sha": "c2687ca540153c7bcc87aa5e8cea8788b130e023", "filename": "src/test/ui/generic-associated-types/bugs/issue-89008.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-89008.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e660d52e3ddcea7c45070526064a45f5a1964366/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-89008.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-89008.stderr?ref=e660d52e3ddcea7c45070526064a45f5a1964366", "patch": "@@ -1,5 +1,5 @@\n error[E0271]: type mismatch resolving `<impl Future<Output = [async output]> as Future>::Output == impl Stream<Item = Repr>`\n-  --> $DIR/issue-89008.rs:38:43\n+  --> $DIR/issue-89008.rs:39:43\n    |\n LL |     type LineStream<'a, Repr> = impl Stream<Item = Repr>;\n    |                                 ------------------------ the expected opaque type\n@@ -11,7 +11,7 @@ LL |     fn line_stream<'a, Repr>(&'a self) -> Self::LineStreamFut<'a, Repr> {\n                    found struct `Empty<_>`\n \n error: could not find defining uses\n-  --> $DIR/issue-89008.rs:34:33\n+  --> $DIR/issue-89008.rs:35:33\n    |\n LL |     type LineStream<'a, Repr> = impl Stream<Item = Repr>;\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^"}]}