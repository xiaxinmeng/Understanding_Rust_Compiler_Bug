{"sha": "4c0116e13ffd4b84e6691cd3b1f09269c4e76728", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjMDExNmUxM2ZmZDRiODRlNjY5MWNkM2IxZjA5MjY5YzRlNzY3Mjg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-11T03:22:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-11T03:22:10Z"}, "message": "Auto merge of #56627 - alexcrichton:update-cargo, r=alexcrichton\n\nUpdate Cargo submodule and its dependencies\n\nHopefully just another routine update!\n\nSo far this starts to enable the `std::arch` in stage0 builds of rustc.\nThis means that we may need stage0/not(stage0) in stdsimd itself, but\nmore and more code is starting to use `std::arch` so I think it's time\nto start shifting the balance of work here.", "tree": {"sha": "88ca46a47465bc18f188d5bf0e22f55fd92af7a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88ca46a47465bc18f188d5bf0e22f55fd92af7a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c0116e13ffd4b84e6691cd3b1f09269c4e76728", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c0116e13ffd4b84e6691cd3b1f09269c4e76728", "html_url": "https://github.com/rust-lang/rust/commit/4c0116e13ffd4b84e6691cd3b1f09269c4e76728", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c0116e13ffd4b84e6691cd3b1f09269c4e76728/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da1527cb06c7245f83ca51903ea2a27631820215", "url": "https://api.github.com/repos/rust-lang/rust/commits/da1527cb06c7245f83ca51903ea2a27631820215", "html_url": "https://github.com/rust-lang/rust/commit/da1527cb06c7245f83ca51903ea2a27631820215"}, {"sha": "b4110900bd82f03b1a5a8d777fa514e78adfadef", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4110900bd82f03b1a5a8d777fa514e78adfadef", "html_url": "https://github.com/rust-lang/rust/commit/b4110900bd82f03b1a5a8d777fa514e78adfadef"}], "stats": {"total": 1049, "additions": 598, "deletions": 451}, "files": [{"sha": "c3c881259dbe6b48284b59d2951d88b0fcd34c32", "filename": "Cargo.lock", "status": "modified", "additions": 572, "deletions": 439, "changes": 1011, "blob_url": "https://github.com/rust-lang/rust/blob/4c0116e13ffd4b84e6691cd3b1f09269c4e76728/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/4c0116e13ffd4b84e6691cd3b1f09269c4e76728/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=4c0116e13ffd4b84e6691cd3b1f09269c4e76728"}, {"sha": "a51674fbfc71a8cb9754451764267ed6caa166c7", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c0116e13ffd4b84e6691cd3b1f09269c4e76728/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c0116e13ffd4b84e6691cd3b1f09269c4e76728/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=4c0116e13ffd4b84e6691cd3b1f09269c4e76728", "patch": "@@ -251,9 +251,7 @@ macro_rules! vector_impl { ($([$f:ident, $($args:tt)*]),*) => { $($f!($($args)*)\n #[path = \"../stdsimd/coresimd/mod.rs\"]\n #[allow(missing_docs, missing_debug_implementations, dead_code, unused_imports)]\n #[unstable(feature = \"stdsimd\", issue = \"48556\")]\n-#[cfg(not(stage0))] // allow changes to how stdsimd works in stage0\n mod coresimd;\n \n #[stable(feature = \"simd_arch\", since = \"1.27.0\")]\n-#[cfg(not(stage0))]\n pub use coresimd::arch;"}, {"sha": "90c8eaf0f7cbce08f9c9bd177f90ed5d12f7682f", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4c0116e13ffd4b84e6691cd3b1f09269c4e76728/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c0116e13ffd4b84e6691cd3b1f09269c4e76728/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=4c0116e13ffd4b84e6691cd3b1f09269c4e76728", "patch": "@@ -287,7 +287,7 @@\n #![feature(rustc_attrs)]\n #![feature(rustc_const_unstable)]\n #![feature(std_internals)]\n-#![cfg_attr(not(stage0), feature(stdsimd))]\n+#![feature(stdsimd)]\n #![feature(shrink_to)]\n #![feature(slice_concat_ext)]\n #![feature(slice_internals)]\n@@ -514,18 +514,17 @@ pub mod rt;\n #[path = \"../stdsimd/stdsimd/mod.rs\"]\n #[allow(missing_debug_implementations, missing_docs, dead_code)]\n #[unstable(feature = \"stdsimd\", issue = \"48556\")]\n-#[cfg(all(not(stage0), not(test)))]\n+#[cfg(not(test))]\n mod stdsimd;\n \n // A \"fake\" module needed by the `stdsimd` module to compile, not actually\n // exported though.\n-#[cfg(not(stage0))]\n mod coresimd {\n     pub use core::arch;\n }\n \n #[stable(feature = \"simd_arch\", since = \"1.27.0\")]\n-#[cfg(all(not(stage0), not(test)))]\n+#[cfg(not(test))]\n pub use stdsimd::arch;\n \n // Include a number of private modules that exist solely to provide"}, {"sha": "f9cf0a9572104edc91bc7fb429d52f0e7b826fef", "filename": "src/libsyntax_pos/analyze_source_file.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4c0116e13ffd4b84e6691cd3b1f09269c4e76728/src%2Flibsyntax_pos%2Fanalyze_source_file.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c0116e13ffd4b84e6691cd3b1f09269c4e76728/src%2Flibsyntax_pos%2Fanalyze_source_file.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fanalyze_source_file.rs?ref=4c0116e13ffd4b84e6691cd3b1f09269c4e76728", "patch": "@@ -47,8 +47,7 @@ pub fn analyze_source_file(\n }\n \n cfg_if! {\n-    if #[cfg(all(any(target_arch = \"x86\", target_arch = \"x86_64\"),\n-                 not(stage0)))] {\n+    if #[cfg(all(any(target_arch = \"x86\", target_arch = \"x86_64\")))] {\n         fn analyze_source_file_dispatch(src: &str,\n                                     source_file_start_pos: BytePos,\n                                     lines: &mut Vec<BytePos>,"}, {"sha": "28fb20034a5bb42ea589664de2617dd1840506d3", "filename": "src/tools/cargo", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcargo?ref=4c0116e13ffd4b84e6691cd3b1f09269c4e76728", "patch": "@@ -1 +1 @@\n-Subproject commit 5e85ba14aaa20f8133863373404cb0af69eeef2c\n+Subproject commit 28fb20034a5bb42ea589664de2617dd1840506d3"}, {"sha": "5acfee28fad67e5606244b36bcc1977af147eb16", "filename": "src/tools/rustc-workspace-hack/Cargo.toml", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4c0116e13ffd4b84e6691cd3b1f09269c4e76728/src%2Ftools%2Frustc-workspace-hack%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/4c0116e13ffd4b84e6691cd3b1f09269c4e76728/src%2Ftools%2Frustc-workspace-hack%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustc-workspace-hack%2FCargo.toml?ref=4c0116e13ffd4b84e6691cd3b1f09269c4e76728", "patch": "@@ -50,9 +50,11 @@ features = [\n ]\n \n [dependencies]\n-serde_json = { version = \"1.0.31\", features = [\"raw_value\"] }\n-rand = { version = \"0.5.5\", features = [\"i128_support\"] }\n curl-sys = { version = \"0.4.13\", optional = true }\n+parking_lot = { version = \"0.6\", features = ['nightly'] }\n+rand = { version = \"0.5.5\", features = [\"i128_support\"] }\n+serde_json = { version = \"1.0.31\", features = [\"raw_value\"] }\n+smallvec = { version = \"0.6\", features = ['union'] }\n \n [target.'cfg(not(windows))'.dependencies]\n openssl = { version = \"0.10.12\", optional = true }"}, {"sha": "e2758921f192a7a987d1ac435e30c62b5ee95094", "filename": "src/tools/tidy/src/deps.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4c0116e13ffd4b84e6691cd3b1f09269c4e76728/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c0116e13ffd4b84e6691cd3b1f09269c4e76728/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs?ref=4c0116e13ffd4b84e6691cd3b1f09269c4e76728", "patch": "@@ -52,6 +52,7 @@ const EXCEPTIONS: &[&str] = &[\n     \"ryu\",                // Apache-2.0, rls/cargo/... (b/c of serde)\n     \"bytesize\",           // Apache-2.0, cargo\n     \"im-rc\",              // MPL-2.0+, cargo\n+    \"adler32\",            // BSD-3-Clause AND Zlib, cargo dep that isn't used\n ];\n \n /// Which crates to check against the whitelist?\n@@ -62,19 +63,23 @@ const WHITELIST_CRATES: &[CrateVersion] = &[\n \n /// Whitelist of crates rustc is allowed to depend on. Avoid adding to the list if possible.\n const WHITELIST: &[Crate] = &[\n+    Crate(\"adler32\"),\n     Crate(\"aho-corasick\"),\n     Crate(\"arrayvec\"),\n     Crate(\"atty\"),\n     Crate(\"backtrace\"),\n     Crate(\"backtrace-sys\"),\n     Crate(\"bitflags\"),\n+    Crate(\"build_const\"),\n     Crate(\"byteorder\"),\n     Crate(\"cc\"),\n     Crate(\"cfg-if\"),\n     Crate(\"chalk-engine\"),\n     Crate(\"chalk-macros\"),\n     Crate(\"cloudabi\"),\n     Crate(\"cmake\"),\n+    Crate(\"crc\"),\n+    Crate(\"crc32fast\"),\n     Crate(\"crossbeam-deque\"),\n     Crate(\"crossbeam-epoch\"),\n     Crate(\"crossbeam-utils\"),\n@@ -100,6 +105,8 @@ const WHITELIST: &[Crate] = &[\n     Crate(\"memmap\"),\n     Crate(\"memoffset\"),\n     Crate(\"miniz-sys\"),\n+    Crate(\"miniz_oxide\"),\n+    Crate(\"miniz_oxide_c_api\"),\n     Crate(\"nodrop\"),\n     Crate(\"num_cpus\"),\n     Crate(\"owning_ref\"),\n@@ -109,7 +116,12 @@ const WHITELIST: &[Crate] = &[\n     Crate(\"polonius-engine\"),\n     Crate(\"quick-error\"),\n     Crate(\"rand\"),\n+    Crate(\"rand_chacha\"),\n     Crate(\"rand_core\"),\n+    Crate(\"rand_hc\"),\n+    Crate(\"rand_isaac\"),\n+    Crate(\"rand_pcg\"),\n+    Crate(\"rand_xorshift\"),\n     Crate(\"redox_syscall\"),\n     Crate(\"redox_termios\"),\n     Crate(\"regex\"),\n@@ -119,8 +131,12 @@ const WHITELIST: &[Crate] = &[\n     Crate(\"rustc-hash\"),\n     Crate(\"rustc-rayon\"),\n     Crate(\"rustc-rayon-core\"),\n+    Crate(\"rustc_version\"),\n     Crate(\"scoped-tls\"),\n     Crate(\"scopeguard\"),\n+    Crate(\"semver\"),\n+    Crate(\"semver-parser\"),\n+    Crate(\"serde\"),\n     Crate(\"smallvec\"),\n     Crate(\"stable_deref_trait\"),\n     Crate(\"tempfile\"),\n@@ -132,9 +148,9 @@ const WHITELIST: &[Crate] = &[\n     Crate(\"unicode-width\"),\n     Crate(\"unreachable\"),\n     Crate(\"utf8-ranges\"),\n+    Crate(\"vcpkg\"),\n     Crate(\"version_check\"),\n     Crate(\"void\"),\n-    Crate(\"vcpkg\"),\n     Crate(\"winapi\"),\n     Crate(\"winapi-build\"),\n     Crate(\"winapi-i686-pc-windows-gnu\"),"}]}