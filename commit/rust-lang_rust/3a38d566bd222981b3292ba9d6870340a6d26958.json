{"sha": "3a38d566bd222981b3292ba9d6870340a6d26958", "node_id": "C_kwDOAAsO6NoAKDNhMzhkNTY2YmQyMjI5ODFiMzI5MmJhOWQ2ODcwMzQwYTZkMjY5NTg", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-09-13T17:46:08Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-09-14T01:28:54Z"}, "message": "Also replace the placeholder for the stable_features lint", "tree": {"sha": "6aeecb7f0b19fb64b028cc4c19d7bf335d65ce92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6aeecb7f0b19fb64b028cc4c19d7bf335d65ce92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a38d566bd222981b3292ba9d6870340a6d26958", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a38d566bd222981b3292ba9d6870340a6d26958", "html_url": "https://github.com/rust-lang/rust/commit/3a38d566bd222981b3292ba9d6870340a6d26958", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a38d566bd222981b3292ba9d6870340a6d26958/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a09adf99fff9b009ff517b9cf5bfce363130e16", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a09adf99fff9b009ff517b9cf5bfce363130e16", "html_url": "https://github.com/rust-lang/rust/commit/4a09adf99fff9b009ff517b9cf5bfce363130e16"}], "stats": {"total": 29, "additions": 20, "deletions": 9}, "files": [{"sha": "753f62dd589d05f048bd805da0e042c952cd2088", "filename": "compiler/rustc_attr/src/builtin.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3a38d566bd222981b3292ba9d6870340a6d26958/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a38d566bd222981b3292ba9d6870340a6d26958/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs?ref=3a38d566bd222981b3292ba9d6870340a6d26958", "patch": "@@ -21,6 +21,12 @@ use crate::session_diagnostics::{self, IncorrectReprFormatGenericCause};\n /// For more, see [this pull request](https://github.com/rust-lang/rust/pull/100591).\n pub const VERSION_PLACEHOLDER: &str = \"CURRENT_RUSTC_VERSION\";\n \n+pub fn rust_version_symbol() -> Symbol {\n+    let version = option_env!(\"CFG_VERSION\").unwrap_or(\"<current>\");\n+    let version = version.split(' ').next().unwrap();\n+    Symbol::intern(&version)\n+}\n+\n pub fn is_builtin_attr(attr: &Attribute) -> bool {\n     attr.is_doc_comment() || attr.ident().filter(|ident| is_builtin_attr_name(ident.name)).is_some()\n }\n@@ -495,9 +501,7 @@ where\n                     }\n \n                     if let Some(s) = since && s.as_str() == VERSION_PLACEHOLDER {\n-                        let version = option_env!(\"CFG_VERSION\").unwrap_or(\"<current>\");\n-                        let version = version.split(' ').next().unwrap();\n-                        since = Some(Symbol::intern(&version));\n+                        since = Some(rust_version_symbol());\n                     }\n \n                     match (feature, since) {"}, {"sha": "04173c792a979442457a6dcd88015adf7f3bea5b", "filename": "compiler/rustc_passes/src/lib_features.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3a38d566bd222981b3292ba9d6870340a6d26958/compiler%2Frustc_passes%2Fsrc%2Flib_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a38d566bd222981b3292ba9d6870340a6d26958/compiler%2Frustc_passes%2Fsrc%2Flib_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Flib_features.rs?ref=3a38d566bd222981b3292ba9d6870340a6d26958", "patch": "@@ -5,7 +5,7 @@\n //! collect them instead.\n \n use rustc_ast::{Attribute, MetaItemKind};\n-use rustc_attr::VERSION_PLACEHOLDER;\n+use rustc_attr::{rust_version_symbol, VERSION_PLACEHOLDER};\n use rustc_errors::struct_span_err;\n use rustc_hir::intravisit::Visitor;\n use rustc_middle::hir::nested_filter;\n@@ -57,9 +57,7 @@ impl<'tcx> LibFeatureCollector<'tcx> {\n                 }\n \n                 if let Some(s) = since && s.as_str() == VERSION_PLACEHOLDER {\n-                    let version = option_env!(\"CFG_VERSION\").unwrap_or(\"<current>\");\n-                    let version = version.split(' ').next().unwrap();\n-                    since = Some(Symbol::intern(&version));\n+                    since = Some(rust_version_symbol());\n                 }\n \n                 if let Some(feature) = feature {"}, {"sha": "9ba1276099db513581bcd7c6637735ccd8dcd77f", "filename": "compiler/rustc_passes/src/stability.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/3a38d566bd222981b3292ba9d6870340a6d26958/compiler%2Frustc_passes%2Fsrc%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a38d566bd222981b3292ba9d6870340a6d26958/compiler%2Frustc_passes%2Fsrc%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fstability.rs?ref=3a38d566bd222981b3292ba9d6870340a6d26958", "patch": "@@ -2,7 +2,8 @@\n //! propagating default levels lexically from parent to children ast nodes.\n \n use rustc_attr::{\n-    self as attr, ConstStability, Stability, StabilityLevel, Unstable, UnstableReason,\n+    self as attr, rust_version_symbol, ConstStability, Stability, StabilityLevel, Unstable,\n+    UnstableReason, VERSION_PLACEHOLDER,\n };\n use rustc_data_structures::fx::{FxHashMap, FxHashSet, FxIndexMap};\n use rustc_errors::{struct_span_err, Applicability};\n@@ -1106,7 +1107,15 @@ fn unnecessary_partially_stable_feature_lint(\n     });\n }\n \n-fn unnecessary_stable_feature_lint(tcx: TyCtxt<'_>, span: Span, feature: Symbol, since: Symbol) {\n+fn unnecessary_stable_feature_lint(\n+    tcx: TyCtxt<'_>,\n+    span: Span,\n+    feature: Symbol,\n+    mut since: Symbol,\n+) {\n+    if since.as_str() == VERSION_PLACEHOLDER {\n+        since = rust_version_symbol();\n+    }\n     tcx.struct_span_lint_hir(lint::builtin::STABLE_FEATURES, hir::CRATE_HIR_ID, span, |lint| {\n         lint.build(&format!(\n             \"the feature `{feature}` has been stable since {since} and no longer requires an \\"}]}