{"sha": "e735206f50af9754ab21171e4472cfbe1eecd92f", "node_id": "C_kwDOAAsO6NoAKGU3MzUyMDZmNTBhZjk3NTRhYjIxMTcxZTQ0NzJjZmJlMWVlY2Q5MmY", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-12-15T17:58:27Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-12-15T18:01:05Z"}, "message": "Unify Windows and non-Windows CI", "tree": {"sha": "ecda7b1b27927f063080d51c306b1f845ab861dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ecda7b1b27927f063080d51c306b1f845ab861dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e735206f50af9754ab21171e4472cfbe1eecd92f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e735206f50af9754ab21171e4472cfbe1eecd92f", "html_url": "https://github.com/rust-lang/rust/commit/e735206f50af9754ab21171e4472cfbe1eecd92f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e735206f50af9754ab21171e4472cfbe1eecd92f/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "280fb2935b2bc4f4eb56671d21d7bc2b36faa81e", "url": "https://api.github.com/repos/rust-lang/rust/commits/280fb2935b2bc4f4eb56671d21d7bc2b36faa81e", "html_url": "https://github.com/rust-lang/rust/commit/280fb2935b2bc4f4eb56671d21d7bc2b36faa81e"}], "stats": {"total": 102, "additions": 25, "deletions": 77}, "files": [{"sha": "b79406879ff32b8023a586ad16c646828943b2e3", "filename": ".github/workflows/main.yml", "status": "modified", "additions": 25, "deletions": 77, "changes": 102, "blob_url": "https://github.com/rust-lang/rust/blob/e735206f50af9754ab21171e4472cfbe1eecd92f/.github%2Fworkflows%2Fmain.yml", "raw_url": "https://github.com/rust-lang/rust/raw/e735206f50af9754ab21171e4472cfbe1eecd92f/.github%2Fworkflows%2Fmain.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fmain.yml?ref=e735206f50af9754ab21171e4472cfbe1eecd92f", "patch": "@@ -25,6 +25,10 @@ jobs:\n     runs-on: ${{ matrix.os }}\n     timeout-minutes: 60\n \n+    defaults:\n+      run:\n+        shell: bash\n+\n     strategy:\n       fail-fast: false\n       matrix:\n@@ -46,6 +50,14 @@ jobs:\n           - os: ubuntu-latest\n             env:\n               TARGET_TRIPLE: s390x-unknown-linux-gnu\n+          # Native Windows build with MSVC\n+          - os: windows-latest\n+            env:\n+              TARGET_TRIPLE: x86_64-pc-windows-msvc\n+          # cross-compile from Windows to Windows MinGW\n+          - os: windows-latest\n+            env:\n+              TARGET_TRIPLE: x86_64-pc-windows-gnu\n \n     steps:\n     - uses: actions/checkout@v3\n@@ -54,21 +66,25 @@ jobs:\n       uses: actions/cache@v3\n       with:\n         path: ~/.cargo/bin\n-        key: ${{ runner.os }}-cargo-installed-crates\n+        key: ${{ runner.os }}-${{ matrix.env.TARGET_TRIPLE }}-cargo-installed-crates\n \n     - name: Cache cargo registry and index\n       uses: actions/cache@v3\n       with:\n         path: |\n             ~/.cargo/registry\n             ~/.cargo/git\n-        key: ${{ runner.os }}-cargo-registry-and-index-${{ hashFiles('**/Cargo.lock') }}\n+        key: ${{ runner.os }}-${{ matrix.env.TARGET_TRIPLE }}-cargo-registry-and-index-${{ hashFiles('**/Cargo.lock') }}\n \n     - name: Cache cargo target dir\n       uses: actions/cache@v3\n       with:\n         path: build/cg_clif\n-        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('rust-toolchain', '**/Cargo.lock') }}\n+        key: ${{ runner.os }}-${{ matrix.env.TARGET_TRIPLE }}-cargo-build-target-${{ hashFiles('rust-toolchain', '**/Cargo.lock') }}\n+\n+    - name: Set MinGW as the default toolchain\n+      if: matrix.os == 'windows-latest' && matrix.env.TARGET_TRIPLE == 'x86_64-pc-windows-gnu'\n+      run: rustup set default-host x86_64-pc-windows-gnu\n \n     - name: Install MinGW toolchain and wine\n       if: matrix.os == 'ubuntu-latest' && matrix.env.TARGET_TRIPLE == 'x86_64-pc-windows-gnu'\n@@ -89,6 +105,10 @@ jobs:\n         sudo apt-get update\n         sudo apt-get install -y gcc-s390x-linux-gnu qemu-user\n \n+    - name: Windows setup\n+      if: matrix.os == 'windows-latest'\n+      run: git config --global core.autocrlf false\n+\n     - name: Prepare dependencies\n       run: ./y.rs prepare\n \n@@ -110,87 +130,15 @@ jobs:\n       run: tar cvfJ cg_clif.tar.xz dist\n \n     - name: Upload prebuilt cg_clif\n-      if: matrix.env.TARGET_TRIPLE != 'x86_64-pc-windows-gnu'\n+      if: matrix.os == 'windows-latest' || matrix.env.TARGET_TRIPLE != 'x86_64-pc-windows-gnu'\n       uses: actions/upload-artifact@v3\n       with:\n         name: cg_clif-${{ matrix.env.TARGET_TRIPLE }}\n         path: cg_clif.tar.xz\n \n     - name: Upload prebuilt cg_clif (cross compile)\n-      if: matrix.env.TARGET_TRIPLE == 'x86_64-pc-windows-gnu'\n+      if: matrix.os != 'windows-latest' && matrix.env.TARGET_TRIPLE == 'x86_64-pc-windows-gnu'\n       uses: actions/upload-artifact@v3\n       with:\n         name: cg_clif-${{ runner.os }}-cross-x86_64-mingw\n         path: cg_clif.tar.xz\n-\n-  windows:\n-    runs-on: ${{ matrix.os }}\n-    timeout-minutes: 60\n-\n-    strategy:\n-      fail-fast: false\n-      matrix:\n-        include:\n-          # Native Windows build with MSVC\n-          - os: windows-latest\n-            env:\n-              TARGET_TRIPLE: x86_64-pc-windows-msvc\n-          # cross-compile from Windows to Windows MinGW\n-          - os: windows-latest\n-            env:\n-              TARGET_TRIPLE: x86_64-pc-windows-gnu\n-\n-    steps:\n-    - uses: actions/checkout@v3\n-\n-    - name: Cache cargo installed crates\n-      uses: actions/cache@v3\n-      with:\n-        path: ~/.cargo/bin\n-        key: ${{ runner.os }}-${{ matrix.env.TARGET_TRIPLE }}-cargo-installed-crates\n-\n-    - name: Cache cargo registry and index\n-      uses: actions/cache@v3\n-      with:\n-        path: |\n-            ~/.cargo/registry\n-            ~/.cargo/git\n-        key: ${{ runner.os }}-${{ matrix.env.TARGET_TRIPLE }}-cargo-registry-and-index-${{ hashFiles('**/Cargo.lock') }}\n-\n-    - name: Cache cargo target dir\n-      uses: actions/cache@v3\n-      with:\n-        path: build/cg_clif\n-        key: ${{ runner.os }}-${{ matrix.env.TARGET_TRIPLE }}-cargo-build-target-${{ hashFiles('rust-toolchain', '**/Cargo.lock') }}\n-\n-    - name: Set MinGW as the default toolchain\n-      if: matrix.env.TARGET_TRIPLE == 'x86_64-pc-windows-gnu'\n-      run: rustup set default-host x86_64-pc-windows-gnu\n-\n-    - name: Prepare dependencies\n-      run: |\n-        git config --global core.autocrlf false\n-        rustc y.rs -o y.exe -g\n-        ./y.exe prepare\n-\n-    - name: Build without unstable features\n-      env:\n-        TARGET_TRIPLE: ${{ matrix.env.TARGET_TRIPLE }}\n-      # This is the config rust-lang/rust uses for builds\n-      run: ./y.exe build --no-unstable-features\n-\n-    - name: Build\n-      run: ./y.exe build --sysroot none\n-\n-    - name: Test\n-      run: ./y.exe test\n-\n-    - name: Package prebuilt cg_clif\n-      # don't use compression as xzip isn't supported by tar on windows and bzip2 hangs\n-      run: tar cvf cg_clif.tar dist\n-\n-    - name: Upload prebuilt cg_clif\n-      uses: actions/upload-artifact@v3\n-      with:\n-        name: cg_clif-${{ matrix.env.TARGET_TRIPLE }}\n-        path: cg_clif.tar"}]}