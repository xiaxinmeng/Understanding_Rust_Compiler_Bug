{"sha": "d36e390d8176babedcf326581959958d447170cd", "node_id": "C_kwDOAAsO6NoAKGQzNmUzOTBkODE3NmJhYmVkY2YzMjY1ODE5NTk5NThkNDQ3MTcwY2Q", "commit": {"author": {"name": "Urgau", "email": "urgau@numericable.fr", "date": "2023-03-26T14:18:30Z"}, "committer": {"name": "Urgau", "email": "urgau@numericable.fr", "date": "2023-05-10T17:36:01Z"}, "message": "Remove and fix useless drop of reference", "tree": {"sha": "ea5b730bbc57f6a0a9e3c08ddd4052755a0a7714", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea5b730bbc57f6a0a9e3c08ddd4052755a0a7714"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d36e390d8176babedcf326581959958d447170cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d36e390d8176babedcf326581959958d447170cd", "html_url": "https://github.com/rust-lang/rust/commit/d36e390d8176babedcf326581959958d447170cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d36e390d8176babedcf326581959958d447170cd/comments", "author": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7b831ac8a897273f78b9f47165cf8e54066ce4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7b831ac8a897273f78b9f47165cf8e54066ce4b", "html_url": "https://github.com/rust-lang/rust/commit/f7b831ac8a897273f78b9f47165cf8e54066ce4b"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "9c139d17c183dba5455a35aca3303d8ff09b6a6f", "filename": "compiler/rustc_infer/src/infer/nll_relate/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d36e390d8176babedcf326581959958d447170cd/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fnll_relate%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d36e390d8176babedcf326581959958d447170cd/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fnll_relate%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fnll_relate%2Fmod.rs?ref=d36e390d8176babedcf326581959958d447170cd", "patch": "@@ -828,7 +828,7 @@ where\n                 } else {\n                     match variables.probe(vid) {\n                         TypeVariableValue::Known { value: u } => {\n-                            drop(variables);\n+                            drop(inner);\n                             self.relate(u, u)\n                         }\n                         TypeVariableValue::Unknown { universe: _universe } => {"}, {"sha": "d13b846d96a68f0f10da061ef2ae42a8e7b2a87d", "filename": "compiler/rustc_middle/src/mir/visit.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d36e390d8176babedcf326581959958d447170cd/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d36e390d8176babedcf326581959958d447170cd/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs?ref=d36e390d8176babedcf326581959958d447170cd", "patch": "@@ -880,12 +880,11 @@ macro_rules! make_mir_visitor {\n             ) {\n                 let Constant {\n                     span,\n-                    user_ty,\n+                    user_ty: _, // no visit method for this\n                     literal,\n                 } = constant;\n \n                 self.visit_span($(& $mutability)? *span);\n-                drop(user_ty); // no visit method for this\n                 match literal {\n                     ConstantKind::Ty(ct) => self.visit_ty_const($(&$mutability)? *ct, location),\n                     ConstantKind::Val(_, ty) => self.visit_ty($(& $mutability)? *ty, TyContext::Location(location)),"}, {"sha": "ca649ebd9d5f872aa7d79534aca71a6633b98681", "filename": "library/std/src/sys/sgx/waitqueue/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d36e390d8176babedcf326581959958d447170cd/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fwaitqueue%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d36e390d8176babedcf326581959958d447170cd/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fwaitqueue%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fwaitqueue%2Fmod.rs?ref=d36e390d8176babedcf326581959958d447170cd", "patch": "@@ -207,7 +207,7 @@ impl WaitQueue {\n                 let mut entry_guard = entry.lock();\n                 let tcs = entry_guard.tcs;\n                 entry_guard.wake = true;\n-                drop(entry);\n+                drop(entry_guard);\n                 Ok(WaitGuard { mutex_guard: Some(guard), notified_tcs: NotifiedTcs::Single(tcs) })\n             } else {\n                 Err(guard)"}, {"sha": "09db5b11dbfd32be6ae3afcd0fe4eb8361ea50c0", "filename": "library/std/src/sys/unix/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d36e390d8176babedcf326581959958d447170cd/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d36e390d8176babedcf326581959958d447170cd/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs?ref=d36e390d8176babedcf326581959958d447170cd", "patch": "@@ -1210,7 +1210,7 @@ impl File {\n                 // Redox doesn't appear to support `UTIME_OMIT`.\n                 // ESP-IDF and HorizonOS do not support `futimens` at all and the behavior for those OS is therefore\n                 // the same as for Redox.\n-                drop(times);\n+                let _ = times;\n                 Err(io::const_io_error!(\n                     io::ErrorKind::Unsupported,\n                     \"setting file times not supported\","}, {"sha": "b65e2572cc5e4b656f27bb623a1774f73e8d64b1", "filename": "library/std/src/thread/tests.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d36e390d8176babedcf326581959958d447170cd/library%2Fstd%2Fsrc%2Fthread%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d36e390d8176babedcf326581959958d447170cd/library%2Fstd%2Fsrc%2Fthread%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fthread%2Ftests.rs?ref=d36e390d8176babedcf326581959958d447170cd", "patch": "@@ -375,7 +375,9 @@ fn test_scoped_threads_nll() {\n     // this is mostly a *compilation test* for this exact function:\n     fn foo(x: &u8) {\n         thread::scope(|s| {\n-            s.spawn(|| drop(x));\n+            s.spawn(|| match x {\n+                _ => (),\n+            });\n         });\n     }\n     // let's also run it for good measure"}]}