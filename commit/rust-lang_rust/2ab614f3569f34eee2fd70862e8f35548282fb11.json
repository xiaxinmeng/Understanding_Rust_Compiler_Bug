{"sha": "2ab614f3569f34eee2fd70862e8f35548282fb11", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhYjYxNGYzNTY5ZjM0ZWVlMmZkNzA4NjJlOGYzNTU0ODI4MmZiMTE=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-10-26T21:05:21Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-10-26T22:00:55Z"}, "message": "Document labeled break and continue in the reference manual\n\nr=brson", "tree": {"sha": "69958d380d80511cff21e1f4ddae574dc43cf6a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69958d380d80511cff21e1f4ddae574dc43cf6a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ab614f3569f34eee2fd70862e8f35548282fb11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ab614f3569f34eee2fd70862e8f35548282fb11", "html_url": "https://github.com/rust-lang/rust/commit/2ab614f3569f34eee2fd70862e8f35548282fb11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ab614f3569f34eee2fd70862e8f35548282fb11/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7ec183b34805ba6af0c49581639b16dbd33e47a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7ec183b34805ba6af0c49581639b16dbd33e47a", "html_url": "https://github.com/rust-lang/rust/commit/c7ec183b34805ba6af0c49581639b16dbd33e47a"}], "stats": {"total": 44, "additions": 30, "deletions": 14}, "files": [{"sha": "18beb742330e1598480363ef4a2ef0b8fb4944d4", "filename": "doc/rust.md", "status": "modified", "additions": 30, "deletions": 14, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/2ab614f3569f34eee2fd70862e8f35548282fb11/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/2ab614f3569f34eee2fd70862e8f35548282fb11/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=2ab614f3569f34eee2fd70862e8f35548282fb11", "patch": "@@ -1951,32 +1951,48 @@ while i < 10 {\n \n ### Infinite loops\n \n-A `loop` expression denotes an infinite loop:\n+The keyword `loop` in Rust appears both in _loop expressions_ and in _continue expressions_.\n+A loop expression denotes an infinite loop;\n+see [Continue expressions](#continue-expressions) for continue expressions.\n \n ~~~~~~~~{.ebnf .gram}\n-loop_expr : \"loop\" '{' block '}';\n+loop_expr : \"loop\" [ ident ':' ] '{' block '}';\n ~~~~~~~~\n \n+A `loop` expression may optionally have a _label_.\n+If a label is present,\n+then labeled `break` and `loop` expressions nested within this loop may exit out of this loop or return control to its head.\n+See [Break expressions](#break-expressions).\n+\n ### Break expressions\n \n ~~~~~~~~{.ebnf .gram}\n-break_expr : \"break\" ;\n+break_expr : \"break\" [ ident ];\n ~~~~~~~~\n \n-Executing a `break` expression immediately terminates the innermost loop\n-enclosing it. It is only permitted in the body of a loop.\n+A `break` expression has an optional `label`.\n+If the label is absent, then executing a `break` expression immediately terminates the innermost loop enclosing it.\n+It is only permitted in the body of a loop.\n+If the label is present, then `break foo` terminates the loop with label `foo`,\n+which need not be the innermost label enclosing the `break` expression,\n+but must enclose it.\n \n-### Loop expressions\n+### Continue expressions\n \n ~~~~~~~~{.ebnf .gram}\n-loop_expr : \"loop\" ;\n-~~~~~~~~\n-\n-Evaluating a `loop` expression immediately terminates the current iteration of\n-the innermost loop enclosing it, returning control to the loop *head*. In the\n-case of a `while` loop, the head is the conditional expression controlling the\n-loop. In the case of a `for` loop, the head is the call-expression controlling\n-the loop.\n+continue_expr : \"loop\" [ ident ];\n+~~~~~~~~\n+\n+A continue expression, written `loop`, also has an optional `label`.\n+If the label is absent,\n+then executing a `loop` expression immediately terminates the current iteration of the innermost loop enclosing it,\n+returning control to the loop *head*.\n+In the case of a `while` loop,\n+the head is the conditional expression controlling the loop.\n+In the case of a `for` loop, the head is the call-expression controlling the loop.\n+If the label is present, then `loop foo` returns control to the head of the loop with label `foo`,\n+which need not be the innermost label enclosing the `break` expression,\n+but must enclose it.\n \n A `loop` expression is only permitted in the body of a loop.\n "}]}