{"sha": "f06a29f6e1fed49c0e817e669b77f3110ef84d6c", "node_id": "C_kwDOAAsO6NoAKGYwNmEyOWY2ZTFmZWQ0OWMwZTgxN2U2NjliNzdmMzExMGVmODRkNmM", "commit": {"author": {"name": "Noritada Kobayashi", "email": "noritada.kobayashi@gmail.com", "date": "2022-12-11T14:49:28Z"}, "committer": {"name": "Noritada Kobayashi", "email": "noritada.kobayashi@gmail.com", "date": "2022-12-11T14:49:28Z"}, "message": "Implement `xtask publish-release-notes` to publish release notes on GitHub Releases", "tree": {"sha": "b90973200697d3d287299f3ca10ee79a094389a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b90973200697d3d287299f3ca10ee79a094389a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f06a29f6e1fed49c0e817e669b77f3110ef84d6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f06a29f6e1fed49c0e817e669b77f3110ef84d6c", "html_url": "https://github.com/rust-lang/rust/commit/f06a29f6e1fed49c0e817e669b77f3110ef84d6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f06a29f6e1fed49c0e817e669b77f3110ef84d6c/comments", "author": {"login": "noritada", "id": 20850, "node_id": "MDQ6VXNlcjIwODUw", "avatar_url": "https://avatars.githubusercontent.com/u/20850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noritada", "html_url": "https://github.com/noritada", "followers_url": "https://api.github.com/users/noritada/followers", "following_url": "https://api.github.com/users/noritada/following{/other_user}", "gists_url": "https://api.github.com/users/noritada/gists{/gist_id}", "starred_url": "https://api.github.com/users/noritada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noritada/subscriptions", "organizations_url": "https://api.github.com/users/noritada/orgs", "repos_url": "https://api.github.com/users/noritada/repos", "events_url": "https://api.github.com/users/noritada/events{/privacy}", "received_events_url": "https://api.github.com/users/noritada/received_events", "type": "User", "site_admin": false}, "committer": {"login": "noritada", "id": 20850, "node_id": "MDQ6VXNlcjIwODUw", "avatar_url": "https://avatars.githubusercontent.com/u/20850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noritada", "html_url": "https://github.com/noritada", "followers_url": "https://api.github.com/users/noritada/followers", "following_url": "https://api.github.com/users/noritada/following{/other_user}", "gists_url": "https://api.github.com/users/noritada/gists{/gist_id}", "starred_url": "https://api.github.com/users/noritada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noritada/subscriptions", "organizations_url": "https://api.github.com/users/noritada/orgs", "repos_url": "https://api.github.com/users/noritada/repos", "events_url": "https://api.github.com/users/noritada/events{/privacy}", "received_events_url": "https://api.github.com/users/noritada/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0eb537fa31d10896046f747bd4dd4227f4842d99", "url": "https://api.github.com/repos/rust-lang/rust/commits/0eb537fa31d10896046f747bd4dd4227f4842d99", "html_url": "https://github.com/rust-lang/rust/commit/0eb537fa31d10896046f747bd4dd4227f4842d99"}], "stats": {"total": 97, "additions": 97, "deletions": 0}, "files": [{"sha": "21004797014e8645ce89c95a1cfbf01d4ed40fdc", "filename": "xtask/src/flags.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f06a29f6e1fed49c0e817e669b77f3110ef84d6c/xtask%2Fsrc%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f06a29f6e1fed49c0e817e669b77f3110ef84d6c/xtask%2Fsrc%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fflags.rs?ref=f06a29f6e1fed49c0e817e669b77f3110ef84d6c", "patch": "@@ -34,6 +34,13 @@ xflags::xflags! {\n         cmd dist {\n             optional --client-patch-version version: String\n         }\n+        /// Read a changelog AsciiDoc file and update the GitHub Releases entry in Markdown.\n+        cmd publish-release-notes {\n+            /// Only run conversion and show the result.\n+            optional --dry-run\n+            /// Target changelog file.\n+            required changelog: String\n+        }\n         cmd metrics {\n             optional --dry-run\n         }\n@@ -59,6 +66,7 @@ pub enum XtaskCmd {\n     Release(Release),\n     Promote(Promote),\n     Dist(Dist),\n+    PublishReleaseNotes(PublishReleaseNotes),\n     Metrics(Metrics),\n     Bb(Bb),\n }\n@@ -90,6 +98,13 @@ pub struct Dist {\n     pub client_patch_version: Option<String>,\n }\n \n+#[derive(Debug)]\n+pub struct PublishReleaseNotes {\n+    pub changelog: String,\n+\n+    pub dry_run: bool,\n+}\n+\n #[derive(Debug)]\n pub struct Metrics {\n     pub dry_run: bool,"}, {"sha": "6a45033ada3ba7e92ce7c6339111f3f188b3557f", "filename": "xtask/src/main.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f06a29f6e1fed49c0e817e669b77f3110ef84d6c/xtask%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f06a29f6e1fed49c0e817e669b77f3110ef84d6c/xtask%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fmain.rs?ref=f06a29f6e1fed49c0e817e669b77f3110ef84d6c", "patch": "@@ -15,6 +15,7 @@ mod flags;\n mod install;\n mod release;\n mod dist;\n+mod publish;\n mod metrics;\n \n use anyhow::bail;\n@@ -36,6 +37,7 @@ fn main() -> anyhow::Result<()> {\n         flags::XtaskCmd::Release(cmd) => cmd.run(sh),\n         flags::XtaskCmd::Promote(cmd) => cmd.run(sh),\n         flags::XtaskCmd::Dist(cmd) => cmd.run(sh),\n+        flags::XtaskCmd::PublishReleaseNotes(cmd) => cmd.run(sh),\n         flags::XtaskCmd::Metrics(cmd) => cmd.run(sh),\n         flags::XtaskCmd::Bb(cmd) => {\n             {"}, {"sha": "80453342070d332d098acef78ed1f15c5c4a63c5", "filename": "xtask/src/publish.rs", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/f06a29f6e1fed49c0e817e669b77f3110ef84d6c/xtask%2Fsrc%2Fpublish.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f06a29f6e1fed49c0e817e669b77f3110ef84d6c/xtask%2Fsrc%2Fpublish.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fpublish.rs?ref=f06a29f6e1fed49c0e817e669b77f3110ef84d6c", "patch": "@@ -0,0 +1,80 @@\n+mod notes;\n+\n+use crate::flags;\n+use anyhow::{anyhow, bail, Result};\n+use std::env;\n+use xshell::{cmd, Shell};\n+\n+impl flags::PublishReleaseNotes {\n+    pub(crate) fn run(self, sh: &Shell) -> Result<()> {\n+        let asciidoc = sh.read_file(&self.changelog)?;\n+        let markdown = notes::convert_asciidoc_to_markdown(std::io::Cursor::new(&asciidoc))?;\n+        let tag_name = extract_tag_name(&self.changelog)?;\n+        if self.dry_run {\n+            println!(\"{}\", markdown);\n+        } else {\n+            update_release(sh, &tag_name, &markdown)?;\n+        }\n+        Ok(())\n+    }\n+}\n+\n+fn extract_tag_name<P: AsRef<std::path::Path>>(path: P) -> Result<String> {\n+    let file_name = path\n+        .as_ref()\n+        .file_name()\n+        .ok_or_else(|| anyhow!(\"file name is not specified as `changelog`\"))?\n+        .to_string_lossy();\n+\n+    let mut chars = file_name.chars();\n+    if file_name.len() >= 10\n+        && chars.next().unwrap().is_ascii_digit()\n+        && chars.next().unwrap().is_ascii_digit()\n+        && chars.next().unwrap().is_ascii_digit()\n+        && chars.next().unwrap().is_ascii_digit()\n+        && chars.next().unwrap() == '-'\n+        && chars.next().unwrap().is_ascii_digit()\n+        && chars.next().unwrap().is_ascii_digit()\n+        && chars.next().unwrap() == '-'\n+        && chars.next().unwrap().is_ascii_digit()\n+        && chars.next().unwrap().is_ascii_digit()\n+    {\n+        Ok(file_name[0..10].to_owned())\n+    } else {\n+        bail!(\"extraction of date from the file name failed\")\n+    }\n+}\n+\n+fn update_release(sh: &Shell, tag_name: &str, release_notes: &str) -> Result<()> {\n+    let token = match env::var(\"GITHUB_TOKEN\") {\n+        Ok(token) => token,\n+        Err(_) => bail!(\"Please obtain a personal access token from https://github.com/settings/tokens and set the `GITHUB_TOKEN` environment variable.\"),\n+    };\n+    let accept = \"Accept: application/vnd.github+json\";\n+    let authorization = format!(\"Authorization: Bearer {}\", token);\n+    let api_version = \"X-GitHub-Api-Version: 2022-11-28\";\n+    let release_url = \"https://api.github.com/repos/rust-lang/rust-analyzer/releases\";\n+\n+    let release_json = cmd!(\n+        sh,\n+        \"curl -s -H {accept} -H {authorization} -H {api_version} {release_url}/tags/{tag_name}\"\n+    )\n+    .read()?;\n+    let release_id = cmd!(sh, \"jq .id\").stdin(release_json).read()?;\n+\n+    let mut patch = String::new();\n+    write_json::object(&mut patch)\n+        .string(\"tag_name\", &tag_name)\n+        .string(\"target_commitish\", \"master\")\n+        .string(\"name\", &tag_name)\n+        .string(\"body\", &release_notes)\n+        .bool(\"draft\", false)\n+        .bool(\"prerelease\", false);\n+    let _ = cmd!(\n+        sh,\n+        \"curl -s -X PATCH -H {accept} -H {authorization} -H {api_version} {release_url}/{release_id} -d {patch}\"\n+    )\n+    .read()?;\n+\n+    Ok(())\n+}"}]}