{"sha": "e0b1bdca5b56a104d8c221cb3bbb7eb16b5fcec4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwYjFiZGNhNWI1NmExMDRkOGMyMjFjYjNiYmI3ZWIxNmI1ZmNlYzQ=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2013-05-19T19:06:39Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2013-05-19T19:06:39Z"}, "message": "Add additional documentation in core::io.\n\nAdded docs for stdout, stderr, print, and println.", "tree": {"sha": "5442c400059945bce3a95b7ca6223fffcdb2d59d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5442c400059945bce3a95b7ca6223fffcdb2d59d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0b1bdca5b56a104d8c221cb3bbb7eb16b5fcec4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0b1bdca5b56a104d8c221cb3bbb7eb16b5fcec4", "html_url": "https://github.com/rust-lang/rust/commit/e0b1bdca5b56a104d8c221cb3bbb7eb16b5fcec4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0b1bdca5b56a104d8c221cb3bbb7eb16b5fcec4/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f671698e6ac2666293298eb5234237a8033683f", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f671698e6ac2666293298eb5234237a8033683f", "html_url": "https://github.com/rust-lang/rust/commit/9f671698e6ac2666293298eb5234237a8033683f"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "820d810a36f8c78896814bee2b8614fcebd247c9", "filename": "src/libcore/io.rs", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/e0b1bdca5b56a104d8c221cb3bbb7eb16b5fcec4/src%2Flibcore%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0b1bdca5b56a104d8c221cb3bbb7eb16b5fcec4/src%2Flibcore%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fio.rs?ref=e0b1bdca5b56a104d8c221cb3bbb7eb16b5fcec4", "patch": "@@ -1561,13 +1561,55 @@ pub fn buffered_file_writer(path: &Path) -> Result<@Writer, ~str> {\n // FIXME (#2004) it would be great if this could be a const\n // FIXME (#2004) why are these different from the way stdin() is\n // implemented?\n+\n+\n+/**\n+* Gives a `Writer` which allows you to write to the standard output.\n+*\n+* # Examples\n+* ~~~\n+* let stdout = core::io::stdout();\n+* stdout.write_str(\"hello\\n\");\n+* ~~~\n+*/\n pub fn stdout() -> @Writer { fd_writer(libc::STDOUT_FILENO as c_int, false) }\n+\n+/**\n+* Gives a `Writer` which allows you to write to standard error.\n+*\n+* # Examples\n+* ~~~\n+* let stderr = core::io::stderr();\n+* stderr.write_str(\"hello\\n\");\n+* ~~~\n+*/\n pub fn stderr() -> @Writer { fd_writer(libc::STDERR_FILENO as c_int, false) }\n \n+/**\n+* Prints a string to standard output.\n+* \n+* This string will not have an implicit newline at the end. If you want\n+* an implicit newline, please see `println`.\n+*\n+* # Examples\n+* ~~~\n+* core::io::print(\"hello\");\n+* ~~~\n+*/\n pub fn print(s: &str) {\n     stdout().write_str(s);\n }\n \n+/**\n+* Prints a string to standard output, followed by a newline.\n+* \n+* If you do not want an implicit newline, please see `print`.\n+*\n+* # Examples\n+* ~~~\n+* core::io::println(\"hello\");\n+* ~~~\n+*/\n pub fn println(s: &str) {\n     stdout().write_line(s);\n }"}]}