{"sha": "7969056f6fec0e1ead7f90461e1971ca353dc145", "node_id": "C_kwDOAAsO6NoAKDc5NjkwNTZmNmZlYzBlMWVhZDdmOTA0NjFlMTk3MWNhMzUzZGMxNDU", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-06-10T01:18:06Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-06-14T03:06:44Z"}, "message": "Rename the `ConstS::val` field as `kind`.\n\nAnd likewise for the `Const::val` method.\n\nBecause its type is called `ConstKind`. Also `val` is a confusing name\nbecause `ConstKind` is an enum with seven variants, one of which is\ncalled `Value`. Also, this gives consistency with `TyS` and `PredicateS`\nwhich have `kind` fields.\n\nThe commit also renames a few `Const` variables from `val` to `c`, to\navoid confusion with the `ConstKind::Value` variant.", "tree": {"sha": "10e92fd8b35d780e6f6af63e9e19933ca732f779", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10e92fd8b35d780e6f6af63e9e19933ca732f779"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7969056f6fec0e1ead7f90461e1971ca353dc145", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7969056f6fec0e1ead7f90461e1971ca353dc145", "html_url": "https://github.com/rust-lang/rust/commit/7969056f6fec0e1ead7f90461e1971ca353dc145", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7969056f6fec0e1ead7f90461e1971ca353dc145/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d02499794373b25af281e69a52a7a0608f7b3bfd", "url": "https://api.github.com/repos/rust-lang/rust/commits/d02499794373b25af281e69a52a7a0608f7b3bfd", "html_url": "https://github.com/rust-lang/rust/commit/d02499794373b25af281e69a52a7a0608f7b3bfd"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "ed47490e230cee6e7b78fbcf3aa35d9274e5b365", "filename": "clippy_lints/src/large_const_arrays.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7969056f6fec0e1ead7f90461e1971ca353dc145/clippy_lints%2Fsrc%2Flarge_const_arrays.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7969056f6fec0e1ead7f90461e1971ca353dc145/clippy_lints%2Fsrc%2Flarge_const_arrays.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flarge_const_arrays.rs?ref=7969056f6fec0e1ead7f90461e1971ca353dc145", "patch": "@@ -53,7 +53,7 @@ impl<'tcx> LateLintPass<'tcx> for LargeConstArrays {\n             if let ItemKind::Const(hir_ty, _) = &item.kind;\n             let ty = hir_ty_to_ty(cx.tcx, hir_ty);\n             if let ty::Array(element_type, cst) = ty.kind();\n-            if let ConstKind::Value(ConstValue::Scalar(element_count)) = cst.val();\n+            if let ConstKind::Value(ConstValue::Scalar(element_count)) = cst.kind();\n             if let Ok(element_count) = element_count.to_machine_usize(&cx.tcx);\n             if let Ok(element_size) = cx.layout_of(*element_type).map(|l| l.size.bytes());\n             if self.maximum_allowed_size < element_count * element_size;"}, {"sha": "4ca69465fad4123ee5bba823e2f1f8e645758801", "filename": "clippy_lints/src/large_stack_arrays.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7969056f6fec0e1ead7f90461e1971ca353dc145/clippy_lints%2Fsrc%2Flarge_stack_arrays.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7969056f6fec0e1ead7f90461e1971ca353dc145/clippy_lints%2Fsrc%2Flarge_stack_arrays.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flarge_stack_arrays.rs?ref=7969056f6fec0e1ead7f90461e1971ca353dc145", "patch": "@@ -43,7 +43,7 @@ impl<'tcx> LateLintPass<'tcx> for LargeStackArrays {\n         if_chain! {\n             if let ExprKind::Repeat(_, _) = expr.kind;\n             if let ty::Array(element_type, cst) = cx.typeck_results().expr_ty(expr).kind();\n-            if let ConstKind::Value(ConstValue::Scalar(element_count)) = cst.val();\n+            if let ConstKind::Value(ConstValue::Scalar(element_count)) = cst.kind();\n             if let Ok(element_count) = element_count.to_machine_usize(&cx.tcx);\n             if let Ok(element_size) = cx.layout_of(*element_type).map(|l| l.size.bytes());\n             if self.maximum_allowed_size < element_count * element_size;"}, {"sha": "159c5d53d029261fdd159db073356d365021d4c3", "filename": "clippy_utils/src/consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7969056f6fec0e1ead7f90461e1971ca353dc145/clippy_utils%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7969056f6fec0e1ead7f90461e1971ca353dc145/clippy_utils%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fconsts.rs?ref=7969056f6fec0e1ead7f90461e1971ca353dc145", "patch": "@@ -582,7 +582,7 @@ impl<'a, 'tcx> ConstEvalLateContext<'a, 'tcx> {\n \n pub fn miri_to_const(result: ty::Const<'_>) -> Option<Constant> {\n     use rustc_middle::mir::interpret::ConstValue;\n-    match result.val() {\n+    match result.kind() {\n         ty::ConstKind::Value(ConstValue::Scalar(Scalar::Int(int))) => {\n             match result.ty().kind() {\n                 ty::Bool => Some(Constant::Bool(int == ScalarInt::TRUE)),"}]}