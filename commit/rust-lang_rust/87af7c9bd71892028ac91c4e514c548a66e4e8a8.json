{"sha": "87af7c9bd71892028ac91c4e514c548a66e4e8a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3YWY3YzliZDcxODkyMDI4YWM5MWM0ZTUxNGM1NDhhNjZlNGU4YTg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-05-05T08:24:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-05T08:24:27Z"}, "message": "Merge #4313\n\n4313: refactor: use attrsOwner directly in is_cfg_enabled r=edwin0cheng a=bnjjj\n\nAs promised @edwin0cheng here is the PR to resolve the comment [here](https://github.com/rust-analyzer/rust-analyzer/pull/4285#discussion_r419200375).\n\nCo-authored-by: Benjamin Coenen <5719034+bnjjj@users.noreply.github.com>", "tree": {"sha": "433165dceea40f9b530a343dd4cf3725ec6406c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/433165dceea40f9b530a343dd4cf3725ec6406c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87af7c9bd71892028ac91c4e514c548a66e4e8a8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJesSK7CRBK7hj4Ov3rIwAAdHIIAJg02tHhh6rFPcofC9YkusP1\nzMPj63lO6Z/eVGPekX7FL70sn3SnrcJgJZ+Cq5jevX+qMxxnZKXQomBpjjeKlTO0\nYsK+PEsmB8HrzfyN0HrFVeM7FZ30HoFmsmPllpt3hcmsdz+haj5aUW5RZuz4BD/Y\nHb25NxmVy7aLPww7kREHPH8LLYruDc3GTowGd408zfTLQ10Alop2iwPeJhnB6xDI\nKwGoa0hBdNRxbmPdPnHibudiuKeN1+t7Wb8BNCPmzjqk4actjxYVjt804a92KrbL\nxQZlRGiTr1PGLBb36jEfOVT/J+LV+jCiJB/kQJjIXV+87rsox/xrjqTOs61vYS0=\n=0tld\n-----END PGP SIGNATURE-----\n", "payload": "tree 433165dceea40f9b530a343dd4cf3725ec6406c5\nparent 15de338703fd9c789c4cf8041a59d8730f12bc78\nparent 831bb1cf91d69e7e325ecbdab11e6fc80bcae4a4\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1588667067 +0000\ncommitter GitHub <noreply@github.com> 1588667067 +0000\n\nMerge #4313\n\n4313: refactor: use attrsOwner directly in is_cfg_enabled r=edwin0cheng a=bnjjj\n\nAs promised @edwin0cheng here is the PR to resolve the comment [here](https://github.com/rust-analyzer/rust-analyzer/pull/4285#discussion_r419200375).\n\nCo-authored-by: Benjamin Coenen <5719034+bnjjj@users.noreply.github.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87af7c9bd71892028ac91c4e514c548a66e4e8a8", "html_url": "https://github.com/rust-lang/rust/commit/87af7c9bd71892028ac91c4e514c548a66e4e8a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87af7c9bd71892028ac91c4e514c548a66e4e8a8/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15de338703fd9c789c4cf8041a59d8730f12bc78", "url": "https://api.github.com/repos/rust-lang/rust/commits/15de338703fd9c789c4cf8041a59d8730f12bc78", "html_url": "https://github.com/rust-lang/rust/commit/15de338703fd9c789c4cf8041a59d8730f12bc78"}, {"sha": "831bb1cf91d69e7e325ecbdab11e6fc80bcae4a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/831bb1cf91d69e7e325ecbdab11e6fc80bcae4a4", "html_url": "https://github.com/rust-lang/rust/commit/831bb1cf91d69e7e325ecbdab11e6fc80bcae4a4"}], "stats": {"total": 37, "additions": 15, "deletions": 22}, "files": [{"sha": "2bc34d449f2fd8b9404e9b59762d3cbe8124f521", "filename": "crates/ra_hir_def/src/adt.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/87af7c9bd71892028ac91c4e514c548a66e4e8a8/crates%2Fra_hir_def%2Fsrc%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87af7c9bd71892028ac91c4e514c548a66e4e8a8/crates%2Fra_hir_def%2Fsrc%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fadt.rs?ref=87af7c9bd71892028ac91c4e514c548a66e4e8a8", "patch": "@@ -118,11 +118,12 @@ fn lower_enum(\n     module_id: ModuleId,\n ) {\n     let expander = CfgExpander::new(db, ast.file_id, module_id.krate);\n-    let variants =\n-        ast.value.variant_list().into_iter().flat_map(|it| it.variants()).filter(|var| {\n-            let attrs = expander.parse_attrs(var);\n-            expander.is_cfg_enabled(&attrs)\n-        });\n+    let variants = ast\n+        .value\n+        .variant_list()\n+        .into_iter()\n+        .flat_map(|it| it.variants())\n+        .filter(|var| expander.is_cfg_enabled(var));\n     for var in variants {\n         trace.alloc(\n             || var.clone(),\n@@ -215,8 +216,7 @@ fn lower_struct(\n     match &ast.value {\n         ast::StructKind::Tuple(fl) => {\n             for (i, fd) in fl.fields().enumerate() {\n-                let attrs = expander.parse_attrs(&fd);\n-                if !expander.is_cfg_enabled(&attrs) {\n+                if !expander.is_cfg_enabled(&fd) {\n                     continue;\n                 }\n \n@@ -233,8 +233,7 @@ fn lower_struct(\n         }\n         ast::StructKind::Record(fl) => {\n             for fd in fl.fields() {\n-                let attrs = expander.parse_attrs(&fd);\n-                if !expander.is_cfg_enabled(&attrs) {\n+                if !expander.is_cfg_enabled(&fd) {\n                     continue;\n                 }\n "}, {"sha": "f5a7305dc0905082ad22965377033d8d3c7a97f4", "filename": "crates/ra_hir_def/src/body.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/87af7c9bd71892028ac91c4e514c548a66e4e8a8/crates%2Fra_hir_def%2Fsrc%2Fbody.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87af7c9bd71892028ac91c4e514c548a66e4e8a8/crates%2Fra_hir_def%2Fsrc%2Fbody.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fbody.rs?ref=87af7c9bd71892028ac91c4e514c548a66e4e8a8", "patch": "@@ -60,7 +60,8 @@ impl CfgExpander {\n         Attrs::new(owner, &self.hygiene)\n     }\n \n-    pub(crate) fn is_cfg_enabled(&self, attrs: &Attrs) -> bool {\n+    pub(crate) fn is_cfg_enabled(&self, owner: &dyn ast::AttrsOwner) -> bool {\n+        let attrs = self.parse_attrs(owner);\n         attrs.is_cfg_enabled(&self.cfg_options)\n     }\n }\n@@ -141,12 +142,8 @@ impl Expander {\n         InFile { file_id: self.current_file_id, value }\n     }\n \n-    pub(crate) fn parse_attrs(&self, owner: &dyn ast::AttrsOwner) -> Attrs {\n-        self.cfg_expander.parse_attrs(owner)\n-    }\n-\n-    pub(crate) fn is_cfg_enabled(&self, attrs: &Attrs) -> bool {\n-        self.cfg_expander.is_cfg_enabled(attrs)\n+    pub(crate) fn is_cfg_enabled(&self, owner: &dyn ast::AttrsOwner) -> bool {\n+        self.cfg_expander.is_cfg_enabled(owner)\n     }\n \n     fn parse_path(&mut self, path: ast::Path) -> Option<Path> {"}, {"sha": "8f5fa1b55114a82bbcdeaa337a1d293083a53332", "filename": "crates/ra_hir_def/src/body/lower.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/87af7c9bd71892028ac91c4e514c548a66e4e8a8/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87af7c9bd71892028ac91c4e514c548a66e4e8a8/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs?ref=87af7c9bd71892028ac91c4e514c548a66e4e8a8", "patch": "@@ -162,8 +162,7 @@ impl ExprCollector<'_> {\n \n     fn collect_expr(&mut self, expr: ast::Expr) -> ExprId {\n         let syntax_ptr = AstPtr::new(&expr);\n-        let attrs = self.expander.parse_attrs(&expr);\n-        if !self.expander.is_cfg_enabled(&attrs) {\n+        if !self.expander.is_cfg_enabled(&expr) {\n             return self.missing_expr();\n         }\n         match expr {\n@@ -329,8 +328,7 @@ impl ExprCollector<'_> {\n                         .fields()\n                         .inspect(|field| field_ptrs.push(AstPtr::new(field)))\n                         .filter_map(|field| {\n-                            let attrs = self.expander.parse_attrs(&field);\n-                            if !self.expander.is_cfg_enabled(&attrs) {\n+                            if !self.expander.is_cfg_enabled(&field) {\n                                 return None;\n                             }\n                             let name = field.field_name()?.as_name();"}, {"sha": "2dbae04d303cfea3f683062f85a49c941fe3f60d", "filename": "crates/ra_hir_def/src/data.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/87af7c9bd71892028ac91c4e514c548a66e4e8a8/crates%2Fra_hir_def%2Fsrc%2Fdata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87af7c9bd71892028ac91c4e514c548a66e4e8a8/crates%2Fra_hir_def%2Fsrc%2Fdata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fdata.rs?ref=87af7c9bd71892028ac91c4e514c548a66e4e8a8", "patch": "@@ -335,8 +335,7 @@ fn collect_items(\n         .filter_map(|item_node| match item_node {\n             ast::ImplItem::FnDef(it) => {\n                 let name = it.name().map_or_else(Name::missing, |it| it.as_name());\n-                let attrs = expander.parse_attrs(&it);\n-                if !expander.is_cfg_enabled(&attrs) {\n+                if !expander.is_cfg_enabled(&it) {\n                     return None;\n                 }\n                 let def = FunctionLoc { container, ast_id: AstId::new(file_id, items.ast_id(&it)) }"}]}