{"sha": "f82246f56db34b52fac8466659ad454f1610280c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4MjI0NmY1NmRiMzRiNTJmYWM4NDY2NjU5YWQ0NTRmMTYxMDI4MGM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-12-24T05:01:57Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-12-25T04:09:49Z"}, "message": "Remove rust_globals.h", "tree": {"sha": "97367523a6524c5bf7f02b371aa4eadef0b6c04b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97367523a6524c5bf7f02b371aa4eadef0b6c04b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f82246f56db34b52fac8466659ad454f1610280c", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f82246f56db34b52fac8466659ad454f1610280c", "html_url": "https://github.com/rust-lang/rust/commit/f82246f56db34b52fac8466659ad454f1610280c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f82246f56db34b52fac8466659ad454f1610280c/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32e730f122f06202eb48aefcc2cef6ee3e279a2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/32e730f122f06202eb48aefcc2cef6ee3e279a2f", "html_url": "https://github.com/rust-lang/rust/commit/32e730f122f06202eb48aefcc2cef6ee3e279a2f"}], "stats": {"total": 180, "additions": 37, "deletions": 143}, "files": [{"sha": "f14554fd65bf8d73b7093d5efec7a5c2fd041d6b", "filename": "src/rt/rust_builtin.c", "status": "modified", "additions": 31, "deletions": 19, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/f82246f56db34b52fac8466659ad454f1610280c/src%2Frt%2Frust_builtin.c", "raw_url": "https://github.com/rust-lang/rust/raw/f82246f56db34b52fac8466659ad454f1610280c/src%2Frt%2Frust_builtin.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.c?ref=f82246f56db34b52fac8466659ad454f1610280c", "patch": "@@ -10,28 +10,35 @@\n \n /* Foreign builtins. */\n \n-#include \"rust_globals.h\"\n #include \"vg/valgrind.h\"\n \n+#include <stdint.h>\n #include <time.h>\n-\n-#ifdef __APPLE__\n-    #include <TargetConditionals.h>\n-    #include <mach/mach_time.h>\n-\n-    #if (TARGET_OS_IPHONE)\n-        extern char **environ;\n-    #else\n-        #include <crt_externs.h>\n-    #endif\n-#endif\n+#include <string.h>\n+#include <assert.h>\n+#include <stdlib.h>\n \n #if !defined(__WIN32__)\n #include <sys/time.h>\n+#include <sys/types.h>\n+#include <dirent.h>\n+#include <signal.h>\n+#include <unistd.h>\n+#include <pthread.h>\n+#else\n+#include <windows.h>\n+#include <wincrypt.h>\n+#include <stdio.h>\n+#include <tchar.h>\n #endif\n \n-#ifdef __FreeBSD__\n-extern char **environ;\n+#ifdef __APPLE__\n+#include <TargetConditionals.h>\n+#include <mach/mach_time.h>\n+\n+#if !(TARGET_OS_IPHONE)\n+#include <crt_externs.h>\n+#endif\n #endif\n \n #ifdef __ANDROID__\n@@ -57,6 +64,16 @@ timegm(struct tm *tm)\n }\n #endif\n \n+#ifdef __APPLE__\n+#if (TARGET_OS_IPHONE)\n+extern char **environ;\n+#endif\n+#endif\n+\n+#if defined(__FreeBSD__) || defined(__linux__) || defined(__ANDROID__)\n+extern char **environ;\n+#endif\n+\n #if defined(__WIN32__)\n char**\n rust_env_pairs() {\n@@ -323,8 +340,6 @@ rust_mktime(rust_tm* timeptr) {\n }\n \n #ifndef _WIN32\n-#include <sys/types.h>\n-#include <dirent.h>\n \n DIR*\n rust_opendir(char *dirname) {\n@@ -419,9 +434,6 @@ rust_unset_sigprocmask() {\n \n #else\n \n-#include <signal.h>\n-#include <unistd.h>\n-\n void\n rust_unset_sigprocmask() {\n     // this can't be safely converted to rust code because the"}, {"sha": "317f8af237fa186241c20fc978d592b8427bf53b", "filename": "src/rt/rust_globals.h", "status": "removed", "additions": 0, "deletions": 120, "changes": 120, "blob_url": "https://github.com/rust-lang/rust/blob/32e730f122f06202eb48aefcc2cef6ee3e279a2f/src%2Frt%2Frust_globals.h", "raw_url": "https://github.com/rust-lang/rust/raw/32e730f122f06202eb48aefcc2cef6ee3e279a2f/src%2Frt%2Frust_globals.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_globals.h?ref=32e730f122f06202eb48aefcc2cef6ee3e279a2f", "patch": "@@ -1,120 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#ifndef RUST_GLOBALS_H\n-#define RUST_GLOBALS_H\n-\n-#if defined(__cplusplus)\n-#define INLINE inline\n-#elif defined(_MSC_VER) || defined(__GNUC__)\n-#define INLINE __inline__\n-#else\n-#define INLINE inline\n-#endif\n-\n-#if defined(__GNUC__)\n-#define ALWAYS_INLINE __attribute__((always_inline)) INLINE\n-#elif defined(_MSC_VER)\n-#define ALWAYS_INLINE __forceinline\n-#else\n-#define ALWAYS_INLINE INLINE\n-#endif\n-\n-#ifndef __STDC_LIMIT_MACROS\n-#define __STDC_LIMIT_MACROS 1\n-#endif\n-\n-#ifndef __STDC_CONSTANT_MACROS\n-#define __STDC_CONSTANT_MACROS 1\n-#endif\n-\n-#ifndef __STDC_FORMAT_MACROS\n-#define __STDC_FORMAT_MACROS 1\n-#endif\n-\n-#ifndef _GNU_SOURCE\n-#define _GNU_SOURCE 1\n-#endif\n-\n-#define ERROR 0\n-\n-#include <stdlib.h>\n-#include <stdint.h>\n-#include <inttypes.h>\n-#include <stdarg.h>\n-#include <sys/types.h>\n-#include <sys/stat.h>\n-#include <stdio.h>\n-#include <string.h>\n-#include <fcntl.h>\n-#include <math.h>\n-#include <assert.h>\n-\n-#if defined(__WIN32__)\n-// Prevent unnecessary #include's from <windows.h>\n-#ifndef WIN32_LEAN_AND_MEAN\n-#define WIN32_LEAN_AND_MEAN\n-#endif\n-// Prevent defining min and max macro\n-#ifndef NOMINMAX\n-#define NOMINMAX\n-#endif\n-#if defined(__cplusplus)\n-extern \"C\" {\n-#endif\n-#include <windows.h>\n-#include <tchar.h>\n-#include <wincrypt.h>\n-#if defined(__cplusplus)\n-}\n-#endif\n-#elif defined(__GNUC__)\n-#include <unistd.h>\n-#include <dlfcn.h>\n-#include <pthread.h>\n-#include <errno.h>\n-#include <dirent.h>\n-\n-#define GCC_VERSION (__GNUC__ * 10000 \\\n-                     + __GNUC_MINOR__ * 100 \\\n-                     + __GNUC_PATCHLEVEL__)\n-\n-#else\n-#error \"Platform not supported.\"\n-#endif\n-\n-#ifdef __i386__\n-// 'cdecl' ABI only means anything on i386\n-#ifdef __WIN32__\n-#ifndef CDECL\n-#define CDECL __cdecl\n-#endif\n-#ifndef FASTCALL\n-#endif\n-#else\n-#define CDECL __attribute__((cdecl))\n-#endif\n-#else\n-#define CDECL\n-#endif\n-\n-#define CHECKED(call)                                               \\\n-    {                                                               \\\n-    int res = (call);                                               \\\n-        if(0 != res) {                                              \\\n-            fprintf(stderr,                                         \\\n-                    #call \" failed in %s at line %d, result = %d \"  \\\n-                    \"(%s) \\n\",                                      \\\n-                    __FILE__, __LINE__, res, strerror(res));        \\\n-            abort();                                                \\\n-        }                                                           \\\n-    }\n-\n-#endif /* RUST_GLOBALS_H */"}, {"sha": "ee328e6cdb5a5f70770fcde0ad122415a2b5b6a7", "filename": "src/rt/rust_test_helpers.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f82246f56db34b52fac8466659ad454f1610280c/src%2Frt%2Frust_test_helpers.c", "raw_url": "https://github.com/rust-lang/rust/raw/f82246f56db34b52fac8466659ad454f1610280c/src%2Frt%2Frust_test_helpers.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_test_helpers.c?ref=f82246f56db34b52fac8466659ad454f1610280c", "patch": "@@ -10,7 +10,8 @@\n \n // Helper functions used only in tests\n \n-#include \"rust_globals.h\"\n+#include <stdint.h>\n+#include <assert.h>\n \n // These functions are used in the unit tests for C ABI calls.\n "}, {"sha": "945ed2f8b55f79faea4ed0262377f4ea8565410e", "filename": "src/rt/rust_upcall.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f82246f56db34b52fac8466659ad454f1610280c/src%2Frt%2Frust_upcall.c", "raw_url": "https://github.com/rust-lang/rust/raw/f82246f56db34b52fac8466659ad454f1610280c/src%2Frt%2Frust_upcall.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_upcall.c?ref=f82246f56db34b52fac8466659ad454f1610280c", "patch": "@@ -19,7 +19,7 @@\n   switch to the C stack.\n  */\n \n-#include \"rust_globals.h\"\n+#include <stdint.h>\n \n //Unwinding ABI declarations.\n typedef int _Unwind_Reason_Code;"}, {"sha": "3156d2a1fd4f01099e91aebc1811c49c12dcd5fd", "filename": "src/rt/rust_uv.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f82246f56db34b52fac8466659ad454f1610280c/src%2Frt%2Frust_uv.c", "raw_url": "https://github.com/rust-lang/rust/raw/f82246f56db34b52fac8466659ad454f1610280c/src%2Frt%2Frust_uv.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_uv.c?ref=f82246f56db34b52fac8466659ad454f1610280c", "patch": "@@ -8,6 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#include <stdlib.h>\n+#include <assert.h>\n+\n #ifdef __WIN32__\n // For alloca\n #include <malloc.h>\n@@ -20,8 +23,6 @@\n \n #include \"uv.h\"\n \n-#include \"rust_globals.h\"\n-\n void*\n rust_uv_loop_new() {\n // XXX libuv doesn't always ignore SIGPIPE even though we don't need it."}]}