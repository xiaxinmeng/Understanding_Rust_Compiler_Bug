{"sha": "6bf486711b38c1b794f2545b40fc489fc174c5ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiZjQ4NjcxMWIzOGMxYjc5NGYyNTQ1YjQwZmM0ODlmYzE3NGM1ZWY=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-02-25T13:34:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-25T13:34:00Z"}, "message": "Rollup merge of #82220 - henryboisdequin:fixes-80853, r=varkor\n\nfix the false 'defined here' messages\n\nCloses #80853.\n\nTake this code:\n\n```rust\nstruct S;\n\nfn repro_ref(thing: S) {\n    thing();\n}\n```\n\nPreviously, the error message would be this:\n\n```\nerror[E0618]: expected function, found `S`\n --> src/lib.rs:4:5\n  |\n3 | fn repro_ref(thing: S) {\n  |              ----- `S` defined here\n4 |     thing();\n  |     ^^^^^--\n  |     |\n  |     call expression requires function\n\nerror: aborting due to previous error\n```\n\nThis is incorrect as `S` is not defined in the function arguments, `thing` is defined there. With this change, the following is emitted:\n\n```\nerror[E0618]: expected function, found `S`\n  --> $DIR/80853.rs:4:5\n   |\nLL | fn repro_ref(thing: S) {\n   |              ----- is of type `S`\nLL |     thing();\n   |     ^^^^^--\n   |     |\n   |     call expression requires function\n   |\n   = note: local variable `S` is not a function\n\nerror: aborting due to previous error\n```\n\nAs you can see, this error message points out that `thing` is of type `S` and later in a note, that `S` is not a function. This change does seem like a downside for some error messages. Take this example:\n\n```\nLL | struct Empty2;\n   | -------------- is of type `Empty2`\n```\n\nAs you can see, the error message shows that the definition of `Empty2` is of type `Empty2`. Although this isn't wrong, it would be more helpful if it would say something like this (which was there previously):\n\n```\nLL | struct Empty2;\n   | -------------- `Empty2` defined here\n```\n\nIf there is a better way of doing this, where the `Empty2` example would stay the same as without this change, please inform me.\n\n**Update: This is now fixed**\n\nCC `@camelid`", "tree": {"sha": "b1bc162327d2bb217a9a372c4c4982f1fe31dcd8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1bc162327d2bb217a9a372c4c4982f1fe31dcd8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6bf486711b38c1b794f2545b40fc489fc174c5ef", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgN6dJCRBK7hj4Ov3rIwAAdHIIAKc2h4z//XqBzE0SKE+B+V+g\nagZSu5g2rebA7kGsYGYrZifL75YpL/S+cJjK62N2EzV1nfo8X/OzYxmVZrWQBVR2\nG8KeUp7U72D+fnMgaAUNX7BlJvvIka2y5mxRvD56JPlrTXJoXFBX4uos6l1SWWsI\n1dN8oUQYudgjo6UtETO0T06Wbiz6ygnj8ImbwRAZWrS1Wu1j04d7/kFFv8+5ej/R\n/xaLuW4wutfo+tBAQOJIGpDlAcK0LTfVPfpEk6AFXJRTaSH2pvPp/xVgE+VUU8X1\n8O3ib9YZZZXIjpMkW2jW1UMATTF2Bi1v/TKQgH8zC0GUWbMhKPEEjZJjKB81nlU=\n=Z2Tv\n-----END PGP SIGNATURE-----\n", "payload": "tree b1bc162327d2bb217a9a372c4c4982f1fe31dcd8\nparent 00aa3e68806e50431d51fc7f6ce66f2a4548f4cd\nparent d7cb66d389c3ef542891a26ee3c12308b407fcd6\nauthor Dylan DPC <dylan.dpc@gmail.com> 1614260040 +0100\ncommitter GitHub <noreply@github.com> 1614260040 +0100\n\nRollup merge of #82220 - henryboisdequin:fixes-80853, r=varkor\n\nfix the false 'defined here' messages\n\nCloses #80853.\n\nTake this code:\n\n```rust\nstruct S;\n\nfn repro_ref(thing: S) {\n    thing();\n}\n```\n\nPreviously, the error message would be this:\n\n```\nerror[E0618]: expected function, found `S`\n --> src/lib.rs:4:5\n  |\n3 | fn repro_ref(thing: S) {\n  |              ----- `S` defined here\n4 |     thing();\n  |     ^^^^^--\n  |     |\n  |     call expression requires function\n\nerror: aborting due to previous error\n```\n\nThis is incorrect as `S` is not defined in the function arguments, `thing` is defined there. With this change, the following is emitted:\n\n```\nerror[E0618]: expected function, found `S`\n  --> $DIR/80853.rs:4:5\n   |\nLL | fn repro_ref(thing: S) {\n   |              ----- is of type `S`\nLL |     thing();\n   |     ^^^^^--\n   |     |\n   |     call expression requires function\n   |\n   = note: local variable `S` is not a function\n\nerror: aborting due to previous error\n```\n\nAs you can see, this error message points out that `thing` is of type `S` and later in a note, that `S` is not a function. This change does seem like a downside for some error messages. Take this example:\n\n```\nLL | struct Empty2;\n   | -------------- is of type `Empty2`\n```\n\nAs you can see, the error message shows that the definition of `Empty2` is of type `Empty2`. Although this isn't wrong, it would be more helpful if it would say something like this (which was there previously):\n\n```\nLL | struct Empty2;\n   | -------------- `Empty2` defined here\n```\n\nIf there is a better way of doing this, where the `Empty2` example would stay the same as without this change, please inform me.\n\n**Update: This is now fixed**\n\nCC `@camelid`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6bf486711b38c1b794f2545b40fc489fc174c5ef", "html_url": "https://github.com/rust-lang/rust/commit/6bf486711b38c1b794f2545b40fc489fc174c5ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6bf486711b38c1b794f2545b40fc489fc174c5ef/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00aa3e68806e50431d51fc7f6ce66f2a4548f4cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/00aa3e68806e50431d51fc7f6ce66f2a4548f4cd", "html_url": "https://github.com/rust-lang/rust/commit/00aa3e68806e50431d51fc7f6ce66f2a4548f4cd"}, {"sha": "d7cb66d389c3ef542891a26ee3c12308b407fcd6", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7cb66d389c3ef542891a26ee3c12308b407fcd6", "html_url": "https://github.com/rust-lang/rust/commit/d7cb66d389c3ef542891a26ee3c12308b407fcd6"}], "stats": {"total": 76, "additions": 67, "deletions": 9}, "files": [{"sha": "ca1e79fac73e9d8fea6d9c7245fc8777070328ad", "filename": "compiler/rustc_typeck/src/check/callee.rs", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/6bf486711b38c1b794f2545b40fc489fc174c5ef/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bf486711b38c1b794f2545b40fc489fc174c5ef/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcallee.rs?ref=6bf486711b38c1b794f2545b40fc489fc174c5ef", "patch": "@@ -4,7 +4,7 @@ use crate::type_error_struct;\n \n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n-use rustc_hir::def::Res;\n+use rustc_hir::def::{Namespace, Res};\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc_infer::{infer, traits};\n@@ -374,7 +374,26 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                                     |p| format!(\"`{}` defined here returns `{}`\", p, callee_ty),\n                                 )\n                             }\n-                            _ => Some(format!(\"`{}` defined here\", callee_ty)),\n+                            _ => {\n+                                match def {\n+                                    // Emit a different diagnostic for local variables, as they are not\n+                                    // type definitions themselves, but rather variables *of* that type.\n+                                    Res::Local(hir_id) => Some(format!(\n+                                        \"`{}` has type `{}`\",\n+                                        self.tcx.hir().name(hir_id),\n+                                        callee_ty\n+                                    )),\n+                                    Res::Def(kind, def_id)\n+                                        if kind.ns() == Some(Namespace::ValueNS) =>\n+                                    {\n+                                        Some(format!(\n+                                            \"`{}` defined here\",\n+                                            self.tcx.def_path_str(def_id),\n+                                        ))\n+                                    }\n+                                    _ => Some(format!(\"`{}` defined here\", callee_ty)),\n+                                }\n+                            }\n                         };\n                         if let Some(label) = label {\n                             err.span_label(span, label);"}, {"sha": "388f907f8d2c36acbef578fe7b0ba983c596f2f1", "filename": "src/test/ui/consts/const-as-fn.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6bf486711b38c1b794f2545b40fc489fc174c5ef/src%2Ftest%2Fui%2Fconsts%2Fconst-as-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bf486711b38c1b794f2545b40fc489fc174c5ef/src%2Ftest%2Fui%2Fconsts%2Fconst-as-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-as-fn.rs?ref=6bf486711b38c1b794f2545b40fc489fc174c5ef", "patch": "@@ -0,0 +1,5 @@\n+const FOO: usize = 0;\n+\n+fn main() {\n+    FOO(); //~ ERROR expected function, found `usize`\n+}"}, {"sha": "b8dd4134b284dda2dec640000b090ad19e602247", "filename": "src/test/ui/consts/const-as-fn.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6bf486711b38c1b794f2545b40fc489fc174c5ef/src%2Ftest%2Fui%2Fconsts%2Fconst-as-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6bf486711b38c1b794f2545b40fc489fc174c5ef/src%2Ftest%2Fui%2Fconsts%2Fconst-as-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-as-fn.stderr?ref=6bf486711b38c1b794f2545b40fc489fc174c5ef", "patch": "@@ -0,0 +1,14 @@\n+error[E0618]: expected function, found `usize`\n+  --> $DIR/const-as-fn.rs:4:5\n+   |\n+LL | const FOO: usize = 0;\n+   | --------------------- `FOO` defined here\n+...\n+LL |     FOO();\n+   |     ^^^--\n+   |     |\n+   |     call expression requires function\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0618`."}, {"sha": "714c8d1e4d75ce0182cbcbaa0fa3bbe254b4054a", "filename": "src/test/ui/error-codes/E0618.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6bf486711b38c1b794f2545b40fc489fc174c5ef/src%2Ftest%2Fui%2Ferror-codes%2FE0618.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6bf486711b38c1b794f2545b40fc489fc174c5ef/src%2Ftest%2Fui%2Ferror-codes%2FE0618.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0618.stderr?ref=6bf486711b38c1b794f2545b40fc489fc174c5ef", "patch": "@@ -18,7 +18,7 @@ error[E0618]: expected function, found `i32`\n   --> $DIR/E0618.rs:9:5\n    |\n LL |     let x = 0i32;\n-   |         - `i32` defined here\n+   |         - `x` has type `i32`\n LL |     x();\n    |     ^--\n    |     |"}, {"sha": "f64b61aaeb05c942f3f5c6678e5d844c2d80ff38", "filename": "src/test/ui/issues/issue-10969.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6bf486711b38c1b794f2545b40fc489fc174c5ef/src%2Ftest%2Fui%2Fissues%2Fissue-10969.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6bf486711b38c1b794f2545b40fc489fc174c5ef/src%2Ftest%2Fui%2Fissues%2Fissue-10969.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-10969.stderr?ref=6bf486711b38c1b794f2545b40fc489fc174c5ef", "patch": "@@ -2,7 +2,7 @@ error[E0618]: expected function, found `i32`\n   --> $DIR/issue-10969.rs:2:5\n    |\n LL | fn func(i: i32) {\n-   |         - `i32` defined here\n+   |         - `i` has type `i32`\n LL |     i();\n    |     ^--\n    |     |\n@@ -12,7 +12,7 @@ error[E0618]: expected function, found `i32`\n   --> $DIR/issue-10969.rs:6:5\n    |\n LL |     let i = 0i32;\n-   |         - `i32` defined here\n+   |         - `i` has type `i32`\n LL |     i();\n    |     ^--\n    |     |"}, {"sha": "0405ce551b0ab5db73097001fb0f075851e3c8a1", "filename": "src/test/ui/issues/issue-21701.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6bf486711b38c1b794f2545b40fc489fc174c5ef/src%2Ftest%2Fui%2Fissues%2Fissue-21701.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6bf486711b38c1b794f2545b40fc489fc174c5ef/src%2Ftest%2Fui%2Fissues%2Fissue-21701.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-21701.stderr?ref=6bf486711b38c1b794f2545b40fc489fc174c5ef", "patch": "@@ -2,7 +2,7 @@ error[E0618]: expected function, found `U`\n   --> $DIR/issue-21701.rs:2:13\n    |\n LL | fn foo<U>(t: U) {\n-   |           - `U` defined here\n+   |           - `t` has type `U`\n LL |     let y = t();\n    |             ^--\n    |             |"}, {"sha": "3fff91acbc25fa3c0ec3008653543a47c083e75a", "filename": "src/test/ui/issues/issue-22468.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6bf486711b38c1b794f2545b40fc489fc174c5ef/src%2Ftest%2Fui%2Fissues%2Fissue-22468.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6bf486711b38c1b794f2545b40fc489fc174c5ef/src%2Ftest%2Fui%2Fissues%2Fissue-22468.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-22468.stderr?ref=6bf486711b38c1b794f2545b40fc489fc174c5ef", "patch": "@@ -2,7 +2,7 @@ error[E0618]: expected function, found `&str`\n   --> $DIR/issue-22468.rs:3:13\n    |\n LL |     let foo = \"bar\";\n-   |         --- `&str` defined here\n+   |         --- `foo` has type `&str`\n LL |     let x = foo(\"baz\");\n    |             ^^^-------\n    |             |"}, {"sha": "91d28a5e1e1eff70dd6b4a5a8bae5acfc7fa7ff0", "filename": "src/test/ui/issues/issue-26237.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6bf486711b38c1b794f2545b40fc489fc174c5ef/src%2Ftest%2Fui%2Fissues%2Fissue-26237.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6bf486711b38c1b794f2545b40fc489fc174c5ef/src%2Ftest%2Fui%2Fissues%2Fissue-26237.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-26237.stderr?ref=6bf486711b38c1b794f2545b40fc489fc174c5ef", "patch": "@@ -5,7 +5,7 @@ LL |         $not_a_function($some_argument)\n    |         ------------------------------- call expression requires function\n ...\n LL |     let mut value_a = 0;\n-   |         ----------- `{integer}` defined here\n+   |         ----------- `value_a` has type `{integer}`\n LL |     let mut value_b = 0;\n LL |     macro_panic!(value_a, value_b);\n    |                  ^^^^^^^"}, {"sha": "691df91268b246212e0e4a360e6ecf076e5a4eb6", "filename": "src/test/ui/parser/parse-error-correct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6bf486711b38c1b794f2545b40fc489fc174c5ef/src%2Ftest%2Fui%2Fparser%2Fparse-error-correct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6bf486711b38c1b794f2545b40fc489fc174c5ef/src%2Ftest%2Fui%2Fparser%2Fparse-error-correct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fparse-error-correct.stderr?ref=6bf486711b38c1b794f2545b40fc489fc174c5ef", "patch": "@@ -14,7 +14,7 @@ error[E0618]: expected function, found `{integer}`\n   --> $DIR/parse-error-correct.rs:7:13\n    |\n LL |     let y = 42;\n-   |         - `{integer}` defined here\n+   |         - `y` has type `{integer}`\n LL |     let x = y.;\n LL |     let x = y.();\n    |             ^---"}, {"sha": "242d0af959d40f385d2609a0450c3138c81d62cd", "filename": "src/test/ui/structs/80853.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6bf486711b38c1b794f2545b40fc489fc174c5ef/src%2Ftest%2Fui%2Fstructs%2F80853.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bf486711b38c1b794f2545b40fc489fc174c5ef/src%2Ftest%2Fui%2Fstructs%2F80853.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2F80853.rs?ref=6bf486711b38c1b794f2545b40fc489fc174c5ef", "patch": "@@ -0,0 +1,7 @@\n+struct S;\n+\n+fn repro_ref(thing: S) {\n+    thing(); //~ ERROR expected function, found `S`\n+}\n+\n+fn main() {}"}, {"sha": "8a38e32c1d0ca90bfdc21ee2230ace95fcbfb11e", "filename": "src/test/ui/structs/80853.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6bf486711b38c1b794f2545b40fc489fc174c5ef/src%2Ftest%2Fui%2Fstructs%2F80853.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6bf486711b38c1b794f2545b40fc489fc174c5ef/src%2Ftest%2Fui%2Fstructs%2F80853.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2F80853.stderr?ref=6bf486711b38c1b794f2545b40fc489fc174c5ef", "patch": "@@ -0,0 +1,13 @@\n+error[E0618]: expected function, found `S`\n+  --> $DIR/80853.rs:4:5\n+   |\n+LL | fn repro_ref(thing: S) {\n+   |              ----- `thing` has type `S`\n+LL |     thing();\n+   |     ^^^^^--\n+   |     |\n+   |     call expression requires function\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0618`."}]}