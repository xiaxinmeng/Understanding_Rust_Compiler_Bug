{"sha": "d61ceeca7c028f4abbeb31976587d2ac32198496", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2MWNlZWNhN2MwMjhmNGFiYmViMzE5NzY1ODdkMmFjMzIxOTg0OTY=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-01-17T17:33:54Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-01-26T10:59:57Z"}, "message": "Generate lineinfo for default srcloc", "tree": {"sha": "b3ff34ba27c8ab0016073ec3374018a37dc6bb74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3ff34ba27c8ab0016073ec3374018a37dc6bb74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d61ceeca7c028f4abbeb31976587d2ac32198496", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d61ceeca7c028f4abbeb31976587d2ac32198496", "html_url": "https://github.com/rust-lang/rust/commit/d61ceeca7c028f4abbeb31976587d2ac32198496", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d61ceeca7c028f4abbeb31976587d2ac32198496/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09c4569c87f813773f00d30ad3ce4df94416e56f", "url": "https://api.github.com/repos/rust-lang/rust/commits/09c4569c87f813773f00d30ad3ce4df94416e56f", "html_url": "https://github.com/rust-lang/rust/commit/09c4569c87f813773f00d30ad3ce4df94416e56f"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "5024c7eec7f7fcbf552deb888693609d8fedc2b9", "filename": "src/debuginfo.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d61ceeca7c028f4abbeb31976587d2ac32198496/src%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d61ceeca7c028f4abbeb31976587d2ac32198496/src%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdebuginfo.rs?ref=d61ceeca7c028f4abbeb31976587d2ac32198496", "patch": "@@ -337,6 +337,7 @@ pub struct FunctionDebugContext<'a, 'tcx> {\n     debug_context: &'a mut DebugContext<'tcx>,\n     entry_id: UnitEntryId,\n     symbol: usize,\n+    mir_span: Span,\n }\n \n impl<'a, 'b, 'tcx: 'b> FunctionDebugContext<'a, 'tcx> {\n@@ -373,6 +374,7 @@ impl<'a, 'b, 'tcx: 'b> FunctionDebugContext<'a, 'tcx> {\n             debug_context,\n             entry_id,\n             symbol,\n+            mir_span: mir.span,\n         }\n     }\n \n@@ -419,9 +421,7 @@ impl<'a, 'b, 'tcx: 'b> FunctionDebugContext<'a, 'tcx> {\n         ebbs.sort_by_key(|ebb| func.offsets[*ebb]); // Ensure inst offsets always increase\n         for ebb in ebbs {\n             for (offset, inst, _size) in func.inst_offsets(ebb, &encinfo) {\n-                let srcloc = func.srclocs[inst];\n-                if !srcloc.is_default() {\n-                    let span = spans[srcloc.bits() as usize];\n+                fn create_row_for_span(tcx: TyCtxt, line_program: &mut LineProgram, offset: u64, span: Span) {\n                     let loc = tcx.sess.source_map().lookup_char_pos(span.lo());\n                     let file = loc.file.name.to_string();\n                     let file = ::std::path::Path::new(&file);\n@@ -435,10 +435,18 @@ impl<'a, 'b, 'tcx: 'b> FunctionDebugContext<'a, 'tcx> {\n                     line_program.row().file = file_id;\n                     //tcx.sess\n                     //    .warn(&format!(\"srcloc {} {}:{}:{}\", offset, file, loc.line, loc.col.to_usize()));\n-                    line_program.row().address_offset = offset as u64;\n+                    line_program.row().address_offset = offset;\n                     line_program.row().line = loc.line as u64;\n                     line_program.generate_row();\n                 }\n+\n+                let srcloc = func.srclocs[inst];\n+                if !srcloc.is_default() {\n+                    let span = spans[srcloc.bits() as usize];\n+                    create_row_for_span(tcx, line_program, offset as u64, span);\n+                } else {\n+                    create_row_for_span(tcx, line_program, offset as u64, self.mir_span);\n+                }\n             }\n         }\n "}]}