{"sha": "9e618bacf2c060d19d7dfbdb04c332b81cf56839", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllNjE4YmFjZjJjMDYwZDE5ZDdkZmJkYjA0YzMzMmI4MWNmNTY4Mzk=", "commit": {"author": {"name": "Stein Somers", "email": "git@steinsomers.be", "date": "2020-11-18T17:19:38Z"}, "committer": {"name": "Stein Somers", "email": "git@steinsomers.be", "date": "2020-12-24T14:58:57Z"}, "message": "BTreeMap: make test cases more explicit on failure", "tree": {"sha": "e2a4ceada30350d89e69bd9cd4eb2429be9efcd0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2a4ceada30350d89e69bd9cd4eb2429be9efcd0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e618bacf2c060d19d7dfbdb04c332b81cf56839", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e618bacf2c060d19d7dfbdb04c332b81cf56839", "html_url": "https://github.com/rust-lang/rust/commit/9e618bacf2c060d19d7dfbdb04c332b81cf56839", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e618bacf2c060d19d7dfbdb04c332b81cf56839/comments", "author": {"login": "ssomers", "id": 10174877, "node_id": "MDQ6VXNlcjEwMTc0ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/10174877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssomers", "html_url": "https://github.com/ssomers", "followers_url": "https://api.github.com/users/ssomers/followers", "following_url": "https://api.github.com/users/ssomers/following{/other_user}", "gists_url": "https://api.github.com/users/ssomers/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssomers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssomers/subscriptions", "organizations_url": "https://api.github.com/users/ssomers/orgs", "repos_url": "https://api.github.com/users/ssomers/repos", "events_url": "https://api.github.com/users/ssomers/events{/privacy}", "received_events_url": "https://api.github.com/users/ssomers/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ssomers", "id": 10174877, "node_id": "MDQ6VXNlcjEwMTc0ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/10174877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssomers", "html_url": "https://github.com/ssomers", "followers_url": "https://api.github.com/users/ssomers/followers", "following_url": "https://api.github.com/users/ssomers/following{/other_user}", "gists_url": "https://api.github.com/users/ssomers/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssomers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssomers/subscriptions", "organizations_url": "https://api.github.com/users/ssomers/orgs", "repos_url": "https://api.github.com/users/ssomers/repos", "events_url": "https://api.github.com/users/ssomers/events{/privacy}", "received_events_url": "https://api.github.com/users/ssomers/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c34c015fe2710caf53ba7ae9d1644f9ba65a6f74", "url": "https://api.github.com/repos/rust-lang/rust/commits/c34c015fe2710caf53ba7ae9d1644f9ba65a6f74", "html_url": "https://github.com/rust-lang/rust/commit/c34c015fe2710caf53ba7ae9d1644f9ba65a6f74"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "c857d4317e495499c2b860b5f858089a6492711a", "filename": "library/alloc/src/collections/btree/map/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e618bacf2c060d19d7dfbdb04c332b81cf56839/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e618bacf2c060d19d7dfbdb04c332b81cf56839/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap%2Ftests.rs?ref=9e618bacf2c060d19d7dfbdb04c332b81cf56839", "patch": "@@ -115,7 +115,7 @@ impl<K, V> BTreeMap<K, V> {\n \n impl<'a, K: 'a, V: 'a> NodeRef<marker::Immut<'a>, K, V, marker::LeafOrInternal> {\n     fn assert_min_len(self, min_len: usize) {\n-        assert!(self.len() >= min_len, \"{} < {}\", self.len(), min_len);\n+        assert!(self.len() >= min_len, \"node len {} < {}\", self.len(), min_len);\n         if let node::ForceResult::Internal(node) = self.force() {\n             for idx in 0..=node.len() {\n                 let edge = unsafe { Handle::new_edge(node, idx) };"}, {"sha": "7fe8ff743c040546870a1da810c2fd5352346917", "filename": "library/alloc/src/collections/btree/node/tests.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9e618bacf2c060d19d7dfbdb04c332b81cf56839/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fnode%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e618bacf2c060d19d7dfbdb04c332b81cf56839/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fnode%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fnode%2Ftests.rs?ref=9e618bacf2c060d19d7dfbdb04c332b81cf56839", "patch": "@@ -30,11 +30,15 @@ impl<'a, K: 'a, V: 'a> NodeRef<marker::Immut<'a>, K, V, marker::LeafOrInternal>\n                 let depth = self.height();\n                 let indent = \"  \".repeat(depth);\n                 result += &format!(\"\\n{}\", indent);\n-                for idx in 0..leaf.len() {\n-                    if idx > 0 {\n-                        result += \", \";\n+                if leaf.len() == 0 {\n+                    result += \"(empty node)\";\n+                } else {\n+                    for idx in 0..leaf.len() {\n+                        if idx > 0 {\n+                            result += \", \";\n+                        }\n+                        result += &format!(\"{:?}\", unsafe { leaf.key_at(idx) });\n                     }\n-                    result += &format!(\"{:?}\", unsafe { leaf.key_at(idx) });\n                 }\n             }\n             navigate::Position::Internal(_) => {}"}]}