{"sha": "c2e425dd00e72f31334cdadc52a02d6b6ede9526", "node_id": "C_kwDOAAsO6NoAKGMyZTQyNWRkMDBlNzJmMzEzMzRjZGFkYzUyYTAyZDZiNmVkZTk1MjY", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-09T15:06:24Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-09T15:06:24Z"}, "message": "internal: make sure macro test expand to valid syntax", "tree": {"sha": "0683426bb4f5d7aeb69ec848ea3217da38ee1d5e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0683426bb4f5d7aeb69ec848ea3217da38ee1d5e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2e425dd00e72f31334cdadc52a02d6b6ede9526", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2e425dd00e72f31334cdadc52a02d6b6ede9526", "html_url": "https://github.com/rust-lang/rust/commit/c2e425dd00e72f31334cdadc52a02d6b6ede9526", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2e425dd00e72f31334cdadc52a02d6b6ede9526/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c41b7bbe698a504b6c66cce744c2a8c0181c9b85", "url": "https://api.github.com/repos/rust-lang/rust/commits/c41b7bbe698a504b6c66cce744c2a8c0181c9b85", "html_url": "https://github.com/rust-lang/rust/commit/c41b7bbe698a504b6c66cce744c2a8c0181c9b85"}], "stats": {"total": 58, "additions": 31, "deletions": 27}, "files": [{"sha": "d96af5c40701c37d118e1ea9c5de1ea02e991c1b", "filename": "crates/hir_def/src/macro_expansion_tests.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c2e425dd00e72f31334cdadc52a02d6b6ede9526/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e425dd00e72f31334cdadc52a02d6b6ede9526/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests.rs?ref=c2e425dd00e72f31334cdadc52a02d6b6ede9526", "patch": "@@ -65,6 +65,11 @@ fn check(ra_fixture: &str, mut expect: Expect) {\n             format_to!(expn_text, \"/* error: {} */\", err);\n         }\n         if let Some((parse, _token_map)) = exp.value {\n+            assert!(\n+                parse.errors().is_empty(),\n+                \"parse errors in expansion: \\n{:#?}\",\n+                parse.errors()\n+            );\n             let pp = pretty_print_macro_expansion(parse.syntax_node());\n             let indent = IndentLevel::from_node(call.syntax());\n             let pp = reindent(indent, pp);"}, {"sha": "06ef8f357261f695746b53678be278359c79dfc0", "filename": "crates/hir_def/src/macro_expansion_tests/mbe.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/c2e425dd00e72f31334cdadc52a02d6b6ede9526/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e425dd00e72f31334cdadc52a02d6b6ede9526/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs?ref=c2e425dd00e72f31334cdadc52a02d6b6ede9526", "patch": "@@ -165,17 +165,17 @@ fn test_match_group_pattern_with_multiple_defs() {\n     check(\n         r#\"\n macro_rules! m {\n-    ($($i:ident),*) => ( impl Bar { $(fn $i {})* } );\n+    ($($i:ident),*) => ( impl Bar { $(fn $i() {})* } );\n }\n m! { foo, bar }\n \"#,\n         expect![[r#\"\n macro_rules! m {\n-    ($($i:ident),*) => ( impl Bar { $(fn $i {})* } );\n+    ($($i:ident),*) => ( impl Bar { $(fn $i() {})* } );\n }\n impl Bar {\n-    fn foo {}\n-    fn bar {}\n+    fn foo() {}\n+    fn bar() {}\n }\n \"#]],\n     );\n@@ -186,15 +186,15 @@ fn test_match_group_pattern_with_multiple_statement() {\n     check(\n         r#\"\n macro_rules! m {\n-    ($($i:ident),*) => ( fn baz { $($i ();)* } );\n+    ($($i:ident),*) => ( fn baz() { $($i ();)* } );\n }\n m! { foo, bar }\n \"#,\n         expect![[r#\"\n macro_rules! m {\n-    ($($i:ident),*) => ( fn baz { $($i ();)* } );\n+    ($($i:ident),*) => ( fn baz() { $($i ();)* } );\n }\n-fn baz {\n+fn baz() {\n     foo();\n     bar();\n }\n@@ -207,15 +207,15 @@ fn test_match_group_pattern_with_multiple_statement_without_semi() {\n     check(\n         r#\"\n macro_rules! m {\n-    ($($i:ident),*) => ( fn baz { $($i() );* } );\n+    ($($i:ident),*) => ( fn baz() { $($i() );* } );\n }\n m! { foo, bar }\n \"#,\n         expect![[r#\"\n macro_rules! m {\n-    ($($i:ident),*) => ( fn baz { $($i() );* } );\n+    ($($i:ident),*) => ( fn baz() { $($i() );* } );\n }\n-fn baz {\n+fn baz() {\n     foo();\n     bar()\n }\n@@ -228,15 +228,15 @@ fn test_match_group_empty_fixed_token() {\n     check(\n         r#\"\n macro_rules! m {\n-    ($($i:ident)* #abc) => ( fn baz { $($i ();)* } );\n+    ($($i:ident)* #abc) => ( fn baz() { $($i ();)* } );\n }\n m!{#abc}\n \"#,\n         expect![[r##\"\n macro_rules! m {\n-    ($($i:ident)* #abc) => ( fn baz { $($i ();)* } );\n+    ($($i:ident)* #abc) => ( fn baz() { $($i ();)* } );\n }\n-fn baz {}\n+fn baz() {}\n \"##]],\n     )\n }\n@@ -248,7 +248,7 @@ fn test_match_group_in_subtree() {\n macro_rules! m {\n     (fn $name:ident { $($i:ident)* } ) => ( fn $name() { $($i ();)* } );\n }\n-m! {fn baz { a b } }\n+m! { fn baz { a b } }\n \"#,\n         expect![[r#\"\n macro_rules! m {"}, {"sha": "5bdabfc598baf4405dc28c269764a60a3cfdb289", "filename": "crates/hir_def/src/macro_expansion_tests/mbe/matching.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c2e425dd00e72f31334cdadc52a02d6b6ede9526/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Fmatching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e425dd00e72f31334cdadc52a02d6b6ede9526/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Fmatching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Fmatching.rs?ref=c2e425dd00e72f31334cdadc52a02d6b6ede9526", "patch": "@@ -8,18 +8,18 @@ use crate::macro_expansion_tests::check;\n fn unary_minus_is_a_literal() {\n     check(\n         r#\"\n-macro_rules! m { ($x:literal) => (literal!()); ($x:tt) => (not_a_literal!()); }\n+macro_rules! m { ($x:literal) => (literal!();); ($x:tt) => (not_a_literal!();); }\n m!(92);\n m!(-92);\n m!(-9.2);\n m!(--92);\n \"#,\n         expect![[r#\"\n-macro_rules! m { ($x:literal) => (literal!()); ($x:tt) => (not_a_literal!()); }\n-literal!()\n-literal!()\n-literal!()\n-/* error: leftover tokens */not_a_literal!()\n+macro_rules! m { ($x:literal) => (literal!();); ($x:tt) => (not_a_literal!();); }\n+literal!();\n+literal!();\n+literal!();\n+/* error: leftover tokens */not_a_literal!();\n \"#]],\n     )\n }"}, {"sha": "d434c8824492f906c0ded3bf14fe396366b00737", "filename": "crates/hir_def/src/macro_expansion_tests/mbe/meta_syntax.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c2e425dd00e72f31334cdadc52a02d6b6ede9526/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Fmeta_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e425dd00e72f31334cdadc52a02d6b6ede9526/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Fmeta_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Fmeta_syntax.rs?ref=c2e425dd00e72f31334cdadc52a02d6b6ede9526", "patch": "@@ -16,7 +16,7 @@ macro_rules! m {\n     ($($i:ident)*) => ($_);\n     ($($true:ident)*) => ($true);\n     ($($false:ident)*) => ($false);\n-    ($) => ($);\n+    ($) => (m!($););\n }\n m!($);\n \"#,\n@@ -29,9 +29,9 @@ macro_rules! m {\n     ($($i:ident)*) => ($_);\n     ($($true:ident)*) => ($true);\n     ($($false:ident)*) => ($false);\n-    ($) => ($);\n+    ($) => (m!($););\n }\n-$\n+m!($);\n \"#]],\n     )\n }"}, {"sha": "24a099cb3cc764366e0e6f11dae54979e840b680", "filename": "crates/syntax/src/lib.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c2e425dd00e72f31334cdadc52a02d6b6ede9526/crates%2Fsyntax%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e425dd00e72f31334cdadc52a02d6b6ede9526/crates%2Fsyntax%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Flib.rs?ref=c2e425dd00e72f31334cdadc52a02d6b6ede9526", "patch": "@@ -89,6 +89,9 @@ impl<T> Parse<T> {\n     pub fn syntax_node(&self) -> SyntaxNode {\n         SyntaxNode::new_root(self.green.clone())\n     }\n+    pub fn errors(&self) -> &[SyntaxError] {\n+        &*self.errors\n+    }\n }\n \n impl<T: AstNode> Parse<T> {\n@@ -100,10 +103,6 @@ impl<T: AstNode> Parse<T> {\n         T::cast(self.syntax_node()).unwrap()\n     }\n \n-    pub fn errors(&self) -> &[SyntaxError] {\n-        &*self.errors\n-    }\n-\n     pub fn ok(self) -> Result<T, Arc<Vec<SyntaxError>>> {\n         if self.errors.is_empty() {\n             Ok(self.tree())"}]}