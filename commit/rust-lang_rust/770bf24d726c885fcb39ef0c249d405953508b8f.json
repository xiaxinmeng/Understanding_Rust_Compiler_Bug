{"sha": "770bf24d726c885fcb39ef0c249d405953508b8f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3MGJmMjRkNzI2Yzg4NWZjYjM5ZWYwYzI0OWQ0MDU5NTM1MDhiOGY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-12T06:32:21Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-12T06:32:21Z"}, "message": "rustc: Use in-bounds GEPs for fetching length and data of interior vectors", "tree": {"sha": "c6013642f79bfef5dd0ea27b3a79a554da1d9a84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6013642f79bfef5dd0ea27b3a79a554da1d9a84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/770bf24d726c885fcb39ef0c249d405953508b8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/770bf24d726c885fcb39ef0c249d405953508b8f", "html_url": "https://github.com/rust-lang/rust/commit/770bf24d726c885fcb39ef0c249d405953508b8f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/770bf24d726c885fcb39ef0c249d405953508b8f/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4375329031797889e2e6f679ef484f61d2530600", "url": "https://api.github.com/repos/rust-lang/rust/commits/4375329031797889e2e6f679ef484f61d2530600", "html_url": "https://github.com/rust-lang/rust/commit/4375329031797889e2e6f679ef484f61d2530600"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "205c2c91a0eaa56ea3f40df0acd9790dad3c147e", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/770bf24d726c885fcb39ef0c249d405953508b8f/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/770bf24d726c885fcb39ef0c249d405953508b8f/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=770bf24d726c885fcb39ef0c249d405953508b8f", "patch": "@@ -2658,9 +2658,9 @@ fn get_ivec_len_and_data(&@block_ctxt bcx, ValueRef v, ty::t unit_ty) ->\n         tup(ValueRef, ValueRef, @block_ctxt) {\n     auto llunitty = type_of_or_i8(bcx, unit_ty);\n \n-    auto stack_len = bcx.build.Load(bcx.build.GEP(v,\n+    auto stack_len = bcx.build.Load(bcx.build.InBoundsGEP(v,\n         [C_int(0), C_uint(abi::ivec_elt_len)]));\n-    auto stack_elem = bcx.build.GEP(v, [C_int(0),\n+    auto stack_elem = bcx.build.InBoundsGEP(v, [C_int(0),\n                                         C_uint(abi::ivec_elt_elems)]);\n     stack_elem = bcx.build.PointerCast(stack_elem,\n                                        T_ptr(T_array(llunitty, 0u)));\n@@ -2673,7 +2673,7 @@ fn get_ivec_len_and_data(&@block_ctxt bcx, ValueRef v, ty::t unit_ty) ->\n \n     auto heap_stub = on_heap_cx.build.PointerCast(v,\n         T_ptr(T_ivec_heap(llunitty)));\n-    auto heap_ptr = on_heap_cx.build.Load(on_heap_cx.build.GEP(\n+    auto heap_ptr = on_heap_cx.build.Load(on_heap_cx.build.InBoundsGEP(\n         heap_stub, [C_int(0), C_uint(abi::ivec_heap_stub_elt_ptr)]));\n \n     // Check whether the heap pointer is null. If it is, the vector length is\n@@ -2695,9 +2695,10 @@ fn get_ivec_len_and_data(&@block_ctxt bcx, ValueRef v, ty::t unit_ty) ->\n     zero_len_cx.build.Br(next_cx.llbb);\n \n     // If we're here, then we actually have a heapified vector.\n-    auto heap_len = nonzero_len_cx.build.Load(nonzero_len_cx.build.GEP(\n-        heap_ptr, [C_int(0), C_uint(abi::ivec_heap_elt_len)]));\n-    auto heap_elem = nonzero_len_cx.build.GEP(heap_ptr,\n+    auto heap_len = nonzero_len_cx.build.Load(\n+        nonzero_len_cx.build.InBoundsGEP(heap_ptr,\n+            [C_int(0), C_uint(abi::ivec_heap_elt_len)]));\n+    auto heap_elem = nonzero_len_cx.build.InBoundsGEP(heap_ptr,\n         [C_int(0), C_uint(abi::ivec_heap_elt_elems)]);\n     nonzero_len_cx.build.Br(next_cx.llbb);\n "}]}