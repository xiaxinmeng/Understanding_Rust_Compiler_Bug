{"sha": "8084d60f5441890742b0ea7a28efc77639ee44c6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwODRkNjBmNTQ0MTg5MDc0MmIwZWE3YTI4ZWZjNzc2MzllZTQ0YzY=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-12-19T17:08:53Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-01-12T11:43:37Z"}, "message": "add test for unions and remove needles forced alloc", "tree": {"sha": "9a0a7a9a203b7bd5153e97c39fba53b698b05ad1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a0a7a9a203b7bd5153e97c39fba53b698b05ad1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8084d60f5441890742b0ea7a28efc77639ee44c6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJYd2vpAAoJEFbW7qD8Z6xGPyMP/AkKgLU05t3GgNJKlpA9aWYk\nUCXeFkUDjkQZfId98BBhOP+z0qbxLsfXUEq/PM7WHPfT6Zb8jlE1u2i10cOGANXy\nEPCIfAHG+VcuA5Yi7DCjB2yfQwyfpoczjdBhH+j9lchXCbK8+DdETglfvb+1IT3P\nmj5Vfn2A3nXm1+QmC1LO/nDA3LSUB1E0JVmfafER0FKLgdGtDFtUgmo5UL/cF0dE\n0ZydI9/9O08L8AsU49SIpbVGsvREiwBbhT2hTm217pywvzoIyCbnF/kOUCvuDZ1R\nZxv+crz94E11GS8/ipaFVOUnTE8EBsKnn7NXOk9PgWHh2yviReikdohWCQLu+a3s\nvsLh/SET79hgGqo19H4XcH41jsLSewDX3WC4uW5Jpi9KAT5iJq+c2733YTY77pls\nXgE1mFIcZz5CAnWaxdANVOmu38cCaF26OafJbZpTsVwme8TvQUzPJtFg3NlQ0n33\n6Q6qXnOLYZBdcqqgXNF9kuxVACTxJcA9WLTzfFDLsH2+nivd6P/H8ZjkThk5xVgN\nR7yRRVjiMO+mk/Cm0Hun3Hyx+WoNc+AkbsH1k1y/uoDHyQTS67OXMUsg6IMjOHtO\nTe78O88EE3TJhGJWvJ/DdNv+PLhXjbrAnO+hxlX7sQiz94vKUWQguzxsPzn/C7gO\nukY45wdstYfsrpg7GZmX\n=lDIB\n-----END PGP SIGNATURE-----", "payload": "tree 9a0a7a9a203b7bd5153e97c39fba53b698b05ad1\nparent 374232c8324c4a5516f7f00d48558fb5775bfe96\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1482167333 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1484221417 +0100\n\nadd test for unions and remove needles forced alloc"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8084d60f5441890742b0ea7a28efc77639ee44c6", "html_url": "https://github.com/rust-lang/rust/commit/8084d60f5441890742b0ea7a28efc77639ee44c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8084d60f5441890742b0ea7a28efc77639ee44c6/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "374232c8324c4a5516f7f00d48558fb5775bfe96", "url": "https://api.github.com/repos/rust-lang/rust/commits/374232c8324c4a5516f7f00d48558fb5775bfe96", "html_url": "https://github.com/rust-lang/rust/commit/374232c8324c4a5516f7f00d48558fb5775bfe96"}], "stats": {"total": 92, "additions": 88, "deletions": 4}, "files": [{"sha": "3c541608ed1d16c4a9a54f0ad0f61f300bb6d543", "filename": "src/eval_context.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8084d60f5441890742b0ea7a28efc77639ee44c6/src%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8084d60f5441890742b0ea7a28efc77639ee44c6/src%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval_context.rs?ref=8084d60f5441890742b0ea7a28efc77639ee44c6", "patch": "@@ -517,10 +517,6 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                         let operand = &operands[0];\n                         let value = self.eval_operand(operand)?;\n                         let value_ty = self.operand_ty(operand);\n-\n-                        // FIXME(solson)\n-                        let dest = self.force_allocation(dest)?;\n-\n                         self.write_value(value, dest, value_ty)?;\n                     }\n "}, {"sha": "9e05a89a4ea37a928fe0244b0d7f28801cbd342a", "filename": "tests/run-pass/union.rs", "status": "added", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/8084d60f5441890742b0ea7a28efc77639ee44c6/tests%2Frun-pass%2Funion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8084d60f5441890742b0ea7a28efc77639ee44c6/tests%2Frun-pass%2Funion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Funion.rs?ref=8084d60f5441890742b0ea7a28efc77639ee44c6", "patch": "@@ -0,0 +1,88 @@\n+#![feature(untagged_unions)]\n+#![allow(dead_code, unused_variables)]\n+\n+fn main() {\n+    a();\n+    b();\n+    c();\n+    d();\n+}\n+\n+fn a() {\n+    union U {\n+        f1: u32,\n+        f2: f32,\n+    }\n+    let mut u = U { f1: 1 };\n+    unsafe {\n+        let b1 = &mut u.f1;\n+        *b1 = 5;\n+    }\n+    assert_eq!(unsafe { u.f1 }, 5);\n+}\n+\n+fn b() {\n+    struct S {\n+        x: u32,\n+        y: u32,\n+    }\n+\n+    union U {\n+        s: S,\n+        both: u64,\n+    }\n+    let mut u = U { s: S { x: 1, y: 2 } };\n+    unsafe {\n+        let bx = &mut u.s.x;\n+        let by = &mut u.s.y;\n+        *bx = 5;\n+        *by = 10;\n+    }\n+    assert_eq!(unsafe { u.s.x }, 5);\n+    assert_eq!(unsafe { u.s.y }, 10);\n+}\n+\n+fn c() {\n+    #[repr(u32)]\n+    enum Tag { I, F }\n+\n+    #[repr(C)]\n+    union U {\n+        i: i32,\n+        f: f32,\n+    }\n+\n+    #[repr(C)]\n+    struct Value {\n+        tag: Tag,\n+        u: U,\n+    }\n+\n+    fn is_zero(v: Value) -> bool {\n+        unsafe {\n+            match v {\n+                Value { tag: Tag::I, u: U { i: 0 } } => true,\n+                Value { tag: Tag::F, u: U { f: 0.0 } } => true,\n+                _ => false,\n+            }\n+        }\n+    }\n+    assert!(is_zero(Value { tag: Tag::I, u: U { i: 0 }}));\n+    assert!(is_zero(Value { tag: Tag::F, u: U { f: 0.0 }}));\n+    assert!(!is_zero(Value { tag: Tag::I, u: U { i: 1 }}));\n+    assert!(!is_zero(Value { tag: Tag::F, u: U { f: 42.0 }}));\n+}\n+\n+fn d() {\n+    union MyUnion {\n+        f1: u32,\n+        f2: f32,\n+    }\n+    let u = MyUnion { f1: 10 };\n+    unsafe {\n+        match u {\n+            MyUnion { f1: 10 } => { }\n+            MyUnion { f2 } => { panic!(\"foo\"); }\n+        }\n+    }\n+}"}]}