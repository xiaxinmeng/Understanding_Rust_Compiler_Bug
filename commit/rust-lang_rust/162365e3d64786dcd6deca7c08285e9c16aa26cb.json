{"sha": "162365e3d64786dcd6deca7c08285e9c16aa26cb", "node_id": "C_kwDOAAsO6NoAKDE2MjM2NWUzZDY0Nzg2ZGNkNmRlY2E3YzA4Mjg1ZTljMTZhYTI2Y2I", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-28T14:36:44Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-28T14:36:44Z"}, "message": "Fix loading of dylibs not in the search path in jit mode\n\nReported in #1249", "tree": {"sha": "b1e5094e1bf9f2cd1cf0e063a5db79b676ccd040", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1e5094e1bf9f2cd1cf0e063a5db79b676ccd040"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/162365e3d64786dcd6deca7c08285e9c16aa26cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/162365e3d64786dcd6deca7c08285e9c16aa26cb", "html_url": "https://github.com/rust-lang/rust/commit/162365e3d64786dcd6deca7c08285e9c16aa26cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/162365e3d64786dcd6deca7c08285e9c16aa26cb/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e7c6463190f4424ccaee3d2b033ea7fd1bd8e0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e7c6463190f4424ccaee3d2b033ea7fd1bd8e0d", "html_url": "https://github.com/rust-lang/rust/commit/9e7c6463190f4424ccaee3d2b033ea7fd1bd8e0d"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "f6a48e3257bc246f8731b40fc9142f54c65fb585", "filename": "src/driver/jit.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/162365e3d64786dcd6deca7c08285e9c16aa26cb/src%2Fdriver%2Fjit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/162365e3d64786dcd6deca7c08285e9c16aa26cb/src%2Fdriver%2Fjit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Fjit.rs?ref=162365e3d64786dcd6deca7c08285e9c16aa26cb", "patch": "@@ -311,7 +311,11 @@ fn dep_symbol_lookup_fn(\n         .find(|(crate_type, _data)| *crate_type == rustc_session::config::CrateType::Executable)\n         .unwrap()\n         .1;\n-    for &cnum in &crate_info.used_crates {\n+    // `used_crates` is in reverse postorder in terms of dependencies. Reverse the order here to\n+    // get a postorder which ensures that all dependencies of a dylib are loaded before the dylib\n+    // itself. This helps the dynamic linker to find dylibs not in the regular dynamic library\n+    // search path.\n+    for &cnum in crate_info.used_crates.iter().rev() {\n         let src = &crate_info.used_crate_source[&cnum];\n         match data[cnum.as_usize() - 1] {\n             Linkage::NotLinked | Linkage::IncludedFromDylib => {}"}]}