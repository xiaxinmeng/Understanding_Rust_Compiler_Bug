{"sha": "8a5c5681da3695e1c2e3f23bee43a7ebfdce6161", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhNWM1NjgxZGEzNjk1ZTFjMmUzZjIzYmVlNDNhN2ViZmRjZTYxNjE=", "commit": {"author": {"name": "Nathan Nguyen", "email": "nathan.tm.nguyen@gmail.com", "date": "2021-02-18T05:44:37Z"}, "committer": {"name": "Nathan Nguyen", "email": "nathan.tm.nguyen@gmail.com", "date": "2021-02-18T14:20:07Z"}, "message": "nhwn: optimize counting digits in line numbers", "tree": {"sha": "61fd5eff1a328ad11cb0fde32fff34fe6984f5ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61fd5eff1a328ad11cb0fde32fff34fe6984f5ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a5c5681da3695e1c2e3f23bee43a7ebfdce6161", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a5c5681da3695e1c2e3f23bee43a7ebfdce6161", "html_url": "https://github.com/rust-lang/rust/commit/8a5c5681da3695e1c2e3f23bee43a7ebfdce6161", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a5c5681da3695e1c2e3f23bee43a7ebfdce6161/comments", "author": {"login": "nhwn", "id": 43092380, "node_id": "MDQ6VXNlcjQzMDkyMzgw", "avatar_url": "https://avatars.githubusercontent.com/u/43092380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhwn", "html_url": "https://github.com/nhwn", "followers_url": "https://api.github.com/users/nhwn/followers", "following_url": "https://api.github.com/users/nhwn/following{/other_user}", "gists_url": "https://api.github.com/users/nhwn/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhwn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhwn/subscriptions", "organizations_url": "https://api.github.com/users/nhwn/orgs", "repos_url": "https://api.github.com/users/nhwn/repos", "events_url": "https://api.github.com/users/nhwn/events{/privacy}", "received_events_url": "https://api.github.com/users/nhwn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nhwn", "id": 43092380, "node_id": "MDQ6VXNlcjQzMDkyMzgw", "avatar_url": "https://avatars.githubusercontent.com/u/43092380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhwn", "html_url": "https://github.com/nhwn", "followers_url": "https://api.github.com/users/nhwn/followers", "following_url": "https://api.github.com/users/nhwn/following{/other_user}", "gists_url": "https://api.github.com/users/nhwn/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhwn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhwn/subscriptions", "organizations_url": "https://api.github.com/users/nhwn/orgs", "repos_url": "https://api.github.com/users/nhwn/repos", "events_url": "https://api.github.com/users/nhwn/events{/privacy}", "received_events_url": "https://api.github.com/users/nhwn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93f6a4b9d85b7eef71e17d95c113f5834238b574", "url": "https://api.github.com/repos/rust-lang/rust/commits/93f6a4b9d85b7eef71e17d95c113f5834238b574", "html_url": "https://github.com/rust-lang/rust/commit/93f6a4b9d85b7eef71e17d95c113f5834238b574"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "42c3d5e48fe86f040e041389c932e83504234c59", "filename": "compiler/rustc_errors/src/emitter.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8a5c5681da3695e1c2e3f23bee43a7ebfdce6161/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a5c5681da3695e1c2e3f23bee43a7ebfdce6161/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Femitter.rs?ref=8a5c5681da3695e1c2e3f23bee43a7ebfdce6161", "patch": "@@ -1713,7 +1713,18 @@ impl EmitterWriter {\n         let max_line_num_len = if self.ui_testing {\n             ANONYMIZED_LINE_NUM.len()\n         } else {\n-            self.get_max_line_num(span, children).to_string().len()\n+            // Instead of using .to_string().len(), we iteratively count the\n+            // number of digits to avoid allocation. This strategy has sizable\n+            // performance gains over the old string strategy.\n+            let mut n = self.get_max_line_num(span, children);\n+            let mut num_digits = 0;\n+            loop {\n+                num_digits += 1;\n+                n /= 10;\n+                if n == 0 {\n+                    break num_digits;\n+                }\n+            }\n         };\n \n         match self.emit_message_default(span, message, code, level, max_line_num_len, false) {"}]}