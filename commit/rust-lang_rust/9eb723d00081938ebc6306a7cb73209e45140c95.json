{"sha": "9eb723d00081938ebc6306a7cb73209e45140c95", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllYjcyM2QwMDA4MTkzOGViYzYzMDZhN2NiNzMyMDllNDUxNDBjOTU=", "commit": {"author": {"name": "Daniel Brooks", "email": "db48x@db48x.net", "date": "2014-05-12T09:04:07Z"}, "committer": {"name": "Daniel Brooks", "email": "db48x@db48x.net", "date": "2014-05-14T07:48:02Z"}, "message": "define Eq,TotalEq,Ord,TotalOrd for &mut T\n\nAlso Show, which is useful in assertions. Fixes #14074", "tree": {"sha": "b1fc0342f6e1508ad00414c1496b64115da1e2e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1fc0342f6e1508ad00414c1496b64115da1e2e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9eb723d00081938ebc6306a7cb73209e45140c95", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9eb723d00081938ebc6306a7cb73209e45140c95", "html_url": "https://github.com/rust-lang/rust/commit/9eb723d00081938ebc6306a7cb73209e45140c95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9eb723d00081938ebc6306a7cb73209e45140c95/comments", "author": {"login": "db48x", "id": 228849, "node_id": "MDQ6VXNlcjIyODg0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/228849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/db48x", "html_url": "https://github.com/db48x", "followers_url": "https://api.github.com/users/db48x/followers", "following_url": "https://api.github.com/users/db48x/following{/other_user}", "gists_url": "https://api.github.com/users/db48x/gists{/gist_id}", "starred_url": "https://api.github.com/users/db48x/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/db48x/subscriptions", "organizations_url": "https://api.github.com/users/db48x/orgs", "repos_url": "https://api.github.com/users/db48x/repos", "events_url": "https://api.github.com/users/db48x/events{/privacy}", "received_events_url": "https://api.github.com/users/db48x/received_events", "type": "User", "site_admin": false}, "committer": {"login": "db48x", "id": 228849, "node_id": "MDQ6VXNlcjIyODg0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/228849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/db48x", "html_url": "https://github.com/db48x", "followers_url": "https://api.github.com/users/db48x/followers", "following_url": "https://api.github.com/users/db48x/following{/other_user}", "gists_url": "https://api.github.com/users/db48x/gists{/gist_id}", "starred_url": "https://api.github.com/users/db48x/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/db48x/subscriptions", "organizations_url": "https://api.github.com/users/db48x/orgs", "repos_url": "https://api.github.com/users/db48x/repos", "events_url": "https://api.github.com/users/db48x/events{/privacy}", "received_events_url": "https://api.github.com/users/db48x/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72fc4a5eb72b8ba96dba66400c7eecac93b0b252", "url": "https://api.github.com/repos/rust-lang/rust/commits/72fc4a5eb72b8ba96dba66400c7eecac93b0b252", "html_url": "https://github.com/rust-lang/rust/commit/72fc4a5eb72b8ba96dba66400c7eecac93b0b252"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "2e5d7c8d72043de7d7630a6b76fd1926a6fa0918", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 33, "deletions": 1, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/9eb723d00081938ebc6306a7cb73209e45140c95/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9eb723d00081938ebc6306a7cb73209e45140c95/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=9eb723d00081938ebc6306a7cb73209e45140c95", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012-2013 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -218,6 +218,29 @@ mod impls {\n     }\n     impl<'a, T: TotalEq> TotalEq for &'a T {}\n \n+    // &mut pointers\n+    impl<'a, T: Eq> Eq for &'a mut T {\n+        #[inline]\n+        fn eq(&self, other: &&'a mut T) -> bool { **self == *(*other) }\n+        #[inline]\n+        fn ne(&self, other: &&'a mut T) -> bool { **self != *(*other) }\n+    }\n+    impl<'a, T: Ord> Ord for &'a mut T {\n+        #[inline]\n+        fn lt(&self, other: &&'a mut T) -> bool { **self < **other }\n+        #[inline]\n+        fn le(&self, other: &&'a mut T) -> bool { **self <= **other }\n+        #[inline]\n+        fn ge(&self, other: &&'a mut T) -> bool { **self >= **other }\n+        #[inline]\n+        fn gt(&self, other: &&'a mut T) -> bool { **self > **other }\n+    }\n+    impl<'a, T: TotalOrd> TotalOrd for &'a mut T {\n+        #[inline]\n+        fn cmp(&self, other: &&'a mut T) -> Ordering { (**self).cmp(*other) }\n+    }\n+    impl<'a, T: TotalEq> TotalEq for &'a mut T {}\n+\n     // @ pointers\n     impl<T:Eq> Eq for @T {\n         #[inline]\n@@ -278,6 +301,15 @@ mod test {\n         assert_eq!(12u.cmp(-5), Greater);\n     }\n \n+    #[test]\n+    fn test_mut_int_totalord() {\n+        assert_eq!((&mut 5u).cmp(&10), Less);\n+        assert_eq!((&mut 10u).cmp(&5), Greater);\n+        assert_eq!((&mut 5u).cmp(&5), Equal);\n+        assert_eq!((&mut -5u).cmp(&12), Less);\n+        assert_eq!((&mut 12u).cmp(-5), Greater);\n+    }\n+\n     #[test]\n     fn test_ordering_order() {\n         assert!(Less < Equal);"}, {"sha": "3ba013df278ef04c020ceacb0e0a8836ffadce07", "filename": "src/libstd/fmt/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9eb723d00081938ebc6306a7cb73209e45140c95/src%2Flibstd%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9eb723d00081938ebc6306a7cb73209e45140c95/src%2Flibstd%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffmt%2Fmod.rs?ref=9eb723d00081938ebc6306a7cb73209e45140c95", "patch": "@@ -1124,6 +1124,9 @@ impl<T: Show> Show for Box<T> {\n impl<'a, T: Show> Show for &'a T {\n     fn fmt(&self, f: &mut Formatter) -> Result { secret_show(*self, f) }\n }\n+impl<'a, T: Show> Show for &'a mut T {\n+    fn fmt(&self, f: &mut Formatter) -> Result { secret_show(*self, f) }\n+}\n \n impl Bool for bool {\n     fn fmt(&self, f: &mut Formatter) -> Result {"}]}