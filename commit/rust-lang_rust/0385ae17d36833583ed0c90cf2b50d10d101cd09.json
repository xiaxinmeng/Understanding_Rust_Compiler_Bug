{"sha": "0385ae17d36833583ed0c90cf2b50d10d101cd09", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzODVhZTE3ZDM2ODMzNTgzZWQwYzkwY2YyYjUwZDEwZDEwMWNkMDk=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-07-10T04:02:36Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-07-10T04:02:36Z"}, "message": "tutorial: Emphasize GC in shared box section", "tree": {"sha": "17cdb35ecb7f8e4d2c0bf7c126bf0238ac4c7b3c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17cdb35ecb7f8e4d2c0bf7c126bf0238ac4c7b3c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0385ae17d36833583ed0c90cf2b50d10d101cd09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0385ae17d36833583ed0c90cf2b50d10d101cd09", "html_url": "https://github.com/rust-lang/rust/commit/0385ae17d36833583ed0c90cf2b50d10d101cd09", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0385ae17d36833583ed0c90cf2b50d10d101cd09/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95f6e525d7cdcdd591d47d9012f378caf98fa612", "url": "https://api.github.com/repos/rust-lang/rust/commits/95f6e525d7cdcdd591d47d9012f378caf98fa612", "html_url": "https://github.com/rust-lang/rust/commit/95f6e525d7cdcdd591d47d9012f378caf98fa612"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "e2ec965b64c33901bda0555441f292438fab96a6", "filename": "doc/tutorial.md", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0385ae17d36833583ed0c90cf2b50d10d101cd09/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/0385ae17d36833583ed0c90cf2b50d10d101cd09/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=0385ae17d36833583ed0c90cf2b50d10d101cd09", "patch": "@@ -1266,13 +1266,7 @@ All pointer types can be dereferenced with the `*` unary operator.\n \n ## Shared boxes\n \n-Shared boxes are pointers to heap-allocated, reference counted memory.\n-A cycle collector ensures that circular references do not result in\n-memory leaks.\n-\n-> ***Note:*** We will in the future switch to garbage collection,\n-> rather than reference counting, for shared boxes.\n-\n+Shared boxes are pointers to heap-allocated, garbage collected memory.\n Creating a shared box is done by simply applying the unary `@`\n operator to an expression. The result of the expression will be boxed,\n resulting in a box of the right type. Copying a shared box, as happens\n@@ -1287,6 +1281,10 @@ let y = x; // Copy the pointer, increase refcount\n \n Shared boxes never cross task boundaries.\n \n+> ***Note:*** shared boxes are currently reclaimed through reference\n+> counting and cycle collection, but we will switch to a tracing\n+> garbage collector.\n+\n ## Unique boxes\n \n In contrast to shared boxes, unique boxes have a single owner and thus"}]}