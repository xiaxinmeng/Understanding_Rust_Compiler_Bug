{"sha": "2727d41ddb676787729cd5632ecedcc4a2d299bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3MjdkNDFkZGI2NzY3ODc3MjljZDU2MzJlY2VkY2M0YTJkMjk5YmI=", "commit": {"author": {"name": "Andr\u00e9 Luis Leal Cardoso Junior", "email": "andrehjr@gmail.com", "date": "2018-09-25T11:53:42Z"}, "committer": {"name": "Andr\u00e9 Luis Leal Cardoso Junior", "email": "andrehjr@gmail.com", "date": "2018-09-26T12:44:13Z"}, "message": "Makes brace behavior consistent with empty bodies for traits and impls\n\nAdds a newline before the last brace on impls without a body if the first brace is also on a newline", "tree": {"sha": "3360542eb739a860b1b1122d3e59c312b613efb1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3360542eb739a860b1b1122d3e59c312b613efb1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2727d41ddb676787729cd5632ecedcc4a2d299bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2727d41ddb676787729cd5632ecedcc4a2d299bb", "html_url": "https://github.com/rust-lang/rust/commit/2727d41ddb676787729cd5632ecedcc4a2d299bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2727d41ddb676787729cd5632ecedcc4a2d299bb/comments", "author": {"login": "andrehjr", "id": 16997, "node_id": "MDQ6VXNlcjE2OTk3", "avatar_url": "https://avatars.githubusercontent.com/u/16997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrehjr", "html_url": "https://github.com/andrehjr", "followers_url": "https://api.github.com/users/andrehjr/followers", "following_url": "https://api.github.com/users/andrehjr/following{/other_user}", "gists_url": "https://api.github.com/users/andrehjr/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrehjr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrehjr/subscriptions", "organizations_url": "https://api.github.com/users/andrehjr/orgs", "repos_url": "https://api.github.com/users/andrehjr/repos", "events_url": "https://api.github.com/users/andrehjr/events{/privacy}", "received_events_url": "https://api.github.com/users/andrehjr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "andrehjr", "id": 16997, "node_id": "MDQ6VXNlcjE2OTk3", "avatar_url": "https://avatars.githubusercontent.com/u/16997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrehjr", "html_url": "https://github.com/andrehjr", "followers_url": "https://api.github.com/users/andrehjr/followers", "following_url": "https://api.github.com/users/andrehjr/following{/other_user}", "gists_url": "https://api.github.com/users/andrehjr/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrehjr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrehjr/subscriptions", "organizations_url": "https://api.github.com/users/andrehjr/orgs", "repos_url": "https://api.github.com/users/andrehjr/repos", "events_url": "https://api.github.com/users/andrehjr/events{/privacy}", "received_events_url": "https://api.github.com/users/andrehjr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac6871f376c88766f3fef2676329947857379c39", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac6871f376c88766f3fef2676329947857379c39", "html_url": "https://github.com/rust-lang/rust/commit/ac6871f376c88766f3fef2676329947857379c39"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "a7ba48776d6280a8afc3c585d6ed43a45bb13528", "filename": "src/items.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2727d41ddb676787729cd5632ecedcc4a2d299bb/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2727d41ddb676787729cd5632ecedcc4a2d299bb/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=2727d41ddb676787729cd5632ecedcc4a2d299bb", "patch": "@@ -755,11 +755,10 @@ pub fn format_impl(\n             result.push_str(&inner_indent_str);\n             result.push_str(visitor.buffer.to_string().trim());\n             result.push_str(&outer_indent_str);\n-        }\n-\n-        if result.ends_with('{') && !context.config.empty_item_single_line() {\n+        } else if need_newline || !context.config.empty_item_single_line() {\n             result.push_str(&sep);\n         }\n+\n         result.push('}');\n \n         Some(result)"}, {"sha": "e3728caba3ff21c770df4f5e691a253a94481e85", "filename": "tests/target/big-impl-block.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2727d41ddb676787729cd5632ecedcc4a2d299bb/tests%2Ftarget%2Fbig-impl-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2727d41ddb676787729cd5632ecedcc4a2d299bb/tests%2Ftarget%2Fbig-impl-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fbig-impl-block.rs?ref=2727d41ddb676787729cd5632ecedcc4a2d299bb", "patch": "@@ -78,4 +78,5 @@ where\n     S: event::Stream,\n     F: for<'t> FnMut(transform::Api<'t, Stream<ContentStream<S>>>) -> transform::Api<'t, X>,\n     X: event::Stream,\n-{}\n+{\n+}"}, {"sha": "0777a7ed2498fa77f8db3a7fa54c41f232cbe99c", "filename": "tests/target/impls.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2727d41ddb676787729cd5632ecedcc4a2d299bb/tests%2Ftarget%2Fimpls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2727d41ddb676787729cd5632ecedcc4a2d299bb/tests%2Ftarget%2Fimpls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fimpls.rs?ref=2727d41ddb676787729cd5632ecedcc4a2d299bb", "patch": "@@ -134,11 +134,13 @@ mod m {\n \n impl<BorrowType, K, V, NodeType, HandleType>\n     Handle<NodeRef<BorrowType, K, V, NodeType>, HandleType>\n-{}\n+{\n+}\n \n impl<BorrowType, K, V, NodeType, HandleType> PartialEq\n     for Handle<NodeRef<BorrowType, K, V, NodeType>, HandleType>\n-{}\n+{\n+}\n \n mod x {\n     impl<A, B, C, D> Foo\n@@ -147,7 +149,8 @@ mod x {\n         B: 'static,\n         C: 'static,\n         D: 'static,\n-    {}\n+    {\n+    }\n }\n \n impl<ConcreteThreadSafeLayoutNode: ThreadSafeLayoutNodeFoo>\n@@ -229,4 +232,5 @@ impl<'seq1, 'seq2, 'body, 'scope, Channel>\n     >\n where\n     Channel: DmaChannel,\n-{}\n+{\n+}"}]}