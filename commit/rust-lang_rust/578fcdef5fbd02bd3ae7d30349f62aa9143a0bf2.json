{"sha": "578fcdef5fbd02bd3ae7d30349f62aa9143a0bf2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3OGZjZGVmNWZiZDAyYmQzYWU3ZDMwMzQ5ZjYyYWE5MTQzYTBiZjI=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-03-15T09:22:21Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-03-15T09:22:29Z"}, "message": "Special case ZST's in Rvalue::Repeat\n\nFixes #1146 by preventing a hang for [(); usize::MAX], which is used in\na test of libcore.", "tree": {"sha": "9338a47b11e3531d8e25120c09d0b6a0b6137322", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9338a47b11e3531d8e25120c09d0b6a0b6137322"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/578fcdef5fbd02bd3ae7d30349f62aa9143a0bf2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/578fcdef5fbd02bd3ae7d30349f62aa9143a0bf2", "html_url": "https://github.com/rust-lang/rust/commit/578fcdef5fbd02bd3ae7d30349f62aa9143a0bf2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/578fcdef5fbd02bd3ae7d30349f62aa9143a0bf2/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b58ed225ec0d5048ab188ef68e47c07bc8547e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b58ed225ec0d5048ab188ef68e47c07bc8547e9", "html_url": "https://github.com/rust-lang/rust/commit/6b58ed225ec0d5048ab188ef68e47c07bc8547e9"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "5a28656add2d99c1b2ba6eb68a455d35c92d4760", "filename": "src/base.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/578fcdef5fbd02bd3ae7d30349f62aa9143a0bf2/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/578fcdef5fbd02bd3ae7d30349f62aa9143a0bf2/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=578fcdef5fbd02bd3ae7d30349f62aa9143a0bf2", "patch": "@@ -660,7 +660,9 @@ fn codegen_stmt<'tcx>(\n                         .val\n                         .try_to_bits(fx.tcx.data_layout.pointer_size)\n                         .unwrap();\n-                    if fx.clif_type(operand.layout().ty) == Some(types::I8) {\n+                    if operand.layout().size.bytes() == 0 {\n+                        // Do nothing for ZST's\n+                    } else if fx.clif_type(operand.layout().ty) == Some(types::I8) {\n                         let times = fx.bcx.ins().iconst(fx.pointer_type, times as i64);\n                         // FIXME use emit_small_memset where possible\n                         let addr = lval.to_ptr().get_addr(fx);"}]}