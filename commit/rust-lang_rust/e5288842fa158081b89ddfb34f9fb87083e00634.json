{"sha": "e5288842fa158081b89ddfb34f9fb87083e00634", "node_id": "C_kwDOAAsO6NoAKGU1Mjg4ODQyZmExNTgwODFiODlkZGZiMzRmOWZiODcwODNlMDA2MzQ", "commit": {"author": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-02-14T06:01:38Z"}, "committer": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-07-06T16:32:59Z"}, "message": "sess: stabilize `--terminal-width`\n\nFormerly `-Zterminal-width`, `--terminal-width` allows the user or build\ntool to inform rustc of the width of the terminal so that diagnostics\ncan be truncated.\n\nSigned-off-by: David Wood <david.wood@huawei.com>", "tree": {"sha": "050fc8428cba111b5982beae1b55d19484614ba6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/050fc8428cba111b5982beae1b55d19484614ba6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5288842fa158081b89ddfb34f9fb87083e00634", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5288842fa158081b89ddfb34f9fb87083e00634", "html_url": "https://github.com/rust-lang/rust/commit/e5288842fa158081b89ddfb34f9fb87083e00634", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5288842fa158081b89ddfb34f9fb87083e00634/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b8cf49c51833ee5d27ae2e8e179337dbb9f14d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b8cf49c51833ee5d27ae2e8e179337dbb9f14d7", "html_url": "https://github.com/rust-lang/rust/commit/5b8cf49c51833ee5d27ae2e8e179337dbb9f14d7"}], "stats": {"total": 77, "additions": 66, "deletions": 11}, "files": [{"sha": "81145416437b759de95009b17f571c4bd46c2316", "filename": "compiler/rustc_interface/src/tests.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e5288842fa158081b89ddfb34f9fb87083e00634/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5288842fa158081b89ddfb34f9fb87083e00634/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Ftests.rs?ref=e5288842fa158081b89ddfb34f9fb87083e00634", "patch": "@@ -689,7 +689,6 @@ fn test_debugging_options_tracking_hash() {\n     untracked!(span_debug, true);\n     untracked!(span_free_formats, true);\n     untracked!(temps_dir, Some(String::from(\"abc\")));\n-    untracked!(terminal_width, Some(80));\n     untracked!(threads, 99);\n     untracked!(time, true);\n     untracked!(time_llvm_passes, true);"}, {"sha": "2650ad528790237e49ac9603fd158df255b385db", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e5288842fa158081b89ddfb34f9fb87083e00634/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5288842fa158081b89ddfb34f9fb87083e00634/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=e5288842fa158081b89ddfb34f9fb87083e00634", "patch": "@@ -726,6 +726,7 @@ impl Default for Options {\n             prints: Vec::new(),\n             cg: Default::default(),\n             error_format: ErrorOutputType::default(),\n+            terminal_width: None,\n             externs: Externs(BTreeMap::new()),\n             crate_name: None,\n             libs: Vec::new(),\n@@ -1427,6 +1428,12 @@ pub fn rustc_optgroups() -> Vec<RustcOptGroup> {\n                                  never  = never colorize output\",\n             \"auto|always|never\",\n         ),\n+        opt::opt_s(\n+            \"\",\n+            \"terminal-width\",\n+            \"Inform rustc of the width of the terminal so that errors can be truncated\",\n+            \"WIDTH\",\n+        ),\n         opt::multi_s(\n             \"\",\n             \"remap-path-prefix\",\n@@ -2202,6 +2209,10 @@ pub fn build_session_options(matches: &getopts::Matches) -> Options {\n \n     let error_format = parse_error_format(matches, color, json_rendered);\n \n+    let terminal_width = matches.opt_get(\"terminal-width\").unwrap_or_else(|_| {\n+        early_error(error_format, \"`--terminal-width` must be an positive integer\");\n+    });\n+\n     let unparsed_crate_types = matches.opt_strs(\"crate-type\");\n     let crate_types = parse_crate_types_from_list(unparsed_crate_types)\n         .unwrap_or_else(|e| early_error(error_format, &e));\n@@ -2474,6 +2485,7 @@ pub fn build_session_options(matches: &getopts::Matches) -> Options {\n         prints,\n         cg,\n         error_format,\n+        terminal_width,\n         externs,\n         unstable_features: UnstableFeatures::from_environment(crate_name.as_deref()),\n         crate_name,"}, {"sha": "80e811bc1a745bbe2593f9e7cc52f748bc46d5ec", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e5288842fa158081b89ddfb34f9fb87083e00634/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5288842fa158081b89ddfb34f9fb87083e00634/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=e5288842fa158081b89ddfb34f9fb87083e00634", "patch": "@@ -170,6 +170,7 @@ top_level_options!(\n \n         test: bool [TRACKED],\n         error_format: ErrorOutputType [UNTRACKED],\n+        terminal_width: Option<usize> [UNTRACKED],\n \n         /// If `Some`, enable incremental compilation, using the given\n         /// directory to store intermediate results."}, {"sha": "b5a72ed20c16afb3e826aef12eb9899c4024781c", "filename": "compiler/rustc_session/src/session.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e5288842fa158081b89ddfb34f9fb87083e00634/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5288842fa158081b89ddfb34f9fb87083e00634/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fsession.rs?ref=e5288842fa158081b89ddfb34f9fb87083e00634", "patch": "@@ -1162,7 +1162,7 @@ fn default_emitter(\n                         fallback_bundle,\n                         short,\n                         sopts.debugging_opts.teach,\n-                        sopts.debugging_opts.terminal_width,\n+                        sopts.terminal_width,\n                         macro_backtrace,\n                     ),\n                     Some(dst) => EmitterWriter::new(\n@@ -1188,7 +1188,7 @@ fn default_emitter(\n                 fallback_bundle,\n                 pretty,\n                 json_rendered,\n-                sopts.debugging_opts.terminal_width,\n+                sopts.terminal_width,\n                 macro_backtrace,\n             )\n             .ui_testing(sopts.debugging_opts.ui_testing),\n@@ -1202,7 +1202,7 @@ fn default_emitter(\n                 fallback_bundle,\n                 pretty,\n                 json_rendered,\n-                sopts.debugging_opts.terminal_width,\n+                sopts.terminal_width,\n                 macro_backtrace,\n             )\n             .ui_testing(sopts.debugging_opts.ui_testing),"}, {"sha": "0c913f8a07f9ac49daaad5672e7f93cf98182556", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e5288842fa158081b89ddfb34f9fb87083e00634/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5288842fa158081b89ddfb34f9fb87083e00634/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=e5288842fa158081b89ddfb34f9fb87083e00634", "patch": "@@ -73,6 +73,8 @@ pub(crate) struct Options {\n     pub(crate) proc_macro_crate: bool,\n     /// How to format errors and warnings.\n     pub(crate) error_format: ErrorOutputType,\n+    /// Width of terminal to truncate errors appropriately.\n+    pub(crate) terminal_width: Option<usize>,\n     /// Library search paths to hand to the compiler.\n     pub(crate) libs: Vec<SearchPath>,\n     /// Library search paths strings to hand to the compiler.\n@@ -334,11 +336,12 @@ impl Options {\n         let config::JsonConfig { json_rendered, json_unused_externs, .. } =\n             config::parse_json(matches);\n         let error_format = config::parse_error_format(matches, color, json_rendered);\n+        let terminal_width = matches.opt_get(\"terminal-width\").unwrap_or_default();\n \n         let codegen_options = CodegenOptions::build(matches, error_format);\n         let debugging_opts = DebuggingOptions::build(matches, error_format);\n \n-        let diag = new_handler(error_format, None, &debugging_opts);\n+        let diag = new_handler(error_format, None, terminal_width, &debugging_opts);\n \n         // check for deprecated options\n         check_deprecated_options(matches, &diag);\n@@ -702,6 +705,7 @@ impl Options {\n             input,\n             proc_macro_crate,\n             error_format,\n+            terminal_width,\n             libs,\n             lib_strs,\n             externs,"}, {"sha": "7ed7243cb99c467844844bded718e8b73d550f53", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e5288842fa158081b89ddfb34f9fb87083e00634/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5288842fa158081b89ddfb34f9fb87083e00634/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=e5288842fa158081b89ddfb34f9fb87083e00634", "patch": "@@ -154,6 +154,7 @@ impl<'tcx> DocContext<'tcx> {\n pub(crate) fn new_handler(\n     error_format: ErrorOutputType,\n     source_map: Option<Lrc<source_map::SourceMap>>,\n+    terminal_width: Option<usize>,\n     debugging_opts: &DebuggingOptions,\n ) -> rustc_errors::Handler {\n     let fallback_bundle =\n@@ -169,7 +170,7 @@ pub(crate) fn new_handler(\n                     fallback_bundle,\n                     short,\n                     debugging_opts.teach,\n-                    debugging_opts.terminal_width,\n+                    terminal_width,\n                     false,\n                 )\n                 .ui_testing(debugging_opts.ui_testing),\n@@ -187,7 +188,7 @@ pub(crate) fn new_handler(\n                     fallback_bundle,\n                     pretty,\n                     json_rendered,\n-                    debugging_opts.terminal_width,\n+                    terminal_width,\n                     false,\n                 )\n                 .ui_testing(debugging_opts.ui_testing),\n@@ -208,6 +209,7 @@ pub(crate) fn create_config(\n         crate_name,\n         proc_macro_crate,\n         error_format,\n+        terminal_width,\n         libs,\n         externs,\n         mut cfgs,\n@@ -266,6 +268,7 @@ pub(crate) fn create_config(\n         actually_rustdoc: true,\n         debugging_opts,\n         error_format,\n+        terminal_width,\n         edition,\n         describe_lints,\n         crate_name,"}, {"sha": "d42bb02e0323e020b0a5a1abdb8be95c74b12fee", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e5288842fa158081b89ddfb34f9fb87083e00634/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5288842fa158081b89ddfb34f9fb87083e00634/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=e5288842fa158081b89ddfb34f9fb87083e00634", "patch": "@@ -462,6 +462,14 @@ fn opts() -> Vec<RustcOptGroup> {\n                 \"human|json|short\",\n             )\n         }),\n+        unstable(\"terminal-width\", |o| {\n+            o.optopt(\n+                \"\",\n+                \"terminal-width\",\n+                \"Provide width of the terminal for truncated error messages\",\n+                \"WIDTH\",\n+            )\n+        }),\n         stable(\"json\", |o| {\n             o.optopt(\"\", \"json\", \"Configure the structure of JSON diagnostics\", \"CONFIG\")\n         }),\n@@ -733,7 +741,12 @@ fn run_renderer<'tcx, T: formats::FormatRenderer<'tcx>>(\n }\n \n fn main_options(options: config::Options) -> MainResult {\n-    let diag = core::new_handler(options.error_format, None, &options.debugging_opts);\n+    let diag = core::new_handler(\n+        options.error_format,\n+        None,\n+        options.terminal_width,\n+        &options.debugging_opts,\n+    );\n \n     match (options.should_test, options.markdown_input()) {\n         (true, true) => return wrap_return(&diag, markdown::test(options)),"}, {"sha": "6ca2143efbdea51df74129967c97f338273c24a1", "filename": "src/test/run-make/issue-88756-default-output/output-default.stdout", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e5288842fa158081b89ddfb34f9fb87083e00634/src%2Ftest%2Frun-make%2Fissue-88756-default-output%2Foutput-default.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/e5288842fa158081b89ddfb34f9fb87083e00634/src%2Ftest%2Frun-make%2Fissue-88756-default-output%2Foutput-default.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-88756-default-output%2Foutput-default.stdout?ref=e5288842fa158081b89ddfb34f9fb87083e00634", "patch": "@@ -110,6 +110,9 @@ Options:\n                         never = never colorize output\n         --error-format human|json|short\n                         How errors and other messages are produced\n+        --terminal-width WIDTH\n+                        Provide width of the terminal for truncated error\n+                        messages\n         --json CONFIG   Configure the structure of JSON diagnostics\n         --disable-minification \n                         Disable minification applied on JS files"}, {"sha": "72544d7ee53a1e198a0d62c656371dfd64a66fbf", "filename": "src/test/rustdoc-ui/terminal-width.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e5288842fa158081b89ddfb34f9fb87083e00634/src%2Ftest%2Frustdoc-ui%2Fterminal-width.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5288842fa158081b89ddfb34f9fb87083e00634/src%2Ftest%2Frustdoc-ui%2Fterminal-width.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fterminal-width.rs?ref=e5288842fa158081b89ddfb34f9fb87083e00634", "patch": "@@ -0,0 +1,5 @@\n+// compile-flags: -Zunstable-options --terminal-width=10\n+#![deny(rustdoc::bare_urls)]\n+\n+/// This is a long line that contains a http://link.com\n+pub struct Foo; //~^ ERROR"}, {"sha": "16ab606eb99025952908a1298a5c552ad9ade7a9", "filename": "src/test/rustdoc-ui/terminal-width.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e5288842fa158081b89ddfb34f9fb87083e00634/src%2Ftest%2Frustdoc-ui%2Fterminal-width.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e5288842fa158081b89ddfb34f9fb87083e00634/src%2Ftest%2Frustdoc-ui%2Fterminal-width.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fterminal-width.stderr?ref=e5288842fa158081b89ddfb34f9fb87083e00634", "patch": "@@ -0,0 +1,15 @@\n+error: this URL is not a hyperlink\n+  --> $DIR/terminal-width.rs:4:41\n+   |\n+LL | ... a http://link.com\n+   |       ^^^^^^^^^^^^^^^ help: use an automatic link instead: `<http://link.com>`\n+   |\n+note: the lint level is defined here\n+  --> $DIR/terminal-width.rs:2:9\n+   |\n+LL | ...ny(rustdoc::bare_url...\n+   |       ^^^^^^^^^^^^^^^^^^\n+   = note: bare URLs are not automatically turned into clickable links\n+\n+error: aborting due to previous error\n+"}, {"sha": "4ae960ef967b9504128706a9196aea75eac17954", "filename": "src/test/ui/terminal-width/flag-human.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5288842fa158081b89ddfb34f9fb87083e00634/src%2Ftest%2Fui%2Fterminal-width%2Fflag-human.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5288842fa158081b89ddfb34f9fb87083e00634/src%2Ftest%2Fui%2Fterminal-width%2Fflag-human.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fterminal-width%2Fflag-human.rs?ref=e5288842fa158081b89ddfb34f9fb87083e00634", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z terminal-width=20\n+// compile-flags: --terminal-width=20\n \n // This test checks that `-Z terminal-width` effects the human error output by restricting it to an\n // arbitrarily low value so that the effect is visible."}, {"sha": "d4e51e80347d520879ab3e7832f8d04406191917", "filename": "src/test/ui/terminal-width/flag-json.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5288842fa158081b89ddfb34f9fb87083e00634/src%2Ftest%2Fui%2Fterminal-width%2Fflag-json.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5288842fa158081b89ddfb34f9fb87083e00634/src%2Ftest%2Fui%2Fterminal-width%2Fflag-json.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fterminal-width%2Fflag-json.rs?ref=e5288842fa158081b89ddfb34f9fb87083e00634", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z terminal-width=20 --error-format=json\n+// compile-flags: --terminal-width=20 --error-format=json\n \n // This test checks that `-Z terminal-width` effects the JSON error output by restricting it to an\n // arbitrarily low value so that the effect is visible."}, {"sha": "b21391d1640efce3144aee31a623d5ae5691a3a4", "filename": "src/test/ui/terminal-width/flag-json.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5288842fa158081b89ddfb34f9fb87083e00634/src%2Ftest%2Fui%2Fterminal-width%2Fflag-json.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e5288842fa158081b89ddfb34f9fb87083e00634/src%2Ftest%2Fui%2Fterminal-width%2Fflag-json.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fterminal-width%2Fflag-json.stderr?ref=e5288842fa158081b89ddfb34f9fb87083e00634", "patch": "@@ -24,7 +24,7 @@ This error occurs when an expression was used in a place where the compiler\n expected an expression of a different type. It can occur in several cases, the\n most common being when calling a function and passing an argument which has a\n different type than the matching type in the function declaration.\n-\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/flag-json.rs\",\"byte_start\":244,\"byte_end\":246,\"line_start\":7,\"line_end\":7,\"column_start\":17,\"column_end\":19,\"is_primary\":true,\"text\":[{\"text\":\"    let _: () = 42;\",\"highlight_start\":17,\"highlight_end\":19}],\"label\":\"expected `()`, found integer\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null},{\"file_name\":\"$DIR/flag-json.rs\",\"byte_start\":239,\"byte_end\":241,\"line_start\":7,\"line_end\":7,\"column_start\":12,\"column_end\":14,\"is_primary\":false,\"text\":[{\"text\":\"    let _: () = 42;\",\"highlight_start\":12,\"highlight_end\":14}],\"label\":\"expected due to this\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":\"error[E0308]: mismatched types\n+\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/flag-json.rs\",\"byte_start\":243,\"byte_end\":245,\"line_start\":7,\"line_end\":7,\"column_start\":17,\"column_end\":19,\"is_primary\":true,\"text\":[{\"text\":\"    let _: () = 42;\",\"highlight_start\":17,\"highlight_end\":19}],\"label\":\"expected `()`, found integer\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null},{\"file_name\":\"$DIR/flag-json.rs\",\"byte_start\":238,\"byte_end\":240,\"line_start\":7,\"line_end\":7,\"column_start\":12,\"column_end\":14,\"is_primary\":false,\"text\":[{\"text\":\"    let _: () = 42;\",\"highlight_start\":12,\"highlight_end\":14}],\"label\":\"expected due to this\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":\"error[E0308]: mismatched types\n   --> $DIR/flag-json.rs:7:17\n    |\n LL | ..._: () = 42;"}]}