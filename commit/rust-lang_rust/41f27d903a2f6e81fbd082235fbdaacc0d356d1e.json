{"sha": "41f27d903a2f6e81fbd082235fbdaacc0d356d1e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxZjI3ZDkwM2EyZjZlODFmYmQwODIyMzVmYmRhYWNjMGQzNTZkMWU=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2021-08-04T18:20:31Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2021-08-05T17:58:55Z"}, "message": "Remove the `decl` arg from `FnAbi::llvm_type`\n\nWe can apply the `c_variadic` fix all the time, rather than trying to\ndistinguish between declarations and any other use.", "tree": {"sha": "befaf776cc7c5b0b6287d6156c89bbab51e5dcfb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/befaf776cc7c5b0b6287d6156c89bbab51e5dcfb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41f27d903a2f6e81fbd082235fbdaacc0d356d1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41f27d903a2f6e81fbd082235fbdaacc0d356d1e", "html_url": "https://github.com/rust-lang/rust/commit/41f27d903a2f6e81fbd082235fbdaacc0d356d1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41f27d903a2f6e81fbd082235fbdaacc0d356d1e/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "183d79cc09ad81bc2dc7b47cb8880046201e52a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/183d79cc09ad81bc2dc7b47cb8880046201e52a2", "html_url": "https://github.com/rust-lang/rust/commit/183d79cc09ad81bc2dc7b47cb8880046201e52a2"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "abf0ea8cc0a65b05c4329b1312e507a17eb2a698", "filename": "compiler/rustc_codegen_llvm/src/abi.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/41f27d903a2f6e81fbd082235fbdaacc0d356d1e/compiler%2Frustc_codegen_llvm%2Fsrc%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41f27d903a2f6e81fbd082235fbdaacc0d356d1e/compiler%2Frustc_codegen_llvm%2Fsrc%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fabi.rs?ref=41f27d903a2f6e81fbd082235fbdaacc0d356d1e", "patch": "@@ -344,18 +344,18 @@ impl ArgAbiMethods<'tcx> for Builder<'a, 'll, 'tcx> {\n }\n \n pub trait FnAbiLlvmExt<'tcx> {\n-    fn llvm_type(&self, cx: &CodegenCx<'ll, 'tcx>, decl: bool) -> &'ll Type;\n+    fn llvm_type(&self, cx: &CodegenCx<'ll, 'tcx>) -> &'ll Type;\n     fn ptr_to_llvm_type(&self, cx: &CodegenCx<'ll, 'tcx>) -> &'ll Type;\n     fn llvm_cconv(&self) -> llvm::CallConv;\n     fn apply_attrs_llfn(&self, cx: &CodegenCx<'ll, 'tcx>, llfn: &'ll Value);\n     fn apply_attrs_callsite(&self, bx: &mut Builder<'a, 'll, 'tcx>, callsite: &'ll Value);\n }\n \n impl<'tcx> FnAbiLlvmExt<'tcx> for FnAbi<'tcx, Ty<'tcx>> {\n-    fn llvm_type(&self, cx: &CodegenCx<'ll, 'tcx>, decl: bool) -> &'ll Type {\n-        // Ignore extra args when calling C variadic functions.\n-        let args =\n-            if decl && self.c_variadic { &self.args[..self.fixed_count] } else { &self.args };\n+    fn llvm_type(&self, cx: &CodegenCx<'ll, 'tcx>) -> &'ll Type {\n+        // Ignore \"extra\" args from the call site for C variadic functions.\n+        // Only the \"fixed\" args are part of the LLVM function signature.\n+        let args = if self.c_variadic { &self.args[..self.fixed_count] } else { &self.args };\n \n         let args_capacity: usize = args.iter().map(|arg|\n             if arg.pad.is_some() { 1 } else { 0 } +\n@@ -414,7 +414,7 @@ impl<'tcx> FnAbiLlvmExt<'tcx> for FnAbi<'tcx, Ty<'tcx>> {\n     fn ptr_to_llvm_type(&self, cx: &CodegenCx<'ll, 'tcx>) -> &'ll Type {\n         unsafe {\n             llvm::LLVMPointerType(\n-                self.llvm_type(cx, false),\n+                self.llvm_type(cx),\n                 cx.data_layout().instruction_address_space.0 as c_uint,\n             )\n         }"}, {"sha": "8977fa085b9bbe1093f14f4723a52abcf8dd04df", "filename": "compiler/rustc_codegen_llvm/src/declare.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41f27d903a2f6e81fbd082235fbdaacc0d356d1e/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdeclare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41f27d903a2f6e81fbd082235fbdaacc0d356d1e/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdeclare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdeclare.rs?ref=41f27d903a2f6e81fbd082235fbdaacc0d356d1e", "patch": "@@ -90,7 +90,7 @@ impl CodegenCx<'ll, 'tcx> {\n             name,\n             fn_abi.llvm_cconv(),\n             llvm::UnnamedAddr::Global,\n-            fn_abi.llvm_type(self, false),\n+            fn_abi.llvm_type(self),\n         );\n         fn_abi.apply_attrs_llfn(self, llfn);\n         llfn"}, {"sha": "ed4841858651749e613e83abc9516bf496ab7d42", "filename": "compiler/rustc_codegen_llvm/src/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41f27d903a2f6e81fbd082235fbdaacc0d356d1e/compiler%2Frustc_codegen_llvm%2Fsrc%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41f27d903a2f6e81fbd082235fbdaacc0d356d1e/compiler%2Frustc_codegen_llvm%2Fsrc%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fintrinsic.rs?ref=41f27d903a2f6e81fbd082235fbdaacc0d356d1e", "patch": "@@ -712,7 +712,7 @@ fn gen_fn<'ll, 'tcx>(\n     codegen: &mut dyn FnMut(Builder<'_, 'll, 'tcx>),\n ) -> (&'ll Type, &'ll Value) {\n     let fn_abi = FnAbi::of_fn_ptr(cx, rust_fn_sig, &[]);\n-    let llty = fn_abi.llvm_type(cx, false);\n+    let llty = fn_abi.llvm_type(cx);\n     let llfn = cx.declare_fn(name, &fn_abi);\n     cx.set_frame_pointer_type(llfn);\n     cx.apply_target_cpu_attr(llfn);"}, {"sha": "69787df5e0753b9f583c7915a273e59e810e28e0", "filename": "compiler/rustc_codegen_llvm/src/type_.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/41f27d903a2f6e81fbd082235fbdaacc0d356d1e/compiler%2Frustc_codegen_llvm%2Fsrc%2Ftype_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41f27d903a2f6e81fbd082235fbdaacc0d356d1e/compiler%2Frustc_codegen_llvm%2Fsrc%2Ftype_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Ftype_.rs?ref=41f27d903a2f6e81fbd082235fbdaacc0d356d1e", "patch": "@@ -276,8 +276,7 @@ impl LayoutTypeMethods<'tcx> for CodegenCx<'ll, 'tcx> {\n         ty.llvm_type(self)\n     }\n     fn fn_decl_backend_type(&self, fn_abi: &FnAbi<'tcx, Ty<'tcx>>) -> &'ll Type {\n-        // This does not include extra args when calling C variadic functions.\n-        fn_abi.llvm_type(self, true)\n+        fn_abi.llvm_type(self)\n     }\n     fn fn_ptr_backend_type(&self, fn_abi: &FnAbi<'tcx, Ty<'tcx>>) -> &'ll Type {\n         fn_abi.ptr_to_llvm_type(self)"}]}