{"sha": "ea889742d75e68bb7ecbdf81ecbcddc12fd10616", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhODg5NzQyZDc1ZTY4YmI3ZWNiZGY4MWVjYmNkZGMxMmZkMTA2MTY=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-05-17T22:02:31Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-05-22T22:31:39Z"}, "message": "Using unsafe pointers to share closures.\n\nThis prevents the tons of copying problems we were having before, which means we only have a 5x slowdown now.", "tree": {"sha": "c302fa4b00ce7cc22c24ded5e9a5e54525dc1b99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c302fa4b00ce7cc22c24ded5e9a5e54525dc1b99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea889742d75e68bb7ecbdf81ecbcddc12fd10616", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea889742d75e68bb7ecbdf81ecbcddc12fd10616", "html_url": "https://github.com/rust-lang/rust/commit/ea889742d75e68bb7ecbdf81ecbcddc12fd10616", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea889742d75e68bb7ecbdf81ecbcddc12fd10616/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65abe2c6dc4720e0c357bbc083814fd040399ced", "url": "https://api.github.com/repos/rust-lang/rust/commits/65abe2c6dc4720e0c357bbc083814fd040399ced", "html_url": "https://github.com/rust-lang/rust/commit/65abe2c6dc4720e0c357bbc083814fd040399ced"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "43768c2b3e32f8609bf15c8281741f703280903e", "filename": "src/test/bench/graph500-bfs.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ea889742d75e68bb7ecbdf81ecbcddc12fd10616/src%2Ftest%2Fbench%2Fgraph500-bfs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea889742d75e68bb7ecbdf81ecbcddc12fd10616/src%2Ftest%2Fbench%2Fgraph500-bfs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fgraph500-bfs.rs?ref=ea889742d75e68bb7ecbdf81ecbcddc12fd10616", "patch": "@@ -540,8 +540,11 @@ fn map_slices<A: send, B: send>(xs: [A], f: fn~(uint, [A]) -> B) -> [B] {\n         while base < len {\n             let slice = vec::slice(xs, base,\n                                    uint::min(len, base + items_per_task));\n+            let f = ptr::addr_of(f);\n             futures += [future::spawn() {|copy base|\n-                f(base, slice)\n+                unsafe {\n+                    (*f)(base, slice)\n+                }\n             }];\n             base += items_per_task;\n         }"}]}