{"sha": "fdccc7dad9f9d4227ce07189585cc5214868bc28", "node_id": "C_kwDOAAsO6NoAKGZkY2NjN2RhZDlmOWQ0MjI3Y2UwNzE4OTU4NWNjNTIxNDg2OGJjMjg", "commit": {"author": {"name": "Caio", "email": "c410.f3r@gmail.com", "date": "2021-09-30T11:40:05Z"}, "committer": {"name": "Caio", "email": "c410.f3r@gmail.com", "date": "2021-09-30T11:40:05Z"}, "message": "Use reference instead of raw pointer", "tree": {"sha": "c4eb0ef9735880da0954b2a539e31917695394bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4eb0ef9735880da0954b2a539e31917695394bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fdccc7dad9f9d4227ce07189585cc5214868bc28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fdccc7dad9f9d4227ce07189585cc5214868bc28", "html_url": "https://github.com/rust-lang/rust/commit/fdccc7dad9f9d4227ce07189585cc5214868bc28", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fdccc7dad9f9d4227ce07189585cc5214868bc28/comments", "author": {"login": "c410-f3r", "id": 17877264, "node_id": "MDQ6VXNlcjE3ODc3MjY0", "avatar_url": "https://avatars.githubusercontent.com/u/17877264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c410-f3r", "html_url": "https://github.com/c410-f3r", "followers_url": "https://api.github.com/users/c410-f3r/followers", "following_url": "https://api.github.com/users/c410-f3r/following{/other_user}", "gists_url": "https://api.github.com/users/c410-f3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/c410-f3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c410-f3r/subscriptions", "organizations_url": "https://api.github.com/users/c410-f3r/orgs", "repos_url": "https://api.github.com/users/c410-f3r/repos", "events_url": "https://api.github.com/users/c410-f3r/events{/privacy}", "received_events_url": "https://api.github.com/users/c410-f3r/received_events", "type": "User", "site_admin": false}, "committer": {"login": "c410-f3r", "id": 17877264, "node_id": "MDQ6VXNlcjE3ODc3MjY0", "avatar_url": "https://avatars.githubusercontent.com/u/17877264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c410-f3r", "html_url": "https://github.com/c410-f3r", "followers_url": "https://api.github.com/users/c410-f3r/followers", "following_url": "https://api.github.com/users/c410-f3r/following{/other_user}", "gists_url": "https://api.github.com/users/c410-f3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/c410-f3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c410-f3r/subscriptions", "organizations_url": "https://api.github.com/users/c410-f3r/orgs", "repos_url": "https://api.github.com/users/c410-f3r/repos", "events_url": "https://api.github.com/users/c410-f3r/events{/privacy}", "received_events_url": "https://api.github.com/users/c410-f3r/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4be574e6c91e004c13e133ea3a441e13aa2439d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/4be574e6c91e004c13e133ea3a441e13aa2439d3", "html_url": "https://github.com/rust-lang/rust/commit/4be574e6c91e004c13e133ea3a441e13aa2439d3"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "3fa63cf968f645dab23072463094e64d9c623e71", "filename": "library/core/src/array/mod.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fdccc7dad9f9d4227ce07189585cc5214868bc28/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdccc7dad9f9d4227ce07189585cc5214868bc28/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Farray%2Fmod.rs?ref=fdccc7dad9f9d4227ce07189585cc5214868bc28", "patch": "@@ -559,16 +559,17 @@ where\n         return unsafe { Some(Ok(mem::zeroed())) };\n     }\n \n-    struct Guard<T, const N: usize> {\n-        ptr: *mut T,\n+    struct Guard<'a, T, const N: usize> {\n+        array_mut: &'a mut [MaybeUninit<T>; N],\n         initialized: usize,\n     }\n \n-    impl<T, const N: usize> Drop for Guard<T, N> {\n+    impl<T, const N: usize> Drop for Guard<'_, T, N> {\n         fn drop(&mut self) {\n             debug_assert!(self.initialized <= N);\n \n-            let initialized_part = crate::ptr::slice_from_raw_parts_mut(self.ptr, self.initialized);\n+            let ptr = MaybeUninit::slice_as_mut_ptr(self.array_mut);\n+            let initialized_part = crate::ptr::slice_from_raw_parts_mut(ptr, self.initialized);\n \n             // SAFETY: this raw slice will contain only initialized objects.\n             unsafe {\n@@ -578,8 +579,7 @@ where\n     }\n \n     let mut array = MaybeUninit::uninit_array::<N>();\n-    let mut guard: Guard<_, N> =\n-        Guard { ptr: MaybeUninit::slice_as_mut_ptr(&mut array), initialized: 0 };\n+    let mut guard: Guard<'_, _, N> = Guard { array_mut: &mut array, initialized: 0 };\n \n     while let Some(item_rslt) = iter.next() {\n         let item = match item_rslt {\n@@ -593,7 +593,7 @@ where\n         // loop and the loop is aborted once it reaches N (which is\n         // `array.len()`).\n         unsafe {\n-            array.get_unchecked_mut(guard.initialized).write(item);\n+            guard.array_mut.get_unchecked_mut(guard.initialized).write(item);\n         }\n         guard.initialized += 1;\n "}]}