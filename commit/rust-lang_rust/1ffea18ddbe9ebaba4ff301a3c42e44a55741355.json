{"sha": "1ffea18ddbe9ebaba4ff301a3c42e44a55741355", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmZmVhMThkZGJlOWViYWJhNGZmMzAxYTNjNDJlNDRhNTU3NDEzNTU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-18T22:19:40Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-24T19:53:55Z"}, "message": "or-patterns: harden feature gating tests.", "tree": {"sha": "76d530359bd05122c32b326f2cb6cd8c07d8bd50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76d530359bd05122c32b326f2cb6cd8c07d8bd50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ffea18ddbe9ebaba4ff301a3c42e44a55741355", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ffea18ddbe9ebaba4ff301a3c42e44a55741355", "html_url": "https://github.com/rust-lang/rust/commit/1ffea18ddbe9ebaba4ff301a3c42e44a55741355", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ffea18ddbe9ebaba4ff301a3c42e44a55741355/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3b3bceffb1f0fa7727c4d63aa37ecb9444e88c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3b3bceffb1f0fa7727c4d63aa37ecb9444e88c5", "html_url": "https://github.com/rust-lang/rust/commit/d3b3bceffb1f0fa7727c4d63aa37ecb9444e88c5"}], "stats": {"total": 229, "additions": 227, "deletions": 2}, "files": [{"sha": "560db20e668621087696d5e4f00e3f847ff03710", "filename": "src/test/ui/or-patterns/feature-gate-or_patterns.rs", "status": "modified", "additions": 46, "deletions": 1, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/1ffea18ddbe9ebaba4ff301a3c42e44a55741355/src%2Ftest%2Fui%2For-patterns%2Ffeature-gate-or_patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ffea18ddbe9ebaba4ff301a3c42e44a55741355/src%2Ftest%2Fui%2For-patterns%2Ffeature-gate-or_patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Ffeature-gate-or_patterns.rs?ref=1ffea18ddbe9ebaba4ff301a3c42e44a55741355", "patch": "@@ -1,4 +1,4 @@\n-#![crate_type=\"lib\"]\n+fn main() {}\n \n pub fn example(x: Option<usize>) {\n     match x {\n@@ -7,3 +7,48 @@ pub fn example(x: Option<usize>) {\n         _ => {}\n     }\n }\n+\n+// Test the `pat` macro fragment parser:\n+macro_rules! accept_pat {\n+    ($p:pat) => {}\n+}\n+\n+accept_pat!((p | q)); //~ ERROR or-patterns syntax is experimental\n+accept_pat!((p | q,)); //~ ERROR or-patterns syntax is experimental\n+accept_pat!(TS(p | q)); //~ ERROR or-patterns syntax is experimental\n+accept_pat!(NS { f: p | q }); //~ ERROR or-patterns syntax is experimental\n+accept_pat!([p | q]); //~ ERROR or-patterns syntax is experimental\n+\n+// Non-macro tests:\n+\n+#[cfg(FALSE)]\n+fn or_patterns() {\n+    // Gated:\n+\n+    let | A | B; //~ ERROR or-patterns syntax is experimental\n+    //~^ ERROR or-patterns syntax is experimental\n+    let A | B; //~ ERROR or-patterns syntax is experimental\n+    for | A | B in 0 {} //~ ERROR or-patterns syntax is experimental\n+    //~^ ERROR or-patterns syntax is experimental\n+    for A | B in 0 {} //~ ERROR or-patterns syntax is experimental\n+    fn fun((A | B): _) {} //~ ERROR or-patterns syntax is experimental\n+    let _ = |(A | B): u8| (); //~ ERROR or-patterns syntax is experimental\n+    let (A | B); //~ ERROR or-patterns syntax is experimental\n+    let (A | B,); //~ ERROR or-patterns syntax is experimental\n+    let A(B | C); //~ ERROR or-patterns syntax is experimental\n+    let E::V(B | C); //~ ERROR or-patterns syntax is experimental\n+    let S { f1: B | C, f2 }; //~ ERROR or-patterns syntax is experimental\n+    let E::V { f1: B | C, f2 }; //~ ERROR or-patterns syntax is experimental\n+    let [A | B]; //~ ERROR or-patterns syntax is experimental\n+\n+    // Top level of `while`, `if`, and `match` arms are allowed:\n+\n+    while let | A = 0 {}\n+    while let A | B = 0 {}\n+    if let | A = 0 {}\n+    if let A | B = 0 {}\n+    match 0 {\n+        | A => {},\n+        A | B => {},\n+    }\n+}"}, {"sha": "e2abfbfd5254d1622d3646509d91589fda8ab047", "filename": "src/test/ui/or-patterns/feature-gate-or_patterns.stderr", "status": "modified", "additions": 181, "deletions": 1, "changes": 182, "blob_url": "https://github.com/rust-lang/rust/blob/1ffea18ddbe9ebaba4ff301a3c42e44a55741355/src%2Ftest%2Fui%2For-patterns%2Ffeature-gate-or_patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1ffea18ddbe9ebaba4ff301a3c42e44a55741355/src%2Ftest%2Fui%2For-patterns%2Ffeature-gate-or_patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Ffeature-gate-or_patterns.stderr?ref=1ffea18ddbe9ebaba4ff301a3c42e44a55741355", "patch": "@@ -7,6 +7,186 @@ LL |         Some(0 | 1 | 2) => {}\n    = note: for more information, see https://github.com/rust-lang/rust/issues/54883\n    = help: add `#![feature(or_patterns)]` to the crate attributes to enable\n \n-error: aborting due to previous error\n+error[E0658]: or-patterns syntax is experimental\n+  --> $DIR/feature-gate-or_patterns.rs:28:9\n+   |\n+LL |     let | A | B;\n+   |         ^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54883\n+   = help: add `#![feature(or_patterns)]` to the crate attributes to enable\n+\n+error[E0658]: or-patterns syntax is experimental\n+  --> $DIR/feature-gate-or_patterns.rs:28:11\n+   |\n+LL |     let | A | B;\n+   |           ^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54883\n+   = help: add `#![feature(or_patterns)]` to the crate attributes to enable\n+\n+error[E0658]: or-patterns syntax is experimental\n+  --> $DIR/feature-gate-or_patterns.rs:30:9\n+   |\n+LL |     let A | B;\n+   |         ^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54883\n+   = help: add `#![feature(or_patterns)]` to the crate attributes to enable\n+\n+error[E0658]: or-patterns syntax is experimental\n+  --> $DIR/feature-gate-or_patterns.rs:31:9\n+   |\n+LL |     for | A | B in 0 {}\n+   |         ^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54883\n+   = help: add `#![feature(or_patterns)]` to the crate attributes to enable\n+\n+error[E0658]: or-patterns syntax is experimental\n+  --> $DIR/feature-gate-or_patterns.rs:31:11\n+   |\n+LL |     for | A | B in 0 {}\n+   |           ^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54883\n+   = help: add `#![feature(or_patterns)]` to the crate attributes to enable\n+\n+error[E0658]: or-patterns syntax is experimental\n+  --> $DIR/feature-gate-or_patterns.rs:33:9\n+   |\n+LL |     for A | B in 0 {}\n+   |         ^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54883\n+   = help: add `#![feature(or_patterns)]` to the crate attributes to enable\n+\n+error[E0658]: or-patterns syntax is experimental\n+  --> $DIR/feature-gate-or_patterns.rs:34:13\n+   |\n+LL |     fn fun((A | B): _) {}\n+   |             ^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54883\n+   = help: add `#![feature(or_patterns)]` to the crate attributes to enable\n+\n+error[E0658]: or-patterns syntax is experimental\n+  --> $DIR/feature-gate-or_patterns.rs:35:15\n+   |\n+LL |     let _ = |(A | B): u8| ();\n+   |               ^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54883\n+   = help: add `#![feature(or_patterns)]` to the crate attributes to enable\n+\n+error[E0658]: or-patterns syntax is experimental\n+  --> $DIR/feature-gate-or_patterns.rs:36:10\n+   |\n+LL |     let (A | B);\n+   |          ^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54883\n+   = help: add `#![feature(or_patterns)]` to the crate attributes to enable\n+\n+error[E0658]: or-patterns syntax is experimental\n+  --> $DIR/feature-gate-or_patterns.rs:37:10\n+   |\n+LL |     let (A | B,);\n+   |          ^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54883\n+   = help: add `#![feature(or_patterns)]` to the crate attributes to enable\n+\n+error[E0658]: or-patterns syntax is experimental\n+  --> $DIR/feature-gate-or_patterns.rs:38:11\n+   |\n+LL |     let A(B | C);\n+   |           ^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54883\n+   = help: add `#![feature(or_patterns)]` to the crate attributes to enable\n+\n+error[E0658]: or-patterns syntax is experimental\n+  --> $DIR/feature-gate-or_patterns.rs:39:14\n+   |\n+LL |     let E::V(B | C);\n+   |              ^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54883\n+   = help: add `#![feature(or_patterns)]` to the crate attributes to enable\n+\n+error[E0658]: or-patterns syntax is experimental\n+  --> $DIR/feature-gate-or_patterns.rs:40:17\n+   |\n+LL |     let S { f1: B | C, f2 };\n+   |                 ^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54883\n+   = help: add `#![feature(or_patterns)]` to the crate attributes to enable\n+\n+error[E0658]: or-patterns syntax is experimental\n+  --> $DIR/feature-gate-or_patterns.rs:41:20\n+   |\n+LL |     let E::V { f1: B | C, f2 };\n+   |                    ^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54883\n+   = help: add `#![feature(or_patterns)]` to the crate attributes to enable\n+\n+error[E0658]: or-patterns syntax is experimental\n+  --> $DIR/feature-gate-or_patterns.rs:42:10\n+   |\n+LL |     let [A | B];\n+   |          ^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54883\n+   = help: add `#![feature(or_patterns)]` to the crate attributes to enable\n+\n+error[E0658]: or-patterns syntax is experimental\n+  --> $DIR/feature-gate-or_patterns.rs:16:14\n+   |\n+LL | accept_pat!((p | q));\n+   |              ^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54883\n+   = help: add `#![feature(or_patterns)]` to the crate attributes to enable\n+\n+error[E0658]: or-patterns syntax is experimental\n+  --> $DIR/feature-gate-or_patterns.rs:17:14\n+   |\n+LL | accept_pat!((p | q,));\n+   |              ^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54883\n+   = help: add `#![feature(or_patterns)]` to the crate attributes to enable\n+\n+error[E0658]: or-patterns syntax is experimental\n+  --> $DIR/feature-gate-or_patterns.rs:18:16\n+   |\n+LL | accept_pat!(TS(p | q));\n+   |                ^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54883\n+   = help: add `#![feature(or_patterns)]` to the crate attributes to enable\n+\n+error[E0658]: or-patterns syntax is experimental\n+  --> $DIR/feature-gate-or_patterns.rs:19:21\n+   |\n+LL | accept_pat!(NS { f: p | q });\n+   |                     ^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54883\n+   = help: add `#![feature(or_patterns)]` to the crate attributes to enable\n+\n+error[E0658]: or-patterns syntax is experimental\n+  --> $DIR/feature-gate-or_patterns.rs:20:14\n+   |\n+LL | accept_pat!([p | q]);\n+   |              ^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/54883\n+   = help: add `#![feature(or_patterns)]` to the crate attributes to enable\n+\n+error: aborting due to 21 previous errors\n \n For more information about this error, try `rustc --explain E0658`."}]}