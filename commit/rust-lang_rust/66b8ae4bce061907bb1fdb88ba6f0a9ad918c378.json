{"sha": "66b8ae4bce061907bb1fdb88ba6f0a9ad918c378", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2YjhhZTRiY2UwNjE5MDdiYjFmZGI4OGJhNmYwYTlhZDkxOGMzNzg=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-04T03:24:53Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-23T12:34:06Z"}, "message": "extract error_struct_lit_not_allowed_here", "tree": {"sha": "fe801655a3493ca891e51ac97f5cf75d23a942a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe801655a3493ca891e51ac97f5cf75d23a942a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66b8ae4bce061907bb1fdb88ba6f0a9ad918c378", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66b8ae4bce061907bb1fdb88ba6f0a9ad918c378", "html_url": "https://github.com/rust-lang/rust/commit/66b8ae4bce061907bb1fdb88ba6f0a9ad918c378", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66b8ae4bce061907bb1fdb88ba6f0a9ad918c378/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "701b974eb9df59de29a0cff86a2b6a9026e31b5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/701b974eb9df59de29a0cff86a2b6a9026e31b5a", "html_url": "https://github.com/rust-lang/rust/commit/701b974eb9df59de29a0cff86a2b6a9026e31b5a"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "10912c84efc838f12fd686727726225ae2feaf29", "filename": "src/librustc_parse/parser/expr.rs", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/66b8ae4bce061907bb1fdb88ba6f0a9ad918c378/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66b8ae4bce061907bb1fdb88ba6f0a9ad918c378/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fexpr.rs?ref=66b8ae4bce061907bb1fdb88ba6f0a9ad918c378", "patch": "@@ -1747,22 +1747,23 @@ impl<'a> Parser<'a> {\n             // This is a struct literal, but we don't can't accept them here.\n             let expr = self.parse_struct_expr(lo, path.clone(), attrs.clone());\n             if let (Ok(expr), false) = (&expr, struct_allowed) {\n-                self.struct_span_err(expr.span, \"struct literals are not allowed here\")\n-                    .multipart_suggestion(\n-                        \"surround the struct literal with parentheses\",\n-                        vec![\n-                            (lo.shrink_to_lo(), \"(\".to_string()),\n-                            (expr.span.shrink_to_hi(), \")\".to_string()),\n-                        ],\n-                        Applicability::MachineApplicable,\n-                    )\n-                    .emit();\n+                self.error_struct_lit_not_allowed_here(lo, expr.span);\n             }\n             return Some(expr);\n         }\n         None\n     }\n \n+    fn error_struct_lit_not_allowed_here(&self, lo: Span, sp: Span) {\n+        self.struct_span_err(sp, \"struct literals are not allowed here\")\n+            .multipart_suggestion(\n+                \"surround the struct literal with parentheses\",\n+                vec![(lo.shrink_to_lo(), \"(\".to_string()), (sp.shrink_to_hi(), \")\".to_string())],\n+                Applicability::MachineApplicable,\n+            )\n+            .emit();\n+    }\n+\n     pub(super) fn parse_struct_expr(\n         &mut self,\n         lo: Span,"}]}