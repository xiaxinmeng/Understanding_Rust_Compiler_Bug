{"sha": "9471669e4695921cd8b70c8edaad143d8e84f430", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0NzE2NjllNDY5NTkyMWNkOGI3MGM4ZWRhYWQxNDNkOGU4NGY0MzA=", "commit": {"author": {"name": "Heinz N. Gies", "email": "heinz@licenser.net", "date": "2019-10-19T12:31:02Z"}, "committer": {"name": "Heinz N. Gies", "email": "heinz@licenser.net", "date": "2019-11-07T16:10:18Z"}, "message": "Exclude main from exit lint", "tree": {"sha": "1d34526ca9e32c8f1e7a3dd1cb67e07571cf0686", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d34526ca9e32c8f1e7a3dd1cb67e07571cf0686"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9471669e4695921cd8b70c8edaad143d8e84f430", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9471669e4695921cd8b70c8edaad143d8e84f430", "html_url": "https://github.com/rust-lang/rust/commit/9471669e4695921cd8b70c8edaad143d8e84f430", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9471669e4695921cd8b70c8edaad143d8e84f430/comments", "author": {"login": "Licenser", "id": 119093, "node_id": "MDQ6VXNlcjExOTA5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/119093?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Licenser", "html_url": "https://github.com/Licenser", "followers_url": "https://api.github.com/users/Licenser/followers", "following_url": "https://api.github.com/users/Licenser/following{/other_user}", "gists_url": "https://api.github.com/users/Licenser/gists{/gist_id}", "starred_url": "https://api.github.com/users/Licenser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Licenser/subscriptions", "organizations_url": "https://api.github.com/users/Licenser/orgs", "repos_url": "https://api.github.com/users/Licenser/repos", "events_url": "https://api.github.com/users/Licenser/events{/privacy}", "received_events_url": "https://api.github.com/users/Licenser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Licenser", "id": 119093, "node_id": "MDQ6VXNlcjExOTA5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/119093?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Licenser", "html_url": "https://github.com/Licenser", "followers_url": "https://api.github.com/users/Licenser/followers", "following_url": "https://api.github.com/users/Licenser/following{/other_user}", "gists_url": "https://api.github.com/users/Licenser/gists{/gist_id}", "starred_url": "https://api.github.com/users/Licenser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Licenser/subscriptions", "organizations_url": "https://api.github.com/users/Licenser/orgs", "repos_url": "https://api.github.com/users/Licenser/repos", "events_url": "https://api.github.com/users/Licenser/events{/privacy}", "received_events_url": "https://api.github.com/users/Licenser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60c2fdd0b96829df97329e29fdb92c958a3c5d4f", "url": "https://api.github.com/repos/rust-lang/rust/commits/60c2fdd0b96829df97329e29fdb92c958a3c5d4f", "html_url": "https://github.com/rust-lang/rust/commit/60c2fdd0b96829df97329e29fdb92c958a3c5d4f"}], "stats": {"total": 39, "additions": 34, "deletions": 5}, "files": [{"sha": "9952ef3ea6230c468b746e99cfc89ddd5c81a1c4", "filename": "clippy_lints/src/exit.rs", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/9471669e4695921cd8b70c8edaad143d8e84f430/clippy_lints%2Fsrc%2Fexit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9471669e4695921cd8b70c8edaad143d8e84f430/clippy_lints%2Fsrc%2Fexit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fexit.rs?ref=9471669e4695921cd8b70c8edaad143d8e84f430", "patch": "@@ -1,6 +1,6 @@\n use crate::utils::{match_def_path, paths, qpath_res, span_lint};\n use if_chain::if_chain;\n-use rustc::hir::{Expr, ExprKind};\n+use rustc::hir::{Expr, ExprKind, Item, ItemKind, Node};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint_pass, declare_tool_lint};\n \n@@ -11,8 +11,7 @@ declare_clippy_lint! {\n     /// **Why is this bad?** Ideally a program is terminated by finishing\n     /// the main function.\n     ///\n-    /// **Known problems:** This can be valid code in main() to return\n-    /// errors\n+    /// **Known problems:** None.\n     ///\n     /// **Example:**\n     /// ```ignore\n@@ -33,7 +32,29 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Exit {\n             if let Some(def_id) = qpath_res(cx, path, path_expr.hir_id).opt_def_id();\n             if match_def_path(cx, def_id, &paths::EXIT);\n             then {\n-                span_lint(cx, EXIT, e.span, \"usage of `process::exit`\");\n+                let mut parent = cx.tcx.hir().get_parent_item(e.hir_id);\n+                // We have to traverse the parents upwards until we find a function\n+                // otherwise a exit in a let or if in main would still trigger this\n+                loop{\n+                    match cx.tcx.hir().find(parent) {\n+                        Some(Node::Item(Item{ident, kind: ItemKind::Fn(..), ..})) => {\n+                            // If we found a function we check it's name if it is\n+                            // `main` we emit a lint.\n+                            if ident.name.as_str() != \"main\" {\n+                                span_lint(cx, EXIT, e.span, \"usage of `process::exit`\");\n+                            }\n+                            // We found any kind of function and can end our loop\n+                            break;\n+                        }\n+                        // If we found anything but a funciton we continue with the\n+                        // loop and go one parent up\n+                        Some(_) => {\n+                            cx.tcx.hir().get_parent_item(parent);\n+                        },\n+                        // If we found nothing we break.\n+                        None => break,\n+                    }\n+                }\n             }\n \n         }"}, {"sha": "bf8ea9bebf7eca5902f37f7cbabe4887b6df6880", "filename": "tests/ui/exit.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9471669e4695921cd8b70c8edaad143d8e84f430/tests%2Fui%2Fexit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9471669e4695921cd8b70c8edaad143d8e84f430/tests%2Fui%2Fexit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexit.rs?ref=9471669e4695921cd8b70c8edaad143d8e84f430", "patch": "@@ -1,4 +1,12 @@\n #[warn(clippy::exit)]\n+fn not_main() {\n+    std::process::exit(3);\n+}\n+\n fn main() {\n+    if true {\n+        std::process::exit(2);\n+    };\n+    not_main();\n     std::process::exit(1);\n }"}, {"sha": "756cf8837491bffcd02a381fdb9c38d5849b6eb8", "filename": "tests/ui/exit.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9471669e4695921cd8b70c8edaad143d8e84f430/tests%2Fui%2Fexit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9471669e4695921cd8b70c8edaad143d8e84f430/tests%2Fui%2Fexit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexit.stderr?ref=9471669e4695921cd8b70c8edaad143d8e84f430", "patch": "@@ -1,7 +1,7 @@\n error: usage of `process::exit`\n   --> $DIR/exit.rs:3:5\n    |\n-LL |     std::process::exit(1);\n+LL |     std::process::exit(3);\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::exit` implied by `-D warnings`"}]}