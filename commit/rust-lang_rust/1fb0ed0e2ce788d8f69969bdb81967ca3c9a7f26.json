{"sha": "1fb0ed0e2ce788d8f69969bdb81967ca3c9a7f26", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmYjBlZDBlMmNlNzg4ZDhmNjk5NjliZGI4MTk2N2NhM2M5YTdmMjY=", "commit": {"author": {"name": "Ivan Tham", "email": "pickfire@riseup.net", "date": "2020-07-10T07:36:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-10T07:36:02Z"}, "message": "Minor refactor for rustc_resolve diagnostics match\n\nUse `matches!` instead of old `if let`", "tree": {"sha": "9c0808a5f3dd4fcbf5c4b6588c507657cfa8b18a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c0808a5f3dd4fcbf5c4b6588c507657cfa8b18a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1fb0ed0e2ce788d8f69969bdb81967ca3c9a7f26", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfCBpiCRBK7hj4Ov3rIwAAdHIIABdcUfNpZq13QnOzPi0dQgG7\nsvHXp8YzN9LFl5ypi2TcBP+urNizCEqamhIoyKYJPXCHG5LB0bhne8YdPj3bIMon\nTn016Cglac0QmamlaucfrPiIQuOpPHLsd++vPHhSY7/BuS+5Jwm44LEYo2MVViAf\nv79yEDsYFdY36E00eZK8Zl6uqHyaNLbq0e+qy7hFTCM0UrrPeCxxgW1YOyLSpz1B\n3m1gnp4Au3IUmwYuGK1AqJWWkOdu/QAB9uRjJyK3HJBPX8W4AvYTdZOEkOIXmy7l\nT1uAqaw192Rn87MeVUTJPLuEI6VIvUmUu0ABHO+63EXKeU65cgIFypGATBrLpIo=\n=rQ0f\n-----END PGP SIGNATURE-----\n", "payload": "tree 9c0808a5f3dd4fcbf5c4b6588c507657cfa8b18a\nparent e59b08e62ea691916d2f063cac5aab4634128022\nauthor Ivan Tham <pickfire@riseup.net> 1594366562 +0800\ncommitter GitHub <noreply@github.com> 1594366562 +0800\n\nMinor refactor for rustc_resolve diagnostics match\n\nUse `matches!` instead of old `if let`"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1fb0ed0e2ce788d8f69969bdb81967ca3c9a7f26", "html_url": "https://github.com/rust-lang/rust/commit/1fb0ed0e2ce788d8f69969bdb81967ca3c9a7f26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1fb0ed0e2ce788d8f69969bdb81967ca3c9a7f26/comments", "author": {"login": "pickfire", "id": 4687791, "node_id": "MDQ6VXNlcjQ2ODc3OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4687791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pickfire", "html_url": "https://github.com/pickfire", "followers_url": "https://api.github.com/users/pickfire/followers", "following_url": "https://api.github.com/users/pickfire/following{/other_user}", "gists_url": "https://api.github.com/users/pickfire/gists{/gist_id}", "starred_url": "https://api.github.com/users/pickfire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pickfire/subscriptions", "organizations_url": "https://api.github.com/users/pickfire/orgs", "repos_url": "https://api.github.com/users/pickfire/repos", "events_url": "https://api.github.com/users/pickfire/events{/privacy}", "received_events_url": "https://api.github.com/users/pickfire/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e59b08e62ea691916d2f063cac5aab4634128022", "url": "https://api.github.com/repos/rust-lang/rust/commits/e59b08e62ea691916d2f063cac5aab4634128022", "html_url": "https://github.com/rust-lang/rust/commit/e59b08e62ea691916d2f063cac5aab4634128022"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "e26ff13f5c93ba04993872ec5642327719e5f74c", "filename": "src/librustc_resolve/late/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1fb0ed0e2ce788d8f69969bdb81967ca3c9a7f26/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fb0ed0e2ce788d8f69969bdb81967ca3c9a7f26/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs?ref=1fb0ed0e2ce788d8f69969bdb81967ca3c9a7f26", "patch": "@@ -100,9 +100,7 @@ impl<'a> LateResolutionVisitor<'a, '_, '_> {\n         let ident_span = path.last().map_or(span, |ident| ident.ident.span);\n         let ns = source.namespace();\n         let is_expected = &|res| source.is_expected(res);\n-        let is_enum_variant = &|res| {\n-            if let Res::Def(DefKind::Variant, _) = res { true } else { false }\n-        };\n+        let is_enum_variant = &|res| matches!(res, Res::Def(DefKind::Variant, _));\n \n         // Make the base error.\n         let expected = source.descr_expected();"}]}