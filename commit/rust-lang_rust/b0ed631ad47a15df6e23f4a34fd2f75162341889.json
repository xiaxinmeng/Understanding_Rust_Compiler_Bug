{"sha": "b0ed631ad47a15df6e23f4a34fd2f75162341889", "node_id": "C_kwDOAAsO6NoAKGIwZWQ2MzFhZDQ3YTE1ZGY2ZTIzZjRhMzRmZDJmNzUxNjIzNDE4ODk", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-10T08:47:16Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-20T15:01:37Z"}, "message": "Some hir cleanups", "tree": {"sha": "325183c2c284dd9f73ad7d1dd7d0bad639d859cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/325183c2c284dd9f73ad7d1dd7d0bad639d859cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b0ed631ad47a15df6e23f4a34fd2f75162341889", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b0ed631ad47a15df6e23f4a34fd2f75162341889", "html_url": "https://github.com/rust-lang/rust/commit/b0ed631ad47a15df6e23f4a34fd2f75162341889", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b0ed631ad47a15df6e23f4a34fd2f75162341889/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c787de3bbd307cccbfaeb56421ad7ad898330676", "url": "https://api.github.com/repos/rust-lang/rust/commits/c787de3bbd307cccbfaeb56421ad7ad898330676", "html_url": "https://github.com/rust-lang/rust/commit/c787de3bbd307cccbfaeb56421ad7ad898330676"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "cf5ebad40328a06c9c3a822e724ada89d3f38a06", "filename": "compiler/rustc_middle/src/hir/map/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b0ed631ad47a15df6e23f4a34fd2f75162341889/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0ed631ad47a15df6e23f4a34fd2f75162341889/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs?ref=b0ed631ad47a15df6e23f4a34fd2f75162341889", "patch": "@@ -408,7 +408,7 @@ impl<'hir> Map<'hir> {\n     /// item (possibly associated), a closure, or a `hir::AnonConst`.\n     pub fn body_owner(self, BodyId { hir_id }: BodyId) -> HirId {\n         let parent = self.get_parent_node(hir_id);\n-        assert!(self.find(parent).map_or(false, |n| is_body_owner(n, hir_id)));\n+        assert!(self.find(parent).map_or(false, |n| is_body_owner(n, hir_id)), \"{hir_id:?}\");\n         parent\n     }\n \n@@ -419,7 +419,7 @@ impl<'hir> Map<'hir> {\n     /// Given a `LocalDefId`, returns the `BodyId` associated with it,\n     /// if the node is a body owner, otherwise returns `None`.\n     pub fn maybe_body_owned_by(self, id: LocalDefId) -> Option<BodyId> {\n-        self.get_if_local(id.to_def_id()).map(associated_body).flatten()\n+        self.find_by_def_id(id).and_then(associated_body)\n     }\n \n     /// Given a body owner's id, returns the `BodyId` associated with it."}]}