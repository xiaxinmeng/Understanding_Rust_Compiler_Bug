{"sha": "0d60f6715df7bf7bff875b6492f06702564c25f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkNjBmNjcxNWRmN2JmN2JmZjg3NWI2NDkyZjA2NzAyNTY0YzI1ZjI=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-08-27T07:37:58Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-08-27T07:37:58Z"}, "message": "Use span_ends_with_comma to find a trailing comma in an attribute", "tree": {"sha": "19fb32707ca7432683230ff78708876ce61153eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19fb32707ca7432683230ff78708876ce61153eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d60f6715df7bf7bff875b6492f06702564c25f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d60f6715df7bf7bff875b6492f06702564c25f2", "html_url": "https://github.com/rust-lang/rust/commit/0d60f6715df7bf7bff875b6492f06702564c25f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d60f6715df7bf7bff875b6492f06702564c25f2/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1069403ca3a27d4b19f90a3efab099046602799", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1069403ca3a27d4b19f90a3efab099046602799", "html_url": "https://github.com/rust-lang/rust/commit/e1069403ca3a27d4b19f90a3efab099046602799"}], "stats": {"total": 7, "additions": 2, "deletions": 5}, "files": [{"sha": "f4b84e51a30b741972a45bf2e09145d6fd56dac6", "filename": "src/attr.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0d60f6715df7bf7bff875b6492f06702564c25f2/src%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d60f6715df7bf7bff875b6492f06702564c25f2/src%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fattr.rs?ref=0d60f6715df7bf7bff875b6492f06702564c25f2", "patch": "@@ -217,11 +217,8 @@ impl Rewrite for ast::MetaItem {\n             ast::MetaItemKind::List(ref list) => {\n                 let path = rewrite_path(context, PathContext::Type, None, &self.ident, shape)?;\n \n-                let snippet = context.snippet(self.span);\n-                // 2 = )] (this might go wrong if there is whitespace between the brackets, but\n-                // it's close enough).\n-                let snippet = snippet[..snippet.len() - 2].trim();\n-                let trailing_comma = if snippet.ends_with(',') { \",\" } else { \"\" };\n+                let has_comma = ::expr::span_ends_with_comma(context, self.span);\n+                let trailing_comma = if has_comma { \",\" } else { \"\" };\n                 let combine = list.len() == 1 && match list[0].node {\n                     ast::NestedMetaItemKind::Literal(..) => false,\n                     ast::NestedMetaItemKind::MetaItem(ref inner_meta_item) => {"}]}