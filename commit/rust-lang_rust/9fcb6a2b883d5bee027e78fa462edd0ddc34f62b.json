{"sha": "9fcb6a2b883d5bee027e78fa462edd0ddc34f62b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmY2I2YTJiODgzZDViZWUwMjdlNzhmYTQ2MmVkZDBkZGMzNGY2MmI=", "commit": {"author": {"name": "Keith Yeung", "email": "kungfukeith11@gmail.com", "date": "2016-11-28T18:08:29Z"}, "committer": {"name": "Keith Yeung", "email": "kungfukeith11@gmail.com", "date": "2016-12-04T01:12:31Z"}, "message": "Display better error messages for E0282", "tree": {"sha": "0052f27820f7738d260a38ce012b8b63cbac2225", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0052f27820f7738d260a38ce012b8b63cbac2225"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fcb6a2b883d5bee027e78fa462edd0ddc34f62b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fcb6a2b883d5bee027e78fa462edd0ddc34f62b", "html_url": "https://github.com/rust-lang/rust/commit/9fcb6a2b883d5bee027e78fa462edd0ddc34f62b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fcb6a2b883d5bee027e78fa462edd0ddc34f62b/comments", "author": {"login": "KiChjang", "id": 3248587, "node_id": "MDQ6VXNlcjMyNDg1ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/3248587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KiChjang", "html_url": "https://github.com/KiChjang", "followers_url": "https://api.github.com/users/KiChjang/followers", "following_url": "https://api.github.com/users/KiChjang/following{/other_user}", "gists_url": "https://api.github.com/users/KiChjang/gists{/gist_id}", "starred_url": "https://api.github.com/users/KiChjang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KiChjang/subscriptions", "organizations_url": "https://api.github.com/users/KiChjang/orgs", "repos_url": "https://api.github.com/users/KiChjang/repos", "events_url": "https://api.github.com/users/KiChjang/events{/privacy}", "received_events_url": "https://api.github.com/users/KiChjang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "KiChjang", "id": 3248587, "node_id": "MDQ6VXNlcjMyNDg1ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/3248587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KiChjang", "html_url": "https://github.com/KiChjang", "followers_url": "https://api.github.com/users/KiChjang/followers", "following_url": "https://api.github.com/users/KiChjang/following{/other_user}", "gists_url": "https://api.github.com/users/KiChjang/gists{/gist_id}", "starred_url": "https://api.github.com/users/KiChjang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KiChjang/subscriptions", "organizations_url": "https://api.github.com/users/KiChjang/orgs", "repos_url": "https://api.github.com/users/KiChjang/repos", "events_url": "https://api.github.com/users/KiChjang/events{/privacy}", "received_events_url": "https://api.github.com/users/KiChjang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d069e1b38c983e846ea8db1f07af729bdc79fe7", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d069e1b38c983e846ea8db1f07af729bdc79fe7", "html_url": "https://github.com/rust-lang/rust/commit/3d069e1b38c983e846ea8db1f07af729bdc79fe7"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "205a273df62d47610443dc1c78356f4c0aea29de", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/9fcb6a2b883d5bee027e78fa462edd0ddc34f62b/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fcb6a2b883d5bee027e78fa462edd0ddc34f62b/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=9fcb6a2b883d5bee027e78fa462edd0ddc34f62b", "patch": "@@ -827,12 +827,26 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n \n \n     fn need_type_info(&self, span: Span, ty: Ty<'tcx>) {\n+        let ty = self.resolve_type_vars_if_possible(&ty);\n+        let name = if let ty::TyInfer(ty::TyVar(ty_vid)) = ty.sty {\n+            let ty_vars = self.type_variables.borrow();\n+            if let TypeVariableOrigin::TypeParameterDefinition(_, name) =\n+                    *ty_vars.var_origin(ty_vid)\n+            {\n+                name.to_string()\n+            } else {\n+                ty.to_string()\n+            }\n+        } else {\n+            ty.to_string()\n+        };\n+\n         let mut err = struct_span_err!(self.tcx.sess, span, E0282,\n                                        \"unable to infer enough type information about `{}`\",\n-                                       ty);\n+                                       name);\n         err.note(\"type annotations or generic parameter binding required\");\n-        err.span_label(span, &format!(\"cannot infer type for `{}`\", ty));\n-        err.emit()\n+        err.span_label(span, &format!(\"cannot infer type for `{}`\", name));\n+        err.emit();\n     }\n \n     fn note_obligation_cause<T>(&self,"}]}