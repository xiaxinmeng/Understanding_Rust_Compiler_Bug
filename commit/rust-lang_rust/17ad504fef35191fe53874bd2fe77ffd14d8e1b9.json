{"sha": "17ad504fef35191fe53874bd2fe77ffd14d8e1b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3YWQ1MDRmZWYzNTE5MWZlNTM4NzRiZDJmZTc3ZmZkMTRkOGUxYjk=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-03-14T01:47:43Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-03-16T05:26:36Z"}, "message": "rustc: Topographically sort rust dependencies\n\nThis commit starts to topographically sort rust dependencies on the linker\ncommand line. The reason for this is that linkers use right-hand libraries to\nresolve left-hand libraries symbols, which is especially crucial for us because\nwe're using --as-needed on linux.", "tree": {"sha": "9b0e09c20f0f71bfba78e55e7bc372b5896b33f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b0e09c20f0f71bfba78e55e7bc372b5896b33f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17ad504fef35191fe53874bd2fe77ffd14d8e1b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17ad504fef35191fe53874bd2fe77ffd14d8e1b9", "html_url": "https://github.com/rust-lang/rust/commit/17ad504fef35191fe53874bd2fe77ffd14d8e1b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17ad504fef35191fe53874bd2fe77ffd14d8e1b9/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b3df19c6a02a743dae904245c6f98424e75af8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b3df19c6a02a743dae904245c6f98424e75af8c", "html_url": "https://github.com/rust-lang/rust/commit/0b3df19c6a02a743dae904245c6f98424e75af8c"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "e6628da89f52b6ff0006a0466092bd7b39b8ad23", "filename": "src/librustc/metadata/cstore.rs", "status": "modified", "additions": 30, "deletions": 2, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/17ad504fef35191fe53874bd2fe77ffd14d8e1b9/src%2Flibrustc%2Fmetadata%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17ad504fef35191fe53874bd2fe77ffd14d8e1b9/src%2Flibrustc%2Fmetadata%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcstore.rs?ref=17ad504fef35191fe53874bd2fe77ffd14d8e1b9", "patch": "@@ -143,16 +143,44 @@ impl CStore {\n         self.used_link_args.with_mut(|s| s.clear());\n     }\n \n+    // This method is used when generating the command line to pass through to\n+    // system linker. The linker expects undefined symbols on the left of the\n+    // command line to be defined in libraries on the right, not the other way\n+    // around. For more info, see some comments in the add_used_library function\n+    // below.\n+    //\n+    // In order to get this left-to-right dependency ordering, we perform a\n+    // topological sort of all crates putting the leaves at the right-most\n+    // positions.\n     pub fn get_used_crates(&self, prefer: LinkagePreference)\n                            -> Vec<(ast::CrateNum, Option<Path>)> {\n+        let mut ordering = Vec::new();\n+        fn visit(cstore: &CStore, cnum: ast::CrateNum,\n+                 ordering: &mut Vec<ast::CrateNum>) {\n+            if ordering.as_slice().contains(&cnum) { return }\n+            let meta = cstore.get_crate_data(cnum);\n+            for (_, &dep) in meta.cnum_map.borrow().get().iter() {\n+                visit(cstore, dep, ordering);\n+            }\n+            ordering.push(cnum);\n+        };\n+        for (&num, _) in self.metas.borrow().get().iter() {\n+            visit(self, num, &mut ordering);\n+        }\n+        ordering.as_mut_slice().reverse();\n+        let ordering = ordering.as_slice();\n         let used_crate_sources = self.used_crate_sources.borrow();\n-        used_crate_sources.get()\n+        let mut libs = used_crate_sources.get()\n             .iter()\n             .map(|src| (src.cnum, match prefer {\n                 RequireDynamic => src.dylib.clone(),\n                 RequireStatic => src.rlib.clone(),\n             }))\n-            .collect()\n+            .collect();\n+        libs.sort_by(|&(a, _), &(b, _)| {\n+            ordering.position_elem(&a).cmp(&ordering.position_elem(&b))\n+        });\n+        libs\n     }\n \n     pub fn add_used_library(&self, lib: ~str, kind: NativeLibaryKind) {"}]}