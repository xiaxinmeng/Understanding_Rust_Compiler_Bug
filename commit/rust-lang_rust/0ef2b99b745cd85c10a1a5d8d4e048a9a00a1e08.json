{"sha": "0ef2b99b745cd85c10a1a5d8d4e048a9a00a1e08", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlZjJiOTliNzQ1Y2Q4NWMxMGExYTVkOGQ0ZTA0OGE5YTAwYTFlMDg=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-12-23T03:24:58Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-12-23T03:24:58Z"}, "message": "Remove workspace membership check", "tree": {"sha": "67bea1d524c388d11502f9c338ab08c1edf5b6f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67bea1d524c388d11502f9c338ab08c1edf5b6f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ef2b99b745cd85c10a1a5d8d4e048a9a00a1e08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ef2b99b745cd85c10a1a5d8d4e048a9a00a1e08", "html_url": "https://github.com/rust-lang/rust/commit/0ef2b99b745cd85c10a1a5d8d4e048a9a00a1e08", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ef2b99b745cd85c10a1a5d8d4e048a9a00a1e08/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02bb1c8c973689a9ee3ac89a2d41b9b1576bb2db", "url": "https://api.github.com/repos/rust-lang/rust/commits/02bb1c8c973689a9ee3ac89a2d41b9b1576bb2db", "html_url": "https://github.com/rust-lang/rust/commit/02bb1c8c973689a9ee3ac89a2d41b9b1576bb2db"}], "stats": {"total": 13, "additions": 1, "deletions": 12}, "files": [{"sha": "270ed1446d6b0c1e07774454f3350a1f17d171b0", "filename": "src/bin/cargo-fmt.rs", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0ef2b99b745cd85c10a1a5d8d4e048a9a00a1e08/src%2Fbin%2Fcargo-fmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ef2b99b745cd85c10a1a5d8d4e048a9a00a1e08/src%2Fbin%2Fcargo-fmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-fmt.rs?ref=0ef2b99b745cd85c10a1a5d8d4e048a9a00a1e08", "patch": "@@ -252,24 +252,13 @@ fn get_targets_root_only(targets: &mut HashSet<Target>) -> Result<(), io::Error>\n \n     for package in metadata.packages {\n         for target in package.targets {\n-            if is_target_workspace_members(&target.name, &metadata.workspace_members) {\n-                targets.insert(Target::from_target(&target));\n-            }\n+            targets.insert(Target::from_target(&target));\n         }\n     }\n \n     Ok(())\n }\n \n-fn is_target_workspace_members(target: &str, workspace_members: &[String]) -> bool {\n-    workspace_members.iter().any(|member| {\n-        member\n-            .split_whitespace()\n-            .nth(0)\n-            .map_or(false, |name| name == target)\n-    })\n-}\n-\n fn get_targets_recursive(\n     manifest_path: Option<&Path>,\n     mut targets: &mut HashSet<Target>,"}]}