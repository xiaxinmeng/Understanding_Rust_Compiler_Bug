{"sha": "20679b11662908315bc2600b5103f60103a4b0ae", "node_id": "C_kwDOAAsO6NoAKDIwNjc5YjExNjYyOTA4MzE1YmMyNjAwYjUxMDNmNjAxMDNhNGIwYWU", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-03-25T23:34:49Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-03-25T23:51:08Z"}, "message": "Still-further-specializable projections are ambiguous", "tree": {"sha": "0f1673aca9b0bc6f77a3fa302ee8e54efb7bf57c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f1673aca9b0bc6f77a3fa302ee8e54efb7bf57c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20679b11662908315bc2600b5103f60103a4b0ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20679b11662908315bc2600b5103f60103a4b0ae", "html_url": "https://github.com/rust-lang/rust/commit/20679b11662908315bc2600b5103f60103a4b0ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20679b11662908315bc2600b5103f60103a4b0ae/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96bd50dd47b645efa52d1312b9cc32e507d9cd76", "url": "https://api.github.com/repos/rust-lang/rust/commits/96bd50dd47b645efa52d1312b9cc32e507d9cd76", "html_url": "https://github.com/rust-lang/rust/commit/96bd50dd47b645efa52d1312b9cc32e507d9cd76"}], "stats": {"total": 49, "additions": 48, "deletions": 1}, "files": [{"sha": "14c5b83c6ca72c264656ddb77ca59d1a2c31204c", "filename": "compiler/rustc_trait_selection/src/solve/project_goals.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20679b11662908315bc2600b5103f60103a4b0ae/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fproject_goals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20679b11662908315bc2600b5103f60103a4b0ae/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fproject_goals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fproject_goals.rs?ref=20679b11662908315bc2600b5103f60103a4b0ae", "patch": "@@ -174,7 +174,7 @@ impl<'tcx> assembly::GoalKind<'tcx> for ProjectionPredicate<'tcx> {\n                 goal.predicate.def_id(),\n                 impl_def_id\n             )? else {\n-                return ecx.evaluate_added_goals_and_make_canonical_response(Certainty::Yes);\n+                return ecx.evaluate_added_goals_and_make_canonical_response(Certainty::AMBIGUOUS);\n             };\n \n             if !assoc_def.item.defaultness(tcx).has_value() {"}, {"sha": "02150689ee5c3668749f6c2421fa4da2ab25c958", "filename": "tests/ui/traits/new-solver/specialization-unconstrained.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/20679b11662908315bc2600b5103f60103a4b0ae/tests%2Fui%2Ftraits%2Fnew-solver%2Fspecialization-unconstrained.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20679b11662908315bc2600b5103f60103a4b0ae/tests%2Fui%2Ftraits%2Fnew-solver%2Fspecialization-unconstrained.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnew-solver%2Fspecialization-unconstrained.rs?ref=20679b11662908315bc2600b5103f60103a4b0ae", "patch": "@@ -0,0 +1,22 @@\n+// compile-flags: -Ztrait-solver=next\n+\n+#![feature(specialization)]\n+//~^ WARN the feature `specialization` is incomplete\n+\n+// Do not treat the RHS of a projection-goal as an unconstrained `Certainty::Yes` response\n+// if the impl is still further specializable.\n+\n+trait Default {\n+   type Id;\n+}\n+\n+impl<T> Default for T {\n+   default type Id = T;\n+}\n+\n+fn test<T: Default<Id = U>, U>() {}\n+\n+fn main() {\n+    test::<u32, ()>();\n+    //~^ ERROR cannot satisfy `<u32 as Default>::Id == ()`\n+}"}, {"sha": "910925cbaeb0de523b54b9c53035320438657769", "filename": "tests/ui/traits/new-solver/specialization-unconstrained.stderr", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/20679b11662908315bc2600b5103f60103a4b0ae/tests%2Fui%2Ftraits%2Fnew-solver%2Fspecialization-unconstrained.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/20679b11662908315bc2600b5103f60103a4b0ae/tests%2Fui%2Ftraits%2Fnew-solver%2Fspecialization-unconstrained.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnew-solver%2Fspecialization-unconstrained.stderr?ref=20679b11662908315bc2600b5103f60103a4b0ae", "patch": "@@ -0,0 +1,25 @@\n+warning: the feature `specialization` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/specialization-unconstrained.rs:3:12\n+   |\n+LL | #![feature(specialization)]\n+   |            ^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #31844 <https://github.com/rust-lang/rust/issues/31844> for more information\n+   = help: consider using `min_specialization` instead, which is more stable and complete\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n+error[E0284]: type annotations needed: cannot satisfy `<u32 as Default>::Id == ()`\n+  --> $DIR/specialization-unconstrained.rs:20:5\n+   |\n+LL |     test::<u32, ()>();\n+   |     ^^^^^^^^^^^^^^^ cannot satisfy `<u32 as Default>::Id == ()`\n+   |\n+note: required by a bound in `test`\n+  --> $DIR/specialization-unconstrained.rs:17:20\n+   |\n+LL | fn test<T: Default<Id = U>, U>() {}\n+   |                    ^^^^^^ required by this bound in `test`\n+\n+error: aborting due to previous error; 1 warning emitted\n+\n+For more information about this error, try `rustc --explain E0284`."}]}