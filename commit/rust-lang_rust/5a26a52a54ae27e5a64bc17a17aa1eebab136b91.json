{"sha": "5a26a52a54ae27e5a64bc17a17aa1eebab136b91", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhMjZhNTJhNTRhZTI3ZTVhNjRiYzE3YTE3YWExZWViYWIxMzZiOTE=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-01-23T09:31:17Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-01-23T10:02:10Z"}, "message": "Handle generics in raw pointers", "tree": {"sha": "d36008ee7ad8a9ad043b43e7f2406acfb4064511", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d36008ee7ad8a9ad043b43e7f2406acfb4064511"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a26a52a54ae27e5a64bc17a17aa1eebab136b91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a26a52a54ae27e5a64bc17a17aa1eebab136b91", "html_url": "https://github.com/rust-lang/rust/commit/5a26a52a54ae27e5a64bc17a17aa1eebab136b91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a26a52a54ae27e5a64bc17a17aa1eebab136b91/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a80bc853095e21a19e6c94517c4a9e46ddb091f", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a80bc853095e21a19e6c94517c4a9e46ddb091f", "html_url": "https://github.com/rust-lang/rust/commit/9a80bc853095e21a19e6c94517c4a9e46ddb091f"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "b0df209d3dc526e773eebed0b82a88fcf7b2e1dd", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5a26a52a54ae27e5a64bc17a17aa1eebab136b91/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a26a52a54ae27e5a64bc17a17aa1eebab136b91/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=5a26a52a54ae27e5a64bc17a17aa1eebab136b91", "patch": "@@ -483,9 +483,17 @@ impl fmt::Display for clean::Type {\n             }\n             clean::Bottom => f.write_str(\"!\"),\n             clean::RawPointer(m, ref t) => {\n-                try!(primitive_link(f, clean::PrimitiveType::PrimitiveRawPointer,\n-                                    &format!(\"*{}\", RawMutableSpace(m))));\n-                write!(f, \"{}\", t)\n+                match **t {\n+                    clean::Generic(_) | clean::ResolvedPath {is_generic: true, ..} => {\n+                        primitive_link(f, clean::PrimitiveType::PrimitiveRawPointer,\n+                                       &format!(\"*{}{}\", RawMutableSpace(m), t))\n+                    }\n+                    _ => {\n+                        try!(primitive_link(f, clean::PrimitiveType::PrimitiveRawPointer,\n+                                            &format!(\"*{}\", RawMutableSpace(m))));\n+                        write!(f, \"{}\", t)\n+                    }\n+                }\n             }\n             clean::BorrowedRef{ lifetime: ref l, mutability, type_: ref ty} => {\n                 let lt = match *l {"}]}