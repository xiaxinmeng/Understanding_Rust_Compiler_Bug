{"sha": "dbd73f640fc49b447c7e8c9e888fe238c3c714df", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiZDczZjY0MGZjNDliNDQ3YzdlOGM5ZTg4OGZlMjM4YzNjNzE0ZGY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-02-08T23:15:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-02-08T23:15:44Z"}, "message": "Rollup merge of #58091 - phansch:compiletest2018, r=Centril\n\nTransition compiletest to Rust 2018\n\nThis transitions `src/tools/compiletest` to Rust 2018.\n\ncc #58099", "tree": {"sha": "e34f4b0f04ea5b8c96fe17e8e6d190149de5c4c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e34f4b0f04ea5b8c96fe17e8e6d190149de5c4c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbd73f640fc49b447c7e8c9e888fe238c3c714df", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcXg2gCRBK7hj4Ov3rIwAAdHIIAKRnHknwZ0J4co833yh8NWQg\nHgLtwuPu7WXrHYXkzv+jTee8KcNL8NA6ApoQr/EFYmJiBeOwOUUgl45GBJpsARSv\nYTlAAIGPgsJ1vZMZVSwkQYgztH2NNeSgLFKWU2/X13qEcMJ0fjCvHYcqW9yDbiTM\nQ+q0KN4ggZqAnA6Aqi3RQBM/e64XlSX0Rl7TRsgu6XN3ZqhDiu7lH0gmP11W8yAh\nYadDpGN8O6IzTmrwEudN3H+D1eRkYqylnEzhJ50K5IoPxLv1qrhLNehElNyP1cyF\nO1geZ8o+L6Ta68j3X83blW62wrm+kizxKWhfadwxYy+7MQmRa81XLil0Wd2rv6k=\n=xUmN\n-----END PGP SIGNATURE-----\n", "payload": "tree e34f4b0f04ea5b8c96fe17e8e6d190149de5c4c7\nparent a2ec156a5b5d58f2a73bf21b1fe037b6ac1cf5cc\nparent fab032a01dd38693834f54ec424f30f6d9e3aace\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1549667744 +0100\ncommitter GitHub <noreply@github.com> 1549667744 +0100\n\nRollup merge of #58091 - phansch:compiletest2018, r=Centril\n\nTransition compiletest to Rust 2018\n\nThis transitions `src/tools/compiletest` to Rust 2018.\n\ncc #58099\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbd73f640fc49b447c7e8c9e888fe238c3c714df", "html_url": "https://github.com/rust-lang/rust/commit/dbd73f640fc49b447c7e8c9e888fe238c3c714df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbd73f640fc49b447c7e8c9e888fe238c3c714df/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2ec156a5b5d58f2a73bf21b1fe037b6ac1cf5cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2ec156a5b5d58f2a73bf21b1fe037b6ac1cf5cc", "html_url": "https://github.com/rust-lang/rust/commit/a2ec156a5b5d58f2a73bf21b1fe037b6ac1cf5cc"}, {"sha": "fab032a01dd38693834f54ec424f30f6d9e3aace", "url": "https://api.github.com/repos/rust-lang/rust/commits/fab032a01dd38693834f54ec424f30f6d9e3aace", "html_url": "https://github.com/rust-lang/rust/commit/fab032a01dd38693834f54ec424f30f6d9e3aace"}], "stats": {"total": 86, "additions": 39, "deletions": 47}, "files": [{"sha": "00e1a53473cdad152d47e9783947c2972ca998fc", "filename": "src/tools/compiletest/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dbd73f640fc49b447c7e8c9e888fe238c3c714df/src%2Ftools%2Fcompiletest%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/dbd73f640fc49b447c7e8c9e888fe238c3c714df/src%2Ftools%2Fcompiletest%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2FCargo.toml?ref=dbd73f640fc49b447c7e8c9e888fe238c3c714df", "patch": "@@ -2,6 +2,7 @@\n authors = [\"The Rust Project Developers\"]\n name = \"compiletest\"\n version = \"0.0.0\"\n+edition = \"2018\"\n \n [dependencies]\n diff = \"0.1.10\""}, {"sha": "42afb72c91f39f20ab3044e87b8c1a9d80fdd0d2", "filename": "src/tools/compiletest/src/common.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dbd73f640fc49b447c7e8c9e888fe238c3c714df/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbd73f640fc49b447c7e8c9e888fe238c3c714df/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs?ref=dbd73f640fc49b447c7e8c9e888fe238c3c714df", "patch": "@@ -5,7 +5,7 @@ use std::path::{Path, PathBuf};\n use std::str::FromStr;\n \n use test::ColorConfig;\n-use util::PathBufExt;\n+use crate::util::PathBufExt;\n \n #[derive(Clone, Copy, PartialEq, Debug)]\n pub enum Mode {\n@@ -66,7 +66,7 @@ impl FromStr for Mode {\n }\n \n impl fmt::Display for Mode {\n-    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         let s = match *self {\n             CompileFail => \"compile-fail\",\n             RunFail => \"run-fail\","}, {"sha": "0329fb0db1422e61479174abaa09f7d211261155", "filename": "src/tools/compiletest/src/errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbd73f640fc49b447c7e8c9e888fe238c3c714df/src%2Ftools%2Fcompiletest%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbd73f640fc49b447c7e8c9e888fe238c3c714df/src%2Ftools%2Fcompiletest%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Ferrors.rs?ref=dbd73f640fc49b447c7e8c9e888fe238c3c714df", "patch": "@@ -33,7 +33,7 @@ impl FromStr for ErrorKind {\n }\n \n impl fmt::Display for ErrorKind {\n-    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         match *self {\n             ErrorKind::Help => write!(f, \"help message\"),\n             ErrorKind::Error => write!(f, \"error\"),"}, {"sha": "80a015d7aea56850919b160dad1de84777a06aa2", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dbd73f640fc49b447c7e8c9e888fe238c3c714df/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbd73f640fc49b447c7e8c9e888fe238c3c714df/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=dbd73f640fc49b447c7e8c9e888fe238c3c714df", "patch": "@@ -4,10 +4,10 @@ use std::io::prelude::*;\n use std::io::BufReader;\n use std::path::{Path, PathBuf};\n \n-use common::{self, CompareMode, Config, Mode};\n-use util;\n+use crate::common::{self, CompareMode, Config, Mode};\n+use crate::util;\n \n-use extract_gdb_version;\n+use crate::extract_gdb_version;\n \n /// Whether to ignore the test.\n #[derive(Clone, Copy, PartialEq, Debug)]"}, {"sha": "12aae303f29aaea24d41acc6aecc21881c7dd2d8", "filename": "src/tools/compiletest/src/json.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dbd73f640fc49b447c7e8c9e888fe238c3c714df/src%2Ftools%2Fcompiletest%2Fsrc%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbd73f640fc49b447c7e8c9e888fe238c3c714df/src%2Ftools%2Fcompiletest%2Fsrc%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fjson.rs?ref=dbd73f640fc49b447c7e8c9e888fe238c3c714df", "patch": "@@ -1,5 +1,5 @@\n-use errors::{Error, ErrorKind};\n-use runtest::ProcRes;\n+use crate::errors::{Error, ErrorKind};\n+use crate::runtest::ProcRes;\n use serde_json;\n use std::path::Path;\n use std::str::FromStr;"}, {"sha": "1f9b4b2ad4363263ed2372d2ff3d1265140bec63", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 8, "deletions": 14, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/dbd73f640fc49b447c7e8c9e888fe238c3c714df/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbd73f640fc49b447c7e8c9e888fe238c3c714df/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=dbd73f640fc49b447c7e8c9e888fe238c3c714df", "patch": "@@ -1,29 +1,21 @@\n #![crate_name = \"compiletest\"]\n #![feature(test)]\n-#![deny(warnings)]\n+#![deny(warnings, rust_2018_idioms)]\n \n-extern crate diff;\n-extern crate env_logger;\n-extern crate filetime;\n-extern crate getopts;\n #[cfg(unix)]\n extern crate libc;\n #[macro_use]\n extern crate log;\n-extern crate regex;\n #[macro_use]\n extern crate lazy_static;\n #[macro_use]\n extern crate serde_derive;\n-extern crate serde_json;\n extern crate test;\n-extern crate rustfix;\n-extern crate walkdir;\n \n-use common::CompareMode;\n-use common::{expected_output_path, output_base_dir, output_relative_path, UI_EXTENSIONS};\n-use common::{Config, TestPaths};\n-use common::{DebugInfoBoth, DebugInfoGdb, DebugInfoLldb, Mode, Pretty};\n+use crate::common::CompareMode;\n+use crate::common::{expected_output_path, output_base_dir, output_relative_path, UI_EXTENSIONS};\n+use crate::common::{Config, TestPaths};\n+use crate::common::{DebugInfoBoth, DebugInfoGdb, DebugInfoLldb, Mode, Pretty};\n use filetime::FileTime;\n use getopts::Options;\n use std::env;\n@@ -33,8 +25,10 @@ use std::io::{self, ErrorKind};\n use std::path::{Path, PathBuf};\n use std::process::Command;\n use test::ColorConfig;\n-use util::logv;\n+use crate::util::logv;\n use walkdir::WalkDir;\n+use env_logger;\n+use getopts;\n \n use self::header::{EarlyProps, Ignore};\n "}, {"sha": "6dfd8e97c636d6f28255af4ea19ef6e78150df09", "filename": "src/tools/compiletest/src/read2.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/dbd73f640fc49b447c7e8c9e888fe238c3c714df/src%2Ftools%2Fcompiletest%2Fsrc%2Fread2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbd73f640fc49b447c7e8c9e888fe238c3c714df/src%2Ftools%2Fcompiletest%2Fsrc%2Fread2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fread2.rs?ref=dbd73f640fc49b447c7e8c9e888fe238c3c714df", "patch": "@@ -100,18 +100,15 @@ mod imp {\n \n #[cfg(windows)]\n mod imp {\n-    extern crate miow;\n-    extern crate winapi;\n-\n     use std::io;\n     use std::os::windows::prelude::*;\n     use std::process::{ChildStderr, ChildStdout};\n     use std::slice;\n \n-    use self::miow::iocp::{CompletionPort, CompletionStatus};\n-    use self::miow::pipe::NamedPipe;\n-    use self::miow::Overlapped;\n-    use self::winapi::shared::winerror::ERROR_BROKEN_PIPE;\n+    use miow::iocp::{CompletionPort, CompletionStatus};\n+    use miow::pipe::NamedPipe;\n+    use miow::Overlapped;\n+    use winapi::shared::winerror::ERROR_BROKEN_PIPE;\n \n     struct Pipe<'a> {\n         dst: &'a mut Vec<u8>,"}, {"sha": "31529810a04dbc377e6b1e4364836f90e9cd5cd9", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/dbd73f640fc49b447c7e8c9e888fe238c3c714df/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbd73f640fc49b447c7e8c9e888fe238c3c714df/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=dbd73f640fc49b447c7e8c9e888fe238c3c714df", "patch": "@@ -1,18 +1,18 @@\n-use common::CompareMode;\n-use common::{expected_output_path, UI_EXTENSIONS, UI_FIXED, UI_STDERR, UI_STDOUT};\n-use common::{output_base_dir, output_base_name, output_testname_unique};\n-use common::{Codegen, CodegenUnits, DebugInfoBoth, DebugInfoGdb, DebugInfoLldb, Rustdoc};\n-use common::{CompileFail, Pretty, RunFail, RunPass, RunPassValgrind};\n-use common::{Config, TestPaths};\n-use common::{Incremental, MirOpt, RunMake, Ui};\n+use crate::common::CompareMode;\n+use crate::common::{expected_output_path, UI_EXTENSIONS, UI_FIXED, UI_STDERR, UI_STDOUT};\n+use crate::common::{output_base_dir, output_base_name, output_testname_unique};\n+use crate::common::{Codegen, CodegenUnits, DebugInfoBoth, DebugInfoGdb, DebugInfoLldb, Rustdoc};\n+use crate::common::{CompileFail, Pretty, RunFail, RunPass, RunPassValgrind};\n+use crate::common::{Config, TestPaths};\n+use crate::common::{Incremental, MirOpt, RunMake, Ui};\n use diff;\n-use errors::{self, Error, ErrorKind};\n+use crate::errors::{self, Error, ErrorKind};\n use filetime::FileTime;\n-use header::TestProps;\n-use json;\n+use crate::header::TestProps;\n+use crate::json;\n use regex::Regex;\n use rustfix::{apply_suggestions, get_suggestions_from_json, Filter};\n-use util::{logv, PathBufExt};\n+use crate::util::{logv, PathBufExt};\n \n use std::collections::hash_map::DefaultHasher;\n use std::collections::{HashMap, HashSet, VecDeque};\n@@ -27,8 +27,8 @@ use std::path::{Path, PathBuf};\n use std::process::{Child, Command, ExitStatus, Output, Stdio};\n use std::str;\n \n-use extract_gdb_version;\n-use is_android_gdb_target;\n+use crate::extract_gdb_version;\n+use crate::is_android_gdb_target;\n \n #[cfg(windows)]\n fn disable_error_reporting<F: FnOnce() -> R, R>(f: F) -> R {\n@@ -1937,7 +1937,7 @@ impl<'test> TestCx<'test> {\n     }\n \n     fn make_cmdline(&self, command: &Command, libpath: &str) -> String {\n-        use util;\n+        use crate::util;\n \n         // Linux and mac don't require adjusting the library search path\n         if cfg!(unix) {\n@@ -3255,7 +3255,7 @@ impl<'test> TestCx<'test> {\n     }\n \n     fn create_stamp(&self) {\n-        let stamp = ::stamp(&self.config, self.testpaths, self.revision);\n+        let stamp = crate::stamp(&self.config, self.testpaths, self.revision);\n         fs::write(&stamp, compute_stamp_hash(&self.config)).unwrap();\n     }\n }\n@@ -3311,7 +3311,7 @@ impl<T> fmt::Debug for ExpectedLine<T>\n where\n     T: AsRef<str> + fmt::Debug,\n {\n-    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {\n+    fn fmt(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result {\n         if let &ExpectedLine::Text(ref t) = self {\n             write!(formatter, \"{:?}\", t)\n         } else {\n@@ -3334,7 +3334,7 @@ fn nocomment_mir_line(line: &str) -> &str {\n }\n \n fn read2_abbreviated(mut child: Child) -> io::Result<Output> {\n-    use read2::read2;\n+    use crate::read2::read2;\n     use std::mem::replace;\n \n     const HEAD_LEN: usize = 160 * 1024;"}, {"sha": "85be2fed07567111e20d1e0ccb0db66a1d0262b5", "filename": "src/tools/compiletest/src/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbd73f640fc49b447c7e8c9e888fe238c3c714df/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbd73f640fc49b447c7e8c9e888fe238c3c714df/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs?ref=dbd73f640fc49b447c7e8c9e888fe238c3c714df", "patch": "@@ -1,7 +1,7 @@\n use std::ffi::OsStr;\n use std::env;\n use std::path::PathBuf;\n-use common::Config;\n+use crate::common::Config;\n \n /// Conversion table from triple OS name to Rust SYSNAME\n const OS_TABLE: &'static [(&'static str, &'static str)] = &["}]}