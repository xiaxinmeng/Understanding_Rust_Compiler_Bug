{"sha": "e48a7b8d069ef7b8364b730bf37b01b19f21a3b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0OGE3YjhkMDY5ZWY3YjgzNjRiNzMwYmYzN2IwMWIxOWYyMWEzYjA=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-05-03T08:48:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-03T08:48:08Z"}, "message": "Rollup merge of #71813 - ecstatic-morse:issue-71734, r=tmandry\n\nDecode qualifs for associated const defaults\n\nFixes #71734.\n\nWe encode qualifs for associated constants, but never expected to decode the qualifs for defaulted associated consts. Fix this, and test that associated const defaults have the correct qualifs cross-crate.\n\nr? @tmandry", "tree": {"sha": "d48e6d23573a7738dd831a1184de3c79c5d673b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d48e6d23573a7738dd831a1184de3c79c5d673b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e48a7b8d069ef7b8364b730bf37b01b19f21a3b0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeroVJCRBK7hj4Ov3rIwAAdHIIAE23qJ3zK+k+rr8dzz8YOhUV\nmYdzVWSrRSpKAxAqJHcPouqxVlRjfwR8bQZTsaDkv028F6VtMgWKi55GL/FkdNbv\nAp8Ti56eWfSfPofCADMCW5xv+gItHSptdpupiR/35eWO+LCeIOH7OlrTWqsggals\nZRK9+b1wl3B1gnnXL8kwX2/9xeqJ3Ie7WsNIQz8MKoxD4ZC/XszpRR/zo5xUlEwn\nJJY72+aBC4ZERMT72koWiEW72LWHPejap3OH3oJhoGhFwrWF31jtETzhRRqy94l8\nJqOGFX8OZ8Myzhntn9icZjsdc5mbQzZSSI7+1iK6H6N+yB/P+ouF//Y8CHEzv7o=\n=2Fcj\n-----END PGP SIGNATURE-----\n", "payload": "tree d48e6d23573a7738dd831a1184de3c79c5d673b2\nparent 223194127ebad2b0793cd472da0200d17d29c919\nparent 14a2c8d042e1da811d96b843922e569f2cd5e283\nauthor Dylan DPC <dylan.dpc@gmail.com> 1588495688 +0530\ncommitter GitHub <noreply@github.com> 1588495688 +0530\n\nRollup merge of #71813 - ecstatic-morse:issue-71734, r=tmandry\n\nDecode qualifs for associated const defaults\n\nFixes #71734.\n\nWe encode qualifs for associated constants, but never expected to decode the qualifs for defaulted associated consts. Fix this, and test that associated const defaults have the correct qualifs cross-crate.\n\nr? @tmandry\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e48a7b8d069ef7b8364b730bf37b01b19f21a3b0", "html_url": "https://github.com/rust-lang/rust/commit/e48a7b8d069ef7b8364b730bf37b01b19f21a3b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e48a7b8d069ef7b8364b730bf37b01b19f21a3b0/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "223194127ebad2b0793cd472da0200d17d29c919", "url": "https://api.github.com/repos/rust-lang/rust/commits/223194127ebad2b0793cd472da0200d17d29c919", "html_url": "https://github.com/rust-lang/rust/commit/223194127ebad2b0793cd472da0200d17d29c919"}, {"sha": "14a2c8d042e1da811d96b843922e569f2cd5e283", "url": "https://api.github.com/repos/rust-lang/rust/commits/14a2c8d042e1da811d96b843922e569f2cd5e283", "html_url": "https://github.com/rust-lang/rust/commit/14a2c8d042e1da811d96b843922e569f2cd5e283"}], "stats": {"total": 50, "additions": 45, "deletions": 5}, "files": [{"sha": "04f17230717d978657c117f6b71572e9c879606e", "filename": "src/librustc_metadata/rmeta/decoder.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e48a7b8d069ef7b8364b730bf37b01b19f21a3b0/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e48a7b8d069ef7b8364b730bf37b01b19f21a3b0/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs?ref=e48a7b8d069ef7b8364b730bf37b01b19f21a3b0", "patch": "@@ -1123,11 +1123,13 @@ impl<'a, 'tcx> CrateMetadataRef<'a> {\n         match self.kind(id) {\n             EntryKind::Const(qualif, _)\n             | EntryKind::AssocConst(\n-                AssocContainer::ImplDefault | AssocContainer::ImplFinal,\n+                AssocContainer::ImplDefault\n+                | AssocContainer::ImplFinal\n+                | AssocContainer::TraitWithDefault,\n                 qualif,\n                 _,\n             ) => qualif,\n-            _ => bug!(),\n+            _ => bug!(\"mir_const_qualif: unexpected kind\"),\n         }\n     }\n "}, {"sha": "b438bcd9fb5eb0169dd73ec67edde4d25b15cb6f", "filename": "src/test/ui/consts/const_in_pattern/auxiliary/consts.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e48a7b8d069ef7b8364b730bf37b01b19f21a3b0/src%2Ftest%2Fui%2Fconsts%2Fconst_in_pattern%2Fauxiliary%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e48a7b8d069ef7b8364b730bf37b01b19f21a3b0/src%2Ftest%2Fui%2Fconsts%2Fconst_in_pattern%2Fauxiliary%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_in_pattern%2Fauxiliary%2Fconsts.rs?ref=e48a7b8d069ef7b8364b730bf37b01b19f21a3b0", "patch": "@@ -9,3 +9,8 @@ impl PartialEq for CustomEq {\n \n pub const NONE: Option<CustomEq> = None;\n pub const SOME: Option<CustomEq> = Some(CustomEq);\n+\n+pub trait AssocConst {\n+    const NONE: Option<CustomEq> = None;\n+    const SOME: Option<CustomEq> = Some(CustomEq);\n+}"}, {"sha": "05c53e5edccc596fbed49c82bb624c7f761df84b", "filename": "src/test/ui/consts/const_in_pattern/cross-crate-fail.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e48a7b8d069ef7b8364b730bf37b01b19f21a3b0/src%2Ftest%2Fui%2Fconsts%2Fconst_in_pattern%2Fcross-crate-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e48a7b8d069ef7b8364b730bf37b01b19f21a3b0/src%2Ftest%2Fui%2Fconsts%2Fconst_in_pattern%2Fcross-crate-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_in_pattern%2Fcross-crate-fail.rs?ref=e48a7b8d069ef7b8364b730bf37b01b19f21a3b0", "patch": "@@ -4,12 +4,24 @@\n \n extern crate consts;\n \n+struct Defaulted;\n+impl consts::AssocConst for Defaulted {}\n+\n fn main() {\n+    let _ = Defaulted;\n     match None {\n         consts::SOME => panic!(),\n         //~^ must be annotated with `#[derive(PartialEq, Eq)]`\n         //~| must be annotated with `#[derive(PartialEq, Eq)]`\n \n         _ => {}\n     }\n+\n+    match None {\n+        <Defaulted as consts::AssocConst>::SOME  => panic!(),\n+        //~^ must be annotated with `#[derive(PartialEq, Eq)]`\n+        //~| must be annotated with `#[derive(PartialEq, Eq)]`\n+\n+        _ => {}\n+    }\n }"}, {"sha": "5d147e32f5a8687eb2ed1406d63e01bdf7f0cca8", "filename": "src/test/ui/consts/const_in_pattern/cross-crate-fail.stderr", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e48a7b8d069ef7b8364b730bf37b01b19f21a3b0/src%2Ftest%2Fui%2Fconsts%2Fconst_in_pattern%2Fcross-crate-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e48a7b8d069ef7b8364b730bf37b01b19f21a3b0/src%2Ftest%2Fui%2Fconsts%2Fconst_in_pattern%2Fcross-crate-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_in_pattern%2Fcross-crate-fail.stderr?ref=e48a7b8d069ef7b8364b730bf37b01b19f21a3b0", "patch": "@@ -1,14 +1,26 @@\n error: to use a constant of type `consts::CustomEq` in a pattern, `consts::CustomEq` must be annotated with `#[derive(PartialEq, Eq)]`\n-  --> $DIR/cross-crate-fail.rs:9:9\n+  --> $DIR/cross-crate-fail.rs:13:9\n    |\n LL |         consts::SOME => panic!(),\n    |         ^^^^^^^^^^^^\n \n error: to use a constant of type `consts::CustomEq` in a pattern, `consts::CustomEq` must be annotated with `#[derive(PartialEq, Eq)]`\n-  --> $DIR/cross-crate-fail.rs:9:9\n+  --> $DIR/cross-crate-fail.rs:21:9\n+   |\n+LL |         <Defaulted as consts::AssocConst>::SOME  => panic!(),\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: to use a constant of type `consts::CustomEq` in a pattern, `consts::CustomEq` must be annotated with `#[derive(PartialEq, Eq)]`\n+  --> $DIR/cross-crate-fail.rs:13:9\n    |\n LL |         consts::SOME => panic!(),\n    |         ^^^^^^^^^^^^\n \n-error: aborting due to 2 previous errors\n+error: to use a constant of type `consts::CustomEq` in a pattern, `consts::CustomEq` must be annotated with `#[derive(PartialEq, Eq)]`\n+  --> $DIR/cross-crate-fail.rs:21:9\n+   |\n+LL |         <Defaulted as consts::AssocConst>::SOME  => panic!(),\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 4 previous errors\n "}, {"sha": "1d8ecf8ae6640e10ac8aef8d87c47e2c8b3b9984", "filename": "src/test/ui/consts/const_in_pattern/cross-crate-pass.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e48a7b8d069ef7b8364b730bf37b01b19f21a3b0/src%2Ftest%2Fui%2Fconsts%2Fconst_in_pattern%2Fcross-crate-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e48a7b8d069ef7b8364b730bf37b01b19f21a3b0/src%2Ftest%2Fui%2Fconsts%2Fconst_in_pattern%2Fcross-crate-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_in_pattern%2Fcross-crate-pass.rs?ref=e48a7b8d069ef7b8364b730bf37b01b19f21a3b0", "patch": "@@ -6,9 +6,18 @@\n extern crate consts;\n use consts::CustomEq;\n \n+struct Defaulted;\n+impl consts::AssocConst for Defaulted {}\n+\n fn main() {\n+    let _ = Defaulted;\n     match Some(CustomEq) {\n         consts::NONE => panic!(),\n         _ => {}\n     }\n+\n+    match Some(CustomEq) {\n+        <Defaulted as consts::AssocConst>::NONE  => panic!(),\n+        _ => {}\n+    }\n }"}]}