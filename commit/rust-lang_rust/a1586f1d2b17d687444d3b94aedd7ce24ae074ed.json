{"sha": "a1586f1d2b17d687444d3b94aedd7ce24ae074ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExNTg2ZjFkMmIxN2Q2ODc0NDRkM2I5NGFlZGQ3Y2UyNGFlMDc0ZWQ=", "commit": {"author": {"name": "Markus Westerlind", "email": "markus.westerlind@imperva.com", "date": "2020-01-13T08:17:10Z"}, "committer": {"name": "Markus Westerlind", "email": "markus.westerlind@imperva.com", "date": "2020-01-13T08:17:10Z"}, "message": "Explain fold_list", "tree": {"sha": "eb229b47e927aae5f5efba960d70e3cf51ca1456", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb229b47e927aae5f5efba960d70e3cf51ca1456"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1586f1d2b17d687444d3b94aedd7ce24ae074ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1586f1d2b17d687444d3b94aedd7ce24ae074ed", "html_url": "https://github.com/rust-lang/rust/commit/a1586f1d2b17d687444d3b94aedd7ce24ae074ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1586f1d2b17d687444d3b94aedd7ce24ae074ed/comments", "author": {"login": "Marwes", "id": 957312, "node_id": "MDQ6VXNlcjk1NzMxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/957312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Marwes", "html_url": "https://github.com/Marwes", "followers_url": "https://api.github.com/users/Marwes/followers", "following_url": "https://api.github.com/users/Marwes/following{/other_user}", "gists_url": "https://api.github.com/users/Marwes/gists{/gist_id}", "starred_url": "https://api.github.com/users/Marwes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Marwes/subscriptions", "organizations_url": "https://api.github.com/users/Marwes/orgs", "repos_url": "https://api.github.com/users/Marwes/repos", "events_url": "https://api.github.com/users/Marwes/events{/privacy}", "received_events_url": "https://api.github.com/users/Marwes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Marwes", "id": 957312, "node_id": "MDQ6VXNlcjk1NzMxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/957312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Marwes", "html_url": "https://github.com/Marwes", "followers_url": "https://api.github.com/users/Marwes/followers", "following_url": "https://api.github.com/users/Marwes/following{/other_user}", "gists_url": "https://api.github.com/users/Marwes/gists{/gist_id}", "starred_url": "https://api.github.com/users/Marwes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Marwes/subscriptions", "organizations_url": "https://api.github.com/users/Marwes/orgs", "repos_url": "https://api.github.com/users/Marwes/repos", "events_url": "https://api.github.com/users/Marwes/events{/privacy}", "received_events_url": "https://api.github.com/users/Marwes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "898ed636a3f44e3aa0156c1bb5ebc86b08aef5fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/898ed636a3f44e3aa0156c1bb5ebc86b08aef5fa", "html_url": "https://github.com/rust-lang/rust/commit/898ed636a3f44e3aa0156c1bb5ebc86b08aef5fa"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "eade5154c8ad0cabe6632efdcf0febd6a602bf38", "filename": "src/librustc/ty/structural_impls.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a1586f1d2b17d687444d3b94aedd7ce24ae074ed/src%2Flibrustc%2Fty%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1586f1d2b17d687444d3b94aedd7ce24ae074ed/src%2Flibrustc%2Fty%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fstructural_impls.rs?ref=a1586f1d2b17d687444d3b94aedd7ce24ae074ed", "patch": "@@ -1061,6 +1061,11 @@ impl<'tcx> TypeFoldable<'tcx> for InferConst<'tcx> {\n     }\n }\n \n+// Does the equivalent of\n+// ```\n+// let v = self.iter().map(|p| p.fold_with(folder)).collect::<SmallVec<[_; 8]>>();\n+// folder.tcx().intern_*(&v)\n+// ```\n fn fold_list<'tcx, F, T>(\n     list: &'tcx ty::List<T>,\n     folder: &mut F,"}]}