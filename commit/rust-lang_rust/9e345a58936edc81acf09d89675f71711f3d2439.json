{"sha": "9e345a58936edc81acf09d89675f71711f3d2439", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllMzQ1YTU4OTM2ZWRjODFhY2YwOWQ4OTY3NWY3MTcxMWYzZDI0Mzk=", "commit": {"author": {"name": "1000teslas", "email": "47207223+1000teslas@users.noreply.github.com", "date": "2021-01-09T08:46:19Z"}, "committer": {"name": "1000teslas", "email": "47207223+1000teslas@users.noreply.github.com", "date": "2021-01-10T05:47:41Z"}, "message": "Revise async block error message", "tree": {"sha": "422c4739be6cd461aa1ed1122f5d43e0ba09b5cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/422c4739be6cd461aa1ed1122f5d43e0ba09b5cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e345a58936edc81acf09d89675f71711f3d2439", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e345a58936edc81acf09d89675f71711f3d2439", "html_url": "https://github.com/rust-lang/rust/commit/9e345a58936edc81acf09d89675f71711f3d2439", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e345a58936edc81acf09d89675f71711f3d2439/comments", "author": {"login": "1000teslas", "id": 47207223, "node_id": "MDQ6VXNlcjQ3MjA3MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/47207223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1000teslas", "html_url": "https://github.com/1000teslas", "followers_url": "https://api.github.com/users/1000teslas/followers", "following_url": "https://api.github.com/users/1000teslas/following{/other_user}", "gists_url": "https://api.github.com/users/1000teslas/gists{/gist_id}", "starred_url": "https://api.github.com/users/1000teslas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1000teslas/subscriptions", "organizations_url": "https://api.github.com/users/1000teslas/orgs", "repos_url": "https://api.github.com/users/1000teslas/repos", "events_url": "https://api.github.com/users/1000teslas/events{/privacy}", "received_events_url": "https://api.github.com/users/1000teslas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "1000teslas", "id": 47207223, "node_id": "MDQ6VXNlcjQ3MjA3MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/47207223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1000teslas", "html_url": "https://github.com/1000teslas", "followers_url": "https://api.github.com/users/1000teslas/followers", "following_url": "https://api.github.com/users/1000teslas/following{/other_user}", "gists_url": "https://api.github.com/users/1000teslas/gists{/gist_id}", "starred_url": "https://api.github.com/users/1000teslas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1000teslas/subscriptions", "organizations_url": "https://api.github.com/users/1000teslas/orgs", "repos_url": "https://api.github.com/users/1000teslas/repos", "events_url": "https://api.github.com/users/1000teslas/events{/privacy}", "received_events_url": "https://api.github.com/users/1000teslas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b9c8ff6b37e0fd9143ba0f5a1fd11057880cebc", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b9c8ff6b37e0fd9143ba0f5a1fd11057880cebc", "html_url": "https://github.com/rust-lang/rust/commit/2b9c8ff6b37e0fd9143ba0f5a1fd11057880cebc"}], "stats": {"total": 41, "additions": 16, "deletions": 25}, "files": [{"sha": "85ea70cefba3ff6daa229cf57656350142a1efee", "filename": "compiler/rustc_mir/src/borrow_check/diagnostics/conflict_errors.rs", "status": "modified", "additions": 15, "deletions": 16, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/9e345a58936edc81acf09d89675f71711f3d2439/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e345a58936edc81acf09d89675f71711f3d2439/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs?ref=9e345a58936edc81acf09d89675f71711f3d2439", "patch": "@@ -1324,33 +1324,32 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n             Applicability::MachineApplicable,\n         );\n \n-        let msg = match category {\n+        match category {\n             ConstraintCategory::Return(_) | ConstraintCategory::OpaqueType => {\n-                format!(\"{} is returned here\", kind)\n+                let msg = format!(\"{} is returned here\", kind);\n+                err.span_note(constraint_span, &msg);\n             }\n             ConstraintCategory::CallArgument => {\n                 fr_name.highlight_region_name(&mut err);\n-                format!(\"function requires argument type to outlive `{}`\", fr_name)\n+                if matches!(use_span.generator_kind(), Some(generator_kind) \n+                    if matches!(generator_kind, GeneratorKind::Async(_)))\n+                {\n+                    err.note(\"async blocks are not executed immediately and either must take a \\\n+                    reference or ownership of outside variables they use\");\n+                    err.help(\"see https://rust-lang.github.io/async-book/03_async_await/01_chapter.html#awaiting-on-a-multithreaded-executor \\\n+                        for more information\");\n+                } else {\n+                    let msg = format!(\"function requires argument type to outlive `{}`\", fr_name);\n+                    err.span_note(constraint_span, &msg);\n+                }\n             }\n             _ => bug!(\n                 \"report_escaping_closure_capture called with unexpected constraint \\\n                  category: `{:?}`\",\n                 category\n             ),\n-        };\n-        err.span_note(constraint_span, &msg);\n-        if let ConstraintCategory::CallArgument = category {\n-            if let Some(generator_kind) = use_span.generator_kind() {\n-                if let GeneratorKind::Async(_) = generator_kind {\n-                    err.note(\n-                        \"borrows cannot be held across a yield point, because the stack \\\n-                        space of the current function is not preserved\",\n-                    );\n-                    err.help(\"see https://rust-lang.github.io/async-book/03_async_await/01_chapter.html#awaiting-on-a-multithreaded-executor \\\n-                        for more information\");\n-                }\n-            }\n         }\n+\n         err\n     }\n "}, {"sha": "4468975b2f5c3978b316817bd25cd46b1b2c7de0", "filename": "src/test/ui/async-await/issues/issue-78938-async-block.stderr", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9e345a58936edc81acf09d89675f71711f3d2439/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-78938-async-block.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9e345a58936edc81acf09d89675f71711f3d2439/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-78938-async-block.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-78938-async-block.stderr?ref=9e345a58936edc81acf09d89675f71711f3d2439", "patch": "@@ -8,15 +8,7 @@ LL | |         game_loop(Arc::clone(&room_ref))\n LL | |     });\n    | |_____^ may outlive borrowed value `room_ref`\n    |\n-note: function requires argument type to outlive `'static`\n-  --> $DIR/issue-78938-async-block.rs:8:33\n-   |\n-LL |       let gameloop_handle = spawn(async {\n-   |  _________________________________^\n-LL | |         game_loop(Arc::clone(&room_ref))\n-LL | |     });\n-   | |_____^\n-   = note: borrows cannot be held across a yield point, because the stack space of the current function is not preserved\n+   = note: async blocks are not executed immediately and either must take a reference or ownership of outside variables they use\n    = help: see https://rust-lang.github.io/async-book/03_async_await/01_chapter.html#awaiting-on-a-multithreaded-executor for more information\n help: to force the async block to take ownership of `room_ref` (and any other referenced variables), use the `move` keyword\n    |"}]}