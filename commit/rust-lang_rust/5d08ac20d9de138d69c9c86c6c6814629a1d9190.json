{"sha": "5d08ac20d9de138d69c9c86c6c6814629a1d9190", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkMDhhYzIwZDlkZTEzOGQ2OWM5Yzg2YzZjNjgxNDYyOWExZDkxOTA=", "commit": {"author": {"name": "Anatol Ulrich", "email": "anatol.ulrich@ferrous-systems.com", "date": "2021-09-09T00:16:08Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2021-09-09T15:02:53Z"}, "message": "implement #10070 in runnables\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "f16ba4bfe7639e08750167c247915334538b3af1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f16ba4bfe7639e08750167c247915334538b3af1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d08ac20d9de138d69c9c86c6c6814629a1d9190", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d08ac20d9de138d69c9c86c6c6814629a1d9190", "html_url": "https://github.com/rust-lang/rust/commit/5d08ac20d9de138d69c9c86c6c6814629a1d9190", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d08ac20d9de138d69c9c86c6c6814629a1d9190/comments", "author": null, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cbc13ae6bda61d4313297cd1e5c0213653613856", "url": "https://api.github.com/repos/rust-lang/rust/commits/cbc13ae6bda61d4313297cd1e5c0213653613856", "html_url": "https://github.com/rust-lang/rust/commit/cbc13ae6bda61d4313297cd1e5c0213653613856"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "6b74ec3430de57c5319fc344718c28800f905eab", "filename": "crates/ide/src/runnables.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/5d08ac20d9de138d69c9c86c6c6814629a1d9190/crates%2Fide%2Fsrc%2Frunnables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d08ac20d9de138d69c9c86c6c6814629a1d9190/crates%2Fide%2Fsrc%2Frunnables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Frunnables.rs?ref=5d08ac20d9de138d69c9c86c6c6814629a1d9190", "patch": "@@ -229,15 +229,20 @@ fn find_related_tests(\n         for (file_id, refs) in refs.into_iter().flat_map(|refs| refs.references) {\n             let file = sema.parse(file_id);\n             let file = file.syntax();\n-            let functions = refs.iter().filter_map(|(range, _)| {\n-                let token = file.token_at_offset(range.start()).next()?;\n-                let token = sema.descend_into_macros(token);\n-                token\n-                    .ancestors()\n-                    .find_map(ast::Fn::cast)\n-                    .map(|f| hir::InFile::new(sema.hir_file_for(f.syntax()), f))\n+\n+            // create flattened vec of tokens\n+            let tokens = refs.iter().flat_map(|(range, _)| {\n+                match file.token_at_offset(range.start()).next() {\n+                    Some(token) => sema.descend_into_macros_many(token),\n+                    None => Default::default(),\n+                }\n             });\n \n+            // find first suitable ancestor\n+            let functions = tokens\n+                .filter_map(|token| token.ancestors().find_map(ast::Fn::cast))\n+                .map(|f| hir::InFile::new(sema.hir_file_for(f.syntax()), f));\n+\n             for fn_def in functions {\n                 // #[test/bench] expands to just the item causing us to lose the attribute, so recover them by going out of the attribute\n                 let InFile { value: fn_def, .. } = &fn_def.node_with_attributes(sema.db);"}]}