{"sha": "7eafad96ad301f69eff104bc6f3e6b39fb29a9d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlYWZhZDk2YWQzMDFmNjllZmYxMDRiYzZmM2U2YjM5ZmIyOWE5ZDI=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-07-03T09:48:21Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-07-03T09:48:21Z"}, "message": "Implement Spanned for ast::StructField and ast::Field", "tree": {"sha": "6ddf2aa25e9646cd7a59a7294ce435a3805c8fc3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ddf2aa25e9646cd7a59a7294ce435a3805c8fc3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7eafad96ad301f69eff104bc6f3e6b39fb29a9d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7eafad96ad301f69eff104bc6f3e6b39fb29a9d2", "html_url": "https://github.com/rust-lang/rust/commit/7eafad96ad301f69eff104bc6f3e6b39fb29a9d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7eafad96ad301f69eff104bc6f3e6b39fb29a9d2/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f028cbe760a7bf1930215bed3c61d7ec58bb4e8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f028cbe760a7bf1930215bed3c61d7ec58bb4e8a", "html_url": "https://github.com/rust-lang/rust/commit/f028cbe760a7bf1930215bed3c61d7ec58bb4e8a"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "94aef6f5c48a015dac316a15513189b2a31f09bf", "filename": "src/lib.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/7eafad96ad301f69eff104bc6f3e6b39fb29a9d2/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7eafad96ad301f69eff104bc6f3e6b39fb29a9d2/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=7eafad96ad301f69eff104bc6f3e6b39fb29a9d2", "patch": "@@ -48,6 +48,7 @@ use filemap::FileMap;\n use visitor::FmtVisitor;\n use config::Config;\n use checkstyle::{output_header, output_footer};\n+use utils::mk_sp;\n \n pub use self::summary::Summary;\n \n@@ -112,6 +113,28 @@ impl Spanned for ast::Arg {\n     }\n }\n \n+impl Spanned for ast::StructField {\n+    fn span(&self) -> Span {\n+        if self.attrs.is_empty() {\n+            mk_sp(self.span.lo, self.ty.span.hi)\n+        } else {\n+            // Include attributes and doc comments, if present\n+            mk_sp(self.attrs[0].span.lo, self.ty.span.hi)\n+        }\n+    }\n+}\n+\n+impl Spanned for ast::Field {\n+    fn span(&self) -> Span {\n+        let lo = if self.attrs.is_empty() {\n+            self.span.lo\n+        } else {\n+            self.attrs[0].span.lo\n+        };\n+        mk_sp(lo, self.span.hi)\n+    }\n+}\n+\n #[derive(Copy, Clone, Debug)]\n pub struct Indent {\n     // Width of the block indent, in characters. Must be a multiple of"}]}