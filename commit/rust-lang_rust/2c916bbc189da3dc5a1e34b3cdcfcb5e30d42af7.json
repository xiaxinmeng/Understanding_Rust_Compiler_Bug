{"sha": "2c916bbc189da3dc5a1e34b3cdcfcb5e30d42af7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjOTE2YmJjMTg5ZGEzZGM1YTFlMzRiM2NkY2ZjYjVlMzBkNDJhZjc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-09-21T10:30:55Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-09-21T10:30:55Z"}, "message": "Document SemanticScope", "tree": {"sha": "faa9a8c34e243f11cddd448ae83026e35767a04f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/faa9a8c34e243f11cddd448ae83026e35767a04f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c916bbc189da3dc5a1e34b3cdcfcb5e30d42af7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c916bbc189da3dc5a1e34b3cdcfcb5e30d42af7", "html_url": "https://github.com/rust-lang/rust/commit/2c916bbc189da3dc5a1e34b3cdcfcb5e30d42af7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c916bbc189da3dc5a1e34b3cdcfcb5e30d42af7/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b52d3181a44a0ccedd30c52e70ce84231918e72", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b52d3181a44a0ccedd30c52e70ce84231918e72", "html_url": "https://github.com/rust-lang/rust/commit/3b52d3181a44a0ccedd30c52e70ce84231918e72"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "c23a52b7c73b11c1e73ce0923c3b1c43bfeea3c1", "filename": "crates/hir/src/semantics.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/2c916bbc189da3dc5a1e34b3cdcfcb5e30d42af7/crates%2Fhir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c916bbc189da3dc5a1e34b3cdcfcb5e30d42af7/crates%2Fhir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsemantics.rs?ref=2c916bbc189da3dc5a1e34b3cdcfcb5e30d42af7", "patch": "@@ -697,6 +697,25 @@ fn find_root(node: &SyntaxNode) -> SyntaxNode {\n     node.ancestors().last().unwrap()\n }\n \n+/// `SemanticScope` encapsulates the notion of a scope (the set of visible\n+/// names) at a particular program point.\n+///\n+/// It is a bit tricky, as scopes do not really exist inside the compiler.\n+/// Rather, the compiler directly computes for each reference the definition it\n+/// refers to. It might transiently compute the explicit scope map while doing\n+/// so, but, generally, this is not something left after the analysis.\n+///\n+/// However, we do very much need explicit scopes for IDE purposes --\n+/// completion, at its core, lists the contents of the current scope. Notion of\n+/// scope is also useful to answer question like \"what would be the meaning of\n+/// this piece of code if we insert into this position?\".\n+///\n+/// So `SemanticsScope` is constructed from a specific program point (a syntax\n+/// node or just a raw offset) and provides access to the set of visible names\n+/// in on a somewhat best-effort basis.\n+///\n+/// Note that if you are wondering \"what this specific existing name means?\",\n+/// you'd better use the `resolve_` family of methods.\n #[derive(Debug)]\n pub struct SemanticsScope<'a> {\n     pub db: &'a dyn HirDatabase,"}]}