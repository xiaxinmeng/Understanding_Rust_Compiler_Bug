{"sha": "9983e0fc634e11717eb457a73fe84cfc9409ba8f", "node_id": "C_kwDOAAsO6NoAKDk5ODNlMGZjNjM0ZTExNzE3ZWI0NTdhNzNmZTg0Y2ZjOTQwOWJhOGY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-28T15:28:57Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-28T15:28:57Z"}, "message": "Auto merge of #1927 - RalfJung:array-align-tests, r=RalfJung\n\nadd tests for alignment on array initialization\n\nThis adds regression tests for https://github.com/rust-lang/miri/issues/1925, https://github.com/rust-lang/miri/issues/1919.", "tree": {"sha": "aad14bc7a67f256d2d8a74e5f58ef7bc1788570a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aad14bc7a67f256d2d8a74e5f58ef7bc1788570a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9983e0fc634e11717eb457a73fe84cfc9409ba8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9983e0fc634e11717eb457a73fe84cfc9409ba8f", "html_url": "https://github.com/rust-lang/rust/commit/9983e0fc634e11717eb457a73fe84cfc9409ba8f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9983e0fc634e11717eb457a73fe84cfc9409ba8f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e62924e37d76ed69ab6e8a61eff5931449b975db", "url": "https://api.github.com/repos/rust-lang/rust/commits/e62924e37d76ed69ab6e8a61eff5931449b975db", "html_url": "https://github.com/rust-lang/rust/commit/e62924e37d76ed69ab6e8a61eff5931449b975db"}, {"sha": "ee666d8987f29a86a8bd37a85aecc9608ba2d2eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee666d8987f29a86a8bd37a85aecc9608ba2d2eb", "html_url": "https://github.com/rust-lang/rust/commit/ee666d8987f29a86a8bd37a85aecc9608ba2d2eb"}], "stats": {"total": 48, "additions": 47, "deletions": 1}, "files": [{"sha": "cc01c7ccb4a884df81c6d3482f60dc5d6ef5a485", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9983e0fc634e11717eb457a73fe84cfc9409ba8f/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/9983e0fc634e11717eb457a73fe84cfc9409ba8f/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=9983e0fc634e11717eb457a73fe84cfc9409ba8f", "patch": "@@ -1 +1 @@\n-686e313a9aa14107c8631ffe48fa09110a7692db\n+58f9efd36de5669ab731ec7ebf565999ff17b159"}, {"sha": "1602b5638e903eb22b7717529f3d6af1c7be71a3", "filename": "tests/run-pass/async-fn.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9983e0fc634e11717eb457a73fe84cfc9409ba8f/tests%2Frun-pass%2Fasync-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9983e0fc634e11717eb457a73fe84cfc9409ba8f/tests%2Frun-pass%2Fasync-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fasync-fn.rs?ref=9983e0fc634e11717eb457a73fe84cfc9409ba8f", "patch": "@@ -45,6 +45,18 @@ async fn partial_init(x: u32) -> u32 {\n     let _x: (String, !) = (String::new(), return async { x + x }.await);\n }\n \n+async fn read_exact(_from: &mut &[u8], _to: &mut [u8]) -> Option<()> {\n+    Some(())\n+}\n+\n+async fn hello_world() {\n+    let data = [0u8; 1];\n+    let mut reader = &data[..];\n+\n+    let mut marker = [0u8; 1];\n+    read_exact(&mut reader, &mut marker).await.unwrap();\n+}\n+\n fn run_fut<T>(fut: impl Future<Output = T>) -> T {\n     use std::sync::Arc;\n     use std::task::{Context, Poll, Wake, Waker};\n@@ -74,4 +86,5 @@ fn main() {\n     assert_eq!(run_fut(build_aggregate(1, 2, 3, 4)), 10);\n     assert_eq!(run_fut(includes_never(false, 4)), 16);\n     assert_eq!(run_fut(partial_init(4)), 8);\n+    run_fut(hello_world());\n }"}, {"sha": "262889f56eaee4abff5b3f207f6083baffefa3c0", "filename": "tests/run-pass/issue-miri-1925.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/9983e0fc634e11717eb457a73fe84cfc9409ba8f/tests%2Frun-pass%2Fissue-miri-1925.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9983e0fc634e11717eb457a73fe84cfc9409ba8f/tests%2Frun-pass%2Fissue-miri-1925.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fissue-miri-1925.rs?ref=9983e0fc634e11717eb457a73fe84cfc9409ba8f", "patch": "@@ -0,0 +1,33 @@\n+// compile-flags: -Zmiri-symbolic-alignment-check\n+\n+use std::mem::size_of;\n+\n+fn main() {\n+    let mut a = Params::new();\n+    a.key_block = [0; BLOCKBYTES];\n+}\n+\n+#[repr(C)]\n+#[derive(Clone)]\n+#[allow(unused)]\n+pub struct Params {\n+    hash_length: u8,\n+    key_length: u8,\n+    key_block: [u8; BLOCKBYTES],\n+    max_leaf_length: u32,\n+}\n+\n+pub const OUTBYTES: usize = 8 * size_of::<u64>();\n+pub const KEYBYTES: usize = 8 * size_of::<u64>();\n+pub const BLOCKBYTES: usize = 16 * size_of::<u64>();\n+\n+impl Params {\n+    pub fn new() -> Self {\n+        Self {\n+            hash_length: OUTBYTES as u8,\n+            key_length: 0,\n+            key_block: [0; BLOCKBYTES],\n+            max_leaf_length: 0,\n+        }\n+    }\n+}"}]}