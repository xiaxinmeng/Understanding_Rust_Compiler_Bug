{"sha": "300f3a1b43d13b08b2dcd01bdfb992456e3cc012", "node_id": "C_kwDOAAsO6NoAKDMwMGYzYTFiNDNkMTNiMDhiMmRjZDAxYmRmYjk5MjQ1NmUzY2MwMTI", "commit": {"author": {"name": "oxalica", "email": "oxalicc@pm.me", "date": "2023-05-06T13:15:49Z"}, "committer": {"name": "oxalica", "email": "oxalicc@pm.me", "date": "2023-05-06T13:15:57Z"}, "message": "Impl `ExactSizeIterator` for `IdxRange`", "tree": {"sha": "521dee7b27efb27684c3b74db9809e358dc0c2bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/521dee7b27efb27684c3b74db9809e358dc0c2bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/300f3a1b43d13b08b2dcd01bdfb992456e3cc012", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/300f3a1b43d13b08b2dcd01bdfb992456e3cc012", "html_url": "https://github.com/rust-lang/rust/commit/300f3a1b43d13b08b2dcd01bdfb992456e3cc012", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/300f3a1b43d13b08b2dcd01bdfb992456e3cc012/comments", "author": {"login": "oxalica", "id": 14816024, "node_id": "MDQ6VXNlcjE0ODE2MDI0", "avatar_url": "https://avatars.githubusercontent.com/u/14816024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oxalica", "html_url": "https://github.com/oxalica", "followers_url": "https://api.github.com/users/oxalica/followers", "following_url": "https://api.github.com/users/oxalica/following{/other_user}", "gists_url": "https://api.github.com/users/oxalica/gists{/gist_id}", "starred_url": "https://api.github.com/users/oxalica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oxalica/subscriptions", "organizations_url": "https://api.github.com/users/oxalica/orgs", "repos_url": "https://api.github.com/users/oxalica/repos", "events_url": "https://api.github.com/users/oxalica/events{/privacy}", "received_events_url": "https://api.github.com/users/oxalica/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oxalica", "id": 14816024, "node_id": "MDQ6VXNlcjE0ODE2MDI0", "avatar_url": "https://avatars.githubusercontent.com/u/14816024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oxalica", "html_url": "https://github.com/oxalica", "followers_url": "https://api.github.com/users/oxalica/followers", "following_url": "https://api.github.com/users/oxalica/following{/other_user}", "gists_url": "https://api.github.com/users/oxalica/gists{/gist_id}", "starred_url": "https://api.github.com/users/oxalica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oxalica/subscriptions", "organizations_url": "https://api.github.com/users/oxalica/orgs", "repos_url": "https://api.github.com/users/oxalica/repos", "events_url": "https://api.github.com/users/oxalica/events{/privacy}", "received_events_url": "https://api.github.com/users/oxalica/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4966c92829f945d3846eb0ca0e240ac7f7c8c60", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4966c92829f945d3846eb0ca0e240ac7f7c8c60", "html_url": "https://github.com/rust-lang/rust/commit/a4966c92829f945d3846eb0ca0e240ac7f7c8c60"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "c793fff848e18bc058477fdd79414ec4da7ee8ea", "filename": "lib/la-arena/src/lib.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/300f3a1b43d13b08b2dcd01bdfb992456e3cc012/lib%2Fla-arena%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/300f3a1b43d13b08b2dcd01bdfb992456e3cc012/lib%2Fla-arena%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lib%2Fla-arena%2Fsrc%2Flib.rs?ref=300f3a1b43d13b08b2dcd01bdfb992456e3cc012", "patch": "@@ -176,9 +176,14 @@ impl<T> IdxRange<T> {\n \n impl<T> Iterator for IdxRange<T> {\n     type Item = Idx<T>;\n+\n     fn next(&mut self) -> Option<Self::Item> {\n         self.range.next().map(|raw| Idx::from_raw(raw.into()))\n     }\n+\n+    fn size_hint(&self) -> (usize, Option<usize>) {\n+        self.range.size_hint()\n+    }\n }\n \n impl<T> DoubleEndedIterator for IdxRange<T> {\n@@ -187,6 +192,8 @@ impl<T> DoubleEndedIterator for IdxRange<T> {\n     }\n }\n \n+impl<T> ExactSizeIterator for IdxRange<T> {}\n+\n impl<T> fmt::Debug for IdxRange<T> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         f.debug_tuple(&format!(\"IdxRange::<{}>\", std::any::type_name::<T>()))"}]}