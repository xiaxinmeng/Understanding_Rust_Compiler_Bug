{"sha": "2bdbb0d1b4a8be7e8fef6d1e35856190f5c91e0f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiZGJiMGQxYjRhOGJlN2U4ZmVmNmQxZTM1ODU2MTkwZjVjOTFlMGY=", "commit": {"author": {"name": "max-heller", "email": "max.a.heller@gmail.com", "date": "2021-01-05T20:15:25Z"}, "committer": {"name": "max-heller", "email": "max.a.heller@gmail.com", "date": "2021-01-05T20:15:25Z"}, "message": "Document hackiness around primitive associated item disambiguators", "tree": {"sha": "688f5c821c00a3bdb9fce7a9fc5a99e816833ef7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/688f5c821c00a3bdb9fce7a9fc5a99e816833ef7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2bdbb0d1b4a8be7e8fef6d1e35856190f5c91e0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2bdbb0d1b4a8be7e8fef6d1e35856190f5c91e0f", "html_url": "https://github.com/rust-lang/rust/commit/2bdbb0d1b4a8be7e8fef6d1e35856190f5c91e0f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2bdbb0d1b4a8be7e8fef6d1e35856190f5c91e0f/comments", "author": {"login": "max-heller", "id": 25730408, "node_id": "MDQ6VXNlcjI1NzMwNDA4", "avatar_url": "https://avatars.githubusercontent.com/u/25730408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/max-heller", "html_url": "https://github.com/max-heller", "followers_url": "https://api.github.com/users/max-heller/followers", "following_url": "https://api.github.com/users/max-heller/following{/other_user}", "gists_url": "https://api.github.com/users/max-heller/gists{/gist_id}", "starred_url": "https://api.github.com/users/max-heller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/max-heller/subscriptions", "organizations_url": "https://api.github.com/users/max-heller/orgs", "repos_url": "https://api.github.com/users/max-heller/repos", "events_url": "https://api.github.com/users/max-heller/events{/privacy}", "received_events_url": "https://api.github.com/users/max-heller/received_events", "type": "User", "site_admin": false}, "committer": {"login": "max-heller", "id": 25730408, "node_id": "MDQ6VXNlcjI1NzMwNDA4", "avatar_url": "https://avatars.githubusercontent.com/u/25730408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/max-heller", "html_url": "https://github.com/max-heller", "followers_url": "https://api.github.com/users/max-heller/followers", "following_url": "https://api.github.com/users/max-heller/following{/other_user}", "gists_url": "https://api.github.com/users/max-heller/gists{/gist_id}", "starred_url": "https://api.github.com/users/max-heller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/max-heller/subscriptions", "organizations_url": "https://api.github.com/users/max-heller/orgs", "repos_url": "https://api.github.com/users/max-heller/repos", "events_url": "https://api.github.com/users/max-heller/events{/privacy}", "received_events_url": "https://api.github.com/users/max-heller/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f0413316f786dc27de5af8d15a070f368f8746d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f0413316f786dc27de5af8d15a070f368f8746d", "html_url": "https://github.com/rust-lang/rust/commit/6f0413316f786dc27de5af8d15a070f368f8746d"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "11ee59b2401c8592c5c1264338dcc478cb37e132", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2bdbb0d1b4a8be7e8fef6d1e35856190f5c91e0f/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bdbb0d1b4a8be7e8fef6d1e35856190f5c91e0f/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=2bdbb0d1b4a8be7e8fef6d1e35856190f5c91e0f", "patch": "@@ -1193,6 +1193,14 @@ impl LinkCollector<'_, '_> {\n         match res {\n             Res::Primitive(_) => {\n                 if let Some((kind, id)) = self.kind_side_channel.take() {\n+                    // We're actually resolving an associated item of a primitive, so we need to\n+                    // verify the disambiguator (if any) matches the type of the associated item.\n+                    // This case should really follow the same flow as the `Res::Def` branch below,\n+                    // but attempting to add a call to `clean::register_res` causes an ICE. @jyn514\n+                    // thinks `register_res` is only needed for cross-crate re-exports, but Rust\n+                    // doesn't allow statements like `use str::trim;`, making this a (hopefully)\n+                    // valid omission. See https://github.com/rust-lang/rust/pull/80660#discussion_r551585677\n+                    // for discussion on the matter.\n                     verify(kind, id)?;\n                 } else {\n                     match disambiguator {"}]}