{"sha": "9b64d71848c2121e7ceac00de24a624d63c2dad4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliNjRkNzE4NDhjMjEyMWU3Y2VhYzAwZGUyNGE2MjRkNjNjMmRhZDQ=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-09-28T23:35:20Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-09-28T23:35:33Z"}, "message": "Fix windows breakage.", "tree": {"sha": "72f18c517b046d0e0c8c2b618e60033138acf267", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72f18c517b046d0e0c8c2b618e60033138acf267"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b64d71848c2121e7ceac00de24a624d63c2dad4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b64d71848c2121e7ceac00de24a624d63c2dad4", "html_url": "https://github.com/rust-lang/rust/commit/9b64d71848c2121e7ceac00de24a624d63c2dad4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b64d71848c2121e7ceac00de24a624d63c2dad4/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad951b5976ce4205874b366f8cc2b8810b08d450", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad951b5976ce4205874b366f8cc2b8810b08d450", "html_url": "https://github.com/rust-lang/rust/commit/ad951b5976ce4205874b366f8cc2b8810b08d450"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "7e3b930dcb8e9134164c7afa583faabfa6041931", "filename": "src/libcore/os.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9b64d71848c2121e7ceac00de24a624d63c2dad4/src%2Flibcore%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b64d71848c2121e7ceac00de24a624d63c2dad4/src%2Flibcore%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fos.rs?ref=9b64d71848c2121e7ceac00de24a624d63c2dad4", "patch": "@@ -554,12 +554,13 @@ pub fn make_dir(p: &Path, mode: c_int) -> bool {\n \n     #[cfg(windows)]\n     fn mkdir(p: &Path, _mode: c_int) -> bool {\n+        use win32::*;\n         // FIXME: turn mode into something useful? #2623\n         do as_utf16_p(p.to_str()) |buf| {\n             libc::CreateDirectoryW(buf, unsafe {\n                 cast::reinterpret_cast(&0)\n             })\n-                != (0 as BOOL)\n+                != (0 as libc::BOOL)\n         }\n     }\n "}]}