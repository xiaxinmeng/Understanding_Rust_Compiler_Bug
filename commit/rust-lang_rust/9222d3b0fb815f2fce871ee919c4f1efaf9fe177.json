{"sha": "9222d3b0fb815f2fce871ee919c4f1efaf9fe177", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyMjJkM2IwZmI4MTVmMmZjZTg3MWVlOTE5YzRmMWVmYWY5ZmUxNzc=", "commit": {"author": {"name": "Dawer", "email": "7803845+iDawer@users.noreply.github.com", "date": "2021-04-19T11:24:09Z"}, "committer": {"name": "Dawer", "email": "7803845+iDawer@users.noreply.github.com", "date": "2021-04-19T11:24:09Z"}, "message": "Unindent test according to the style guide.", "tree": {"sha": "8e7590cb55a81f7409b168a501d5304df1ba5e97", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e7590cb55a81f7409b168a501d5304df1ba5e97"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9222d3b0fb815f2fce871ee919c4f1efaf9fe177", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9222d3b0fb815f2fce871ee919c4f1efaf9fe177", "html_url": "https://github.com/rust-lang/rust/commit/9222d3b0fb815f2fce871ee919c4f1efaf9fe177", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9222d3b0fb815f2fce871ee919c4f1efaf9fe177/comments", "author": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d588efc2b75a886af642b14b0d3ee87d497a20e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d588efc2b75a886af642b14b0d3ee87d497a20e", "html_url": "https://github.com/rust-lang/rust/commit/8d588efc2b75a886af642b14b0d3ee87d497a20e"}], "stats": {"total": 46, "additions": 23, "deletions": 23}, "files": [{"sha": "a30c4d04ee5b09cb74d2618ca34ad2ffccc2e1e0", "filename": "crates/ide_assists/src/handlers/fill_match_arms.rs", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/9222d3b0fb815f2fce871ee919c4f1efaf9fe177/crates%2Fide_assists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9222d3b0fb815f2fce871ee919c4f1efaf9fe177/crates%2Fide_assists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs?ref=9222d3b0fb815f2fce871ee919c4f1efaf9fe177", "patch": "@@ -481,32 +481,32 @@ fn main() {\n         check_assist(\n             fill_match_arms,\n             r#\"\n-            enum A { One, Two }\n-            enum B { One, Two }\n+enum A { One, Two }\n+enum B { One, Two }\n \n-            fn main() {\n-                let a = A::One;\n-                let b = B::One;\n-                match (a$0, b) {\n-                    (A::Two, B::One) => {}\n-                }\n-            }\n-            \"#,\n+fn main() {\n+    let a = A::One;\n+    let b = B::One;\n+    match (a$0, b) {\n+        (A::Two, B::One) => {}\n+    }\n+}\n+\"#,\n             r#\"\n-            enum A { One, Two }\n-            enum B { One, Two }\n+enum A { One, Two }\n+enum B { One, Two }\n \n-            fn main() {\n-                let a = A::One;\n-                let b = B::One;\n-                match (a, b) {\n-                    (A::Two, B::One) => {}\n-                    $0(A::One, B::One) => {}\n-                    (A::One, B::Two) => {}\n-                    (A::Two, B::Two) => {}\n-                }\n-            }\n-            \"#,\n+fn main() {\n+    let a = A::One;\n+    let b = B::One;\n+    match (a, b) {\n+        (A::Two, B::One) => {}\n+        $0(A::One, B::One) => {}\n+        (A::One, B::Two) => {}\n+        (A::Two, B::Two) => {}\n+    }\n+}\n+\"#,\n         );\n     }\n "}]}