{"sha": "7e0180906b0fe738596bff512c96c3f36afaf6b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlMDE4MDkwNmIwZmU3Mzg1OTZiZmY1MTJjOTZjM2YzNmFmYWY2Yjc=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-08-10T00:48:32Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-08-10T00:48:32Z"}, "message": "Small cleanup\n\nRemove unnecessary `unwrap`.", "tree": {"sha": "2c4087a595608ec8fccdcd94c81f312ba59e3fa7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c4087a595608ec8fccdcd94c81f312ba59e3fa7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e0180906b0fe738596bff512c96c3f36afaf6b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e0180906b0fe738596bff512c96c3f36afaf6b7", "html_url": "https://github.com/rust-lang/rust/commit/7e0180906b0fe738596bff512c96c3f36afaf6b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e0180906b0fe738596bff512c96c3f36afaf6b7/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18f3be7704a4ec7976fcd1272c728974243d29bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/18f3be7704a4ec7976fcd1272c728974243d29bd", "html_url": "https://github.com/rust-lang/rust/commit/18f3be7704a4ec7976fcd1272c728974243d29bd"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "fdc524a8e39e024f9e6083089c430abb9fc8915a", "filename": "src/librustc_resolve/late/diagnostics.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7e0180906b0fe738596bff512c96c3f36afaf6b7/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e0180906b0fe738596bff512c96c3f36afaf6b7/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs?ref=7e0180906b0fe738596bff512c96c3f36afaf6b7", "patch": "@@ -378,15 +378,15 @@ impl<'a> LateResolutionVisitor<'a, '_, '_> {\n     /// return the span of whole call and the span for all arguments expect the first one (`self`).\n     fn call_has_self_arg(&self, source: PathSource<'_>) -> Option<(Span, Option<Span>)> {\n         let mut has_self_arg = None;\n-        if let PathSource::Expr(parent) = source {\n-            match &parent?.kind {\n+        if let PathSource::Expr(Some(parent)) = source {\n+            match &parent.kind {\n                 ExprKind::Call(_, args) if !args.is_empty() => {\n                     let mut expr_kind = &args[0].kind;\n                     loop {\n                         match expr_kind {\n                             ExprKind::Path(_, arg_name) if arg_name.segments.len() == 1 => {\n                                 if arg_name.segments[0].ident.name == kw::SelfLower {\n-                                    let call_span = parent.unwrap().span;\n+                                    let call_span = parent.span;\n                                     let tail_args_span = if args.len() > 1 {\n                                         Some(Span::new(\n                                             args[1].span.lo(),"}]}