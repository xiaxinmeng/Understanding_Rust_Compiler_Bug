{"sha": "56ec5bec1ee9ecf6cbacb2378dbc75238a9fc8fe", "node_id": "C_kwDOAAsO6NoAKDU2ZWM1YmVjMWVlOWVjZjZjYmFjYjIzNzhkYmM3NTIzOGE5ZmM4ZmU", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-08-09T05:27:26Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-08-09T05:27:26Z"}, "message": "suggest adding an appropriate missing pattern excluding comments", "tree": {"sha": "18bf3dc3f8672b31f1acbadf4bc76f256838c7d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18bf3dc3f8672b31f1acbadf4bc76f256838c7d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56ec5bec1ee9ecf6cbacb2378dbc75238a9fc8fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56ec5bec1ee9ecf6cbacb2378dbc75238a9fc8fe", "html_url": "https://github.com/rust-lang/rust/commit/56ec5bec1ee9ecf6cbacb2378dbc75238a9fc8fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56ec5bec1ee9ecf6cbacb2378dbc75238a9fc8fe/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93ab13b4e894ab74258c40aaf29872db2b17b6b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/93ab13b4e894ab74258c40aaf29872db2b17b6b4", "html_url": "https://github.com/rust-lang/rust/commit/93ab13b4e894ab74258c40aaf29872db2b17b6b4"}], "stats": {"total": 71, "additions": 57, "deletions": 14}, "files": [{"sha": "69a8c98b27a3d76b72ef1c8e5bfb647b923c0279", "filename": "compiler/rustc_mir_build/src/thir/pattern/check_match.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/56ec5bec1ee9ecf6cbacb2378dbc75238a9fc8fe/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56ec5bec1ee9ecf6cbacb2378dbc75238a9fc8fe/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fcheck_match.rs?ref=56ec5bec1ee9ecf6cbacb2378dbc75238a9fc8fe", "patch": "@@ -849,22 +849,22 @@ fn non_exhaustive_match<'p, 'tcx>(\n             ));\n         }\n         [.., prev, last] if prev.span.eq_ctxt(last.span) => {\n-            if let Ok(snippet) = sm.span_to_snippet(prev.span.between(last.span)) {\n-                let comma = if matches!(last.body.kind, hir::ExprKind::Block(..))\n-                    && last.span.eq_ctxt(last.body.span)\n-                {\n-                    \"\"\n-                } else {\n-                    \",\"\n-                };\n+            let comma = if matches!(last.body.kind, hir::ExprKind::Block(..))\n+                && last.span.eq_ctxt(last.body.span)\n+            {\n+                \"\"\n+            } else {\n+                \",\"\n+            };\n+            let spacing = if sm.is_multiline(prev.span.between(last.span)) {\n+                sm.indentation_before(last.span).map(|indent| format!(\"\\n{indent}\"))\n+            } else {\n+                Some(\" \".to_string())\n+            };\n+            if let Some(spacing) = spacing {\n                 suggestion = Some((\n                     last.span.shrink_to_hi(),\n-                    format!(\n-                        \"{}{}{} => todo!()\",\n-                        comma,\n-                        snippet.strip_prefix(',').unwrap_or(&snippet),\n-                        pattern\n-                    ),\n+                    format!(\"{}{}{} => todo!()\", comma, spacing, pattern),\n                 ));\n             }\n         }"}, {"sha": "b28dce8810593c8b3b1c41487456a9352245c1b7", "filename": "src/test/ui/pattern/suggest-adding-appropriate-missing-pattern-excluding-comments.fixed", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/56ec5bec1ee9ecf6cbacb2378dbc75238a9fc8fe/src%2Ftest%2Fui%2Fpattern%2Fsuggest-adding-appropriate-missing-pattern-excluding-comments.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/56ec5bec1ee9ecf6cbacb2378dbc75238a9fc8fe/src%2Ftest%2Fui%2Fpattern%2Fsuggest-adding-appropriate-missing-pattern-excluding-comments.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fsuggest-adding-appropriate-missing-pattern-excluding-comments.fixed?ref=56ec5bec1ee9ecf6cbacb2378dbc75238a9fc8fe", "patch": "@@ -0,0 +1,10 @@\n+// run-rustfix\n+\n+fn main() {\n+    match Some(1) { //~ ERROR non-exhaustive patterns: `None` not covered\n+        Some(1) => {}\n+        // hello\n+        Some(_) => {}\n+        None => todo!()\n+    }\n+}"}, {"sha": "42493a6327173f30b51d6ac096454a83dafaf76f", "filename": "src/test/ui/pattern/suggest-adding-appropriate-missing-pattern-excluding-comments.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/56ec5bec1ee9ecf6cbacb2378dbc75238a9fc8fe/src%2Ftest%2Fui%2Fpattern%2Fsuggest-adding-appropriate-missing-pattern-excluding-comments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56ec5bec1ee9ecf6cbacb2378dbc75238a9fc8fe/src%2Ftest%2Fui%2Fpattern%2Fsuggest-adding-appropriate-missing-pattern-excluding-comments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fsuggest-adding-appropriate-missing-pattern-excluding-comments.rs?ref=56ec5bec1ee9ecf6cbacb2378dbc75238a9fc8fe", "patch": "@@ -0,0 +1,9 @@\n+// run-rustfix\n+\n+fn main() {\n+    match Some(1) { //~ ERROR non-exhaustive patterns: `None` not covered\n+        Some(1) => {}\n+        // hello\n+        Some(_) => {}\n+    }\n+}"}, {"sha": "f3dca9bcb07d1f42b6ca0e3b628cefea64441f43", "filename": "src/test/ui/pattern/suggest-adding-appropriate-missing-pattern-excluding-comments.stderr", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/56ec5bec1ee9ecf6cbacb2378dbc75238a9fc8fe/src%2Ftest%2Fui%2Fpattern%2Fsuggest-adding-appropriate-missing-pattern-excluding-comments.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/56ec5bec1ee9ecf6cbacb2378dbc75238a9fc8fe/src%2Ftest%2Fui%2Fpattern%2Fsuggest-adding-appropriate-missing-pattern-excluding-comments.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fsuggest-adding-appropriate-missing-pattern-excluding-comments.stderr?ref=56ec5bec1ee9ecf6cbacb2378dbc75238a9fc8fe", "patch": "@@ -0,0 +1,24 @@\n+error[E0004]: non-exhaustive patterns: `None` not covered\n+  --> $DIR/suggest-adding-appropriate-missing-pattern-excluding-comments.rs:4:11\n+   |\n+LL |     match Some(1) {\n+   |           ^^^^^^^ pattern `None` not covered\n+   |\n+note: `Option<i32>` defined here\n+  --> $SRC_DIR/core/src/option.rs:LL:COL\n+   |\n+LL | pub enum Option<T> {\n+   | ------------------\n+...\n+LL |     None,\n+   |     ^^^^ not covered\n+   = note: the matched value is of type `Option<i32>`\n+help: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern or an explicit pattern as shown\n+   |\n+LL ~         Some(_) => {}\n+LL +         None => todo!()\n+   |\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0004`."}]}