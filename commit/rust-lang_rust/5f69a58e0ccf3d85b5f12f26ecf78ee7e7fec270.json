{"sha": "5f69a58e0ccf3d85b5f12f26ecf78ee7e7fec270", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmNjlhNThlMGNjZjNkODViNWYxMmYyNmVjZjc4ZWU3ZTdmZWMyNzA=", "commit": {"author": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-09-10T01:55:34Z"}, "committer": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-09-10T03:50:07Z"}, "message": "std::vec: Remove the function same_length\n\nThe basic construct x.len() == y.len() is just as simple.\n\nThis function used to be a precondition (not sure about the\nterminology), so it had to be a function. This is not relevant any more.", "tree": {"sha": "5570e79d2109ad1afe6fc5040c91045e57c79645", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5570e79d2109ad1afe6fc5040c91045e57c79645"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f69a58e0ccf3d85b5f12f26ecf78ee7e7fec270", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f69a58e0ccf3d85b5f12f26ecf78ee7e7fec270", "html_url": "https://github.com/rust-lang/rust/commit/5f69a58e0ccf3d85b5f12f26ecf78ee7e7fec270", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f69a58e0ccf3d85b5f12f26ecf78ee7e7fec270/comments", "author": null, "committer": null, "parents": [{"sha": "77dff93a4baa4164311e14763cfcbb05e410359b", "url": "https://api.github.com/repos/rust-lang/rust/commits/77dff93a4baa4164311e14763cfcbb05e410359b", "html_url": "https://github.com/rust-lang/rust/commit/77dff93a4baa4164311e14763cfcbb05e410359b"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "693aee83061e2104220f34c63068b7f0b504c009", "filename": "src/librustc/middle/typeck/infer/combine.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5f69a58e0ccf3d85b5f12f26ecf78ee7e7fec270/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f69a58e0ccf3d85b5f12f26ecf78ee7e7fec270/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fcombine.rs?ref=5f69a58e0ccf3d85b5f12f26ecf78ee7e7fec270", "patch": "@@ -88,7 +88,7 @@ pub trait Combine {\n         // future we could allow type parameters to declare a\n         // variance.\n \n-        if vec::same_length(as_, bs) {\n+        if as_.len() == bs.len() {\n             result::fold_(as_.iter().zip(bs.iter())\n                           .map(|(a, b)| eq_tys(self, *a, *b)))\n                 .then(|| Ok(as_.to_owned()))\n@@ -419,7 +419,7 @@ pub fn super_fn_sigs<C:Combine>(\n     this: &C, a: &ty::FnSig, b: &ty::FnSig) -> cres<ty::FnSig> {\n \n     fn argvecs<C:Combine>(this: &C, a_args: &[ty::t], b_args: &[ty::t]) -> cres<~[ty::t]> {\n-        if vec::same_length(a_args, b_args) {\n+        if a_args.len() == b_args.len() {\n             result::collect(a_args.iter().zip(b_args.iter())\n                             .map(|(a, b)| this.args(*a, *b)))\n         } else {"}, {"sha": "27566bf23c880f78d5186019ce0fc391d7cc6c09", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5f69a58e0ccf3d85b5f12f26ecf78ee7e7fec270/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f69a58e0ccf3d85b5f12f26ecf78ee7e7fec270/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=5f69a58e0ccf3d85b5f12f26ecf78ee7e7fec270", "patch": "@@ -123,11 +123,6 @@ use unstable::raw::{Box, Repr, Slice, Vec};\n use vec;\n use util;\n \n-/// Returns true if two vectors have the same length\n-pub fn same_length<T, U>(xs: &[T], ys: &[U]) -> bool {\n-    xs.len() == ys.len()\n-}\n-\n /**\n  * Creates and initializes an owned vector.\n  *"}]}