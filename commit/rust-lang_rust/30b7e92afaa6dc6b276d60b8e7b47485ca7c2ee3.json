{"sha": "30b7e92afaa6dc6b276d60b8e7b47485ca7c2ee3", "node_id": "C_kwDOAAsO6NoAKDMwYjdlOTJhZmFhNmRjNmIyNzZkNjBiOGU3YjQ3NDg1Y2E3YzJlZTM", "commit": {"author": {"name": "Eduardo Canellas", "email": "eduardocanellas98@gmail.com", "date": "2022-01-04T18:37:10Z"}, "committer": {"name": "Eduardo Canellas", "email": "eduardocanellas98@gmail.com", "date": "2022-01-04T18:37:10Z"}, "message": "remove forgotten dbg macro", "tree": {"sha": "9cc49c66b67ac8fbc620f7e0fdb662982c04f3f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cc49c66b67ac8fbc620f7e0fdb662982c04f3f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30b7e92afaa6dc6b276d60b8e7b47485ca7c2ee3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30b7e92afaa6dc6b276d60b8e7b47485ca7c2ee3", "html_url": "https://github.com/rust-lang/rust/commit/30b7e92afaa6dc6b276d60b8e7b47485ca7c2ee3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30b7e92afaa6dc6b276d60b8e7b47485ca7c2ee3/comments", "author": {"login": "dbofmmbt", "id": 34381457, "node_id": "MDQ6VXNlcjM0MzgxNDU3", "avatar_url": "https://avatars.githubusercontent.com/u/34381457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbofmmbt", "html_url": "https://github.com/dbofmmbt", "followers_url": "https://api.github.com/users/dbofmmbt/followers", "following_url": "https://api.github.com/users/dbofmmbt/following{/other_user}", "gists_url": "https://api.github.com/users/dbofmmbt/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbofmmbt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbofmmbt/subscriptions", "organizations_url": "https://api.github.com/users/dbofmmbt/orgs", "repos_url": "https://api.github.com/users/dbofmmbt/repos", "events_url": "https://api.github.com/users/dbofmmbt/events{/privacy}", "received_events_url": "https://api.github.com/users/dbofmmbt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dbofmmbt", "id": 34381457, "node_id": "MDQ6VXNlcjM0MzgxNDU3", "avatar_url": "https://avatars.githubusercontent.com/u/34381457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbofmmbt", "html_url": "https://github.com/dbofmmbt", "followers_url": "https://api.github.com/users/dbofmmbt/followers", "following_url": "https://api.github.com/users/dbofmmbt/following{/other_user}", "gists_url": "https://api.github.com/users/dbofmmbt/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbofmmbt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbofmmbt/subscriptions", "organizations_url": "https://api.github.com/users/dbofmmbt/orgs", "repos_url": "https://api.github.com/users/dbofmmbt/repos", "events_url": "https://api.github.com/users/dbofmmbt/events{/privacy}", "received_events_url": "https://api.github.com/users/dbofmmbt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "838944b3870deefce57950d1604de9307d61d828", "url": "https://api.github.com/repos/rust-lang/rust/commits/838944b3870deefce57950d1604de9307d61d828", "html_url": "https://github.com/rust-lang/rust/commit/838944b3870deefce57950d1604de9307d61d828"}], "stats": {"total": 1, "additions": 0, "deletions": 1}, "files": [{"sha": "3dd4aca9ceea83560e1613114ec4e0a5c55284bb", "filename": "crates/ide_completion/src/completions/fn_param.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/30b7e92afaa6dc6b276d60b8e7b47485ca7c2ee3/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ffn_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30b7e92afaa6dc6b276d60b8e7b47485ca7c2ee3/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ffn_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ffn_param.rs?ref=30b7e92afaa6dc6b276d60b8e7b47485ca7c2ee3", "patch": "@@ -109,7 +109,6 @@ fn surround_with_commas(ctx: &CompletionContext, param: String) -> Option<String\n \n     let trailing_comma_missing = matches!(next_token.kind(), SyntaxKind::IDENT);\n     let trailing = if trailing_comma_missing { \",\" } else { \"\" };\n-    dbg!(&ctx.token.next_token()?);\n \n     let previous_token = if matches!(ctx.token.kind(), SyntaxKind::IDENT | SyntaxKind::WHITESPACE) {\n         ctx.previous_token.as_ref()?"}]}