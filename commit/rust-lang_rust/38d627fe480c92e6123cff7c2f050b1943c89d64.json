{"sha": "38d627fe480c92e6123cff7c2f050b1943c89d64", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4ZDYyN2ZlNDgwYzkyZTYxMjNjZmY3YzJmMDUwYjE5NDNjODlkNjQ=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2015-08-06T05:43:46Z"}, "committer": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2015-08-06T05:43:46Z"}, "message": "Use the right type for drop flag datums\n\nThe drop flags are Lvalue (and thus ByRef) datums that hold a u8 value,\nso their value type should be u8, not a pointer to u8.", "tree": {"sha": "d4bc7dee05bd3727dabb654f8d3727763624a02c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4bc7dee05bd3727dabb654f8d3727763624a02c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38d627fe480c92e6123cff7c2f050b1943c89d64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38d627fe480c92e6123cff7c2f050b1943c89d64", "html_url": "https://github.com/rust-lang/rust/commit/38d627fe480c92e6123cff7c2f050b1943c89d64", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38d627fe480c92e6123cff7c2f050b1943c89d64/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4278b5f03bbc5808a7b611ae8353db6817c58792", "url": "https://api.github.com/repos/rust-lang/rust/commits/4278b5f03bbc5808a7b611ae8353db6817c58792", "html_url": "https://github.com/rust-lang/rust/commit/4278b5f03bbc5808a7b611ae8353db6817c58792"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "7d2185f03fee09a462d449271eacb66af2833cbb", "filename": "src/librustc_trans/trans/base.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/38d627fe480c92e6123cff7c2f050b1943c89d64/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38d627fe480c92e6123cff7c2f050b1943c89d64/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fbase.rs?ref=38d627fe480c92e6123cff7c2f050b1943c89d64", "patch": "@@ -1299,12 +1299,11 @@ pub fn init_function<'a, 'tcx>(fcx: &'a FunctionContext<'a, 'tcx>,\n                 let init_val = C_u8(fcx.ccx, adt::DTOR_NEEDED_HINT);\n                 let llname = &format!(\"dropflag_hint_{}\", id);\n                 debug!(\"adding hint {}\", llname);\n-                let ptr = alloc_ty(entry_bcx, tcx.types.u8, llname);\n+                let ty = tcx.types.u8;\n+                let ptr = alloc_ty(entry_bcx, ty, llname);\n                 Store(entry_bcx, init_val, ptr);\n-                let ty = tcx.mk_ptr(ty::TypeAndMut { ty: tcx.types.u8, mutbl: ast::MutMutable });\n                 let flag = datum::Lvalue::new_dropflag_hint(\"base::init_function\");\n-                let datum = datum::Datum::new(ptr, ty, flag);\n-                datum\n+                datum::Datum::new(ptr, ty, flag)\n             };\n \n             let (var, datum) = match info {"}]}