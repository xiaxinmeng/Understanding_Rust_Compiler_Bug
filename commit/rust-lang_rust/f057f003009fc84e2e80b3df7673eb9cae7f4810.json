{"sha": "f057f003009fc84e2e80b3df7673eb9cae7f4810", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwNTdmMDAzMDA5ZmM4NGUyZTgwYjNkZjc2NzNlYjljYWU3ZjQ4MTA=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-02T09:39:19Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-06T03:39:56Z"}, "message": "rt: Simplify reap_dead_tasks", "tree": {"sha": "d05cdc784337deaa73dad9232b75d72c256a98b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d05cdc784337deaa73dad9232b75d72c256a98b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f057f003009fc84e2e80b3df7673eb9cae7f4810", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f057f003009fc84e2e80b3df7673eb9cae7f4810", "html_url": "https://github.com/rust-lang/rust/commit/f057f003009fc84e2e80b3df7673eb9cae7f4810", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f057f003009fc84e2e80b3df7673eb9cae7f4810/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8efe4b89137646c5315677b029d4158424c126cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/8efe4b89137646c5315677b029d4158424c126cc", "html_url": "https://github.com/rust-lang/rust/commit/8efe4b89137646c5315677b029d4158424c126cc"}], "stats": {"total": 31, "additions": 12, "deletions": 19}, "files": [{"sha": "eafeac305be349b875a77740e4b015aa810844a3", "filename": "src/rt/rust_task_thread.cpp", "status": "modified", "additions": 12, "deletions": 19, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/f057f003009fc84e2e80b3df7673eb9cae7f4810/src%2Frt%2Frust_task_thread.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/f057f003009fc84e2e80b3df7673eb9cae7f4810/src%2Frt%2Frust_task_thread.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task_thread.cpp?ref=f057f003009fc84e2e80b3df7673eb9cae7f4810", "patch": "@@ -122,33 +122,26 @@ rust_task_thread::number_of_live_tasks() {\n void\n rust_task_thread::reap_dead_tasks() {\n     I(this, lock.lock_held_by_current_thread());\n+\n     if (dead_tasks.length() == 0) {\n         return;\n     }\n \n+    A(this, dead_tasks.length() == 1,\n+      \"Only one task should die during a single turn of the event loop\");\n+\n     // First make a copy of the dead_task list with the lock held\n-    size_t dead_tasks_len = dead_tasks.length();\n-    rust_task **dead_tasks_copy = (rust_task**)\n-        srv->malloc(sizeof(rust_task*) * dead_tasks_len);\n-    for (size_t i = 0; i < dead_tasks_len; ++i) {\n-        dead_tasks_copy[i] = dead_tasks.pop_value();\n-    }\n+    rust_task *dead_task = dead_tasks.pop_value();\n \n-    // Now unlock again because we have to actually free the dead tasks,\n-    // and that may end up wanting to lock the kernel lock. We have\n-    // a kernel lock -> scheduler lock locking order that we need\n-    // to maintain.\n+    // Dereferencing the task will probably cause it to be released\n+    // from the scheduler, which may end up trying to take this lock\n     lock.unlock();\n \n-    for (size_t i = 0; i < dead_tasks_len; ++i) {\n-        rust_task *task = dead_tasks_copy[i];\n-        // Release the task from the kernel so nobody else can get at it\n-        kernel->release_task_id(task->id);\n-        task->delete_all_stacks();\n-        // Deref the task, which may cause it to request us to release it\n-        task->deref();\n-    }\n-    srv->free(dead_tasks_copy);\n+    // Release the task from the kernel so nobody else can get at it\n+    kernel->release_task_id(dead_task->id);\n+    dead_task->delete_all_stacks();\n+    // Deref the task, which may cause it to request us to release it\n+    dead_task->deref();\n \n     lock.lock();\n }"}]}