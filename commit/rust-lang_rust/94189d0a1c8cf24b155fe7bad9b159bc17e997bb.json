{"sha": "94189d0a1c8cf24b155fe7bad9b159bc17e997bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0MTg5ZDBhMWM4Y2YyNGIxNTVmZTdiYWQ5YjE1OWJjMTdlOTk3YmI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-03-04T12:02:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-04T12:02:06Z"}, "message": "Merge #3442\n\n3442: Skip self param when completing methods r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "0331d7b6399488ce8e4d9d78cb3a0a32b4cb371e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0331d7b6399488ce8e4d9d78cb3a0a32b4cb371e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94189d0a1c8cf24b155fe7bad9b159bc17e997bb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeX5i+CRBK7hj4Ov3rIwAAdHIIABqtqx9CLhmcItHkCpfcJWNr\nqYTqmKuXlUyPAypGxbrnjsCH98JQITnoW9XvsEKMT85IhufFgPHTTN2O+J6DMz+H\nzJx0kLsh3jzasnCI1qhUSpz1n0zA9TCi9IUHEgMK1Uy3+zLWC/9LYAiE7z8saJKP\nKwvq/XVdZKKZiEi69Wkjs0TqSuXAxPWtAkyRXG5BUDTxSEwcXhlP2IF6sL+y0OWt\nncXcBg0YjsaTIC+WOOz6SQcvA0ZsRjWKnmEJDC1HQhCmmsa2RiY/UkzxSl1PhHR+\nGjvlAiIBBOWjKKDnEHpeqPKJ9GB+sWStTFRmtD5iQ7Bx+PgeF0uOgFZkU+u9CGs=\n=kr1l\n-----END PGP SIGNATURE-----\n", "payload": "tree 0331d7b6399488ce8e4d9d78cb3a0a32b4cb371e\nparent 02b02061b6cb121204a9bd931e7cd541dba2898f\nparent 7d2ddfd3c85b9c6505f09497ba94c98e8c78e822\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1583323326 +0000\ncommitter GitHub <noreply@github.com> 1583323326 +0000\n\nMerge #3442\n\n3442: Skip self param when completing methods r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94189d0a1c8cf24b155fe7bad9b159bc17e997bb", "html_url": "https://github.com/rust-lang/rust/commit/94189d0a1c8cf24b155fe7bad9b159bc17e997bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94189d0a1c8cf24b155fe7bad9b159bc17e997bb/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02b02061b6cb121204a9bd931e7cd541dba2898f", "url": "https://api.github.com/repos/rust-lang/rust/commits/02b02061b6cb121204a9bd931e7cd541dba2898f", "html_url": "https://github.com/rust-lang/rust/commit/02b02061b6cb121204a9bd931e7cd541dba2898f"}, {"sha": "7d2ddfd3c85b9c6505f09497ba94c98e8c78e822", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d2ddfd3c85b9c6505f09497ba94c98e8c78e822", "html_url": "https://github.com/rust-lang/rust/commit/7d2ddfd3c85b9c6505f09497ba94c98e8c78e822"}], "stats": {"total": 58, "additions": 45, "deletions": 13}, "files": [{"sha": "dac232a85ff137bce4c47d5a3dc9304ddb261373", "filename": "crates/ra_ide/src/completion/presentation.rs", "status": "modified", "additions": 45, "deletions": 13, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/94189d0a1c8cf24b155fe7bad9b159bc17e997bb/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94189d0a1c8cf24b155fe7bad9b159bc17e997bb/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs?ref=94189d0a1c8cf24b155fe7bad9b159bc17e997bb", "patch": "@@ -218,18 +218,20 @@ impl Completions {\n         {\n             tested_by!(inserts_parens_for_function_calls);\n \n-            let (snippet, label) =\n-                if params.is_empty() || has_self_param && params.len() == 1 {\n-                    (format!(\"{}()$0\", name), format!(\"{}()\", name))\n-                } else {\n-                    let function_params_snippet =\n-                        join(function_signature.parameter_names.iter().enumerate().map(\n+            let (snippet, label) = if params.is_empty() || has_self_param && params.len() == 1 {\n+                (format!(\"{}()$0\", name), format!(\"{}()\", name))\n+            } else {\n+                let to_skip = if has_self_param { 1 } else { 0 };\n+                let function_params_snippet =\n+                    join(\n+                        function_signature.parameter_names.iter().skip(to_skip).enumerate().map(\n                             |(index, param_name)| format!(\"${{{}:{}}}\", index + 1, param_name),\n-                        ))\n-                        .separator(\", \")\n-                        .to_string();\n-                    (format!(\"{}({})$0\", name, function_params_snippet), format!(\"{}(\u2026)\", name))\n-                };\n+                        ),\n+                    )\n+                    .separator(\", \")\n+                    .to_string();\n+                (format!(\"{}({})$0\", name, function_params_snippet), format!(\"{}(\u2026)\", name))\n+            };\n             builder = builder.lookup_by(name).label(label).insert_snippet(snippet);\n         }\n \n@@ -307,8 +309,8 @@ mod tests {\n \n     use crate::completion::{do_completion, CompletionItem, CompletionKind};\n \n-    fn do_reference_completion(code: &str) -> Vec<CompletionItem> {\n-        do_completion(code, CompletionKind::Reference)\n+    fn do_reference_completion(ra_fixture: &str) -> Vec<CompletionItem> {\n+        do_completion(ra_fixture, CompletionKind::Reference)\n     }\n \n     #[test]\n@@ -530,6 +532,36 @@ mod tests {\n         );\n     }\n \n+    #[test]\n+    fn parens_for_method_call() {\n+        assert_debug_snapshot!(\n+            do_reference_completion(\n+                r\"\n+                struct S {}\n+                impl S {\n+                    fn foo(&self, x: i32) {}\n+                }\n+                fn bar(s: &S) {\n+                    s.f<|>\n+                }\n+                \"\n+            ),\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"foo(\u2026)\",\n+                source_range: [171; 172),\n+                delete: [171; 172),\n+                insert: \"foo(${1:x})$0\",\n+                kind: Method,\n+                lookup: \"foo\",\n+                detail: \"fn foo(&self, x: i32)\",\n+            },\n+        ]\n+        \"###\n+        )\n+    }\n+\n     #[test]\n     fn dont_render_function_parens_in_use_item() {\n         assert_debug_snapshot!("}]}