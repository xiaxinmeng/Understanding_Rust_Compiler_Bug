{"sha": "41c9c9b51f1d9a5e1650bbdb398fc78f836936c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxYzljOWI1MWYxZDlhNWUxNjUwYmJkYjM5OGZjNzhmODM2OTM2Yzk=", "commit": {"author": {"name": "Timoth\u00e9e Delabrouille", "email": "timothee.delabrouille@musicworldmedia.com", "date": "2021-04-09T10:18:12Z"}, "committer": {"name": "Timoth\u00e9e Delabrouille", "email": "timothee.delabrouille@musicworldmedia.com", "date": "2021-04-09T10:18:12Z"}, "message": "precisions on the authorized labels + typo", "tree": {"sha": "29f936d44a33234fe85b4ca5739d34531f897392", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29f936d44a33234fe85b4ca5739d34531f897392"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41c9c9b51f1d9a5e1650bbdb398fc78f836936c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41c9c9b51f1d9a5e1650bbdb398fc78f836936c9", "html_url": "https://github.com/rust-lang/rust/commit/41c9c9b51f1d9a5e1650bbdb398fc78f836936c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41c9c9b51f1d9a5e1650bbdb398fc78f836936c9/comments", "author": null, "committer": null, "parents": [{"sha": "e5fe9eb8996d2d8236755e1f21f673f86f8c854c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5fe9eb8996d2d8236755e1f21f673f86f8c854c", "html_url": "https://github.com/rust-lang/rust/commit/e5fe9eb8996d2d8236755e1f21f673f86f8c854c"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "348b14dccbd5e1129d4c6d5eff4061307a8c40ad", "filename": "src/doc/unstable-book/src/library-features/asm.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41c9c9b51f1d9a5e1650bbdb398fc78f836936c9/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fasm.md", "raw_url": "https://github.com/rust-lang/rust/raw/41c9c9b51f1d9a5e1650bbdb398fc78f836936c9/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fasm.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fasm.md?ref=41c9c9b51f1d9a5e1650bbdb398fc78f836936c9", "patch": "@@ -376,7 +376,7 @@ unsafe {\n \n The compiler is allowed to instantiate multiple copies an `asm!` block, for example when the function containing it is inlined in multiple places. As a consequence, you should only use GNU assembler [local labels] inside inline assembly code. Defining symbols in assembly code may lead to assembler and/or linker errors due to duplicate symbol definitions.\n \n-Moreover due to [a llvm bug], you cannot use `0` or `1` as labels. Therefore only labels in the `2`-`99` range are allowed.\n+Moreover, due to [an llvm bug], you shouldn't use labels exclusively make of `0` and `1` digits, e.g. `0`, `11` or `101010`, as they may end up being interpreted as binary values.\n \n ```rust\n #![feature(asm)]\n@@ -407,7 +407,7 @@ First that the same number can be used as a label multiple times in the same inl\n Second, that when a numeric label is used as a reference (as an instruction operand, for example), the suffixes b (\u201cbackward\u201d) or f (\u201cforward\u201d) should be added to the numeric label. It will then refer to the nearest label defined by this number in this direction.\n \n [local labels]: https://sourceware.org/binutils/docs/as/Symbol-Names.html#Local-Labels\n-[a llvm bug]: https://bugs.llvm.org/show_bug.cgi?id=36144\n+[an llvm bug]: https://bugs.llvm.org/show_bug.cgi?id=36144\n \n ## Options\n "}]}