{"sha": "6c476127aedc37b43769469f87e0fbc382382739", "node_id": "C_kwDOAAsO6NoAKDZjNDc2MTI3YWVkYzM3YjQzNzY5NDY5Zjg3ZTBmYmMzODIzODI3Mzk", "commit": {"author": {"name": "Travis Finkenauer", "email": "tmfink@users.noreply.github.com", "date": "2022-02-15T23:25:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-15T23:25:44Z"}, "message": "Add context to get_toml_path() error (#5207)\n\n* rustfmt: print full error chain\r\n\r\n* Add context to get_toml_path() error\r\n\r\nInstead of an error like:\r\n\r\n```\r\nPermission denied (os error 13)\r\n```\r\n\r\nGives error like:\r\n\r\n```\r\nFailed to get metadata for config file \"/root/.rustfmt.toml\": Permission denied (os error 13)\r\n```", "tree": {"sha": "debdfcdde3303565f1140039a017159958bba6a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/debdfcdde3303565f1140039a017159958bba6a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c476127aedc37b43769469f87e0fbc382382739", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiDDZ4CRBK7hj4Ov3rIwAAn/UIAJbXmnW7vFqQ5kYKdL1jjwZJ\noy0xZ4Y8rkeV2PH6DV1hpgRBc9Mr9bNEScj5KBG+aC0+XnDrKVskGq9Hw1aB149i\ngJOExaVQ5BB2oNn7QgcX7SOCSNDXNT8UZNGw5h4xotGynpcW2O9rYRv2b/vs9KsL\naGPrI+XhVGUYxyF92r1v3l8Ad9DyPuqxIbVCowMEla41N8gDcqtGL814WNRxGU6c\nvdxIL05yKQmrm4LuXOUB62EZy8HWXqyL+477v23kHKXlBeUc1AjGquDxs3cw8mXL\nHovuG7HgjBTwq0B3vCvSIFkx57g7kvoDytoQNWKq5LDZDlhAtjRAFYICQKyPFpI=\n=kKor\n-----END PGP SIGNATURE-----\n", "payload": "tree debdfcdde3303565f1140039a017159958bba6a5\nparent 1e78a2b258470fcab13e8c933212667e64b21d3e\nauthor Travis Finkenauer <tmfink@users.noreply.github.com> 1644967544 -0800\ncommitter GitHub <noreply@github.com> 1644967544 -0600\n\nAdd context to get_toml_path() error (#5207)\n\n* rustfmt: print full error chain\r\n\r\n* Add context to get_toml_path() error\r\n\r\nInstead of an error like:\r\n\r\n```\r\nPermission denied (os error 13)\r\n```\r\n\r\nGives error like:\r\n\r\n```\r\nFailed to get metadata for config file \"/root/.rustfmt.toml\": Permission denied (os error 13)\r\n```"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c476127aedc37b43769469f87e0fbc382382739", "html_url": "https://github.com/rust-lang/rust/commit/6c476127aedc37b43769469f87e0fbc382382739", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c476127aedc37b43769469f87e0fbc382382739/comments", "author": {"login": "tmfink", "id": 5265592, "node_id": "MDQ6VXNlcjUyNjU1OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/5265592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmfink", "html_url": "https://github.com/tmfink", "followers_url": "https://api.github.com/users/tmfink/followers", "following_url": "https://api.github.com/users/tmfink/following{/other_user}", "gists_url": "https://api.github.com/users/tmfink/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmfink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmfink/subscriptions", "organizations_url": "https://api.github.com/users/tmfink/orgs", "repos_url": "https://api.github.com/users/tmfink/repos", "events_url": "https://api.github.com/users/tmfink/events{/privacy}", "received_events_url": "https://api.github.com/users/tmfink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e78a2b258470fcab13e8c933212667e64b21d3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e78a2b258470fcab13e8c933212667e64b21d3e", "html_url": "https://github.com/rust-lang/rust/commit/1e78a2b258470fcab13e8c933212667e64b21d3e"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "ad10b9ede608fdb1da2ed45493d4d6696716de79", "filename": "src/bin/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c476127aedc37b43769469f87e0fbc382382739/src%2Fbin%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c476127aedc37b43769469f87e0fbc382382739/src%2Fbin%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmain.rs?ref=6c476127aedc37b43769469f87e0fbc382382739", "patch": "@@ -26,7 +26,7 @@ fn main() {\n     let exit_code = match execute(&opts) {\n         Ok(code) => code,\n         Err(e) => {\n-            eprintln!(\"{}\", e);\n+            eprintln!(\"{:#}\", e);\n             1\n         }\n     };"}, {"sha": "5041e1e36dd6d76f1fefaf0db9c22e985ff097d4", "filename": "src/config/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6c476127aedc37b43769469f87e0fbc382382739/src%2Fconfig%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c476127aedc37b43769469f87e0fbc382382739/src%2Fconfig%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Fmod.rs?ref=6c476127aedc37b43769469f87e0fbc382382739", "patch": "@@ -364,7 +364,9 @@ fn get_toml_path(dir: &Path) -> Result<Option<PathBuf>, Error> {\n             // find the project file yet, and continue searching.\n             Err(e) => {\n                 if e.kind() != ErrorKind::NotFound {\n-                    return Err(e);\n+                    let ctx = format!(\"Failed to get metadata for config file {:?}\", &config_file);\n+                    let err = anyhow::Error::new(e).context(ctx);\n+                    return Err(Error::new(ErrorKind::Other, err));\n                 }\n             }\n             _ => {}"}]}