{"sha": "3ea99166253021bd6f8c429b253d694572605bca", "node_id": "C_kwDOAAsO6NoAKDNlYTk5MTY2MjUzMDIxYmQ2ZjhjNDI5YjI1M2Q2OTQ1NzI2MDViY2E", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-07-27T18:08:22Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-07-27T18:08:22Z"}, "message": "rustdoc: remove Clean trait impl for hir::Term", "tree": {"sha": "63324b81c49c237e8cc96113474344d75cb06c21", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63324b81c49c237e8cc96113474344d75cb06c21"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ea99166253021bd6f8c429b253d694572605bca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ea99166253021bd6f8c429b253d694572605bca", "html_url": "https://github.com/rust-lang/rust/commit/3ea99166253021bd6f8c429b253d694572605bca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ea99166253021bd6f8c429b253d694572605bca/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8aca8835a0667c29e5d4af0c32bfae172c3b66fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/8aca8835a0667c29e5d4af0c32bfae172c3b66fd", "html_url": "https://github.com/rust-lang/rust/commit/8aca8835a0667c29e5d4af0c32bfae172c3b66fd"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "c7845172d48d6e0d5f83ddeeb87f7c99bc04e0ee", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3ea99166253021bd6f8c429b253d694572605bca/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea99166253021bd6f8c429b253d694572605bca/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=3ea99166253021bd6f8c429b253d694572605bca", "patch": "@@ -405,14 +405,12 @@ fn clean_middle_term<'tcx>(term: ty::Term<'tcx>, cx: &mut DocContext<'tcx>) -> T\n     }\n }\n \n-impl<'tcx> Clean<'tcx, Term> for hir::Term<'tcx> {\n-    fn clean(&self, cx: &mut DocContext<'tcx>) -> Term {\n-        match self {\n-            hir::Term::Ty(ty) => Term::Type(clean_ty(ty, cx)),\n-            hir::Term::Const(c) => {\n-                let def_id = cx.tcx.hir().local_def_id(c.hir_id);\n-                Term::Constant(clean_middle_const(ty::Const::from_anon_const(cx.tcx, def_id), cx))\n-            }\n+fn clean_hir_term<'tcx>(term: &hir::Term<'tcx>, cx: &mut DocContext<'tcx>) -> Term {\n+    match term {\n+        hir::Term::Ty(ty) => Term::Type(clean_ty(ty, cx)),\n+        hir::Term::Const(c) => {\n+            let def_id = cx.tcx.hir().local_def_id(c.hir_id);\n+            Term::Constant(clean_middle_const(ty::Const::from_anon_const(cx.tcx, def_id), cx))\n         }\n     }\n }\n@@ -2283,7 +2281,7 @@ impl<'tcx> Clean<'tcx, TypeBindingKind> for hir::TypeBindingKind<'tcx> {\n     fn clean(&self, cx: &mut DocContext<'tcx>) -> TypeBindingKind {\n         match *self {\n             hir::TypeBindingKind::Equality { ref term } => {\n-                TypeBindingKind::Equality { term: term.clean(cx) }\n+                TypeBindingKind::Equality { term: clean_hir_term(term, cx) }\n             }\n             hir::TypeBindingKind::Constraint { bounds } => TypeBindingKind::Constraint {\n                 bounds: bounds.iter().filter_map(|b| b.clean(cx)).collect(),"}]}