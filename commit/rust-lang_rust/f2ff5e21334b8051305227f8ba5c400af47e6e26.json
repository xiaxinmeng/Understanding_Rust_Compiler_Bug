{"sha": "f2ff5e21334b8051305227f8ba5c400af47e6e26", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyZmY1ZTIxMzM0YjgwNTEzMDUyMjdmOGJhNWM0MDBhZjQ3ZTZlMjY=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-02-21T11:13:44Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-02-21T11:13:44Z"}, "message": "Update ui test output", "tree": {"sha": "e632f7a7051fe0a766e5266bd39e29c4f0ed7f0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e632f7a7051fe0a766e5266bd39e29c4f0ed7f0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2ff5e21334b8051305227f8ba5c400af47e6e26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2ff5e21334b8051305227f8ba5c400af47e6e26", "html_url": "https://github.com/rust-lang/rust/commit/f2ff5e21334b8051305227f8ba5c400af47e6e26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2ff5e21334b8051305227f8ba5c400af47e6e26/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42c451c122be4a1017780c08ff14eee430036029", "url": "https://api.github.com/repos/rust-lang/rust/commits/42c451c122be4a1017780c08ff14eee430036029", "html_url": "https://github.com/rust-lang/rust/commit/42c451c122be4a1017780c08ff14eee430036029"}], "stats": {"total": 185, "additions": 97, "deletions": 88}, "files": [{"sha": "608ee7f2629f755e1852d8a8736d75b36da9e6a5", "filename": "tests/ui/for_loop.stderr", "status": "modified", "additions": 97, "deletions": 88, "changes": 185, "blob_url": "https://github.com/rust-lang/rust/blob/f2ff5e21334b8051305227f8ba5c400af47e6e26/tests%2Fui%2Ffor_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f2ff5e21334b8051305227f8ba5c400af47e6e26/tests%2Fui%2Ffor_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loop.stderr?ref=f2ff5e21334b8051305227f8ba5c400af47e6e26", "patch": "@@ -381,7 +381,7 @@ error: this range is empty so this for loop will never run\n 268 | |     }\n     | |_____^ ...ending here\n \n-error: it is more idiomatic to loop over `&vec` instead of `vec.iter()`\n+error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n    --> $DIR/for_loop.rs:289:15\n     |\n 289 |     for _v in vec.iter() { }\n@@ -392,19 +392,19 @@ note: lint level defined here\n     |\n 90  | #[deny(needless_range_loop, explicit_iter_loop, explicit_into_iter_loop, iter_next_loop, reverse_range_loop, explicit_counter_loop, for_kv_map)]\n     |                             ^^^^^^^^^^^^^^^^^^\n-help: to write this more concisely, try looping over\n+help: to write this more concisely, try\n     |     for _v in &vec { }\n \n-error: it is more idiomatic to loop over `&mut vec` instead of `vec.iter_mut()`\n+error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n    --> $DIR/for_loop.rs:294:15\n     |\n 294 |     for _v in vec.iter_mut() { }\n     |               ^^^^^^^^^^^^^^\n     |\n-help: to write this more concisely, try looping over\n+help: to write this more concisely, try\n     |     for _v in &mut vec { }\n \n-error: it is more idiomatic to loop over `out_vec` instead of `out_vec.into_iter()`\n+error: it is more idiomatic to loop over containers instead of using explicit iteration methods`\n    --> $DIR/for_loop.rs:300:15\n     |\n 300 |     for _v in out_vec.into_iter() { }\n@@ -415,94 +415,103 @@ note: lint level defined here\n     |\n 90  | #[deny(needless_range_loop, explicit_iter_loop, explicit_into_iter_loop, iter_next_loop, reverse_range_loop, explicit_counter_loop, for_kv_map)]\n     |                                                 ^^^^^^^^^^^^^^^^^^^^^^^\n-help: to write this more concisely, try looping over\n+help: to write this more concisely, try\n     |     for _v in out_vec { }\n \n-error: it is more idiomatic to loop over `&[1, 2, 3]` instead of `[1, 2, 3].iter()`\n-   --> $DIR/for_loop.rs:308:15\n+error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n+   --> $DIR/for_loop.rs:306:15\n     |\n-308 |     for _v in [1, 2, 3].iter() { }\n+306 |     for _v in array.into_iter() {}\n+    |               ^^^^^^^^^^^^^^^^^\n+    |\n+help: to write this more concisely, try\n+    |     for _v in &array {}\n+\n+error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n+   --> $DIR/for_loop.rs:311:15\n+    |\n+311 |     for _v in [1, 2, 3].iter() { }\n     |               ^^^^^^^^^^^^^^^^\n     |\n-help: to write this more concisely, try looping over\n+help: to write this more concisely, try\n     |     for _v in &[1, 2, 3] { }\n \n-error: it is more idiomatic to loop over `&[0; 32]` instead of `[0; 32].iter()`\n-   --> $DIR/for_loop.rs:315:15\n+error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n+   --> $DIR/for_loop.rs:318:15\n     |\n-315 |     for _v in [0; 32].iter() {}\n+318 |     for _v in [0; 32].iter() {}\n     |               ^^^^^^^^^^^^^^\n     |\n-help: to write this more concisely, try looping over\n+help: to write this more concisely, try\n     |     for _v in &[0; 32] {}\n \n-error: it is more idiomatic to loop over `&ll` instead of `ll.iter()`\n-   --> $DIR/for_loop.rs:323:15\n+error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n+   --> $DIR/for_loop.rs:326:15\n     |\n-323 |     for _v in ll.iter() { }\n+326 |     for _v in ll.iter() { }\n     |               ^^^^^^^^^\n     |\n-help: to write this more concisely, try looping over\n+help: to write this more concisely, try\n     |     for _v in &ll { }\n \n-error: it is more idiomatic to loop over `&vd` instead of `vd.iter()`\n-   --> $DIR/for_loop.rs:329:15\n+error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n+   --> $DIR/for_loop.rs:332:15\n     |\n-329 |     for _v in vd.iter() { }\n+332 |     for _v in vd.iter() { }\n     |               ^^^^^^^^^\n     |\n-help: to write this more concisely, try looping over\n+help: to write this more concisely, try\n     |     for _v in &vd { }\n \n-error: it is more idiomatic to loop over `&bh` instead of `bh.iter()`\n-   --> $DIR/for_loop.rs:335:15\n+error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n+   --> $DIR/for_loop.rs:338:15\n     |\n-335 |     for _v in bh.iter() { }\n+338 |     for _v in bh.iter() { }\n     |               ^^^^^^^^^\n     |\n-help: to write this more concisely, try looping over\n+help: to write this more concisely, try\n     |     for _v in &bh { }\n \n-error: it is more idiomatic to loop over `&hm` instead of `hm.iter()`\n-   --> $DIR/for_loop.rs:341:15\n+error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n+   --> $DIR/for_loop.rs:344:15\n     |\n-341 |     for _v in hm.iter() { }\n+344 |     for _v in hm.iter() { }\n     |               ^^^^^^^^^\n     |\n-help: to write this more concisely, try looping over\n+help: to write this more concisely, try\n     |     for _v in &hm { }\n \n-error: it is more idiomatic to loop over `&bt` instead of `bt.iter()`\n-   --> $DIR/for_loop.rs:347:15\n+error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n+   --> $DIR/for_loop.rs:350:15\n     |\n-347 |     for _v in bt.iter() { }\n+350 |     for _v in bt.iter() { }\n     |               ^^^^^^^^^\n     |\n-help: to write this more concisely, try looping over\n+help: to write this more concisely, try\n     |     for _v in &bt { }\n \n-error: it is more idiomatic to loop over `&hs` instead of `hs.iter()`\n-   --> $DIR/for_loop.rs:353:15\n+error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n+   --> $DIR/for_loop.rs:356:15\n     |\n-353 |     for _v in hs.iter() { }\n+356 |     for _v in hs.iter() { }\n     |               ^^^^^^^^^\n     |\n-help: to write this more concisely, try looping over\n+help: to write this more concisely, try\n     |     for _v in &hs { }\n \n-error: it is more idiomatic to loop over `&bs` instead of `bs.iter()`\n-   --> $DIR/for_loop.rs:359:15\n+error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n+   --> $DIR/for_loop.rs:362:15\n     |\n-359 |     for _v in bs.iter() { }\n+362 |     for _v in bs.iter() { }\n     |               ^^^^^^^^^\n     |\n-help: to write this more concisely, try looping over\n+help: to write this more concisely, try\n     |     for _v in &bs { }\n \n error: you are iterating over `Iterator::next()` which is an Option; this will compile but is probably not what you want\n-   --> $DIR/for_loop.rs:365:5\n+   --> $DIR/for_loop.rs:368:5\n     |\n-365 |     for _v in vec.iter().next() { }\n+368 |     for _v in vec.iter().next() { }\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n note: lint level defined here\n@@ -512,9 +521,9 @@ note: lint level defined here\n     |                                                                          ^^^^^^^^^^^^^^\n \n error: you are collect()ing an iterator and throwing away the result. Consider using an explicit for loop to exhaust the iterator\n-   --> $DIR/for_loop.rs:372:5\n+   --> $DIR/for_loop.rs:375:5\n     |\n-372 |     vec.iter().map(|x| out.push(x)).collect::<Vec<_>>();\n+375 |     vec.iter().map(|x| out.push(x)).collect::<Vec<_>>();\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n note: lint level defined here\n@@ -524,9 +533,9 @@ note: lint level defined here\n     |        ^^^^^^^^^^^^^^\n \n error: the variable `_index` is used as a loop counter. Consider using `for (_index, item) in &vec.enumerate()` or similar iterators\n-   --> $DIR/for_loop.rs:377:5\n+   --> $DIR/for_loop.rs:380:5\n     |\n-377 |     for _v in &vec { _index += 1 }\n+380 |     for _v in &vec { _index += 1 }\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n note: lint level defined here\n@@ -536,22 +545,22 @@ note: lint level defined here\n     |                                                                                                              ^^^^^^^^^^^^^^^^^^^^^\n \n error: the variable `_index` is used as a loop counter. Consider using `for (_index, item) in &vec.enumerate()` or similar iterators\n-   --> $DIR/for_loop.rs:381:5\n+   --> $DIR/for_loop.rs:384:5\n     |\n-381 |     for _v in &vec { _index += 1 }\n+384 |     for _v in &vec { _index += 1 }\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you seem to want to iterate on a map's values\n-   --> $DIR/for_loop.rs:441:5\n+   --> $DIR/for_loop.rs:444:5\n     |\n-441 |       for (_, v) in &m {\n+444 |       for (_, v) in &m {\n     |  _____^ starting here...\n-442 | |\n-443 | |\n-444 | |\n 445 | |\n-446 | |         let _v = v;\n-447 | |     }\n+446 | |\n+447 | |\n+448 | |\n+449 | |         let _v = v;\n+450 | |     }\n     | |_____^ ...ending here\n     |\n note: lint level defined here\n@@ -563,70 +572,70 @@ help: use the corresponding method\n     |     for v in m.values() {\n \n error: you seem to want to iterate on a map's values\n-   --> $DIR/for_loop.rs:450:5\n+   --> $DIR/for_loop.rs:453:5\n     |\n-450 |       for (_, v) in &*m {\n+453 |       for (_, v) in &*m {\n     |  _____^ starting here...\n-451 | |\n-452 | |\n-453 | |\n 454 | |\n-455 | |         let _v = v;\n-456 | |         // Here the `*` is not actually necesarry, but the test tests that we don't suggest\n-457 | |         // `in *m.values()` as we used to\n-458 | |     }\n+455 | |\n+456 | |\n+457 | |\n+458 | |         let _v = v;\n+459 | |         // Here the `*` is not actually necesarry, but the test tests that we don't suggest\n+460 | |         // `in *m.values()` as we used to\n+461 | |     }\n     | |_____^ ...ending here\n     |\n help: use the corresponding method\n     |     for v in (*m).values() {\n \n error: you seem to want to iterate on a map's values\n-   --> $DIR/for_loop.rs:461:5\n+   --> $DIR/for_loop.rs:464:5\n     |\n-461 |       for (_, v) in &mut m {\n+464 |       for (_, v) in &mut m {\n     |  _____^ starting here...\n-462 | |\n-463 | |\n-464 | |\n 465 | |\n-466 | |         let _v = v;\n-467 | |     }\n+466 | |\n+467 | |\n+468 | |\n+469 | |         let _v = v;\n+470 | |     }\n     | |_____^ ...ending here\n     |\n help: use the corresponding method\n     |     for v in m.values_mut() {\n \n error: you seem to want to iterate on a map's values\n-   --> $DIR/for_loop.rs:470:5\n+   --> $DIR/for_loop.rs:473:5\n     |\n-470 |       for (_, v) in &mut *m {\n+473 |       for (_, v) in &mut *m {\n     |  _____^ starting here...\n-471 | |\n-472 | |\n-473 | |\n 474 | |\n-475 | |         let _v = v;\n-476 | |     }\n+475 | |\n+476 | |\n+477 | |\n+478 | |         let _v = v;\n+479 | |     }\n     | |_____^ ...ending here\n     |\n help: use the corresponding method\n     |     for v in (*m).values_mut() {\n \n error: you seem to want to iterate on a map's keys\n-   --> $DIR/for_loop.rs:480:5\n+   --> $DIR/for_loop.rs:483:5\n     |\n-480 |       for (k, _value) in rm {\n+483 |       for (k, _value) in rm {\n     |  _____^ starting here...\n-481 | |\n-482 | |\n-483 | |\n 484 | |\n-485 | |         let _k = k;\n-486 | |     }\n+485 | |\n+486 | |\n+487 | |\n+488 | |         let _k = k;\n+489 | |     }\n     | |_____^ ...ending here\n     |\n help: use the corresponding method\n     |     for k in rm.keys() {\n \n-error: aborting due to 47 previous errors\n+error: aborting due to 48 previous errors\n "}]}