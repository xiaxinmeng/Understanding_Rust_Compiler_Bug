{"sha": "7985510e37b91cab66a808ef6b3e4110e369dc9e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5ODU1MTBlMzdiOTFjYWI2NmE4MDhlZjZiM2U0MTEwZTM2OWRjOWU=", "commit": {"author": {"name": "Pi Lanningham", "email": "pi.lanningham@gmail.com", "date": "2019-10-25T18:46:07Z"}, "committer": {"name": "Pi Lanningham", "email": "pi.lanningham@gmail.com", "date": "2019-10-27T01:42:52Z"}, "message": "Use ident instead of def_span in dead-code pass\n\nAccording to @estebank, def_span scans forward on the line until it finds a {,\nand if it can't find one, fallse back to the span for the whole item.  This\nwas apparently written before the identifier span was explicitly tracked on\neach node.\n\nThis means that if an unused function signature spans multiple lines, the\nentire function (potentially hundreds of lines) gets flagged as dead code.\nThis could, for example, cause IDEs to add error squiggly's to the whole\nfunction.\n\nBy using the span from the ident instead, we narrow the scope of this in\nmost cases.  In a wider sense, it's probably safe to use ident.span\ninstead of def_span in most locations throughout the whole code base,\nbut since this is my first contribution, I kept it small.\n\nSome interesting points that came up while I was working on this:\n - I reorganized the tests a bit to bring some of the dead code ones all\n   into the same location\n - A few tests were for things unrelated to dead code (like the\n   path-lookahead for parens), so I added #![allow(dead_code)] and\n   cleaned up the stderr file to reduce noise in the future\n - The same fix doesn't apply to const and static declarations.  I tried\n   adding these cases to the match expression, but that created a much\n   wider change to tests and error messages, so I left it off until I\n   could get some code review to validate the approach.", "tree": {"sha": "8d082e07fe63f593109cc305d3097f6d2494043c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d082e07fe63f593109cc305d3097f6d2494043c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7985510e37b91cab66a808ef6b3e4110e369dc9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7985510e37b91cab66a808ef6b3e4110e369dc9e", "html_url": "https://github.com/rust-lang/rust/commit/7985510e37b91cab66a808ef6b3e4110e369dc9e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7985510e37b91cab66a808ef6b3e4110e369dc9e/comments", "author": {"login": "Quantumplation", "id": 49870, "node_id": "MDQ6VXNlcjQ5ODcw", "avatar_url": "https://avatars.githubusercontent.com/u/49870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Quantumplation", "html_url": "https://github.com/Quantumplation", "followers_url": "https://api.github.com/users/Quantumplation/followers", "following_url": "https://api.github.com/users/Quantumplation/following{/other_user}", "gists_url": "https://api.github.com/users/Quantumplation/gists{/gist_id}", "starred_url": "https://api.github.com/users/Quantumplation/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Quantumplation/subscriptions", "organizations_url": "https://api.github.com/users/Quantumplation/orgs", "repos_url": "https://api.github.com/users/Quantumplation/repos", "events_url": "https://api.github.com/users/Quantumplation/events{/privacy}", "received_events_url": "https://api.github.com/users/Quantumplation/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Quantumplation", "id": 49870, "node_id": "MDQ6VXNlcjQ5ODcw", "avatar_url": "https://avatars.githubusercontent.com/u/49870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Quantumplation", "html_url": "https://github.com/Quantumplation", "followers_url": "https://api.github.com/users/Quantumplation/followers", "following_url": "https://api.github.com/users/Quantumplation/following{/other_user}", "gists_url": "https://api.github.com/users/Quantumplation/gists{/gist_id}", "starred_url": "https://api.github.com/users/Quantumplation/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Quantumplation/subscriptions", "organizations_url": "https://api.github.com/users/Quantumplation/orgs", "repos_url": "https://api.github.com/users/Quantumplation/repos", "events_url": "https://api.github.com/users/Quantumplation/events{/privacy}", "received_events_url": "https://api.github.com/users/Quantumplation/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e063ddb12e1e1d2ca0ab05b9976ee1d0b20a34e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/e063ddb12e1e1d2ca0ab05b9976ee1d0b20a34e1", "html_url": "https://github.com/rust-lang/rust/commit/e063ddb12e1e1d2ca0ab05b9976ee1d0b20a34e1"}], "stats": {"total": 212, "additions": 114, "deletions": 98}, "files": [{"sha": "9ad63f28a8e1637bdfd16558249c5ff8d7f38e0b", "filename": "src/librustc_passes/dead.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Flibrustc_passes%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Flibrustc_passes%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fdead.rs?ref=7985510e37b91cab66a808ef6b3e4110e369dc9e", "patch": "@@ -578,7 +578,7 @@ impl Visitor<'tcx> for DeadVisitor<'tcx> {\n                 hir::ItemKind::Struct(..) |\n                 hir::ItemKind::Union(..) |\n                 hir::ItemKind::Trait(..) |\n-                hir::ItemKind::Impl(..) => self.tcx.sess.source_map().def_span(item.span),\n+                hir::ItemKind::Impl(..) => item.ident.span,\n                 _ => item.span,\n             };\n             let participle = match item.kind {"}, {"sha": "5ab3dfb24496f854ed0584f3559f7121d2ab6f61", "filename": "src/test/ui-fulldeps/lint-plugin-cmdline-allow.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui-fulldeps%2Flint-plugin-cmdline-allow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui-fulldeps%2Flint-plugin-cmdline-allow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flint-plugin-cmdline-allow.stderr?ref=7985510e37b91cab66a808ef6b3e4110e369dc9e", "patch": "@@ -7,10 +7,10 @@ LL | #![plugin(lint_plugin_test)]\n    = note: `#[warn(deprecated)]` on by default\n \n warning: function is never used: `lintme`\n-  --> $DIR/lint-plugin-cmdline-allow.rs:10:1\n+  --> $DIR/lint-plugin-cmdline-allow.rs:10:4\n    |\n LL | fn lintme() { }\n-   | ^^^^^^^^^^^\n+   |    ^^^^^^\n    |\n note: lint level defined here\n   --> $DIR/lint-plugin-cmdline-allow.rs:7:9"}, {"sha": "3a9fd7c2867f2099943941e691f52e2b2406249a", "filename": "src/test/ui-fulldeps/lint-tool-cmdline-allow.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui-fulldeps%2Flint-tool-cmdline-allow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui-fulldeps%2Flint-tool-cmdline-allow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flint-tool-cmdline-allow.stderr?ref=7985510e37b91cab66a808ef6b3e4110e369dc9e", "patch": "@@ -19,10 +19,10 @@ LL | fn lintme() {}\n    = note: `#[warn(clippy::test_lint)]` on by default\n \n warning: function is never used: `lintme`\n-  --> $DIR/lint-tool-cmdline-allow.rs:10:1\n+  --> $DIR/lint-tool-cmdline-allow.rs:10:4\n    |\n LL | fn lintme() {}\n-   | ^^^^^^^^^^^\n+   |    ^^^^^^\n    |\n note: lint level defined here\n   --> $DIR/lint-tool-cmdline-allow.rs:7:9"}, {"sha": "194398e5a07a5e0350e77565791979540bc3d7ef", "filename": "src/test/ui/lint/dead-code/basic.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fbasic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fbasic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fbasic.stderr?ref=7985510e37b91cab66a808ef6b3e4110e369dc9e", "patch": "@@ -1,8 +1,8 @@\n error: function is never used: `foo`\n-  --> $DIR/basic.rs:4:1\n+  --> $DIR/basic.rs:4:4\n    |\n LL | fn foo() {\n-   | ^^^^^^^^\n+   |    ^^^\n    |\n note: lint level defined here\n   --> $DIR/basic.rs:1:9"}, {"sha": "44b0a8f613e27240506aa3b6c4f00d64938b7638", "filename": "src/test/ui/lint/dead-code/empty-unused-enum.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fempty-unused-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fempty-unused-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fempty-unused-enum.stderr?ref=7985510e37b91cab66a808ef6b3e4110e369dc9e", "patch": "@@ -1,8 +1,8 @@\n error: enum is never used: `E`\n-  --> $DIR/empty-unused-enum.rs:3:1\n+  --> $DIR/empty-unused-enum.rs:3:6\n    |\n LL | enum E {}\n-   | ^^^^^^\n+   |      ^\n    |\n note: lint level defined here\n   --> $DIR/empty-unused-enum.rs:1:9"}, {"sha": "bac46a2e843cd93fb9f6c8c3e63fa24c5f8e0644", "filename": "src/test/ui/lint/dead-code/lint-dead-code-1.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-1.stderr?ref=7985510e37b91cab66a808ef6b3e4110e369dc9e", "patch": "@@ -1,8 +1,8 @@\n error: struct is never constructed: `Bar`\n-  --> $DIR/lint-dead-code-1.rs:12:5\n+  --> $DIR/lint-dead-code-1.rs:12:16\n    |\n LL |     pub struct Bar;\n-   |     ^^^^^^^^^^^^^^^\n+   |                ^^^\n    |\n note: lint level defined here\n   --> $DIR/lint-dead-code-1.rs:5:9\n@@ -23,16 +23,16 @@ LL | const priv_const: isize = 0;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: struct is never constructed: `PrivStruct`\n-  --> $DIR/lint-dead-code-1.rs:35:1\n+  --> $DIR/lint-dead-code-1.rs:35:8\n    |\n LL | struct PrivStruct;\n-   | ^^^^^^^^^^^^^^^^^^\n+   |        ^^^^^^^^^^\n \n error: enum is never used: `priv_enum`\n-  --> $DIR/lint-dead-code-1.rs:64:1\n+  --> $DIR/lint-dead-code-1.rs:64:6\n    |\n LL | enum priv_enum { foo2, bar2 }\n-   | ^^^^^^^^^^^^^^\n+   |      ^^^^^^^^^\n \n error: variant is never constructed: `bar3`\n   --> $DIR/lint-dead-code-1.rs:67:5\n@@ -41,28 +41,28 @@ LL |     bar3\n    |     ^^^^\n \n error: function is never used: `priv_fn`\n-  --> $DIR/lint-dead-code-1.rs:88:1\n+  --> $DIR/lint-dead-code-1.rs:88:4\n    |\n LL | fn priv_fn() {\n-   | ^^^^^^^^^^^^\n+   |    ^^^^^^^\n \n error: function is never used: `foo`\n-  --> $DIR/lint-dead-code-1.rs:93:1\n+  --> $DIR/lint-dead-code-1.rs:93:4\n    |\n LL | fn foo() {\n-   | ^^^^^^^^\n+   |    ^^^\n \n error: function is never used: `bar`\n-  --> $DIR/lint-dead-code-1.rs:98:1\n+  --> $DIR/lint-dead-code-1.rs:98:4\n    |\n LL | fn bar() {\n-   | ^^^^^^^^\n+   |    ^^^\n \n error: function is never used: `baz`\n-  --> $DIR/lint-dead-code-1.rs:102:1\n+  --> $DIR/lint-dead-code-1.rs:102:4\n    |\n LL | fn baz() -> impl Copy {\n-   | ^^^^^^^^^^^^^^^^^^^^^\n+   |    ^^^\n \n error: aborting due to 10 previous errors\n "}, {"sha": "a578a76d9a075d3cbc5d5e9efe30a739e057ce92", "filename": "src/test/ui/lint/dead-code/lint-dead-code-2.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-2.stderr?ref=7985510e37b91cab66a808ef6b3e4110e369dc9e", "patch": "@@ -1,8 +1,8 @@\n error: function is never used: `dead_fn`\n-  --> $DIR/lint-dead-code-2.rs:22:1\n+  --> $DIR/lint-dead-code-2.rs:22:4\n    |\n LL | fn dead_fn() {}\n-   | ^^^^^^^^^^^^\n+   |    ^^^^^^^\n    |\n note: lint level defined here\n   --> $DIR/lint-dead-code-2.rs:2:9\n@@ -11,16 +11,16 @@ LL | #![deny(dead_code)]\n    |         ^^^^^^^^^\n \n error: function is never used: `dead_fn2`\n-  --> $DIR/lint-dead-code-2.rs:25:1\n+  --> $DIR/lint-dead-code-2.rs:25:4\n    |\n LL | fn dead_fn2() {}\n-   | ^^^^^^^^^^^^^\n+   |    ^^^^^^^^\n \n error: function is never used: `main`\n-  --> $DIR/lint-dead-code-2.rs:38:1\n+  --> $DIR/lint-dead-code-2.rs:38:4\n    |\n LL | fn main() {\n-   | ^^^^^^^^^\n+   |    ^^^^\n \n error: aborting due to 3 previous errors\n "}, {"sha": "569196fffdd50b47e0f70b9f70bffa44c6757c3f", "filename": "src/test/ui/lint/dead-code/lint-dead-code-3.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-3.stderr?ref=7985510e37b91cab66a808ef6b3e4110e369dc9e", "patch": "@@ -1,8 +1,8 @@\n error: struct is never constructed: `Foo`\n-  --> $DIR/lint-dead-code-3.rs:13:1\n+  --> $DIR/lint-dead-code-3.rs:13:8\n    |\n LL | struct Foo;\n-   | ^^^^^^^^^^^\n+   |        ^^^\n    |\n note: lint level defined here\n   --> $DIR/lint-dead-code-3.rs:3:9\n@@ -17,16 +17,16 @@ LL |     fn foo(&self) {\n    |     ^^^^^^^^^^^^^\n \n error: function is never used: `bar`\n-  --> $DIR/lint-dead-code-3.rs:20:1\n+  --> $DIR/lint-dead-code-3.rs:20:4\n    |\n LL | fn bar() {\n-   | ^^^^^^^^\n+   |    ^^^\n \n error: enum is never used: `c_void`\n-  --> $DIR/lint-dead-code-3.rs:59:1\n+  --> $DIR/lint-dead-code-3.rs:59:6\n    |\n LL | enum c_void {}\n-   | ^^^^^^^^^^^\n+   |      ^^^^^^\n \n error: foreign function is never used: `free`\n   --> $DIR/lint-dead-code-3.rs:61:5"}, {"sha": "8eaf789f8f7934dd3dd89f8cca1a5ec1dde1c674", "filename": "src/test/ui/lint/dead-code/lint-dead-code-4.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-4.stderr?ref=7985510e37b91cab66a808ef6b3e4110e369dc9e", "patch": "@@ -27,10 +27,10 @@ LL | |     },\n    | |_____^\n \n error: enum is never used: `ABC`\n-  --> $DIR/lint-dead-code-4.rs:24:1\n+  --> $DIR/lint-dead-code-4.rs:24:6\n    |\n LL | enum ABC {\n-   | ^^^^^^^^\n+   |      ^^^\n \n error: variant is never constructed: `I`\n   --> $DIR/lint-dead-code-4.rs:36:5"}, {"sha": "9670d8e7a32e39b33a2558d9bfd4d55b65255b51", "filename": "src/test/ui/lint/dead-code/lint-dead-code-5.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-5.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-5.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Flint-dead-code-5.stderr?ref=7985510e37b91cab66a808ef6b3e4110e369dc9e", "patch": "@@ -23,10 +23,10 @@ LL |     Variant6(isize),\n    |     ^^^^^^^^^^^^^^^\n \n error: enum is never used: `Enum3`\n-  --> $DIR/lint-dead-code-5.rs:18:1\n+  --> $DIR/lint-dead-code-5.rs:18:6\n    |\n LL | enum Enum3 {\n-   | ^^^^^^^^^^\n+   |      ^^^^^\n \n error: aborting due to 4 previous errors\n "}, {"sha": "a4342056419d7dc2c3c70d99e60e223530b4d9ea", "filename": "src/test/ui/lint/dead-code/newline-span.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fnewline-span.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fnewline-span.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fnewline-span.rs?ref=7985510e37b91cab66a808ef6b3e4110e369dc9e", "patch": "@@ -0,0 +1,19 @@\n+#![deny(dead_code)]\n+\n+fn unused() { //~ error: function is never used:\n+    println!(\"blah\");\n+}\n+\n+fn unused2(var: i32) { //~ error: function is never used:\n+    println!(\"foo {}\", var);\n+}\n+\n+fn unused3( //~ error: function is never used:\n+    var: i32,\n+) {\n+    println!(\"bar {}\", var);\n+}\n+\n+fn main() {\n+    println!(\"Hello world!\");\n+}"}, {"sha": "c5d0d605067442eda89afa20d6b77ebc157217c0", "filename": "src/test/ui/lint/dead-code/newline-span.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fnewline-span.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fnewline-span.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fnewline-span.stderr?ref=7985510e37b91cab66a808ef6b3e4110e369dc9e", "patch": "@@ -0,0 +1,26 @@\n+error: function is never used: `unused`\n+  --> $DIR/newline-span.rs:3:4\n+   |\n+LL | fn unused() {\n+   |    ^^^^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/newline-span.rs:1:9\n+   |\n+LL | #![deny(dead_code)]\n+   |         ^^^^^^^^^\n+\n+error: function is never used: `unused2`\n+  --> $DIR/newline-span.rs:7:4\n+   |\n+LL | fn unused2(var: i32) {\n+   |    ^^^^^^^\n+\n+error: function is never used: `unused3`\n+  --> $DIR/newline-span.rs:11:4\n+   |\n+LL | fn unused3(\n+   |    ^^^^^^^\n+\n+error: aborting due to 3 previous errors\n+"}, {"sha": "142c2ccb99b05603e1a962375b172c7eb34b8956", "filename": "src/test/ui/lint/dead-code/unused-enum.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Flint%2Fdead-code%2Funused-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Flint%2Fdead-code%2Funused-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Funused-enum.stderr?ref=7985510e37b91cab66a808ef6b3e4110e369dc9e", "patch": "@@ -1,8 +1,8 @@\n error: struct is never constructed: `F`\n-  --> $DIR/unused-enum.rs:3:1\n+  --> $DIR/unused-enum.rs:3:8\n    |\n LL | struct F;\n-   | ^^^^^^^^^\n+   |        ^\n    |\n note: lint level defined here\n   --> $DIR/unused-enum.rs:1:9\n@@ -12,16 +12,16 @@ LL | #![deny(unused)]\n    = note: `#[deny(dead_code)]` implied by `#[deny(unused)]`\n \n error: struct is never constructed: `B`\n-  --> $DIR/unused-enum.rs:4:1\n+  --> $DIR/unused-enum.rs:4:8\n    |\n LL | struct B;\n-   | ^^^^^^^^^\n+   |        ^\n \n error: enum is never used: `E`\n-  --> $DIR/unused-enum.rs:6:1\n+  --> $DIR/unused-enum.rs:6:6\n    |\n LL | enum E {\n-   | ^^^^^^\n+   |      ^\n \n error: aborting due to 3 previous errors\n "}, {"sha": "0b6ab67d9bfa5e90a1ce496afdb44e7691ff6edf", "filename": "src/test/ui/lint/dead-code/with-core-crate.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fwith-core-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fwith-core-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fwith-core-crate.stderr?ref=7985510e37b91cab66a808ef6b3e4110e369dc9e", "patch": "@@ -1,8 +1,8 @@\n error: function is never used: `foo`\n-  --> $DIR/with-core-crate.rs:7:1\n+  --> $DIR/with-core-crate.rs:7:4\n    |\n LL | fn foo() {\n-   | ^^^^^^^^\n+   |    ^^^\n    |\n note: lint level defined here\n   --> $DIR/with-core-crate.rs:1:9"}, {"sha": "86bcb08de404eddcc04839b11c2cdfe2b96652af", "filename": "src/test/ui/path-lookahead.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Fpath-lookahead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Fpath-lookahead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpath-lookahead.rs?ref=7985510e37b91cab66a808ef6b3e4110e369dc9e", "patch": "@@ -1,14 +1,14 @@\n // run-pass\n-\n-#![warn(unused)]\n+#![allow(dead_code)]\n+#![warn(unused_parens)]\n \n // Parser test for #37765\n \n-fn with_parens<T: ToString>(arg: T) -> String { //~WARN function is never used: `with_parens`\n+fn with_parens<T: ToString>(arg: T) -> String {\n   return (<T as ToString>::to_string(&arg)); //~WARN unnecessary parentheses around `return` value\n }\n \n-fn no_parens<T: ToString>(arg: T) -> String { //~WARN function is never used: `no_parens`\n+fn no_parens<T: ToString>(arg: T) -> String {\n   return <T as ToString>::to_string(&arg);\n }\n "}, {"sha": "caf9e8303ea37b4005f1dcf26d17df36198afed2", "filename": "src/test/ui/path-lookahead.stderr", "status": "modified", "additions": 2, "deletions": 22, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Fpath-lookahead.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Fpath-lookahead.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpath-lookahead.stderr?ref=7985510e37b91cab66a808ef6b3e4110e369dc9e", "patch": "@@ -7,26 +7,6 @@ LL |   return (<T as ToString>::to_string(&arg));\n note: lint level defined here\n   --> $DIR/path-lookahead.rs:3:9\n    |\n-LL | #![warn(unused)]\n-   |         ^^^^^^\n-   = note: `#[warn(unused_parens)]` implied by `#[warn(unused)]`\n-\n-warning: function is never used: `with_parens`\n-  --> $DIR/path-lookahead.rs:7:1\n-   |\n-LL | fn with_parens<T: ToString>(arg: T) -> String {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-note: lint level defined here\n-  --> $DIR/path-lookahead.rs:3:9\n-   |\n-LL | #![warn(unused)]\n-   |         ^^^^^^\n-   = note: `#[warn(dead_code)]` implied by `#[warn(unused)]`\n-\n-warning: function is never used: `no_parens`\n-  --> $DIR/path-lookahead.rs:11:1\n-   |\n-LL | fn no_parens<T: ToString>(arg: T) -> String {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![warn(unused_parens)]\n+   |         ^^^^^^^^^^^^^\n "}, {"sha": "439aedb4da4d290a1e57aa310cf053a8cefbbab2", "filename": "src/test/ui/span/macro-span-replacement.stderr", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Fspan%2Fmacro-span-replacement.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Fspan%2Fmacro-span-replacement.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fmacro-span-replacement.stderr?ref=7985510e37b91cab66a808ef6b3e4110e369dc9e", "patch": "@@ -1,11 +1,8 @@\n warning: struct is never constructed: `S`\n-  --> $DIR/macro-span-replacement.rs:7:14\n+  --> $DIR/macro-span-replacement.rs:7:12\n    |\n LL |         $b $a;\n-   |              ^\n-...\n-LL |     m!(S struct);\n-   |     ------------- in this macro invocation\n+   |            ^^\n    |\n note: lint level defined here\n   --> $DIR/macro-span-replacement.rs:3:9"}, {"sha": "d4d5bc1cbc8f133bb80db0c275d03908490fefb6", "filename": "src/test/ui/span/unused-warning-point-at-identifier.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Fspan%2Funused-warning-point-at-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Fspan%2Funused-warning-point-at-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Funused-warning-point-at-identifier.rs?ref=7985510e37b91cab66a808ef6b3e4110e369dc9e", "patch": "@@ -20,8 +20,8 @@ fn func() -> usize { //~ WARN function is never used\n     3\n }\n \n-fn //~ WARN function is never used\n-func_complete_span()\n+fn\n+func_complete_span() //~ WARN function is never used\n -> usize\n {\n     3", "previous_filename": "src/test/ui/span/unused-warning-point-at-signature.rs"}, {"sha": "a4715d4adeb8842ca472f2060b27a81c213497a4", "filename": "src/test/ui/span/unused-warning-point-at-identifier.stderr", "status": "renamed", "additions": 10, "deletions": 15, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Fspan%2Funused-warning-point-at-identifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Fspan%2Funused-warning-point-at-identifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Funused-warning-point-at-identifier.stderr?ref=7985510e37b91cab66a808ef6b3e4110e369dc9e", "patch": "@@ -1,36 +1,31 @@\n warning: enum is never used: `Enum`\n-  --> $DIR/unused-warning-point-at-signature.rs:5:1\n+  --> $DIR/unused-warning-point-at-identifier.rs:5:6\n    |\n LL | enum Enum {\n-   | ^^^^^^^^^\n+   |      ^^^^\n    |\n note: lint level defined here\n-  --> $DIR/unused-warning-point-at-signature.rs:3:9\n+  --> $DIR/unused-warning-point-at-identifier.rs:3:9\n    |\n LL | #![warn(unused)]\n    |         ^^^^^^\n    = note: `#[warn(dead_code)]` implied by `#[warn(unused)]`\n \n warning: struct is never constructed: `Struct`\n-  --> $DIR/unused-warning-point-at-signature.rs:12:1\n+  --> $DIR/unused-warning-point-at-identifier.rs:12:8\n    |\n LL | struct Struct {\n-   | ^^^^^^^^^^^^^\n+   |        ^^^^^^\n \n warning: function is never used: `func`\n-  --> $DIR/unused-warning-point-at-signature.rs:19:1\n+  --> $DIR/unused-warning-point-at-identifier.rs:19:4\n    |\n LL | fn func() -> usize {\n-   | ^^^^^^^^^^^^^^^^^^\n+   |    ^^^^\n \n warning: function is never used: `func_complete_span`\n-  --> $DIR/unused-warning-point-at-signature.rs:23:1\n+  --> $DIR/unused-warning-point-at-identifier.rs:24:1\n    |\n-LL | / fn\n-LL | | func_complete_span()\n-LL | | -> usize\n-LL | | {\n-LL | |     3\n-LL | | }\n-   | |_^\n+LL | func_complete_span()\n+   | ^^^^^^^^^^^^^^^^^^\n ", "previous_filename": "src/test/ui/span/unused-warning-point-at-signature.stderr"}, {"sha": "cb118cdb4103c21a6998f8a7616eaa8500c57815", "filename": "src/test/ui/test-attrs/test-warns-dead-code.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-warns-dead-code.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-warns-dead-code.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-warns-dead-code.stderr?ref=7985510e37b91cab66a808ef6b3e4110e369dc9e", "patch": "@@ -1,8 +1,8 @@\n error: function is never used: `dead`\n-  --> $DIR/test-warns-dead-code.rs:5:1\n+  --> $DIR/test-warns-dead-code.rs:5:4\n    |\n LL | fn dead() {}\n-   | ^^^^^^^^^\n+   |    ^^^^\n    |\n note: lint level defined here\n   --> $DIR/test-warns-dead-code.rs:3:9"}, {"sha": "e5ed09c600bf9618d0d04567c8ed983738423879", "filename": "src/test/ui/thread-local-not-in-prelude.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Fthread-local-not-in-prelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7985510e37b91cab66a808ef6b3e4110e369dc9e/src%2Ftest%2Fui%2Fthread-local-not-in-prelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fthread-local-not-in-prelude.rs?ref=7985510e37b91cab66a808ef6b3e4110e369dc9e", "patch": "@@ -1,5 +1,4 @@\n // run-pass\n-\n #![no_std]\n \n extern crate std;"}]}