{"sha": "a175463acce7dde5c65d6919d4d2e3ebc9edded0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExNzU0NjNhY2NlN2RkZTVjNjVkNjkxOWQ0ZDJlM2ViYzllZGRlZDA=", "commit": {"author": {"name": "Joshua Yanovski", "email": "pythonesque@gmail.com", "date": "2015-05-07T04:41:54Z"}, "committer": {"name": "Joshua Yanovski", "email": "pythonesque@gmail.com", "date": "2015-05-07T04:41:54Z"}, "message": "Fix panic during constant lookup.", "tree": {"sha": "a5ef1f2938afa74ff7a1ea124843b6c50900ee03", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5ef1f2938afa74ff7a1ea124843b6c50900ee03"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a175463acce7dde5c65d6919d4d2e3ebc9edded0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a175463acce7dde5c65d6919d4d2e3ebc9edded0", "html_url": "https://github.com/rust-lang/rust/commit/a175463acce7dde5c65d6919d4d2e3ebc9edded0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a175463acce7dde5c65d6919d4d2e3ebc9edded0/comments", "author": {"login": "pythonesque", "id": 923144, "node_id": "MDQ6VXNlcjkyMzE0NA==", "avatar_url": "https://avatars.githubusercontent.com/u/923144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pythonesque", "html_url": "https://github.com/pythonesque", "followers_url": "https://api.github.com/users/pythonesque/followers", "following_url": "https://api.github.com/users/pythonesque/following{/other_user}", "gists_url": "https://api.github.com/users/pythonesque/gists{/gist_id}", "starred_url": "https://api.github.com/users/pythonesque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pythonesque/subscriptions", "organizations_url": "https://api.github.com/users/pythonesque/orgs", "repos_url": "https://api.github.com/users/pythonesque/repos", "events_url": "https://api.github.com/users/pythonesque/events{/privacy}", "received_events_url": "https://api.github.com/users/pythonesque/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pythonesque", "id": 923144, "node_id": "MDQ6VXNlcjkyMzE0NA==", "avatar_url": "https://avatars.githubusercontent.com/u/923144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pythonesque", "html_url": "https://github.com/pythonesque", "followers_url": "https://api.github.com/users/pythonesque/followers", "following_url": "https://api.github.com/users/pythonesque/following{/other_user}", "gists_url": "https://api.github.com/users/pythonesque/gists{/gist_id}", "starred_url": "https://api.github.com/users/pythonesque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pythonesque/subscriptions", "organizations_url": "https://api.github.com/users/pythonesque/orgs", "repos_url": "https://api.github.com/users/pythonesque/repos", "events_url": "https://api.github.com/users/pythonesque/events{/privacy}", "received_events_url": "https://api.github.com/users/pythonesque/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b3264e693ea126df54856e0152c05f862606193", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b3264e693ea126df54856e0152c05f862606193", "html_url": "https://github.com/rust-lang/rust/commit/9b3264e693ea126df54856e0152c05f862606193"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "6aece62420ef5e1da7d5e3f9bdd8851f5f29b30f", "filename": "src/bit_mask.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a175463acce7dde5c65d6919d4d2e3ebc9edded0/src%2Fbit_mask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a175463acce7dde5c65d6919d4d2e3ebc9edded0/src%2Fbit_mask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbit_mask.rs?ref=a175463acce7dde5c65d6919d4d2e3ebc9edded0", "patch": "@@ -142,14 +142,16 @@ fn fetch_int_literal(cx: &Context, lit : &Expr) -> Option<u64> {\n \t\t\t} else { Option::None }\n \t\t},\n \t\t&ExprPath(_, _) => {\n-\t\t\tlet def_map = cx.tcx.def_map.borrow();\n-\t\t\tlet path_res_op = def_map.get(&lit.id);\n-\t\t\tpath_res_op.as_ref().and_then(|x| {\n-\t\t\t\tif let &DefConst(def_id) = &x.base_def {\n-\t\t\t\t\tlookup_const_by_id(cx.tcx, def_id, Option::None).and_then(|l| fetch_int_literal(cx, l))\n-\t\t\t\t} else { Option::None }\n-\t\t\t})\n-\t\t},\n+                // Important to let the borrow expire before the const lookup to avoid double\n+                // borrowing.\n+                let def_map = cx.tcx.def_map.borrow();\n+                match def_map.get(&lit.id) {\n+                    Some(&PathResolution { base_def: DefConst(def_id), ..}) => Some(def_id),\n+                    _ => None\n+                }\n+            }\n+            .and_then(|def_id| lookup_const_by_id(cx.tcx, def_id, Option::None))\n+            .and_then(|l| fetch_int_literal(cx, l)),\n \t\t_ => Option::None\n \t}\n }"}]}