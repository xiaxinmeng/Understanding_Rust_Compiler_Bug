{"sha": "786544f022418ed7813e401aded31e4bd5451391", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4NjU0NGYwMjI0MThlZDc4MTNlNDAxYWRlZDMxZTRiZDU0NTEzOTE=", "commit": {"author": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2019-11-22T15:05:04Z"}, "committer": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2019-11-22T15:05:04Z"}, "message": "Expand file! to dummy \"\"", "tree": {"sha": "9e9dfe41c3ae8ea5fe7d10544212cb91fb30a64f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e9dfe41c3ae8ea5fe7d10544212cb91fb30a64f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/786544f022418ed7813e401aded31e4bd5451391", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/786544f022418ed7813e401aded31e4bd5451391", "html_url": "https://github.com/rust-lang/rust/commit/786544f022418ed7813e401aded31e4bd5451391", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/786544f022418ed7813e401aded31e4bd5451391/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a132cc715ed05cab83fd058156eb152f0be96982", "url": "https://api.github.com/repos/rust-lang/rust/commits/a132cc715ed05cab83fd058156eb152f0be96982", "html_url": "https://github.com/rust-lang/rust/commit/a132cc715ed05cab83fd058156eb152f0be96982"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "b4bdd81f64c67710b997812687aaf29b3f43d6eb", "filename": "crates/ra_hir/src/ty/tests.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/786544f022418ed7813e401aded31e4bd5451391/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/786544f022418ed7813e401aded31e4bd5451391/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs?ref=786544f022418ed7813e401aded31e4bd5451391", "patch": "@@ -4857,3 +4857,22 @@ fn main() {\n     \"###\n     );\n }\n+\n+#[test]\n+fn infer_builtin_macros_file() {\n+    assert_snapshot!(\n+        infer(r#\"\n+#[rustc_builtin_macro]\n+macro_rules! file {() => {}}\n+\n+fn main() {\n+    let x = file!();\n+}\n+\"#),\n+        @r###\"\n+    ![0; 2) '\"\"': &str\n+    [64; 88) '{     ...!(); }': ()\n+    [74; 75) 'x': &str\n+    \"###\n+    );\n+}"}, {"sha": "d7057e0054219f19fa54bcf3a65c846b7046da38", "filename": "crates/ra_hir_expand/src/builtin_macro.rs", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/786544f022418ed7813e401aded31e4bd5451391/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/786544f022418ed7813e401aded31e4bd5451391/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs?ref=786544f022418ed7813e401aded31e4bd5451391", "patch": "@@ -10,6 +10,7 @@ use crate::quote;\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n pub enum BuiltinExpander {\n+    File,\n     Line,\n     Stringify,\n }\n@@ -22,6 +23,7 @@ impl BuiltinExpander {\n         tt: &tt::Subtree,\n     ) -> Result<tt::Subtree, mbe::ExpandError> {\n         match self {\n+            BuiltinExpander::File => file_expand(db, id, tt),\n             BuiltinExpander::Line => line_expand(db, id, tt),\n             BuiltinExpander::Stringify => stringify_expand(db, id, tt),\n         }\n@@ -34,7 +36,9 @@ pub fn find_builtin_macro(\n     ast_id: AstId<ast::MacroCall>,\n ) -> Option<MacroDefId> {\n     // FIXME: Better registering method\n-    if ident == &name::LINE_MACRO {\n+    if ident == &name::FILE_MACRO {\n+        Some(MacroDefId { krate, ast_id, kind: MacroDefKind::BuiltIn(BuiltinExpander::File) })\n+    } else if ident == &name::LINE_MACRO {\n         Some(MacroDefId { krate, ast_id, kind: MacroDefKind::BuiltIn(BuiltinExpander::Line) })\n     } else if ident == &name::STRINGIFY_MACRO {\n         Some(MacroDefId { krate, ast_id, kind: MacroDefKind::BuiltIn(BuiltinExpander::Stringify) })\n@@ -105,3 +109,23 @@ fn stringify_expand(\n \n     Ok(expanded)\n }\n+\n+fn file_expand(\n+    db: &dyn AstDatabase,\n+    id: MacroCallId,\n+    _tt: &tt::Subtree,\n+) -> Result<tt::Subtree, mbe::ExpandError> {\n+    let loc = db.lookup_intern_macro(id);\n+    let macro_call = loc.ast_id.to_node(db);\n+    let _ = macro_call.token_tree().ok_or_else(|| mbe::ExpandError::UnexpectedToken)?;\n+\n+    // FIXME: RA purposefully lacks knowledge of absolute file names\n+    // so just return \"\".\n+    let file_name = \"\";\n+\n+    let expanded = quote! {\n+        #file_name\n+    };\n+\n+    Ok(expanded)\n+}"}, {"sha": "05fe6afd9b8c3b0bb392a71befabbcd2989e5cff", "filename": "crates/ra_hir_expand/src/name.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/786544f022418ed7813e401aded31e4bd5451391/crates%2Fra_hir_expand%2Fsrc%2Fname.rs", "raw_url": "https://github.com/rust-lang/rust/raw/786544f022418ed7813e401aded31e4bd5451391/crates%2Fra_hir_expand%2Fsrc%2Fname.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fname.rs?ref=786544f022418ed7813e401aded31e4bd5451391", "patch": "@@ -142,5 +142,6 @@ pub const TARGET_TYPE: Name = Name::new_inline_ascii(6, b\"Target\");\n pub const BOX_TYPE: Name = Name::new_inline_ascii(3, b\"Box\");\n \n // Builtin Macros\n+pub const FILE_MACRO: Name = Name::new_inline_ascii(4, b\"file\");\n pub const LINE_MACRO: Name = Name::new_inline_ascii(4, b\"line\");\n pub const STRINGIFY_MACRO: Name = Name::new_inline_ascii(9, b\"stringify\");"}]}