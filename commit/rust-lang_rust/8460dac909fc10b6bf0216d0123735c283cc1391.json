{"sha": "8460dac909fc10b6bf0216d0123735c283cc1391", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0NjBkYWM5MDlmYzEwYjZiZjAyMTZkMDEyMzczNWMyODNjYzEzOTE=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-08-06T12:19:33Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2013-08-08T02:41:14Z"}, "message": "std: add missing #[inline] annotation to the f64 arithmetic trait impls.", "tree": {"sha": "f50b94385e592c43e57b46e0d5c68d127b431e37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f50b94385e592c43e57b46e0d5c68d127b431e37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8460dac909fc10b6bf0216d0123735c283cc1391", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8460dac909fc10b6bf0216d0123735c283cc1391", "html_url": "https://github.com/rust-lang/rust/commit/8460dac909fc10b6bf0216d0123735c283cc1391", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8460dac909fc10b6bf0216d0123735c283cc1391/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a185343fc42646b84db32391096e096cb1acba46", "url": "https://api.github.com/repos/rust-lang/rust/commits/a185343fc42646b84db32391096e096cb1acba46", "html_url": "https://github.com/rust-lang/rust/commit/a185343fc42646b84db32391096e096cb1acba46"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "60527905779f035296e8a126b7dfbe9b037677a0", "filename": "src/libstd/num/f64.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8460dac909fc10b6bf0216d0123735c283cc1391/src%2Flibstd%2Fnum%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8460dac909fc10b6bf0216d0123735c283cc1391/src%2Flibstd%2Fnum%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Ff64.rs?ref=8460dac909fc10b6bf0216d0123735c283cc1391", "patch": "@@ -278,18 +278,22 @@ impl One for f64 {\n \n #[cfg(not(test))]\n impl Add<f64,f64> for f64 {\n+    #[inline]\n     fn add(&self, other: &f64) -> f64 { *self + *other }\n }\n #[cfg(not(test))]\n impl Sub<f64,f64> for f64 {\n+    #[inline]\n     fn sub(&self, other: &f64) -> f64 { *self - *other }\n }\n #[cfg(not(test))]\n impl Mul<f64,f64> for f64 {\n+    #[inline]\n     fn mul(&self, other: &f64) -> f64 { *self * *other }\n }\n #[cfg(not(test))]\n impl Div<f64,f64> for f64 {\n+    #[inline]\n     fn div(&self, other: &f64) -> f64 { *self / *other }\n }\n #[cfg(not(test))]"}]}