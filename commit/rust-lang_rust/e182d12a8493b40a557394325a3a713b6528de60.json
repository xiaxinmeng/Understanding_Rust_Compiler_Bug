{"sha": "e182d12a8493b40a557394325a3a713b6528de60", "node_id": "C_kwDOAAsO6NoAKGUxODJkMTJhODQ5M2I0MGE1NTczOTQzMjVhM2E3MTNiNjUyOGRlNjA", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-08-12T02:47:57Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-08-12T02:47:57Z"}, "message": "Fix HIR pretty printing of let else", "tree": {"sha": "2c862cfa6bb5a18df2318ae3c2d624559fc1c041", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c862cfa6bb5a18df2318ae3c2d624559fc1c041"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e182d12a8493b40a557394325a3a713b6528de60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e182d12a8493b40a557394325a3a713b6528de60", "html_url": "https://github.com/rust-lang/rust/commit/e182d12a8493b40a557394325a3a713b6528de60", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e182d12a8493b40a557394325a3a713b6528de60/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ed0f29168f5bc116e747152be600519b5d78bfd", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ed0f29168f5bc116e747152be600519b5d78bfd", "html_url": "https://github.com/rust-lang/rust/commit/2ed0f29168f5bc116e747152be600519b5d78bfd"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "c7966b662de9fa403887ef5a30df1d64c8025f11", "filename": "compiler/rustc_hir_pretty/src/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e182d12a8493b40a557394325a3a713b6528de60/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e182d12a8493b40a557394325a3a713b6528de60/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs?ref=e182d12a8493b40a557394325a3a713b6528de60", "patch": "@@ -911,6 +911,10 @@ impl<'a> State<'a> {\n         if let Some(els) = els {\n             self.nbsp();\n             self.word_space(\"else\");\n+            // containing cbox, will be closed by print-block at `}`\n+            self.cbox(0);\n+            // head-box, will be closed by print-block after `{`\n+            self.ibox(0);\n             self.print_block(els);\n         }\n "}, {"sha": "5abfa2523b74e4937390b8ab5f2087ae97a9bc4d", "filename": "src/test/ui/unpretty/pretty-let-else.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e182d12a8493b40a557394325a3a713b6528de60/src%2Ftest%2Fui%2Funpretty%2Fpretty-let-else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e182d12a8493b40a557394325a3a713b6528de60/src%2Ftest%2Fui%2Funpretty%2Fpretty-let-else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funpretty%2Fpretty-let-else.rs?ref=e182d12a8493b40a557394325a3a713b6528de60", "patch": "@@ -0,0 +1,10 @@\n+// compile-flags: -Zunpretty=hir\n+// check-pass\n+\n+#![feature(let_else)]\n+\n+fn foo(x: Option<u32>) {\n+    let Some(_) = x else { panic!() };\n+}\n+\n+fn main() {}"}, {"sha": "ffe1d1657aa1519ab7e06844f8d292ea7769e997", "filename": "src/test/ui/unpretty/pretty-let-else.stdout", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e182d12a8493b40a557394325a3a713b6528de60/src%2Ftest%2Fui%2Funpretty%2Fpretty-let-else.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/e182d12a8493b40a557394325a3a713b6528de60/src%2Ftest%2Fui%2Funpretty%2Fpretty-let-else.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funpretty%2Fpretty-let-else.stdout?ref=e182d12a8493b40a557394325a3a713b6528de60", "patch": "@@ -0,0 +1,18 @@\n+// compile-flags: -Zunpretty=hir\n+// check-pass\n+\n+#![feature(let_else)]\n+#[prelude_import]\n+use ::std::prelude::rust_2015::*;\n+#[macro_use]\n+extern crate std;\n+\n+fn foo(x:\n+        Option<u32>) {\n+        let Some(_) = x else\n+            {\n+\n+            { ::std::rt::begin_panic(\"explicit panic\") }\n+        };\n+    }\n+fn main() { }"}]}