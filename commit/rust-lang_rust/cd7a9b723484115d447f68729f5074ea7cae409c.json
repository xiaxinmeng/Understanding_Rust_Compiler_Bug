{"sha": "cd7a9b723484115d447f68729f5074ea7cae409c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkN2E5YjcyMzQ4NDExNWQ0NDdmNjg3MjlmNTA3NGVhN2NhZTQwOWM=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2013-11-25T14:36:20Z"}, "committer": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2013-11-25T14:36:20Z"}, "message": "Remove arms_have_move_bindings", "tree": {"sha": "415025d84ab2e0dd29a8e5be4e1101ef46a96b08", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/415025d84ab2e0dd29a8e5be4e1101ef46a96b08"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd7a9b723484115d447f68729f5074ea7cae409c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd7a9b723484115d447f68729f5074ea7cae409c", "html_url": "https://github.com/rust-lang/rust/commit/cd7a9b723484115d447f68729f5074ea7cae409c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd7a9b723484115d447f68729f5074ea7cae409c/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55201ed858fa42112bd36aa5bdf72fb070173530", "url": "https://api.github.com/repos/rust-lang/rust/commits/55201ed858fa42112bd36aa5bdf72fb070173530", "html_url": "https://github.com/rust-lang/rust/commit/55201ed858fa42112bd36aa5bdf72fb070173530"}], "stats": {"total": 23, "additions": 0, "deletions": 23}, "files": [{"sha": "9e84b32ae8ffb591c0e342f9c7fddd7690738a04", "filename": "src/librustc/middle/moves.rs", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/cd7a9b723484115d447f68729f5074ea7cae409c/src%2Flibrustc%2Fmiddle%2Fmoves.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd7a9b723484115d447f68729f5074ea7cae409c/src%2Flibrustc%2Fmiddle%2Fmoves.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmoves.rs?ref=cd7a9b723484115d447f68729f5074ea7cae409c", "patch": "@@ -459,8 +459,6 @@ impl VisitContext {\n             }\n \n             ExprMatch(discr, ref arms) => {\n-                // We must do this first so that `arms_have_by_move_bindings`\n-                // below knows which bindings are moves.\n                 for arm in arms.iter() {\n                     self.consume_arm(arm);\n                 }\n@@ -657,27 +655,6 @@ impl VisitContext {\n         self.consume_expr(arg_expr)\n     }\n \n-    pub fn arms_have_by_move_bindings(&mut self,\n-                                      moves_map: MovesMap,\n-                                      arms: &[Arm])\n-                                      -> Option<@Pat> {\n-        let mut ret = None;\n-        for arm in arms.iter() {\n-            for &pat in arm.pats.iter() {\n-                let cont = do ast_util::walk_pat(pat) |p| {\n-                    if moves_map.contains(&p.id) {\n-                        ret = Some(p);\n-                        false\n-                    } else {\n-                        true\n-                    }\n-                };\n-                if !cont { return ret }\n-            }\n-        }\n-        ret\n-    }\n-\n     pub fn compute_captures(&mut self, fn_expr_id: NodeId) -> @[CaptureVar] {\n         debug!(\"compute_capture_vars(fn_expr_id={:?})\", fn_expr_id);\n         let _indenter = indenter();"}]}