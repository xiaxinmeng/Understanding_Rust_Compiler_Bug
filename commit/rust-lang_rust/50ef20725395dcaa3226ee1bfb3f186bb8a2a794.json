{"sha": "50ef20725395dcaa3226ee1bfb3f186bb8a2a794", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwZWYyMDcyNTM5NWRjYWEzMjI2ZWUxYmZiM2YxODZiYjhhMmE3OTQ=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-04T22:25:18Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-13T22:03:45Z"}, "message": "libunicode: fix fallout", "tree": {"sha": "d2fd2c04e4ae070af7bcb56726de743ac14fce46", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2fd2c04e4ae070af7bcb56726de743ac14fce46"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50ef20725395dcaa3226ee1bfb3f186bb8a2a794", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50ef20725395dcaa3226ee1bfb3f186bb8a2a794", "html_url": "https://github.com/rust-lang/rust/commit/50ef20725395dcaa3226ee1bfb3f186bb8a2a794", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50ef20725395dcaa3226ee1bfb3f186bb8a2a794/comments", "author": null, "committer": null, "parents": [{"sha": "d3f5c1397c5012ce9bb022c0320c958c9fdc1208", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3f5c1397c5012ce9bb022c0320c958c9fdc1208", "html_url": "https://github.com/rust-lang/rust/commit/d3f5c1397c5012ce9bb022c0320c958c9fdc1208"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "1f75daa7bdecdd4c97326a25f7b6001adfe033ab", "filename": "src/libunicode/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/50ef20725395dcaa3226ee1bfb3f186bb8a2a794/src%2Flibunicode%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50ef20725395dcaa3226ee1bfb3f186bb8a2a794/src%2Flibunicode%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibunicode%2Flib.rs?ref=50ef20725395dcaa3226ee1bfb3f186bb8a2a794", "patch": "@@ -29,6 +29,7 @@\n        html_playground_url = \"http://play.rust-lang.org/\")]\n #![no_std]\n #![feature(globs)]\n+#![feature(unboxed_closures)]\n \n extern crate core;\n "}, {"sha": "80311137b0165ed69bf1138cc7a094a71882beba", "filename": "src/libunicode/u_str.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/50ef20725395dcaa3226ee1bfb3f186bb8a2a794/src%2Flibunicode%2Fu_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50ef20725395dcaa3226ee1bfb3f186bb8a2a794/src%2Flibunicode%2Fu_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibunicode%2Fu_str.rs?ref=50ef20725395dcaa3226ee1bfb3f186bb8a2a794", "patch": "@@ -29,7 +29,7 @@ use tables::grapheme::GraphemeCat;\n \n /// An iterator over the words of a string, separated by a sequence of whitespace\n /// FIXME: This should be opaque\n-pub type Words<'a> = Filter<&'a str, CharSplits<'a, |char|:'a -> bool>, fn(&&str) -> bool>;\n+pub type Words<'a> = Filter<&'a str, CharSplits<'a, fn(char) -> bool>, fn(&&str) -> bool>;\n \n /// Methods for Unicode string slices\n pub trait UnicodeStrPrelude for Sized? {\n@@ -143,8 +143,9 @@ impl UnicodeStrPrelude for str {\n     #[inline]\n     fn words(&self) -> Words {\n         fn is_not_empty(s: &&str) -> bool { !s.is_empty() }\n-        let f = |c: char| c.is_whitespace();\n-        self.split(f).filter(is_not_empty)\n+        fn is_whitespace(c: char) -> bool { c.is_whitespace() }\n+\n+        self.split(is_whitespace).filter(is_not_empty)\n     }\n \n     #[inline]\n@@ -165,12 +166,12 @@ impl UnicodeStrPrelude for str {\n \n     #[inline]\n     fn trim_left(&self) -> &str {\n-        self.trim_left_chars(|c: char| c.is_whitespace())\n+        self.trim_left_chars(|&: c: char| c.is_whitespace())\n     }\n \n     #[inline]\n     fn trim_right(&self) -> &str {\n-        self.trim_right_chars(|c: char| c.is_whitespace())\n+        self.trim_right_chars(|&: c: char| c.is_whitespace())\n     }\n }\n "}]}