{"sha": "24b75e711338c2e0f14ed738cf3768105000c988", "node_id": "C_kwDOAAsO6NoAKDI0Yjc1ZTcxMTMzOGMyZTBmMTRlZDczOGNmMzc2ODEwNTAwMGM5ODg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-18T07:16:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-18T07:16:27Z"}, "message": "Rollup merge of #91818 - camelid:unused-result-type, r=jackh726\n\nShow the unused type for `unused_results` lint\n\nI think it's helpful to know what type was unused when looking at these\nwarnings. The type will likely determine whether the result *should* be\nused, or whether it should just be ignored.\n\nIncluding the type also matches the behavior of the `must_use` lint:\nunused `SomeType` that must be used.", "tree": {"sha": "58177160972412e6e790a30eee8bc17e68041570", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58177160972412e6e790a30eee8bc17e68041570"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24b75e711338c2e0f14ed738cf3768105000c988", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhvYrMCRBK7hj4Ov3rIwAAIO4IABD0h7HQeJBjDz4D9Zb3ulF6\nxqJ/8dMcgcOr9ApSCFM9TNAWx8Au421HpIx03f8odBJk+hZMgoHdbSSXMnuF+flO\nqTWtVeiqbBgE0p61zlDCezAvDSomuZfxyk1x/LyhFOB0zMymR6kkesk513O7cGwA\nTljbCjQZGJsTz7JABjP+aNgekjCSw546AGzCSzmSBwZ0ez6gLExV8HfBWbky9ubn\nMrxtOWcnx2M2ZWdv/egI1C8GkS3Apngupi1LMCoBOOcqZFghb8weLR5aPhofY+Si\nV/eUnE6AH73AbGMPiwlvPG9b1oouzdfnsERPJjIF29nrlYsk1as/9RxWS0csVRw=\n=lNXx\n-----END PGP SIGNATURE-----\n", "payload": "tree 58177160972412e6e790a30eee8bc17e68041570\nparent 7a626cf7ce908a1c210cc91a043c4c4a23d42b62\nparent f53e489e6e721f914f6a3c59a7792dc5dfb80ad2\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1639811787 +0100\ncommitter GitHub <noreply@github.com> 1639811787 +0100\n\nRollup merge of #91818 - camelid:unused-result-type, r=jackh726\n\nShow the unused type for `unused_results` lint\n\nI think it's helpful to know what type was unused when looking at these\nwarnings. The type will likely determine whether the result *should* be\nused, or whether it should just be ignored.\n\nIncluding the type also matches the behavior of the `must_use` lint:\nunused `SomeType` that must be used.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24b75e711338c2e0f14ed738cf3768105000c988", "html_url": "https://github.com/rust-lang/rust/commit/24b75e711338c2e0f14ed738cf3768105000c988", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24b75e711338c2e0f14ed738cf3768105000c988/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a626cf7ce908a1c210cc91a043c4c4a23d42b62", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a626cf7ce908a1c210cc91a043c4c4a23d42b62", "html_url": "https://github.com/rust-lang/rust/commit/7a626cf7ce908a1c210cc91a043c4c4a23d42b62"}, {"sha": "f53e489e6e721f914f6a3c59a7792dc5dfb80ad2", "url": "https://api.github.com/repos/rust-lang/rust/commits/f53e489e6e721f914f6a3c59a7792dc5dfb80ad2", "html_url": "https://github.com/rust-lang/rust/commit/f53e489e6e721f914f6a3c59a7792dc5dfb80ad2"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "ed24b94e2fd3b24bcadac04dc65584deec6d8406", "filename": "compiler/rustc_lint/src/unused.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/24b75e711338c2e0f14ed738cf3768105000c988/compiler%2Frustc_lint%2Fsrc%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24b75e711338c2e0f14ed738cf3768105000c988/compiler%2Frustc_lint%2Fsrc%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Funused.rs?ref=24b75e711338c2e0f14ed738cf3768105000c988", "patch": "@@ -169,7 +169,9 @@ impl<'tcx> LateLintPass<'tcx> for UnusedResults {\n         }\n \n         if !(type_permits_lack_of_use || fn_warned || op_warned) {\n-            cx.struct_span_lint(UNUSED_RESULTS, s.span, |lint| lint.build(\"unused result\").emit());\n+            cx.struct_span_lint(UNUSED_RESULTS, s.span, |lint| {\n+                lint.build(&format!(\"unused result of type `{}`\", ty)).emit()\n+            });\n         }\n \n         // Returns whether an error has been emitted (and thus another does not need to be later)."}, {"sha": "e283eaa88dd136f52257f41aa4dc997afbe7d7d7", "filename": "src/test/ui/lint/unused/unused-result.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24b75e711338c2e0f14ed738cf3768105000c988/src%2Ftest%2Fui%2Flint%2Funused%2Funused-result.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24b75e711338c2e0f14ed738cf3768105000c988/src%2Ftest%2Fui%2Flint%2Funused%2Funused-result.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused%2Funused-result.rs?ref=24b75e711338c2e0f14ed738cf3768105000c988", "patch": "@@ -31,7 +31,7 @@ fn test2() {\n }\n \n fn main() {\n-    foo::<isize>(); //~ ERROR: unused result\n+    foo::<isize>(); //~ ERROR: unused result of type `isize`\n     foo::<MustUse>(); //~ ERROR: unused `MustUse` that must be used\n     foo::<MustUseMsg>(); //~ ERROR: unused `MustUseMsg` that must be used\n     //~^ NOTE: some message"}, {"sha": "087e06341cdde2dd4a906aef27db31a3bcba8767", "filename": "src/test/ui/lint/unused/unused-result.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24b75e711338c2e0f14ed738cf3768105000c988/src%2Ftest%2Fui%2Flint%2Funused%2Funused-result.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/24b75e711338c2e0f14ed738cf3768105000c988/src%2Ftest%2Fui%2Flint%2Funused%2Funused-result.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused%2Funused-result.stderr?ref=24b75e711338c2e0f14ed738cf3768105000c988", "patch": "@@ -18,7 +18,7 @@ LL |     foo::<MustUseMsg>();\n    |\n    = note: some message\n \n-error: unused result\n+error: unused result of type `isize`\n   --> $DIR/unused-result.rs:34:5\n    |\n LL |     foo::<isize>();"}]}