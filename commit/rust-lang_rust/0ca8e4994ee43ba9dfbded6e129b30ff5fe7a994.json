{"sha": "0ca8e4994ee43ba9dfbded6e129b30ff5fe7a994", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjYThlNDk5NGVlNDNiYTlkZmJkZWQ2ZTEyOWIzMGZmNWZlN2E5OTQ=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2015-07-20T09:17:55Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2015-07-20T09:24:16Z"}, "message": "Convert negate_unsigned feature gate to a warning", "tree": {"sha": "63307a4db73e9d749a6ec69fd9caf969bc319b11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63307a4db73e9d749a6ec69fd9caf969bc319b11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ca8e4994ee43ba9dfbded6e129b30ff5fe7a994", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ca8e4994ee43ba9dfbded6e129b30ff5fe7a994", "html_url": "https://github.com/rust-lang/rust/commit/0ca8e4994ee43ba9dfbded6e129b30ff5fe7a994", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ca8e4994ee43ba9dfbded6e129b30ff5fe7a994/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22502154e6c1aee835554216d4b5054fd8f570f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/22502154e6c1aee835554216d4b5054fd8f570f8", "html_url": "https://github.com/rust-lang/rust/commit/22502154e6c1aee835554216d4b5054fd8f570f8"}], "stats": {"total": 24, "additions": 13, "deletions": 11}, "files": [{"sha": "e82e0d790e1bb7d2d85139b79f95dc8b02bb74b0", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0ca8e4994ee43ba9dfbded6e129b30ff5fe7a994/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ca8e4994ee43ba9dfbded6e129b30ff5fe7a994/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=0ca8e4994ee43ba9dfbded6e129b30ff5fe7a994", "patch": "@@ -53,7 +53,7 @@ use syntax::{abi, ast};\n use syntax::ast_util::{self, is_shift_binop, local_def};\n use syntax::attr::{self, AttrMetaMethods};\n use syntax::codemap::{self, Span};\n-use syntax::feature_gate::{KNOWN_ATTRIBUTES, AttributeType, emit_feature_err};\n+use syntax::feature_gate::{KNOWN_ATTRIBUTES, AttributeType};\n use syntax::parse::token;\n use syntax::ast::{TyIs, TyUs, TyI8, TyU8, TyI16, TyU16, TyI32, TyU32, TyI64, TyU64};\n use syntax::ptr::P;\n@@ -382,11 +382,13 @@ impl LintPass for TypeLimits {\n \n         fn check_unsigned_negation_feature(cx: &Context, span: Span) {\n             if !cx.sess().features.borrow().negate_unsigned {\n-                emit_feature_err(\n-                    &cx.sess().parse_sess.span_diagnostic,\n-                    \"negate_unsigned\",\n-                    span,\n-                    \"unary negation of unsigned integers may be removed in the future\");\n+                // FIXME(#27141): change this to syntax::feature_gate::emit_feature_err\u2026\n+                cx.sess().span_warn(span,\n+                    \"unary negation of unsigned integers will be feature gated in the future\");\n+                // \u2026and remove following two expressions.\n+                if option_env!(\"CFG_DISABLE_UNSTABLE_FEATURES\").is_some() { return; }\n+                cx.sess().fileline_help(span, \"add #![feature(negate_unsigned)] to the \\\n+                                               crate attributes to enable the gate in advance\");\n             }\n         }\n     }"}, {"sha": "95c8e62be53bcaad427512c7b9fae0811a96e4e1", "filename": "src/test/run-pass/feature-gate-negate-unsigned.rs", "status": "renamed", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0ca8e4994ee43ba9dfbded6e129b30ff5fe7a994/src%2Ftest%2Frun-pass%2Ffeature-gate-negate-unsigned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ca8e4994ee43ba9dfbded6e129b30ff5fe7a994/src%2Ftest%2Frun-pass%2Ffeature-gate-negate-unsigned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffeature-gate-negate-unsigned.rs?ref=0ca8e4994ee43ba9dfbded6e129b30ff5fe7a994", "patch": "@@ -18,21 +18,21 @@ impl std::ops::Neg for S {\n }\n \n const _MAX: usize = -1;\n-//~^ ERROR unary negation of unsigned integers may be removed in the future\n+//~^ WARN unary negation of unsigned integers will be feature gated in the future\n \n fn main() {\n     let a = -1;\n-    //~^ ERROR unary negation of unsigned integers may be removed in the future\n+    //~^ WARN unary negation of unsigned integers will be feature gated in the future\n     let _b : u8 = a; // for infering variable a to u8.\n \n     -a;\n-    //~^ ERROR unary negation of unsigned integers may be removed in the future\n+    //~^ WARN unary negation of unsigned integers will be feature gated in the future\n \n     let _d = -1u8;\n-    //~^ ERROR unary negation of unsigned integers may be removed in the future\n+    //~^ WARN unary negation of unsigned integers will be feature gated in the future\n \n     for _ in -10..10u8 {}\n-    //~^ ERROR unary negation of unsigned integers may be removed in the future\n+    //~^ WARN unary negation of unsigned integers will be feature gated in the future\n \n     -S; // should not trigger the gate; issue 26840\n }", "previous_filename": "src/test/compile-fail/feature-gate-negate-unsigned.rs"}]}