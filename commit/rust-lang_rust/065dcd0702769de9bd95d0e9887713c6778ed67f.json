{"sha": "065dcd0702769de9bd95d0e9887713c6778ed67f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2NWRjZDA3MDI3NjlkZTliZDk1ZDBlOTg4NzcxM2M2Nzc4ZWQ2N2Y=", "commit": {"author": {"name": "Benjamin Herr", "email": "ben@0x539.de", "date": "2016-03-28T19:19:32Z"}, "committer": {"name": "Benjamin Herr", "email": "ben@0x539.de", "date": "2016-03-31T20:04:23Z"}, "message": "librustc_borrowck: use bug!(), span_bug!()", "tree": {"sha": "15ac72e8838ccc3172d33b63d5a56384fcb44a00", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15ac72e8838ccc3172d33b63d5a56384fcb44a00"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/065dcd0702769de9bd95d0e9887713c6778ed67f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/065dcd0702769de9bd95d0e9887713c6778ed67f", "html_url": "https://github.com/rust-lang/rust/commit/065dcd0702769de9bd95d0e9887713c6778ed67f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/065dcd0702769de9bd95d0e9887713c6778ed67f/comments", "author": {"login": "ben0x539", "id": 24142, "node_id": "MDQ6VXNlcjI0MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/24142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ben0x539", "html_url": "https://github.com/ben0x539", "followers_url": "https://api.github.com/users/ben0x539/followers", "following_url": "https://api.github.com/users/ben0x539/following{/other_user}", "gists_url": "https://api.github.com/users/ben0x539/gists{/gist_id}", "starred_url": "https://api.github.com/users/ben0x539/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ben0x539/subscriptions", "organizations_url": "https://api.github.com/users/ben0x539/orgs", "repos_url": "https://api.github.com/users/ben0x539/repos", "events_url": "https://api.github.com/users/ben0x539/events{/privacy}", "received_events_url": "https://api.github.com/users/ben0x539/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ben0x539", "id": 24142, "node_id": "MDQ6VXNlcjI0MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/24142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ben0x539", "html_url": "https://github.com/ben0x539", "followers_url": "https://api.github.com/users/ben0x539/followers", "following_url": "https://api.github.com/users/ben0x539/following{/other_user}", "gists_url": "https://api.github.com/users/ben0x539/gists{/gist_id}", "starred_url": "https://api.github.com/users/ben0x539/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ben0x539/subscriptions", "organizations_url": "https://api.github.com/users/ben0x539/orgs", "repos_url": "https://api.github.com/users/ben0x539/repos", "events_url": "https://api.github.com/users/ben0x539/events{/privacy}", "received_events_url": "https://api.github.com/users/ben0x539/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3a7a66f1a842ec6eb03416ae5dfc082a119da8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3a7a66f1a842ec6eb03416ae5dfc082a119da8c", "html_url": "https://github.com/rust-lang/rust/commit/e3a7a66f1a842ec6eb03416ae5dfc082a119da8c"}], "stats": {"total": 63, "additions": 28, "deletions": 35}, "files": [{"sha": "d1b30bb2746c934f0e4ce1c01c5b8895c2e063ad", "filename": "src/librustc_borrowck/borrowck/fragments.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/065dcd0702769de9bd95d0e9887713c6778ed67f/src%2Flibrustc_borrowck%2Fborrowck%2Ffragments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/065dcd0702769de9bd95d0e9887713c6778ed67f/src%2Flibrustc_borrowck%2Fborrowck%2Ffragments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Ffragments.rs?ref=065dcd0702769de9bd95d0e9887713c6778ed67f", "patch": "@@ -27,7 +27,7 @@ use rustc::middle::mem_categorization as mc;\n use std::mem;\n use std::rc::Rc;\n use syntax::ast;\n-use syntax::codemap::Span;\n+use syntax::codemap::{Span, DUMMY_SP};\n use syntax::attr::AttrMetaMethods;\n \n #[derive(PartialEq, Eq, PartialOrd, Ord)]\n@@ -428,8 +428,8 @@ fn add_fragment_siblings_for_extension<'tcx>(this: &MoveData<'tcx>,\n             let tuple_idx = match *origin_field_name {\n                 mc::PositionalField(tuple_idx) => tuple_idx,\n                 mc::NamedField(_) =>\n-                    panic!(\"tuple type {:?} should not have named fields.\",\n-                           parent_ty),\n+                    bug!(\"tuple type {:?} should not have named fields.\",\n+                         parent_ty),\n             };\n             let tuple_len = v.len();\n             for i in 0..tuple_len {\n@@ -493,10 +493,11 @@ fn add_fragment_siblings_for_extension<'tcx>(this: &MoveData<'tcx>,\n         }\n \n         ref sty_and_variant_info => {\n-            let msg = format!(\"type {:?} ({:?}) is not fragmentable\",\n-                              parent_ty, sty_and_variant_info);\n             let opt_span = origin_id.and_then(|id|tcx.map.opt_span(id));\n-            tcx.sess.opt_span_bug(opt_span, &msg[..])\n+            span_bug!(opt_span.unwrap_or(DUMMY_SP),\n+                      \"type {:?} ({:?}) is not fragmentable\",\n+                      parent_ty,\n+                      sty_and_variant_info);\n         }\n     }\n }"}, {"sha": "489c8be4e3862e0015a89e5fe4504333d32218da", "filename": "src/librustc_borrowck/borrowck/gather_loans/gather_moves.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/065dcd0702769de9bd95d0e9887713c6778ed67f/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fgather_moves.rs", "raw_url": "https://github.com/rust-lang/rust/raw/065dcd0702769de9bd95d0e9887713c6778ed67f/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fgather_moves.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fgather_moves.rs?ref=065dcd0702769de9bd95d0e9887713c6778ed67f", "patch": "@@ -78,8 +78,8 @@ pub fn gather_match_variant<'a, 'tcx>(bccx: &BorrowckCtxt<'a, 'tcx>,\n                 LpDowncast(ref base_lp, _) =>\n                     move_data.add_variant_match(\n                         tcx, lp.clone(), move_pat.id, base_lp.clone(), mode),\n-                _ => panic!(\"should only call gather_match_variant \\\n-                             for cat_downcast cmt\"),\n+                _ => bug!(\"should only call gather_match_variant \\\n+                           for cat_downcast cmt\"),\n             }\n         }\n         None => {"}, {"sha": "c759722c24b9ac338a01b22fa26b912364bf051b", "filename": "src/librustc_borrowck/borrowck/gather_loans/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/065dcd0702769de9bd95d0e9887713c6778ed67f/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/065dcd0702769de9bd95d0e9887713c6778ed67f/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs?ref=065dcd0702769de9bd95d0e9887713c6778ed67f", "patch": "@@ -378,10 +378,10 @@ impl<'a, 'tcx> GatherLoanCtxt<'a, 'tcx> {\n                     ty::ReEarlyBound(..) |\n                     ty::ReVar(..) |\n                     ty::ReSkolemized(..) => {\n-                        self.tcx().sess.span_bug(\n+                        span_bug!(\n                             cmt.span,\n-                            &format!(\"invalid borrow lifetime: {:?}\",\n-                                    loan_region));\n+                            \"invalid borrow lifetime: {:?}\",\n+                            loan_region);\n                     }\n                 };\n                 debug!(\"loan_scope = {:?}\", loan_scope);"}, {"sha": "f5e3bc4f6fb3aed758faa96abec1aa864785b4b7", "filename": "src/librustc_borrowck/borrowck/gather_loans/move_error.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/065dcd0702769de9bd95d0e9887713c6778ed67f/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmove_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/065dcd0702769de9bd95d0e9887713c6778ed67f/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmove_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmove_error.rs?ref=065dcd0702769de9bd95d0e9887713c6778ed67f", "patch": "@@ -134,8 +134,7 @@ fn report_cannot_move_out_of<'a, 'tcx>(bccx: &BorrowckCtxt<'a, 'tcx>,\n                                   a non-copy fixed-size array\",\n                                  b.ty)\n             } else {\n-                bccx.span_bug(move_from.span, \"this path should not cause illegal move\");\n-                unreachable!();\n+                span_bug!(move_from.span, \"this path should not cause illegal move\");\n             }\n         }\n \n@@ -150,14 +149,12 @@ fn report_cannot_move_out_of<'a, 'tcx>(bccx: &BorrowckCtxt<'a, 'tcx>,\n                                      b.ty)\n                 },\n                 _ => {\n-                    bccx.span_bug(move_from.span, \"this path should not cause illegal move\");\n-                    unreachable!();\n+                    span_bug!(move_from.span, \"this path should not cause illegal move\");\n                 }\n             }\n         }\n         _ => {\n-            bccx.span_bug(move_from.span, \"this path should not cause illegal move\");\n-            unreachable!();\n+            span_bug!(move_from.span, \"this path should not cause illegal move\");\n         }\n     }\n }"}, {"sha": "2b1b743afe9b5a1850fe67f81370ae3ea47bb53c", "filename": "src/librustc_borrowck/borrowck/mir/gather_moves.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/065dcd0702769de9bd95d0e9887713c6778ed67f/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fgather_moves.rs", "raw_url": "https://github.com/rust-lang/rust/raw/065dcd0702769de9bd95d0e9887713c6778ed67f/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fgather_moves.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fgather_moves.rs?ref=065dcd0702769de9bd95d0e9887713c6778ed67f", "patch": "@@ -569,7 +569,7 @@ fn gather_moves<'tcx>(mir: &Mir<'tcx>, tcx: &TyCtxt<'tcx>) -> MoveData<'tcx> {\n                         Rvalue::InlineAsm { .. } => {}\n \n                         Rvalue::Slice {..} => {\n-                            bb_ctxt.tcx.sess.bug(\"cannot move out of slice\");\n+                            bug!(\"cannot move out of slice\");\n                         }\n                     }\n                 }"}, {"sha": "1dfa4da46aa99e42e9e12cef6d1d6c237e73d33c", "filename": "src/librustc_borrowck/borrowck/mod.rs", "status": "modified", "additions": 10, "deletions": 16, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/065dcd0702769de9bd95d0e9887713c6778ed67f/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/065dcd0702769de9bd95d0e9887713c6778ed67f/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs?ref=065dcd0702769de9bd95d0e9887713c6778ed67f", "patch": "@@ -420,10 +420,10 @@ pub fn closure_to_block(closure_id: ast::NodeId,\n                 block.id\n             }\n             _ => {\n-                panic!(\"encountered non-closure id: {}\", closure_id)\n+                bug!(\"encountered non-closure id: {}\", closure_id)\n             }\n         },\n-        _ => panic!(\"encountered non-expr id: {}\", closure_id)\n+        _ => bug!(\"encountered non-expr id: {}\", closure_id)\n     }\n }\n \n@@ -704,10 +704,9 @@ impl<'a, 'tcx> BorrowckCtxt<'a, 'tcx> {\n                         (self.tcx.expr_ty_adjusted(&expr), expr.span)\n                     }\n                     r => {\n-                        self.tcx.sess.bug(&format!(\"MoveExpr({}) maps to \\\n-                                                   {:?}, not Expr\",\n-                                                  the_move.id,\n-                                                  r))\n+                        bug!(\"MoveExpr({}) maps to {:?}, not Expr\",\n+                             the_move.id,\n+                             r)\n                     }\n                 };\n                 let (suggestion, _) =\n@@ -766,10 +765,9 @@ impl<'a, 'tcx> BorrowckCtxt<'a, 'tcx> {\n                         (self.tcx.expr_ty_adjusted(&expr), expr.span)\n                     }\n                     r => {\n-                        self.tcx.sess.bug(&format!(\"Captured({}) maps to \\\n-                                                   {:?}, not Expr\",\n-                                                  the_move.id,\n-                                                  r))\n+                        bug!(\"Captured({}) maps to {:?}, not Expr\",\n+                             the_move.id,\n+                             r)\n                     }\n                 };\n                 let (suggestion, help) =\n@@ -852,10 +850,6 @@ impl<'a, 'tcx> BorrowckCtxt<'a, 'tcx> {\n         self.tcx.sess.span_err_with_code(s, msg, code);\n     }\n \n-    pub fn span_bug(&self, s: Span, m: &str) {\n-        self.tcx.sess.span_bug(s, m);\n-    }\n-\n     pub fn bckerr_to_string(&self, err: &BckError<'tcx>) -> String {\n         match err.code {\n             err_mutbl => {\n@@ -895,7 +889,7 @@ impl<'a, 'tcx> BorrowckCtxt<'a, 'tcx> {\n                         format!(\"cannot borrow {} as mutable\", descr)\n                     }\n                     BorrowViolation(euv::ClosureInvocation) => {\n-                        self.tcx.sess.span_bug(err.span,\n+                        span_bug!(err.span,\n                             \"err_mutbl with a closure invocation\");\n                     }\n                 }\n@@ -1035,7 +1029,7 @@ impl<'a, 'tcx> BorrowckCtxt<'a, 'tcx> {\n                         // We need to determine which is the case here.\n                         let kind = match err.cmt.upvar().unwrap().cat {\n                             Categorization::Upvar(mc::Upvar { kind, .. }) => kind,\n-                            _ => unreachable!()\n+                            _ => bug!()\n                         };\n                         if kind == ty::ClosureKind::Fn {\n                             db.span_help("}, {"sha": "b31f74c64760c49b74098106d9234e89e5845c0f", "filename": "src/librustc_borrowck/borrowck/move_data.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/065dcd0702769de9bd95d0e9887713c6778ed67f/src%2Flibrustc_borrowck%2Fborrowck%2Fmove_data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/065dcd0702769de9bd95d0e9887713c6778ed67f/src%2Flibrustc_borrowck%2Fborrowck%2Fmove_data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmove_data.rs?ref=065dcd0702769de9bd95d0e9887713c6778ed67f", "patch": "@@ -515,7 +515,7 @@ impl<'tcx> MoveData<'tcx> {\n                                          assignment_index);\n                 }\n                 LpExtend(..) => {\n-                    tcx.sess.bug(\"var assignment for non var path\");\n+                    bug!(\"var assignment for non var path\");\n                 }\n             }\n         }"}, {"sha": "6f21fcd9230cd3b1dbe2aef55e9292ad54305ad1", "filename": "src/librustc_borrowck/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/065dcd0702769de9bd95d0e9887713c6778ed67f/src%2Flibrustc_borrowck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/065dcd0702769de9bd95d0e9887713c6778ed67f/src%2Flibrustc_borrowck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Flib.rs?ref=065dcd0702769de9bd95d0e9887713c6778ed67f", "patch": "@@ -32,6 +32,7 @@\n // for \"clarity\", rename the graphviz crate to dot; graphviz within `borrowck`\n // refers to the borrowck-specific graphviz adapter traits.\n extern crate graphviz as dot;\n+#[macro_use]\n extern crate rustc;\n extern crate rustc_front;\n extern crate rustc_mir;"}]}