{"sha": "ab657af5b7170e7695b80a3cb73319f47f83116c", "node_id": "C_kwDOAAsO6NoAKGFiNjU3YWY1YjcxNzBlNzY5NWI4MGEzY2I3MzMxOWY0N2Y4MzExNmM", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-11-08T18:41:16Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-11-08T18:41:16Z"}, "message": "Add some completion profile spans", "tree": {"sha": "c4b35023e0f74d06d235870297cb60ea024e8dbf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4b35023e0f74d06d235870297cb60ea024e8dbf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab657af5b7170e7695b80a3cb73319f47f83116c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab657af5b7170e7695b80a3cb73319f47f83116c", "html_url": "https://github.com/rust-lang/rust/commit/ab657af5b7170e7695b80a3cb73319f47f83116c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab657af5b7170e7695b80a3cb73319f47f83116c/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5c11b87cc28a2bc63d6125f67732c3adfa09917", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5c11b87cc28a2bc63d6125f67732c3adfa09917", "html_url": "https://github.com/rust-lang/rust/commit/c5c11b87cc28a2bc63d6125f67732c3adfa09917"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "a84f0b334b59b32ec1847afd5820cdd8f6a3ba88", "filename": "crates/ide_completion/src/completions/unqualified_path.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ab657af5b7170e7695b80a3cb73319f47f83116c/crates%2Fide_completion%2Fsrc%2Fcompletions%2Funqualified_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab657af5b7170e7695b80a3cb73319f47f83116c/crates%2Fide_completion%2Fsrc%2Fcompletions%2Funqualified_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Funqualified_path.rs?ref=ab657af5b7170e7695b80a3cb73319f47f83116c", "patch": "@@ -6,6 +6,7 @@ use syntax::{ast, AstNode};\n use crate::{patterns::ImmediateLocation, CompletionContext, Completions};\n \n pub(crate) fn complete_unqualified_path(acc: &mut Completions, ctx: &CompletionContext) {\n+    let _p = profile::span(\"complete_unqualified_path\");\n     if ctx.is_path_disallowed() || !ctx.is_trivial_path() || ctx.has_impl_or_trait_prev_sibling() {\n         return;\n     }"}, {"sha": "3f40260d33c3bd223cc15722582ab8aaad5e50ab", "filename": "crates/ide_completion/src/context.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ab657af5b7170e7695b80a3cb73319f47f83116c/crates%2Fide_completion%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab657af5b7170e7695b80a3cb73319f47f83116c/crates%2Fide_completion%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcontext.rs?ref=ab657af5b7170e7695b80a3cb73319f47f83116c", "patch": "@@ -353,6 +353,7 @@ impl<'a> CompletionContext<'a> {\n         position: FilePosition,\n         config: &'a CompletionConfig,\n     ) -> Option<CompletionContext<'a>> {\n+        let _p = profile::span(\"CompletionContext::new\");\n         let sema = Semantics::new(db);\n \n         let original_file = sema.parse(position.file_id);"}, {"sha": "a1d4eb998fa6e239f84a2a467a2bc669243c2d17", "filename": "crates/ide_completion/src/render.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ab657af5b7170e7695b80a3cb73319f47f83116c/crates%2Fide_completion%2Fsrc%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab657af5b7170e7695b80a3cb73319f47f83116c/crates%2Fide_completion%2Fsrc%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender.rs?ref=ab657af5b7170e7695b80a3cb73319f47f83116c", "patch": "@@ -16,7 +16,7 @@ use ide_db::{\n     helpers::{item_name, SnippetCap},\n     RootDatabase, SymbolKind,\n };\n-use syntax::{SyntaxKind, TextRange};\n+use syntax::{SmolStr, SyntaxKind, TextRange};\n \n use crate::{\n     context::{PathCompletionContext, PathKind},\n@@ -243,7 +243,7 @@ fn render_resolution_(\n             if has_non_default_type_params {\n                 cov_mark::hit!(inserts_angle_brackets_for_generics);\n                 item.lookup_by(local_name.clone())\n-                    .label(format!(\"{}<\u2026>\", local_name))\n+                    .label(SmolStr::from_iter([&local_name, \"<\u2026>\"]))\n                     .insert_snippet(cap, format!(\"{}<$0>\", local_name));\n             }\n         }"}, {"sha": "c40490ac0b8c91bd1d3794d22f8eeed0d2fd6ebe", "filename": "crates/ide_completion/src/render/const_.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ab657af5b7170e7695b80a3cb73319f47f83116c/crates%2Fide_completion%2Fsrc%2Frender%2Fconst_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab657af5b7170e7695b80a3cb73319f47f83116c/crates%2Fide_completion%2Fsrc%2Frender%2Fconst_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender%2Fconst_.rs?ref=ab657af5b7170e7695b80a3cb73319f47f83116c", "patch": "@@ -7,6 +7,7 @@ use syntax::{ast::Const, display::const_label};\n use crate::{item::CompletionItem, render::RenderContext};\n \n pub(crate) fn render_const(ctx: RenderContext<'_>, const_: hir::Const) -> Option<CompletionItem> {\n+    let _p = profile::span(\"render_const\");\n     ConstRender::new(ctx, const_)?.render()\n }\n "}, {"sha": "090bb5a71514c8358a5bce6951ed7bbbd1e678a4", "filename": "crates/ide_completion/src/render/macro_.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ab657af5b7170e7695b80a3cb73319f47f83116c/crates%2Fide_completion%2Fsrc%2Frender%2Fmacro_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab657af5b7170e7695b80a3cb73319f47f83116c/crates%2Fide_completion%2Fsrc%2Frender%2Fmacro_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender%2Fmacro_.rs?ref=ab657af5b7170e7695b80a3cb73319f47f83116c", "patch": "@@ -40,17 +40,15 @@ impl<'a> MacroRender<'a> {\n         MacroRender { ctx, name, macro_, docs, bra, ket }\n     }\n \n-    fn render(&self, import_to_add: Option<ImportEdit>) -> Option<CompletionItem> {\n+    fn render(self, import_to_add: Option<ImportEdit>) -> Option<CompletionItem> {\n         let source_range = if self.ctx.completion.is_immediately_after_macro_bang() {\n             cov_mark::hit!(completes_macro_call_if_cursor_at_bang_token);\n             self.ctx.completion.token.parent().map(|it| it.text_range())\n         } else {\n             Some(self.ctx.source_range())\n         }?;\n         let mut item = CompletionItem::new(SymbolKind::Macro, source_range, self.label());\n-        item.set_documentation(self.docs.clone())\n-            .set_deprecated(self.ctx.is_deprecated(self.macro_))\n-            .set_detail(self.detail());\n+        item.set_deprecated(self.ctx.is_deprecated(self.macro_)).set_detail(self.detail());\n \n         if let Some(import_to_add) = import_to_add {\n             item.add_import(import_to_add);\n@@ -76,6 +74,7 @@ impl<'a> MacroRender<'a> {\n             }\n         };\n \n+        item.set_documentation(self.docs);\n         Some(item.build())\n     }\n "}, {"sha": "259fe25a6cd6ce2ee40010e83392ab09ff9259c8", "filename": "crates/ide_completion/src/render/type_alias.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab657af5b7170e7695b80a3cb73319f47f83116c/crates%2Fide_completion%2Fsrc%2Frender%2Ftype_alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab657af5b7170e7695b80a3cb73319f47f83116c/crates%2Fide_completion%2Fsrc%2Frender%2Ftype_alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender%2Ftype_alias.rs?ref=ab657af5b7170e7695b80a3cb73319f47f83116c", "patch": "@@ -13,13 +13,15 @@ pub(crate) fn render_type_alias(\n     ctx: RenderContext<'_>,\n     type_alias: hir::TypeAlias,\n ) -> Option<CompletionItem> {\n+    let _p = profile::span(\"render_type_alias\");\n     TypeAliasRender::new(ctx, type_alias)?.render(false)\n }\n \n pub(crate) fn render_type_alias_with_eq(\n     ctx: RenderContext<'_>,\n     type_alias: hir::TypeAlias,\n ) -> Option<CompletionItem> {\n+    let _p = profile::span(\"render_type_alias_with_eq\");\n     TypeAliasRender::new(ctx, type_alias)?.render(true)\n }\n "}]}