{"sha": "8d9ba291f54e45cb4d12a066850680241efa25f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkOWJhMjkxZjU0ZTQ1Y2I0ZDEyYTA2Njg1MDY4MDI0MWVmYTI1ZjU=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-12-12T10:09:22Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-12-19T20:57:02Z"}, "message": "Minor bugfix for macro invocation path resolution.", "tree": {"sha": "3a347a59db71af16d7acfa19e3e392de39f6298e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a347a59db71af16d7acfa19e3e392de39f6298e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d9ba291f54e45cb4d12a066850680241efa25f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d9ba291f54e45cb4d12a066850680241efa25f5", "html_url": "https://github.com/rust-lang/rust/commit/8d9ba291f54e45cb4d12a066850680241efa25f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d9ba291f54e45cb4d12a066850680241efa25f5/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51f25b3cfcb8137e7a95e35a89e5b3a7f33858b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/51f25b3cfcb8137e7a95e35a89e5b3a7f33858b2", "html_url": "https://github.com/rust-lang/rust/commit/51f25b3cfcb8137e7a95e35a89e5b3a7f33858b2"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "dfeb66e1d8c7698d8c2baf26bb140a9f63867870", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8d9ba291f54e45cb4d12a066850680241efa25f5/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d9ba291f54e45cb4d12a066850680241efa25f5/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=8d9ba291f54e45cb4d12a066850680241efa25f5", "patch": "@@ -205,7 +205,10 @@ impl<'a> base::Resolver for Resolver<'a> {\n             }\n \n             let ext = match self.resolve_path(&path, path_scope, Some(MacroNS), None) {\n-                PathResult::NonModule(path_res) => Ok(self.get_macro(path_res.base_def)),\n+                PathResult::NonModule(path_res) => match path_res.base_def {\n+                    Def::Err => Err(Determinacy::Determined),\n+                    def @ _ => Ok(self.get_macro(def)),\n+                },\n                 PathResult::Module(..) => unreachable!(),\n                 PathResult::Indeterminate if !force => return Err(Determinacy::Undetermined),\n                 _ => Err(Determinacy::Determined),"}]}