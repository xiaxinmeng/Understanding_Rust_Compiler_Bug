{"sha": "6c6e7194c20f057f5d30dbafda329e2d0ad99ac1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjNmU3MTk0YzIwZjA1N2Y1ZDMwZGJhZmRhMzI5ZTJkMGFkOTlhYzE=", "commit": {"author": {"name": "Tim Kuehn", "email": "timothy.j.kuehn@gmail.com", "date": "2015-10-01T08:58:44Z"}, "committer": {"name": "Tim Kuehn", "email": "timothy.j.kuehn@gmail.com", "date": "2015-10-01T18:06:49Z"}, "message": "Fix 1-tuple regression.\n\nAdd test to prevent future regressions.", "tree": {"sha": "2230cb83834c9efe80a72a09b5c61aaf65ab78ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2230cb83834c9efe80a72a09b5c61aaf65ab78ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c6e7194c20f057f5d30dbafda329e2d0ad99ac1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c6e7194c20f057f5d30dbafda329e2d0ad99ac1", "html_url": "https://github.com/rust-lang/rust/commit/6c6e7194c20f057f5d30dbafda329e2d0ad99ac1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c6e7194c20f057f5d30dbafda329e2d0ad99ac1/comments", "author": {"login": "tikue", "id": 2915777, "node_id": "MDQ6VXNlcjI5MTU3Nzc=", "avatar_url": "https://avatars.githubusercontent.com/u/2915777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tikue", "html_url": "https://github.com/tikue", "followers_url": "https://api.github.com/users/tikue/followers", "following_url": "https://api.github.com/users/tikue/following{/other_user}", "gists_url": "https://api.github.com/users/tikue/gists{/gist_id}", "starred_url": "https://api.github.com/users/tikue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tikue/subscriptions", "organizations_url": "https://api.github.com/users/tikue/orgs", "repos_url": "https://api.github.com/users/tikue/repos", "events_url": "https://api.github.com/users/tikue/events{/privacy}", "received_events_url": "https://api.github.com/users/tikue/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tikue", "id": 2915777, "node_id": "MDQ6VXNlcjI5MTU3Nzc=", "avatar_url": "https://avatars.githubusercontent.com/u/2915777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tikue", "html_url": "https://github.com/tikue", "followers_url": "https://api.github.com/users/tikue/followers", "following_url": "https://api.github.com/users/tikue/following{/other_user}", "gists_url": "https://api.github.com/users/tikue/gists{/gist_id}", "starred_url": "https://api.github.com/users/tikue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tikue/subscriptions", "organizations_url": "https://api.github.com/users/tikue/orgs", "repos_url": "https://api.github.com/users/tikue/repos", "events_url": "https://api.github.com/users/tikue/events{/privacy}", "received_events_url": "https://api.github.com/users/tikue/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b40bfa8d59b24699b29765fb9c5af0e4b82247f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b40bfa8d59b24699b29765fb9c5af0e4b82247f", "html_url": "https://github.com/rust-lang/rust/commit/7b40bfa8d59b24699b29765fb9c5af0e4b82247f"}], "stats": {"total": 35, "additions": 19, "deletions": 16}, "files": [{"sha": "c075589e99c40694ec84025924aedbe57f733c19", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c6e7194c20f057f5d30dbafda329e2d0ad99ac1/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c6e7194c20f057f5d30dbafda329e2d0ad99ac1/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=6c6e7194c20f057f5d30dbafda329e2d0ad99ac1", "patch": "@@ -11,6 +11,7 @@\n #![feature(rustc_private)]\n #![feature(custom_attribute)]\n #![feature(slice_splits)]\n+#![feature(slice_patterns)]\n #![feature(catch_panic)]\n #![allow(unused_attributes)]\n "}, {"sha": "b67ded94299e99ff351ec234e8391825098ba3eb", "filename": "src/types.rs", "status": "modified", "additions": 10, "deletions": 16, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/6c6e7194c20f057f5d30dbafda329e2d0ad99ac1/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c6e7194c20f057f5d30dbafda329e2d0ad99ac1/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=6c6e7194c20f057f5d30dbafda329e2d0ad99ac1", "patch": "@@ -483,22 +483,16 @@ impl Rewrite for ast::Ty {\n                 ty.rewrite(context, budget, offset + 1).map(|ty_str| format!(\"({})\", ty_str))\n             }\n             ast::TyTup(ref tup_ret) => {\n-                let inner = try_opt!(tup_ret.iter()\n-                                            .map(|item| item.rewrite(context, width, offset))\n-                                            .fold(Some(\"\".to_owned()),\n-                                                  |sum, x| {\n-                                                      match (sum, x) {\n-                                                          (Some(sum), Some(x)) => {\n-                                                              if sum == \"\" {\n-                                                                  // First item.\n-                                                                  Some(x)\n-                                                              } else {\n-                                                                  Some(sum + \", \" + &x)\n-                                                              }\n-                                                          }\n-                                                          _ => None,\n-                                                      }\n-                                                  }));\n+                let inner = if let [ref item] = &**tup_ret {\n+                    try_opt!(item.rewrite(context, width, offset)) + \",\"\n+                } else {\n+                    let rewrites: Option<Vec<_>>;\n+                    rewrites = tup_ret.iter()\n+                                      .map(|item| item.rewrite(context, width, offset))\n+                                      .collect();\n+\n+                    try_opt!(rewrites).join(\", \")\n+                };\n \n                 let ret = format!(\"({})\", inner);\n                 wrap_str(ret, context.config.max_width, width, offset)"}, {"sha": "42b8f98e78abf816a4dfaa8193ee4cdebc96b9ff", "filename": "tests/target/fn_once.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6c6e7194c20f057f5d30dbafda329e2d0ad99ac1/tests%2Ftarget%2Ffn_once.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c6e7194c20f057f5d30dbafda329e2d0ad99ac1/tests%2Ftarget%2Ffn_once.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn_once.rs?ref=6c6e7194c20f057f5d30dbafda329e2d0ad99ac1", "patch": "@@ -0,0 +1,8 @@\n+struct Add(usize);\n+\n+impl FnOnce<(usize,)> for Add {\n+    type Output = Add;\n+    extern \"rust-call\" fn call_once(self, to: (usize,)) -> Add {\n+        Add(self.0 + to.0)\n+    }\n+}"}]}