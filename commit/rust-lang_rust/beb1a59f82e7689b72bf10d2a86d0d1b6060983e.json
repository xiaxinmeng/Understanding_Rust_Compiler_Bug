{"sha": "beb1a59f82e7689b72bf10d2a86d0d1b6060983e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlYjFhNTlmODJlNzY4OWI3MmJmMTBkMmE4NmQwZDFiNjA2MDk4M2U=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-05-02T00:39:56Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-05-03T23:38:16Z"}, "message": "core: Add comm::recv_chan to receive from a channel", "tree": {"sha": "6ac4ccf829472a5520bb5d91c1780773610ddc00", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ac4ccf829472a5520bb5d91c1780773610ddc00"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/beb1a59f82e7689b72bf10d2a86d0d1b6060983e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/beb1a59f82e7689b72bf10d2a86d0d1b6060983e", "html_url": "https://github.com/rust-lang/rust/commit/beb1a59f82e7689b72bf10d2a86d0d1b6060983e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/beb1a59f82e7689b72bf10d2a86d0d1b6060983e/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29b807be2a0d060e4321b28849e68596dc1a6b45", "url": "https://api.github.com/repos/rust-lang/rust/commits/29b807be2a0d060e4321b28849e68596dc1a6b45", "html_url": "https://github.com/rust-lang/rust/commit/29b807be2a0d060e4321b28849e68596dc1a6b45"}], "stats": {"total": 73, "additions": 73, "deletions": 0}, "files": [{"sha": "666145cedfa19332e209f00842b8d1ba3af69420", "filename": "src/libcore/comm.rs", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/beb1a59f82e7689b72bf10d2a86d0d1b6060983e/src%2Flibcore%2Fcomm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beb1a59f82e7689b72bf10d2a86d0d1b6060983e/src%2Flibcore%2Fcomm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcomm.rs?ref=beb1a59f82e7689b72bf10d2a86d0d1b6060983e", "patch": "@@ -28,6 +28,7 @@ import either::either;\n \n export send;\n export recv;\n+export recv_chan;\n export peek;\n export select2;\n export chan::{};\n@@ -52,6 +53,10 @@ native mod rustrt {\n     fn rust_port_select(dptr: **rust_port, ports: **rust_port,\n                         n_ports: libc::size_t,\n                         yield: *libc::uintptr_t);\n+    fn rust_port_take(port_id: port_id) -> *rust_port;\n+    fn rust_port_drop(p: *rust_port);\n+    fn rust_port_task(p: *rust_port) -> libc::uintptr_t;\n+    fn get_task_id() -> libc::uintptr_t;\n }\n \n #[abi = \"rust-intrinsic\"]\n@@ -132,6 +137,25 @@ task will block until data becomes available.\n \"]\n fn recv<T: send>(p: port<T>) -> T { recv_(***p) }\n \n+#[doc(hidden)]\n+fn recv_chan<T: send>(ch: comm::chan<T>) -> T {\n+    resource portref(p: *rust_port) {\n+        if !ptr::is_null(p) {\n+            rustrt::rust_port_drop(p);\n+        }\n+    }\n+\n+    let p = portref(rustrt::rust_port_take(*ch));\n+\n+    if ptr::is_null(*p) {\n+        fail \"unable to locate port for channel\"\n+    } else if rustrt::get_task_id() != rustrt::rust_port_task(*p) {\n+        fail \"attempting to receive on unowned channel\"\n+    }\n+\n+    recv_(*p)\n+}\n+\n #[doc = \"Receive on a raw port pointer\"]\n fn recv_<T: send>(p: *rust_port) -> T {\n     let yield = 0u;\n@@ -327,3 +351,31 @@ fn test_select2_stress() {\n     assert as == 400;\n     assert bs == 400;\n }\n+\n+#[test]\n+fn test_recv_chan() {\n+    let po = port();\n+    let ch = chan(po);\n+    send(ch, \"flower\");\n+    assert recv_chan(ch) == \"flower\";\n+}\n+\n+#[test]\n+#[should_fail]\n+#[ignore(cfg(target_os = \"win32\"))]\n+fn test_recv_chan_dead() {\n+    let ch = chan(port());\n+    send(ch, \"flower\");\n+    recv_chan(ch);\n+}\n+\n+#[test]\n+#[ignore(cfg(target_os = \"win32\"))]\n+fn test_recv_chan_wrong_task() {\n+    let po = port();\n+    let ch = chan(po);\n+    send(ch, \"flower\");\n+    assert result::is_failure(task::try {||\n+        recv_chan(ch)\n+    })\n+}"}, {"sha": "4ba6c299c62d81fc4c64723e39179b52c843783e", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/beb1a59f82e7689b72bf10d2a86d0d1b6060983e/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/beb1a59f82e7689b72bf10d2a86d0d1b6060983e/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=beb1a59f82e7689b72bf10d2a86d0d1b6060983e", "patch": "@@ -630,6 +630,24 @@ sched_threads() {\n     return task->sched->number_of_threads();\n }\n \n+extern \"C\" CDECL rust_port*\n+rust_port_take(rust_port_id id) {\n+    rust_task *task = rust_get_current_task();\n+    return task->kernel->get_port_by_id(id);\n+}\n+\n+extern \"C\" CDECL void\n+rust_port_drop(rust_port *p) {\n+    assert(p != NULL);\n+    p->deref();\n+}\n+\n+extern \"C\" CDECL rust_task_id\n+rust_port_task(rust_port *p) {\n+    assert(p != NULL);\n+    return p->task->id;\n+}\n+\n extern \"C\" CDECL rust_port*\n new_port(size_t unit_sz) {\n     rust_task *task = rust_get_current_task();"}, {"sha": "ae6d0521bef8d7828d67d06922e88d81917e7c8e", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/beb1a59f82e7689b72bf10d2a86d0d1b6060983e/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/beb1a59f82e7689b72bf10d2a86d0d1b6060983e/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=beb1a59f82e7689b72bf10d2a86d0d1b6060983e", "patch": "@@ -149,3 +149,6 @@ rust_dbg_call\n rust_osmain_sched_id\n rust_compare_and_swap_ptr\n rust_global_env_chan_ptr\n+rust_port_take\n+rust_port_drop\n+rust_port_task"}]}