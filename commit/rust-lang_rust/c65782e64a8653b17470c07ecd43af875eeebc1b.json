{"sha": "c65782e64a8653b17470c07ecd43af875eeebc1b", "node_id": "C_kwDOAAsO6NoAKGM2NTc4MmU2NGE4NjUzYjE3NDcwYzA3ZWNkNDNhZjg3NWVlZWJjMWI", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-01-30T14:41:08Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-01-30T14:41:08Z"}, "message": "Parse macros allow_internal_unsafe attribute", "tree": {"sha": "38f3472e8126e15f973d9928f740bd6ee51e1edd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38f3472e8126e15f973d9928f740bd6ee51e1edd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c65782e64a8653b17470c07ecd43af875eeebc1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c65782e64a8653b17470c07ecd43af875eeebc1b", "html_url": "https://github.com/rust-lang/rust/commit/c65782e64a8653b17470c07ecd43af875eeebc1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c65782e64a8653b17470c07ecd43af875eeebc1b/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9814d798411a4b1b258c710f86626bd1997e406f", "url": "https://api.github.com/repos/rust-lang/rust/commits/9814d798411a4b1b258c710f86626bd1997e406f", "html_url": "https://github.com/rust-lang/rust/commit/9814d798411a4b1b258c710f86626bd1997e406f"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "aabd69482081354302a448818891ebb188ff2de5", "filename": "crates/hir-def/src/lib.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c65782e64a8653b17470c07ecd43af875eeebc1b/crates%2Fhir-def%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c65782e64a8653b17470c07ecd43af875eeebc1b/crates%2Fhir-def%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Flib.rs?ref=c65782e64a8653b17470c07ecd43af875eeebc1b", "patch": "@@ -290,6 +290,7 @@ pub struct Macro2Loc {\n     pub container: ModuleId,\n     pub id: ItemTreeId<MacroDef>,\n     pub expander: MacroExpander,\n+    pub allow_internal_unsafe: bool,\n }\n impl_intern!(Macro2Id, Macro2Loc, intern_macro2, lookup_intern_macro2);\n \n@@ -299,8 +300,9 @@ pub struct MacroRulesId(salsa::InternId);\n pub struct MacroRulesLoc {\n     pub container: ModuleId,\n     pub id: ItemTreeId<MacroRules>,\n-    pub local_inner: bool,\n     pub expander: MacroExpander,\n+    pub allow_internal_unsafe: bool,\n+    pub local_inner: bool,\n }\n impl_intern!(MacroRulesId, MacroRulesLoc, intern_macro_rules, lookup_intern_macro_rules);\n \n@@ -894,6 +896,7 @@ pub fn macro_id_to_def_id(db: &dyn db::DefDatabase, id: MacroId) -> MacroDefId {\n                     }\n                 },\n                 local_inner: false,\n+                allow_internal_unsafe: loc.allow_internal_unsafe,\n             }\n         }\n         MacroId::MacroRulesId(it) => {\n@@ -918,6 +921,7 @@ pub fn macro_id_to_def_id(db: &dyn db::DefDatabase, id: MacroId) -> MacroDefId {\n                     }\n                 },\n                 local_inner: loc.local_inner,\n+                allow_internal_unsafe: loc.allow_internal_unsafe,\n             }\n         }\n         MacroId::ProcMacroId(it) => {\n@@ -933,6 +937,7 @@ pub fn macro_id_to_def_id(db: &dyn db::DefDatabase, id: MacroId) -> MacroDefId {\n                     InFile::new(loc.id.file_id(), makro.ast_id),\n                 ),\n                 local_inner: false,\n+                allow_internal_unsafe: false,\n             }\n         }\n     }"}, {"sha": "4907f237f6b8a75864e2948dd507de865b8418b5", "filename": "crates/hir-def/src/macro_expansion_tests.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c65782e64a8653b17470c07ecd43af875eeebc1b/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c65782e64a8653b17470c07ecd43af875eeebc1b/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests.rs?ref=c65782e64a8653b17470c07ecd43af875eeebc1b", "patch": "@@ -97,7 +97,9 @@ pub fn identity_when_valid(_attr: TokenStream, item: TokenStream) -> TokenStream\n         let ast_id = AstId::new(source.file_id, file_ast_id.upcast());\n         let kind = MacroDefKind::Declarative(ast_id);\n \n-        let macro_def = db.macro_def(MacroDefId { krate, kind, local_inner: false }).unwrap();\n+        let macro_def = db\n+            .macro_def(MacroDefId { krate, kind, local_inner: false, allow_internal_unsafe: false })\n+            .unwrap();\n         if let TokenExpander::DeclarativeMacro { mac, def_site_token_map } = &*macro_def {\n             let tt = match &macro_ {\n                 ast::Macro::MacroRules(mac) => mac.token_tree().unwrap(),"}, {"sha": "6c2bbc74d60ba06300beb41ca5b49404e4a48bb8", "filename": "crates/hir-def/src/nameres/collector.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c65782e64a8653b17470c07ecd43af875eeebc1b/crates%2Fhir-def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c65782e64a8653b17470c07ecd43af875eeebc1b/crates%2Fhir-def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fnameres%2Fcollector.rs?ref=c65782e64a8653b17470c07ecd43af875eeebc1b", "patch": "@@ -1982,11 +1982,13 @@ impl ModCollector<'_, '_> {\n             // Case 2: normal `macro_rules!` macro\n             MacroExpander::Declarative\n         };\n+        let allow_internal_unsafe = attrs.by_key(\"allow_internal_unsafe\").exists();\n \n         let macro_id = MacroRulesLoc {\n             container: module,\n             id: ItemTreeId::new(self.tree_id, id),\n             local_inner,\n+            allow_internal_unsafe,\n             expander,\n         }\n         .intern(self.def_collector.db);\n@@ -2046,10 +2048,15 @@ impl ModCollector<'_, '_> {\n             // Case 2: normal `macro`\n             MacroExpander::Declarative\n         };\n+        let allow_internal_unsafe = attrs.by_key(\"allow_internal_unsafe\").exists();\n \n-        let macro_id =\n-            Macro2Loc { container: module, id: ItemTreeId::new(self.tree_id, id), expander }\n-                .intern(self.def_collector.db);\n+        let macro_id = Macro2Loc {\n+            container: module,\n+            id: ItemTreeId::new(self.tree_id, id),\n+            expander,\n+            allow_internal_unsafe,\n+        }\n+        .intern(self.def_collector.db);\n         self.def_collector.define_macro_def(\n             self.module_id,\n             mac.name.clone(),"}, {"sha": "967a8fedbd10848c5472f370613bdb6eaa684b39", "filename": "crates/hir-expand/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c65782e64a8653b17470c07ecd43af875eeebc1b/crates%2Fhir-expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c65782e64a8653b17470c07ecd43af875eeebc1b/crates%2Fhir-expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-expand%2Fsrc%2Flib.rs?ref=c65782e64a8653b17470c07ecd43af875eeebc1b", "patch": "@@ -116,6 +116,7 @@ pub struct MacroDefId {\n     pub krate: CrateId,\n     pub kind: MacroDefKind,\n     pub local_inner: bool,\n+    pub allow_internal_unsafe: bool,\n }\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]"}]}