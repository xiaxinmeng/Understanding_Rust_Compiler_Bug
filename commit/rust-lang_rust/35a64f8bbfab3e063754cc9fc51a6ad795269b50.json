{"sha": "35a64f8bbfab3e063754cc9fc51a6ad795269b50", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1YTY0ZjhiYmZhYjNlMDYzNzU0Y2M5ZmM1MWE2YWQ3OTUyNjliNTA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-29T07:28:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-29T07:28:15Z"}, "message": "Auto merge of #57140 - estebank:str-err, r=varkor\n\nTweaks to format string diagnostics\n\nAdd label spans and fix incorrect spans.\n\nFix #55155, fix #55350.", "tree": {"sha": "4d8734d68ce8c615145b5398122726549f2b6b2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d8734d68ce8c615145b5398122726549f2b6b2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35a64f8bbfab3e063754cc9fc51a6ad795269b50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35a64f8bbfab3e063754cc9fc51a6ad795269b50", "html_url": "https://github.com/rust-lang/rust/commit/35a64f8bbfab3e063754cc9fc51a6ad795269b50", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35a64f8bbfab3e063754cc9fc51a6ad795269b50/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43d26b1f35401c9341154192db000db456ee5ca2", "url": "https://api.github.com/repos/rust-lang/rust/commits/43d26b1f35401c9341154192db000db456ee5ca2", "html_url": "https://github.com/rust-lang/rust/commit/43d26b1f35401c9341154192db000db456ee5ca2"}, {"sha": "5e952e34795360c3f0c6661d993585146a4bdd2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e952e34795360c3f0c6661d993585146a4bdd2b", "html_url": "https://github.com/rust-lang/rust/commit/5e952e34795360c3f0c6661d993585146a4bdd2b"}], "stats": {"total": 98, "additions": 61, "deletions": 37}, "files": [{"sha": "32ae878909f30676a76a4738b20400611f19148d", "filename": "src/libfmt_macros/lib.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/35a64f8bbfab3e063754cc9fc51a6ad795269b50/src%2Flibfmt_macros%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35a64f8bbfab3e063754cc9fc51a6ad795269b50/src%2Flibfmt_macros%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibfmt_macros%2Flib.rs?ref=35a64f8bbfab3e063754cc9fc51a6ad795269b50", "patch": "@@ -144,7 +144,7 @@ pub struct Parser<'a> {\n     /// `Some(raw count)` when the string is \"raw\", used to position spans correctly\n     style: Option<usize>,\n     /// Start and end byte offset of every successfully parsed argument\n-    pub arg_places: Vec<(usize, usize)>,\n+    pub arg_places: Vec<(SpanIndex, SpanIndex)>,\n     /// Characters that need to be shifted\n     skips: Vec<usize>,\n     /// Span offset of the last opening brace seen, used for error reporting\n@@ -154,7 +154,7 @@ pub struct Parser<'a> {\n }\n \n #[derive(Clone, Copy, Debug)]\n-pub struct SpanIndex(usize);\n+pub struct SpanIndex(pub usize);\n \n impl SpanIndex {\n     pub fn unwrap(self) -> usize {\n@@ -166,7 +166,6 @@ impl<'a> Iterator for Parser<'a> {\n     type Item = Piece<'a>;\n \n     fn next(&mut self) -> Option<Piece<'a>> {\n-        let raw = self.raw();\n         if let Some(&(pos, c)) = self.cur.peek() {\n             match c {\n                 '{' => {\n@@ -180,7 +179,7 @@ impl<'a> Iterator for Parser<'a> {\n                     } else {\n                         let arg = self.argument();\n                         if let Some(arg_pos) = self.must_consume('}').map(|end| {\n-                            (pos + raw + 1, end + raw + 2)\n+                            (self.to_span_index(pos), self.to_span_index(end + 1))\n                         }) {\n                             self.arg_places.push(arg_pos);\n                         }"}, {"sha": "95bb8c886abf2c7f912eba76e195988c2ad24187", "filename": "src/libsyntax_ext/format.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/35a64f8bbfab3e063754cc9fc51a6ad795269b50/src%2Flibsyntax_ext%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35a64f8bbfab3e063754cc9fc51a6ad795269b50/src%2Flibsyntax_ext%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fformat.rs?ref=35a64f8bbfab3e063754cc9fc51a6ad795269b50", "patch": "@@ -860,7 +860,9 @@ pub fn expand_preparsed_format_args(ecx: &mut ExtCtxt,\n     }\n \n     let arg_spans = parser.arg_places.iter()\n-        .map(|&(start, end)| fmt.span.from_inner_byte_pos(start, end))\n+        .map(|&(parse::SpanIndex(start), parse::SpanIndex(end))| {\n+            fmt.span.from_inner_byte_pos(start, end)\n+        })\n         .collect();\n \n     let mut cx = Context {\n@@ -954,13 +956,18 @@ pub fn expand_preparsed_format_args(ecx: &mut ExtCtxt,\n         let mut diag = {\n             if errs_len == 1 {\n                 let (sp, msg) = errs.into_iter().next().unwrap();\n-                cx.ecx.struct_span_err(sp, msg)\n+                let mut diag = cx.ecx.struct_span_err(sp, msg);\n+                diag.span_label(sp, msg);\n+                diag\n             } else {\n                 let mut diag = cx.ecx.struct_span_err(\n                     errs.iter().map(|&(sp, _)| sp).collect::<Vec<Span>>(),\n                     \"multiple unused formatting arguments\",\n                 );\n                 diag.span_label(cx.fmtsp, \"multiple missing formatting specifiers\");\n+                for (sp, msg) in errs {\n+                    diag.span_label(sp, msg);\n+                }\n                 diag\n             }\n         };"}, {"sha": "3c6c15c06bb2ae3bc77f82f19c1596291a489819", "filename": "src/test/ui/fmt/format-string-error-2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/35a64f8bbfab3e063754cc9fc51a6ad795269b50/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35a64f8bbfab3e063754cc9fc51a6ad795269b50/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error-2.rs?ref=35a64f8bbfab3e063754cc9fc51a6ad795269b50", "patch": "@@ -67,4 +67,6 @@ raw  { \\n\n     asdf}\n     \", asdf=1);\n     //~^^ ERROR invalid format string\n+    println!(\"\\t{}\");\n+    //~^ ERROR 1 positional argument in format string\n }"}, {"sha": "face0bc0f5f68efd3d3c4ec3df46f74788314770", "filename": "src/test/ui/fmt/format-string-error-2.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/35a64f8bbfab3e063754cc9fc51a6ad795269b50/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/35a64f8bbfab3e063754cc9fc51a6ad795269b50/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error-2.stderr?ref=35a64f8bbfab3e063754cc9fc51a6ad795269b50", "patch": "@@ -133,5 +133,11 @@ LL |     asdf}\n    |\n    = note: if you intended to print `{`, you can escape it using `{{`\n \n-error: aborting due to 13 previous errors\n+error: 1 positional argument in format string, but no arguments were given\n+  --> $DIR/format-string-error-2.rs:70:17\n+   |\n+LL |     println!(\"/t{}\");\n+   |                 ^^\n+\n+error: aborting due to 14 previous errors\n "}, {"sha": "d4153ac94acd1e6bcb9a4e0ba2a58196993bebb6", "filename": "src/test/ui/if/ifmt-bad-arg.stderr", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/35a64f8bbfab3e063754cc9fc51a6ad795269b50/src%2Ftest%2Fui%2Fif%2Fifmt-bad-arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/35a64f8bbfab3e063754cc9fc51a6ad795269b50/src%2Ftest%2Fui%2Fif%2Fifmt-bad-arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fif%2Fifmt-bad-arg.stderr?ref=35a64f8bbfab3e063754cc9fc51a6ad795269b50", "patch": "@@ -16,7 +16,7 @@ error: argument never used\n   --> $DIR/ifmt-bad-arg.rs:9:20\n    |\n LL |     format!(\"{1}\", 1);\n-   |             -----  ^\n+   |             -----  ^ argument never used\n    |             |\n    |             formatting specifier missing\n \n@@ -80,56 +80,58 @@ error: multiple unused formatting arguments\n   --> $DIR/ifmt-bad-arg.rs:32:17\n    |\n LL |     format!(\"\", 1, 2);               //~ ERROR: multiple unused formatting arguments\n-   |             --  ^  ^\n-   |             |\n+   |             --  ^  ^ argument never used\n+   |             |   |\n+   |             |   argument never used\n    |             multiple missing formatting specifiers\n \n error: argument never used\n   --> $DIR/ifmt-bad-arg.rs:33:22\n    |\n LL |     format!(\"{}\", 1, 2);             //~ ERROR: argument never used\n-   |             ----     ^\n+   |             ----     ^ argument never used\n    |             |\n    |             formatting specifier missing\n \n error: argument never used\n   --> $DIR/ifmt-bad-arg.rs:34:20\n    |\n LL |     format!(\"{1}\", 1, 2);            //~ ERROR: argument never used\n-   |             -----  ^\n+   |             -----  ^ argument never used\n    |             |\n    |             formatting specifier missing\n \n error: named argument never used\n   --> $DIR/ifmt-bad-arg.rs:35:26\n    |\n LL |     format!(\"{}\", 1, foo=2);         //~ ERROR: named argument never used\n-   |             ----         ^\n+   |             ----         ^ named argument never used\n    |             |\n    |             formatting specifier missing\n \n error: argument never used\n   --> $DIR/ifmt-bad-arg.rs:36:22\n    |\n LL |     format!(\"{foo}\", 1, foo=2);      //~ ERROR: argument never used\n-   |             -------  ^\n+   |             -------  ^ argument never used\n    |             |\n    |             formatting specifier missing\n \n error: named argument never used\n   --> $DIR/ifmt-bad-arg.rs:37:21\n    |\n LL |     format!(\"\", foo=2);              //~ ERROR: named argument never used\n-   |             --      ^\n+   |             --      ^ named argument never used\n    |             |\n    |             formatting specifier missing\n \n error: multiple unused formatting arguments\n   --> $DIR/ifmt-bad-arg.rs:38:32\n    |\n LL |     format!(\"{} {}\", 1, 2, foo=1, bar=2);  //~ ERROR: multiple unused formatting arguments\n-   |             -------            ^      ^\n-   |             |\n+   |             -------            ^      ^ named argument never used\n+   |             |                  |\n+   |             |                  named argument never used\n    |             multiple missing formatting specifiers\n \n error: duplicate argument named `foo`\n@@ -160,7 +162,7 @@ error: named argument never used\n   --> $DIR/ifmt-bad-arg.rs:45:51\n    |\n LL |     format!(\"{valuea} {valueb}\", valuea=5, valuec=7);\n-   |             -------------------                   ^\n+   |             -------------------                   ^ named argument never used\n    |             |\n    |             formatting specifier missing\n \n@@ -194,7 +196,7 @@ error: argument never used\n   --> $DIR/ifmt-bad-arg.rs:56:27\n    |\n LL |     format!(\"foo %s baz\", \"bar\"); //~ ERROR: argument never used\n-   |                  --       ^^^^^\n+   |                  --       ^^^^^ argument never used\n    |                  |\n    |                  help: format specifiers use curly braces: `{}`\n    |"}, {"sha": "0b8bfcbdc17baa74fb748ccaca47520836967e44", "filename": "src/test/ui/macros/format-foreign.stderr", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/35a64f8bbfab3e063754cc9fc51a6ad795269b50/src%2Ftest%2Fui%2Fmacros%2Fformat-foreign.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/35a64f8bbfab3e063754cc9fc51a6ad795269b50/src%2Ftest%2Fui%2Fmacros%2Fformat-foreign.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fformat-foreign.stderr?ref=35a64f8bbfab3e063754cc9fc51a6ad795269b50", "patch": "@@ -2,8 +2,10 @@ error: multiple unused formatting arguments\n   --> $DIR/format-foreign.rs:2:30\n    |\n LL |     println!(\"%.*3$s %s!/n\", \"Hello,\", \"World\", 4); //~ ERROR multiple unused formatting arguments\n-   |              --------------  ^^^^^^^^  ^^^^^^^  ^\n-   |              |\n+   |              --------------  ^^^^^^^^  ^^^^^^^  ^ argument never used\n+   |              |               |         |\n+   |              |               |         argument never used\n+   |              |               argument never used\n    |              multiple missing formatting specifiers\n    |\n    = note: printf formatting not supported; see the documentation for `std::fmt`\n@@ -16,7 +18,7 @@ error: argument never used\n   --> $DIR/format-foreign.rs:3:29\n    |\n LL |     println!(\"%1$*2$.*3$f\", 123.456); //~ ERROR never used\n-   |               -----------   ^^^^^^^\n+   |               -----------   ^^^^^^^ argument never used\n    |               |\n    |               help: format specifiers use curly braces: `{0:1$.2$}`\n    |\n@@ -29,8 +31,10 @@ LL |       println!(r###\"%.*3$s\n    |  ______________-\n LL | |         %s!/n\n LL | | \"###, \"Hello,\", \"World\", 4);\n-   | |    -  ^^^^^^^^  ^^^^^^^  ^\n-   | |____|\n+   | |    -  ^^^^^^^^  ^^^^^^^  ^ argument never used\n+   | |    |  |         |\n+   | |    |  |         argument never used\n+   | |____|  argument never used\n    |      multiple missing formatting specifiers\n    |\n    = note: printf formatting not supported; see the documentation for `std::fmt`\n@@ -44,15 +48,15 @@ error: argument never used\n   --> $DIR/format-foreign.rs:12:30\n    |\n LL |     println!(\"{} %f\", \"one\", 2.0); //~ ERROR never used\n-   |              -------         ^^^\n+   |              -------         ^^^ argument never used\n    |              |\n    |              formatting specifier missing\n \n error: named argument never used\n   --> $DIR/format-foreign.rs:14:39\n    |\n LL |     println!(\"Hi there, $NAME.\", NAME=\"Tim\"); //~ ERROR never used\n-   |                         -----         ^^^^^\n+   |                         -----         ^^^^^ named argument never used\n    |                         |\n    |                         help: format specifiers use curly braces: `{NAME}`\n    |\n@@ -62,8 +66,10 @@ error: multiple unused formatting arguments\n   --> $DIR/format-foreign.rs:15:32\n    |\n LL |     println!(\"$1 $0 $$ $NAME\", 1, 2, NAME=3);\n-   |              ----------------  ^  ^       ^\n-   |              |\n+   |              ----------------  ^  ^       ^ named argument never used\n+   |              |                 |  |\n+   |              |                 |  argument never used\n+   |              |                 argument never used\n    |              multiple missing formatting specifiers\n    |\n    = note: shell formatting not supported; see the documentation for `std::fmt`"}, {"sha": "0a5e379a4adb4777bbbcc5d847882a1ec25f0ad9", "filename": "src/test/ui/macros/format-unused-lables.stderr", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/35a64f8bbfab3e063754cc9fc51a6ad795269b50/src%2Ftest%2Fui%2Fmacros%2Fformat-unused-lables.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/35a64f8bbfab3e063754cc9fc51a6ad795269b50/src%2Ftest%2Fui%2Fmacros%2Fformat-unused-lables.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fformat-unused-lables.stderr?ref=35a64f8bbfab3e063754cc9fc51a6ad795269b50", "patch": "@@ -2,8 +2,10 @@ error: multiple unused formatting arguments\n   --> $DIR/format-unused-lables.rs:2:22\n    |\n LL |     println!(\"Test\", 123, 456, 789);\n-   |              ------  ^^^  ^^^  ^^^\n-   |              |\n+   |              ------  ^^^  ^^^  ^^^ argument never used\n+   |              |       |    |\n+   |              |       |    argument never used\n+   |              |       argument never used\n    |              multiple missing formatting specifiers\n \n error: multiple unused formatting arguments\n@@ -12,17 +14,17 @@ error: multiple unused formatting arguments\n LL |     println!(\"Test2\",\n    |              ------- multiple missing formatting specifiers\n LL |         123,  //~ ERROR multiple unused formatting arguments\n-   |         ^^^\n+   |         ^^^ argument never used\n LL |         456,\n-   |         ^^^\n+   |         ^^^ argument never used\n LL |         789\n-   |         ^^^\n+   |         ^^^ argument never used\n \n error: named argument never used\n   --> $DIR/format-unused-lables.rs:11:35\n    |\n LL |     println!(\"Some stuff\", UNUSED=\"args\"); //~ ERROR named argument never used\n-   |              ------------         ^^^^^^\n+   |              ------------         ^^^^^^ named argument never used\n    |              |\n    |              formatting specifier missing\n \n@@ -35,12 +37,12 @@ LL |     println!(\"Some more $STUFF\",\n    |              |          help: format specifiers use curly braces: `{STUFF}`\n    |              multiple missing formatting specifiers\n LL |         \"woo!\",  //~ ERROR multiple unused formatting arguments\n-   |         ^^^^^^\n+   |         ^^^^^^ argument never used\n LL |             STUFF=\n LL |        \"things\"\n-   |        ^^^^^^^^\n+   |        ^^^^^^^^ named argument never used\n LL |              , UNUSED=\"args\");\n-   |                       ^^^^^^\n+   |                       ^^^^^^ named argument never used\n    |\n    = note: shell formatting not supported; see the documentation for `std::fmt`\n "}]}