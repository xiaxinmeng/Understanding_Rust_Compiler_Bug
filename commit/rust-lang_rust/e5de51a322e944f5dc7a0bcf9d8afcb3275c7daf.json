{"sha": "e5de51a322e944f5dc7a0bcf9d8afcb3275c7daf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1ZGU1MWEzMjJlOTQ0ZjVkYzdhMGJjZjlkOGFmY2IzMjc1YzdkYWY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-07-11T17:50:13Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-07-11T18:25:27Z"}, "message": "use -Zmiri-start-fn as a clue to REQUIRE the lang item to be present", "tree": {"sha": "35b2abc444ce2e1a5ff9c018038511645db10cc7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35b2abc444ce2e1a5ff9c018038511645db10cc7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5de51a322e944f5dc7a0bcf9d8afcb3275c7daf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5de51a322e944f5dc7a0bcf9d8afcb3275c7daf", "html_url": "https://github.com/rust-lang/rust/commit/e5de51a322e944f5dc7a0bcf9d8afcb3275c7daf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5de51a322e944f5dc7a0bcf9d8afcb3275c7daf/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd7cc47e5c73eeff21c358e6bf10d6db656ce0c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd7cc47e5c73eeff21c358e6bf10d6db656ce0c4", "html_url": "https://github.com/rust-lang/rust/commit/dd7cc47e5c73eeff21c358e6bf10d6db656ce0c4"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "82261f9dfac992f69f363df390551ef241537385", "filename": "src/bin/miri.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e5de51a322e944f5dc7a0bcf9d8afcb3275c7daf/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5de51a322e944f5dc7a0bcf9d8afcb3275c7daf/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=e5de51a322e944f5dc7a0bcf9d8afcb3275c7daf", "patch": "@@ -138,8 +138,12 @@ fn after_analysis<'a, 'tcx>(state: &mut CompileState<'a, 'tcx>, use_start_fn: bo\n         );\n     } else if let Some((entry_node_id, _, _)) = *state.session.entry_fn.borrow() {\n         let entry_def_id = tcx.hir.local_def_id(entry_node_id);\n-        // Use start_fn lang item if it is available and we have -Zmiri-start-fn set\n-        let start_wrapper = if use_start_fn { tcx.lang_items().start_fn() } else { None };\n+        // Use start_fn lang item if we have -Zmiri-start-fn set\n+        let start_wrapper = if use_start_fn {\n+            Some(tcx.lang_items().start_fn().unwrap())\n+        } else {\n+            None\n+        };\n         miri::eval_main(tcx, entry_def_id, start_wrapper);\n \n         state.session.abort_if_errors();"}]}