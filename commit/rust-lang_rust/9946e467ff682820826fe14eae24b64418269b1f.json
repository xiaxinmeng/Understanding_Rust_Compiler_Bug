{"sha": "9946e467ff682820826fe14eae24b64418269b1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5NDZlNDY3ZmY2ODI4MjA4MjZmZTE0ZWFlMjRiNjQ0MTgyNjliMWY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-07T05:44:16Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-07T17:32:58Z"}, "message": "Export tag discriminants even for single-variant tags\n\nI don't know exactly what's going on but this optimization is giving\nme problems with the check-fast runner. I also don't see how it is\ncorrect for external tags.", "tree": {"sha": "1344fce2cc5fd65e8be29be13f12ba02d0d7ad66", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1344fce2cc5fd65e8be29be13f12ba02d0d7ad66"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9946e467ff682820826fe14eae24b64418269b1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9946e467ff682820826fe14eae24b64418269b1f", "html_url": "https://github.com/rust-lang/rust/commit/9946e467ff682820826fe14eae24b64418269b1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9946e467ff682820826fe14eae24b64418269b1f/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c047cfb710f3ea161b71cc4eb830275ec2c47eea", "url": "https://api.github.com/repos/rust-lang/rust/commits/c047cfb710f3ea161b71cc4eb830275ec2c47eea", "html_url": "https://github.com/rust-lang/rust/commit/c047cfb710f3ea161b71cc4eb830275ec2c47eea"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "c43d5d88f8fdbad0bdf171c5c783454197aacba4", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9946e467ff682820826fe14eae24b64418269b1f/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9946e467ff682820826fe14eae24b64418269b1f/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=9946e467ff682820826fe14eae24b64418269b1f", "patch": "@@ -5873,10 +5873,8 @@ fn trans_constant(ccx: @crate_ctxt, it: &@ast::item, pt: &[str],\n                             {|buf|\n                                 llvm::LLVMAddGlobal(ccx.llmod, T_int(), buf)\n                             });\n-            if n_variants != 1u {\n-                llvm::LLVMSetInitializer(discrim_gvar, C_int(i as int));\n-                llvm::LLVMSetGlobalConstant(discrim_gvar, True);\n-            }\n+            llvm::LLVMSetInitializer(discrim_gvar, C_int(i as int));\n+            llvm::LLVMSetGlobalConstant(discrim_gvar, True);\n             ccx.discrims.insert(variant.node.id, discrim_gvar);\n             ccx.discrim_symbols.insert(variant.node.id, s);\n             i += 1u;"}]}