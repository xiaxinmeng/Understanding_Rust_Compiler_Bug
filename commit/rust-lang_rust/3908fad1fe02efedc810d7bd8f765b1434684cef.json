{"sha": "3908fad1fe02efedc810d7bd8f765b1434684cef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5MDhmYWQxZmUwMmVmZWRjODEwZDdiZDhmNzY1YjE0MzQ2ODRjZWY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-05-05T18:55:12Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-05-05T19:35:30Z"}, "message": "Normalize naming of diagnostics", "tree": {"sha": "bbb53074847af07a64eafb0cbea088f49a88f7ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbb53074847af07a64eafb0cbea088f49a88f7ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3908fad1fe02efedc810d7bd8f765b1434684cef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3908fad1fe02efedc810d7bd8f765b1434684cef", "html_url": "https://github.com/rust-lang/rust/commit/3908fad1fe02efedc810d7bd8f765b1434684cef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3908fad1fe02efedc810d7bd8f765b1434684cef/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df00da15c435f3105007146cbbfc9afc34ad311c", "url": "https://api.github.com/repos/rust-lang/rust/commits/df00da15c435f3105007146cbbfc9afc34ad311c", "html_url": "https://github.com/rust-lang/rust/commit/df00da15c435f3105007146cbbfc9afc34ad311c"}], "stats": {"total": 44, "additions": 23, "deletions": 21}, "files": [{"sha": "4c04cee078d48a47b94581428fa5a09548209628", "filename": "crates/ra_ide/src/diagnostics.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3908fad1fe02efedc810d7bd8f765b1434684cef/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3908fad1fe02efedc810d7bd8f765b1434684cef/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs?ref=3908fad1fe02efedc810d7bd8f765b1434684cef", "patch": "@@ -64,7 +64,7 @@ pub(crate) fn diagnostics(db: &RootDatabase, file_id: FileId) -> Vec<Diagnostic>\n             .unwrap_or_else(|| RelativePath::new(\"\"))\n             .join(&d.candidate);\n         let create_file = FileSystemEdit::CreateFile { source_root, path };\n-        let fix = SourceChange::file_system_edit(\"create module\", create_file);\n+        let fix = SourceChange::file_system_edit(\"Create module\", create_file);\n         res.borrow_mut().push(Diagnostic {\n             range: sema.diagnostics_range(d).range,\n             message: d.message(),\n@@ -92,7 +92,7 @@ pub(crate) fn diagnostics(db: &RootDatabase, file_id: FileId) -> Vec<Diagnostic>\n             algo::diff(&d.ast(db).syntax(), &field_list.syntax()).into_text_edit(&mut builder);\n \n             Some(SourceChange::source_file_edit_from(\n-                \"fill struct fields\",\n+                \"Fill struct fields\",\n                 file_id,\n                 builder.finish(),\n             ))\n@@ -117,7 +117,7 @@ pub(crate) fn diagnostics(db: &RootDatabase, file_id: FileId) -> Vec<Diagnostic>\n         let node = d.ast(db);\n         let replacement = format!(\"Ok({})\", node.syntax());\n         let edit = TextEdit::replace(node.syntax().text_range(), replacement);\n-        let fix = SourceChange::source_file_edit_from(\"wrap with ok\", file_id, edit);\n+        let fix = SourceChange::source_file_edit_from(\"Wrap with ok\", file_id, edit);\n         res.borrow_mut().push(Diagnostic {\n             range: sema.diagnostics_range(d).range,\n             message: d.message(),\n@@ -199,7 +199,7 @@ fn check_struct_shorthand_initialization(\n                     message: \"Shorthand struct initialization\".to_string(),\n                     severity: Severity::WeakWarning,\n                     fix: Some(SourceChange::source_file_edit(\n-                        \"use struct shorthand initialization\",\n+                        \"Use struct shorthand initialization\",\n                         SourceFileEdit { file_id, edit },\n                     )),\n                 });\n@@ -606,7 +606,7 @@ mod tests {\n                 range: 0..8,\n                 fix: Some(\n                     SourceChange {\n-                        label: \"create module\",\n+                        label: \"Create module\",\n                         source_file_edits: [],\n                         file_system_edits: [\n                             CreateFile {\n@@ -655,7 +655,7 @@ mod tests {\n                 range: 224..233,\n                 fix: Some(\n                     SourceChange {\n-                        label: \"fill struct fields\",\n+                        label: \"Fill struct fields\",\n                         source_file_edits: [\n                             SourceFileEdit {\n                                 file_id: FileId("}, {"sha": "52e55b0a08ee7769c387f2a34e2d52a81479f988", "filename": "crates/ra_ide/src/references/rename.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3908fad1fe02efedc810d7bd8f765b1434684cef/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3908fad1fe02efedc810d7bd8f765b1434684cef/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs?ref=3908fad1fe02efedc810d7bd8f765b1434684cef", "patch": "@@ -122,7 +122,7 @@ fn rename_mod(\n         source_file_edits.extend(ref_edits);\n     }\n \n-    Some(SourceChange::from_edits(\"rename\", source_file_edits, file_system_edits))\n+    Some(SourceChange::from_edits(\"Rename\", source_file_edits, file_system_edits))\n }\n \n fn rename_reference(\n@@ -141,7 +141,7 @@ fn rename_reference(\n         return None;\n     }\n \n-    Some(RangeInfo::new(range, SourceChange::source_file_edits(\"rename\", edit)))\n+    Some(RangeInfo::new(range, SourceChange::source_file_edits(\"Rename\", edit)))\n }\n \n #[cfg(test)]\n@@ -530,7 +530,7 @@ mod tests {\n             RangeInfo {\n                 range: 4..7,\n                 info: SourceChange {\n-                    label: \"rename\",\n+                    label: \"Rename\",\n                     source_file_edits: [\n                         SourceFileEdit {\n                             file_id: FileId(\n@@ -582,7 +582,7 @@ mod tests {\n             RangeInfo {\n                 range: 4..7,\n                 info: SourceChange {\n-                    label: \"rename\",\n+                    label: \"Rename\",\n                     source_file_edits: [\n                         SourceFileEdit {\n                             file_id: FileId(\n@@ -665,7 +665,7 @@ mod tests {\n             RangeInfo {\n                 range: 8..11,\n                 info: SourceChange {\n-                    label: \"rename\",\n+                    label: \"Rename\",\n                     source_file_edits: [\n                         SourceFileEdit {\n                             file_id: FileId("}, {"sha": "10afd78256ea8679b26b0f9c1a377e6f92052648", "filename": "crates/ra_ide/src/source_change.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3908fad1fe02efedc810d7bd8f765b1434684cef/crates%2Fra_ide%2Fsrc%2Fsource_change.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3908fad1fe02efedc810d7bd8f765b1434684cef/crates%2Fra_ide%2Fsrc%2Fsource_change.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsource_change.rs?ref=3908fad1fe02efedc810d7bd8f765b1434684cef", "patch": "@@ -35,8 +35,10 @@ impl SourceChange {\n     /// Creates a new SourceChange with the given label,\n     /// containing only the given `SourceFileEdits`.\n     pub(crate) fn source_file_edits<L: Into<String>>(label: L, edits: Vec<SourceFileEdit>) -> Self {\n+        let label = label.into();\n+        assert!(label.starts_with(char::is_uppercase));\n         SourceChange {\n-            label: label.into(),\n+            label: label,\n             source_file_edits: edits,\n             file_system_edits: vec![],\n             cursor_position: None,"}, {"sha": "72523746413a968f7b827cdb74dc184dbb7a3e3b", "filename": "crates/ra_ide/src/typing/on_enter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3908fad1fe02efedc810d7bd8f765b1434684cef/crates%2Fra_ide%2Fsrc%2Ftyping%2Fon_enter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3908fad1fe02efedc810d7bd8f765b1434684cef/crates%2Fra_ide%2Fsrc%2Ftyping%2Fon_enter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Ftyping%2Fon_enter.rs?ref=3908fad1fe02efedc810d7bd8f765b1434684cef", "patch": "@@ -44,7 +44,7 @@ pub(crate) fn on_enter(db: &RootDatabase, position: FilePosition) -> Option<Sour\n \n     Some(\n         SourceChange::source_file_edit(\n-            \"on enter\",\n+            \"On enter\",\n             SourceFileEdit { edit, file_id: position.file_id },\n         )\n         .with_cursor(FilePosition { offset: cursor_position, file_id: position.file_id }),"}, {"sha": "1efa5dd632d3805b0f1331c35b3036d14d5056dc", "filename": "crates/rust-analyzer/tests/heavy_tests/main.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3908fad1fe02efedc810d7bd8f765b1434684cef/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3908fad1fe02efedc810d7bd8f765b1434684cef/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fmain.rs?ref=3908fad1fe02efedc810d7bd8f765b1434684cef", "patch": "@@ -337,7 +337,7 @@ fn main() {}\n               \"arguments\": [\n                 {\n                   \"cursorPosition\": null,\n-                  \"label\": \"create module\",\n+                  \"label\": \"Create module\",\n                   \"workspaceEdit\": {\n                     \"documentChanges\": [\n                       {\n@@ -349,9 +349,9 @@ fn main() {}\n                 }\n               ],\n               \"command\": \"rust-analyzer.applySourceChange\",\n-              \"title\": \"create module\"\n+              \"title\": \"Create module\"\n             },\n-            \"title\": \"create module\"\n+            \"title\": \"Create module\"\n           }\n         ]),\n     );\n@@ -420,7 +420,7 @@ fn main() {{}}\n               \"arguments\": [\n                 {\n                   \"cursorPosition\": null,\n-                  \"label\": \"create module\",\n+                  \"label\": \"Create module\",\n                   \"workspaceEdit\": {\n                     \"documentChanges\": [\n                       {\n@@ -432,9 +432,9 @@ fn main() {{}}\n                 }\n               ],\n               \"command\": \"rust-analyzer.applySourceChange\",\n-              \"title\": \"create module\"\n+              \"title\": \"Create module\"\n             },\n-            \"title\": \"create module\"\n+            \"title\": \"Create module\"\n           }\n         ]),\n     );\n@@ -500,7 +500,7 @@ fn main() {{}}\n             \"position\": { \"character\": 4, \"line\": 1 },\n             \"textDocument\": { \"uri\": \"file:///[..]src/m0.rs\" }\n           },\n-          \"label\": \"on enter\",\n+          \"label\": \"On enter\",\n           \"workspaceEdit\": {\n             \"documentChanges\": [\n               {\n@@ -552,7 +552,7 @@ version = \\\"0.0.0\\\"\n             \"position\": { \"line\": 1, \"character\": 4 },\n             \"textDocument\": { \"uri\": \"file:///[..]src/main.rs\" }\n           },\n-          \"label\": \"on enter\",\n+          \"label\": \"On enter\",\n           \"workspaceEdit\": {\n             \"documentChanges\": [\n               {"}]}