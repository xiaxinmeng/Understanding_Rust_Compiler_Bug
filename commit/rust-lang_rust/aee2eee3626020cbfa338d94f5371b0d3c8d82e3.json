{"sha": "aee2eee3626020cbfa338d94f5371b0d3c8d82e3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlZTJlZWUzNjI2MDIwY2JmYTMzOGQ5NGY1MzcxYjBkM2M4ZDgyZTM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-12-19T16:04:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-19T16:04:24Z"}, "message": "Merge #2597\n\n2597: Handle start imports in import groups r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "152def082ac169cc667aa6efee82cd02b005b45d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/152def082ac169cc667aa6efee82cd02b005b45d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aee2eee3626020cbfa338d94f5371b0d3c8d82e3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd+5+ICRBK7hj4Ov3rIwAAdHIIAD03hMxZAPnscOPIpP1emZBt\nMHuK+ep/dwnQrmqH0LLmGXi9ocHspZvK9CsoE4iWFSS1mvJ0P+RlthctTmNRaZxW\nluNHFh3lxq8Bp1LFsQhkU3JwVPZqoiblopuWOkSaUX9/AqPQMTFmyflXtZ/PcJF+\nLA3oIOM54VjSE3gqnjZN9sbCL+gISAXSDP7jfMRtzbWZvgMzCNnak7oZxxUTjvh0\nhZbGPdbv0Qjrk5CE6UrSdlqT56hCm8ikcub6SY87jfuiLxYFZUFaZyiIWusaaWJK\nvMIQwrQg9t21FNuRLjK47lk6xV6RQxA6vfV2IFbVNcpO7S85ncTZhAvPqHW+Lmo=\n=ZjC0\n-----END PGP SIGNATURE-----\n", "payload": "tree 152def082ac169cc667aa6efee82cd02b005b45d\nparent a766f63650aa08697f68e749d274c2c84d1e3eee\nparent 43ed3d1196164c96d025745c42f261930b832911\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1576771464 +0000\ncommitter GitHub <noreply@github.com> 1576771464 +0000\n\nMerge #2597\n\n2597: Handle start imports in import groups r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aee2eee3626020cbfa338d94f5371b0d3c8d82e3", "html_url": "https://github.com/rust-lang/rust/commit/aee2eee3626020cbfa338d94f5371b0d3c8d82e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aee2eee3626020cbfa338d94f5371b0d3c8d82e3/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a766f63650aa08697f68e749d274c2c84d1e3eee", "url": "https://api.github.com/repos/rust-lang/rust/commits/a766f63650aa08697f68e749d274c2c84d1e3eee", "html_url": "https://github.com/rust-lang/rust/commit/a766f63650aa08697f68e749d274c2c84d1e3eee"}, {"sha": "43ed3d1196164c96d025745c42f261930b832911", "url": "https://api.github.com/repos/rust-lang/rust/commits/43ed3d1196164c96d025745c42f261930b832911", "html_url": "https://github.com/rust-lang/rust/commit/43ed3d1196164c96d025745c42f261930b832911"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "457ba4abec05b1737cdd06e2ead1ecb4c9213684", "filename": "crates/ra_hir_def/src/marks.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aee2eee3626020cbfa338d94f5371b0d3c8d82e3/crates%2Fra_hir_def%2Fsrc%2Fmarks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aee2eee3626020cbfa338d94f5371b0d3c8d82e3/crates%2Fra_hir_def%2Fsrc%2Fmarks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fmarks.rs?ref=aee2eee3626020cbfa338d94f5371b0d3c8d82e3", "patch": "@@ -5,6 +5,7 @@ test_utils::marks!(\n     name_res_works_for_broken_modules\n     can_import_enum_variant\n     glob_enum\n+    glob_enum_group\n     glob_across_crates\n     std_prelude\n     macro_rules_from_other_crates_are_visible_with_macro_use"}, {"sha": "5e24cb94d64dc97fcb141557979c3b7bda5ce97d", "filename": "crates/ra_hir_def/src/nameres/tests/globs.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/aee2eee3626020cbfa338d94f5371b0d3c8d82e3/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests%2Fglobs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aee2eee3626020cbfa338d94f5371b0d3c8d82e3/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests%2Fglobs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests%2Fglobs.rs?ref=aee2eee3626020cbfa338d94f5371b0d3c8d82e3", "patch": "@@ -112,3 +112,24 @@ fn glob_enum() {\n     \"###\n     );\n }\n+\n+#[test]\n+fn glob_enum_group() {\n+    covers!(glob_enum_group);\n+    let map = def_map(\n+        \"\n+        //- /lib.rs\n+        enum Foo {\n+            Bar, Baz\n+        }\n+        use self::Foo::{*};\n+        \",\n+    );\n+    assert_snapshot!(map, @r###\"\n+   \u22eecrate\n+   \u22eeBar: t v\n+   \u22eeBaz: t v\n+   \u22eeFoo: t\n+    \"###\n+    );\n+}"}, {"sha": "3218eaf0a28c4fe07affcec7d07ab7c734691bb0", "filename": "crates/ra_hir_def/src/path/lower/lower_use.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/aee2eee3626020cbfa338d94f5371b0d3c8d82e3/crates%2Fra_hir_def%2Fsrc%2Fpath%2Flower%2Flower_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aee2eee3626020cbfa338d94f5371b0d3c8d82e3/crates%2Fra_hir_def%2Fsrc%2Fpath%2Flower%2Flower_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fpath%2Flower%2Flower_use.rs?ref=aee2eee3626020cbfa338d94f5371b0d3c8d82e3", "patch": "@@ -9,6 +9,7 @@ use hir_expand::{\n     name::{AsName, Name},\n };\n use ra_syntax::ast::{self, NameOwner};\n+use test_utils::tested_by;\n \n use crate::path::{ModPath, PathKind};\n \n@@ -34,6 +35,7 @@ pub(crate) fn lower_use_tree(\n         }\n     } else {\n         let alias = tree.alias().and_then(|a| a.name()).map(|a| a.as_name());\n+        let is_glob = tree.has_star();\n         if let Some(ast_path) = tree.path() {\n             // Handle self in a path.\n             // E.g. `use something::{self, <...>}`\n@@ -48,11 +50,15 @@ pub(crate) fn lower_use_tree(\n                 }\n             }\n             if let Some(path) = convert_path(prefix, ast_path, hygiene) {\n-                let is_glob = tree.has_star();\n                 cb(path, &tree, is_glob, alias)\n             }\n-            // FIXME: report errors somewhere\n-            // We get here if we do\n+        // FIXME: report errors somewhere\n+        // We get here if we do\n+        } else if is_glob {\n+            tested_by!(glob_enum_group);\n+            if let Some(prefix) = prefix {\n+                cb(prefix, &tree, is_glob, None)\n+            }\n         }\n     }\n }"}]}