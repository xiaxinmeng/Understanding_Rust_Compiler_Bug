{"sha": "f2645776dc5e519a0a0bd4e79f2801de197c2fbc", "node_id": "C_kwDOAAsO6NoAKGYyNjQ1Nzc2ZGM1ZTUxOWEwYTBiZDRlNzlmMjgwMWRlMTk3YzJmYmM", "commit": {"author": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2023-04-30T17:08:46Z"}, "committer": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2023-05-07T16:24:46Z"}, "message": "Use smaller ints for bitflags", "tree": {"sha": "8a9fa7f371d32224da1643db0d66cda8e0064c8a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a9fa7f371d32224da1643db0d66cda8e0064c8a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2645776dc5e519a0a0bd4e79f2801de197c2fbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2645776dc5e519a0a0bd4e79f2801de197c2fbc", "html_url": "https://github.com/rust-lang/rust/commit/f2645776dc5e519a0a0bd4e79f2801de197c2fbc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2645776dc5e519a0a0bd4e79f2801de197c2fbc/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0dddad0dc5d614f799d7e04de4895e7a7418eccb", "url": "https://api.github.com/repos/rust-lang/rust/commits/0dddad0dc5d614f799d7e04de4895e7a7418eccb", "html_url": "https://github.com/rust-lang/rust/commit/0dddad0dc5d614f799d7e04de4895e7a7418eccb"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "5e13e7c8aafc8187a4876e65d44f0a069675175d", "filename": "compiler/rustc_data_structures/src/profiling.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f2645776dc5e519a0a0bd4e79f2801de197c2fbc/compiler%2Frustc_data_structures%2Fsrc%2Fprofiling.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2645776dc5e519a0a0bd4e79f2801de197c2fbc/compiler%2Frustc_data_structures%2Fsrc%2Fprofiling.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fprofiling.rs?ref=f2645776dc5e519a0a0bd4e79f2801de197c2fbc", "patch": "@@ -101,7 +101,7 @@ use parking_lot::RwLock;\n use smallvec::SmallVec;\n \n bitflags::bitflags! {\n-    struct EventFilter: u32 {\n+    struct EventFilter: u16 {\n         const GENERIC_ACTIVITIES  = 1 << 0;\n         const QUERY_PROVIDERS     = 1 << 1;\n         const QUERY_CACHE_HITS    = 1 << 2;"}, {"sha": "ad9891a5dca687cc1b98716c519a15d3ddf8bdf3", "filename": "compiler/rustc_middle/src/ty/adt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f2645776dc5e519a0a0bd4e79f2801de197c2fbc/compiler%2Frustc_middle%2Fsrc%2Fty%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2645776dc5e519a0a0bd4e79f2801de197c2fbc/compiler%2Frustc_middle%2Fsrc%2Fty%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fadt.rs?ref=f2645776dc5e519a0a0bd4e79f2801de197c2fbc", "patch": "@@ -26,7 +26,7 @@ use super::{Destructor, FieldDef, GenericPredicates, Ty, TyCtxt, VariantDef, Var\n \n bitflags! {\n     #[derive(HashStable, TyEncodable, TyDecodable)]\n-    pub struct AdtFlags: u32 {\n+    pub struct AdtFlags: u16 {\n         const NO_ADT_FLAGS        = 0;\n         /// Indicates whether the ADT is an enum.\n         const IS_ENUM             = 1 << 0;"}, {"sha": "88b084bbccbdcaf756fe2e53669b17af2a2ce039", "filename": "compiler/rustc_middle/src/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f2645776dc5e519a0a0bd4e79f2801de197c2fbc/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2645776dc5e519a0a0bd4e79f2801de197c2fbc/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs?ref=f2645776dc5e519a0a0bd4e79f2801de197c2fbc", "patch": "@@ -1739,7 +1739,7 @@ pub struct Destructor {\n \n bitflags! {\n     #[derive(HashStable, TyEncodable, TyDecodable)]\n-    pub struct VariantFlags: u32 {\n+    pub struct VariantFlags: u8 {\n         const NO_VARIANT_FLAGS        = 0;\n         /// Indicates whether the field list of this variant is `#[non_exhaustive]`.\n         const IS_FIELD_LIST_NON_EXHAUSTIVE = 1 << 0;"}, {"sha": "52159a7b06aa5178310ea0e4a2b3fc2aa4e58f33", "filename": "compiler/rustc_target/src/abi/call/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f2645776dc5e519a0a0bd4e79f2801de197c2fbc/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2645776dc5e519a0a0bd4e79f2801de197c2fbc/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs?ref=f2645776dc5e519a0a0bd4e79f2801de197c2fbc", "patch": "@@ -65,7 +65,7 @@ mod attr_impl {\n     // The subset of llvm::Attribute needed for arguments, packed into a bitfield.\n     bitflags::bitflags! {\n         #[derive(Default, HashStable_Generic)]\n-        pub struct ArgAttribute: u16 {\n+        pub struct ArgAttribute: u8 {\n             const NoAlias   = 1 << 1;\n             const NoCapture = 1 << 2;\n             const NonNull   = 1 << 3;"}]}