{"sha": "1886d5fe1cdd1a016ecea9fc93d68b3052c528c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4ODZkNWZlMWNkZDFhMDE2ZWNlYTlmYzkzZDY4YjMwNTJjNTI4Yzg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-09-30T12:00:45Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-09-30T12:00:45Z"}, "message": "Auto merge of #54596 - mjbshaw:drop, r=RalfJung\n\nMake core::mem::needs_drop a const fn\n\nThis fixes #51929.", "tree": {"sha": "4a35a5e72fac81649886bf524b7ed3948671c463", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a35a5e72fac81649886bf524b7ed3948671c463"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1886d5fe1cdd1a016ecea9fc93d68b3052c528c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1886d5fe1cdd1a016ecea9fc93d68b3052c528c8", "html_url": "https://github.com/rust-lang/rust/commit/1886d5fe1cdd1a016ecea9fc93d68b3052c528c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1886d5fe1cdd1a016ecea9fc93d68b3052c528c8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a677e4c347630b855f2889557c2d37180a1a41be", "url": "https://api.github.com/repos/rust-lang/rust/commits/a677e4c347630b855f2889557c2d37180a1a41be", "html_url": "https://github.com/rust-lang/rust/commit/a677e4c347630b855f2889557c2d37180a1a41be"}, {"sha": "43cc32fbb2506eff0090e894c1e8a46b62a8eb0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/43cc32fbb2506eff0090e894c1e8a46b62a8eb0b", "html_url": "https://github.com/rust-lang/rust/commit/43cc32fbb2506eff0090e894c1e8a46b62a8eb0b"}], "stats": {"total": 82, "additions": 69, "deletions": 13}, "files": [{"sha": "f537add999a0397e30b8ad33c0cb04bfd1eb9a95", "filename": "src/libcore/mem.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1886d5fe1cdd1a016ecea9fc93d68b3052c528c8/src%2Flibcore%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1886d5fe1cdd1a016ecea9fc93d68b3052c528c8/src%2Flibcore%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem.rs?ref=1886d5fe1cdd1a016ecea9fc93d68b3052c528c8", "patch": "@@ -455,6 +455,16 @@ pub fn align_of_val<T: ?Sized>(val: &T) -> usize {\n /// ```\n #[inline]\n #[stable(feature = \"needs_drop\", since = \"1.21.0\")]\n+#[rustc_const_unstable(feature = \"const_needs_drop\")]\n+#[cfg(not(stage0))]\n+pub const fn needs_drop<T>() -> bool {\n+    intrinsics::needs_drop::<T>()\n+}\n+\n+#[inline]\n+#[stable(feature = \"needs_drop\", since = \"1.21.0\")]\n+#[cfg(stage0)]\n+/// Ceci n'est pas la documentation\n pub fn needs_drop<T>() -> bool {\n     unsafe { intrinsics::needs_drop::<T>() }\n }"}, {"sha": "63408d809ec2989fb528b1be16a16ff83eb7cf05", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1886d5fe1cdd1a016ecea9fc93d68b3052c528c8/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1886d5fe1cdd1a016ecea9fc93d68b3052c528c8/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=1886d5fe1cdd1a016ecea9fc93d68b3052c528c8", "patch": "@@ -1144,6 +1144,7 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n                 match &self.item_name(def_id).as_str()[..] {\n                     | \"size_of\"\n                     | \"min_align_of\"\n+                    | \"needs_drop\"\n                     => return true,\n                     _ => {},\n                 }"}, {"sha": "5fee49ba2fcf2ddb5bca8745a35b1bfc72510055", "filename": "src/librustc_mir/interpret/intrinsics.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1886d5fe1cdd1a016ecea9fc93d68b3052c528c8/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1886d5fe1cdd1a016ecea9fc93d68b3052c528c8/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs?ref=1886d5fe1cdd1a016ecea9fc93d68b3052c528c8", "patch": "@@ -65,6 +65,13 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M>\n                 self.write_scalar(align_val, dest)?;\n             }\n \n+            \"needs_drop\" => {\n+                let ty = substs.type_at(0);\n+                let ty_needs_drop = ty.needs_drop(self.tcx.tcx, self.param_env);\n+                let val = Scalar::from_bool(ty_needs_drop);\n+                self.write_scalar(val, dest)?;\n+            }\n+\n             \"size_of\" => {\n                 let ty = substs.type_at(0);\n                 let size = self.layout_of(ty)?.size.bytes() as u128;"}, {"sha": "a6e2cad509408cf2309f27263f0ecdae6ecc42b0", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1886d5fe1cdd1a016ecea9fc93d68b3052c528c8/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1886d5fe1cdd1a016ecea9fc93d68b3052c528c8/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=1886d5fe1cdd1a016ecea9fc93d68b3052c528c8", "patch": "@@ -823,6 +823,7 @@ impl<'a, 'tcx> Visitor<'tcx> for Qualifier<'a, 'tcx, 'tcx> {\n                         match &self.tcx.item_name(def_id).as_str()[..] {\n                             | \"size_of\"\n                             | \"min_align_of\"\n+                            | \"needs_drop\"\n                             | \"type_id\"\n                             | \"bswap\"\n                             | \"bitreverse\""}, {"sha": "d630c5b3040b7f1db3dc036125b6468e166d013d", "filename": "src/librustc_typeck/check/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1886d5fe1cdd1a016ecea9fc93d68b3052c528c8/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1886d5fe1cdd1a016ecea9fc93d68b3052c528c8/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs?ref=1886d5fe1cdd1a016ecea9fc93d68b3052c528c8", "patch": "@@ -117,7 +117,7 @@ pub fn check_intrinsic_type<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n         (0, Vec::new(), tcx.types.never, hir::Unsafety::Unsafe)\n     } else {\n         let unsafety = match &name[..] {\n-            \"size_of\" | \"min_align_of\" => hir::Unsafety::Normal,\n+            \"size_of\" | \"min_align_of\" | \"needs_drop\" => hir::Unsafety::Normal,\n             _ => hir::Unsafety::Unsafe,\n         };\n         let (n_tps, inputs, output) = match &name[..] {"}, {"sha": "17e0b0431da6e426ffdc9e14ad509db9d68d6c3a", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1886d5fe1cdd1a016ecea9fc93d68b3052c528c8/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1886d5fe1cdd1a016ecea9fc93d68b3052c528c8/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=1886d5fe1cdd1a016ecea9fc93d68b3052c528c8", "patch": "@@ -2015,7 +2015,7 @@ fn compute_sig_of_foreign_fn_decl<'a, 'tcx>(\n ) -> ty::PolyFnSig<'tcx> {\n     let unsafety = if abi == abi::Abi::RustIntrinsic {\n         match &*tcx.item_name(def_id).as_str() {\n-            \"size_of\" | \"min_align_of\" => hir::Unsafety::Normal,\n+            \"size_of\" | \"min_align_of\" | \"needs_drop\" => hir::Unsafety::Normal,\n             _ => hir::Unsafety::Unsafe,\n         }\n     } else {"}, {"sha": "edf3a6b3dcd9489bb18abb5dd00f5bd8ef557a33", "filename": "src/test/run-pass/const-needs_drop.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/1886d5fe1cdd1a016ecea9fc93d68b3052c528c8/src%2Ftest%2Frun-pass%2Fconst-needs_drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1886d5fe1cdd1a016ecea9fc93d68b3052c528c8/src%2Ftest%2Frun-pass%2Fconst-needs_drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-needs_drop.rs?ref=1886d5fe1cdd1a016ecea9fc93d68b3052c528c8", "patch": "@@ -0,0 +1,39 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(const_needs_drop)]\n+\n+use std::mem;\n+\n+struct Trivial(u8, f32);\n+\n+struct NonTrivial(u8, String);\n+\n+const CONST_U8: bool = mem::needs_drop::<u8>();\n+const CONST_STRING: bool = mem::needs_drop::<String>();\n+const CONST_TRIVIAL: bool = mem::needs_drop::<Trivial>();\n+const CONST_NON_TRIVIAL: bool = mem::needs_drop::<NonTrivial>();\n+\n+static STATIC_U8: bool = mem::needs_drop::<u8>();\n+static STATIC_STRING: bool = mem::needs_drop::<String>();\n+static STATIC_TRIVIAL: bool = mem::needs_drop::<Trivial>();\n+static STATIC_NON_TRIVIAL: bool = mem::needs_drop::<NonTrivial>();\n+\n+fn main() {\n+    assert!(!CONST_U8);\n+    assert!(CONST_STRING);\n+    assert!(!CONST_TRIVIAL);\n+    assert!(CONST_NON_TRIVIAL);\n+\n+    assert!(!STATIC_U8);\n+    assert!(STATIC_STRING);\n+    assert!(!STATIC_TRIVIAL);\n+    assert!(STATIC_NON_TRIVIAL);\n+}"}, {"sha": "d024aca0cd701436308bf7ca7de009dfdd5e2076", "filename": "src/test/run-pass/union/union-nodrop.rs", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1886d5fe1cdd1a016ecea9fc93d68b3052c528c8/src%2Ftest%2Frun-pass%2Funion%2Funion-nodrop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1886d5fe1cdd1a016ecea9fc93d68b3052c528c8/src%2Ftest%2Frun-pass%2Funion%2Funion-nodrop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funion%2Funion-nodrop.rs?ref=1886d5fe1cdd1a016ecea9fc93d68b3052c528c8", "patch": "@@ -57,15 +57,13 @@ impl<T> Drop for ActuallyDrop<T> {\n }\n \n fn main() {\n-    unsafe {\n-        // NoDrop should not make needs_drop true\n-        assert!(!needs_drop::<Foo>());\n-        assert!(!needs_drop::<NoDrop<u8>>());\n-        assert!(!needs_drop::<NoDrop<Box<u8>>>());\n-        // presence of other drop types should still work\n-        assert!(needs_drop::<Baz>());\n-        // drop impl on union itself should work\n-        assert!(needs_drop::<ActuallyDrop<u8>>());\n-        assert!(needs_drop::<ActuallyDrop<Box<u8>>>());\n-    }\n+    // NoDrop should not make needs_drop true\n+    assert!(!needs_drop::<Foo>());\n+    assert!(!needs_drop::<NoDrop<u8>>());\n+    assert!(!needs_drop::<NoDrop<Box<u8>>>());\n+    // presence of other drop types should still work\n+    assert!(needs_drop::<Baz>());\n+    // drop impl on union itself should work\n+    assert!(needs_drop::<ActuallyDrop<u8>>());\n+    assert!(needs_drop::<ActuallyDrop<Box<u8>>>());\n }"}]}