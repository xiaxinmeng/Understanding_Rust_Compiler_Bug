{"sha": "9f95ccb4269f2bb795c56d0fa7692cb7705c608e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmOTVjY2I0MjY5ZjJiYjc5NWM1NmQwZmE3NjkyY2I3NzA1YzYwOGU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-15T09:16:53Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-15T09:16:53Z"}, "message": "test: Add a crust function stress test", "tree": {"sha": "0d260d24ff3521f4c36ff9075b10d0461afb3607", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d260d24ff3521f4c36ff9075b10d0461afb3607"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f95ccb4269f2bb795c56d0fa7692cb7705c608e", "comment_count": 1, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f95ccb4269f2bb795c56d0fa7692cb7705c608e", "html_url": "https://github.com/rust-lang/rust/commit/9f95ccb4269f2bb795c56d0fa7692cb7705c608e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f95ccb4269f2bb795c56d0fa7692cb7705c608e/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "450c4f3fa84f1cc1fe85e2f74402e00a7557433b", "url": "https://api.github.com/repos/rust-lang/rust/commits/450c4f3fa84f1cc1fe85e2f74402e00a7557433b", "html_url": "https://github.com/rust-lang/rust/commit/450c4f3fa84f1cc1fe85e2f74402e00a7557433b"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "73dac3f48c4d3cb4b1d4ec56ba9130379e1deca1", "filename": "src/test/run-pass/crust-stress.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/9f95ccb4269f2bb795c56d0fa7692cb7705c608e/src%2Ftest%2Frun-pass%2Fcrust-stress.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f95ccb4269f2bb795c56d0fa7692cb7705c608e/src%2Ftest%2Frun-pass%2Fcrust-stress.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrust-stress.rs?ref=9f95ccb4269f2bb795c56d0fa7692cb7705c608e", "patch": "@@ -0,0 +1,28 @@\n+// This creates a bunch of yielding tasks that run concurrently\n+// while holding onto C stacks\n+\n+native mod rustrt {\n+    fn rust_dbg_call(cb: *u8,\n+                     data: ctypes::uintptr_t) -> ctypes::uintptr_t;\n+}\n+\n+crust fn cb(data: ctypes::uintptr_t) -> ctypes::uintptr_t {\n+    if data == 1u {\n+        data\n+    } else {\n+        task::yield();\n+        count(data - 1u) + count(data - 1u)\n+    }\n+}\n+\n+fn count(n: uint) -> uint {\n+    rustrt::rust_dbg_call(cb, n)\n+}\n+\n+fn main() {\n+    iter::repeat(100u) {||\n+        task::spawn {||\n+            count(5u);\n+        };\n+    }\n+}\n\\ No newline at end of file"}]}