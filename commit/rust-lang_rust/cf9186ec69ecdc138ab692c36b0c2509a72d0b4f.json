{"sha": "cf9186ec69ecdc138ab692c36b0c2509a72d0b4f", "node_id": "C_kwDOAAsO6NoAKGNmOTE4NmVjNjllY2RjMTM4YWI2OTJjMzZiMGMyNTA5YTcyZDBiNGY", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-08T11:33:19Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-08T11:33:19Z"}, "message": "interpret: only to track_caller in debug builds due to perf", "tree": {"sha": "d40eb6857c6212b0cda49250505dd72cc7259347", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d40eb6857c6212b0cda49250505dd72cc7259347"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf9186ec69ecdc138ab692c36b0c2509a72d0b4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf9186ec69ecdc138ab692c36b0c2509a72d0b4f", "html_url": "https://github.com/rust-lang/rust/commit/cf9186ec69ecdc138ab692c36b0c2509a72d0b4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf9186ec69ecdc138ab692c36b0c2509a72d0b4f/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e0f3cb56606e4e7e136b46b7461ddecb89e3527", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e0f3cb56606e4e7e136b46b7461ddecb89e3527", "html_url": "https://github.com/rust-lang/rust/commit/1e0f3cb56606e4e7e136b46b7461ddecb89e3527"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "75d987b655366af0a1244703cdb62c56484d38cb", "filename": "compiler/rustc_const_eval/src/interpret/operand.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cf9186ec69ecdc138ab692c36b0c2509a72d0b4f/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf9186ec69ecdc138ab692c36b0c2509a72d0b4f/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperand.rs?ref=cf9186ec69ecdc138ab692c36b0c2509a72d0b4f", "patch": "@@ -71,7 +71,7 @@ impl<'tcx, Tag: Provenance> Immediate<Tag> {\n     }\n \n     #[inline]\n-    #[track_caller]\n+    #[cfg_attr(debug_assertions, track_caller)] // only in debug builds due to perf (see #98980)\n     pub fn to_scalar_or_uninit(self) -> ScalarMaybeUninit<Tag> {\n         match self {\n             Immediate::Scalar(val) => val,\n@@ -80,13 +80,13 @@ impl<'tcx, Tag: Provenance> Immediate<Tag> {\n     }\n \n     #[inline]\n-    #[track_caller]\n+    #[cfg_attr(debug_assertions, track_caller)] // only in debug builds due to perf (see #98980)\n     pub fn to_scalar(self) -> InterpResult<'tcx, Scalar<Tag>> {\n         self.to_scalar_or_uninit().check_init()\n     }\n \n     #[inline]\n-    #[track_caller]\n+    #[cfg_attr(debug_assertions, track_caller)] // only in debug builds due to perf (see #98980)\n     pub fn to_scalar_or_uninit_pair(self) -> (ScalarMaybeUninit<Tag>, ScalarMaybeUninit<Tag>) {\n         match self {\n             Immediate::ScalarPair(val1, val2) => (val1, val2),\n@@ -95,7 +95,7 @@ impl<'tcx, Tag: Provenance> Immediate<Tag> {\n     }\n \n     #[inline]\n-    #[track_caller]\n+    #[cfg_attr(debug_assertions, track_caller)] // only in debug builds due to perf (see #98980)\n     pub fn to_scalar_pair(self) -> InterpResult<'tcx, (Scalar<Tag>, Scalar<Tag>)> {\n         let (val1, val2) = self.to_scalar_or_uninit_pair();\n         Ok((val1.check_init()?, val2.check_init()?))"}]}