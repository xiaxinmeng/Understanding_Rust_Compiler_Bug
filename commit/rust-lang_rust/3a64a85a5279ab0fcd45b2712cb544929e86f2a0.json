{"sha": "3a64a85a5279ab0fcd45b2712cb544929e86f2a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhNjRhODVhNTI3OWFiMGZjZDQ1YjI3MTJjYjU0NDkyOWU4NmYyYTA=", "commit": {"author": {"name": "Wesley Norris", "email": "repnop@outlook.com", "date": "2019-10-26T20:24:48Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-10-27T13:52:33Z"}, "message": "Fixes #2054.\n\nThis adds the `flip_trait_bound` assist which allows for the swapping of two trait bounds in a trait list that are next to each other.", "tree": {"sha": "ed8ac5ed57a0c978cde173c11ab9394548f697c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed8ac5ed57a0c978cde173c11ab9394548f697c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a64a85a5279ab0fcd45b2712cb544929e86f2a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a64a85a5279ab0fcd45b2712cb544929e86f2a0", "html_url": "https://github.com/rust-lang/rust/commit/3a64a85a5279ab0fcd45b2712cb544929e86f2a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a64a85a5279ab0fcd45b2712cb544929e86f2a0/comments", "author": {"login": "repnop", "id": 24203105, "node_id": "MDQ6VXNlcjI0MjAzMTA1", "avatar_url": "https://avatars.githubusercontent.com/u/24203105?v=4", "gravatar_id": "", "url": "https://api.github.com/users/repnop", "html_url": "https://github.com/repnop", "followers_url": "https://api.github.com/users/repnop/followers", "following_url": "https://api.github.com/users/repnop/following{/other_user}", "gists_url": "https://api.github.com/users/repnop/gists{/gist_id}", "starred_url": "https://api.github.com/users/repnop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/repnop/subscriptions", "organizations_url": "https://api.github.com/users/repnop/orgs", "repos_url": "https://api.github.com/users/repnop/repos", "events_url": "https://api.github.com/users/repnop/events{/privacy}", "received_events_url": "https://api.github.com/users/repnop/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e46c73dc4ecc6fa83b53aae75236193486008877", "url": "https://api.github.com/repos/rust-lang/rust/commits/e46c73dc4ecc6fa83b53aae75236193486008877", "html_url": "https://github.com/rust-lang/rust/commit/e46c73dc4ecc6fa83b53aae75236193486008877"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "a2c954ec5fa9505a13eec4db7498cde436a102b1", "filename": "crates/ra_assists/src/assists/flip_trait_bound.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/3a64a85a5279ab0fcd45b2712cb544929e86f2a0/crates%2Fra_assists%2Fsrc%2Fassists%2Fflip_trait_bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a64a85a5279ab0fcd45b2712cb544929e86f2a0/crates%2Fra_assists%2Fsrc%2Fassists%2Fflip_trait_bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fflip_trait_bound.rs?ref=3a64a85a5279ab0fcd45b2712cb544929e86f2a0", "patch": "@@ -0,0 +1,32 @@\n+//! Assist for swapping traits inside of a trait bound list\n+//!\n+//! E.g. `A + B` => `B + A` when the cursor is placed by the `+` inside of a\n+//! trait bound list\n+\n+use hir::db::HirDatabase;\n+use ra_syntax::{algo::non_trivia_sibling, ast::TypeBoundList, Direction, T};\n+\n+use crate::{Assist, AssistCtx, AssistId};\n+\n+/// Flip trait bound assist.\n+pub(crate) fn flip_trait_bound(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist> {\n+    // Make sure we're in a `TypeBoundList`\n+    ctx.node_at_offset::<TypeBoundList>()?;\n+\n+    // We want to replicate the behavior of `flip_binexpr` by only suggesting\n+    // the assist when the cursor is on a `+`\n+    let plus = ctx.token_at_offset().find(|tkn| tkn.kind() == T![+])?;\n+\n+    let (before, after) = (\n+        non_trivia_sibling(plus.clone().into(), Direction::Prev)?,\n+        non_trivia_sibling(plus.clone().into(), Direction::Next)?,\n+    );\n+\n+    ctx.add_action(AssistId(\"flip_trait_bound\"), \"flip trait bound\", |edit| {\n+        edit.target(plus.text_range());\n+        edit.replace(before.text_range(), after.to_string());\n+        edit.replace(after.text_range(), before.to_string());\n+    });\n+\n+    ctx.build()\n+}"}, {"sha": "871d499601dd16e50b3b24c77162a30e9353f061", "filename": "crates/ra_assists/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a64a85a5279ab0fcd45b2712cb544929e86f2a0/crates%2Fra_assists%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a64a85a5279ab0fcd45b2712cb544929e86f2a0/crates%2Fra_assists%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Flib.rs?ref=3a64a85a5279ab0fcd45b2712cb544929e86f2a0", "patch": "@@ -97,6 +97,7 @@ mod assists {\n     mod apply_demorgan;\n     mod flip_comma;\n     mod flip_binexpr;\n+    mod flip_trait_bound;\n     mod change_visibility;\n     mod fill_match_arms;\n     mod merge_match_arms;\n@@ -123,6 +124,7 @@ mod assists {\n             merge_match_arms::merge_match_arms,\n             flip_comma::flip_comma,\n             flip_binexpr::flip_binexpr,\n+            flip_trait_bound::flip_trait_bound,\n             introduce_variable::introduce_variable,\n             replace_if_let_with_match::replace_if_let_with_match,\n             split_import::split_import,"}]}