{"sha": "a9d567584857b1be4ca8eaa5ef2c7d85f7b2845e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5ZDU2NzU4NDg1N2IxYmU0Y2E4ZWFhNWVmMmM3ZDg1ZjdiMjg0NWU=", "commit": {"author": {"name": "Mikhail Rakhmanov", "email": "rakhmanov.m@gmail.com", "date": "2020-06-03T18:10:33Z"}, "committer": {"name": "Mikhail Rakhmanov", "email": "rakhmanov.m@gmail.com", "date": "2020-06-03T18:10:33Z"}, "message": "Fix incorrect behaviour if not resolved", "tree": {"sha": "ff99d995f83bd0dcfc7c1d56039144f32799e604", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff99d995f83bd0dcfc7c1d56039144f32799e604"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9d567584857b1be4ca8eaa5ef2c7d85f7b2845e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9d567584857b1be4ca8eaa5ef2c7d85f7b2845e", "html_url": "https://github.com/rust-lang/rust/commit/a9d567584857b1be4ca8eaa5ef2c7d85f7b2845e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9d567584857b1be4ca8eaa5ef2c7d85f7b2845e/comments", "author": {"login": "mcrakhman", "id": 16068868, "node_id": "MDQ6VXNlcjE2MDY4ODY4", "avatar_url": "https://avatars.githubusercontent.com/u/16068868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcrakhman", "html_url": "https://github.com/mcrakhman", "followers_url": "https://api.github.com/users/mcrakhman/followers", "following_url": "https://api.github.com/users/mcrakhman/following{/other_user}", "gists_url": "https://api.github.com/users/mcrakhman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcrakhman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcrakhman/subscriptions", "organizations_url": "https://api.github.com/users/mcrakhman/orgs", "repos_url": "https://api.github.com/users/mcrakhman/repos", "events_url": "https://api.github.com/users/mcrakhman/events{/privacy}", "received_events_url": "https://api.github.com/users/mcrakhman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcrakhman", "id": 16068868, "node_id": "MDQ6VXNlcjE2MDY4ODY4", "avatar_url": "https://avatars.githubusercontent.com/u/16068868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcrakhman", "html_url": "https://github.com/mcrakhman", "followers_url": "https://api.github.com/users/mcrakhman/followers", "following_url": "https://api.github.com/users/mcrakhman/following{/other_user}", "gists_url": "https://api.github.com/users/mcrakhman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcrakhman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcrakhman/subscriptions", "organizations_url": "https://api.github.com/users/mcrakhman/orgs", "repos_url": "https://api.github.com/users/mcrakhman/repos", "events_url": "https://api.github.com/users/mcrakhman/events{/privacy}", "received_events_url": "https://api.github.com/users/mcrakhman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08aa8e1de717425ebf49796df1515d9fbd8b2e3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/08aa8e1de717425ebf49796df1515d9fbd8b2e3e", "html_url": "https://github.com/rust-lang/rust/commit/08aa8e1de717425ebf49796df1515d9fbd8b2e3e"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "1925db8b2754293f2a7620e99639dcd52b8751fe", "filename": "crates/ra_assists/src/assist_context.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a9d567584857b1be4ca8eaa5ef2c7d85f7b2845e/crates%2Fra_assists%2Fsrc%2Fassist_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9d567584857b1be4ca8eaa5ef2c7d85f7b2845e/crates%2Fra_assists%2Fsrc%2Fassist_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassist_context.rs?ref=a9d567584857b1be4ca8eaa5ef2c7d85f7b2845e", "patch": "@@ -179,6 +179,7 @@ impl Assists {\n         f: impl FnOnce(&mut AssistDirector),\n     ) -> Option<()> {\n         if !self.resolve {\n+            self.buf.push((label, None));\n             return None;\n         }\n         let mut director = AssistDirector::default();"}]}