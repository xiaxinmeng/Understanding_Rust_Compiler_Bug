{"sha": "ac229c281981129003cfcf6ef894bb7655b0d466", "node_id": "C_kwDOAAsO6NoAKGFjMjI5YzI4MTk4MTEyOTAwM2NmY2Y2ZWY4OTRiYjc2NTViMGQ0NjY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-01T21:44:16Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-01T21:44:16Z"}, "message": "fix clippy::iter_kv_map", "tree": {"sha": "2c2d444140da6922448e33da2967901fa32aa9ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c2d444140da6922448e33da2967901fa32aa9ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac229c281981129003cfcf6ef894bb7655b0d466", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac229c281981129003cfcf6ef894bb7655b0d466", "html_url": "https://github.com/rust-lang/rust/commit/ac229c281981129003cfcf6ef894bb7655b0d466", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac229c281981129003cfcf6ef894bb7655b0d466/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0196c2bd274dd5bb01c77b5a9b1da9623571b0f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/0196c2bd274dd5bb01c77b5a9b1da9623571b0f8", "html_url": "https://github.com/rust-lang/rust/commit/0196c2bd274dd5bb01c77b5a9b1da9623571b0f8"}], "stats": {"total": 25, "additions": 10, "deletions": 15}, "files": [{"sha": "113c3f08ab9ae986c3dfc8155157976522c40b9f", "filename": "compiler/rustc_hir_analysis/src/astconv/errors.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ac229c281981129003cfcf6ef894bb7655b0d466/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac229c281981129003cfcf6ef894bb7655b0d466/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Ferrors.rs?ref=ac229c281981129003cfcf6ef894bb7655b0d466", "patch": "@@ -483,8 +483,8 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                 [segment] if segment.args.is_none() => {\n                     trait_bound_spans = vec![segment.ident.span];\n                     associated_types = associated_types\n-                        .into_iter()\n-                        .map(|(_, items)| (segment.ident.span, items))\n+                        .into_values()\n+                        .map(|items| (segment.ident.span, items))\n                         .collect();\n                 }\n                 _ => {}"}, {"sha": "1f9c993adff22113114f29d0cf8c92ddad72612a", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ac229c281981129003cfcf6ef894bb7655b0d466/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac229c281981129003cfcf6ef894bb7655b0d466/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=ac229c281981129003cfcf6ef894bb7655b0d466", "patch": "@@ -978,7 +978,7 @@ impl<'tcx> TypeErrCtxt<'_, 'tcx> {\n             let (_, sig, reg) = ty::print::FmtPrinter::new(self.tcx, Namespace::TypeNS)\n                 .name_all_regions(sig)\n                 .unwrap();\n-            let lts: Vec<String> = reg.into_iter().map(|(_, kind)| kind.to_string()).collect();\n+            let lts: Vec<String> = reg.into_values().map(|kind| kind.to_string()).collect();\n             (if lts.is_empty() { String::new() } else { format!(\"for<{}> \", lts.join(\", \")) }, sig)\n         };\n "}, {"sha": "9c25f3009ba81670ebccd273f6ecbc559700146b", "filename": "compiler/rustc_middle/src/middle/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ac229c281981129003cfcf6ef894bb7655b0d466/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac229c281981129003cfcf6ef894bb7655b0d466/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fmod.rs?ref=ac229c281981129003cfcf6ef894bb7655b0d466", "patch": "@@ -19,7 +19,7 @@ pub mod lib_features {\n                 .stable\n                 .iter()\n                 .map(|(f, (s, _))| (*f, Some(*s)))\n-                .chain(self.unstable.iter().map(|(f, _)| (*f, None)))\n+                .chain(self.unstable.keys().map(|f| (*f, None)))\n                 .collect();\n             all_features.sort_unstable_by(|a, b| a.0.as_str().partial_cmp(b.0.as_str()).unwrap());\n             all_features"}, {"sha": "482b78d42e37715e6123abd43ea5ecc28c6a4e7f", "filename": "compiler/rustc_monomorphize/src/partitioning/default.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ac229c281981129003cfcf6ef894bb7655b0d466/compiler%2Frustc_monomorphize%2Fsrc%2Fpartitioning%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac229c281981129003cfcf6ef894bb7655b0d466/compiler%2Frustc_monomorphize%2Fsrc%2Fpartitioning%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Fpartitioning%2Fdefault.rs?ref=ac229c281981129003cfcf6ef894bb7655b0d466", "patch": "@@ -89,10 +89,7 @@ impl<'tcx> Partitioner<'tcx> for DefaultPartitioning {\n         }\n \n         PreInliningPartitioning {\n-            codegen_units: codegen_units\n-                .into_iter()\n-                .map(|(_, codegen_unit)| codegen_unit)\n-                .collect(),\n+            codegen_units: codegen_units.into_values().map(|codegen_unit| codegen_unit).collect(),\n             roots,\n             internalization_candidates,\n         }"}, {"sha": "e69a9d0aecaf4a96d8fbeee26d5102587ae038b7", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ac229c281981129003cfcf6ef894bb7655b0d466/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac229c281981129003cfcf6ef894bb7655b0d466/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=ac229c281981129003cfcf6ef894bb7655b0d466", "patch": "@@ -1669,8 +1669,8 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n     ) -> Option<Symbol> {\n         let mut candidates = self\n             .extern_prelude\n-            .iter()\n-            .map(|(ident, _)| ident.name)\n+            .keys()\n+            .map(|ident| ident.name)\n             .chain(\n                 self.module_map\n                     .iter()\n@@ -2007,7 +2007,7 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n         // 1) some consistent ordering for emitted diagnostics, and\n         // 2) `std` suggestions before `core` suggestions.\n         let mut extern_crate_names =\n-            self.extern_prelude.iter().map(|(ident, _)| ident.name).collect::<Vec<_>>();\n+            self.extern_prelude.keys().map(|ident| ident.name).collect::<Vec<_>>();\n         extern_crate_names.sort_by(|a, b| b.as_str().partial_cmp(a.as_str()).unwrap());\n \n         for name in extern_crate_names.into_iter() {"}, {"sha": "b82b07bcf0cc898e55158789825bf01fb22e6fb4", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ac229c281981129003cfcf6ef894bb7655b0d466/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac229c281981129003cfcf6ef894bb7655b0d466/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=ac229c281981129003cfcf6ef894bb7655b0d466", "patch": "@@ -2421,8 +2421,7 @@ impl<'a: 'ast, 'b, 'ast, 'tcx> LateResolutionVisitor<'a, 'b, 'ast, 'tcx> {\n                     .iter()\n                     .rfind(|r| matches!(r.kind, ItemRibKind(_)))\n                     .expect(\"associated item outside of an item\");\n-                seen_bindings\n-                    .extend(parent_rib.bindings.iter().map(|(ident, _)| (*ident, ident.span)));\n+                seen_bindings.extend(parent_rib.bindings.keys().map(|ident| (*ident, ident.span)));\n             };\n             add_bindings_for_ns(ValueNS);\n             add_bindings_for_ns(TypeNS);"}, {"sha": "527f6013a151639b956b234b8a5ecb7112e2835d", "filename": "compiler/rustc_traits/src/chalk/lowering.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ac229c281981129003cfcf6ef894bb7655b0d466/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac229c281981129003cfcf6ef894bb7655b0d466/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Flowering.rs?ref=ac229c281981129003cfcf6ef894bb7655b0d466", "patch": "@@ -909,8 +909,7 @@ pub(crate) fn collect_bound_vars<'tcx, T: TypeFoldable<TyCtxt<'tcx>>>(\n             .or_else(|| bug!(\"Skipped bound var index: parameters={:?}\", parameters));\n     });\n \n-    let binders =\n-        chalk_ir::VariableKinds::from_iter(interner, parameters.into_iter().map(|(_, v)| v));\n+    let binders = chalk_ir::VariableKinds::from_iter(interner, parameters.into_values());\n \n     (new_ty, binders, named_parameters)\n }"}]}