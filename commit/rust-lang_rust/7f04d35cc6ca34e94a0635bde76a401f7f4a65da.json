{"sha": "7f04d35cc6ca34e94a0635bde76a401f7f4a65da", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmMDRkMzVjYzZjYTM0ZTk0YTA2MzViZGU3NmE0MDFmN2Y0YTY1ZGE=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2016-04-21T20:45:33Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2016-04-28T18:36:34Z"}, "message": "Add FixedUnitCount codegen unit partitioning strategy.", "tree": {"sha": "b33477ec976990f74348c736dbbaec7fc37faa68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b33477ec976990f74348c736dbbaec7fc37faa68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f04d35cc6ca34e94a0635bde76a401f7f4a65da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f04d35cc6ca34e94a0635bde76a401f7f4a65da", "html_url": "https://github.com/rust-lang/rust/commit/7f04d35cc6ca34e94a0635bde76a401f7f4a65da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f04d35cc6ca34e94a0635bde76a401f7f4a65da/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c61f22932d12bac42db554dff96d6a5b74860990", "url": "https://api.github.com/repos/rust-lang/rust/commits/c61f22932d12bac42db554dff96d6a5b74860990", "html_url": "https://github.com/rust-lang/rust/commit/c61f22932d12bac42db554dff96d6a5b74860990"}], "stats": {"total": 72, "additions": 59, "deletions": 13}, "files": [{"sha": "ae097b823a6caad07641380c7f97b50dd670508f", "filename": "src/librustc_trans/base.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7f04d35cc6ca34e94a0635bde76a401f7f4a65da/src%2Flibrustc_trans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f04d35cc6ca34e94a0635bde76a401f7f4a65da/src%2Flibrustc_trans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fbase.rs?ref=7f04d35cc6ca34e94a0635bde76a401f7f4a65da", "patch": "@@ -58,7 +58,7 @@ use attributes;\n use build::*;\n use builder::{Builder, noname};\n use callee::{Callee, CallArgs, ArgExprs, ArgVals};\n-use partitioning;\n+use partitioning::{self, PartitioningStrategy};\n use cleanup::{self, CleanupMethods, DropHint};\n use closure;\n use common::{Block, C_bool, C_bytes_in_context, C_i32, C_int, C_uint, C_integral};\n@@ -2938,8 +2938,17 @@ fn collect_translation_items<'a, 'tcx>(ccx: &CrateContext<'a, 'tcx>) {\n         collector::collect_crate_translation_items(&ccx, collection_mode)\n     });\n \n+    let strategy = if ccx.sess().opts.debugging_opts.incremental.is_some() {\n+        PartitioningStrategy::PerModule\n+    } else {\n+        PartitioningStrategy::FixedUnitCount(ccx.sess().opts.cg.codegen_units)\n+    };\n+\n     let codegen_units = time(time_passes, \"codegen unit partitioning\", || {\n-        partitioning::partition(ccx.tcx(), items.iter().cloned(), &inlining_map)\n+        partitioning::partition(ccx.tcx(),\n+                                items.iter().cloned(),\n+                                strategy,\n+                                &inlining_map)\n     });\n \n     if ccx.sess().opts.debugging_opts.print_trans_items.is_some() {"}, {"sha": "d98c377531a4b2d65e84619f8661180f4071ac12", "filename": "src/librustc_trans/partitioning.rs", "status": "modified", "additions": 38, "deletions": 1, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/7f04d35cc6ca34e94a0635bde76a401f7f4a65da/src%2Flibrustc_trans%2Fpartitioning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f04d35cc6ca34e94a0635bde76a401f7f4a65da/src%2Flibrustc_trans%2Fpartitioning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fpartitioning.rs?ref=7f04d35cc6ca34e94a0635bde76a401f7f4a65da", "patch": "@@ -132,19 +132,29 @@ pub struct CodegenUnit<'tcx> {\n     pub items: FnvHashMap<TransItem<'tcx>, llvm::Linkage>,\n }\n \n+pub enum PartitioningStrategy {\n+    PerModule,\n+    FixedUnitCount(usize)\n+}\n+\n // Anything we can't find a proper codegen unit for goes into this.\n const FALLBACK_CODEGEN_UNIT: &'static str = \"__rustc_fallback_codegen_unit\";\n \n pub fn partition<'tcx, I>(tcx: &TyCtxt<'tcx>,\n                           trans_items: I,\n+                          strategy: PartitioningStrategy,\n                           inlining_map: &InliningMap<'tcx>)\n                           -> Vec<CodegenUnit<'tcx>>\n     where I: Iterator<Item = TransItem<'tcx>>\n {\n     // In the first step, we place all regular translation items into their\n     // respective 'home' codegen unit. Regular translation items are all\n     // functions and statics defined in the local crate.\n-    let initial_partitioning = place_root_translation_items(tcx, trans_items);\n+    let mut initial_partitioning = place_root_translation_items(tcx, trans_items);\n+\n+    if let PartitioningStrategy::FixedUnitCount(count) = strategy {\n+        merge_codegen_units(&mut initial_partitioning, count, &tcx.crate_name[..]);\n+    }\n \n     // In the next step, we use the inlining map to determine which addtional\n     // translation items have to go into each codegen unit. These additional\n@@ -217,6 +227,33 @@ fn place_root_translation_items<'tcx, I>(tcx: &TyCtxt<'tcx>,\n     }\n }\n \n+fn merge_codegen_units<'tcx>(initial_partitioning: &mut InitialPartitioning<'tcx>,\n+                             target_cgu_count: usize,\n+                             crate_name: &str) {\n+    if target_cgu_count >= initial_partitioning.codegen_units.len() {\n+        return;\n+    }\n+\n+    assert!(target_cgu_count >= 1);\n+    let codegen_units = &mut initial_partitioning.codegen_units;\n+\n+    // Merge the two smallest codegen units until the target size is reached\n+    while codegen_units.len() > target_cgu_count {\n+        // Sort small cgus to the back\n+        codegen_units.as_mut_slice().sort_by_key(|cgu| -(cgu.items.len() as i64));\n+        let smallest = codegen_units.pop().unwrap();\n+        let second_smallest = codegen_units.last_mut().unwrap();\n+\n+        for (k, v) in smallest.items.into_iter() {\n+            second_smallest.items.insert(k, v);\n+        }\n+    }\n+\n+    for (index, cgu) in codegen_units.iter_mut().enumerate() {\n+        cgu.name = token::intern_and_get_ident(&format!(\"{}.{}\", crate_name, index)[..]);\n+    }\n+}\n+\n fn place_inlined_translation_items<'tcx>(initial_partitioning: InitialPartitioning<'tcx>,\n                                          inlining_map: &InliningMap<'tcx>)\n                                          -> Vec<CodegenUnit<'tcx>> {"}, {"sha": "78a051de6c78d9e77b9e25ceea69dedee33019ad", "filename": "src/test/codegen-units/partitioning/extern-drop-glue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f04d35cc6ca34e94a0635bde76a401f7f4a65da/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fextern-drop-glue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f04d35cc6ca34e94a0635bde76a401f7f4a65da/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fextern-drop-glue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fextern-drop-glue.rs?ref=7f04d35cc6ca34e94a0635bde76a401f7f4a65da", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // ignore-tidy-linelength\n-// compile-flags:-Zprint-trans-items=lazy\n+// compile-flags:-Zprint-trans-items=lazy -Zincremental=\"\"\n \n #![allow(dead_code)]\n #![crate_type=\"lib\"]"}, {"sha": "c28dfb49de332344467f282fafd2bd3ed8843c9f", "filename": "src/test/codegen-units/partitioning/extern-generic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f04d35cc6ca34e94a0635bde76a401f7f4a65da/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fextern-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f04d35cc6ca34e94a0635bde76a401f7f4a65da/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fextern-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fextern-generic.rs?ref=7f04d35cc6ca34e94a0635bde76a401f7f4a65da", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // ignore-tidy-linelength\n-// compile-flags:-Zprint-trans-items=eager\n+// compile-flags:-Zprint-trans-items=eager -Zincremental=\"\"\n \n #![allow(dead_code)]\n #![crate_type=\"lib\"]"}, {"sha": "9071050da1147b848ac1a7972e7cecd1f8c5ceb0", "filename": "src/test/codegen-units/partitioning/inlining-from-extern-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f04d35cc6ca34e94a0635bde76a401f7f4a65da/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Finlining-from-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f04d35cc6ca34e94a0635bde76a401f7f4a65da/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Finlining-from-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Finlining-from-extern-crate.rs?ref=7f04d35cc6ca34e94a0635bde76a401f7f4a65da", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // ignore-tidy-linelength\n-// compile-flags:-Zprint-trans-items=lazy\n+// compile-flags:-Zprint-trans-items=lazy -Zincremental=\"\"\n \n #![crate_type=\"lib\"]\n "}, {"sha": "532eaef4659f7b4fd15fcd20ffc8ba1491b3ebf7", "filename": "src/test/codegen-units/partitioning/local-drop-glue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f04d35cc6ca34e94a0635bde76a401f7f4a65da/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-drop-glue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f04d35cc6ca34e94a0635bde76a401f7f4a65da/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-drop-glue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-drop-glue.rs?ref=7f04d35cc6ca34e94a0635bde76a401f7f4a65da", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // ignore-tidy-linelength\n-// compile-flags:-Zprint-trans-items=lazy\n+// compile-flags:-Zprint-trans-items=lazy -Zincremental=\"\"\n \n #![allow(dead_code)]\n #![crate_type=\"lib\"]"}, {"sha": "d2ccf36515c1b0cb2e81c25391364a91c17eb1ff", "filename": "src/test/codegen-units/partitioning/local-generic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f04d35cc6ca34e94a0635bde76a401f7f4a65da/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f04d35cc6ca34e94a0635bde76a401f7f4a65da/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-generic.rs?ref=7f04d35cc6ca34e94a0635bde76a401f7f4a65da", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // ignore-tidy-linelength\n-// compile-flags:-Zprint-trans-items=eager\n+// compile-flags:-Zprint-trans-items=eager -Zincremental=\"\"\n \n #![allow(dead_code)]\n #![crate_type=\"lib\"]"}, {"sha": "194e5763ac50b43f75ae0352d1df7342af759dbf", "filename": "src/test/codegen-units/partitioning/local-inlining.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f04d35cc6ca34e94a0635bde76a401f7f4a65da/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-inlining.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f04d35cc6ca34e94a0635bde76a401f7f4a65da/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-inlining.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-inlining.rs?ref=7f04d35cc6ca34e94a0635bde76a401f7f4a65da", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // ignore-tidy-linelength\n-// compile-flags:-Zprint-trans-items=lazy\n+// compile-flags:-Zprint-trans-items=lazy -Zincremental=\"\"\n \n #![allow(dead_code)]\n #![crate_type=\"lib\"]"}, {"sha": "7b1b7e8cb0a84a2d45062ac2a70e4a888393e634", "filename": "src/test/codegen-units/partitioning/local-transitive-inlining.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f04d35cc6ca34e94a0635bde76a401f7f4a65da/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-transitive-inlining.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f04d35cc6ca34e94a0635bde76a401f7f4a65da/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-transitive-inlining.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-transitive-inlining.rs?ref=7f04d35cc6ca34e94a0635bde76a401f7f4a65da", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // ignore-tidy-linelength\n-// compile-flags:-Zprint-trans-items=lazy\n+// compile-flags:-Zprint-trans-items=lazy -Zincremental=\"\"\n \n #![allow(dead_code)]\n #![crate_type=\"lib\"]"}, {"sha": "3697b83927bd70f7f1956f5ea59a6cc6137088d8", "filename": "src/test/codegen-units/partitioning/methods-are-with-self-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f04d35cc6ca34e94a0635bde76a401f7f4a65da/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fmethods-are-with-self-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f04d35cc6ca34e94a0635bde76a401f7f4a65da/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fmethods-are-with-self-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fmethods-are-with-self-type.rs?ref=7f04d35cc6ca34e94a0635bde76a401f7f4a65da", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // ignore-tidy-linelength\n-// compile-flags:-Zprint-trans-items=lazy\n+// compile-flags:-Zprint-trans-items=lazy -Zincremental=\"\"\n \n #![allow(dead_code)]\n "}, {"sha": "57f93d2b65bfdd635e60963ff0439f98ad2da7aa", "filename": "src/test/codegen-units/partitioning/regular-modules.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f04d35cc6ca34e94a0635bde76a401f7f4a65da/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fregular-modules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f04d35cc6ca34e94a0635bde76a401f7f4a65da/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fregular-modules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fregular-modules.rs?ref=7f04d35cc6ca34e94a0635bde76a401f7f4a65da", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // ignore-tidy-linelength\n-// compile-flags:-Zprint-trans-items=eager\n+// compile-flags:-Zprint-trans-items=eager -Z incremental=\"\"\n \n #![allow(dead_code)]\n #![crate_type=\"lib\"]"}, {"sha": "7e4c0a4ca6a0f4fa31d2ff6ed3e38c485657ac43", "filename": "src/test/codegen-units/partitioning/statics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f04d35cc6ca34e94a0635bde76a401f7f4a65da/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fstatics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f04d35cc6ca34e94a0635bde76a401f7f4a65da/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fstatics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fstatics.rs?ref=7f04d35cc6ca34e94a0635bde76a401f7f4a65da", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // ignore-tidy-linelength\n-// compile-flags:-Zprint-trans-items=lazy\n+// compile-flags:-Zprint-trans-items=lazy -Zincremental=\"\"\n \n #![crate_type=\"lib\"]\n "}]}