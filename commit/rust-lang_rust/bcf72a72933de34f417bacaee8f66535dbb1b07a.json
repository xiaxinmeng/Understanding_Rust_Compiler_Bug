{"sha": "bcf72a72933de34f417bacaee8f66535dbb1b07a", "node_id": "C_kwDOAAsO6NoAKGJjZjcyYTcyOTMzZGUzNGY0MTdiYWNhZWU4ZjY2NTM1ZGJiMWIwN2E", "commit": {"author": {"name": "Caleb Cartwright", "email": "caleb.cartwright@outlook.com", "date": "2022-01-15T00:18:37Z"}, "committer": {"name": "Caleb Cartwright", "email": "caleb.cartwright@outlook.com", "date": "2022-01-15T00:18:37Z"}, "message": "fix(rustfmt): resolve generated file formatting issue", "tree": {"sha": "34858a19a28b1b2e2c8dabf100abbc0fcff601cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34858a19a28b1b2e2c8dabf100abbc0fcff601cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bcf72a72933de34f417bacaee8f66535dbb1b07a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bcf72a72933de34f417bacaee8f66535dbb1b07a", "html_url": "https://github.com/rust-lang/rust/commit/bcf72a72933de34f417bacaee8f66535dbb1b07a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bcf72a72933de34f417bacaee8f66535dbb1b07a/comments", "author": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad46af24713115e7b9b258346e66b9b2d14eacfc", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad46af24713115e7b9b258346e66b9b2d14eacfc", "html_url": "https://github.com/rust-lang/rust/commit/ad46af24713115e7b9b258346e66b9b2d14eacfc"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "4476f2a449b1f815d56c56fb0ef1ba1c68d5d04c", "filename": "src/tools/rustfmt/Configurations.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bcf72a72933de34f417bacaee8f66535dbb1b07a/src%2Ftools%2Frustfmt%2FConfigurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/bcf72a72933de34f417bacaee8f66535dbb1b07a/src%2Ftools%2Frustfmt%2FConfigurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustfmt%2FConfigurations.md?ref=bcf72a72933de34f417bacaee8f66535dbb1b07a", "patch": "@@ -929,9 +929,9 @@ fn add_one(x: i32) -> i32 {\n ## `format_generated_files`\n \n Format generated files. A file is considered generated\n-if any of the first five lines contains `@generated` marker.\n+if any of the first five lines contain a `@generated` comment marker.\n \n-- **Default value**: `false`\n+- **Default value**: `true`\n - **Possible values**: `true`, `false`\n - **Stable**: No (tracking issue: [#5080](https://github.com/rust-lang/rustfmt/issues/5080))\n "}, {"sha": "cd90e0904b6cd540d82c95548e614a6dc02847b5", "filename": "src/tools/rustfmt/src/config/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bcf72a72933de34f417bacaee8f66535dbb1b07a/src%2Ftools%2Frustfmt%2Fsrc%2Fconfig%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcf72a72933de34f417bacaee8f66535dbb1b07a/src%2Ftools%2Frustfmt%2Fsrc%2Fconfig%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustfmt%2Fsrc%2Fconfig%2Fmod.rs?ref=bcf72a72933de34f417bacaee8f66535dbb1b07a", "patch": "@@ -138,7 +138,7 @@ create_config! {\n     inline_attribute_width: usize, 0, false,\n         \"Write an item and its attribute on the same line \\\n         if their combined width is below a threshold\";\n-    format_generated_files: bool, false, false, \"Format generated files\";\n+    format_generated_files: bool, true, false, \"Format generated files\";\n \n     // Options that can change the source code beyond whitespace/blocks (somewhat linty things)\n     merge_derives: bool, true, true, \"Merge multiple `#[derive(...)]` into a single one\";\n@@ -606,7 +606,7 @@ blank_lines_lower_bound = 0\n edition = \"2015\"\n version = \"One\"\n inline_attribute_width = 0\n-format_generated_files = false\n+format_generated_files = true\n merge_derives = true\n use_try_shorthand = false\n use_field_init_shorthand = false"}, {"sha": "ca93955a549dd4069f0f68ba6e1a5d41ebb28648", "filename": "src/tools/rustfmt/src/formatting.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bcf72a72933de34f417bacaee8f66535dbb1b07a/src%2Ftools%2Frustfmt%2Fsrc%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcf72a72933de34f417bacaee8f66535dbb1b07a/src%2Ftools%2Frustfmt%2Fsrc%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustfmt%2Fsrc%2Fformatting.rs?ref=bcf72a72933de34f417bacaee8f66535dbb1b07a", "patch": "@@ -80,7 +80,9 @@ fn should_skip_module<T: FormatHandler>(\n         return true;\n     }\n \n-    if !config.format_generated_files() {\n+    // FIXME(calebcartwright) - we need to determine how we'll handle the\n+    // `format_generated_files` option with stdin based input.\n+    if !input_is_stdin && !config.format_generated_files() {\n         let source_file = context.parse_session.span_to_file_contents(module.span);\n         let src = source_file.src.as_ref().expect(\"SourceFile without src\");\n "}, {"sha": "c50d18644b0910e3d3e968f6db904e3626da27fa", "filename": "src/tools/rustfmt/src/test/mod.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/bcf72a72933de34f417bacaee8f66535dbb1b07a/src%2Ftools%2Frustfmt%2Fsrc%2Ftest%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcf72a72933de34f417bacaee8f66535dbb1b07a/src%2Ftools%2Frustfmt%2Fsrc%2Ftest%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustfmt%2Fsrc%2Ftest%2Fmod.rs?ref=bcf72a72933de34f417bacaee8f66535dbb1b07a", "patch": "@@ -487,6 +487,24 @@ fn stdin_disable_all_formatting_test() {\n     assert_eq!(input, String::from_utf8(output.stdout).unwrap());\n }\n \n+#[test]\n+fn stdin_generated_files_issue_5172() {\n+    init_log();\n+    let input = Input::Text(\"//@generated\\nfn   main() {}\".to_owned());\n+    let mut config = Config::default();\n+    config.set().emit_mode(EmitMode::Stdout);\n+    config.set().format_generated_files(false);\n+    config.set().newline_style(NewlineStyle::Unix);\n+    let mut buf: Vec<u8> = vec![];\n+    {\n+        let mut session = Session::new(config, Some(&mut buf));\n+        session.format(input).unwrap();\n+        assert!(session.has_no_errors());\n+    }\n+    // N.B. this should be changed once `format_generated_files` is supported with stdin\n+    assert_eq!(buf, \"stdin:\\n\\n//@generated\\nfn main() {}\\n\".as_bytes());\n+}\n+\n #[test]\n fn format_lines_errors_are_reported() {\n     init_log();"}]}