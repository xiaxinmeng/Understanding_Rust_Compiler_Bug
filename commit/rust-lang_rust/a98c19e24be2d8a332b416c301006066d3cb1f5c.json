{"sha": "a98c19e24be2d8a332b416c301006066d3cb1f5c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5OGMxOWUyNGJlMmQ4YTMzMmI0MTZjMzAxMDA2MDY2ZDNjYjFmNWM=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-07-24T01:49:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-07-24T01:49:50Z"}, "message": "Rollup merge of #52548 - tko:cursor-doc, r=sfackler\n\nCursor: update docs to clarify Cursor only works with in-memory buffers\n\nReduce misconceptions about Cursor being more general than it really is.\n\nFixes: #52470", "tree": {"sha": "0b56c3a96459bba3e7cc9b71a050f008581b2d4c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b56c3a96459bba3e7cc9b71a050f008581b2d4c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a98c19e24be2d8a332b416c301006066d3cb1f5c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbVoW/CRBK7hj4Ov3rIwAAdHIIAKDJ5onvltieQU98my/JyzCy\nyxSkKcVXilPT9oadDmKuBemmvCg3X15g0xqdlVjcYvrTg/A8UCQRvMUJY4zk7WfS\ndiBoMwg98alti+ZjUH5JA27R+0Flf/K2xk7s5cq/qoRpcygdbiQqytlOArwlNtvY\n8/Xb7oP+V8be+EMvG1PWkAjrbUPSbZaNrmx+sZCwt7/sNAiJqExmtZjSwsDzgOPz\ntmu/4QSkLl9342Xh8Os+qS2un7To8LTud3Opqg4LzxYNgiQ7T2eNjXpMwbF3g3f2\npaFOp0Y1LRMuBaNrkH/jRksKtWueiDZUjh8/lUsBokuAnWeyqM7vM9kzwhMtCGU=\n=ToGC\n-----END PGP SIGNATURE-----\n", "payload": "tree 0b56c3a96459bba3e7cc9b71a050f008581b2d4c\nparent cf995d654e215fa06b65f22688aecdff09d5d245\nparent 8b80c9f5a142821ab49c78dd7f86b63a2c839fb8\nauthor kennytm <kennytm@gmail.com> 1532396990 +0800\ncommitter GitHub <noreply@github.com> 1532396990 +0800\n\nRollup merge of #52548 - tko:cursor-doc, r=sfackler\n\nCursor: update docs to clarify Cursor only works with in-memory buffers\n\nReduce misconceptions about Cursor being more general than it really is.\n\nFixes: #52470\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a98c19e24be2d8a332b416c301006066d3cb1f5c", "html_url": "https://github.com/rust-lang/rust/commit/a98c19e24be2d8a332b416c301006066d3cb1f5c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a98c19e24be2d8a332b416c301006066d3cb1f5c/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf995d654e215fa06b65f22688aecdff09d5d245", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf995d654e215fa06b65f22688aecdff09d5d245", "html_url": "https://github.com/rust-lang/rust/commit/cf995d654e215fa06b65f22688aecdff09d5d245"}, {"sha": "8b80c9f5a142821ab49c78dd7f86b63a2c839fb8", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b80c9f5a142821ab49c78dd7f86b63a2c839fb8", "html_url": "https://github.com/rust-lang/rust/commit/8b80c9f5a142821ab49c78dd7f86b63a2c839fb8"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "3622df16b9d0bd46020d49e97dabdb40d6214f0e", "filename": "src/libstd/io/cursor.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a98c19e24be2d8a332b416c301006066d3cb1f5c/src%2Flibstd%2Fio%2Fcursor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a98c19e24be2d8a332b416c301006066d3cb1f5c/src%2Flibstd%2Fio%2Fcursor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fcursor.rs?ref=a98c19e24be2d8a332b416c301006066d3cb1f5c", "patch": "@@ -14,12 +14,13 @@ use core::convert::TryInto;\n use cmp;\n use io::{self, Initializer, SeekFrom, Error, ErrorKind};\n \n-/// A `Cursor` wraps another type and provides it with a\n+/// A `Cursor` wraps an in-memory buffer and provides it with a\n /// [`Seek`] implementation.\n ///\n-/// `Cursor`s are typically used with in-memory buffers to allow them to\n-/// implement [`Read`] and/or [`Write`], allowing these buffers to be used\n-/// anywhere you might use a reader or writer that does actual I/O.\n+/// `Cursor`s are used with in-memory buffers, anything implementing\n+/// `AsRef<[u8]>`, to allow them to implement [`Read`] and/or [`Write`],\n+/// allowing these buffers to be used anywhere you might use a reader or writer\n+/// that does actual I/O.\n ///\n /// The standard library implements some I/O traits on various types which\n /// are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and\n@@ -87,11 +88,11 @@ pub struct Cursor<T> {\n }\n \n impl<T> Cursor<T> {\n-    /// Creates a new cursor wrapping the provided underlying I/O object.\n+    /// Creates a new cursor wrapping the provided underlying in-memory buffer.\n     ///\n-    /// Cursor initial position is `0` even if underlying object (e.\n-    /// g. `Vec`) is not empty. So writing to cursor starts with\n-    /// overwriting `Vec` content, not with appending to it.\n+    /// Cursor initial position is `0` even if underlying buffer (e.g. `Vec`)\n+    /// is not empty. So writing to cursor starts with overwriting `Vec`\n+    /// content, not with appending to it.\n     ///\n     /// # Examples\n     ///"}]}