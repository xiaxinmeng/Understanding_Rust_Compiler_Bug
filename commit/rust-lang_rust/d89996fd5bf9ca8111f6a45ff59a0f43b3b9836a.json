{"sha": "d89996fd5bf9ca8111f6a45ff59a0f43b3b9836a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4OTk5NmZkNWJmOWNhODExMWY2YTQ1ZmY1OWEwZjQzYjNiOTgzNmE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-10T12:52:04Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-10T12:52:04Z"}, "message": "Build correct SourceAnalyzer for traits", "tree": {"sha": "7bf37b1a6259cd73e9a69458d93ca35b8c18ac6e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7bf37b1a6259cd73e9a69458d93ca35b8c18ac6e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d89996fd5bf9ca8111f6a45ff59a0f43b3b9836a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d89996fd5bf9ca8111f6a45ff59a0f43b3b9836a", "html_url": "https://github.com/rust-lang/rust/commit/d89996fd5bf9ca8111f6a45ff59a0f43b3b9836a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d89996fd5bf9ca8111f6a45ff59a0f43b3b9836a/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "baae1b3d0049e804e76d39cde82ebec0ef0599bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/baae1b3d0049e804e76d39cde82ebec0ef0599bb", "html_url": "https://github.com/rust-lang/rust/commit/baae1b3d0049e804e76d39cde82ebec0ef0599bb"}], "stats": {"total": 18, "additions": 4, "deletions": 14}, "files": [{"sha": "d3cc5c423e0646efa2af87cde6c3de22c4539abf", "filename": "crates/ra_hir/src/source_binder.rs", "status": "modified", "additions": 4, "deletions": 14, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d89996fd5bf9ca8111f6a45ff59a0f43b3b9836a/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d89996fd5bf9ca8111f6a45ff59a0f43b3b9836a/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs?ref=d89996fd5bf9ca8111f6a45ff59a0f43b3b9836a", "patch": "@@ -62,6 +62,10 @@ fn try_get_resolver_for_node(db: &impl HirDatabase, node: InFile<&SyntaxNode>) -\n                 let src = node.with_value(it);\n                 Some(ImplBlock::from_source(db, src)?.id.resolver(db))\n             },\n+            ast::TraitDef(it) => {\n+                let src = node.with_value(it);\n+                Some(Trait::from_source(db, src)?.id.resolver(db))\n+            },\n             _ => match node.value.kind() {\n                 FN_DEF | CONST_DEF | STATIC_DEF => {\n                     let def = def_with_body_from_child_node(db, node)?;\n@@ -411,20 +415,6 @@ impl SourceAnalyzer {\n         )\n     }\n \n-    // pub fn autoderef<'a>(\n-    //     &'a self,\n-    //     db: &'a impl HirDatabase,\n-    //     ty: Ty,\n-    // ) -> impl Iterator<Item = Ty> + 'a {\n-    //     // There should be no inference vars in types passed here\n-    //     // FIXME check that?\n-    //     let canonical = Canonical { value: ty, num_vars: 0 };\n-    //     let krate = self.resolver.krate();\n-    //     let environment = TraitEnvironment::lower(db, &self.resolver);\n-    //     let ty = crate::ty::InEnvironment { value: canonical, environment };\n-    //     crate::ty::autoderef(db, krate, ty).map(|canonical| canonical.value)\n-    // }\n-\n     /// Checks that particular type `ty` implements `std::future::Future`.\n     /// This function is used in `.await` syntax completion.\n     pub fn impls_future(&self, db: &impl HirDatabase, ty: Type) -> bool {"}]}