{"sha": "ea08d3a47cee34f9943a2ca850ac7b3435fb499e", "node_id": "C_kwDOAAsO6NoAKGVhMDhkM2E0N2NlZTM0Zjk5NDNhMmNhODUwYWM3YjM0MzVmYjQ5OWU", "commit": {"author": {"name": "Boxy", "email": "supbscripter@gmail.com", "date": "2023-03-17T13:37:47Z"}, "committer": {"name": "Boxy", "email": "supbscripter@gmail.com", "date": "2023-03-17T13:37:47Z"}, "message": "add assert", "tree": {"sha": "f97ea1fa6ca461fd42a1b217370a93553a7012a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f97ea1fa6ca461fd42a1b217370a93553a7012a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea08d3a47cee34f9943a2ca850ac7b3435fb499e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea08d3a47cee34f9943a2ca850ac7b3435fb499e", "html_url": "https://github.com/rust-lang/rust/commit/ea08d3a47cee34f9943a2ca850ac7b3435fb499e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea08d3a47cee34f9943a2ca850ac7b3435fb499e/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee31e5fc57499cd7a97b7e0564425324b0186688", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee31e5fc57499cd7a97b7e0564425324b0186688", "html_url": "https://github.com/rust-lang/rust/commit/ee31e5fc57499cd7a97b7e0564425324b0186688"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "ba68ff1c2e3391869e0a3d1475d22b2a9e9c9d13", "filename": "compiler/rustc_trait_selection/src/solve/mod.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ea08d3a47cee34f9943a2ca850ac7b3435fb499e/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea08d3a47cee34f9943a2ca850ac7b3435fb499e/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fmod.rs?ref=ea08d3a47cee34f9943a2ca850ac7b3435fb499e", "patch": "@@ -78,15 +78,22 @@ impl<'tcx> InferCtxtEvalExt<'tcx> for InferCtxt<'tcx> {\n     ) -> Result<(bool, Certainty), NoSolution> {\n         let mut search_graph = search_graph::SearchGraph::new(self.tcx);\n \n-        let result = EvalCtxt {\n+        let mut ecx = EvalCtxt {\n             search_graph: &mut search_graph,\n             infcx: self,\n             // Only relevant when canonicalizing the response.\n             max_input_universe: ty::UniverseIndex::ROOT,\n             var_values: CanonicalVarValues::dummy(),\n             nested_goals: NestedGoals::new(),\n+        };\n+        let result = ecx.evaluate_goal(IsNormalizesToHack::No, goal);\n+\n+        if let Ok((_, Certainty::Yes)) = result {\n+            assert!(\n+                ecx.nested_goals.is_empty(),\n+                \"Cannot be certain of query response if unevaluated goals exist\"\n+            );\n         }\n-        .evaluate_goal(IsNormalizesToHack::No, goal);\n \n         assert!(search_graph.is_empty());\n         result"}]}