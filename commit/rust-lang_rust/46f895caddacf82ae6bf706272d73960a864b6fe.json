{"sha": "46f895caddacf82ae6bf706272d73960a864b6fe", "node_id": "C_kwDOAAsO6NoAKDQ2Zjg5NWNhZGRhY2Y4MmFlNmJmNzA2MjcyZDczOTYwYTg2NGI2ZmU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-15T22:41:23Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-15T22:48:01Z"}, "message": "simplify some refs", "tree": {"sha": "34b5497710029a99f16046207f61aa07e2f9997a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34b5497710029a99f16046207f61aa07e2f9997a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46f895caddacf82ae6bf706272d73960a864b6fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46f895caddacf82ae6bf706272d73960a864b6fe", "html_url": "https://github.com/rust-lang/rust/commit/46f895caddacf82ae6bf706272d73960a864b6fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46f895caddacf82ae6bf706272d73960a864b6fe/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d14db321b043ffc579a7461464c88d7e3f54f83", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d14db321b043ffc579a7461464c88d7e3f54f83", "html_url": "https://github.com/rust-lang/rust/commit/2d14db321b043ffc579a7461464c88d7e3f54f83"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "c9aa0ec66d5614d233d6bb89aae76d60bb7a9ff5", "filename": "compiler/rustc_middle/src/ty/flags.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46f895caddacf82ae6bf706272d73960a864b6fe/compiler%2Frustc_middle%2Fsrc%2Fty%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f895caddacf82ae6bf706272d73960a864b6fe/compiler%2Frustc_middle%2Fsrc%2Fty%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fflags.rs?ref=46f895caddacf82ae6bf706272d73960a864b6fe", "patch": "@@ -125,7 +125,7 @@ impl FlagComputation {\n                 self.bound_computation(ts, |flags, ts| flags.add_tys(ts));\n             }\n \n-            &ty::GeneratorWitnessMIR(_, ref substs) => {\n+            ty::GeneratorWitnessMIR(_, substs) => {\n                 let should_remove_further_specializable =\n                     !self.flags.contains(TypeFlags::STILL_FURTHER_SPECIALIZABLE);\n                 self.add_substs(substs);"}, {"sha": "e080726d91d589bb2ca323c9e2f16158ee96146d", "filename": "compiler/rustc_type_ir/src/sty.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/46f895caddacf82ae6bf706272d73960a864b6fe/compiler%2Frustc_type_ir%2Fsrc%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f895caddacf82ae6bf706272d73960a864b6fe/compiler%2Frustc_type_ir%2Fsrc%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_type_ir%2Fsrc%2Fsty.rs?ref=46f895caddacf82ae6bf706272d73960a864b6fe", "patch": "@@ -336,7 +336,7 @@ impl<I: Interner> PartialEq for TyKind<I> {\n                 a_d == b_d && a_s == b_s && a_m == b_m\n             }\n             (GeneratorWitness(a_g), GeneratorWitness(b_g)) => a_g == b_g,\n-            (&GeneratorWitnessMIR(ref a_d, ref a_s), &GeneratorWitnessMIR(ref b_d, ref b_s)) => {\n+            (GeneratorWitnessMIR(a_d, a_s), GeneratorWitnessMIR(b_d, b_s)) => {\n                 a_d == b_d && a_s == b_s\n             }\n             (Tuple(a_t), Tuple(b_t)) => a_t == b_t,\n@@ -397,8 +397,8 @@ impl<I: Interner> Ord for TyKind<I> {\n                 }\n                 (GeneratorWitness(a_g), GeneratorWitness(b_g)) => a_g.cmp(b_g),\n                 (\n-                    &GeneratorWitnessMIR(ref a_d, ref a_s),\n-                    &GeneratorWitnessMIR(ref b_d, ref b_s),\n+                    GeneratorWitnessMIR(a_d, a_s),\n+                    GeneratorWitnessMIR(b_d, b_s),\n                 ) => match Ord::cmp(a_d, b_d) {\n                     Ordering::Equal => Ord::cmp(a_s, b_s),\n                     cmp => cmp,"}]}