{"sha": "3b0a02a26b6db7a2f997cd32ca352e141ec795eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiMGEwMmEyNmI2ZGI3YTJmOTk3Y2QzMmNhMzUyZTE0MWVjNzk1ZWI=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-03-08T12:13:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-08T12:13:27Z"}, "message": "Rollup merge of #82862 - athre0z:generalize-vec-write-impl, r=TimDiekmann\n\nGeneralize Write impl for Vec<u8> to Vec<u8, A>\n\nAs discussed in the [issue tracker for the wg-allocators working group][1], updating this impl for allocator support was most likely just forgotten previously. This PR fixes this.\n\nr? `````@TimDiekmann`````\n\n[1]: https://github.com/rust-lang/wg-allocators/issues/86", "tree": {"sha": "b1a0c24c050d42a7787066bb0a5fa432a440325a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1a0c24c050d42a7787066bb0a5fa432a440325a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b0a02a26b6db7a2f997cd32ca352e141ec795eb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgRhTnCRBK7hj4Ov3rIwAAdHIIAKoJJAzLHaaC2xBqfDkPLxOO\nJ9NPBw8aJPVSUxGsjB/dCphkvI4RBLIDAGzW2FDmT/5tyjsAPRxUlFrK0YpJWsei\nXoicwH6JD4LI5HvRTRSwy5k4/ygLMITSEcHS5eyOtW40CH32Hyc7dHStrtlTjnYT\nDZMU0YztRxrfu+NDKNxOADND+yCdWhC78DUvsq+ByxkVXjnpiFUb6JVrpzGElJsx\nRfDIh2zdD8XzPCHcB3wQkisiQzdihhSt9nqkj/OxucMZ5DT4OlhLcENu057DPqEH\nN20oSDPKaU15l1h/NuEPEWuj42Bz1/v+beeyw2OBkdxC0OxlosU1Wp91eR7jS/g=\n=X4P2\n-----END PGP SIGNATURE-----\n", "payload": "tree b1a0c24c050d42a7787066bb0a5fa432a440325a\nparent 08475e7873375dadc58293449c14f0154cf7f880\nparent ab8995bbca73be761402585ead491111163c44d6\nauthor Dylan DPC <dylan.dpc@gmail.com> 1615205607 +0100\ncommitter GitHub <noreply@github.com> 1615205607 +0100\n\nRollup merge of #82862 - athre0z:generalize-vec-write-impl, r=TimDiekmann\n\nGeneralize Write impl for Vec<u8> to Vec<u8, A>\n\nAs discussed in the [issue tracker for the wg-allocators working group][1], updating this impl for allocator support was most likely just forgotten previously. This PR fixes this.\n\nr? `````@TimDiekmann`````\n\n[1]: https://github.com/rust-lang/wg-allocators/issues/86\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b0a02a26b6db7a2f997cd32ca352e141ec795eb", "html_url": "https://github.com/rust-lang/rust/commit/3b0a02a26b6db7a2f997cd32ca352e141ec795eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b0a02a26b6db7a2f997cd32ca352e141ec795eb/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08475e7873375dadc58293449c14f0154cf7f880", "url": "https://api.github.com/repos/rust-lang/rust/commits/08475e7873375dadc58293449c14f0154cf7f880", "html_url": "https://github.com/rust-lang/rust/commit/08475e7873375dadc58293449c14f0154cf7f880"}, {"sha": "ab8995bbca73be761402585ead491111163c44d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab8995bbca73be761402585ead491111163c44d6", "html_url": "https://github.com/rust-lang/rust/commit/ab8995bbca73be761402585ead491111163c44d6"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "9870cfc4c95c361a24d8f3d0e700b6c9fa42a670", "filename": "library/std/src/io/impls.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3b0a02a26b6db7a2f997cd32ca352e141ec795eb/library%2Fstd%2Fsrc%2Fio%2Fimpls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b0a02a26b6db7a2f997cd32ca352e141ec795eb/library%2Fstd%2Fsrc%2Fio%2Fimpls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fimpls.rs?ref=3b0a02a26b6db7a2f997cd32ca352e141ec795eb", "patch": "@@ -1,6 +1,7 @@\n #[cfg(test)]\n mod tests;\n \n+use crate::alloc::Allocator;\n use crate::cmp;\n use crate::fmt;\n use crate::io::{\n@@ -357,7 +358,7 @@ impl Write for &mut [u8] {\n /// Write is implemented for `Vec<u8>` by appending to the vector.\n /// The vector will grow as needed.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl Write for Vec<u8> {\n+impl<A: Allocator> Write for Vec<u8, A> {\n     #[inline]\n     fn write(&mut self, buf: &[u8]) -> io::Result<usize> {\n         self.extend_from_slice(buf);"}]}