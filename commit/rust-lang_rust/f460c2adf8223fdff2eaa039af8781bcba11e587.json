{"sha": "f460c2adf8223fdff2eaa039af8781bcba11e587", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0NjBjMmFkZjgyMjNmZGZmMmVhYTAzOWFmODc4MWJjYmExMWU1ODc=", "commit": {"author": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-02-25T04:44:01Z"}, "committer": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-02-27T01:23:30Z"}, "message": "Move levenshtein distance fn to core::str.", "tree": {"sha": "80056dfd5f41381e46475eea5e7efb937406112a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80056dfd5f41381e46475eea5e7efb937406112a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f460c2adf8223fdff2eaa039af8781bcba11e587", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f460c2adf8223fdff2eaa039af8781bcba11e587", "html_url": "https://github.com/rust-lang/rust/commit/f460c2adf8223fdff2eaa039af8781bcba11e587", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f460c2adf8223fdff2eaa039af8781bcba11e587/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a0fcdb018ebee4aa8acb138418ff53c37ce5051", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a0fcdb018ebee4aa8acb138418ff53c37ce5051", "html_url": "https://github.com/rust-lang/rust/commit/0a0fcdb018ebee4aa8acb138418ff53c37ce5051"}], "stats": {"total": 70, "additions": 35, "deletions": 35}, "files": [{"sha": "92e980e34d08ffedea5cddfdddd936aa2f1b3165", "filename": "src/libcore/str.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/f460c2adf8223fdff2eaa039af8781bcba11e587/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f460c2adf8223fdff2eaa039af8781bcba11e587/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=f460c2adf8223fdff2eaa039af8781bcba11e587", "patch": "@@ -590,6 +590,40 @@ pub pure fn split_str_nonempty(s: &a/str, sep: &b/str) -> ~[~str] {\n     result\n }\n \n+/// Levenshtein Distance between two strings\n+pub fn levdistance(s: &str, t: &str) -> uint {\n+\n+    let slen = str::len(s);\n+    let tlen = str::len(t);\n+\n+    if slen == 0 { return tlen; }\n+    if tlen == 0 { return slen; }\n+\n+    let mut dcol = vec::from_fn(tlen + 1, |x| x);\n+\n+    for str::each_chari(s) |i, sc| {\n+\n+        let mut current = i;\n+        dcol[0] = current + 1;\n+\n+        for str::each_chari(t) |j, tc| {\n+\n+            let mut next = dcol[j + 1];\n+\n+            if sc == tc {\n+                dcol[j + 1] = current;\n+            } else {\n+                dcol[j + 1] = ::cmp::min(current, next);\n+                dcol[j + 1] = ::cmp::min(dcol[j + 1], dcol[j]) + 1;\n+            }\n+\n+            current = next;\n+        }\n+    }\n+\n+    return dcol[tlen];\n+}\n+\n /**\n  * Splits a string into a vector of the substrings separated by LF ('\\n')\n  */"}, {"sha": "3f1e4dca3a19ac744a466c3b9bab490cff52b1ad", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 1, "deletions": 35, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/f460c2adf8223fdff2eaa039af8781bcba11e587/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f460c2adf8223fdff2eaa039af8781bcba11e587/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=f460c2adf8223fdff2eaa039af8781bcba11e587", "patch": "@@ -4830,44 +4830,10 @@ pub impl Resolver {\n             }\n         }\n \n-        // Levenshtein Distance between two strings\n-        fn distance(s: &str, t: &str) -> uint {\n-\n-            let slen = str::len(s);\n-            let tlen = str::len(t);\n-\n-            if slen == 0 { return tlen; }\n-            if tlen == 0 { return slen; }\n-\n-            let mut dcol = vec::from_fn(tlen + 1, |x| x);\n-\n-            for str::each_chari(s) |i, sc| {\n-\n-                let mut current = i;\n-                dcol[0] = current + 1;\n-\n-                for str::each_chari(t) |j, tc| {\n-\n-                    let mut next = dcol[j + 1];\n-\n-                    if sc == tc {\n-                        dcol[j + 1] = current;\n-                    } else {\n-                        dcol[j + 1] = cmp::min(current, next);\n-                        dcol[j + 1] = cmp::min(dcol[j + 1], dcol[j]) + 1;\n-                    }\n-\n-                    current = next;\n-                }\n-            }\n-\n-            return dcol[tlen];\n-        }\n-\n         let mut smallest = 0;\n         for vec::eachi(maybes) |i, &other| {\n \n-            values[i] = distance(name, other);\n+            values[i] = str::levdistance(name, other);\n \n             if values[i] <= values[smallest] {\n                 smallest = i;"}]}