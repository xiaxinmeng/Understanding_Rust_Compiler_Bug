{"sha": "9e020b8b8f0f40ae905f44320009d6d067a60510", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllMDIwYjhiOGYwZjQwYWU5MDVmNDQzMjAwMDlkNmQwNjdhNjA1MTA=", "commit": {"author": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-08-17T22:07:19Z"}, "committer": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-08-17T22:07:19Z"}, "message": "Convenience methods for spawning and joining tasks.", "tree": {"sha": "68580a92a72a7dfa0b0c6effcbc7146d30cd3a2d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68580a92a72a7dfa0b0c6effcbc7146d30cd3a2d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e020b8b8f0f40ae905f44320009d6d067a60510", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e020b8b8f0f40ae905f44320009d6d067a60510", "html_url": "https://github.com/rust-lang/rust/commit/9e020b8b8f0f40ae905f44320009d6d067a60510", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e020b8b8f0f40ae905f44320009d6d067a60510/comments", "author": null, "committer": null, "parents": [{"sha": "ae89ea223de2fe5e9c9a5cdd2fa85a93828a7daa", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae89ea223de2fe5e9c9a5cdd2fa85a93828a7daa", "html_url": "https://github.com/rust-lang/rust/commit/ae89ea223de2fe5e9c9a5cdd2fa85a93828a7daa"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "4ad160df6037e8ca8cc7249b26094f056b0ec35e", "filename": "src/lib/task.rs", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/9e020b8b8f0f40ae905f44320009d6d067a60510/src%2Flib%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e020b8b8f0f40ae905f44320009d6d067a60510/src%2Flib%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Ftask.rs?ref=9e020b8b8f0f40ae905f44320009d6d067a60510", "patch": "@@ -73,8 +73,17 @@ tag task_notification {\n     exit(task, task_result);\n }\n \n-fn join(t: task) -> task_result {\n-    join_id(cast(t))\n+fn join(task_port : (task_id, comm::port<task_notification>))\n+    -> task_result {\n+    let (id, port) = task_port;\n+    while true {\n+        alt comm::recv::<task_notification>(port) {\n+          exit(_id, res) {\n+            if _id == id { ret res }\n+          }\n+        }\n+    }\n+    fail\n }\n \n fn join_id(t : task_id) -> task_result {\n@@ -104,6 +113,12 @@ fn spawn_notify(thunk : -fn() -> (), notify : _chan<task_notification>)\n     spawn_inner(thunk, some(notify))\n }\n \n+fn spawn_joinable(thunk : -fn()) -> (task_id, comm::port<task_notification>) {\n+    let p = comm::port::<task_notification>();\n+    let id = spawn_notify(thunk, comm::chan::<task_notification>(p));\n+    ret (id, p);\n+}\n+\n // FIXME: make this a fn~ once those are supported.\n fn spawn_inner(thunk : -fn() -> (),\n                notify : option<_chan<task_notification>>)"}, {"sha": "517210b9c56d291c4fed878841366b91cf09e0d8", "filename": "src/test/stdtest/task.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9e020b8b8f0f40ae905f44320009d6d067a60510/src%2Ftest%2Fstdtest%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e020b8b8f0f40ae905f44320009d6d067a60510/src%2Ftest%2Fstdtest%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Ftask.rs?ref=9e020b8b8f0f40ae905f44320009d6d067a60510", "patch": "@@ -72,3 +72,11 @@ fn test_join_chan_fail() {\n       _ { fail \"invalid task status received\" }\n     }\n }\n+\n+#[test]\n+fn test_join_convenient() {\n+    fn winner() { }\n+    let f = winner;\n+    let handle = task::spawn_joinable(f);\n+    assert(task::tr_success == task::join(handle));\n+}"}]}