{"sha": "c77f0a42d3de096aa0ebac4aa73449864f3afdfb", "node_id": "C_kwDOAAsO6NoAKGM3N2YwYTQyZDNkZTA5NmFhMGViYWM0YWE3MzQ0OTg2NGYzYWZkZmI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-02-04T13:58:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-04T13:58:59Z"}, "message": "Rollup merge of #93508 - CraftSpider:jsondocck-runtest-output, r=Mark-Simulacrum\n\nAdd rustdoc info to jsondocck output\n\nMakes debugging issues in the generated output simpler by handling emitted logs and etc.", "tree": {"sha": "c523587b4bb2f44d738cd88ba67edf05fce9f717", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c523587b4bb2f44d738cd88ba67edf05fce9f717"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c77f0a42d3de096aa0ebac4aa73449864f3afdfb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh/TEjCRBK7hj4Ov3rIwAAtHwIADxvOM7zmUi49nZKlENbPTeu\nZ6Ufzv1sXg/SDwvXf0FM9/YNprXdsiA/qvyJ82hmquSOtP/d58TM/S6EOuZzSYSO\nMWAZ1++yYGKNKsxBjv5LToL63chqYIZ0h+3IOFwQONP/+tUW7Wz41AsZxg6LsGS8\n+ZVJfM0Zw8f5wSdMxV8llJQiNH5EveL5jJydtQx+TIyWdNKFO6Bdx0gRdkC7WCqq\n7CbwlFxijo0Gce1pwhsrdZp0+UR+YR+4mHF1b6RLTQCB6mlinMqFdEQGgNluVhyK\ncVHLrqJy6SbWmXgzDESYx5nofCvWoxcpTgc10O0LiBYPAF2shPeV3Vn2yP6Ud1Y=\n=/YSM\n-----END PGP SIGNATURE-----\n", "payload": "tree c523587b4bb2f44d738cd88ba67edf05fce9f717\nparent f7e0f9763128603d2249d3cb1c41a23f261d6e1e\nparent 71249a9ef7a47226bbfc6d652bfb731124822c68\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1643983139 +0100\ncommitter GitHub <noreply@github.com> 1643983139 +0100\n\nRollup merge of #93508 - CraftSpider:jsondocck-runtest-output, r=Mark-Simulacrum\n\nAdd rustdoc info to jsondocck output\n\nMakes debugging issues in the generated output simpler by handling emitted logs and etc.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c77f0a42d3de096aa0ebac4aa73449864f3afdfb", "html_url": "https://github.com/rust-lang/rust/commit/c77f0a42d3de096aa0ebac4aa73449864f3afdfb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c77f0a42d3de096aa0ebac4aa73449864f3afdfb/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7e0f9763128603d2249d3cb1c41a23f261d6e1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7e0f9763128603d2249d3cb1c41a23f261d6e1e", "html_url": "https://github.com/rust-lang/rust/commit/f7e0f9763128603d2249d3cb1c41a23f261d6e1e"}, {"sha": "71249a9ef7a47226bbfc6d652bfb731124822c68", "url": "https://api.github.com/repos/rust-lang/rust/commits/71249a9ef7a47226bbfc6d652bfb731124822c68", "html_url": "https://github.com/rust-lang/rust/commit/71249a9ef7a47226bbfc6d652bfb731124822c68"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "f6ddac3a65e06f74887c67d9b7f29dab79bb5075", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c77f0a42d3de096aa0ebac4aa73449864f3afdfb/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77f0a42d3de096aa0ebac4aa73449864f3afdfb/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=c77f0a42d3de096aa0ebac4aa73449864f3afdfb", "patch": "@@ -2424,7 +2424,10 @@ impl<'test> TestCx<'test> {\n         );\n \n         if !res.status.success() {\n-            self.fatal_proc_rec(\"jsondocck failed!\", &res)\n+            self.fatal_proc_rec_with_ctx(\"jsondocck failed!\", &res, |_| {\n+                println!(\"Rustdoc Output:\");\n+                proc_res.print_info();\n+            })\n         }\n \n         let mut json_out = out_dir.join(self.testpaths.file.file_stem().unwrap());\n@@ -3738,10 +3741,7 @@ pub struct ProcRes {\n }\n \n impl ProcRes {\n-    pub fn fatal(&self, err: Option<&str>, on_failure: impl FnOnce()) -> ! {\n-        if let Some(e) = err {\n-            println!(\"\\nerror: {}\", e);\n-        }\n+    pub fn print_info(&self) {\n         print!(\n             \"\\\n              status: {}\\n\\\n@@ -3760,6 +3760,13 @@ impl ProcRes {\n             json::extract_rendered(&self.stdout),\n             json::extract_rendered(&self.stderr),\n         );\n+    }\n+\n+    pub fn fatal(&self, err: Option<&str>, on_failure: impl FnOnce()) -> ! {\n+        if let Some(e) = err {\n+            println!(\"\\nerror: {}\", e);\n+        }\n+        self.print_info();\n         on_failure();\n         // Use resume_unwind instead of panic!() to prevent a panic message + backtrace from\n         // compiletest, which is unnecessary noise."}]}