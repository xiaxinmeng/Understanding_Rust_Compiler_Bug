{"sha": "799903ba16dd0d80ca975a2e0e58e81f71ddc023", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5OTkwM2JhMTZkZDBkODBjYTk3NWEyZTBlNThlODFmNzFkZGMwMjM=", "commit": {"author": {"name": "Matthias Einwag", "email": "matthias.einwag@live.com", "date": "2019-11-09T23:22:19Z"}, "committer": {"name": "Matthias Einwag", "email": "matthias.einwag@live.com", "date": "2019-11-09T23:22:19Z"}, "message": "Resolve core types\n\nThis adds support for completion and goto definition of\ntypes defined within the \"core\" crate. The core crate is\nadded as a dependency to each crate in the project.\n\nThe core crate exported it's own prelude. This caused\nnow all crates to inherit the core crates prelude instead\nof the std crates. In order to avoid the problem the\nprelude resolution has been changed to overwrite\nan already resolved prelude if this was set to a crate\nnamed core - in order to pick a better prelude like std.\n\nFixes #2199", "tree": {"sha": "798af5ece778c1630f903753805f163ba6043fd5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/798af5ece778c1630f903753805f163ba6043fd5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/799903ba16dd0d80ca975a2e0e58e81f71ddc023", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/799903ba16dd0d80ca975a2e0e58e81f71ddc023", "html_url": "https://github.com/rust-lang/rust/commit/799903ba16dd0d80ca975a2e0e58e81f71ddc023", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/799903ba16dd0d80ca975a2e0e58e81f71ddc023/comments", "author": {"login": "Matthias247", "id": 6330334, "node_id": "MDQ6VXNlcjYzMzAzMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6330334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Matthias247", "html_url": "https://github.com/Matthias247", "followers_url": "https://api.github.com/users/Matthias247/followers", "following_url": "https://api.github.com/users/Matthias247/following{/other_user}", "gists_url": "https://api.github.com/users/Matthias247/gists{/gist_id}", "starred_url": "https://api.github.com/users/Matthias247/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Matthias247/subscriptions", "organizations_url": "https://api.github.com/users/Matthias247/orgs", "repos_url": "https://api.github.com/users/Matthias247/repos", "events_url": "https://api.github.com/users/Matthias247/events{/privacy}", "received_events_url": "https://api.github.com/users/Matthias247/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Matthias247", "id": 6330334, "node_id": "MDQ6VXNlcjYzMzAzMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6330334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Matthias247", "html_url": "https://github.com/Matthias247", "followers_url": "https://api.github.com/users/Matthias247/followers", "following_url": "https://api.github.com/users/Matthias247/following{/other_user}", "gists_url": "https://api.github.com/users/Matthias247/gists{/gist_id}", "starred_url": "https://api.github.com/users/Matthias247/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Matthias247/subscriptions", "organizations_url": "https://api.github.com/users/Matthias247/orgs", "repos_url": "https://api.github.com/users/Matthias247/repos", "events_url": "https://api.github.com/users/Matthias247/events{/privacy}", "received_events_url": "https://api.github.com/users/Matthias247/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d786ea221b27fbdf7c7f7beea0290db448e0611", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d786ea221b27fbdf7c7f7beea0290db448e0611", "html_url": "https://github.com/rust-lang/rust/commit/9d786ea221b27fbdf7c7f7beea0290db448e0611"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "36a61dc3d4088e975a648cecf48f12225e761147", "filename": "crates/ra_hir_def/src/nameres/collector.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/799903ba16dd0d80ca975a2e0e58e81f71ddc023/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/799903ba16dd0d80ca975a2e0e58e81f71ddc023/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=799903ba16dd0d80ca975a2e0e58e81f71ddc023", "patch": "@@ -27,6 +27,7 @@ pub(super) fn collect_defs(db: &impl DefDatabase2, mut def_map: CrateDefMap) ->\n     let crate_graph = db.crate_graph();\n \n     // populate external prelude\n+    let mut prelude_is_core = false;\n     for dep in crate_graph.dependencies(def_map.krate) {\n         let dep_def_map = db.crate_def_map(dep.crate_id);\n         log::debug!(\"crate dep {:?} -> {:?}\", dep.name, dep.crate_id);\n@@ -36,10 +37,13 @@ pub(super) fn collect_defs(db: &impl DefDatabase2, mut def_map: CrateDefMap) ->\n         );\n \n         // look for the prelude\n-        if def_map.prelude.is_none() {\n+        // If the prelude is the \"core\" prelude, try to replace it with a higher\n+        // level prelude (e.g. \"std\") if available.\n+        if def_map.prelude.is_none() || prelude_is_core {\n             let map = db.crate_def_map(dep.crate_id);\n             if map.prelude.is_some() {\n                 def_map.prelude = map.prelude;\n+                prelude_is_core = dep.name == \"core\";\n             }\n         }\n     }"}, {"sha": "b1268f29bd0140bc0225584a62693a28a2b293a6", "filename": "crates/ra_project_model/src/lib.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/799903ba16dd0d80ca975a2e0e58e81f71ddc023/crates%2Fra_project_model%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/799903ba16dd0d80ca975a2e0e58e81f71ddc023/crates%2Fra_project_model%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Flib.rs?ref=799903ba16dd0d80ca975a2e0e58e81f71ddc023", "patch": "@@ -199,6 +199,7 @@ impl ProjectWorkspace {\n                     }\n                 }\n \n+                let libcore = sysroot.core().and_then(|it| sysroot_crates.get(&it).copied());\n                 let libstd = sysroot.std().and_then(|it| sysroot_crates.get(&it).copied());\n \n                 let mut pkg_to_lib_crate = FxHashMap::default();\n@@ -226,7 +227,7 @@ impl ProjectWorkspace {\n                         }\n                     }\n \n-                    // Set deps to the std and to the lib target of the current package\n+                    // Set deps to the core, std and to the lib target of the current package\n                     for &from in pkg_crates.get(&pkg).into_iter().flatten() {\n                         if let Some(to) = lib_tgt {\n                             if to != from {\n@@ -240,6 +241,11 @@ impl ProjectWorkspace {\n                                 }\n                             }\n                         }\n+                        if let Some(core) = libcore {\n+                            if let Err(_) = crate_graph.add_dep(from, \"core\".into(), core) {\n+                                log::error!(\"cyclic dependency on core for {}\", pkg.name(&cargo))\n+                            }\n+                        }\n                         if let Some(std) = libstd {\n                             if let Err(_) = crate_graph.add_dep(from, \"std\".into(), std) {\n                                 log::error!(\"cyclic dependency on std for {}\", pkg.name(&cargo))"}, {"sha": "3d827809ee808b0bc2bd20a4ddbc464555b86030", "filename": "crates/ra_project_model/src/sysroot.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/799903ba16dd0d80ca975a2e0e58e81f71ddc023/crates%2Fra_project_model%2Fsrc%2Fsysroot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/799903ba16dd0d80ca975a2e0e58e81f71ddc023/crates%2Fra_project_model%2Fsrc%2Fsysroot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Fsysroot.rs?ref=799903ba16dd0d80ca975a2e0e58e81f71ddc023", "patch": "@@ -27,6 +27,10 @@ struct SysrootCrateData {\n }\n \n impl Sysroot {\n+    pub fn core(&self) -> Option<SysrootCrate> {\n+        self.by_name(\"core\")\n+    }\n+\n     pub fn std(&self) -> Option<SysrootCrate> {\n         self.by_name(\"std\")\n     }"}]}