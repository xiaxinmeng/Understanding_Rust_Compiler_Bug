{"sha": "e9605dc0c9322da9adae5f70099010b5e4a83c92", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5NjA1ZGMwYzkzMjJkYTlhZGFlNWY3MDA5OTAxMGI1ZTRhODNjOTI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-11-01T22:28:12Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-11-01T22:28:12Z"}, "message": "Use consistent capitalization in makefile errors\n\nIn Rust we don't like capital letters.", "tree": {"sha": "a9e0b1e3b727e15e188f51c011c771d87ddb7f9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9e0b1e3b727e15e188f51c011c771d87ddb7f9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9605dc0c9322da9adae5f70099010b5e4a83c92", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9605dc0c9322da9adae5f70099010b5e4a83c92", "html_url": "https://github.com/rust-lang/rust/commit/e9605dc0c9322da9adae5f70099010b5e4a83c92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9605dc0c9322da9adae5f70099010b5e4a83c92/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ea2123055dcbc1caa0bb07bc492516027b832b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ea2123055dcbc1caa0bb07bc492516027b832b4", "html_url": "https://github.com/rust-lang/rust/commit/8ea2123055dcbc1caa0bb07bc492516027b832b4"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "0df66c3e61642227e4e06d4e9b8cfe27e7f7209e", "filename": "Makefile.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e9605dc0c9322da9adae5f70099010b5e4a83c92/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/e9605dc0c9322da9adae5f70099010b5e4a83c92/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=e9605dc0c9322da9adae5f70099010b5e4a83c92", "patch": "@@ -249,12 +249,12 @@ endef\n # by $(2) with a space character prefix, which invalidates the\n # construction $(1)$(2).\n define CHECK_FOR_OLD_GLOB_MATCHES_EXCEPT\n-  $(Q)MATCHES=\"$(filter-out %$(3),$(wildcard $(1)/$(2)))\"; if [ -n \"$$MATCHES\" ] ; then echo \"Warning: there are previous\" \\'$(2)\\' \"libraries:\" $$MATCHES; fi\n+  $(Q)MATCHES=\"$(filter-out %$(3),$(wildcard $(1)/$(2)))\"; if [ -n \"$$MATCHES\" ] ; then echo \"warning: there are previous\" \\'$(2)\\' \"libraries:\" $$MATCHES; fi\n endef\n \n # Same interface as above, but deletes rather than just listing the files.\n define REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT\n-  $(Q)MATCHES=\"$(filter-out %$(3),$(wildcard $(1)/$(2)))\"; if [ -n \"$$MATCHES\" ] ; then echo \"Warning: removing previous\" \\'$(2)\\' \"libraries:\" $$MATCHES; rm $$MATCHES ; fi\n+  $(Q)MATCHES=\"$(filter-out %$(3),$(wildcard $(1)/$(2)))\"; if [ -n \"$$MATCHES\" ] ; then echo \"warning: removing previous\" \\'$(2)\\' \"libraries:\" $$MATCHES; rm $$MATCHES ; fi\n endef\n \n # We use a different strategy for LIST_ALL_OLD_GLOB_MATCHES_EXCEPT\n@@ -265,7 +265,7 @@ endef\n # be run at the outset of a command list in a rule.)\n ifdef VERBOSE\n define LIST_ALL_OLD_GLOB_MATCHES_EXCEPT\n-  @echo \"Info: now are following matches for\" '$(2)' \"libraries:\"\n+  @echo \"info: now are following matches for\" '$(2)' \"libraries:\"\n   @( cd $(1) && ( ls $(2) 2>/dev/null || true ) | grep -v $(3) || true )\n endef\n else"}, {"sha": "620e66bd1c35a5adff329a772f5f982745f25c9c", "filename": "mk/install.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9605dc0c9322da9adae5f70099010b5e4a83c92/mk%2Finstall.mk", "raw_url": "https://github.com/rust-lang/rust/raw/e9605dc0c9322da9adae5f70099010b5e4a83c92/mk%2Finstall.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Finstall.mk?ref=e9605dc0c9322da9adae5f70099010b5e4a83c92", "patch": "@@ -50,7 +50,7 @@ define INSTALL_LIB\n   MATCHES=\"$(filter-out %$(notdir $(lastword $(wildcard $(LIB_SOURCE_DIR)/$(1)))),\\\n                         $(wildcard $(LIB_DESTIN_DIR)/$(1)))\";              \\\n   if [ -n \"$$MATCHES\" ]; then                                              \\\n-    echo \"Warning, one or libraries matching Rust library '$(1)'\" &&       \\\n+    echo \"warning: one or libraries matching Rust library '$(1)'\" &&       \\\n     echo \"  (other than '$$LIB_NAME' itself) already present\"     &&       \\\n     echo \"  at destination $(LIB_DESTIN_DIR):\"                    &&       \\\n     echo $$MATCHES ;                                                       \\"}]}