{"sha": "28fb591b6e681493b6ba3917146fbfe410dd45d0", "node_id": "C_kwDOAAsO6NoAKDI4ZmI1OTFiNmU2ODE0OTNiNmJhMzkxNzE0NmZiZmU0MTBkZDQ1ZDA", "commit": {"author": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2021-10-08T13:26:10Z"}, "committer": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2021-10-08T13:26:10Z"}, "message": "Do not expand macros in equatable_if_let suggestion", "tree": {"sha": "3718643bcfec58a3e117890cc0e40b6f8ad622f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3718643bcfec58a3e117890cc0e40b6f8ad622f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28fb591b6e681493b6ba3917146fbfe410dd45d0", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIyBAABCAAdFiEEij1UXJ/PQTcb99vTHKDfKvWdaKUFAmFgRwwACgkQHKDfKvWd\naKW6Hw/4t5KGG1KBn0CM5fzCM0Qd2i4VpEc0kMkw88HMprOG05zExHqkYYVwAgDr\n/s2QXvOrjTnPUxenaOaOg2ybpiL53dISANVTR42N1UpjrszogNkfhi3bcf9NPngV\nU6KBIrrtPgDIVZAq7WcY8uB18KMkty1fsnYHDW5Y32LGq+9iyVBU0vYN8N8oOM8N\nChGFEi+Mh+Aw7G5aaXho4Ly1rB4maYZnPpdVP4C8NOsgNKXlwCiAMER3P/01zsFB\nTX3roQN4hiUqa0U81kFDXvqg5MhIYo6F+UUcEX90VKZWnX7/Qbqyl4XeUVPtnqhA\n3X9hxOCKXjIKTtel5DLhgzau8w+w7hy24ercpGlWelgpLu6vubKaNfKtaur+H9mM\nE1Hb6SKL3Ggh+5owceGjPzeC7f2dtuv426u09kjSNtWL8MOWB9xTgTy2Vlnb092G\niz/ldJ+gbRzyk8H5u7+g65PCIBb0v23l4xeWwynIla9BJLa87zPGoOTLYJ2CP5xV\nNc8W+V+Uc7iEwXHefeoBgLmYsNCxMlf+EfN5grKhiP3lKkBSMTXteg1n5sJ7Aier\niJkgunOSG5XIM767reTck3fyXCWyrpwvnFPgJT4kQitSK4H82ZoOivA7F8xlQHn3\ns1GV4/SqZ0KaJQLokcXLUh8k1XtHFR8+BwE7ynsKuoS6SBIcTw==\n=tky4\n-----END PGP SIGNATURE-----", "payload": "tree 3718643bcfec58a3e117890cc0e40b6f8ad622f7\nparent 78e73129baf65f4095002422303157d5e64e9479\nauthor flip1995 <philipp.krones@embecosm.com> 1633699570 +0200\ncommitter flip1995 <philipp.krones@embecosm.com> 1633699570 +0200\n\nDo not expand macros in equatable_if_let suggestion\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28fb591b6e681493b6ba3917146fbfe410dd45d0", "html_url": "https://github.com/rust-lang/rust/commit/28fb591b6e681493b6ba3917146fbfe410dd45d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28fb591b6e681493b6ba3917146fbfe410dd45d0/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78e73129baf65f4095002422303157d5e64e9479", "url": "https://api.github.com/repos/rust-lang/rust/commits/78e73129baf65f4095002422303157d5e64e9479", "html_url": "https://github.com/rust-lang/rust/commit/78e73129baf65f4095002422303157d5e64e9479"}], "stats": {"total": 34, "additions": 29, "deletions": 5}, "files": [{"sha": "e8b1d6f6edaaaeb27b1a41daf89a9cd1e0580248", "filename": "clippy_lints/src/equatable_if_let.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/28fb591b6e681493b6ba3917146fbfe410dd45d0/clippy_lints%2Fsrc%2Fequatable_if_let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28fb591b6e681493b6ba3917146fbfe410dd45d0/clippy_lints%2Fsrc%2Fequatable_if_let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fequatable_if_let.rs?ref=28fb591b6e681493b6ba3917146fbfe410dd45d0", "patch": "@@ -1,5 +1,5 @@\n use clippy_utils::diagnostics::span_lint_and_sugg;\n-use clippy_utils::source::snippet_with_applicability;\n+use clippy_utils::source::snippet_with_context;\n use clippy_utils::ty::implements_trait;\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n@@ -77,9 +77,9 @@ impl<'tcx> LateLintPass<'tcx> for PatternEquality {\n                 let pat_str = match pat.kind {\n                     PatKind::Struct(..) => format!(\n                         \"({})\",\n-                        snippet_with_applicability(cx, pat.span, \"..\", &mut applicability),\n+                        snippet_with_context(cx, pat.span, expr.span.ctxt(), \"..\", &mut applicability).0,\n                     ),\n-                    _ => snippet_with_applicability(cx, pat.span, \"..\", &mut applicability).to_string(),\n+                    _ => snippet_with_context(cx, pat.span, expr.span.ctxt(), \"..\", &mut applicability).0.to_string(),\n                 };\n                 span_lint_and_sugg(\n                     cx,\n@@ -89,7 +89,7 @@ impl<'tcx> LateLintPass<'tcx> for PatternEquality {\n                     \"try\",\n                     format!(\n                         \"{} == {}\",\n-                        snippet_with_applicability(cx, exp.span, \"..\", &mut applicability),\n+                        snippet_with_context(cx, exp.span, expr.span.ctxt(), \"..\", &mut applicability).0,\n                         pat_str,\n                     ),\n                     applicability,"}, {"sha": "88918d9671e42f6d90037eae22fc8985ab5de651", "filename": "tests/ui/equatable_if_let.fixed", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/28fb591b6e681493b6ba3917146fbfe410dd45d0/tests%2Fui%2Fequatable_if_let.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/28fb591b6e681493b6ba3917146fbfe410dd45d0/tests%2Fui%2Fequatable_if_let.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fequatable_if_let.fixed?ref=28fb591b6e681493b6ba3917146fbfe410dd45d0", "patch": "@@ -66,4 +66,13 @@ fn main() {\n     if g == NotStructuralEq::A {}\n     if let Some(NotPartialEq::A) = Some(f) {}\n     if Some(g) == Some(NotStructuralEq::A) {}\n+\n+    macro_rules! m1 {\n+        (x) => {\n+            \"abc\"\n+        };\n+    }\n+    if \"abc\" == m1!(x) {\n+        println!(\"OK\");\n+    }\n }"}, {"sha": "9a7ab75ef450f528f5ff1543f3bdd361c1881f67", "filename": "tests/ui/equatable_if_let.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/28fb591b6e681493b6ba3917146fbfe410dd45d0/tests%2Fui%2Fequatable_if_let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28fb591b6e681493b6ba3917146fbfe410dd45d0/tests%2Fui%2Fequatable_if_let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fequatable_if_let.rs?ref=28fb591b6e681493b6ba3917146fbfe410dd45d0", "patch": "@@ -66,4 +66,13 @@ fn main() {\n     if let NotStructuralEq::A = g {}\n     if let Some(NotPartialEq::A) = Some(f) {}\n     if let Some(NotStructuralEq::A) = Some(g) {}\n+\n+    macro_rules! m1 {\n+        (x) => {\n+            \"abc\"\n+        };\n+    }\n+    if let m1!(x) = \"abc\" {\n+        println!(\"OK\");\n+    }\n }"}, {"sha": "760ff88f448f094561f008b0e29be43824306260", "filename": "tests/ui/equatable_if_let.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/28fb591b6e681493b6ba3917146fbfe410dd45d0/tests%2Fui%2Fequatable_if_let.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28fb591b6e681493b6ba3917146fbfe410dd45d0/tests%2Fui%2Fequatable_if_let.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fequatable_if_let.stderr?ref=28fb591b6e681493b6ba3917146fbfe410dd45d0", "patch": "@@ -60,5 +60,11 @@ error: this pattern matching can be expressed using equality\n LL |     if let Some(NotStructuralEq::A) = Some(g) {}\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `Some(g) == Some(NotStructuralEq::A)`\n \n-error: aborting due to 10 previous errors\n+error: this pattern matching can be expressed using equality\n+  --> $DIR/equatable_if_let.rs:75:8\n+   |\n+LL |     if let m1!(x) = \"abc\" {\n+   |        ^^^^^^^^^^^^^^^^^^ help: try: `\"abc\" == m1!(x)`\n+\n+error: aborting due to 11 previous errors\n "}]}