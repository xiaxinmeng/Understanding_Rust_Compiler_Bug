{"sha": "6abb6385b2cb7249f67b9b3ce7522527767dd907", "node_id": "C_kwDOAAsO6NoAKDZhYmI2Mzg1YjJjYjcyNDlmNjdiOWIzY2U3NTIyNTI3NzY3ZGQ5MDc", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-01-26T19:45:09Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-01-26T19:45:09Z"}, "message": "Auto merge of #93301 - spastorino:perf-test-1, r=oli-obk\n\nStore hir_id_to_def_id in OwnerInfo.\n\nThis is for perf test purposes only. Related to #89278", "tree": {"sha": "e9ecb1a4961f556b407f4e8dd6103fe37d45b5ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9ecb1a4961f556b407f4e8dd6103fe37d45b5ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6abb6385b2cb7249f67b9b3ce7522527767dd907", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6abb6385b2cb7249f67b9b3ce7522527767dd907", "html_url": "https://github.com/rust-lang/rust/commit/6abb6385b2cb7249f67b9b3ce7522527767dd907", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6abb6385b2cb7249f67b9b3ce7522527767dd907/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7f375789bab1a4e4a291c963081a8ca7d2b6bd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7f375789bab1a4e4a291c963081a8ca7d2b6bd7", "html_url": "https://github.com/rust-lang/rust/commit/a7f375789bab1a4e4a291c963081a8ca7d2b6bd7"}, {"sha": "384189c3d9af20146a4bcef382eca4f0ff9fe47e", "url": "https://api.github.com/repos/rust-lang/rust/commits/384189c3d9af20146a4bcef382eca4f0ff9fe47e", "html_url": "https://github.com/rust-lang/rust/commit/384189c3d9af20146a4bcef382eca4f0ff9fe47e"}], "stats": {"total": 460, "additions": 247, "deletions": 213}, "files": [{"sha": "32cec3a295a4e51aef0c9f4805a9bd6c8587c72e", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/6abb6385b2cb7249f67b9b3ce7522527767dd907/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6abb6385b2cb7249f67b9b3ce7522527767dd907/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=6abb6385b2cb7249f67b9b3ce7522527767dd907", "patch": "@@ -479,6 +479,20 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n         let attrs = std::mem::take(&mut self.attrs);\n         let mut bodies = std::mem::take(&mut self.bodies);\n         let local_node_ids = std::mem::take(&mut self.local_node_ids);\n+\n+        let local_id_to_def_id = local_node_ids\n+            .iter()\n+            .filter_map(|&node_id| {\n+                let hir_id = self.node_id_to_hir_id[node_id]?;\n+                if hir_id.local_id == hir::ItemLocalId::new(0) {\n+                    None\n+                } else {\n+                    let def_id = self.resolver.opt_local_def_id(node_id)?;\n+                    Some((hir_id.local_id, def_id))\n+                }\n+            })\n+            .collect();\n+\n         let trait_map = local_node_ids\n             .into_iter()\n             .filter_map(|node_id| {\n@@ -501,7 +515,13 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n         let (hash_including_bodies, hash_without_bodies) = self.hash_owner(node, &bodies);\n         let (nodes, parenting) =\n             index::index_hir(self.sess, self.resolver.definitions(), node, &bodies);\n-        let nodes = hir::OwnerNodes { hash_including_bodies, hash_without_bodies, nodes, bodies };\n+        let nodes = hir::OwnerNodes {\n+            hash_including_bodies,\n+            hash_without_bodies,\n+            nodes,\n+            bodies,\n+            local_id_to_def_id,\n+        };\n         let attrs = {\n             let mut hcx = self.resolver.create_stable_hashing_context();\n             let mut stable_hasher = StableHasher::new();"}, {"sha": "74d6b05ca5fc5bf3963c89cf190ad3556b1ce093", "filename": "compiler/rustc_hir/src/definitions.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6abb6385b2cb7249f67b9b3ce7522527767dd907/compiler%2Frustc_hir%2Fsrc%2Fdefinitions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6abb6385b2cb7249f67b9b3ce7522527767dd907/compiler%2Frustc_hir%2Fsrc%2Fdefinitions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fdefinitions.rs?ref=6abb6385b2cb7249f67b9b3ce7522527767dd907", "patch": "@@ -107,8 +107,6 @@ pub struct Definitions {\n     /// Their `HirId`s are defined by their position while lowering the enclosing owner.\n     // FIXME(cjgillot) Some `LocalDefId`s from `use` items are dropped during lowering and lack a `HirId`.\n     pub(super) def_id_to_hir_id: IndexVec<LocalDefId, Option<hir::HirId>>,\n-    /// The reverse mapping of `def_id_to_hir_id`.\n-    pub(super) hir_id_to_def_id: FxHashMap<hir::HirId, LocalDefId>,\n \n     /// Item with a given `LocalDefId` was defined during macro expansion with ID `ExpnId`.\n     expansions_that_defined: FxHashMap<LocalDefId, ExpnId>,\n@@ -330,11 +328,6 @@ impl Definitions {\n         self.def_id_to_hir_id[id].unwrap()\n     }\n \n-    #[inline]\n-    pub fn opt_hir_id_to_local_def_id(&self, hir_id: hir::HirId) -> Option<LocalDefId> {\n-        self.hir_id_to_def_id.get(&hir_id).copied()\n-    }\n-\n     /// Adds a root definition (no parent) and a few other reserved definitions.\n     pub fn new(stable_crate_id: StableCrateId, crate_span: Span) -> Definitions {\n         let key = DefKey {\n@@ -362,7 +355,6 @@ impl Definitions {\n         Definitions {\n             table,\n             def_id_to_hir_id: Default::default(),\n-            hir_id_to_def_id: Default::default(),\n             expansions_that_defined: Default::default(),\n             def_id_to_span,\n             stable_crate_id,\n@@ -425,12 +417,6 @@ impl Definitions {\n             \"trying to initialize `LocalDefId` <-> `HirId` mappings twice\"\n         );\n \n-        // Build the reverse mapping of `def_id_to_hir_id`.\n-        self.hir_id_to_def_id = mapping\n-            .iter_enumerated()\n-            .filter_map(|(def_id, hir_id)| hir_id.map(|hir_id| (hir_id, def_id)))\n-            .collect();\n-\n         self.def_id_to_hir_id = mapping;\n     }\n "}, {"sha": "a0ed72c9e9e509347045e480a8c2371bb41f08fd", "filename": "compiler/rustc_hir/src/hir.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6abb6385b2cb7249f67b9b3ce7522527767dd907/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6abb6385b2cb7249f67b9b3ce7522527767dd907/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fhir.rs?ref=6abb6385b2cb7249f67b9b3ce7522527767dd907", "patch": "@@ -707,6 +707,8 @@ pub struct OwnerNodes<'tcx> {\n     pub nodes: IndexVec<ItemLocalId, Option<ParentedNode<'tcx>>>,\n     /// Content of local bodies.\n     pub bodies: SortedMap<ItemLocalId, &'tcx Body<'tcx>>,\n+    /// Non-owning definitions contained in this owner.\n+    pub local_id_to_def_id: SortedMap<ItemLocalId, LocalDefId>,\n }\n \n /// Full information resulting from lowering an AST node."}, {"sha": "b15054ae6d610420d8133002a6d68f776e5ca8f9", "filename": "compiler/rustc_hir/src/stable_hash_impls.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6abb6385b2cb7249f67b9b3ce7522527767dd907/compiler%2Frustc_hir%2Fsrc%2Fstable_hash_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6abb6385b2cb7249f67b9b3ce7522527767dd907/compiler%2Frustc_hir%2Fsrc%2Fstable_hash_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fstable_hash_impls.rs?ref=6abb6385b2cb7249f67b9b3ce7522527767dd907", "patch": "@@ -208,8 +208,13 @@ impl<'tcx, HirCtx: crate::HashStableContext> HashStable<HirCtx> for OwnerNodes<'\n     fn hash_stable(&self, hcx: &mut HirCtx, hasher: &mut StableHasher) {\n         // We ignore the `nodes` and `bodies` fields since these refer to information included in\n         // `hash` which is hashed in the collector and used for the crate hash.\n-        let OwnerNodes { hash_including_bodies, hash_without_bodies: _, nodes: _, bodies: _ } =\n-            *self;\n+        let OwnerNodes {\n+            hash_including_bodies,\n+            hash_without_bodies: _,\n+            nodes: _,\n+            bodies: _,\n+            local_id_to_def_id: _,\n+        } = *self;\n         hash_including_bodies.hash_stable(hcx, hasher);\n     }\n }"}, {"sha": "1885df6ac5d9600744011349fa1a5d7ea1abb114", "filename": "compiler/rustc_middle/src/hir/map/mod.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6abb6385b2cb7249f67b9b3ce7522527767dd907/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6abb6385b2cb7249f67b9b3ce7522527767dd907/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs?ref=6abb6385b2cb7249f67b9b3ce7522527767dd907", "patch": "@@ -204,8 +204,11 @@ impl<'hir> Map<'hir> {\n         if hir_id.local_id == ItemLocalId::new(0) {\n             Some(hir_id.owner)\n         } else {\n-            // FIXME(#85914) is this access safe for incr. comp.?\n-            self.tcx.untracked_resolutions.definitions.opt_hir_id_to_local_def_id(hir_id)\n+            self.tcx\n+                .hir_owner_nodes(hir_id.owner)?\n+                .local_id_to_def_id\n+                .get(&hir_id.local_id)\n+                .copied()\n         }\n     }\n "}, {"sha": "142780bbc85a00b32fa0524e64e9e12f5b1daf2d", "filename": "src/test/incremental/hashes/extern_mods.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6abb6385b2cb7249f67b9b3ce7522527767dd907/src%2Ftest%2Fincremental%2Fhashes%2Fextern_mods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6abb6385b2cb7249f67b9b3ce7522527767dd907/src%2Ftest%2Fincremental%2Fhashes%2Fextern_mods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fextern_mods.rs?ref=6abb6385b2cb7249f67b9b3ce7522527767dd907", "patch": "@@ -27,9 +27,9 @@ extern \"C\" {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(cfg = \"cfail2\", except = \"hir_owner\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"hir_owner,hir_owner_nodes\")]\n #[rustc_clean(cfg = \"cfail3\")]\n-#[rustc_clean(cfg = \"cfail5\", except = \"hir_owner\")]\n+#[rustc_clean(cfg = \"cfail5\", except = \"hir_owner,hir_owner_nodes\")]\n #[rustc_clean(cfg = \"cfail6\")]\n extern \"C\" {\n     pub fn change_function_name2(c: i64) -> i32;\n@@ -132,9 +132,9 @@ extern \"C\" {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(cfg = \"cfail2\", except = \"hir_owner\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"hir_owner,hir_owner_nodes\")]\n #[rustc_clean(cfg = \"cfail3\")]\n-#[rustc_clean(cfg = \"cfail5\", except = \"hir_owner\")]\n+#[rustc_clean(cfg = \"cfail5\", except = \"hir_owner,hir_owner_nodes\")]\n #[rustc_clean(cfg = \"cfail6\")]\n extern \"rust-call\" {\n     pub fn change_calling_convention(c: i32);\n@@ -162,9 +162,9 @@ extern \"C\" {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(cfg = \"cfail2\", except = \"hir_owner\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"hir_owner,hir_owner_nodes\")]\n #[rustc_clean(cfg = \"cfail3\")]\n-#[rustc_clean(cfg = \"cfail5\", except = \"hir_owner\")]\n+#[rustc_clean(cfg = \"cfail5\", except = \"hir_owner,hir_owner_nodes\")]\n #[rustc_clean(cfg = \"cfail6\")]\n extern \"C\" {\n     pub fn add_function1(c: i32);"}, {"sha": "22508e41bf83496ec0535b332a501ee6729ade27", "filename": "src/test/incremental/hashes/inherent_impls.rs", "status": "modified", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/6abb6385b2cb7249f67b9b3ce7522527767dd907/src%2Ftest%2Fincremental%2Fhashes%2Finherent_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6abb6385b2cb7249f67b9b3ce7522527767dd907/src%2Ftest%2Fincremental%2Fhashes%2Finherent_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Finherent_impls.rs?ref=6abb6385b2cb7249f67b9b3ce7522527767dd907", "patch": "@@ -29,9 +29,9 @@ impl Foo {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,associated_item_def_ids\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_nodes,associated_item_def_ids\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(cfg=\"cfail5\", except=\"hir_owner,associated_item_def_ids\")]\n+#[rustc_clean(cfg=\"cfail5\", except=\"hir_owner,hir_owner_nodes,associated_item_def_ids\")]\n #[rustc_clean(cfg=\"cfail6\")]\n impl Foo {\n     #[rustc_clean(cfg=\"cfail3\")]\n@@ -54,9 +54,9 @@ impl Foo {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(cfg=\"cfail5\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n impl Foo {\n     #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_nodes,optimized_mir,promoted_mir,typeck\")]\n@@ -91,9 +91,9 @@ impl Foo {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(cfg=\"cfail5\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n impl Foo {\n     #[rustc_clean(\n@@ -153,9 +153,9 @@ impl Foo {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_nodes\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(cfg=\"cfail5\", except=\"hir_owner\")]\n+#[rustc_clean(cfg=\"cfail5\", except=\"hir_owner,hir_owner_nodes\")]\n #[rustc_clean(cfg=\"cfail6\")]\n impl Foo {\n     #[rustc_clean(\n@@ -182,9 +182,9 @@ impl Foo {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(cfg=\"cfail5\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n impl Foo {\n     #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_nodes,fn_sig,typeck,optimized_mir\")]\n@@ -203,9 +203,9 @@ impl Foo {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,associated_item_def_ids\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_nodes,associated_item_def_ids\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(cfg=\"cfail5\", except=\"hir_owner,associated_item_def_ids\")]\n+#[rustc_clean(cfg=\"cfail5\", except=\"hir_owner,hir_owner_nodes,associated_item_def_ids\")]\n #[rustc_clean(cfg=\"cfail6\")]\n impl Foo {\n     #[rustc_clean(cfg=\"cfail2\")]\n@@ -232,9 +232,9 @@ impl Foo {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(cfg=\"cfail5\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n impl Foo {\n     #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_nodes,fn_sig,typeck,optimized_mir\")]\n@@ -257,9 +257,9 @@ impl Foo {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(cfg=\"cfail5\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n impl Foo {\n     #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_nodes,optimized_mir\")]\n@@ -282,9 +282,9 @@ impl Foo {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(cfg=\"cfail5\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n impl Foo {\n     #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_nodes,fn_sig,optimized_mir,typeck\")]\n@@ -308,9 +308,9 @@ impl Foo {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(cfg=\"cfail5\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n impl Foo {\n     #[rustc_clean(cfg=\"cfail2\")]\n@@ -334,9 +334,9 @@ impl Foo {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(cfg=\"cfail5\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n impl Foo {\n     #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_nodes,optimized_mir\")]\n@@ -359,9 +359,9 @@ impl Foo {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(cfg=\"cfail5\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n impl Foo {\n     #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_nodes,fn_sig,typeck,optimized_mir\")]\n@@ -384,9 +384,9 @@ impl Foo {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(cfg=\"cfail5\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n impl Foo {\n     #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_nodes,fn_sig,typeck\")]\n@@ -409,9 +409,9 @@ impl Foo {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(cfg=\"cfail5\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n impl Foo {\n     #[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_nodes,fn_sig,typeck\")]\n@@ -443,9 +443,9 @@ impl Foo {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(cfg=\"cfail5\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n impl Foo {\n     // Warning: Note that `typeck` are coming up clean here.\n@@ -492,9 +492,9 @@ impl Foo {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(cfg=\"cfail5\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n impl Foo {\n     // Warning: Note that `typeck` are coming up clean here.\n@@ -538,9 +538,9 @@ impl Foo {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(cfg=\"cfail5\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n impl Foo {\n     #[rustc_clean(\n@@ -584,9 +584,9 @@ impl Foo {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(cfg=\"cfail5\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n impl Foo {\n     // Warning: Note that `typeck` are coming up clean here.\n@@ -633,9 +633,9 @@ impl Foo {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(cfg=\"cfail5\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n impl Foo {\n     // Warning: Note that `typeck` are coming up clean here.\n@@ -668,9 +668,9 @@ impl Foo {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(cfg=\"cfail5\", except=\"hir_owner_nodes\")]\n+#[rustc_clean(cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n impl Foo {\n     #[rustc_clean(cfg=\"cfail2\")]\n@@ -719,9 +719,9 @@ impl Bar<u32> {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_nodes\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(cfg=\"cfail5\", except=\"hir_owner\")]\n+#[rustc_clean(cfg=\"cfail5\", except=\"hir_owner,hir_owner_nodes\")]\n #[rustc_clean(cfg=\"cfail6\")]\n impl Bar<u64> {\n     #[rustc_clean(cfg=\"cfail2\", except=\"fn_sig,optimized_mir,typeck\")]"}, {"sha": "279449fce5e6feefc14393745407d15dcd34d794", "filename": "src/test/incremental/hashes/trait_defs.rs", "status": "modified", "additions": 133, "deletions": 115, "changes": 248, "blob_url": "https://github.com/rust-lang/rust/blob/6abb6385b2cb7249f67b9b3ce7522527767dd907/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6abb6385b2cb7249f67b9b3ce7522527767dd907/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs?ref=6abb6385b2cb7249f67b9b3ce7522527767dd907", "patch": "@@ -31,9 +31,9 @@\n trait TraitVisibility { }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n pub trait TraitVisibility { }\n \n@@ -44,9 +44,9 @@ pub trait TraitVisibility { }\n trait TraitUnsafety { }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n unsafe trait TraitUnsafety { }\n \n@@ -58,9 +58,9 @@ trait TraitAddMethod {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(except=\"hir_owner,associated_item_def_ids\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,associated_item_def_ids\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(except=\"hir_owner,associated_item_def_ids\", cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,associated_item_def_ids\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n pub trait TraitAddMethod {\n     fn method();\n@@ -75,9 +75,9 @@ trait TraitChangeMethodName {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(except=\"hir_owner,associated_item_def_ids\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,associated_item_def_ids\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(except=\"hir_owner,associated_item_def_ids\", cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,associated_item_def_ids\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitChangeMethodName {\n     fn methodChanged();\n@@ -88,9 +88,9 @@ trait TraitChangeMethodName {\n // Add return type to method\n #[cfg(any(cfail1,cfail4))]\n trait TraitAddReturnType {\n-    //-----------------------------------------------------\n+    //---------------------------------------------------------------------\n     //--------------------------\n-    //-----------------------------------------------------\n+    //---------------------------------------------------------------------\n     //--------------------------\n     fn method()       ;\n }\n@@ -101,9 +101,9 @@ trait TraitAddReturnType {\n #[rustc_clean(cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitAddReturnType {\n-    #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,fn_sig\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail5\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,fn_sig\", cfg=\"cfail5\")]\n     #[rustc_clean(cfg=\"cfail6\")]\n     fn method() -> u32;\n }\n@@ -138,9 +138,9 @@ trait TraitChangeReturnType {\n // Add parameter to method\n #[cfg(any(cfail1,cfail4))]\n trait TraitAddParameterToMethod {\n-    // ----------------------------------------------------\n+    // --------------------------------------------------------------------\n     // -------------------------\n-    // ----------------------------------------------------\n+    // --------------------------------------------------------------------\n     // -------------------------\n     fn method(      );\n }\n@@ -151,9 +151,9 @@ trait TraitAddParameterToMethod {\n #[rustc_clean(cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitAddParameterToMethod {\n-    #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,fn_sig\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail5\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,fn_sig\", cfg=\"cfail5\")]\n     #[rustc_clean(cfg=\"cfail6\")]\n     fn method(a: u32);\n }\n@@ -164,9 +164,9 @@ trait TraitAddParameterToMethod {\n #[cfg(any(cfail1,cfail4))]\n trait TraitChangeMethodParameterName {\n     //------------------------------------------------------\n-    //----------------------------------------------\n+    //--------------------------------------------------------------\n     //--------------------------\n-    //----------------------------------------------\n+    //--------------------------------------------------------------\n     //--------------------------\n     fn method(a: u32);\n \n@@ -184,9 +184,9 @@ trait TraitChangeMethodParameterName {\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitChangeMethodParameterName {\n     // FIXME(#38501) This should preferably always be clean.\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail5\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes\", cfg=\"cfail5\")]\n     #[rustc_clean(cfg=\"cfail6\")]\n     fn method(b: u32);\n \n@@ -202,9 +202,9 @@ trait TraitChangeMethodParameterName {\n // Change type of method parameter (i32 => i64)\n #[cfg(any(cfail1,cfail4))]\n trait TraitChangeMethodParameterType {\n-    // ----------------------------------------------------\n+    // --------------------------------------------------------------------\n     // -------------------------\n-    // ----------------------------------------------------\n+    // --------------------------------------------------------------------\n     // -------------------------\n     fn method(a: i32);\n }\n@@ -215,9 +215,9 @@ trait TraitChangeMethodParameterType {\n #[rustc_clean(cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitChangeMethodParameterType {\n-    #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,fn_sig\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail5\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,fn_sig\", cfg=\"cfail5\")]\n     #[rustc_clean(cfg=\"cfail6\")]\n     fn method(a: i64);\n }\n@@ -227,9 +227,9 @@ trait TraitChangeMethodParameterType {\n // Change type of method parameter (&i32 => &mut i32)\n #[cfg(any(cfail1,cfail4))]\n trait TraitChangeMethodParameterTypeRef {\n-    // ----------------------------------------------------\n+    // --------------------------------------------------------------------\n     // -------------------------\n-    // ----------------------------------------------------\n+    // --------------------------------------------------------------------\n     // -------------------------\n     fn method(a: &    i32);\n }\n@@ -240,9 +240,9 @@ trait TraitChangeMethodParameterTypeRef {\n #[rustc_clean(cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitChangeMethodParameterTypeRef {\n-    #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,fn_sig\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail5\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,fn_sig\", cfg=\"cfail5\")]\n     #[rustc_clean(cfg=\"cfail6\")]\n     fn method(a: &mut i32);\n }\n@@ -252,9 +252,9 @@ trait TraitChangeMethodParameterTypeRef {\n // Change order of method parameters\n #[cfg(any(cfail1,cfail4))]\n trait TraitChangeMethodParametersOrder {\n-    // ----------------------------------------------------\n+    // --------------------------------------------------------------------\n     // -------------------------\n-    // ----------------------------------------------------\n+    // --------------------------------------------------------------------\n     // -------------------------\n     fn method(a: i32, b: i64);\n }\n@@ -265,9 +265,9 @@ trait TraitChangeMethodParametersOrder {\n #[rustc_clean(cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitChangeMethodParametersOrder {\n-    #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,fn_sig\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail5\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,fn_sig\", cfg=\"cfail5\")]\n     #[rustc_clean(cfg=\"cfail6\")]\n     fn method(b: i64, a: i32);\n }\n@@ -277,20 +277,24 @@ trait TraitChangeMethodParametersOrder {\n // Add default implementation to method\n #[cfg(any(cfail1,cfail4))]\n trait TraitAddMethodAutoImplementation {\n-    fn method();\n+    // -----------------------------------------------------------------------------\n+    // -------------------------\n+    // -----------------------------------------------------------------------------\n+    // -------------------------\n+    fn method()  ;\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitAddMethodAutoImplementation {\n-    #[rustc_clean(except=\"hir_owner,associated_item\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,associated_item\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_clean(except=\"hir_owner,associated_item\", cfg=\"cfail5\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,associated_item\", cfg=\"cfail5\")]\n     #[rustc_clean(cfg=\"cfail6\")]\n-    fn method() { }\n+    fn method() {}\n }\n \n \n@@ -303,9 +307,9 @@ trait TraitChangeOrderOfMethods {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(except=\"hir_owner,associated_item_def_ids\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,associated_item_def_ids\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(except=\"hir_owner,associated_item_def_ids\", cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,associated_item_def_ids\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitChangeOrderOfMethods {\n     fn method1();\n@@ -317,9 +321,9 @@ trait TraitChangeOrderOfMethods {\n // Change mode of self parameter\n #[cfg(any(cfail1,cfail4))]\n trait TraitChangeModeSelfRefToMut {\n-    // ----------------------------------------------------\n+    // --------------------------------------------------------------------\n     // -------------------------\n-    // ----------------------------------------------------\n+    // --------------------------------------------------------------------\n     // -------------------------\n     fn method(&    self);\n }\n@@ -330,9 +334,9 @@ trait TraitChangeModeSelfRefToMut {\n #[rustc_clean(cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitChangeModeSelfRefToMut {\n-    #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,fn_sig\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail5\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,fn_sig\", cfg=\"cfail5\")]\n     #[rustc_clean(cfg=\"cfail6\")]\n     fn method(&mut self);\n }\n@@ -365,9 +369,9 @@ trait TraitChangeModeSelfOwnToMut: Sized {\n \n #[cfg(any(cfail1,cfail4))]\n trait TraitChangeModeSelfOwnToRef {\n-    // ----------------------------------------------------------------\n+    // --------------------------------------------------------------------------------\n     // -------------------------\n-    // ----------------------------------------------------------------\n+    // --------------------------------------------------------------------------------\n     // -------------------------\n     fn method( self);\n }\n@@ -378,9 +382,9 @@ trait TraitChangeModeSelfOwnToRef {\n #[rustc_clean(cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitChangeModeSelfOwnToRef {\n-    #[rustc_clean(except=\"hir_owner,fn_sig,generics_of\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,fn_sig,generics_of\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_clean(except=\"hir_owner,fn_sig,generics_of\", cfg=\"cfail5\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,fn_sig,generics_of\", cfg=\"cfail5\")]\n     #[rustc_clean(cfg=\"cfail6\")]\n     fn method(&self);\n }\n@@ -390,9 +394,9 @@ trait TraitChangeModeSelfOwnToRef {\n // Add unsafe modifier to method\n #[cfg(any(cfail1,cfail4))]\n trait TraitAddUnsafeModifier {\n-    // ----------------------------------------------------\n+    // --------------------------------------------------------------------\n     // -------------------------\n-    // ----------------------------------------------------\n+    // --------------------------------------------------------------------\n     // -------------------------\n     fn method()       ;\n }\n@@ -403,9 +407,9 @@ trait TraitAddUnsafeModifier {\n #[rustc_clean(except=\"hir_owner\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitAddUnsafeModifier {\n-    #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,fn_sig\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail5\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,fn_sig\", cfg=\"cfail5\")]\n     #[rustc_clean(cfg=\"cfail6\")]\n     unsafe fn method();\n }\n@@ -415,9 +419,9 @@ trait TraitAddUnsafeModifier {\n // Add extern modifier to method\n #[cfg(any(cfail1,cfail4))]\n trait TraitAddExternModifier {\n-    // ----------------------------------------------------\n+    // --------------------------------------------------------------------\n     // -------------------------\n-    // ----------------------------------------------------\n+    // --------------------------------------------------------------------\n     // -------------------------\n     fn method()           ;\n }\n@@ -428,9 +432,9 @@ trait TraitAddExternModifier {\n #[rustc_clean(except=\"hir_owner\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitAddExternModifier {\n-    #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,fn_sig\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail5\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,fn_sig\", cfg=\"cfail5\")]\n     #[rustc_clean(cfg=\"cfail6\")]\n     extern \"C\" fn method();\n }\n@@ -440,9 +444,9 @@ trait TraitAddExternModifier {\n // Change extern \"C\" to extern \"stdcall\"\n #[cfg(any(cfail1,cfail4))]\n trait TraitChangeExternCToRustIntrinsic {\n-    // ----------------------------------------------------\n+    // --------------------------------------------------------------------\n     // -------------------------\n-    // ----------------------------------------------------\n+    // --------------------------------------------------------------------\n     // -------------------------\n     extern \"C\"       fn method();\n }\n@@ -453,9 +457,9 @@ trait TraitChangeExternCToRustIntrinsic {\n #[rustc_clean(cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitChangeExternCToRustIntrinsic {\n-    #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,fn_sig\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail5\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,fn_sig\", cfg=\"cfail5\")]\n     #[rustc_clean(cfg=\"cfail6\")]\n     extern \"stdcall\" fn method();\n }\n@@ -465,9 +469,11 @@ trait TraitChangeExternCToRustIntrinsic {\n // Add type parameter to method\n #[cfg(any(cfail1,cfail4))]\n trait TraitAddTypeParameterToMethod {\n-    // -------------------------------------------------------------------------------\n+    // --------------------------------------------------------------------------------\n+    // ---------------\n     // -------------------------\n-    // -------------------------------------------------------------------------------\n+    // --------------------------------------------------------------------------------\n+    // ---------------\n     // -------------------------\n     fn method   ();\n }\n@@ -478,9 +484,11 @@ trait TraitAddTypeParameterToMethod {\n #[rustc_clean(cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitAddTypeParameterToMethod {\n-    #[rustc_clean(except=\"hir_owner,generics_of,predicates_of,type_of\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,generics_of,predicates_of,type_of\",\n+        cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_clean(except=\"hir_owner,generics_of,predicates_of,type_of\", cfg=\"cfail5\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,generics_of,predicates_of,type_of\",\n+        cfg=\"cfail5\")]\n     #[rustc_clean(cfg=\"cfail6\")]\n     fn method<T>();\n }\n@@ -490,9 +498,9 @@ trait TraitAddTypeParameterToMethod {\n // Add lifetime parameter to method\n #[cfg(any(cfail1,cfail4))]\n trait TraitAddLifetimeParameterToMethod {\n-    // ----------------------------------------------------------------\n+    // --------------------------------------------------------------------------------\n     // -------------------------\n-    // ----------------------------------------------------------------\n+    // --------------------------------------------------------------------------------\n     // -------------------------\n     fn method    ();\n }\n@@ -503,9 +511,9 @@ trait TraitAddLifetimeParameterToMethod {\n #[rustc_clean(cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitAddLifetimeParameterToMethod {\n-    #[rustc_clean(except=\"hir_owner,fn_sig,generics_of\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,fn_sig,generics_of\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_clean(except=\"hir_owner,fn_sig,generics_of\", cfg=\"cfail5\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,fn_sig,generics_of\", cfg=\"cfail5\")]\n     #[rustc_clean(cfg=\"cfail6\")]\n     fn method<'a>();\n }\n@@ -705,9 +713,9 @@ trait TraitAddAssociatedType {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(except=\"hir_owner,associated_item_def_ids\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,associated_item_def_ids\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(except=\"hir_owner,associated_item_def_ids\", cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,associated_item_def_ids\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitAddAssociatedType {\n     #[rustc_clean(cfg=\"cfail3\")]\n@@ -726,9 +734,9 @@ trait TraitAddAssociatedType {\n // Add trait bound to associated type\n #[cfg(any(cfail1,cfail4))]\n trait TraitAddTraitBoundToAssociatedType {\n-    // ---------------------------------------------\n+    // -------------------------------------------------------------\n     // -------------------------\n-    // ---------------------------------------------\n+    // -------------------------------------------------------------\n     // -------------------------\n     type Associated                  ;\n \n@@ -744,9 +752,9 @@ trait TraitAddTraitBoundToAssociatedType {\n #[rustc_clean(cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitAddTraitBoundToAssociatedType {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail5\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes\", cfg=\"cfail5\")]\n     #[rustc_clean(cfg=\"cfail6\")]\n     type Associated: ReferencedTrait0;\n \n@@ -758,9 +766,9 @@ trait TraitAddTraitBoundToAssociatedType {\n // Add lifetime bound to associated type\n #[cfg(any(cfail1,cfail4))]\n trait TraitAddLifetimeBoundToAssociatedType<'a> {\n-    // ---------------------------------------------\n+    // -------------------------------------------------------------\n     // -------------------------\n-    // ---------------------------------------------\n+    // -------------------------------------------------------------\n     // -------------------------\n     type Associated    ;\n \n@@ -773,9 +781,9 @@ trait TraitAddLifetimeBoundToAssociatedType<'a> {\n #[rustc_clean(cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitAddLifetimeBoundToAssociatedType<'a> {\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_clean(except=\"hir_owner\", cfg=\"cfail5\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes\", cfg=\"cfail5\")]\n     #[rustc_clean(cfg=\"cfail6\")]\n     type Associated: 'a;\n \n@@ -793,14 +801,14 @@ trait TraitAddDefaultToAssociatedType {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitAddDefaultToAssociatedType {\n-    #[rustc_clean(except=\"hir_owner,associated_item\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,associated_item\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_clean(except=\"hir_owner,associated_item\", cfg=\"cfail5\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,associated_item\", cfg=\"cfail5\")]\n     #[rustc_clean(cfg=\"cfail6\")]\n     type Associated = ReferenceType0;\n \n@@ -816,9 +824,9 @@ trait TraitAddAssociatedConstant {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(except=\"hir_owner,associated_item_def_ids\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,associated_item_def_ids\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(except=\"hir_owner,associated_item_def_ids\", cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,associated_item_def_ids\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitAddAssociatedConstant {\n     const Value: u32;\n@@ -837,14 +845,14 @@ trait TraitAddInitializerToAssociatedConstant {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitAddInitializerToAssociatedConstant {\n-    #[rustc_clean(except=\"hir_owner,associated_item\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,associated_item\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_clean(except=\"hir_owner,associated_item\", cfg=\"cfail5\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,associated_item\", cfg=\"cfail5\")]\n     #[rustc_clean(cfg=\"cfail6\")]\n     const Value: u32 = 1;\n \n@@ -860,9 +868,9 @@ trait TraitAddInitializerToAssociatedConstant {\n // Change type of associated constant\n #[cfg(any(cfail1,cfail4))]\n trait TraitChangeTypeOfAssociatedConstant {\n-    // -----------------------------------------------------\n+    // ---------------------------------------------------------------------\n     // -------------------------\n-    // -----------------------------------------------------\n+    // ---------------------------------------------------------------------\n     // -------------------------\n     const Value: u32;\n \n@@ -879,9 +887,9 @@ trait TraitChangeTypeOfAssociatedConstant {\n #[rustc_clean(cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitChangeTypeOfAssociatedConstant {\n-    #[rustc_clean(except=\"hir_owner,type_of\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,type_of\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_clean(except=\"hir_owner,type_of\", cfg=\"cfail5\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,type_of\", cfg=\"cfail5\")]\n     #[rustc_clean(cfg=\"cfail6\")]\n     const Value: f64;\n \n@@ -899,9 +907,9 @@ trait TraitChangeTypeOfAssociatedConstant {\n trait TraitAddSuperTrait { }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(except=\"hir_owner,predicates_of\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(except=\"hir_owner,predicates_of\", cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitAddSuperTrait : ReferencedTrait0 { }\n \n@@ -912,9 +920,9 @@ trait TraitAddSuperTrait : ReferencedTrait0 { }\n trait TraitAddBuiltiBound { }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(except=\"hir_owner,predicates_of\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(except=\"hir_owner,predicates_of\", cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitAddBuiltiBound : Send { }\n \n@@ -925,9 +933,9 @@ trait TraitAddBuiltiBound : Send { }\n trait TraitAddStaticLifetimeBound { }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(except=\"hir_owner,predicates_of\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(except=\"hir_owner,predicates_of\", cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitAddStaticLifetimeBound : 'static { }\n \n@@ -938,19 +946,19 @@ trait TraitAddStaticLifetimeBound : 'static { }\n trait TraitAddTraitAsSecondBound : ReferencedTrait0 { }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(except=\"hir_owner,predicates_of\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(except=\"hir_owner,predicates_of\", cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitAddTraitAsSecondBound : ReferencedTrait0 + ReferencedTrait1 { }\n \n #[cfg(any(cfail1,cfail4))]\n trait TraitAddTraitAsSecondBoundFromBuiltin : Send { }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(except=\"hir_owner,predicates_of\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(except=\"hir_owner,predicates_of\", cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitAddTraitAsSecondBoundFromBuiltin : Send + ReferencedTrait0 { }\n \n@@ -961,19 +969,19 @@ trait TraitAddTraitAsSecondBoundFromBuiltin : Send + ReferencedTrait0 { }\n trait TraitAddBuiltinBoundAsSecondBound : ReferencedTrait0 { }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(except=\"hir_owner,predicates_of\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(except=\"hir_owner,predicates_of\", cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitAddBuiltinBoundAsSecondBound : ReferencedTrait0 + Send { }\n \n #[cfg(any(cfail1,cfail4))]\n trait TraitAddBuiltinBoundAsSecondBoundFromBuiltin : Send { }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(except=\"hir_owner,predicates_of\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(except=\"hir_owner,predicates_of\", cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitAddBuiltinBoundAsSecondBoundFromBuiltin: Send + Copy { }\n \n@@ -984,19 +992,19 @@ trait TraitAddBuiltinBoundAsSecondBoundFromBuiltin: Send + Copy { }\n trait TraitAddStaticBoundAsSecondBound : ReferencedTrait0 { }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(except=\"hir_owner,predicates_of\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(except=\"hir_owner,predicates_of\", cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitAddStaticBoundAsSecondBound : ReferencedTrait0 + 'static { }\n \n #[cfg(any(cfail1,cfail4))]\n trait TraitAddStaticBoundAsSecondBoundFromBuiltin : Send { }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(except=\"hir_owner,predicates_of\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(except=\"hir_owner,predicates_of\", cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitAddStaticBoundAsSecondBoundFromBuiltin : Send + 'static { }\n \n@@ -1007,9 +1015,9 @@ trait TraitAddStaticBoundAsSecondBoundFromBuiltin : Send + 'static { }\n trait TraitAddTypeParameterToTrait { }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(except=\"hir_owner,generics_of,predicates_of\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,generics_of,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(except=\"hir_owner,generics_of,predicates_of\", cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,generics_of,predicates_of\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitAddTypeParameterToTrait<T> { }\n \n@@ -1020,9 +1028,9 @@ trait TraitAddTypeParameterToTrait<T> { }\n trait TraitAddLifetimeParameterToTrait { }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(except=\"hir_owner,generics_of,predicates_of\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,generics_of,predicates_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(except=\"hir_owner,generics_of,predicates_of\", cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,generics_of,predicates_of\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n trait TraitAddLifetimeParameterToTrait<'a> { }\n \n@@ -1298,9 +1306,13 @@ mod change_method_parameter_type_indirectly_by_use {\n \n     #[rustc_clean(cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n+    #[rustc_clean(cfg=\"cfail5\")]\n+    #[rustc_clean(cfg=\"cfail6\")]\n     trait TraitChangeArgType {\n-        #[rustc_clean(except=\"hir_owner,fn_sig\", cfg=\"cfail2\")]\n+        #[rustc_clean(except=\"hir_owner,hir_owner_nodes,fn_sig\", cfg=\"cfail2\")]\n         #[rustc_clean(cfg=\"cfail3\")]\n+        #[rustc_clean(except=\"hir_owner,hir_owner_nodes,fn_sig\", cfg=\"cfail5\")]\n+        #[rustc_clean(cfg=\"cfail6\")]\n         fn method(a: ArgType);\n     }\n }\n@@ -1316,9 +1328,13 @@ mod change_method_parameter_type_bound_indirectly_by_use {\n \n     #[rustc_clean(cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n+    #[rustc_clean(cfg=\"cfail5\")]\n+    #[rustc_clean(cfg=\"cfail6\")]\n     trait TraitChangeBoundOfMethodTypeParameter {\n         #[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail2\")]\n         #[rustc_clean(cfg=\"cfail3\")]\n+        #[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail5\")]\n+        #[rustc_clean(cfg=\"cfail6\")]\n         fn method<T: Bound>(a: T);\n     }\n }\n@@ -1357,6 +1373,8 @@ mod change_method_type_parameter_bound_indirectly {\n \n     #[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,predicates_of\", cfg=\"cfail5\")]\n+    #[rustc_clean(cfg=\"cfail6\")]\n     trait TraitChangeTraitBound<T: Bound> {\n         fn method(a: T);\n     }"}, {"sha": "75c93b73f857dad4a433cd68ff01cd8eba352392", "filename": "src/test/incremental/hashes/trait_impls.rs", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/6abb6385b2cb7249f67b9b3ce7522527767dd907/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6abb6385b2cb7249f67b9b3ce7522527767dd907/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_impls.rs?ref=6abb6385b2cb7249f67b9b3ce7522527767dd907", "patch": "@@ -35,9 +35,9 @@ impl ChangeMethodNameTrait for Foo {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(except=\"hir_owner,associated_item_def_ids\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,associated_item_def_ids\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(except=\"hir_owner,associated_item_def_ids\", cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,associated_item_def_ids\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n pub trait ChangeMethodNameTrait {\n     #[rustc_clean(cfg=\"cfail3\")]\n@@ -46,9 +46,9 @@ pub trait ChangeMethodNameTrait {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(except=\"hir_owner,associated_item_def_ids\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,associated_item_def_ids\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(except=\"hir_owner,associated_item_def_ids\", cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,associated_item_def_ids\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n impl ChangeMethodNameTrait for Foo {\n     #[rustc_clean(cfg=\"cfail3\")]\n@@ -144,9 +144,9 @@ pub trait ChangeMethodSelfnessTrait {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n impl ChangeMethodSelfnessTrait for Foo {\n     #[rustc_clean(\n@@ -182,9 +182,9 @@ pub trait RemoveMethodSelfnessTrait {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n impl RemoveMethodSelfnessTrait for Foo {\n     #[rustc_clean(\n@@ -252,9 +252,9 @@ pub trait ChangeItemKindTrait {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(except=\"hir_owner,associated_item_def_ids\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,associated_item_def_ids\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(except=\"hir_owner,associated_item_def_ids\", cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,associated_item_def_ids\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n impl ChangeItemKindTrait for Foo {\n     type name = ();\n@@ -280,9 +280,9 @@ pub trait RemoveItemTrait {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(except=\"hir_owner,associated_item_def_ids\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,associated_item_def_ids\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(except=\"hir_owner,associated_item_def_ids\", cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,associated_item_def_ids\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n impl RemoveItemTrait for Foo {\n     type TypeName = ();\n@@ -307,9 +307,9 @@ pub trait AddItemTrait {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(except=\"hir_owner,associated_item_def_ids\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,associated_item_def_ids\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(except=\"hir_owner,associated_item_def_ids\", cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,associated_item_def_ids\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n impl AddItemTrait for Foo {\n     type TypeName = ();\n@@ -329,14 +329,14 @@ impl ChangeHasValueTrait for Foo {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n pub trait ChangeHasValueTrait {\n-    #[rustc_clean(except=\"hir_owner,associated_item\", cfg=\"cfail2\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,associated_item\", cfg=\"cfail2\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n-    #[rustc_clean(except=\"hir_owner,associated_item\", cfg=\"cfail5\")]\n+    #[rustc_clean(except=\"hir_owner,hir_owner_nodes,associated_item\", cfg=\"cfail5\")]\n     #[rustc_clean(cfg=\"cfail6\")]\n     fn method_name() { }\n }\n@@ -364,9 +364,9 @@ impl AddDefaultTrait for Foo {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(except=\"hir_owner\", cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n impl AddDefaultTrait for Foo {\n     #[rustc_clean(except=\"hir_owner,hir_owner_nodes,associated_item\", cfg=\"cfail2\")]\n@@ -459,9 +459,9 @@ impl AddTypeParameterToImpl<u32> for Bar<u32> {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(except=\"hir_owner,generics_of,impl_trait_ref\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,generics_of,impl_trait_ref\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(except=\"hir_owner,generics_of,impl_trait_ref\", cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,generics_of,impl_trait_ref\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n impl<TTT> AddTypeParameterToImpl<TTT> for Bar<TTT> {\n     #[rustc_clean(\n@@ -490,9 +490,9 @@ impl ChangeSelfTypeOfImpl for u32 {\n }\n \n #[cfg(not(any(cfail1,cfail4)))]\n-#[rustc_clean(except=\"hir_owner,impl_trait_ref\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,impl_trait_ref\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n-#[rustc_clean(except=\"hir_owner,impl_trait_ref\", cfg=\"cfail5\")]\n+#[rustc_clean(except=\"hir_owner,hir_owner_nodes,impl_trait_ref\", cfg=\"cfail5\")]\n #[rustc_clean(cfg=\"cfail6\")]\n impl ChangeSelfTypeOfImpl for u64 {\n     #[rustc_clean(except=\"fn_sig,typeck,optimized_mir\", cfg=\"cfail2\")]"}, {"sha": "1d278c4efa987383ee731ed0ed95d60345910bd7", "filename": "src/test/incremental/hashes/type_defs.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6abb6385b2cb7249f67b9b3ce7522527767dd907/src%2Ftest%2Fincremental%2Fhashes%2Ftype_defs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6abb6385b2cb7249f67b9b3ce7522527767dd907/src%2Ftest%2Fincremental%2Fhashes%2Ftype_defs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ftype_defs.rs?ref=6abb6385b2cb7249f67b9b3ce7522527767dd907", "patch": "@@ -24,7 +24,7 @@\n type ChangePrimitiveType = i32;\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_nodes\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type ChangePrimitiveType = i64;\n \n@@ -35,7 +35,7 @@ type ChangePrimitiveType = i64;\n type ChangeMutability = &'static i32;\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_nodes\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type ChangeMutability = &'static mut i32;\n \n@@ -60,7 +60,7 @@ struct Struct2;\n type ChangeTypeStruct = Struct1;\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_nodes\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type ChangeTypeStruct = Struct2;\n \n@@ -71,7 +71,7 @@ type ChangeTypeStruct = Struct2;\n type ChangeTypeTuple = (u32, u64);\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_nodes\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type ChangeTypeTuple = (u32, i64);\n \n@@ -91,7 +91,7 @@ enum Enum2 {\n type ChangeTypeEnum = Enum1;\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_nodes\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type ChangeTypeEnum = Enum2;\n \n@@ -102,7 +102,7 @@ type ChangeTypeEnum = Enum2;\n type AddTupleField = (i32, i64);\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_nodes\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type AddTupleField = (i32, i64, i16);\n \n@@ -113,7 +113,7 @@ type AddTupleField = (i32, i64, i16);\n type ChangeNestedTupleField = (i32, (i64, i16));\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner,hir_owner_nodes\")]\n #[rustc_clean(cfg=\"cfail3\")]\n type ChangeNestedTupleField = (i32, (i64, i8));\n "}]}