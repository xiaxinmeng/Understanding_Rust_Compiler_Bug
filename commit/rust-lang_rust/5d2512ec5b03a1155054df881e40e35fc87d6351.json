{"sha": "5d2512ec5b03a1155054df881e40e35fc87d6351", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkMjUxMmVjNWIwM2ExMTU1MDU0ZGY4ODFlNDBlMzVmYzg3ZDYzNTE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-05-27T23:02:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-05-27T23:02:44Z"}, "message": "Auto merge of #42162 - est31:closure-to-fn-coercion, r=aturon\n\nStabilize non capturing closure to fn coercion\n\nStabilisation PR for non capturing closure to fn coercion.\n\ncloses #39817", "tree": {"sha": "7aed5ec881348ccaf35d17655003aee7e33ebf5c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7aed5ec881348ccaf35d17655003aee7e33ebf5c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d2512ec5b03a1155054df881e40e35fc87d6351", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d2512ec5b03a1155054df881e40e35fc87d6351", "html_url": "https://github.com/rust-lang/rust/commit/5d2512ec5b03a1155054df881e40e35fc87d6351", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d2512ec5b03a1155054df881e40e35fc87d6351/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28fd1e519a3807c632d58d01e73b4948000639ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/28fd1e519a3807c632d58d01e73b4948000639ba", "html_url": "https://github.com/rust-lang/rust/commit/28fd1e519a3807c632d58d01e73b4948000639ba"}, {"sha": "87950b79de4bd12ad02f32dbebc60ab1bef17f82", "url": "https://api.github.com/repos/rust-lang/rust/commits/87950b79de4bd12ad02f32dbebc60ab1bef17f82", "html_url": "https://github.com/rust-lang/rust/commit/87950b79de4bd12ad02f32dbebc60ab1bef17f82"}], "stats": {"total": 77, "additions": 2, "deletions": 75}, "files": [{"sha": "f944675e5eb599824c47b5aca4cfe453fc74b26b", "filename": "src/doc/unstable-book/src/SUMMARY.md", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5d2512ec5b03a1155054df881e40e35fc87d6351/src%2Fdoc%2Funstable-book%2Fsrc%2FSUMMARY.md", "raw_url": "https://github.com/rust-lang/rust/raw/5d2512ec5b03a1155054df881e40e35fc87d6351/src%2Fdoc%2Funstable-book%2Fsrc%2FSUMMARY.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2FSUMMARY.md?ref=5d2512ec5b03a1155054df881e40e35fc87d6351", "patch": "@@ -25,7 +25,6 @@\n     - [cfg_target_has_atomic](language-features/cfg-target-has-atomic.md)\n     - [cfg_target_thread_local](language-features/cfg-target-thread-local.md)\n     - [cfg_target_vendor](language-features/cfg-target-vendor.md)\n-    - [closure_to_fn_coercion](language-features/closure-to-fn-coercion.md)\n     - [compiler_builtins](language-features/compiler-builtins.md)\n     - [concat_idents](language-features/concat-idents.md)\n     - [conservative_impl_trait](language-features/conservative-impl-trait.md)"}, {"sha": "4e3b735e24fb6de326475324f7ad416b619328f9", "filename": "src/doc/unstable-book/src/language-features/closure-to-fn-coercion.md", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/28fd1e519a3807c632d58d01e73b4948000639ba/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fclosure-to-fn-coercion.md", "raw_url": "https://github.com/rust-lang/rust/raw/28fd1e519a3807c632d58d01e73b4948000639ba/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fclosure-to-fn-coercion.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fclosure-to-fn-coercion.md?ref=28fd1e519a3807c632d58d01e73b4948000639ba", "patch": "@@ -1,7 +0,0 @@\n-# `closure_to_fn_coercion`\n-\n-The tracking issue for this feature is: [#39817]\n-\n-[#39817]: https://github.com/rust-lang/rust/issues/39817\n-\n-------------------------"}, {"sha": "883a0a9d88a1c083d94170415aaff3aa0004ce8a", "filename": "src/librustc_typeck/check/coercion.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5d2512ec5b03a1155054df881e40e35fc87d6351/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d2512ec5b03a1155054df881e40e35fc87d6351/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs?ref=5d2512ec5b03a1155054df881e40e35fc87d6351", "patch": "@@ -76,7 +76,6 @@ use rustc::ty::relate::RelateResult;\n use rustc::ty::subst::Subst;\n use errors::DiagnosticBuilder;\n use syntax::abi;\n-use syntax::feature_gate;\n use syntax::ptr::P;\n use syntax_pos;\n \n@@ -614,14 +613,6 @@ impl<'f, 'gcx, 'tcx> Coerce<'f, 'gcx, 'tcx> {\n         let node_id_a = self.tcx.hir.as_local_node_id(def_id_a).unwrap();\n         match b.sty {\n             ty::TyFnPtr(_) if self.tcx.with_freevars(node_id_a, |v| v.is_empty()) => {\n-                if !self.tcx.sess.features.borrow().closure_to_fn_coercion {\n-                    feature_gate::emit_feature_err(&self.tcx.sess.parse_sess,\n-                                                   \"closure_to_fn_coercion\",\n-                                                   self.cause.span,\n-                                                   feature_gate::GateIssue::Language,\n-                                                   feature_gate::CLOSURE_TO_FN_COERCION);\n-                    return self.unify_and(a, b, identity());\n-                }\n                 // We coerce the closure, which has fn type\n                 //     `extern \"rust-call\" fn((arg0,arg1,...)) -> _`\n                 // to"}, {"sha": "6bdd02d583cc7eb70cbf73786da7a2d2d9b67049", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5d2512ec5b03a1155054df881e40e35fc87d6351/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d2512ec5b03a1155054df881e40e35fc87d6351/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=5d2512ec5b03a1155054df881e40e35fc87d6351", "patch": "@@ -321,9 +321,6 @@ declare_features! (\n     // `extern \"msp430-interrupt\" fn()`\n     (active, abi_msp430_interrupt, \"1.16.0\", Some(38487)),\n \n-    // Coerces non capturing closures to function pointers\n-    (active, closure_to_fn_coercion, \"1.17.0\", Some(39817)),\n-\n     // Used to identify crates that contain sanitizer runtimes\n     // rustc internal\n     (active, sanitizer_runtime, \"1.17.0\", None),\n@@ -427,6 +424,8 @@ declare_features! (\n     (accepted, loop_break_value, \"1.19.0\", Some(37339)),\n     // Permits numeric fields in struct expressions and patterns.\n     (accepted, relaxed_adts, \"1.19.0\", Some(35626)),\n+    // Coerces non capturing closures to function pointers\n+    (accepted, closure_to_fn_coercion, \"1.19.0\", Some(39817)),\n );\n \n // If you change this, please modify src/doc/unstable-book as well. You must\n@@ -1026,9 +1025,6 @@ pub const EXPLAIN_VIS_MATCHER: &'static str =\n pub const EXPLAIN_PLACEMENT_IN: &'static str =\n     \"placement-in expression syntax is experimental and subject to change.\";\n \n-pub const CLOSURE_TO_FN_COERCION: &'static str =\n-    \"non-capturing closure to fn coercion is experimental\";\n-\n struct PostExpansionVisitor<'a> {\n     context: &'a Context<'a>,\n }"}, {"sha": "d074a35628ea876994255253b5639923308f3175", "filename": "src/test/compile-fail/feature-gate-closure_to_fn_coercion.rs", "status": "removed", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/28fd1e519a3807c632d58d01e73b4948000639ba/src%2Ftest%2Fcompile-fail%2Ffeature-gate-closure_to_fn_coercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28fd1e519a3807c632d58d01e73b4948000639ba/src%2Ftest%2Fcompile-fail%2Ffeature-gate-closure_to_fn_coercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-closure_to_fn_coercion.rs?ref=28fd1e519a3807c632d58d01e73b4948000639ba", "patch": "@@ -1,45 +0,0 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// ignore-stage0: new feature, remove this when SNAP\n-// revisions: a b\n-\n-#[cfg(a)]\n-mod a {\n-    const FOO: fn(u8) -> u8 = |v: u8| { v };\n-    //[a]~^ ERROR non-capturing closure to fn coercion is experimental\n-    //[a]~^^ ERROR mismatched types\n-\n-    const BAR: [fn(&mut u32); 1] = [\n-        |v: &mut u32| *v += 1,\n-    //[a]~^ ERROR non-capturing closure to fn coercion is experimental\n-    //[a]~^^ ERROR mismatched types\n-    ];\n-}\n-\n-#[cfg(b)]\n-mod b {\n-    fn func_specific() -> (fn() -> u32) {\n-        || return 42\n-        //[b]~^ ERROR non-capturing closure to fn coercion is experimental\n-        //[b]~^^ ERROR mismatched types\n-    }\n-    fn foo() {\n-        // Items\n-        assert_eq!(func_specific()(), 42);\n-        let foo: fn(u8) -> u8 = |v: u8| { v };\n-        //[b]~^ ERROR non-capturing closure to fn coercion is experimental\n-        //[b]~^^ ERROR mismatched types\n-    }\n-\n-}\n-\n-\n-"}, {"sha": "7daf4bcbaa44b970e0adab3e08d01ff0f3eb8f20", "filename": "src/test/compile-fail/issue-40000.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d2512ec5b03a1155054df881e40e35fc87d6351/src%2Ftest%2Fcompile-fail%2Fissue-40000.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d2512ec5b03a1155054df881e40e35fc87d6351/src%2Ftest%2Fcompile-fail%2Fissue-40000.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-40000.rs?ref=5d2512ec5b03a1155054df881e40e35fc87d6351", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(closure_to_fn_coercion)]\n-\n fn main() {\n     let bar: fn(&mut u32) = |_| {};\n "}, {"sha": "7fb26bdc9360d83569460ef8b85838bf62c353aa", "filename": "src/test/run-pass/closure-to-fn-coercion.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5d2512ec5b03a1155054df881e40e35fc87d6351/src%2Ftest%2Frun-pass%2Fclosure-to-fn-coercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d2512ec5b03a1155054df881e40e35fc87d6351/src%2Ftest%2Frun-pass%2Fclosure-to-fn-coercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclosure-to-fn-coercion.rs?ref=5d2512ec5b03a1155054df881e40e35fc87d6351", "patch": "@@ -8,10 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-stage0: new feature, remove this when SNAP\n-\n-#![feature(closure_to_fn_coercion)]\n-\n const FOO: fn(u8) -> u8 = |v: u8| { v };\n \n const BAR: [fn(&mut u32); 5] = ["}, {"sha": "41da3089c884e1a723fc8b738004f3c905608cb5", "filename": "src/test/run-pass/closure_to_fn_coercion-expected-types.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5d2512ec5b03a1155054df881e40e35fc87d6351/src%2Ftest%2Frun-pass%2Fclosure_to_fn_coercion-expected-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d2512ec5b03a1155054df881e40e35fc87d6351/src%2Ftest%2Frun-pass%2Fclosure_to_fn_coercion-expected-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclosure_to_fn_coercion-expected-types.rs?ref=5d2512ec5b03a1155054df881e40e35fc87d6351", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n // Ensure that we deduce expected argument types when a `fn()` type is expected (#41755)\n \n-#![feature(closure_to_fn_coercion)]\n fn foo(f: fn(Vec<u32>) -> usize) { }\n \n fn main() {"}]}