{"sha": "7baf48ffc0eb94f15165191d5b2808822995ac82", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiYWY0OGZmYzBlYjk0ZjE1MTY1MTkxZDViMjgwODgyMjk5NWFjODI=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-11-02T05:14:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-02T05:14:36Z"}, "message": "Rollup merge of #78620 - gabhijit:bitops_doc_fix, r=m-ou-se\n\nTrivial fixes to bitwise operator documentation\n\nAdded fixes to documentation of `BitAnd`, `BitOr`, `BitXor` and\n`BitAndAssign`, where the documentation for implementation on\n`Vector<bool>` was using logical operators in place of the bitwise\noperators.\n\nr? @steveklabnik\nCloses #78619", "tree": {"sha": "ab9a415b18584ce7880c386837e4fd83270fe4a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab9a415b18584ce7880c386837e4fd83270fe4a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7baf48ffc0eb94f15165191d5b2808822995ac82", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfn5W8CRBK7hj4Ov3rIwAAdHIIALAt6cGDCsvtikakZ0zBYEt0\nBIdbYXYRu+JmaYM3gYXrYXyPw4f9LOUSfC9qp+P/gfuKiMf5JnthYIe1xKmV2I+c\n5BH/GUbaIryq5ibi7yZ6K1rYllv9zxkibiSRAq0ADSqoKbuLkYBxQ5a8SLyEqIz3\ni77yx1fGN17VXDLpGRvZ6N/kJPOQTX05oWHyAgAHM+440Y3/pRdiqTHMm483uyOy\nzJZmJWlcul4Xbkzw3lyw0hFbUwhtPQmmEWFZizBVaLIGar6zwVKPSVE/AroVkwiN\nVm4apAdgl1n2eQjg5iVeFSEkcsjGTFD0wxf0Fe5H7YcSjLsJA3AlEUopeZsJQx8=\n=d8An\n-----END PGP SIGNATURE-----\n", "payload": "tree ab9a415b18584ce7880c386837e4fd83270fe4a6\nparent 61305d5ab4f6a3ca09a62a5f13c3ea3f10e69e9f\nparent d422e2424f08ebc420882e2a668174028341dc65\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1604294076 +0900\ncommitter GitHub <noreply@github.com> 1604294076 +0900\n\nRollup merge of #78620 - gabhijit:bitops_doc_fix, r=m-ou-se\n\nTrivial fixes to bitwise operator documentation\n\nAdded fixes to documentation of `BitAnd`, `BitOr`, `BitXor` and\n`BitAndAssign`, where the documentation for implementation on\n`Vector<bool>` was using logical operators in place of the bitwise\noperators.\n\nr? @steveklabnik\nCloses #78619\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7baf48ffc0eb94f15165191d5b2808822995ac82", "html_url": "https://github.com/rust-lang/rust/commit/7baf48ffc0eb94f15165191d5b2808822995ac82", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7baf48ffc0eb94f15165191d5b2808822995ac82/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61305d5ab4f6a3ca09a62a5f13c3ea3f10e69e9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/61305d5ab4f6a3ca09a62a5f13c3ea3f10e69e9f", "html_url": "https://github.com/rust-lang/rust/commit/61305d5ab4f6a3ca09a62a5f13c3ea3f10e69e9f"}, {"sha": "d422e2424f08ebc420882e2a668174028341dc65", "url": "https://api.github.com/repos/rust-lang/rust/commits/d422e2424f08ebc420882e2a668174028341dc65", "html_url": "https://github.com/rust-lang/rust/commit/d422e2424f08ebc420882e2a668174028341dc65"}], "stats": {"total": 35, "additions": 23, "deletions": 12}, "files": [{"sha": "51f804381734545f946fe411bdb123197ac5f6e6", "filename": "library/core/src/ops/bit.rs", "status": "modified", "additions": 23, "deletions": 12, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/7baf48ffc0eb94f15165191d5b2808822995ac82/library%2Fcore%2Fsrc%2Fops%2Fbit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7baf48ffc0eb94f15165191d5b2808822995ac82/library%2Fcore%2Fsrc%2Fops%2Fbit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fops%2Fbit.rs?ref=7baf48ffc0eb94f15165191d5b2808822995ac82", "patch": "@@ -109,10 +109,12 @@ not_impl! { bool usize u8 u16 u32 u64 u128 isize i8 i16 i32 i64 i128 }\n ///     fn bitand(self, Self(rhs): Self) -> Self::Output {\n ///         let Self(lhs) = self;\n ///         assert_eq!(lhs.len(), rhs.len());\n-///         Self(lhs.iter()\n+///         Self(\n+///             lhs.iter()\n ///                 .zip(rhs.iter())\n-///                 .map(|(x, y)| *x && *y)\n-///                 .collect())\n+///                 .map(|(x, y)| *x & *y)\n+///                 .collect()\n+///         )\n ///     }\n /// }\n ///\n@@ -207,7 +209,12 @@ bitand_impl! { bool usize u8 u16 u32 u64 u128 isize i8 i16 i32 i64 i128 }\n ///     fn bitor(self, Self(rhs): Self) -> Self::Output {\n ///         let Self(lhs) = self;\n ///         assert_eq!(lhs.len(), rhs.len());\n-///         Self(lhs.iter().zip(rhs.iter()).map(|(x, y)| *x || *y).collect())\n+///         Self(\n+///             lhs.iter()\n+///                 .zip(rhs.iter())\n+///                 .map(|(x, y)| *x | *y)\n+///                 .collect()\n+///         )\n ///     }\n /// }\n ///\n@@ -302,10 +309,12 @@ bitor_impl! { bool usize u8 u16 u32 u64 u128 isize i8 i16 i32 i64 i128 }\n ///     fn bitxor(self, Self(rhs): Self) -> Self::Output {\n ///         let Self(lhs) = self;\n ///         assert_eq!(lhs.len(), rhs.len());\n-///         Self(lhs.iter()\n+///         Self(\n+///             lhs.iter()\n ///                 .zip(rhs.iter())\n-///                 .map(|(x, y)| (*x || *y) && !(*x && *y))\n-///                 .collect())\n+///                 .map(|(x, y)| *x ^ *y)\n+///                 .collect()\n+///         )\n ///     }\n /// }\n ///\n@@ -643,11 +652,13 @@ shr_impl_all! { u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize }\n ///     // `rhs` is the \"right-hand side\" of the expression `a &= b`.\n ///     fn bitand_assign(&mut self, rhs: Self) {\n ///         assert_eq!(self.0.len(), rhs.0.len());\n-///         *self = Self(self.0\n-///                          .iter()\n-///                          .zip(rhs.0.iter())\n-///                          .map(|(x, y)| *x && *y)\n-///                          .collect());\n+///         *self = Self(\n+///             self.0\n+///                 .iter()\n+///                 .zip(rhs.0.iter())\n+///                 .map(|(x, y)| *x & *y)\n+///                 .collect()\n+///         );\n ///     }\n /// }\n ///"}]}