{"sha": "5e3be09b58e5ef96573db8d412a8ed5146a47ff1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlM2JlMDliNThlNWVmOTY1NzNkYjhkNDEyYThlZDUxNDZhNDdmZjE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2016-12-10T23:27:42Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2016-12-10T23:27:42Z"}, "message": "Check the license of vendored deps", "tree": {"sha": "ac68a845721a9fd28246fb2fe1e68804f1fbaa4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac68a845721a9fd28246fb2fe1e68804f1fbaa4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e3be09b58e5ef96573db8d412a8ed5146a47ff1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e3be09b58e5ef96573db8d412a8ed5146a47ff1", "html_url": "https://github.com/rust-lang/rust/commit/5e3be09b58e5ef96573db8d412a8ed5146a47ff1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e3be09b58e5ef96573db8d412a8ed5146a47ff1/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c79d0b40a0e3e9f87ea022054577c5766b36e819", "url": "https://api.github.com/repos/rust-lang/rust/commits/c79d0b40a0e3e9f87ea022054577c5766b36e819", "html_url": "https://github.com/rust-lang/rust/commit/c79d0b40a0e3e9f87ea022054577c5766b36e819"}], "stats": {"total": 75, "additions": 75, "deletions": 0}, "files": [{"sha": "7592c09a91380b518c4b9214a6480c30d4c224da", "filename": "src/tools/tidy/src/deps.rs", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/5e3be09b58e5ef96573db8d412a8ed5146a47ff1/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e3be09b58e5ef96573db8d412a8ed5146a47ff1/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs?ref=5e3be09b58e5ef96573db8d412a8ed5146a47ff1", "patch": "@@ -0,0 +1,73 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! Check license of third-party deps by inspecting src/vendor\n+\n+use std::fs::File;\n+use std::io::Read;\n+use std::path::Path;\n+\n+static LICENSES: &'static [&'static str] = &[\n+    \"MIT/Apache-2.0\"\n+];\n+\n+pub fn check(path: &Path, bad: &mut bool) {\n+    let path = path.join(\"vendor\");\n+    assert!(path.exists(), \"vendor directory missing\");\n+    let mut saw_dir = false;\n+    for dir in t!(path.read_dir()) {\n+        saw_dir = true;\n+        let dir = t!(dir);\n+        let toml = dir.path().join(\"Cargo.toml\");\n+        if !check_license(&toml) {\n+            *bad = true;\n+        }\n+    }\n+    assert!(saw_dir, \"no vendored source\");\n+}\n+\n+fn check_license(path: &Path) -> bool {\n+    if !path.exists() {\n+        panic!(\"{} does not exist\", path.display());\n+    }\n+    let mut contents = String::new();\n+    t!(t!(File::open(path)).read_to_string(&mut contents));\n+\n+    let mut found_license = false;\n+    for line in contents.lines() {\n+        if !line.starts_with(\"license\") {\n+            continue;\n+        }\n+        let license = extract_license(line);\n+        if !LICENSES.contains(&&*license) {\n+            println!(\"invalid license {} in {}\", license, path.display());\n+            return false;\n+        }\n+        found_license = true;\n+        break;\n+    }\n+    if !found_license {\n+        println!(\"no license in {}\", path.display());\n+        return false;\n+    }\n+\n+    true\n+}\n+\n+fn extract_license(line: &str) -> String {\n+    let first_quote = line.find('\"');\n+    let last_quote = line.rfind('\"');\n+    if let (Some(f), Some(l)) = (first_quote, last_quote) {\n+        let license = &line[f + 1 .. l];\n+        license.into()\n+    } else {\n+        \"bad-license-parse\".into()\n+    }\n+}"}, {"sha": "7566580b1a5f2f904317c98d6a424c7d38bb8e33", "filename": "src/tools/tidy/src/main.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5e3be09b58e5ef96573db8d412a8ed5146a47ff1/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e3be09b58e5ef96573db8d412a8ed5146a47ff1/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs?ref=5e3be09b58e5ef96573db8d412a8ed5146a47ff1", "patch": "@@ -36,6 +36,7 @@ mod errors;\n mod features;\n mod cargo;\n mod pal;\n+mod deps;\n \n fn main() {\n     let path = env::args_os().skip(1).next().expect(\"need an argument\");\n@@ -48,6 +49,7 @@ fn main() {\n     cargo::check(&path, &mut bad);\n     features::check(&path, &mut bad);\n     pal::check(&path, &mut bad);\n+    deps::check(&path, &mut bad);\n \n     if bad {\n         panic!(\"some tidy checks failed\");"}]}