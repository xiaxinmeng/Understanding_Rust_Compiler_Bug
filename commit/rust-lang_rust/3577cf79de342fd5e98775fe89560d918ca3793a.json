{"sha": "3577cf79de342fd5e98775fe89560d918ca3793a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1NzdjZjc5ZGUzNDJmZDVlOTg3NzVmZTg5NTYwZDkxOGNhMzc5M2E=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-15T19:49:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-15T19:49:39Z"}, "message": "Auto merge of #6500 - Javier-varez:case_sensitive_file_extensions, r=llogiq\n\nCase sensitive file extensions\n\nCloses #6425\n\nLooks for ends_with methods calls with case sensitive extension comparisons.\n\nchangelog: Add new lint that warns about case-sensitive file extension comparisons.", "tree": {"sha": "fd1b9298b006ff3e8c56fc0d0ca37e3eb8f0dd6b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd1b9298b006ff3e8c56fc0d0ca37e3eb8f0dd6b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3577cf79de342fd5e98775fe89560d918ca3793a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3577cf79de342fd5e98775fe89560d918ca3793a", "html_url": "https://github.com/rust-lang/rust/commit/3577cf79de342fd5e98775fe89560d918ca3793a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3577cf79de342fd5e98775fe89560d918ca3793a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d1e129851a6133da72bc44eea9a48530d42e54d", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d1e129851a6133da72bc44eea9a48530d42e54d", "html_url": "https://github.com/rust-lang/rust/commit/2d1e129851a6133da72bc44eea9a48530d42e54d"}, {"sha": "e56973a8545d384d6dcb5271b54c90c584a58065", "url": "https://api.github.com/repos/rust-lang/rust/commits/e56973a8545d384d6dcb5271b54c90c584a58065", "html_url": "https://github.com/rust-lang/rust/commit/e56973a8545d384d6dcb5271b54c90c584a58065"}], "stats": {"total": 186, "additions": 185, "deletions": 1}, "files": [{"sha": "b0e9ad55b4f556b4758ebf27e7c2648dd0c2f8a3", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3577cf79de342fd5e98775fe89560d918ca3793a/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/3577cf79de342fd5e98775fe89560d918ca3793a/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=3577cf79de342fd5e98775fe89560d918ca3793a", "patch": "@@ -1878,6 +1878,7 @@ Released 2018-09-13\n [`boxed_local`]: https://rust-lang.github.io/rust-clippy/master/index.html#boxed_local\n [`builtin_type_shadow`]: https://rust-lang.github.io/rust-clippy/master/index.html#builtin_type_shadow\n [`cargo_common_metadata`]: https://rust-lang.github.io/rust-clippy/master/index.html#cargo_common_metadata\n+[`case_sensitive_file_extension_comparisons`]: https://rust-lang.github.io/rust-clippy/master/index.html#case_sensitive_file_extension_comparisons\n [`cast_lossless`]: https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless\n [`cast_possible_truncation`]: https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation\n [`cast_possible_wrap`]: https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap"}, {"sha": "38098f8a14c783a0ae8a6b7c7b025554c518cfb6", "filename": "clippy_lints/Cargo.toml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3577cf79de342fd5e98775fe89560d918ca3793a/clippy_lints%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/3577cf79de342fd5e98775fe89560d918ca3793a/clippy_lints%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2FCargo.toml?ref=3577cf79de342fd5e98775fe89560d918ca3793a", "patch": "@@ -34,6 +34,8 @@ rustc-semver=\"1.1.0\"\n url = { version =  \"2.1.0\", features = [\"serde\"] }\n quote = \"1\"\n syn = { version = \"1\", features = [\"full\"] }\n+regex = \"1.4\"\n+lazy_static = \"1.4\"\n \n [features]\n deny-warnings = []"}, {"sha": "d5347ce6ed756d6faf97a9e8cb77fce1947fe58f", "filename": "clippy_lints/src/case_sensitive_file_extension_comparisons.rs", "status": "added", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/3577cf79de342fd5e98775fe89560d918ca3793a/clippy_lints%2Fsrc%2Fcase_sensitive_file_extension_comparisons.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3577cf79de342fd5e98775fe89560d918ca3793a/clippy_lints%2Fsrc%2Fcase_sensitive_file_extension_comparisons.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcase_sensitive_file_extension_comparisons.rs?ref=3577cf79de342fd5e98775fe89560d918ca3793a", "patch": "@@ -0,0 +1,88 @@\n+use crate::utils::paths::STRING;\n+use crate::utils::{match_def_path, span_lint_and_help};\n+use if_chain::if_chain;\n+use lazy_static::lazy_static;\n+use regex::Regex;\n+use rustc_ast::ast::LitKind;\n+use rustc_hir::{Expr, ExprKind, PathSegment};\n+use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n+use rustc_span::{source_map::Spanned, Span};\n+\n+declare_clippy_lint! {\n+    /// **What it does:**\n+    /// Checks for calls to `ends_with` with possible file extensions\n+    /// and suggests to use a case-insensitive approach instead.\n+    ///\n+    /// **Why is this bad?**\n+    /// `ends_with` is case-sensitive and may not detect files with a valid extension.\n+    ///\n+    /// **Known problems:** None.\n+    ///\n+    /// **Example:**\n+    ///\n+    /// ```rust\n+    /// fn is_rust_file(filename: &str) -> bool {\n+    ///     filename.ends_with(\".rs\")\n+    /// }\n+    /// ```\n+    /// Use instead:\n+    /// ```rust\n+    /// fn is_rust_file(filename: &str) -> bool {\n+    ///     filename.rsplit('.').next().map(|ext| ext.eq_ignore_ascii_case(\"rs\")) == Some(true)\n+    /// }\n+    /// ```\n+    pub CASE_SENSITIVE_FILE_EXTENSION_COMPARISONS,\n+    pedantic,\n+    \"Checks for calls to ends_with with case-sensitive file extensions\"\n+}\n+\n+declare_lint_pass!(CaseSensitiveFileExtensionComparisons => [CASE_SENSITIVE_FILE_EXTENSION_COMPARISONS]);\n+\n+fn check_case_sensitive_file_extension_comparison(ctx: &LateContext<'_>, expr: &Expr<'_>) -> Option<Span> {\n+    lazy_static! {\n+        static ref RE: Regex = Regex::new(r\"^\\.([a-z0-9]{1,5}|[A-Z0-9]{1,5})$\").unwrap();\n+    }\n+    if_chain! {\n+        if let ExprKind::MethodCall(PathSegment { ident, .. }, _, [obj, extension, ..], span) = expr.kind;\n+        if ident.as_str() == \"ends_with\";\n+        if let ExprKind::Lit(Spanned { node: LitKind::Str(ext_literal, ..), ..}) = extension.kind;\n+        if RE.is_match(&ext_literal.as_str());\n+        then {\n+            let mut ty = ctx.typeck_results().expr_ty(obj);\n+            ty = match ty.kind() {\n+                ty::Ref(_, ty, ..) => ty,\n+                _ => ty\n+            };\n+\n+            match ty.kind() {\n+                ty::Str => {\n+                    return Some(span);\n+                },\n+                ty::Adt(&ty::AdtDef { did, .. }, _) => {\n+                    if match_def_path(ctx, did, &STRING) {\n+                        return Some(span);\n+                    }\n+                },\n+                _ => { return None; }\n+            }\n+        }\n+    }\n+    None\n+}\n+\n+impl LateLintPass<'tcx> for CaseSensitiveFileExtensionComparisons {\n+    fn check_expr(&mut self, ctx: &LateContext<'tcx>, expr: &'tcx Expr<'tcx>) {\n+        if let Some(span) = check_case_sensitive_file_extension_comparison(ctx, expr) {\n+            span_lint_and_help(\n+                ctx,\n+                CASE_SENSITIVE_FILE_EXTENSION_COMPARISONS,\n+                span,\n+                \"case-sensitive file extension comparison\",\n+                None,\n+                \"consider using a case-insensitive comparison instead\",\n+            );\n+        }\n+    }\n+}"}, {"sha": "4f9ebb4af3d28de47880f6c7852336327329e73a", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3577cf79de342fd5e98775fe89560d918ca3793a/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3577cf79de342fd5e98775fe89560d918ca3793a/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=3577cf79de342fd5e98775fe89560d918ca3793a", "patch": "@@ -170,6 +170,7 @@ mod blocks_in_if_conditions;\n mod booleans;\n mod bytecount;\n mod cargo_common_metadata;\n+mod case_sensitive_file_extension_comparisons;\n mod checked_conversions;\n mod cognitive_complexity;\n mod collapsible_if;\n@@ -558,6 +559,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         &booleans::NONMINIMAL_BOOL,\n         &bytecount::NAIVE_BYTECOUNT,\n         &cargo_common_metadata::CARGO_COMMON_METADATA,\n+        &case_sensitive_file_extension_comparisons::CASE_SENSITIVE_FILE_EXTENSION_COMPARISONS,\n         &checked_conversions::CHECKED_CONVERSIONS,\n         &cognitive_complexity::COGNITIVE_COMPLEXITY,\n         &collapsible_if::COLLAPSIBLE_ELSE_IF,\n@@ -1226,6 +1228,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|| box zero_sized_map_values::ZeroSizedMapValues);\n     store.register_late_pass(|| box vec_init_then_push::VecInitThenPush::default());\n     store.register_late_pass(move || box types::PtrAsPtr::new(msrv));\n+    store.register_late_pass(|| box case_sensitive_file_extension_comparisons::CaseSensitiveFileExtensionComparisons);\n \n     store.register_group(true, \"clippy::restriction\", Some(\"clippy_restriction\"), vec![\n         LintId::of(&arithmetic::FLOAT_ARITHMETIC),\n@@ -1283,6 +1286,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&await_holding_invalid::AWAIT_HOLDING_LOCK),\n         LintId::of(&await_holding_invalid::AWAIT_HOLDING_REFCELL_REF),\n         LintId::of(&bit_mask::VERBOSE_BIT_MASK),\n+        LintId::of(&case_sensitive_file_extension_comparisons::CASE_SENSITIVE_FILE_EXTENSION_COMPARISONS),\n         LintId::of(&checked_conversions::CHECKED_CONVERSIONS),\n         LintId::of(&copies::SAME_FUNCTIONS_IN_IF_CONDITION),\n         LintId::of(&copy_iterator::COPY_ITERATOR),"}, {"sha": "94f5e616cace8cb0fbe8ea83e9ef6911809db16b", "filename": "tests/compile-test.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3577cf79de342fd5e98775fe89560d918ca3793a/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3577cf79de342fd5e98775fe89560d918ca3793a/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=3577cf79de342fd5e98775fe89560d918ca3793a", "patch": "@@ -44,7 +44,9 @@ fn third_party_crates() -> String {\n         };\n         if let Some(name) = path.file_name().and_then(OsStr::to_str) {\n             for dep in CRATES {\n-                if name.starts_with(&format!(\"lib{}-\", dep)) && name.ends_with(\".rlib\") {\n+                if name.starts_with(&format!(\"lib{}-\", dep))\n+                    && name.rsplit('.').next().map(|ext| ext.eq_ignore_ascii_case(\"rlib\")) == Some(true)\n+                {\n                     if let Some(old) = crates.insert(dep, path.clone()) {\n                         panic!(\"Found multiple rlibs for crate `{}`: `{:?}` and `{:?}\", dep, old, path);\n                     }"}, {"sha": "68719c2bc6d05ea1afa005e00caee7f3c83b2418", "filename": "tests/ui/case_sensitive_file_extension_comparisons.rs", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/3577cf79de342fd5e98775fe89560d918ca3793a/tests%2Fui%2Fcase_sensitive_file_extension_comparisons.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3577cf79de342fd5e98775fe89560d918ca3793a/tests%2Fui%2Fcase_sensitive_file_extension_comparisons.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcase_sensitive_file_extension_comparisons.rs?ref=3577cf79de342fd5e98775fe89560d918ca3793a", "patch": "@@ -0,0 +1,44 @@\n+#![warn(clippy::case_sensitive_file_extension_comparisons)]\n+\n+use std::string::String;\n+\n+struct TestStruct {}\n+\n+impl TestStruct {\n+    fn ends_with(self, arg: &str) {}\n+}\n+\n+fn is_rust_file(filename: &str) -> bool {\n+    filename.ends_with(\".rs\")\n+}\n+\n+fn main() {\n+    // std::string::String and &str should trigger the lint failure with .ext12\n+    let _ = String::from(\"\").ends_with(\".ext12\");\n+    let _ = \"str\".ends_with(\".ext12\");\n+\n+    // The test struct should not trigger the lint failure with .ext12\n+    TestStruct {}.ends_with(\".ext12\");\n+\n+    // std::string::String and &str should trigger the lint failure with .EXT12\n+    let _ = String::from(\"\").ends_with(\".EXT12\");\n+    let _ = \"str\".ends_with(\".EXT12\");\n+\n+    // The test struct should not trigger the lint failure with .EXT12\n+    TestStruct {}.ends_with(\".EXT12\");\n+\n+    // Should not trigger the lint failure with .eXT12\n+    let _ = String::from(\"\").ends_with(\".eXT12\");\n+    let _ = \"str\".ends_with(\".eXT12\");\n+    TestStruct {}.ends_with(\".eXT12\");\n+\n+    // Should not trigger the lint failure with .EXT123 (too long)\n+    let _ = String::from(\"\").ends_with(\".EXT123\");\n+    let _ = \"str\".ends_with(\".EXT123\");\n+    TestStruct {}.ends_with(\".EXT123\");\n+\n+    // Shouldn't fail if it doesn't start with a dot\n+    let _ = String::from(\"\").ends_with(\"a.ext\");\n+    let _ = \"str\".ends_with(\"a.extA\");\n+    TestStruct {}.ends_with(\"a.ext\");\n+}"}, {"sha": "05b98169f2d17b0dd1be7812b07acd5236fb566b", "filename": "tests/ui/case_sensitive_file_extension_comparisons.stderr", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/3577cf79de342fd5e98775fe89560d918ca3793a/tests%2Fui%2Fcase_sensitive_file_extension_comparisons.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3577cf79de342fd5e98775fe89560d918ca3793a/tests%2Fui%2Fcase_sensitive_file_extension_comparisons.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcase_sensitive_file_extension_comparisons.stderr?ref=3577cf79de342fd5e98775fe89560d918ca3793a", "patch": "@@ -0,0 +1,43 @@\n+error: case-sensitive file extension comparison\n+  --> $DIR/case_sensitive_file_extension_comparisons.rs:12:14\n+   |\n+LL |     filename.ends_with(\".rs\")\n+   |              ^^^^^^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::case-sensitive-file-extension-comparisons` implied by `-D warnings`\n+   = help: consider using a case-insensitive comparison instead\n+\n+error: case-sensitive file extension comparison\n+  --> $DIR/case_sensitive_file_extension_comparisons.rs:17:30\n+   |\n+LL |     let _ = String::from(\"\").ends_with(\".ext12\");\n+   |                              ^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using a case-insensitive comparison instead\n+\n+error: case-sensitive file extension comparison\n+  --> $DIR/case_sensitive_file_extension_comparisons.rs:18:19\n+   |\n+LL |     let _ = \"str\".ends_with(\".ext12\");\n+   |                   ^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using a case-insensitive comparison instead\n+\n+error: case-sensitive file extension comparison\n+  --> $DIR/case_sensitive_file_extension_comparisons.rs:24:30\n+   |\n+LL |     let _ = String::from(\"\").ends_with(\".EXT12\");\n+   |                              ^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using a case-insensitive comparison instead\n+\n+error: case-sensitive file extension comparison\n+  --> $DIR/case_sensitive_file_extension_comparisons.rs:25:19\n+   |\n+LL |     let _ = \"str\".ends_with(\".EXT12\");\n+   |                   ^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using a case-insensitive comparison instead\n+\n+error: aborting due to 5 previous errors\n+"}]}