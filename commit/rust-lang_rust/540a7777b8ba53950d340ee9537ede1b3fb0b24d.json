{"sha": "540a7777b8ba53950d340ee9537ede1b3fb0b24d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0MGE3Nzc3YjhiYTUzOTUwZDM0MGVlOTUzN2VkZTFiM2ZiMGIyNGQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-01-03T11:01:56Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-01-05T16:31:37Z"}, "message": "Don't ICE just because an impl is missing an associated type. Trust in the other compiler passes.\nFixes #17359.", "tree": {"sha": "09c0d15321822025ef783f60b63d842d239c9e5c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09c0d15321822025ef783f60b63d842d239c9e5c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/540a7777b8ba53950d340ee9537ede1b3fb0b24d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/540a7777b8ba53950d340ee9537ede1b3fb0b24d", "html_url": "https://github.com/rust-lang/rust/commit/540a7777b8ba53950d340ee9537ede1b3fb0b24d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/540a7777b8ba53950d340ee9537ede1b3fb0b24d/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8868942e845254abfd3623a709847d65e015a2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8868942e845254abfd3623a709847d65e015a2f", "html_url": "https://github.com/rust-lang/rust/commit/c8868942e845254abfd3623a709847d65e015a2f"}], "stats": {"total": 34, "additions": 29, "deletions": 5}, "files": [{"sha": "65f7ad296db519855ac5cd625d79f7b11c972db7", "filename": "src/librustc/middle/traits/project.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/540a7777b8ba53950d340ee9537ede1b3fb0b24d/src%2Flibrustc%2Fmiddle%2Ftraits%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/540a7777b8ba53950d340ee9537ede1b3fb0b24d/src%2Flibrustc%2Fmiddle%2Ftraits%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Fproject.rs?ref=540a7777b8ba53950d340ee9537ede1b3fb0b24d", "patch": "@@ -643,11 +643,12 @@ fn confirm_candidate<'cx,'tcx>(\n             match impl_ty {\n                 Some(ty) => (ty, impl_vtable.nested.to_vec()),\n                 None => {\n-                    selcx.tcx().sess.span_bug(\n-                        obligation.cause.span,\n-                        format!(\"impl `{}` did not contain projection for `{}`\",\n-                                impl_vtable.repr(selcx.tcx()),\n-                                obligation.repr(selcx.tcx())).as_slice());\n+                    // This means that the impl is missing a\n+                    // definition for the associated type. This error\n+                    // ought to be reported by the type checker method\n+                    // `check_impl_items_against_trait`, so here we\n+                    // just return ty_err.\n+                    (selcx.tcx().types.err, vec!())\n                 }\n             }\n         }"}, {"sha": "764b79c4cc649b6f82a50803732100757f6b9e18", "filename": "src/test/compile-fail/associated-types-issue-17359.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/540a7777b8ba53950d340ee9537ede1b3fb0b24d/src%2Ftest%2Fcompile-fail%2Fassociated-types-issue-17359.rs", "raw_url": "https://github.com/rust-lang/rust/raw/540a7777b8ba53950d340ee9537ede1b3fb0b24d/src%2Ftest%2Fcompile-fail%2Fassociated-types-issue-17359.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fassociated-types-issue-17359.rs?ref=540a7777b8ba53950d340ee9537ede1b3fb0b24d", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that we do not ICE when an impl is missing an associated type (and that we report\n+// a useful error, of course).\n+\n+#![feature(associated_types)]\n+\n+trait Trait {\n+    type Type;\n+}\n+\n+impl Trait for int {}  //~ ERROR missing: `Type`\n+\n+fn main() {}\n+"}]}