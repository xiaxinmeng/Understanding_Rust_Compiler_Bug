{"sha": "deea8f52d9803bb8a93d5dbd935970a20f07a51e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlZWE4ZjUyZDk4MDNiYjhhOTNkNWRiZDkzNTk3MGEyMGYwN2E1MWU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-08-06T11:34:28Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-08-06T12:28:31Z"}, "message": "allow to exclude certain files and directories", "tree": {"sha": "989408695c8c7347d4c9e907cf3f8feff7f2a982", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/989408695c8c7347d4c9e907cf3f8feff7f2a982"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/deea8f52d9803bb8a93d5dbd935970a20f07a51e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/deea8f52d9803bb8a93d5dbd935970a20f07a51e", "html_url": "https://github.com/rust-lang/rust/commit/deea8f52d9803bb8a93d5dbd935970a20f07a51e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/deea8f52d9803bb8a93d5dbd935970a20f07a51e/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "058c2daba1b81804d9f803e57c72f5702c124d9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/058c2daba1b81804d9f803e57c72f5702c124d9e", "html_url": "https://github.com/rust-lang/rust/commit/058c2daba1b81804d9f803e57c72f5702c124d9e"}], "stats": {"total": 58, "additions": 43, "deletions": 15}, "files": [{"sha": "6dcdc695a79e41db7bb05ed07ac02495d5c9f80a", "filename": "crates/ra_lsp_server/src/config.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/deea8f52d9803bb8a93d5dbd935970a20f07a51e/crates%2Fra_lsp_server%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/deea8f52d9803bb8a93d5dbd935970a20f07a51e/crates%2Fra_lsp_server%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fconfig.rs?ref=deea8f52d9803bb8a93d5dbd935970a20f07a51e", "patch": "@@ -1,7 +1,7 @@\n use serde::{Deserialize, Deserializer};\n \n /// Client provided initialization options\n-#[derive(Deserialize, Clone, Copy, Debug, PartialEq, Eq)]\n+#[derive(Deserialize, Clone, Debug, PartialEq, Eq)]\n #[serde(rename_all = \"camelCase\", default)]\n pub struct ServerConfig {\n     /// Whether the client supports our custom highlighting publishing decorations.\n@@ -18,12 +18,19 @@ pub struct ServerConfig {\n     #[serde(deserialize_with = \"nullable_bool_true\")]\n     pub show_workspace_loaded: bool,\n \n+    pub exclude_globs: Vec<String>,\n+\n     pub lru_capacity: Option<usize>,\n }\n \n impl Default for ServerConfig {\n     fn default() -> ServerConfig {\n-        ServerConfig { publish_decorations: false, show_workspace_loaded: true, lru_capacity: None }\n+        ServerConfig {\n+            publish_decorations: false,\n+            show_workspace_loaded: true,\n+            exclude_globs: Vec::new(),\n+            lru_capacity: None,\n+        }\n     }\n }\n "}, {"sha": "9d540a87e6eb5e7a5a17126ee79f2d0c1c9eb5bd", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/deea8f52d9803bb8a93d5dbd935970a20f07a51e/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/deea8f52d9803bb8a93d5dbd935970a20f07a51e/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=deea8f52d9803bb8a93d5dbd935970a20f07a51e", "patch": "@@ -56,6 +56,7 @@ pub fn main_loop(\n     msg_receiver: &Receiver<RawMessage>,\n     msg_sender: &Sender<RawMessage>,\n ) -> Result<()> {\n+    log::debug!(\"server_config: {:?}\", config);\n     // FIXME: support dynamic workspace loading.\n     let workspaces = {\n         let ws_worker = workspace_loader();\n@@ -77,11 +78,16 @@ pub fn main_loop(\n         }\n         loaded_workspaces\n     };\n-\n+    let globs = config\n+        .exclude_globs\n+        .iter()\n+        .map(|glob| ra_vfs_glob::Glob::new(glob))\n+        .collect::<std::result::Result<Vec<_>, _>>()?;\n     let mut state = WorldState::new(\n         ws_roots,\n         workspaces,\n         config.lru_capacity,\n+        &globs,\n         Options {\n             publish_decorations: config.publish_decorations,\n             show_workspace_loaded: config.show_workspace_loaded,"}, {"sha": "9990ef62e163928691fb8265607ba22bd84608b6", "filename": "crates/ra_lsp_server/src/world.rs", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/deea8f52d9803bb8a93d5dbd935970a20f07a51e/crates%2Fra_lsp_server%2Fsrc%2Fworld.rs", "raw_url": "https://github.com/rust-lang/rust/raw/deea8f52d9803bb8a93d5dbd935970a20f07a51e/crates%2Fra_lsp_server%2Fsrc%2Fworld.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fworld.rs?ref=deea8f52d9803bb8a93d5dbd935970a20f07a51e", "patch": "@@ -10,7 +10,7 @@ use ra_ide_api::{\n     Analysis, AnalysisChange, AnalysisHost, CrateGraph, FileId, LibraryData, SourceRootId,\n };\n use ra_vfs::{RootEntry, Vfs, VfsChange, VfsFile, VfsRoot};\n-use ra_vfs_glob::RustPackageFilterBuilder;\n+use ra_vfs_glob::{Glob, RustPackageFilterBuilder};\n use relative_path::RelativePathBuf;\n \n use crate::{\n@@ -56,25 +56,27 @@ impl WorldState {\n         folder_roots: Vec<PathBuf>,\n         workspaces: Vec<ProjectWorkspace>,\n         lru_capacity: Option<usize>,\n+        exclude_globs: &[Glob],\n         options: Options,\n     ) -> WorldState {\n         let mut change = AnalysisChange::new();\n \n         let mut roots = Vec::new();\n         roots.extend(folder_roots.iter().map(|path| {\n-            RootEntry::new(\n-                path.clone(),\n-                RustPackageFilterBuilder::default().set_member(true).into_vfs_filter(),\n-            )\n+            let mut filter = RustPackageFilterBuilder::default().set_member(true);\n+            for glob in exclude_globs.iter() {\n+                filter = filter.exclude(glob.clone());\n+            }\n+            RootEntry::new(path.clone(), filter.into_vfs_filter())\n         }));\n         for ws in workspaces.iter() {\n             roots.extend(ws.to_roots().into_iter().map(|pkg_root| {\n-                RootEntry::new(\n-                    pkg_root.path().clone(),\n-                    RustPackageFilterBuilder::default()\n-                        .set_member(pkg_root.is_member())\n-                        .into_vfs_filter(),\n-                )\n+                let mut filter =\n+                    RustPackageFilterBuilder::default().set_member(pkg_root.is_member());\n+                for glob in exclude_globs.iter() {\n+                    filter = filter.exclude(glob.clone());\n+                }\n+                RootEntry::new(pkg_root.path().clone(), filter.into_vfs_filter())\n             }));\n         }\n "}, {"sha": "7990d1d31b12f4b642a6bcb2e331b4150b1ed6bd", "filename": "docs/user/README.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/deea8f52d9803bb8a93d5dbd935970a20f07a51e/docs%2Fuser%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/deea8f52d9803bb8a93d5dbd935970a20f07a51e/docs%2Fuser%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2FREADME.md?ref=deea8f52d9803bb8a93d5dbd935970a20f07a51e", "patch": "@@ -71,6 +71,9 @@ See https://github.com/microsoft/vscode/issues/72308[microsoft/vscode#72308] for\n * `rust-analyzer.raLspServerPath`: path to `ra_lsp_server` executable\n * `rust-analyzer.enableCargoWatchOnStartup`: prompt to install & enable `cargo\n   watch` for live error highlighting (note, this **does not** use rust-analyzer)\n+* `rust-analyzer.excludeGlobs`: a list of glob-patterns for exclusion (see globset [docs](https://docs.rs/globset) for syntax).\n+  Note: glob patterns are applied to all Cargo packages and a rooted at a package root.\n+  This is not very intuitive and a limitation of a current implementation.\n * `rust-analyzer.cargo-watch.check-arguments`: cargo-watch check arguments.\n   (e.g: `--features=\"shumway,pdf\"` will run as `cargo watch -x \"check --features=\"shumway,pdf\"\"` )\n * `rust-analyzer.trace.server`: enables internal logging"}, {"sha": "48ab886bf87dd20c74ddb8eea72ea5ab1d34126e", "filename": "editors/code/package.json", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/deea8f52d9803bb8a93d5dbd935970a20f07a51e/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/deea8f52d9803bb8a93d5dbd935970a20f07a51e/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=deea8f52d9803bb8a93d5dbd935970a20f07a51e", "patch": "@@ -197,6 +197,11 @@\n                     ],\n                     \"description\": \"Whether to run `cargo watch` on startup\"\n                 },\n+                \"rust-analyzer.excludeGlobs\": {\n+                    \"type\": \"array\",\n+                    \"default\": \"[]\",\n+                    \"description\": \"Paths to exclude from analysis\"\n+                },\n                 \"rust-analyzer.cargo-watch.arguments\": {\n                     \"type\": \"string\",\n                     \"description\": \"`cargo-watch` arguments. (e.g: `--features=\\\"shumway,pdf\\\"` will run as `cargo watch -x \\\"check --features=\\\"shumway,pdf\\\"\\\"` )\","}, {"sha": "4df6b50ef7908ce9d6cb6e6e680230d56e241fd6", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/deea8f52d9803bb8a93d5dbd935970a20f07a51e/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/deea8f52d9803bb8a93d5dbd935970a20f07a51e/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=deea8f52d9803bb8a93d5dbd935970a20f07a51e", "patch": "@@ -22,6 +22,7 @@ export class Config {\n     public showWorkspaceLoadedNotification = true;\n     public lruCapacity: null | number = null;\n     public displayInlayHints = true;\n+    public excludeGlobs = [];\n     public cargoWatchOptions: CargoWatchOptions = {\n         enableOnStartup: 'ask',\n         trace: 'off',\n@@ -128,5 +129,8 @@ export class Config {\n         if (config.has('displayInlayHints')) {\n             this.displayInlayHints = config.get('displayInlayHints') as boolean;\n         }\n+        if (config.has('excludeGlobs')) {\n+            this.excludeGlobs = config.get('excludeGlobs') || [];\n+        }\n     }\n }"}, {"sha": "2b4c25c284469e36a3145459c77f5bd4449b7bdf", "filename": "editors/code/src/server.ts", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/deea8f52d9803bb8a93d5dbd935970a20f07a51e/editors%2Fcode%2Fsrc%2Fserver.ts", "raw_url": "https://github.com/rust-lang/rust/raw/deea8f52d9803bb8a93d5dbd935970a20f07a51e/editors%2Fcode%2Fsrc%2Fserver.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fserver.ts?ref=deea8f52d9803bb8a93d5dbd935970a20f07a51e", "patch": "@@ -36,7 +36,8 @@ export class Server {\n                 publishDecorations: true,\n                 showWorkspaceLoaded:\n                     Server.config.showWorkspaceLoadedNotification,\n-                lruCapacity: Server.config.lruCapacity\n+                lruCapacity: Server.config.lruCapacity,\n+                excludeGlobs: Server.config.excludeGlobs\n             },\n             traceOutputChannel\n         };"}]}