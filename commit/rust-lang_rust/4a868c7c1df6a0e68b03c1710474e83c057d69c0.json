{"sha": "4a868c7c1df6a0e68b03c1710474e83c057d69c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhODY4YzdjMWRmNmEwZTY4YjAzYzE3MTA0NzRlODNjMDU3ZDY5YzA=", "commit": {"author": {"name": "Fedor Indutny", "email": "fedor.indutny@gmail.com", "date": "2013-06-26T12:37:08Z"}, "committer": {"name": "Fedor Indutny", "email": "fedor.indutny@gmail.com", "date": "2013-07-08T06:36:43Z"}, "message": "libc: add errno values", "tree": {"sha": "80f1cd265011064cc153c046eac631371433af05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80f1cd265011064cc153c046eac631371433af05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a868c7c1df6a0e68b03c1710474e83c057d69c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a868c7c1df6a0e68b03c1710474e83c057d69c0", "html_url": "https://github.com/rust-lang/rust/commit/4a868c7c1df6a0e68b03c1710474e83c057d69c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a868c7c1df6a0e68b03c1710474e83c057d69c0/comments", "author": {"login": "indutny", "id": 238531, "node_id": "MDQ6VXNlcjIzODUzMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/238531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/indutny", "html_url": "https://github.com/indutny", "followers_url": "https://api.github.com/users/indutny/followers", "following_url": "https://api.github.com/users/indutny/following{/other_user}", "gists_url": "https://api.github.com/users/indutny/gists{/gist_id}", "starred_url": "https://api.github.com/users/indutny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/indutny/subscriptions", "organizations_url": "https://api.github.com/users/indutny/orgs", "repos_url": "https://api.github.com/users/indutny/repos", "events_url": "https://api.github.com/users/indutny/events{/privacy}", "received_events_url": "https://api.github.com/users/indutny/received_events", "type": "User", "site_admin": false}, "committer": {"login": "indutny", "id": 238531, "node_id": "MDQ6VXNlcjIzODUzMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/238531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/indutny", "html_url": "https://github.com/indutny", "followers_url": "https://api.github.com/users/indutny/followers", "following_url": "https://api.github.com/users/indutny/following{/other_user}", "gists_url": "https://api.github.com/users/indutny/gists{/gist_id}", "starred_url": "https://api.github.com/users/indutny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/indutny/subscriptions", "organizations_url": "https://api.github.com/users/indutny/orgs", "repos_url": "https://api.github.com/users/indutny/repos", "events_url": "https://api.github.com/users/indutny/events{/privacy}", "received_events_url": "https://api.github.com/users/indutny/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "822dc5f1f689d63846ded35f1929d0c2718857de", "url": "https://api.github.com/repos/rust-lang/rust/commits/822dc5f1f689d63846ded35f1929d0c2718857de", "html_url": "https://github.com/rust-lang/rust/commit/822dc5f1f689d63846ded35f1929d0c2718857de"}], "stats": {"total": 281, "additions": 281, "deletions": 0}, "files": [{"sha": "9cb81e76663844a0829373eddaa1b48e1143cdbc", "filename": "src/libstd/libc.rs", "status": "modified", "additions": 281, "deletions": 0, "changes": 281, "blob_url": "https://github.com/rust-lang/rust/blob/4a868c7c1df6a0e68b03c1710474e83c057d69c0/src%2Flibstd%2Flibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a868c7c1df6a0e68b03c1710474e83c057d69c0/src%2Flibstd%2Flibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flibc.rs?ref=4a868c7c1df6a0e68b03c1710474e83c057d69c0", "patch": "@@ -1269,6 +1269,41 @@ pub mod consts {\n             pub static _SC_XBS5_ILP32_OFF32 : c_int = 125;\n             pub static _SC_XBS5_ILP32_OFFBIG : c_int = 126;\n             pub static _SC_XBS5_LPBIG_OFFBIG : c_int = 128;\n+\n+            pub static EPERM : c_int = 1;\n+            pub static ENOENT : c_int = 2;\n+            pub static ESRCH : c_int = 3;\n+            pub static EINTR : c_int = 4;\n+            pub static EIO : c_int = 5;\n+            pub static ENXIO : c_int = 6;\n+            pub static E2BIG : c_int = 7;\n+            pub static ENOEXEC : c_int = 8;\n+            pub static EBADF : c_int = 9;\n+            pub static ECHILD : c_int = 10;\n+            pub static EAGAIN : c_int = 11;\n+            pub static ENOMEM : c_int = 12;\n+            pub static EACCES : c_int = 13;\n+            pub static EFAULT : c_int = 14;\n+            pub static ENOTBLK : c_int = 15;\n+            pub static EBUSY : c_int = 16;\n+            pub static EEXIST : c_int = 17;\n+            pub static EXDEV : c_int = 18;\n+            pub static ENODEV : c_int = 19;\n+            pub static ENOTDIR : c_int = 20;\n+            pub static EISDIR : c_int = 21;\n+            pub static EINVAL : c_int = 22;\n+            pub static ENFILE : c_int = 23;\n+            pub static EMFILE : c_int = 24;\n+            pub static ENOTTY : c_int = 25;\n+            pub static ETXTBSY : c_int = 26;\n+            pub static EFBIG : c_int = 27;\n+            pub static ENOSPC : c_int = 28;\n+            pub static ESPIPE : c_int = 29;\n+            pub static EROFS : c_int = 30;\n+            pub static EMLINK : c_int = 31;\n+            pub static EPIPE : c_int = 32;\n+            pub static EDOM : c_int = 33;\n+            pub static ERANGE : c_int = 34;\n         }\n         #[cfg(target_arch = \"mips\")]\n         pub mod posix88 {\n@@ -1394,6 +1429,41 @@ pub mod consts {\n             pub static _SC_XBS5_ILP32_OFF32 : c_int = 125;\n             pub static _SC_XBS5_ILP32_OFFBIG : c_int = 126;\n             pub static _SC_XBS5_LPBIG_OFFBIG : c_int = 128;\n+\n+            pub static EPERM : c_int = 1;\n+            pub static ENOENT : c_int = 2;\n+            pub static ESRCH : c_int = 3;\n+            pub static EINTR : c_int = 4;\n+            pub static EIO : c_int = 5;\n+            pub static ENXIO : c_int = 6;\n+            pub static E2BIG : c_int = 7;\n+            pub static ENOEXEC : c_int = 8;\n+            pub static EBADF : c_int = 9;\n+            pub static ECHILD : c_int = 10;\n+            pub static EAGAIN : c_int = 11;\n+            pub static ENOMEM : c_int = 12;\n+            pub static EACCES : c_int = 13;\n+            pub static EFAULT : c_int = 14;\n+            pub static ENOTBLK : c_int = 15;\n+            pub static EBUSY : c_int = 16;\n+            pub static EEXIST : c_int = 17;\n+            pub static EXDEV : c_int = 18;\n+            pub static ENODEV : c_int = 19;\n+            pub static ENOTDIR : c_int = 20;\n+            pub static EISDIR : c_int = 21;\n+            pub static EINVAL : c_int = 22;\n+            pub static ENFILE : c_int = 23;\n+            pub static EMFILE : c_int = 24;\n+            pub static ENOTTY : c_int = 25;\n+            pub static ETXTBSY : c_int = 26;\n+            pub static EFBIG : c_int = 27;\n+            pub static ENOSPC : c_int = 28;\n+            pub static ESPIPE : c_int = 29;\n+            pub static EROFS : c_int = 30;\n+            pub static EMLINK : c_int = 31;\n+            pub static EPIPE : c_int = 32;\n+            pub static EDOM : c_int = 33;\n+            pub static ERANGE : c_int = 34;\n         }\n         pub mod posix01 {\n             use libc::types::os::arch::c95::c_int;\n@@ -1656,6 +1726,108 @@ pub mod consts {\n             pub static _SC_SEM_VALUE_MAX : c_int = 50;\n             pub static _SC_SIGQUEUE_MAX : c_int = 51;\n             pub static _SC_TIMER_MAX : c_int = 52;\n+\n+            pub static EPERM : c_int = 1;\n+            pub static ENOENT : c_int = 2;\n+            pub static ESRCH : c_int = 3;\n+            pub static EINTR : c_int = 4;\n+            pub static EIO : c_int = 5;\n+            pub static ENXIO : c_int = 6;\n+            pub static E2BIG : c_int = 7;\n+            pub static ENOEXEC : c_int = 8;\n+            pub static EBADF : c_int = 9;\n+            pub static ECHILD : c_int = 10;\n+            pub static EDEADLK : c_int = 11;\n+            pub static ENOMEM : c_int = 12;\n+            pub static EACCES : c_int = 13;\n+            pub static EFAULT : c_int = 14;\n+            pub static ENOTBLK : c_int = 15;\n+            pub static EBUSY : c_int = 16;\n+            pub static EEXIST : c_int = 17;\n+            pub static EXDEV : c_int = 18;\n+            pub static ENODEV : c_int = 19;\n+            pub static ENOTDIR : c_int = 20;\n+            pub static EISDIR : c_int = 21;\n+            pub static EINVAL : c_int = 22;\n+            pub static ENFILE : c_int = 23;\n+            pub static EMFILE : c_int = 24;\n+            pub static ENOTTY : c_int = 25;\n+            pub static ETXTBSY : c_int = 26;\n+            pub static EFBIG : c_int = 27;\n+            pub static ENOSPC : c_int = 28;\n+            pub static ESPIPE : c_int = 29;\n+            pub static EROFS : c_int = 30;\n+            pub static EMLINK : c_int = 31;\n+            pub static EPIPE : c_int = 32;\n+            pub static EDOM : c_int = 33;\n+            pub static ERANGE : c_int = 34;\n+            pub static EAGAIN : c_int = 35;\n+            pub static EWOULDBLOCK : c_int = 35;\n+            pub static EINPROGRESS : c_int = 36;\n+            pub static EALREADY : c_int = 37;\n+            pub static ENOTSOCK : c_int = 38;\n+            pub static EDESTADDRREQ : c_int = 39;\n+            pub static EMSGSIZE : c_int = 40;\n+            pub static EPROTOTYPE : c_int = 41;\n+            pub static ENOPROTOOPT : c_int = 42;\n+            pub static EPROTONOSUPPORT : c_int = 43;\n+            pub static ESOCKTNOSUPPORT : c_int = 44;\n+            pub static EOPNOTSUPP : c_int = 45;\n+            pub static EPFNOSUPPORT : c_int = 46;\n+            pub static EAFNOSUPPORT : c_int = 47;\n+            pub static EADDRINUSE : c_int = 48;\n+            pub static EADDRNOTAVAIL : c_int = 49;\n+            pub static ENETDOWN : c_int = 50;\n+            pub static ENETUNREACH : c_int = 51;\n+            pub static ENETRESET : c_int = 52;\n+            pub static ECONNABORTED : c_int = 53;\n+            pub static ECONNRESET : c_int = 54;\n+            pub static ENOBUFS : c_int = 55;\n+            pub static EISCONN : c_int = 56;\n+            pub static ENOTCONN : c_int = 57;\n+            pub static ESHUTDOWN : c_int = 58;\n+            pub static ETOOMANYREFS : c_int = 59;\n+            pub static ETIMEDOUT : c_int = 60;\n+            pub static ECONNREFUSED : c_int = 61;\n+            pub static ELOOP : c_int = 62;\n+            pub static ENAMETOOLONG : c_int = 63;\n+            pub static EHOSTDOWN : c_int = 64;\n+            pub static EHOSTUNREACH : c_int = 65;\n+            pub static ENOTEMPTY : c_int = 66;\n+            pub static EPROCLIM : c_int = 67;\n+            pub static EUSERS : c_int = 68;\n+            pub static EDQUOT : c_int = 69;\n+            pub static ESTALE : c_int = 70;\n+            pub static EREMOTE : c_int = 71;\n+            pub static EBADRPC : c_int = 72;\n+            pub static ERPCMISMATCH : c_int = 73;\n+            pub static EPROGUNAVAIL : c_int = 74;\n+            pub static EPROGMISMATCH : c_int = 75;\n+            pub static EPROCUNAVAIL : c_int = 76;\n+            pub static ENOLCK : c_int = 77;\n+            pub static ENOSYS : c_int = 78;\n+            pub static EFTYPE : c_int = 79;\n+            pub static EAUTH : c_int = 80;\n+            pub static ENEEDAUTH : c_int = 81;\n+            pub static EIDRM : c_int = 82;\n+            pub static ENOMSG : c_int = 83;\n+            pub static EOVERFLOW : c_int = 84;\n+            pub static ECANCELED : c_int = 85;\n+            pub static EILSEQ : c_int = 86;\n+            pub static ENOATTR : c_int = 87;\n+            pub static EDOOFUS : c_int = 88;\n+            pub static EBADMSG : c_int = 89;\n+            pub static EMULTIHOP : c_int = 90;\n+            pub static ENOLINK : c_int = 91;\n+            pub static EPROTO : c_int = 92;\n+            pub static ENOMEDIUM : c_int = 93;\n+            pub static EUNUSED94 : c_int = 94;\n+            pub static EUNUSED95 : c_int = 95;\n+            pub static EUNUSED96 : c_int = 96;\n+            pub static EUNUSED97 : c_int = 97;\n+            pub static EUNUSED98 : c_int = 98;\n+            pub static EASYNC : c_int = 99;\n+            pub static ELAST : c_int = 99;\n         }\n         pub mod posix01 {\n             use libc::types::os::arch::c95::c_int;\n@@ -1900,6 +2072,115 @@ pub mod consts {\n             pub static _SC_XBS5_ILP32_OFFBIG : c_int = 123;\n             pub static _SC_XBS5_LP64_OFF64 : c_int = 124;\n             pub static _SC_XBS5_LPBIG_OFFBIG : c_int = 125;\n+\n+            pub static EPERM : c_int = 1;\n+            pub static ENOENT : c_int = 2;\n+            pub static ESRCH : c_int = 3;\n+            pub static EINTR : c_int = 4;\n+            pub static EIO : c_int = 5;\n+            pub static ENXIO : c_int = 6;\n+            pub static E2BIG : c_int = 7;\n+            pub static ENOEXEC : c_int = 8;\n+            pub static EBADF : c_int = 9;\n+            pub static ECHILD : c_int = 10;\n+            pub static EDEADLK : c_int = 11;\n+            pub static ENOMEM : c_int = 12;\n+            pub static EACCES : c_int = 13;\n+            pub static EFAULT : c_int = 14;\n+            pub static ENOTBLK : c_int = 15;\n+            pub static EBUSY : c_int = 16;\n+            pub static EEXIST : c_int = 17;\n+            pub static EXDEV : c_int = 18;\n+            pub static ENODEV : c_int = 19;\n+            pub static ENOTDIR : c_int = 20;\n+            pub static EISDIR : c_int = 21;\n+            pub static EINVAL : c_int = 22;\n+            pub static ENFILE : c_int = 23;\n+            pub static EMFILE : c_int = 24;\n+            pub static ENOTTY : c_int = 25;\n+            pub static ETXTBSY : c_int = 26;\n+            pub static EFBIG : c_int = 27;\n+            pub static ENOSPC : c_int = 28;\n+            pub static ESPIPE : c_int = 29;\n+            pub static EROFS : c_int = 30;\n+            pub static EMLINK : c_int = 31;\n+            pub static EPIPE : c_int = 32;\n+            pub static EDOM : c_int = 33;\n+            pub static ERANGE : c_int = 34;\n+            pub static EAGAIN : c_int = 35;\n+            pub static EWOULDBLOCK : c_int = EAGAIN;\n+            pub static EINPROGRESS : c_int = 36;\n+            pub static EALREADY : c_int = 37;\n+            pub static ENOTSOCK : c_int = 38;\n+            pub static EDESTADDRREQ : c_int = 39;\n+            pub static EMSGSIZE : c_int = 40;\n+            pub static EPROTOTYPE : c_int = 41;\n+            pub static ENOPROTOOPT : c_int = 42;\n+            pub static EPROTONOSUPPORT : c_int = 43;\n+            pub static ESOCKTNOSUPPORT : c_int = 44;\n+            pub static ENOTSUP : c_int = 45;\n+            pub static EPFNOSUPPORT : c_int = 46;\n+            pub static EAFNOSUPPORT : c_int = 47;\n+            pub static EADDRINUSE : c_int = 48;\n+            pub static EADDRNOTAVAIL : c_int = 49;\n+            pub static ENETDOWN : c_int = 50;\n+            pub static ENETUNREACH : c_int = 51;\n+            pub static ENETRESET : c_int = 52;\n+            pub static ECONNABORTED : c_int = 53;\n+            pub static ECONNRESET : c_int = 54;\n+            pub static ENOBUFS : c_int = 55;\n+            pub static EISCONN : c_int = 56;\n+            pub static ENOTCONN : c_int = 57;\n+            pub static ESHUTDOWN : c_int = 58;\n+            pub static ETOOMANYREFS : c_int = 59;\n+            pub static ETIMEDOUT : c_int = 60;\n+            pub static ECONNREFUSED : c_int = 61;\n+            pub static ELOOP : c_int = 62;\n+            pub static ENAMETOOLONG : c_int = 63;\n+            pub static EHOSTDOWN : c_int = 64;\n+            pub static EHOSTUNREACH : c_int = 65;\n+            pub static ENOTEMPTY : c_int = 66;\n+            pub static EPROCLIM : c_int = 67;\n+            pub static EUSERS : c_int = 68;\n+            pub static EDQUOT : c_int = 69;\n+            pub static ESTALE : c_int = 70;\n+            pub static EREMOTE : c_int = 71;\n+            pub static EBADRPC : c_int = 72;\n+            pub static ERPCMISMATCH : c_int = 73;\n+            pub static EPROGUNAVAIL : c_int = 74;\n+            pub static EPROGMISMATCH : c_int = 75;\n+            pub static EPROCUNAVAIL : c_int = 76;\n+            pub static ENOLCK : c_int = 77;\n+            pub static ENOSYS : c_int = 78;\n+            pub static EFTYPE : c_int = 79;\n+            pub static EAUTH : c_int = 80;\n+            pub static ENEEDAUTH : c_int = 81;\n+            pub static EPWROFF : c_int = 82;\n+            pub static EDEVERR : c_int = 83;\n+            pub static EOVERFLOW : c_int = 84;\n+            pub static EBADEXEC : c_int = 85;\n+            pub static EBADARCH : c_int = 86;\n+            pub static ESHLIBVERS : c_int = 87;\n+            pub static EBADMACHO : c_int = 88;\n+            pub static ECANCELED : c_int = 89;\n+            pub static EIDRM : c_int = 90;\n+            pub static ENOMSG : c_int = 91;\n+            pub static EILSEQ : c_int = 92;\n+            pub static ENOATTR : c_int = 93;\n+            pub static EBADMSG : c_int = 94;\n+            pub static EMULTIHOP : c_int = 95;\n+            pub static ENODATA : c_int = 96;\n+            pub static ENOLINK : c_int = 97;\n+            pub static ENOSR : c_int = 98;\n+            pub static ENOSTR : c_int = 99;\n+            pub static EPROTO : c_int = 100;\n+            pub static ETIME : c_int = 101;\n+            pub static EOPNOTSUPP : c_int = 102;\n+            pub static ENOPOLICY : c_int = 103;\n+            pub static ENOTRECOVERABLE : c_int = 104;\n+            pub static EOWNERDEAD : c_int = 105;\n+            pub static EQFULL : c_int = 106;\n+            pub static ELAST : c_int = 106;\n         }\n         pub mod posix01 {\n             use libc::types::os::arch::c95::c_int;"}]}