{"sha": "fa046d2e7f14cda09d14230cc8c772e1565e0757", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhMDQ2ZDJlN2YxNGNkYTA5ZDE0MjMwY2M4Yzc3MmUxNTY1ZTA3NTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-26T10:50:47Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-26T10:50:47Z"}, "message": "Auto merge of #5097 - phansch:remove_fixme, r=llogiq\n\nResolve FIXME: String::new is now a const fn\n\n`const_string_new` is stable since Rust 1.39\n\nchangelog: none", "tree": {"sha": "2d4d76b2ae73cede7414e5bb8baf559558cd1bc7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d4d76b2ae73cede7414e5bb8baf559558cd1bc7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa046d2e7f14cda09d14230cc8c772e1565e0757", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa046d2e7f14cda09d14230cc8c772e1565e0757", "html_url": "https://github.com/rust-lang/rust/commit/fa046d2e7f14cda09d14230cc8c772e1565e0757", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa046d2e7f14cda09d14230cc8c772e1565e0757/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6a976676c5a9caf5ac7e6305ad52ebc11ab135c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6a976676c5a9caf5ac7e6305ad52ebc11ab135c", "html_url": "https://github.com/rust-lang/rust/commit/b6a976676c5a9caf5ac7e6305ad52ebc11ab135c"}, {"sha": "45333102d79a7e5738dfd3c4b27661428cc31202", "url": "https://api.github.com/repos/rust-lang/rust/commits/45333102d79a7e5738dfd3c4b27661428cc31202", "html_url": "https://github.com/rust-lang/rust/commit/45333102d79a7e5738dfd3c4b27661428cc31202"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "9a73dcbe99f1b00d357e63a590e0a0db30159048", "filename": "tests/ui/missing_const_for_fn/could_be_const.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fa046d2e7f14cda09d14230cc8c772e1565e0757/tests%2Fui%2Fmissing_const_for_fn%2Fcould_be_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa046d2e7f14cda09d14230cc8c772e1565e0757/tests%2Fui%2Fmissing_const_for_fn%2Fcould_be_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing_const_for_fn%2Fcould_be_const.rs?ref=fa046d2e7f14cda09d14230cc8c772e1565e0757", "patch": "@@ -25,8 +25,7 @@ fn two() -> i32 {\n     abc\n }\n \n-// FIXME: This is a false positive in the `is_min_const_fn` function.\n-// At least until the `const_string_new` feature is stabilzed.\n+// Could be const (since Rust 1.39)\n fn string() -> String {\n     String::new()\n }"}, {"sha": "165b8a030771238e8f00357bc8b02077bfa5bcd8", "filename": "tests/ui/missing_const_for_fn/could_be_const.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/fa046d2e7f14cda09d14230cc8c772e1565e0757/tests%2Fui%2Fmissing_const_for_fn%2Fcould_be_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa046d2e7f14cda09d14230cc8c772e1565e0757/tests%2Fui%2Fmissing_const_for_fn%2Fcould_be_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing_const_for_fn%2Fcould_be_const.stderr?ref=fa046d2e7f14cda09d14230cc8c772e1565e0757", "patch": "@@ -26,39 +26,39 @@ LL | | }\n    | |_^\n \n error: this could be a `const fn`\n-  --> $DIR/could_be_const.rs:30:1\n+  --> $DIR/could_be_const.rs:29:1\n    |\n LL | / fn string() -> String {\n LL | |     String::new()\n LL | | }\n    | |_^\n \n error: this could be a `const fn`\n-  --> $DIR/could_be_const.rs:35:1\n+  --> $DIR/could_be_const.rs:34:1\n    |\n LL | / unsafe fn four() -> i32 {\n LL | |     4\n LL | | }\n    | |_^\n \n error: this could be a `const fn`\n-  --> $DIR/could_be_const.rs:40:1\n+  --> $DIR/could_be_const.rs:39:1\n    |\n LL | / fn generic<T>(t: T) -> T {\n LL | |     t\n LL | | }\n    | |_^\n \n error: this could be a `const fn`\n-  --> $DIR/could_be_const.rs:44:1\n+  --> $DIR/could_be_const.rs:43:1\n    |\n LL | / fn sub(x: u32) -> usize {\n LL | |     unsafe { transmute(&x) }\n LL | | }\n    | |_^\n \n error: this could be a `const fn`\n-  --> $DIR/could_be_const.rs:63:9\n+  --> $DIR/could_be_const.rs:62:9\n    |\n LL | /         pub fn b(self, a: &A) -> B {\n LL | |             B"}]}