{"sha": "4eb0bbd2a89a1342f411e138b944aa0598f3a311", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlYjBiYmQyYTg5YTEzNDJmNDExZTEzOGI5NDRhYTA1OThmM2EzMTE=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-01-16T22:16:02Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-01-23T12:57:17Z"}, "message": "Filter stability.", "tree": {"sha": "89abd19cf16f584bb11459b3d621f3ba7b70a854", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89abd19cf16f584bb11459b3d621f3ba7b70a854"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4eb0bbd2a89a1342f411e138b944aa0598f3a311", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4eb0bbd2a89a1342f411e138b944aa0598f3a311", "html_url": "https://github.com/rust-lang/rust/commit/4eb0bbd2a89a1342f411e138b944aa0598f3a311", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4eb0bbd2a89a1342f411e138b944aa0598f3a311/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e60ecf78357887861b3480da8745fd1cb7eb4c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e60ecf78357887861b3480da8745fd1cb7eb4c7", "html_url": "https://github.com/rust-lang/rust/commit/4e60ecf78357887861b3480da8745fd1cb7eb4c7"}], "stats": {"total": 43, "additions": 40, "deletions": 3}, "files": [{"sha": "23329acffd916bce33b05191464d9b82b43e9ea8", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 40, "deletions": 3, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/4eb0bbd2a89a1342f411e138b944aa0598f3a311/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4eb0bbd2a89a1342f411e138b944aa0598f3a311/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=4eb0bbd2a89a1342f411e138b944aa0598f3a311", "patch": "@@ -750,6 +750,41 @@ fn should_encode_visibility(def_kind: DefKind) -> bool {\n     }\n }\n \n+fn should_encode_stability(def_kind: DefKind) -> bool {\n+    match def_kind {\n+        DefKind::Mod\n+        | DefKind::Ctor(..)\n+        | DefKind::Variant\n+        | DefKind::Field\n+        | DefKind::Struct\n+        | DefKind::AssocTy\n+        | DefKind::AssocFn\n+        | DefKind::AssocConst\n+        | DefKind::TyParam\n+        | DefKind::ConstParam\n+        | DefKind::Static\n+        | DefKind::Const\n+        | DefKind::Fn\n+        | DefKind::ForeignMod\n+        | DefKind::TyAlias\n+        | DefKind::OpaqueTy\n+        | DefKind::Enum\n+        | DefKind::Union\n+        | DefKind::Impl\n+        | DefKind::Trait\n+        | DefKind::TraitAlias\n+        | DefKind::Macro(..)\n+        | DefKind::ForeignTy => true,\n+        DefKind::Use\n+        | DefKind::LifetimeParam\n+        | DefKind::AnonConst\n+        | DefKind::GlobalAsm\n+        | DefKind::Closure\n+        | DefKind::Generator\n+        | DefKind::ExternCrate => false,\n+    }\n+}\n+\n impl EncodeContext<'a, 'tcx> {\n     fn encode_def_ids(&mut self) {\n         if self.is_proc_macro {\n@@ -773,9 +808,11 @@ impl EncodeContext<'a, 'tcx> {\n             if should_encode_visibility(def_kind) {\n                 record!(self.tables.visibility[def_id] <- self.tcx.visibility(def_id));\n             }\n-            self.encode_stability(def_id);\n-            self.encode_const_stability(def_id);\n-            self.encode_deprecation(def_id);\n+            if should_encode_stability(def_kind) {\n+                self.encode_stability(def_id);\n+                self.encode_const_stability(def_id);\n+                self.encode_deprecation(def_id);\n+            }\n         }\n     }\n "}]}