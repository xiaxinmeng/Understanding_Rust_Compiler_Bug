{"sha": "6776e5123a4f471979aa64cf01f84085a4824b72", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3NzZlNTEyM2E0ZjQ3MTk3OWFhNjRjZjAxZjg0MDg1YTQ4MjRiNzI=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2018-03-08T07:15:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-03-08T07:15:26Z"}, "message": "Merge pull request #2515 from kimsnj/infinite_loop\n\nlint: while immutable condition: do not lint constants", "tree": {"sha": "9dbb06908d8f19ced7eb1744a1f6ea515979a7a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9dbb06908d8f19ced7eb1744a1f6ea515979a7a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6776e5123a4f471979aa64cf01f84085a4824b72", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaoOMOCRBK7hj4Ov3rIwAAdHIIAGroXuVDvfnbi3dTN59MJJRa\n9DOhe6KixorpLUfiDttN4TozkhlBFtz6WykFPbTSH4C71UiAyO9m7e6gcplgymva\ntyTReXgGbdpY4zxdout9v++u7gJtvRraKZoYT/XkUxfcvKJkM11zq7Qih2Ib5nUo\nqAFD9DjUgvD9xc+llAZqShLJFbODqypP6jznGxCgfEXtT6K3YehW8qhZOBKrWEgZ\neT1+Qaz5xcp8yNw8j8jtIKc1sSqtHwUoAJL7erWLd275cfS9JRGtATcKy/7SiHDu\ncDrIzMsL0ZBW4ELPgl57oBg9JeeWCVDSJf7Wa8Ucf6sIOyJy5LcNhZX6zjGuEU0=\n=t+Pl\n-----END PGP SIGNATURE-----\n", "payload": "tree 9dbb06908d8f19ced7eb1744a1f6ea515979a7a2\nparent 4cf02c7e1a4d94eb078851e4a24d3f8be4bd6a51\nparent ae5354e6ef610804ae46456df2c9001f65c8786c\nauthor Oliver Schneider <oli-obk@users.noreply.github.com> 1520493326 +0100\ncommitter GitHub <noreply@github.com> 1520493326 +0100\n\nMerge pull request #2515 from kimsnj/infinite_loop\n\nlint: while immutable condition: do not lint constants"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6776e5123a4f471979aa64cf01f84085a4824b72", "html_url": "https://github.com/rust-lang/rust/commit/6776e5123a4f471979aa64cf01f84085a4824b72", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6776e5123a4f471979aa64cf01f84085a4824b72/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4cf02c7e1a4d94eb078851e4a24d3f8be4bd6a51", "url": "https://api.github.com/repos/rust-lang/rust/commits/4cf02c7e1a4d94eb078851e4a24d3f8be4bd6a51", "html_url": "https://github.com/rust-lang/rust/commit/4cf02c7e1a4d94eb078851e4a24d3f8be4bd6a51"}, {"sha": "ae5354e6ef610804ae46456df2c9001f65c8786c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae5354e6ef610804ae46456df2c9001f65c8786c", "html_url": "https://github.com/rust-lang/rust/commit/ae5354e6ef610804ae46456df2c9001f65c8786c"}], "stats": {"total": 46, "additions": 35, "deletions": 11}, "files": [{"sha": "f476b960d889084c843f56e020c14007071e4018", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6776e5123a4f471979aa64cf01f84085a4824b72/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6776e5123a4f471979aa64cf01f84085a4824b72/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=6776e5123a4f471979aa64cf01f84085a4824b72", "patch": "@@ -22,6 +22,8 @@ use syntax::codemap::Span;\n use utils::sugg;\n use utils::const_to_u64;\n \n+use consts::constant;\n+\n use utils::{get_enclosing_block, get_parent_expr, higher, in_external_macro, is_integer_literal, is_refutable,\n             last_path_segment, match_trait_method, match_type, match_var, multispan_sugg, snippet, snippet_opt,\n             span_help_and_lint, span_lint, span_lint_and_sugg, span_lint_and_then};\n@@ -2142,6 +2144,11 @@ fn path_name(e: &Expr) -> Option<Name> {\n }\n \n fn check_infinite_loop<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, cond: &'tcx Expr, block: &'tcx Block, expr: &'tcx Expr) {\n+    if constant(cx, cond).is_some() {\n+        // A pure constant condition (e.g. while false) is not linted.\n+        return;\n+    }\n+\n     let mut mut_var_visitor = MutableVarsVisitor {\n         cx,\n         ids: HashMap::new(),\n@@ -2152,12 +2159,12 @@ fn check_infinite_loop<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, cond: &'tcx Expr, b\n         return;\n     }\n \n-    if mut_var_visitor.ids.len() == 0 {\n+    if mut_var_visitor.ids.is_empty() {\n         span_lint(\n             cx,\n             WHILE_IMMUTABLE_CONDITION,\n             cond.span,\n-            \"all variables in condition are immutable. This might lead to infinite loops.\",\n+            \"all variables in condition are immutable. This either leads to an infinite or to a never running loop.\",\n         );\n         return;\n     }\n@@ -2175,7 +2182,7 @@ fn check_infinite_loop<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, cond: &'tcx Expr, b\n             cx,\n             WHILE_IMMUTABLE_CONDITION,\n             expr.span,\n-            \"Variable in the condition are not mutated in the loop body. This might lead to infinite loops.\",\n+            \"Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\",\n         );\n     }\n }"}, {"sha": "560400f359d291d07968c2a9f253007f3dcbbade", "filename": "tests/ui/infinite_loop.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/6776e5123a4f471979aa64cf01f84085a4824b72/tests%2Fui%2Finfinite_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6776e5123a4f471979aa64cf01f84085a4824b72/tests%2Fui%2Finfinite_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfinite_loop.rs?ref=6776e5123a4f471979aa64cf01f84085a4824b72", "patch": "@@ -94,6 +94,23 @@ fn used_immutable() {\n     }\n }\n \n+const N: i32 = 5;\n+const B: bool = false;\n+\n+fn consts() {\n+    while false {\n+        println!(\"Constants are not linted\");\n+    }\n+\n+    while B {\n+        println!(\"Constants are not linted\");\n+    }\n+\n+    while N > 0 {\n+        println!(\"Constants are not linted\");\n+    }\n+}\n+\n use std::cell::Cell;\n \n fn maybe_i_mutate(i: &Cell<bool>) { unimplemented!() }"}, {"sha": "2addd4819e6fac4b83f07c9feee720157ee7d7f6", "filename": "tests/ui/infinite_loop.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6776e5123a4f471979aa64cf01f84085a4824b72/tests%2Fui%2Finfinite_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6776e5123a4f471979aa64cf01f84085a4824b72/tests%2Fui%2Finfinite_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfinite_loop.stderr?ref=6776e5123a4f471979aa64cf01f84085a4824b72", "patch": "@@ -1,24 +1,24 @@\n-error: all variables in condition are immutable. This might lead to infinite loops.\n+error: all variables in condition are immutable. This either leads to an infinite or to a never running loop.\n   --> $DIR/infinite_loop.rs:10:11\n    |\n 10 |     while y < 10 {\n    |           ^^^^^^\n    |\n    = note: `-D while-immutable-condition` implied by `-D warnings`\n \n-error: all variables in condition are immutable. This might lead to infinite loops.\n+error: all variables in condition are immutable. This either leads to an infinite or to a never running loop.\n   --> $DIR/infinite_loop.rs:15:11\n    |\n 15 |     while y < 10 && x < 3 {\n    |           ^^^^^^^^^^^^^^^\n \n-error: all variables in condition are immutable. This might lead to infinite loops.\n+error: all variables in condition are immutable. This either leads to an infinite or to a never running loop.\n   --> $DIR/infinite_loop.rs:22:11\n    |\n 22 |     while !cond {\n    |           ^^^^^\n \n-error: Variable in the condition are not mutated in the loop body. This might lead to infinite loops.\n+error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n   --> $DIR/infinite_loop.rs:52:5\n    |\n 52 | /     while i < 3 {\n@@ -27,15 +27,15 @@ error: Variable in the condition are not mutated in the loop body. This might le\n 55 | |     }\n    | |_____^\n \n-error: Variable in the condition are not mutated in the loop body. This might lead to infinite loops.\n+error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n   --> $DIR/infinite_loop.rs:57:5\n    |\n 57 | /     while i < 3 && j > 0 {\n 58 | |         println!(\"KO - i and j not mentionned\");\n 59 | |     }\n    | |_____^\n \n-error: Variable in the condition are not mutated in the loop body. This might lead to infinite loops.\n+error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n   --> $DIR/infinite_loop.rs:61:5\n    |\n 61 | /     while i < 3 {\n@@ -45,7 +45,7 @@ error: Variable in the condition are not mutated in the loop body. This might le\n 65 | |     }\n    | |_____^\n \n-error: Variable in the condition are not mutated in the loop body. This might lead to infinite loops.\n+error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n   --> $DIR/infinite_loop.rs:76:5\n    |\n 76 | /     while i < 3 {\n@@ -54,7 +54,7 @@ error: Variable in the condition are not mutated in the loop body. This might le\n 79 | |     }\n    | |_____^\n \n-error: Variable in the condition are not mutated in the loop body. This might lead to infinite loops.\n+error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n   --> $DIR/infinite_loop.rs:81:5\n    |\n 81 | /     while i < 3 {"}]}