{"sha": "2340d7059e3b89a5233b0c91cf3c36fa94adfe6e", "node_id": "C_kwDOAAsO6NoAKDIzNDBkNzA1OWUzYjg5YTUyMzNiMGM5MWNmM2MzNmZhOTRhZGZlNmU", "commit": {"author": {"name": "Noritada Kobayashi", "email": "noritada.kobayashi@gmail.com", "date": "2022-11-07T14:39:02Z"}, "committer": {"name": "Noritada Kobayashi", "email": "noritada.kobayashi@gmail.com", "date": "2022-11-07T14:39:02Z"}, "message": "Add test code for unescaping byte strings", "tree": {"sha": "04d00716837911a5b4d3775b5173906e164e52f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04d00716837911a5b4d3775b5173906e164e52f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2340d7059e3b89a5233b0c91cf3c36fa94adfe6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2340d7059e3b89a5233b0c91cf3c36fa94adfe6e", "html_url": "https://github.com/rust-lang/rust/commit/2340d7059e3b89a5233b0c91cf3c36fa94adfe6e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2340d7059e3b89a5233b0c91cf3c36fa94adfe6e/comments", "author": {"login": "noritada", "id": 20850, "node_id": "MDQ6VXNlcjIwODUw", "avatar_url": "https://avatars.githubusercontent.com/u/20850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noritada", "html_url": "https://github.com/noritada", "followers_url": "https://api.github.com/users/noritada/followers", "following_url": "https://api.github.com/users/noritada/following{/other_user}", "gists_url": "https://api.github.com/users/noritada/gists{/gist_id}", "starred_url": "https://api.github.com/users/noritada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noritada/subscriptions", "organizations_url": "https://api.github.com/users/noritada/orgs", "repos_url": "https://api.github.com/users/noritada/repos", "events_url": "https://api.github.com/users/noritada/events{/privacy}", "received_events_url": "https://api.github.com/users/noritada/received_events", "type": "User", "site_admin": false}, "committer": {"login": "noritada", "id": 20850, "node_id": "MDQ6VXNlcjIwODUw", "avatar_url": "https://avatars.githubusercontent.com/u/20850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noritada", "html_url": "https://github.com/noritada", "followers_url": "https://api.github.com/users/noritada/followers", "following_url": "https://api.github.com/users/noritada/following{/other_user}", "gists_url": "https://api.github.com/users/noritada/gists{/gist_id}", "starred_url": "https://api.github.com/users/noritada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noritada/subscriptions", "organizations_url": "https://api.github.com/users/noritada/orgs", "repos_url": "https://api.github.com/users/noritada/repos", "events_url": "https://api.github.com/users/noritada/events{/privacy}", "received_events_url": "https://api.github.com/users/noritada/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bdf854701375c0692f9014db71a097520fddd41f", "url": "https://api.github.com/repos/rust-lang/rust/commits/bdf854701375c0692f9014db71a097520fddd41f", "html_url": "https://github.com/rust-lang/rust/commit/bdf854701375c0692f9014db71a097520fddd41f"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "8990f7a7d4e8ec4b85d5906667216f5835e8cb80", "filename": "crates/syntax/src/ast/token_ext.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/2340d7059e3b89a5233b0c91cf3c36fa94adfe6e/crates%2Fsyntax%2Fsrc%2Fast%2Ftoken_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2340d7059e3b89a5233b0c91cf3c36fa94adfe6e/crates%2Fsyntax%2Fsrc%2Fast%2Ftoken_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Ftoken_ext.rs?ref=2340d7059e3b89a5233b0c91cf3c36fa94adfe6e", "patch": "@@ -456,6 +456,31 @@ bcde\", \"abcde\",\n         );\n     }\n \n+    fn check_byte_string_value<'a, const N: usize>(\n+        lit: &str,\n+        expected: impl Into<Option<&'a [u8; N]>>,\n+    ) {\n+        assert_eq!(\n+            ast::ByteString { syntax: make::tokens::literal(&format!(\"b\\\"{}\\\"\", lit)) }\n+                .value()\n+                .as_deref(),\n+            expected.into().map(|value| &value[..])\n+        );\n+    }\n+\n+    #[test]\n+    fn test_byte_string_escape() {\n+        check_byte_string_value(r\"foobar\", b\"foobar\");\n+        check_byte_string_value(r\"\\foobar\", None::<&[u8; 0]>);\n+        check_byte_string_value(r\"\\nfoobar\", b\"\\nfoobar\");\n+        check_byte_string_value(r\"C:\\\\Windows\\\\System32\\\\\", b\"C:\\\\Windows\\\\System32\\\\\");\n+        check_byte_string_value(r\"\\x61bcde\", b\"abcde\");\n+        check_byte_string_value(\n+            r\"a\\\n+bcde\", b\"abcde\",\n+        );\n+    }\n+\n     #[test]\n     fn test_value_underscores() {\n         check_float_value(\"3.141592653589793_f64\", 3.141592653589793_f64);"}]}