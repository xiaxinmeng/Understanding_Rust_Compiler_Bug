{"sha": "69c8cfc4c17e9f4533437c757e754a140c0a9ebc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5YzhjZmM0YzE3ZTlmNDUzMzQzN2M3NTdlNzU0YTE0MGMwYTllYmM=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-09-17T21:06:05Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-09-17T21:06:05Z"}, "message": "Add test for `T::Item` cycles", "tree": {"sha": "f768700f3b924261910b44372976d4a9464f8690", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f768700f3b924261910b44372976d4a9464f8690"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69c8cfc4c17e9f4533437c757e754a140c0a9ebc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69c8cfc4c17e9f4533437c757e754a140c0a9ebc", "html_url": "https://github.com/rust-lang/rust/commit/69c8cfc4c17e9f4533437c757e754a140c0a9ebc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69c8cfc4c17e9f4533437c757e754a140c0a9ebc/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a040fde3ae5e339199237f24a7461812e74475bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/a040fde3ae5e339199237f24a7461812e74475bf", "html_url": "https://github.com/rust-lang/rust/commit/a040fde3ae5e339199237f24a7461812e74475bf"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "9a3faa9aba455b711e1bd311e1f508fbb5a866f7", "filename": "crates/ra_hir/src/ty/tests.rs", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/69c8cfc4c17e9f4533437c757e754a140c0a9ebc/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69c8cfc4c17e9f4533437c757e754a140c0a9ebc/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs?ref=69c8cfc4c17e9f4533437c757e754a140c0a9ebc", "patch": "@@ -4062,6 +4062,48 @@ fn test<F: FnOnce(u32) -> u64>(f: F) {\n     );\n }\n \n+#[test]\n+fn unselected_projection_in_trait_env() {\n+    let t = type_at(\n+        r#\"\n+//- /main.rs\n+trait Trait {\n+    type Item;\n+}\n+\n+trait Trait2 {\n+    fn foo(&self) -> u32;\n+}\n+\n+fn test<T: Trait>() where T::Item: Trait2 {\n+    let x: T::Item = no_matter;\n+    x.foo()<|>;\n+}\n+\"#,\n+    );\n+    assert_eq!(t, \"u32\");\n+}\n+\n+#[test]\n+fn unselected_projection_in_trait_env_cycle() {\n+    let t = type_at(\n+        r#\"\n+//- /main.rs\n+trait Trait {\n+    type Item;\n+}\n+\n+trait Trait2<T> {}\n+\n+fn test<T: Trait>() where T: Trait2<T::Item> {\n+    let x: T::Item = no_matter<|>;\n+}\n+\"#,\n+    );\n+    // this is a legitimate cycle\n+    assert_eq!(t, \"{unknown}\");\n+}\n+\n fn type_at_pos(db: &MockDatabase, pos: FilePosition) -> String {\n     let file = db.parse(pos.file_id).ok().unwrap();\n     let expr = algo::find_node_at_offset::<ast::Expr>(file.syntax(), pos.offset).unwrap();"}]}