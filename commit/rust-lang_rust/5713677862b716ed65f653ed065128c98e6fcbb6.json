{"sha": "5713677862b716ed65f653ed065128c98e6fcbb6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3MTM2Nzc4NjJiNzE2ZWQ2NWY2NTNlZDA2NTEyOGM5OGU2ZmNiYjY=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-04-02T12:26:28Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-05-25T08:07:01Z"}, "message": "Merge the string printing paths of ty::Const", "tree": {"sha": "d2a11c8388abb15cfbfbe1b738ade574b8d02282", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2a11c8388abb15cfbfbe1b738ade574b8d02282"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5713677862b716ed65f653ed065128c98e6fcbb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5713677862b716ed65f653ed065128c98e6fcbb6", "html_url": "https://github.com/rust-lang/rust/commit/5713677862b716ed65f653ed065128c98e6fcbb6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5713677862b716ed65f653ed065128c98e6fcbb6/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a92d97ee70e84e3568eb28cf8e01d2ac6a67e12c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a92d97ee70e84e3568eb28cf8e01d2ac6a67e12c", "html_url": "https://github.com/rust-lang/rust/commit/a92d97ee70e84e3568eb28cf8e01d2ac6a67e12c"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "085a0edc9861dffc85219ec05c008684938f4866", "filename": "src/librustc/ty/print/pretty.rs", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5713677862b716ed65f653ed065128c98e6fcbb6/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5713677862b716ed65f653ed065128c98e6fcbb6/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs?ref=5713677862b716ed65f653ed065128c98e6fcbb6", "patch": "@@ -1566,17 +1566,21 @@ define_print_and_forward_display! {\n             (ConstValue::Scalar(Scalar::Bits { bits, ..}), ty::Char)\n                 => p!(write(\"{}\", ::std::char::from_u32(bits as u32).unwrap())),\n             (_, ty::FnDef(did, _)) => p!(write(\"{}\", cx.tcx().def_path_str(*did))),\n-            (ConstValue::Slice(_, 0), ty::Ref(_, &ty::TyS { sty: ty::Str, .. }, _)) =>\n-                p!(write(\"\\\"\\\"\")),\n             (\n-                ConstValue::Slice(Scalar::Ptr(ptr), len),\n+                ConstValue::Slice(place, len),\n                 ty::Ref(_, &ty::TyS { sty: ty::Str, .. }, _),\n             ) => {\n-                let alloc = cx.tcx().alloc_map.lock().unwrap_memory(ptr.alloc_id);\n-                assert_eq!(len as usize as u64, len);\n-                let slice =\n-                    &alloc.bytes[(ptr.offset.bytes() as usize)..][..(len as usize)];\n-                let s = ::std::str::from_utf8(slice).expect(\"non utf8 str from miri\");\n+                let s = match (place, len) {\n+                    (_, 0) => \"\",\n+                    (Scalar::Ptr(ptr), len) => {\n+                        let alloc = cx.tcx().alloc_map.lock().unwrap_memory(ptr.alloc_id);\n+                        assert_eq!(len as usize as u64, len);\n+                        let slice =\n+                            &alloc.bytes[(ptr.offset.bytes() as usize)..][..(len as usize)];\n+                        ::std::str::from_utf8(slice).expect(\"non utf8 str from miri\")\n+                    },\n+                    _ => bug!(\"invalid slice: {:#?}\", self),\n+                };\n                 p!(write(\"{:?}\", s))\n             },\n             _ => p!(write(\"{:?} : \", self.val), print(self.ty)),"}]}