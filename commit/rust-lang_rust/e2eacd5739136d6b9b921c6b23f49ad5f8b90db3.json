{"sha": "e2eacd5739136d6b9b921c6b23f49ad5f8b90db3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyZWFjZDU3MzkxMzZkNmI5YjkyMWM2YjIzZjQ5YWQ1ZjhiOTBkYjM=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-01-15T22:11:42Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-01-15T22:11:42Z"}, "message": "rollup merge of #21085: pnkfelix/pp-flowgraph-kill-labels\n\nAdd `--xpretty flowgraph,unlabelled` variant to the (unstable) flowgraph printing `rustc` option.\n\nThis makes the tests much easier to maintain; the particular details of the labels attached to exiting scopes is not worth the effort required to keep it up to date as things change in the compiler internals.", "tree": {"sha": "ac3a562f3102bfac8d50ba75e59f5ef52dc7184f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac3a562f3102bfac8d50ba75e59f5ef52dc7184f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2eacd5739136d6b9b921c6b23f49ad5f8b90db3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2eacd5739136d6b9b921c6b23f49ad5f8b90db3", "html_url": "https://github.com/rust-lang/rust/commit/e2eacd5739136d6b9b921c6b23f49ad5f8b90db3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2eacd5739136d6b9b921c6b23f49ad5f8b90db3/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46a490f42bb250c561bcb85eb86f8d07cc6041bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/46a490f42bb250c561bcb85eb86f8d07cc6041bc", "html_url": "https://github.com/rust-lang/rust/commit/46a490f42bb250c561bcb85eb86f8d07cc6041bc"}, {"sha": "f0d7871ab7560694fd6767c1b5e38543b20a82f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0d7871ab7560694fd6767c1b5e38543b20a82f8", "html_url": "https://github.com/rust-lang/rust/commit/f0d7871ab7560694fd6767c1b5e38543b20a82f8"}], "stats": {"total": 86, "additions": 50, "deletions": 36}, "files": [{"sha": "3d8348e8f5a991ddc28ebf53b1ffabae028e59e0", "filename": "src/librustc/middle/cfg/graphviz.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e2eacd5739136d6b9b921c6b23f49ad5f8b90db3/src%2Flibrustc%2Fmiddle%2Fcfg%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2eacd5739136d6b9b921c6b23f49ad5f8b90db3/src%2Flibrustc%2Fmiddle%2Fcfg%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcfg%2Fgraphviz.rs?ref=e2eacd5739136d6b9b921c6b23f49ad5f8b90db3", "patch": "@@ -28,6 +28,8 @@ pub struct LabelledCFG<'a, 'ast: 'a> {\n     pub ast_map: &'a ast_map::Map<'ast>,\n     pub cfg: &'a cfg::CFG,\n     pub name: String,\n+    /// `labelled_edges` controls whether we emit labels on the edges\n+    pub labelled_edges: bool,\n }\n \n fn replace_newline_with_backslash_l(s: String) -> String {\n@@ -75,6 +77,9 @@ impl<'a, 'ast> dot::Labeller<'a, Node<'a>, Edge<'a>> for LabelledCFG<'a, 'ast> {\n \n     fn edge_label(&self, e: &Edge<'a>) -> dot::LabelText<'a> {\n         let mut label = String::new();\n+        if !self.labelled_edges {\n+            return dot::LabelText::EscStr(label.into_cow());\n+        }\n         let mut put_one = false;\n         for (i, &node_id) in e.data.exiting_scopes.iter().enumerate() {\n             if put_one {"}, {"sha": "279442891bec0c631a91364d3cefd11c21baf831", "filename": "src/librustc_driver/pretty.rs", "status": "modified", "additions": 26, "deletions": 17, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/e2eacd5739136d6b9b921c6b23f49ad5f8b90db3/src%2Flibrustc_driver%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2eacd5739136d6b9b921c6b23f49ad5f8b90db3/src%2Flibrustc_driver%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fpretty.rs?ref=e2eacd5739136d6b9b921c6b23f49ad5f8b90db3", "patch": "@@ -53,10 +53,20 @@ pub enum PpSourceMode {\n     PpmExpandedHygiene,\n }\n \n+\n+#[derive(Copy, PartialEq, Show)]\n+pub enum PpFlowGraphMode {\n+    Default,\n+    /// Drops the labels from the edges in the flowgraph output. This\n+    /// is mostly for use in the --xpretty flowgraph run-make tests,\n+    /// since the labels are largely uninteresting in those cases and\n+    /// have become a pain to maintain.\n+    UnlabelledEdges,\n+}\n #[derive(Copy, PartialEq, Show)]\n pub enum PpMode {\n     PpmSource(PpSourceMode),\n-    PpmFlowGraph,\n+    PpmFlowGraph(PpFlowGraphMode),\n }\n \n pub fn parse_pretty(sess: &Session,\n@@ -73,12 +83,13 @@ pub fn parse_pretty(sess: &Session,\n         (\"expanded,identified\", _) => PpmSource(PpmExpandedIdentified),\n         (\"expanded,hygiene\", _) => PpmSource(PpmExpandedHygiene),\n         (\"identified\", _)   => PpmSource(PpmIdentified),\n-        (\"flowgraph\", true)    => PpmFlowGraph,\n+        (\"flowgraph\", true)    => PpmFlowGraph(PpFlowGraphMode::Default),\n+        (\"flowgraph,unlabelled\", true)    => PpmFlowGraph(PpFlowGraphMode::UnlabelledEdges),\n         _ => {\n             if extended {\n                 sess.fatal(format!(\n                     \"argument to `xpretty` must be one of `normal`, \\\n-                     `expanded`, `flowgraph=<nodeid>`, `typed`, `identified`, \\\n+                     `expanded`, `flowgraph[,unlabelled]=<nodeid>`, `typed`, `identified`, \\\n                      `expanded,identified`, or `everybody_loops`; got {}\", name).as_slice());\n             } else {\n                 sess.fatal(format!(\n@@ -417,7 +428,7 @@ fn needs_ast_map(ppm: &PpMode, opt_uii: &Option<UserIdentifiedItem>) -> bool {\n         PpmSource(PpmExpandedIdentified) |\n         PpmSource(PpmExpandedHygiene) |\n         PpmSource(PpmTyped) |\n-        PpmFlowGraph => true\n+        PpmFlowGraph(_) => true\n     }\n }\n \n@@ -431,7 +442,7 @@ fn needs_expansion(ppm: &PpMode) -> bool {\n         PpmSource(PpmExpandedIdentified) |\n         PpmSource(PpmExpandedHygiene) |\n         PpmSource(PpmTyped) |\n-        PpmFlowGraph => true\n+        PpmFlowGraph(_) => true\n     }\n }\n \n@@ -589,7 +600,7 @@ pub fn pretty_print_input(sess: Session,\n                     pp::eof(&mut pp_state.s)\n                 }),\n \n-        (PpmFlowGraph, opt_uii) => {\n+        (PpmFlowGraph(mode), opt_uii) => {\n             debug!(\"pretty printing flow graph for {:?}\", opt_uii);\n             let uii = opt_uii.unwrap_or_else(|| {\n                 sess.fatal(&format!(\"`pretty flowgraph=..` needs NodeId (int) or\n@@ -613,7 +624,7 @@ pub fn pretty_print_input(sess: Session,\n                                                                        &arenas,\n                                                                        id,\n                                                                        resolve::MakeGlobMap::No);\n-                    print_flowgraph(variants, analysis, code, out)\n+                    print_flowgraph(variants, analysis, code, mode, out)\n                 }\n                 None => {\n                     let message = format!(\"--pretty=flowgraph needs \\\n@@ -635,20 +646,23 @@ pub fn pretty_print_input(sess: Session,\n fn print_flowgraph<W:io::Writer>(variants: Vec<borrowck_dot::Variant>,\n                                  analysis: ty::CrateAnalysis,\n                                  code: blocks::Code,\n+                                 mode: PpFlowGraphMode,\n                                  mut out: W) -> io::IoResult<()> {\n     let ty_cx = &analysis.ty_cx;\n     let cfg = match code {\n         blocks::BlockCode(block) => cfg::CFG::new(ty_cx, &*block),\n         blocks::FnLikeCode(fn_like) => cfg::CFG::new(ty_cx, &*fn_like.body()),\n     };\n+    let labelled_edges = mode != PpFlowGraphMode::UnlabelledEdges;\n+    let lcfg = LabelledCFG {\n+        ast_map: &ty_cx.map,\n+        cfg: &cfg,\n+        name: format!(\"node_{}\", code.id()),\n+        labelled_edges: labelled_edges,\n+    };\n \n     match code {\n         _ if variants.len() == 0 => {\n-            let lcfg = LabelledCFG {\n-                ast_map: &ty_cx.map,\n-                cfg: &cfg,\n-                name: format!(\"node_{}\", code.id()),\n-            };\n             let r = dot::render(&lcfg, &mut out);\n             return expand_err_details(r);\n         }\n@@ -662,11 +676,6 @@ fn print_flowgraph<W:io::Writer>(variants: Vec<borrowck_dot::Variant>,\n             let (bccx, analysis_data) =\n                 borrowck::build_borrowck_dataflow_data_for_fn(ty_cx, fn_parts);\n \n-            let lcfg = LabelledCFG {\n-                ast_map: &ty_cx.map,\n-                cfg: &cfg,\n-                name: format!(\"node_{}\", code.id()),\n-            };\n             let lcfg = borrowck_dot::DataflowLabeller {\n                 inner: lcfg,\n                 variants: variants,"}, {"sha": "4ac8cb7ae1da7e929d624c0076fc657f4f493c81", "filename": "src/test/run-make/graphviz-flowgraph/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e2eacd5739136d6b9b921c6b23f49ad5f8b90db3/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/e2eacd5739136d6b9b921c6b23f49ad5f8b90db3/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2FMakefile?ref=e2eacd5739136d6b9b921c6b23f49ad5f8b90db3", "patch": "@@ -28,7 +28,7 @@ $(TMPDIR)/%.pp: %.rs\n \n $(TMPDIR)/%.dot: %.rs\n \t$(eval $(call FIND_LAST_BLOCK,$<))\n-\t$(RUSTC_LIB) -Z unstable-options --xpretty flowgraph=$(LASTBLOCKNUM_$<) $< -o $@.tmp\n+\t$(RUSTC_LIB) -Z unstable-options --xpretty flowgraph,unlabelled=$(LASTBLOCKNUM_$<) $< -o $@.tmp\n \tcat $@.tmp | sed -e 's@ (id=[0-9]*)@@g' \\\n                          -e 's@\\[label=\"\"\\]@@' \\\n                          -e 's@digraph [a-zA-Z0-9_]* @digraph block @' \\"}, {"sha": "12b16cc9f8ce8eabf3e7d70b5196bce50443a73a", "filename": "src/test/run-make/graphviz-flowgraph/f12.dot-expected.dot", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e2eacd5739136d6b9b921c6b23f49ad5f8b90db3/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff12.dot-expected.dot", "raw_url": "https://github.com/rust-lang/rust/raw/e2eacd5739136d6b9b921c6b23f49ad5f8b90db3/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff12.dot-expected.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff12.dot-expected.dot?ref=e2eacd5739136d6b9b921c6b23f49ad5f8b90db3", "patch": "@@ -34,7 +34,7 @@ digraph block {\n     N11 -> N12;\n     N12 -> N13;\n     N13 -> N14;\n-    N14 -> N6[label=\"exiting scope_0 expr break,\\lexiting scope_1 stmt break ;,\\lexiting scope_2 block { break ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if x == 2is { break ; \\\"unreachable\\\"; },\\lexiting scope_4 block { x -= 1is; if x == 2is { break ; \\\"unreachable\\\"; } }\"];\n+    N14 -> N6;\n     N15 -> N16;\n     N16 -> N17;\n     N17 -> N18;"}, {"sha": "47e9b3f6cbe1ad09884baa88f6b6021ab90b1da3", "filename": "src/test/run-make/graphviz-flowgraph/f15.dot-expected.dot", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2eacd5739136d6b9b921c6b23f49ad5f8b90db3/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff15.dot-expected.dot", "raw_url": "https://github.com/rust-lang/rust/raw/e2eacd5739136d6b9b921c6b23f49ad5f8b90db3/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff15.dot-expected.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff15.dot-expected.dot?ref=e2eacd5739136d6b9b921c6b23f49ad5f8b90db3", "patch": "@@ -61,7 +61,7 @@ digraph block {\n     N12 -> N13;\n     N13 -> N14;\n     N14 -> N15;\n-    N15 -> N9[label=\"exiting scope_0 expr break \\'outer,\\lexiting scope_1 stmt break \\'outer ;,\\lexiting scope_2 block { break \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if x == 1is { break \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if x == 1is { break \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_5 block {\\l    if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l    if y >= 2is { break ; \\\"unreachable\\\"; }\\l    y -= 3is;\\l}\\l,\\lexiting scope_6 expr \\'inner:\\l    loop  {\\l        if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2is { break ; \\\"unreachable\\\"; }\\l        y -= 3is;\\l    }\\l,\\lexiting scope_7 stmt \\'inner:\\l    loop  {\\l        if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2is { break ; \\\"unreachable\\\"; }\\l        y -= 3is;\\l    }\\l,\\lexiting scope_8 block {\\l    \\'inner:\\l        loop  {\\l            if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l            if y >= 2is { break ; \\\"unreachable\\\"; }\\l            y -= 3is;\\l        }\\l    y -= 4is;\\l    x -= 5is;\\l}\\l\"];\n+    N15 -> N9;\n     N16 -> N17;\n     N17 -> N18;\n     N18 -> N19;\n@@ -73,7 +73,7 @@ digraph block {\n     N23 -> N24;\n     N24 -> N25;\n     N25 -> N26;\n-    N26 -> N11[label=\"exiting scope_0 expr break,\\lexiting scope_1 stmt break ;,\\lexiting scope_2 block { break ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if y >= 2is { break ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if y >= 2is { break ; \\\"unreachable\\\"; },\\lexiting scope_5 block {\\l    if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l    if y >= 2is { break ; \\\"unreachable\\\"; }\\l    y -= 3is;\\l}\\l\"];\n+    N26 -> N11;\n     N27 -> N28;\n     N28 -> N29;\n     N29 -> N30;"}, {"sha": "a37869b2264986e01995827de48d1a2d0e7fab06", "filename": "src/test/run-make/graphviz-flowgraph/f16.dot-expected.dot", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2eacd5739136d6b9b921c6b23f49ad5f8b90db3/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff16.dot-expected.dot", "raw_url": "https://github.com/rust-lang/rust/raw/e2eacd5739136d6b9b921c6b23f49ad5f8b90db3/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff16.dot-expected.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff16.dot-expected.dot?ref=e2eacd5739136d6b9b921c6b23f49ad5f8b90db3", "patch": "@@ -64,7 +64,7 @@ digraph block {\n     N12 -> N13;\n     N13 -> N14;\n     N14 -> N15;\n-    N15 -> N8[label=\"exiting scope_0 expr continue \\'outer,\\lexiting scope_1 stmt continue \\'outer ;,\\lexiting scope_2 block { continue \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if x == 1is { continue \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if x == 1is { continue \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_5 block {\\l    if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l    if y >= 1is { break ; \\\"unreachable\\\"; }\\l    y -= 1is;\\l}\\l,\\lexiting scope_6 expr \\'inner:\\l    loop  {\\l        if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 1is { break ; \\\"unreachable\\\"; }\\l        y -= 1is;\\l    }\\l,\\lexiting scope_7 stmt \\'inner:\\l    loop  {\\l        if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 1is { break ; \\\"unreachable\\\"; }\\l        y -= 1is;\\l    }\\l,\\lexiting scope_8 block {\\l    \\'inner:\\l        loop  {\\l            if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l            if y >= 1is { break ; \\\"unreachable\\\"; }\\l            y -= 1is;\\l        }\\l    y -= 1is;\\l    x -= 1is;\\l}\\l\"];\n+    N15 -> N8;\n     N16 -> N17;\n     N17 -> N18;\n     N18 -> N19;\n@@ -76,7 +76,7 @@ digraph block {\n     N23 -> N24;\n     N24 -> N25;\n     N25 -> N26;\n-    N26 -> N11[label=\"exiting scope_0 expr break,\\lexiting scope_1 stmt break ;,\\lexiting scope_2 block { break ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if y >= 1is { break ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if y >= 1is { break ; \\\"unreachable\\\"; },\\lexiting scope_5 block {\\l    if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l    if y >= 1is { break ; \\\"unreachable\\\"; }\\l    y -= 1is;\\l}\\l\"];\n+    N26 -> N11;\n     N27 -> N28;\n     N28 -> N29;\n     N29 -> N30;"}, {"sha": "46f1634416e5b8a0dddbf544c96cec6c3d7b6a5a", "filename": "src/test/run-make/graphviz-flowgraph/f21.dot-expected.dot", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2eacd5739136d6b9b921c6b23f49ad5f8b90db3/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff21.dot-expected.dot", "raw_url": "https://github.com/rust-lang/rust/raw/e2eacd5739136d6b9b921c6b23f49ad5f8b90db3/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff21.dot-expected.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff21.dot-expected.dot?ref=e2eacd5739136d6b9b921c6b23f49ad5f8b90db3", "patch": "@@ -59,7 +59,7 @@ digraph block {\n     N12 -> N13;\n     N13 -> N14;\n     N14 -> N15;\n-    N15 -> N9[label=\"exiting scope_0 expr break \\'outer,\\lexiting scope_1 stmt break \\'outer ;,\\lexiting scope_2 block { break \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if x == 1is { break \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if x == 1is { break \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_5 block {\\l    if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l    if y >= 2is { return; \\\"unreachable\\\"; }\\l    y -= 3is;\\l    x -= 5is;\\l}\\l,\\lexiting scope_6 expr \\'inner:\\l    loop  {\\l        if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2is { return; \\\"unreachable\\\"; }\\l        y -= 3is;\\l        x -= 5is;\\l    }\\l,\\lexiting scope_7 stmt \\'inner:\\l    loop  {\\l        if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2is { return; \\\"unreachable\\\"; }\\l        y -= 3is;\\l        x -= 5is;\\l    }\\l,\\lexiting scope_8 block {\\l    \\'inner:\\l        loop  {\\l            if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l            if y >= 2is { return; \\\"unreachable\\\"; }\\l            y -= 3is;\\l            x -= 5is;\\l        }\\l    \\\"unreachable\\\";\\l}\\l\"];\n+    N15 -> N9;\n     N16 -> N17;\n     N17 -> N18;\n     N18 -> N19;\n@@ -71,7 +71,7 @@ digraph block {\n     N23 -> N24;\n     N24 -> N25;\n     N25 -> N26;\n-    N26 -> N1[label=\"exiting scope_0 expr \\'inner:\\l    loop  {\\l        if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2is { return; \\\"unreachable\\\"; }\\l        y -= 3is;\\l        x -= 5is;\\l    }\\l,\\lexiting scope_1 expr \\'outer:\\l    loop  {\\l        \\'inner:\\l            loop  {\\l                if x == 1is { break \\'outer ; \\\"unreachable\\\"; }\\l                if y >= 2is { return; \\\"unreachable\\\"; }\\l                y -= 3is;\\l                x -= 5is;\\l            }\\l        \\\"unreachable\\\";\\l    }\\l\"];\n+    N26 -> N1;\n     N27 -> N28;\n     N28 -> N29;\n     N29 -> N30;"}, {"sha": "3f35a9b0f9ab3b782a38df6c54c22d14e4461be4", "filename": "src/test/run-make/graphviz-flowgraph/f22.dot-expected.dot", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2eacd5739136d6b9b921c6b23f49ad5f8b90db3/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff22.dot-expected.dot", "raw_url": "https://github.com/rust-lang/rust/raw/e2eacd5739136d6b9b921c6b23f49ad5f8b90db3/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff22.dot-expected.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff22.dot-expected.dot?ref=e2eacd5739136d6b9b921c6b23f49ad5f8b90db3", "patch": "@@ -62,7 +62,7 @@ digraph block {\n     N12 -> N13;\n     N13 -> N14;\n     N14 -> N15;\n-    N15 -> N8[label=\"exiting scope_0 expr continue \\'outer,\\lexiting scope_1 stmt continue \\'outer ;,\\lexiting scope_2 block { continue \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if x == 1is { continue \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if x == 1is { continue \\'outer ; \\\"unreachable\\\"; },\\lexiting scope_5 block {\\l    if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l    if y >= 2is { return; \\\"unreachable\\\"; }\\l    x -= 1is;\\l    y -= 3is;\\l}\\l,\\lexiting scope_6 expr \\'inner:\\l    loop  {\\l        if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2is { return; \\\"unreachable\\\"; }\\l        x -= 1is;\\l        y -= 3is;\\l    }\\l,\\lexiting scope_7 stmt \\'inner:\\l    loop  {\\l        if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2is { return; \\\"unreachable\\\"; }\\l        x -= 1is;\\l        y -= 3is;\\l    }\\l,\\lexiting scope_8 block {\\l    \\'inner:\\l        loop  {\\l            if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l            if y >= 2is { return; \\\"unreachable\\\"; }\\l            x -= 1is;\\l            y -= 3is;\\l        }\\l    \\\"unreachable\\\";\\l}\\l\"];\n+    N15 -> N8;\n     N16 -> N17;\n     N17 -> N18;\n     N18 -> N19;\n@@ -74,7 +74,7 @@ digraph block {\n     N23 -> N24;\n     N24 -> N25;\n     N25 -> N26;\n-    N26 -> N1[label=\"exiting scope_0 expr \\'inner:\\l    loop  {\\l        if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l        if y >= 2is { return; \\\"unreachable\\\"; }\\l        x -= 1is;\\l        y -= 3is;\\l    }\\l,\\lexiting scope_1 expr \\'outer:\\l    loop  {\\l        \\'inner:\\l            loop  {\\l                if x == 1is { continue \\'outer ; \\\"unreachable\\\"; }\\l                if y >= 2is { return; \\\"unreachable\\\"; }\\l                x -= 1is;\\l                y -= 3is;\\l            }\\l        \\\"unreachable\\\";\\l    }\\l\"];\n+    N26 -> N1;\n     N27 -> N28;\n     N28 -> N29;\n     N29 -> N30;"}, {"sha": "c9f7d4cdf0aabf3019b1478481a1ab559eca6837", "filename": "src/test/run-make/graphviz-flowgraph/f23.dot-expected.dot", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e2eacd5739136d6b9b921c6b23f49ad5f8b90db3/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff23.dot-expected.dot", "raw_url": "https://github.com/rust-lang/rust/raw/e2eacd5739136d6b9b921c6b23f49ad5f8b90db3/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff23.dot-expected.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff23.dot-expected.dot?ref=e2eacd5739136d6b9b921c6b23f49ad5f8b90db3", "patch": "@@ -95,7 +95,7 @@ digraph block {\n     N40 -> N41;\n     N41 -> N42;\n     N42 -> N43;\n-    N43 -> N1[label=\"exiting scope_0 expr while y > 0is {\\l    y -= 1is;\\l    while z > 0is { z -= 1is; }\\l    if x > 10is { return; \\\"unreachable\\\"; }\\l}\\l,\\lexiting scope_1 expr while x > 0is {\\l    x -= 1is;\\l    while y > 0is {\\l        y -= 1is;\\l        while z > 0is { z -= 1is; }\\l        if x > 10is { return; \\\"unreachable\\\"; }\\l    }\\l}\\l\"];\n+    N43 -> N1;\n     N44 -> N45;\n     N45 -> N46;\n     N46 -> N47;"}, {"sha": "a5373bda39b188d881e7c00bd8f8775174dc6889", "filename": "src/test/run-make/graphviz-flowgraph/f24.dot-expected.dot", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e2eacd5739136d6b9b921c6b23f49ad5f8b90db3/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff24.dot-expected.dot", "raw_url": "https://github.com/rust-lang/rust/raw/e2eacd5739136d6b9b921c6b23f49ad5f8b90db3/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff24.dot-expected.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff24.dot-expected.dot?ref=e2eacd5739136d6b9b921c6b23f49ad5f8b90db3", "patch": "@@ -90,7 +90,7 @@ digraph block {\n     N13 -> N14;\n     N14 -> N15;\n     N15 -> N16;\n-    N16 -> N12[label=\"exiting scope_0 expr break,\\lexiting scope_1 stmt break ;,\\lexiting scope_2 block { break ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if x == 0is { break ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if x == 0is { break ; \\\"unreachable\\\"; },\\lexiting scope_5 block {\\l    if x == 0is { break ; \\\"unreachable\\\"; }\\l    x -= 1is;\\l    loop  {\\l        if y == 0is { break ; \\\"unreachable\\\"; }\\l        y -= 1is;\\l        loop  { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\\l        if x > 10is { return; \\\"unreachable\\\"; }\\l    }\\l}\\l\"];\n+    N16 -> N12;\n     N17 -> N18;\n     N18 -> N19;\n     N19 -> N20;\n@@ -107,7 +107,7 @@ digraph block {\n     N30 -> N31;\n     N31 -> N32;\n     N32 -> N33;\n-    N33 -> N29[label=\"exiting scope_0 expr break,\\lexiting scope_1 stmt break ;,\\lexiting scope_2 block { break ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if y == 0is { break ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if y == 0is { break ; \\\"unreachable\\\"; },\\lexiting scope_5 block {\\l    if y == 0is { break ; \\\"unreachable\\\"; }\\l    y -= 1is;\\l    loop  { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\\l    if x > 10is { return; \\\"unreachable\\\"; }\\l}\\l\"];\n+    N33 -> N29;\n     N34 -> N35;\n     N35 -> N36;\n     N36 -> N37;\n@@ -124,7 +124,7 @@ digraph block {\n     N47 -> N48;\n     N48 -> N49;\n     N49 -> N50;\n-    N50 -> N46[label=\"exiting scope_0 expr break,\\lexiting scope_1 stmt break ;,\\lexiting scope_2 block { break ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if z == 0is { break ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if z == 0is { break ; \\\"unreachable\\\"; },\\lexiting scope_5 block { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\"];\n+    N50 -> N46;\n     N51 -> N52;\n     N52 -> N53;\n     N53 -> N54;\n@@ -143,7 +143,7 @@ digraph block {\n     N64 -> N65;\n     N65 -> N66;\n     N66 -> N67;\n-    N67 -> N1[label=\"exiting scope_0 expr loop  {\\l    if y == 0is { break ; \\\"unreachable\\\"; }\\l    y -= 1is;\\l    loop  { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\\l    if x > 10is { return; \\\"unreachable\\\"; }\\l}\\l,\\lexiting scope_1 expr loop  {\\l    if x == 0is { break ; \\\"unreachable\\\"; }\\l    x -= 1is;\\l    loop  {\\l        if y == 0is { break ; \\\"unreachable\\\"; }\\l        y -= 1is;\\l        loop  { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\\l        if x > 10is { return; \\\"unreachable\\\"; }\\l    }\\l}\\l\"];\n+    N67 -> N1;\n     N68 -> N69;\n     N69 -> N70;\n     N70 -> N71;"}, {"sha": "2611219e816e950aeb35928b2e58f6790bd9556f", "filename": "src/test/run-make/graphviz-flowgraph/f25.dot-expected.dot", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e2eacd5739136d6b9b921c6b23f49ad5f8b90db3/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff25.dot-expected.dot", "raw_url": "https://github.com/rust-lang/rust/raw/e2eacd5739136d6b9b921c6b23f49ad5f8b90db3/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff25.dot-expected.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fgraphviz-flowgraph%2Ff25.dot-expected.dot?ref=e2eacd5739136d6b9b921c6b23f49ad5f8b90db3", "patch": "@@ -90,7 +90,7 @@ digraph block {\n     N13 -> N14;\n     N14 -> N15;\n     N15 -> N16;\n-    N16 -> N12[label=\"exiting scope_0 expr break,\\lexiting scope_1 stmt break ;,\\lexiting scope_2 block { break ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if x == 0is { break ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if x == 0is { break ; \\\"unreachable\\\"; },\\lexiting scope_5 block {\\l    if x == 0is { break ; \\\"unreachable\\\"; }\\l    x -= 1is;\\l    \\'a:\\l        loop  {\\l            if y == 0is { break ; \\\"unreachable\\\"; }\\l            y -= 1is;\\l            \\'a: loop  { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\\l            if x > 10is { continue \\'a ; \\\"unreachable\\\"; }\\l        }\\l}\\l\"];\n+    N16 -> N12;\n     N17 -> N18;\n     N18 -> N19;\n     N19 -> N20;\n@@ -107,7 +107,7 @@ digraph block {\n     N30 -> N31;\n     N31 -> N32;\n     N32 -> N33;\n-    N33 -> N29[label=\"exiting scope_0 expr break,\\lexiting scope_1 stmt break ;,\\lexiting scope_2 block { break ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if y == 0is { break ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if y == 0is { break ; \\\"unreachable\\\"; },\\lexiting scope_5 block {\\l    if y == 0is { break ; \\\"unreachable\\\"; }\\l    y -= 1is;\\l    \\'a: loop  { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\\l    if x > 10is { continue \\'a ; \\\"unreachable\\\"; }\\l}\\l\"];\n+    N33 -> N29;\n     N34 -> N35;\n     N35 -> N36;\n     N36 -> N37;\n@@ -124,7 +124,7 @@ digraph block {\n     N47 -> N48;\n     N48 -> N49;\n     N49 -> N50;\n-    N50 -> N46[label=\"exiting scope_0 expr break,\\lexiting scope_1 stmt break ;,\\lexiting scope_2 block { break ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if z == 0is { break ; \\\"unreachable\\\"; },\\lexiting scope_4 stmt if z == 0is { break ; \\\"unreachable\\\"; },\\lexiting scope_5 block { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\"];\n+    N50 -> N46;\n     N51 -> N52;\n     N52 -> N53;\n     N53 -> N54;\n@@ -143,7 +143,7 @@ digraph block {\n     N64 -> N65;\n     N65 -> N66;\n     N66 -> N67;\n-    N67 -> N28[label=\"exiting scope_0 expr continue \\'a,\\lexiting scope_1 stmt continue \\'a ;,\\lexiting scope_2 block { continue \\'a ; \\\"unreachable\\\"; },\\lexiting scope_3 expr if x > 10is { continue \\'a ; \\\"unreachable\\\"; },\\lexiting scope_4 block {\\l    if y == 0is { break ; \\\"unreachable\\\"; }\\l    y -= 1is;\\l    \\'a: loop  { if z == 0is { break ; \\\"unreachable\\\"; } z -= 1is; }\\l    if x > 10is { continue \\'a ; \\\"unreachable\\\"; }\\l}\\l\"];\n+    N67 -> N28;\n     N68 -> N69;\n     N69 -> N70;\n     N70 -> N71;"}]}