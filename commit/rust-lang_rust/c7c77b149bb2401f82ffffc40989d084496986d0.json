{"sha": "c7c77b149bb2401f82ffffc40989d084496986d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3Yzc3YjE0OWJiMjQwMWY4MmZmZmZjNDA5ODlkMDg0NDk2OTg2ZDA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-27T16:27:05Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-27T16:27:05Z"}, "message": "Auto merge of #1602 - RalfJung:box, r=RalfJung\n\ntest Box::into_raw aliasing\n\nDirectly test aliasing problems caused by `Box::into_raw` issues (like we have them again right now due to https://github.com/rust-lang/rust/pull/77187, but the pinned rustc is older than that so this should still be able to land).", "tree": {"sha": "de5bb38b7b06b36a9298f6a1c3332686cfd43df4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de5bb38b7b06b36a9298f6a1c3332686cfd43df4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7c77b149bb2401f82ffffc40989d084496986d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7c77b149bb2401f82ffffc40989d084496986d0", "html_url": "https://github.com/rust-lang/rust/commit/c7c77b149bb2401f82ffffc40989d084496986d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7c77b149bb2401f82ffffc40989d084496986d0/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fdea5be99eb44ea2b3adebb1f8a3c1c244ffd7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fdea5be99eb44ea2b3adebb1f8a3c1c244ffd7e", "html_url": "https://github.com/rust-lang/rust/commit/5fdea5be99eb44ea2b3adebb1f8a3c1c244ffd7e"}, {"sha": "ecf330f39eaed1f798445ae018cfb645517078bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecf330f39eaed1f798445ae018cfb645517078bc", "html_url": "https://github.com/rust-lang/rust/commit/ecf330f39eaed1f798445ae018cfb645517078bc"}], "stats": {"total": 88, "additions": 60, "deletions": 28}, "files": [{"sha": "353afb9d32100b81179f460dc8d5204f8c46dfa8", "filename": "tests/run-pass/box-pair-to-vec.rs", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/5fdea5be99eb44ea2b3adebb1f8a3c1c244ffd7e/tests%2Frun-pass%2Fbox-pair-to-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fdea5be99eb44ea2b3adebb1f8a3c1c244ffd7e/tests%2Frun-pass%2Fbox-pair-to-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fbox-pair-to-vec.rs?ref=5fdea5be99eb44ea2b3adebb1f8a3c1c244ffd7e", "patch": "@@ -1,28 +0,0 @@\n-#[repr(C)]\n-#[derive(Debug)]\n-struct PairFoo {\n-    fst: Foo,\n-    snd: Foo,\n-}\n-\n-#[derive(Debug)]\n-struct Foo(u64);\n-fn reinterstruct(box_pair: Box<PairFoo>) -> Vec<Foo> {\n-    let ref_pair = Box::leak(box_pair) as *mut PairFoo;\n-    let ptr_foo = unsafe { &mut (*ref_pair).fst as *mut Foo };\n-    unsafe {\n-        Vec::from_raw_parts(ptr_foo, 2, 2)\n-    }\n-}\n-\n-fn main() {\n-    let pair_foo = Box::new(PairFoo {\n-        fst: Foo(42),\n-        snd: Foo(1337),\n-    });\n-    println!(\"pair_foo = {:?}\", pair_foo);\n-    for (n, foo) in reinterstruct(pair_foo).into_iter().enumerate() {\n-        println!(\"foo #{} = {:?}\", n, foo);\n-    }\n-}\n-"}, {"sha": "b89c0ac1286ebe5204339e974a2b50611e9c858c", "filename": "tests/run-pass/box.rs", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/c7c77b149bb2401f82ffffc40989d084496986d0/tests%2Frun-pass%2Fbox.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7c77b149bb2401f82ffffc40989d084496986d0/tests%2Frun-pass%2Fbox.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fbox.rs?ref=c7c77b149bb2401f82ffffc40989d084496986d0", "patch": "@@ -0,0 +1,60 @@\n+#![feature(ptr_internals)]\n+\n+fn main() {\n+    into_raw();\n+    into_unique();\n+    boxed_pair_to_vec();\n+}\n+\n+fn into_raw() { unsafe {\n+    let b = Box::new(4i32);\n+    let r = Box::into_raw(b);\n+\n+    // \"lose the tag\"\n+    let r2 = ((r as usize)+0) as *mut i32;\n+    *(&mut *r2) = 7;\n+\n+    // Use original ptr again\n+    *(&mut *r) = 17;\n+    drop(Box::from_raw(r));\n+}}\n+\n+fn into_unique() { unsafe {\n+    let b = Box::new(4i32);\n+    let u = Box::into_unique(b);\n+\n+    // \"lose the tag\"\n+    let r = ((u.as_ptr() as usize)+0) as *mut i32;\n+    *(&mut *r) = 7;\n+\n+    // Use original ptr again.\n+    drop(Box::from_raw(u.as_ptr()));\n+}}\n+\n+fn boxed_pair_to_vec() {\n+    #[repr(C)]\n+    #[derive(Debug)]\n+    struct PairFoo {\n+        fst: Foo,\n+        snd: Foo,\n+    }\n+\n+    #[derive(Debug)]\n+    struct Foo(u64);\n+    fn reinterstruct(box_pair: Box<PairFoo>) -> Vec<Foo> {\n+        let ref_pair = Box::leak(box_pair) as *mut PairFoo;\n+        let ptr_foo = unsafe { &mut (*ref_pair).fst as *mut Foo };\n+        unsafe {\n+            Vec::from_raw_parts(ptr_foo, 2, 2)\n+        }\n+    }\n+\n+    let pair_foo = Box::new(PairFoo {\n+        fst: Foo(42),\n+        snd: Foo(1337),\n+    });\n+    println!(\"pair_foo = {:?}\", pair_foo);\n+    for (n, foo) in reinterstruct(pair_foo).into_iter().enumerate() {\n+        println!(\"foo #{} = {:?}\", n, foo);\n+    }\n+}"}, {"sha": "230ef368da64494e27dc048cf97e96fa24b00da9", "filename": "tests/run-pass/box.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/c7c77b149bb2401f82ffffc40989d084496986d0/tests%2Frun-pass%2Fbox.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/c7c77b149bb2401f82ffffc40989d084496986d0/tests%2Frun-pass%2Fbox.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fbox.stdout?ref=c7c77b149bb2401f82ffffc40989d084496986d0", "previous_filename": "tests/run-pass/box-pair-to-vec.stdout"}]}