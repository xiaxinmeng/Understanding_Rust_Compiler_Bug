{"sha": "860e8fd98b07cc0dfbb3ff33124778c2225ba81d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2MGU4ZmQ5OGIwN2NjMGRmYmIzZmYzMzEyNDc3OGMyMjI1YmE4MWQ=", "commit": {"author": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-06-24T03:23:04Z"}, "committer": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-06-24T03:23:04Z"}, "message": "Combined set_registers and get_registers into swap_registers.", "tree": {"sha": "7ebc661359376696c8d40ac26530543d7949af0e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ebc661359376696c8d40ac26530543d7949af0e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/860e8fd98b07cc0dfbb3ff33124778c2225ba81d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/860e8fd98b07cc0dfbb3ff33124778c2225ba81d", "html_url": "https://github.com/rust-lang/rust/commit/860e8fd98b07cc0dfbb3ff33124778c2225ba81d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/860e8fd98b07cc0dfbb3ff33124778c2225ba81d/comments", "author": null, "committer": null, "parents": [{"sha": "98dee91f2568522bc129f8cffcaa2879b43646c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/98dee91f2568522bc129f8cffcaa2879b43646c3", "html_url": "https://github.com/rust-lang/rust/commit/98dee91f2568522bc129f8cffcaa2879b43646c3"}], "stats": {"total": 77, "additions": 20, "deletions": 57}, "files": [{"sha": "062bc7f8dd58a3dc93d5d45673964726170c8d74", "filename": "src/rt/arch/i386/_context.s", "status": "modified", "additions": 15, "deletions": 49, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/860e8fd98b07cc0dfbb3ff33124778c2225ba81d/src%2Frt%2Farch%2Fi386%2F_context.s", "raw_url": "https://github.com/rust-lang/rust/raw/860e8fd98b07cc0dfbb3ff33124778c2225ba81d/src%2Frt%2Farch%2Fi386%2F_context.s", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fi386%2F_context.s?ref=860e8fd98b07cc0dfbb3ff33124778c2225ba81d", "patch": "@@ -13,15 +13,17 @@ Saves a set of registers. This is used by our implementation of\n getcontext.\n \n The registers_t variable is in (%esp)\n-*/\n-\t\n-.globl get_registers\n-get_registers:\n-\tmovl 4(%esp), %eax\n-\tmovl %eax, 0(%eax)\n+*/\t\n+\n+// swap_registers(registers_t *oregs, registers_t *regs)\n+.globl swap_registers\n+swap_registers:\n+    // save the old context\n+    movl 4(%esp), %eax\n+\t//movl %eax, 0(%eax)\n \tmovl %ebx, 4(%eax)\n-\tmovl %ecx, 8(%eax)\n-\tmovl %edx, 12(%eax)\n+\t//movl %ecx, 8(%eax)\n+\t//movl %edx, 12(%eax)\n \tmovl %ebp, 16(%eax)\n \tmovl %esi, 20(%eax)\n \tmovl %edi, 24(%eax)\n@@ -43,17 +45,12 @@ get_registers:\n     movl %esp, 28(%eax)\n \tmovl %ecx, 48(%eax)\n \n-\t// return 0\n-\txor %eax, %eax\n-\tjmp *%ecx\n-\n-.globl set_registers\n-set_registers:\n-\tmovl 4(%esp), %eax\n+    // restore the new context\n+    movl 4(%esp), %eax\n \n \tmovl 4(%eax), %ebx\n \t// save ecx for later...\n-\tmovl 12(%eax), %edx\n+\t//movl 12(%eax), %edx\n \tmovl 16(%eax), %ebp\n \tmovl 20(%eax), %esi\n \tmovl 24(%eax), %edi\n@@ -71,36 +68,5 @@ set_registers:\n \tpush %ecx\n \tpopf\n \n-    // get ready to return.\n-\tmov 48(%eax), %ecx\n-\tpush %ecx\t\n-\t\n-\t// okay, now we can restore ecx.\n-\tmovl 8(%eax), %ecx\n-\n-\t// return 1 to the saved eip\n-\tmovl $1, %eax\n-\tret\n-\n-// swap_registers(registers_t *oregs, registers_t *regs)\n-.globl swap_registers\n-swap_registers:\n-    // %eax = get_registers(oregs);\n-    movl 4(%esp), %eax\n-    push %eax\n-    call get_registers\n-        \n-    // if(!%eax) goto call_set\n-    test %eax, %eax\n-    jz call_set\n-\n-    // else\n-    addl $4, %esp\n-    ret\n-        \n-call_set:\n-    // set_registers(regs)\n-    movl 12(%esp), %eax\n-    movl %eax, 0(%esp)\n-    call set_registers\n-    // set_registers never returns\n\\ No newline at end of file\n+    // Return!\n+    jmp *48(%eax)"}, {"sha": "b68a883a194a2ba63aed9c501e6fb81e318f63fd", "filename": "src/rt/arch/i386/context.cpp", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/860e8fd98b07cc0dfbb3ff33124778c2225ba81d/src%2Frt%2Farch%2Fi386%2Fcontext.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/860e8fd98b07cc0dfbb3ff33124778c2225ba81d/src%2Frt%2Farch%2Fi386%2Fcontext.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fi386%2Fcontext.cpp?ref=860e8fd98b07cc0dfbb3ff33124778c2225ba81d", "patch": "@@ -5,17 +5,12 @@\n #include <stdio.h>\n #include <stdlib.h>\n \n-//extern \"C\" uint32_t CDECL get_registers(registers_t *regs) \n-//  asm (\"get_registers\");\n extern \"C\" uint32_t CDECL swap_registers(registers_t *oregs, \n                                          registers_t *regs)\n   asm (\"swap_registers\");\n \n context::context()\n-  : next(NULL)\n {\n-  //get_registers(&regs);\n-  swap_registers(&regs, &regs);\n }\n \n void context::swap(context &out)\n@@ -24,13 +19,15 @@ void context::swap(context &out)\n }\n \n void context::call(void *f, void *arg, void *stack) {\n+  // Get the current context, which we will then modify to call the\n+  // given function.\n+  swap(*this);\n+\n   // set up the trampoline frame\n   uint32_t *sp = (uint32_t *)stack;\n \n   // Shift the stack pointer so the alignment works out right.\n-  sp = align_down(sp) - 2;\n-\n-  *--sp = (uint32_t)this;\n+  sp = align_down(sp) - 3;\n   *--sp = (uint32_t)arg;\n   *--sp = 0xdeadbeef;\n "}]}