{"sha": "3d008a78d0ab1d43629326d58d4b2a157303dd00", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkMDA4YTc4ZDBhYjFkNDM2MjkzMjZkNThkNGIyYTE1NzMwM2RkMDA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-30T19:07:04Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-30T19:07:04Z"}, "message": "Move all commands to ctx", "tree": {"sha": "393c5cb5ad9249409808dc46cc7a344b79958ab1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/393c5cb5ad9249409808dc46cc7a344b79958ab1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d008a78d0ab1d43629326d58d4b2a157303dd00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d008a78d0ab1d43629326d58d4b2a157303dd00", "html_url": "https://github.com/rust-lang/rust/commit/3d008a78d0ab1d43629326d58d4b2a157303dd00", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d008a78d0ab1d43629326d58d4b2a157303dd00/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da80b6c1e1c09831b2f30233ddacaf50fa58f812", "url": "https://api.github.com/repos/rust-lang/rust/commits/da80b6c1e1c09831b2f30233ddacaf50fa58f812", "html_url": "https://github.com/rust-lang/rust/commit/da80b6c1e1c09831b2f30233ddacaf50fa58f812"}], "stats": {"total": 48, "additions": 26, "deletions": 22}, "files": [{"sha": "4a2e8e4db20dff3cb9c7521d43a10ebd9fbca4d5", "filename": "editors/code/src/commands/index.ts", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3d008a78d0ab1d43629326d58d4b2a157303dd00/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts", "raw_url": "https://github.com/rust-lang/rust/raw/3d008a78d0ab1d43629326d58d4b2a157303dd00/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts?ref=3d008a78d0ab1d43629326d58d4b2a157303dd00", "patch": "@@ -1,3 +1,6 @@\n+import * as vscode from 'vscode';\n+import * as lc from 'vscode-languageclient';\n+\n import { Ctx, Cmd } from '../ctx';\n \n import { analyzerStatus } from './analyzer_status';\n@@ -16,6 +19,17 @@ function collectGarbage(ctx: Ctx): Cmd {\n     };\n }\n \n+function showReferences(ctx: Ctx): Cmd {\n+    return (uri: string, position: lc.Position, locations: lc.Location[]) => {\n+        vscode.commands.executeCommand(\n+            'editor.action.showReferences',\n+            vscode.Uri.parse(uri),\n+            ctx.client.protocol2CodeConverter.asPosition(position),\n+            locations.map(ctx.client.protocol2CodeConverter.asLocation),\n+        );\n+    };\n+}\n+\n export {\n     analyzerStatus,\n     expandMacro,\n@@ -27,5 +41,6 @@ export {\n     inlayHints,\n     collectGarbage,\n     run,\n-    runSingle\n+    runSingle,\n+    showReferences,\n };"}, {"sha": "8cd86c21e1d71ba078ae4d8ae29f9b1ea57e713b", "filename": "editors/code/src/commands/runnables.ts", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3d008a78d0ab1d43629326d58d4b2a157303dd00/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts", "raw_url": "https://github.com/rust-lang/rust/raw/3d008a78d0ab1d43629326d58d4b2a157303dd00/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts?ref=3d008a78d0ab1d43629326d58d4b2a157303dd00", "patch": "@@ -8,7 +8,7 @@ export function run(ctx: Ctx): Cmd {\n \n     return async () => {\n         const editor = ctx.activeRustEditor;\n-        if (!editor) return\n+        if (!editor) return;\n \n         const textDocument: lc.TextDocumentIdentifier = {\n             uri: editor.document.uri.toString(),\n@@ -43,13 +43,13 @@ export function run(ctx: Ctx): Cmd {\n         prevRunnable = item;\n         const task = createTask(item.runnable);\n         return await vscode.tasks.executeTask(task);\n-    }\n+    };\n }\n \n export function runSingle(ctx: Ctx): Cmd {\n     return async (runnable: Runnable) => {\n         const editor = ctx.activeRustEditor;\n-        if (!editor) return\n+        if (!editor) return;\n \n         const task = createTask(runnable);\n         task.group = vscode.TaskGroup.Build;\n@@ -60,7 +60,7 @@ export function runSingle(ctx: Ctx): Cmd {\n         };\n \n         return vscode.tasks.executeTask(task);\n-    }\n+    };\n }\n \n interface RunnablesParams {"}, {"sha": "4a3e1ab7c4c0313200432f34316b133b366b9376", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 6, "deletions": 17, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/3d008a78d0ab1d43629326d58d4b2a157303dd00/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/3d008a78d0ab1d43629326d58d4b2a157303dd00/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=3d008a78d0ab1d43629326d58d4b2a157303dd00", "patch": "@@ -13,6 +13,8 @@ let ctx!: Ctx;\n \n export async function activate(context: vscode.ExtensionContext) {\n     ctx = new Ctx(context);\n+\n+    // Commands which invokes manually via command pallet, shortcut, etc.\n     ctx.registerCommand('analyzerStatus', commands.analyzerStatus);\n     ctx.registerCommand('collectGarbage', commands.collectGarbage);\n     ctx.registerCommand('matchingBrace', commands.matchingBrace);\n@@ -21,28 +23,15 @@ export async function activate(context: vscode.ExtensionContext) {\n     ctx.registerCommand('syntaxTree', commands.syntaxTree);\n     ctx.registerCommand('expandMacro', commands.expandMacro);\n     ctx.registerCommand('run', commands.run);\n-    ctx.registerCommand('runSingle', commands.runSingle); // Internal action for lenses\n+\n+    // Internal commands which are invoked by the server.\n+    ctx.registerCommand('runSingle', commands.runSingle);\n+    ctx.registerCommand('showReferences', commands.showReferences);\n \n     function disposeOnDeactivation(disposable: vscode.Disposable) {\n         context.subscriptions.push(disposable);\n     }\n \n-    function registerCommand(name: string, f: any) {\n-        disposeOnDeactivation(vscode.commands.registerCommand(name, f));\n-    }\n-\n-    registerCommand(\n-        'rust-analyzer.showReferences',\n-        (uri: string, position: lc.Position, locations: lc.Location[]) => {\n-            vscode.commands.executeCommand(\n-                'editor.action.showReferences',\n-                vscode.Uri.parse(uri),\n-                Server.client.protocol2CodeConverter.asPosition(position),\n-                locations.map(Server.client.protocol2CodeConverter.asLocation),\n-            );\n-        },\n-    );\n-\n     if (Server.config.enableEnhancedTyping) {\n         ctx.overrideCommand('type', commands.onEnter);\n     }"}]}