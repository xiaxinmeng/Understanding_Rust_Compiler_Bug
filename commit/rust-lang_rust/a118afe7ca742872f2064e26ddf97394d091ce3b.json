{"sha": "a118afe7ca742872f2064e26ddf97394d091ce3b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExMThhZmU3Y2E3NDI4NzJmMjA2NGUyNmRkZjk3Mzk0ZDA5MWNlM2I=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-12-06T09:56:03Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-12-15T15:27:53Z"}, "message": "add a test regarding relating closure and fn generics\n\nTurns out this works but we had no test targeting it.", "tree": {"sha": "435650582744d074248496216c3158119a720c41", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/435650582744d074248496216c3158119a720c41"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a118afe7ca742872f2064e26ddf97394d091ce3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a118afe7ca742872f2064e26ddf97394d091ce3b", "html_url": "https://github.com/rust-lang/rust/commit/a118afe7ca742872f2064e26ddf97394d091ce3b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a118afe7ca742872f2064e26ddf97394d091ce3b/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9824c50edd067fefb2e4fd6f6d1a4fe739a145b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9824c50edd067fefb2e4fd6f6d1a4fe739a145b", "html_url": "https://github.com/rust-lang/rust/commit/e9824c50edd067fefb2e4fd6f6d1a4fe739a145b"}], "stats": {"total": 119, "additions": 119, "deletions": 0}, "files": [{"sha": "d5bd4b60118fcaffa9689319c155444c767c8505", "filename": "src/test/ui/nll/closure-requirements/propagate-from-trait-match.rs", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/a118afe7ca742872f2064e26ddf97394d091ce3b/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-from-trait-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a118afe7ca742872f2064e26ddf97394d091ce3b/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-from-trait-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-from-trait-match.rs?ref=a118afe7ca742872f2064e26ddf97394d091ce3b", "patch": "@@ -0,0 +1,59 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that regions which appear only in the closure's generics (in\n+// this case, `'a`) are properly mapped to the creator's generics. In\n+// this case, the closure constrains its type parameter `T` to outlive\n+// the same `'a` for which it implements `Trait`, which can only be the `'a`\n+// from the function definition.\n+\n+// compile-flags:-Znll -Zborrowck=mir -Zverbose\n+\n+#![feature(rustc_attrs)]\n+#![allow(dead_code)]\n+\n+trait Trait<'a> {}\n+\n+fn establish_relationships<T, F>(value: T, closure: F)\n+where\n+    F: FnOnce(T),\n+{\n+    closure(value)\n+}\n+\n+fn require<'a, T>(t: T)\n+where\n+    T: Trait<'a> + 'a,\n+{\n+}\n+\n+#[rustc_regions]\n+fn supply<'a, T>(value: T)\n+where\n+    T: Trait<'a>,\n+{\n+    establish_relationships(value, |value| {\n+        // This function call requires that\n+        //\n+        // (a) T: Trait<'a>\n+        //\n+        // and\n+        //\n+        // (b) T: 'a\n+        //\n+        // The latter does not hold.\n+\n+        require(value);\n+        //~^ WARNING not reporting region error due to -Znll\n+        //~| ERROR failed type test\n+    });\n+}\n+\n+fn main() {}"}, {"sha": "eb415ec8d1ae4a02f1f4532acf6d7d2ef9de1f99", "filename": "src/test/ui/nll/closure-requirements/propagate-from-trait-match.stderr", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/a118afe7ca742872f2064e26ddf97394d091ce3b/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-from-trait-match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a118afe7ca742872f2064e26ddf97394d091ce3b/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-from-trait-match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-from-trait-match.stderr?ref=a118afe7ca742872f2064e26ddf97394d091ce3b", "patch": "@@ -0,0 +1,60 @@\n+warning: not reporting region error due to -Znll\n+  --> $DIR/propagate-from-trait-match.rs:53:9\n+   |\n+53 |         require(value);\n+   |         ^^^^^^^\n+\n+note: External requirements\n+  --> $DIR/propagate-from-trait-match.rs:42:36\n+   |\n+42 |       establish_relationships(value, |value| {\n+   |  ____________________________________^\n+43 | |         // This function call requires that\n+44 | |         //\n+45 | |         // (a) T: Trait<'a>\n+...  |\n+55 | |         //~| ERROR failed type test\n+56 | |     });\n+   | |_____^\n+   |\n+   = note: defining type: DefId(0/1:16 ~ propagate_from_trait_match[317d]::supply[0]::{{closure}}[0]) with closure substs [\n+               '_#1r,\n+               T,\n+               i32,\n+               extern \"rust-call\" fn((T,))\n+           ]\n+   = note: number of external vids: 2\n+   = note: where T: '_#1r\n+\n+error: failed type test: TypeTest { generic_kind: T/#1, lower_bound: '_#3r, point: bb0[3], span: $DIR/propagate-from-trait-match.rs:42:36: 56:6, test: IsOutlivedByAnyRegionIn(['_#2r]) }\n+  --> $DIR/propagate-from-trait-match.rs:42:36\n+   |\n+42 |       establish_relationships(value, |value| {\n+   |  ____________________________________^\n+43 | |         // This function call requires that\n+44 | |         //\n+45 | |         // (a) T: Trait<'a>\n+...  |\n+55 | |         //~| ERROR failed type test\n+56 | |     });\n+   | |_____^\n+\n+note: No external requirements\n+  --> $DIR/propagate-from-trait-match.rs:38:1\n+   |\n+38 | / fn supply<'a, T>(value: T)\n+39 | | where\n+40 | |     T: Trait<'a>,\n+41 | | {\n+...  |\n+56 | |     });\n+57 | | }\n+   | |_^\n+   |\n+   = note: defining type: DefId(0/0:6 ~ propagate_from_trait_match[317d]::supply[0]) with substs [\n+               '_#1r,\n+               T\n+           ]\n+\n+error: aborting due to previous error\n+"}]}