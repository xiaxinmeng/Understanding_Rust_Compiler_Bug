{"sha": "88fc45b37cb6bdae3d7102e79e247179a4130b2d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4ZmM0NWIzN2NiNmJkYWUzZDcxMDJlNzllMjQ3MTc5YTQxMzBiMmQ=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-08-29T09:32:10Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-08-29T09:58:22Z"}, "message": "Get some more rustc tests working", "tree": {"sha": "a268846a5cf215ff320f7f152bb54cc443f2873a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a268846a5cf215ff320f7f152bb54cc443f2873a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88fc45b37cb6bdae3d7102e79e247179a4130b2d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlmlOsAACgkQpp+NIls6\n19k3yw//YbW7Ad4Ejuz9Ypn7AX9kbgyfekFsrW+OV4Ypmid+Du45P7XJauGKnjCE\n6hdeKWCvnis7ePRIA8conanRiSJxKDhqReIxm5iiCo5Edy4aXuhVmQMbRfPIbdlz\nm5MKKK9QrXWuj3uBpoZB+77EcjNS2sxW+hujuWBOkxKqmJSW6eWWHCciW6uns3D1\nlJQuB+pcYmZbU+/YDLvlOyn7+3Yfh/fvCqQJuUXnq+42Bt64cKuxo1Ecxx7F3uHo\nxOB7sAyojfZ+B9Gvb8FdcsqPyI9wouJ9AmtovdoHt5DLixwUgJmPF93ZZW8tgxlQ\nnu1uNUwUCNrQtEsUkVfvyOg7M2hewduwF2SX7SRCSbbHxSD+YO/FqQ58MRceHXQO\nxEXOorWAYOklDL1CViD6S20p3HjKvLMetdl389B/EX1zn2IJaS30Bi9oB7zuZAaY\nYkMCjYIHr1yDdce7c3WpW2qZcR2lEIroEb4EYVLrdakANhfkS5kUa9EndqZcoUOW\n4wasPilvSaR8V+rB+1DqjBJOc97maQsckEn52zMi1kEmNwptMJJmW1zAMvHsZl/s\nEmmxUUtHUzVWl2tPzKKUedT9gcELJyOqZeIZ+hSoYbqzLOBigxAdSQvKbO13lbPh\n5WzPRMYyFcb5SMmUAp9P7Qex9+JSYp1mxEFI5kKa0D6aR4C0zOE=\n=BErO\n-----END PGP SIGNATURE-----", "payload": "tree a268846a5cf215ff320f7f152bb54cc443f2873a\nparent fb96a090af28b01ff1eb8318d0a5a5de60a64b97\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1503999130 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1504000702 +0200\n\nGet some more rustc tests working\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88fc45b37cb6bdae3d7102e79e247179a4130b2d", "html_url": "https://github.com/rust-lang/rust/commit/88fc45b37cb6bdae3d7102e79e247179a4130b2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88fc45b37cb6bdae3d7102e79e247179a4130b2d/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb96a090af28b01ff1eb8318d0a5a5de60a64b97", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb96a090af28b01ff1eb8318d0a5a5de60a64b97", "html_url": "https://github.com/rust-lang/rust/commit/fb96a090af28b01ff1eb8318d0a5a5de60a64b97"}], "stats": {"total": 41, "additions": 27, "deletions": 14}, "files": [{"sha": "a74a53fa75888fe21685d05a58a3b2ba20e76933", "filename": "miri/fn_call.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/88fc45b37cb6bdae3d7102e79e247179a4130b2d/miri%2Ffn_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88fc45b37cb6bdae3d7102e79e247179a4130b2d/miri%2Ffn_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri%2Ffn_call.rs?ref=88fc45b37cb6bdae3d7102e79e247179a4130b2d", "patch": "@@ -522,6 +522,7 @@ impl<'a, 'tcx> EvalContextExt<'tcx> for EvalContext<'a, 'tcx, super::Evaluator>\n         // In some cases in non-MIR libstd-mode, not having a destination is legit.  Handle these early.\n         match &path[..] {\n             \"std::panicking::rust_panic_with_hook\" |\n+            \"core::panicking::panic_fmt::::panic_impl\" |\n             \"std::rt::begin_panic_fmt\" => return err!(Panic),\n             _ => {}\n         }"}, {"sha": "2a4515959d1fec0aeaaef5f6925a3a4aed7fb688", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/88fc45b37cb6bdae3d7102e79e247179a4130b2d/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88fc45b37cb6bdae3d7102e79e247179a4130b2d/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=88fc45b37cb6bdae3d7102e79e247179a4130b2d", "patch": "@@ -9,7 +9,7 @@ use rustc::mir;\n use rustc::traits::Reveal;\n use rustc::ty::layout::{self, Layout, Size, Align, HasDataLayout};\n use rustc::ty::subst::{Subst, Substs, Kind};\n-use rustc::ty::{self, Ty, TyCtxt, TypeFoldable, Binder};\n+use rustc::ty::{self, Ty, TyCtxt, TypeFoldable};\n use rustc_data_structures::indexed_vec::Idx;\n use syntax::codemap::{self, DUMMY_SP};\n use syntax::ast::Mutability;\n@@ -282,15 +282,8 @@ impl<'a, 'tcx, M: Machine<'tcx>> EvalContext<'a, 'tcx, M> {\n         // let's simply get rid of them\n         let without_lifetimes = self.tcx.erase_regions(&ty);\n         let substituted = without_lifetimes.subst(self.tcx, substs);\n-        self.tcx.normalize_associated_type(&substituted)\n-    }\n-\n-    pub fn erase_lifetimes<T>(&self, value: &Binder<T>) -> T\n-    where\n-        T: TypeFoldable<'tcx>,\n-    {\n-        let value = self.tcx.erase_late_bound_regions(value);\n-        self.tcx.erase_regions(&value)\n+        let substituted = self.tcx.normalize_associated_type(&substituted);\n+        substituted\n     }\n \n     /// Return the size and aligment of the value at the given type."}, {"sha": "ebd6649c447c748dff3118407d3056590e8775b6", "filename": "src/librustc_mir/interpret/terminator/mod.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/88fc45b37cb6bdae3d7102e79e247179a4130b2d/src%2Flibrustc_mir%2Finterpret%2Fterminator%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88fc45b37cb6bdae3d7102e79e247179a4130b2d/src%2Flibrustc_mir%2Finterpret%2Fterminator%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fterminator%2Fmod.rs?ref=88fc45b37cb6bdae3d7102e79e247179a4130b2d", "patch": "@@ -75,9 +75,8 @@ impl<'a, 'tcx, M: Machine<'tcx>> EvalContext<'a, 'tcx, M> {\n                         match instance_ty.sty {\n                             ty::TyFnDef(..) => {\n                                 let real_sig = instance_ty.fn_sig(self.tcx);\n-                                let sig = self.erase_lifetimes(&sig);\n-                                let real_sig = self.erase_lifetimes(&real_sig);\n-                                let real_sig = self.tcx.normalize_associated_type(&real_sig);\n+                                let sig = self.tcx.erase_late_bound_regions_and_normalize(&sig);\n+                                let real_sig = self.tcx.erase_late_bound_regions_and_normalize(&real_sig);\n                                 if !self.check_sig_compat(sig, real_sig)? {\n                                     return err!(FunctionPointerTyMismatch(real_sig, sig));\n                                 }\n@@ -96,7 +95,7 @@ impl<'a, 'tcx, M: Machine<'tcx>> EvalContext<'a, 'tcx, M> {\n                     }\n                 };\n                 let args = self.operands_to_args(args)?;\n-                let sig = self.erase_lifetimes(&sig);\n+                let sig = self.tcx.erase_late_bound_regions_and_normalize(&sig);\n                 self.eval_fn_call(\n                     fn_def,\n                     destination,"}, {"sha": "b7a9daaf8abd4c2fdc3db971b8c2e14ffcf9554f", "filename": "tests/run-pass/issue-27901.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/88fc45b37cb6bdae3d7102e79e247179a4130b2d/tests%2Frun-pass%2Fissue-27901.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88fc45b37cb6bdae3d7102e79e247179a4130b2d/tests%2Frun-pass%2Fissue-27901.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fissue-27901.rs?ref=88fc45b37cb6bdae3d7102e79e247179a4130b2d", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait Stream { type Item; }\n+impl<'a> Stream for &'a str { type Item = u8; }\n+fn f<'s>(s: &'s str) -> (&'s str, <&'s str as Stream>::Item) {\n+    (s, 42)\n+}\n+\n+fn main() {\n+    let fx = f as for<'t> fn(&'t str) -> (&'t str, <&'t str as Stream>::Item);\n+    assert_eq!(fx(\"hi\"), (\"hi\", 42));\n+}"}]}