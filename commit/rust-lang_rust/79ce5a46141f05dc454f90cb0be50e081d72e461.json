{"sha": "79ce5a46141f05dc454f90cb0be50e081d72e461", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5Y2U1YTQ2MTQxZjA1ZGM0NTRmOTBjYjBiZTUwZTA4MWQ3MmU0NjE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-11T22:14:07Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-11T22:19:16Z"}, "message": "rustc: Implement pointer dereference; add a test case", "tree": {"sha": "9fb65a844b88b782e62ab9a608587e539030dbde", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fb65a844b88b782e62ab9a608587e539030dbde"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79ce5a46141f05dc454f90cb0be50e081d72e461", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79ce5a46141f05dc454f90cb0be50e081d72e461", "html_url": "https://github.com/rust-lang/rust/commit/79ce5a46141f05dc454f90cb0be50e081d72e461", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79ce5a46141f05dc454f90cb0be50e081d72e461/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4618e802db4bfd886ca3d92a86a364122fb7872a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4618e802db4bfd886ca3d92a86a364122fb7872a", "html_url": "https://github.com/rust-lang/rust/commit/4618e802db4bfd886ca3d92a86a364122fb7872a"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "55d4fb400e19ae15ebea1e7e4f08e2f5317df10d", "filename": "src/comp/middle/alias.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/79ce5a46141f05dc454f90cb0be50e081d72e461/src%2Fcomp%2Fmiddle%2Falias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79ce5a46141f05dc454f90cb0be50e081d72e461/src%2Fcomp%2Fmiddle%2Falias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Falias.rs?ref=79ce5a46141f05dc454f90cb0be50e081d72e461", "patch": "@@ -573,6 +573,7 @@ fn expr_root(&ctx cx, @ast::expr ex, bool autoderef) ->\n                         case (ty::ty_box(?mt)) { mut = mt.mut != ast::imm; }\n                         case (ty::ty_res(_, _, _)) {}\n                         case (ty::ty_tag(_, _)) {}\n+                        case (ty::ty_ptr(?mt)) { mut = mt.mut != ast::imm; }\n                     }\n                     vec::push(ds, rec(mut=mut, kind=unbox, outer_t=base_t));\n                     ex = base;"}, {"sha": "9f4abee52d48312edca9e9efbeb410cf7bd83a2a", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/79ce5a46141f05dc454f90cb0be50e081d72e461/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79ce5a46141f05dc454f90cb0be50e081d72e461/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=79ce5a46141f05dc454f90cb0be50e081d72e461", "patch": "@@ -5263,11 +5263,11 @@ fn trans_lval_gen(&@block_ctxt cx, &@ast::expr e) -> lval_result {\n             auto t = ty::expr_ty(ccx.tcx, base);\n             auto val = alt (ty::struct(ccx.tcx, t)) {\n                 case (ty::ty_box(_)) {\n-                    sub.bcx.build.GEP\n+                    sub.bcx.build.InBoundsGEP\n                     (sub.val, ~[C_int(0), C_int(abi::box_rc_field_body)])\n                 }\n                 case (ty::ty_res(_, _, _)) {\n-                    sub.bcx.build.GEP(sub.val, ~[C_int(0), C_int(1)])\n+                    sub.bcx.build.InBoundsGEP(sub.val, ~[C_int(0), C_int(1)])\n                 }\n                 case (ty::ty_tag(_, _)) {\n                     auto ety = ty::expr_ty(ccx.tcx, e);\n@@ -5279,6 +5279,7 @@ fn trans_lval_gen(&@block_ctxt cx, &@ast::expr e) -> lval_result {\n                     };\n                     sub.bcx.build.PointerCast(sub.val, ellty)\n                 }\n+                case (ty::ty_ptr(_)) { sub.val }\n             };\n             ret lval_mem(sub.bcx, val);\n         }"}, {"sha": "e0cf926141e364700e6070bda5c6c9c050dc942f", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/79ce5a46141f05dc454f90cb0be50e081d72e461/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79ce5a46141f05dc454f90cb0be50e081d72e461/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=79ce5a46141f05dc454f90cb0be50e081d72e461", "patch": "@@ -1712,6 +1712,7 @@ fn check_expr(&@fn_ctxt fcx, &@ast::expr expr) {\n                             oper_t = ty::substitute_type_params\n                                 (fcx.ccx.tcx, tps, variants.(0).args.(0));\n                         }\n+                        case (ty::ty_ptr(?inner)) { oper_t = inner.ty; }\n                         case (_) {\n                             fcx.ccx.tcx.sess.span_fatal\n                                 (expr.span, \"dereferencing non-\" + "}, {"sha": "b230a61e966fb06541e9f1fcf5ae24cc73c4a6e9", "filename": "src/lib/ptr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/79ce5a46141f05dc454f90cb0be50e081d72e461/src%2Flib%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79ce5a46141f05dc454f90cb0be50e081d72e461/src%2Flib%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fptr.rs?ref=79ce5a46141f05dc454f90cb0be50e081d72e461", "patch": "@@ -1,10 +1,10 @@\n // Unsafe pointer utility functions.\n \n native \"rust-intrinsic\" mod rusti {\n-    fn addr_of[T](&T val) -> *T;\n+    fn addr_of[T](&mutable T val) -> *mutable T;\n     fn ptr_offset[T](*T ptr, uint count) -> *T;\n }\n \n-fn addr_of[T](&T val) -> *T { ret rusti::addr_of(val); }\n+fn addr_of[T](&mutable T val) -> *mutable T { ret rusti::addr_of(val); }\n fn offset[T](*T ptr, uint count) -> *T { ret rusti::ptr_offset(ptr, count); }\n "}, {"sha": "79a535fd966ed400b8e0925c4f8f5ee0142a28a6", "filename": "src/test/run-pass/lib-ptr.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/79ce5a46141f05dc454f90cb0be50e081d72e461/src%2Ftest%2Frun-pass%2Flib-ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79ce5a46141f05dc454f90cb0be50e081d72e461/src%2Ftest%2Frun-pass%2Flib-ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flib-ptr.rs?ref=79ce5a46141f05dc454f90cb0be50e081d72e461", "patch": "@@ -0,0 +1,23 @@\n+// xfail-stage0\n+\n+use std;\n+import std::ptr;\n+import std::unsafe;\n+\n+type pair = rec(mutable int fst, mutable int snd);\n+\n+fn main() {\n+    auto p = rec(mutable fst=10, mutable snd=20);\n+    let *mutable pair pptr = ptr::addr_of(p);\n+    let *mutable int iptr = unsafe::reinterpret_cast(pptr);\n+    assert (*iptr == 10);\n+    *iptr = 30;\n+    assert (*iptr == 30);\n+    assert (p.fst == 30);\n+\n+    *pptr = rec(mutable fst=50, mutable snd=60);\n+    assert (*iptr == 50);\n+    assert (p.fst == 50);\n+    assert (p.snd == 60);\n+}\n+"}]}