{"sha": "d8dbb3c0413afe1cad58515295273c89d82176e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4ZGJiM2MwNDEzYWZlMWNhZDU4NTE1Mjk1MjczYzg5ZDgyMTc2ZTU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-03-16T12:16:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-16T12:16:45Z"}, "message": "Rollup merge of #70036 - mark-i-m:describe-it-4, r=eddyb\n\nMake article_and_description primarily use def_kind\n\nr? @eddyb\n\ncc @matthewjasper", "tree": {"sha": "c094dea10880b240fb45bf36cb8f4905edfdb2fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c094dea10880b240fb45bf36cb8f4905edfdb2fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8dbb3c0413afe1cad58515295273c89d82176e5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeb24tCRBK7hj4Ov3rIwAAdHIIAGyKz3YNMeOgbLsPWB5KY8Mm\n7+EFe5ADqFPinBJuZc8nKB00z9i8lQyI1R1zwJqrqPg5eLeDuNnXorxggtlnQmTl\nctrk7A4SeaP9QTQdFmL5JQtXCHvYMWjEv7P7MISeesQVXIsMm4quyjcWlJL9TxVJ\nU7sQunWxqWEJEgnsMhZx0iXiKNhY9dQlPRJbpVAtZ5SywCnNF17iOMPN2P9YmHv+\nFQhoUhZVEgt6q796O67CsbCQDTSo3H4zYd/6cbN7zHa7qzIE3nRqZx2ommrt65fD\nPk7sSIsOCIqmPYz3yms9EsGYeS/czJQxTvKaDDh0uzwx0M6GAPkBouQSi3Ij5k4=\n=a8W6\n-----END PGP SIGNATURE-----\n", "payload": "tree c094dea10880b240fb45bf36cb8f4905edfdb2fa\nparent 8872d9057230e46f4bf35af5880cc6095a06e744\nparent 2c2d41dc000714ed3b8b734e608862ff6c74a8d4\nauthor Dylan DPC <dylan.dpc@gmail.com> 1584361005 +0100\ncommitter GitHub <noreply@github.com> 1584361005 +0100\n\nRollup merge of #70036 - mark-i-m:describe-it-4, r=eddyb\n\nMake article_and_description primarily use def_kind\n\nr? @eddyb\n\ncc @matthewjasper\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8dbb3c0413afe1cad58515295273c89d82176e5", "html_url": "https://github.com/rust-lang/rust/commit/d8dbb3c0413afe1cad58515295273c89d82176e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8dbb3c0413afe1cad58515295273c89d82176e5/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8872d9057230e46f4bf35af5880cc6095a06e744", "url": "https://api.github.com/repos/rust-lang/rust/commits/8872d9057230e46f4bf35af5880cc6095a06e744", "html_url": "https://github.com/rust-lang/rust/commit/8872d9057230e46f4bf35af5880cc6095a06e744"}, {"sha": "2c2d41dc000714ed3b8b734e608862ff6c74a8d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c2d41dc000714ed3b8b734e608862ff6c74a8d4", "html_url": "https://github.com/rust-lang/rust/commit/2c2d41dc000714ed3b8b734e608862ff6c74a8d4"}], "stats": {"total": 29, "additions": 15, "deletions": 14}, "files": [{"sha": "d6f6788697cd84322d26a333498f61dd92777eab", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/d8dbb3c0413afe1cad58515295273c89d82176e5/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8dbb3c0413afe1cad58515295273c89d82176e5/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=d8dbb3c0413afe1cad58515295273c89d82176e5", "patch": "@@ -1520,20 +1520,21 @@ impl<'tcx> TyCtxt<'tcx> {\n \n     /// Returns a displayable description and article for the given `def_id` (e.g. `(\"a\", \"struct\")`).\n     pub fn article_and_description(&self, def_id: DefId) -> (&'static str, &'static str) {\n-        match self.def_key(def_id).disambiguated_data.data {\n-            DefPathData::TypeNs(..) | DefPathData::ValueNs(..) | DefPathData::MacroNs(..) => {\n-                let kind = self.def_kind(def_id).unwrap();\n-                (kind.article(), kind.descr(def_id))\n-            }\n-            DefPathData::ClosureExpr => match self.generator_kind(def_id) {\n-                None => (\"a\", \"closure\"),\n-                Some(rustc_hir::GeneratorKind::Async(..)) => (\"an\", \"async closure\"),\n-                Some(rustc_hir::GeneratorKind::Gen) => (\"a\", \"generator\"),\n-            },\n-            DefPathData::LifetimeNs(..) => (\"a\", \"lifetime\"),\n-            DefPathData::Impl => (\"an\", \"implementation\"),\n-            _ => bug!(\"article_and_description called on def_id {:?}\", def_id),\n-        }\n+        self.def_kind(def_id)\n+            .map(|def_kind| (def_kind.article(), def_kind.descr(def_id)))\n+            .unwrap_or_else(|| match self.def_key(def_id).disambiguated_data.data {\n+                DefPathData::ClosureExpr => match self.generator_kind(def_id) {\n+                    None => (\"a\", \"closure\"),\n+                    Some(rustc_hir::GeneratorKind::Async(..)) => (\"an\", \"async closure\"),\n+                    Some(rustc_hir::GeneratorKind::Gen) => (\"a\", \"generator\"),\n+                },\n+                DefPathData::LifetimeNs(..) => (\"a\", \"lifetime\"),\n+                DefPathData::Impl => (\"an\", \"implementation\"),\n+                DefPathData::TypeNs(..) | DefPathData::ValueNs(..) | DefPathData::MacroNs(..) => {\n+                    unreachable!()\n+                }\n+                _ => bug!(\"article_and_description called on def_id {:?}\", def_id),\n+            })\n     }\n }\n "}]}