{"sha": "5096cdff56e15e4b9127c67737d59d856b9bb83d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwOTZjZGZmNTZlMTVlNGI5MTI3YzY3NzM3ZDU5ZDg1NmI5YmI4M2Q=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-04T13:45:09Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-04T13:45:09Z"}, "message": "Rename 'array_layout' to 'array_indent'", "tree": {"sha": "892e06ee5fa1085175600357b016405f16c83b54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/892e06ee5fa1085175600357b016405f16c83b54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5096cdff56e15e4b9127c67737d59d856b9bb83d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5096cdff56e15e4b9127c67737d59d856b9bb83d", "html_url": "https://github.com/rust-lang/rust/commit/5096cdff56e15e4b9127c67737d59d856b9bb83d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5096cdff56e15e4b9127c67737d59d856b9bb83d/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f15dd870d1bf4e5b919ae654ed5d99ed48521fe8", "url": "https://api.github.com/repos/rust-lang/rust/commits/f15dd870d1bf4e5b919ae654ed5d99ed48521fe8", "html_url": "https://github.com/rust-lang/rust/commit/f15dd870d1bf4e5b919ae654ed5d99ed48521fe8"}], "stats": {"total": 48, "additions": 24, "deletions": 24}, "files": [{"sha": "63c6d78b961e8d491746f3a0e16e65c7354f07af", "filename": "Configurations.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5096cdff56e15e4b9127c67737d59d856b9bb83d/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/5096cdff56e15e4b9127c67737d59d856b9bb83d/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=5096cdff56e15e4b9127c67737d59d856b9bb83d", "patch": "@@ -5,7 +5,7 @@ Rustfmt is designed to be very configurable. You can create a TOML file called `\n A possible content of `rustfmt.toml` or `.rustfmt.toml` might look like this:\n \n ```toml\n-array_layout = \"Block\"\n+array_indent = \"Block\"\n array_width = 80\n reorder_imported_names = true\n ```\n@@ -22,7 +22,7 @@ Use this option to prevent a huge array from being vertically formatted.\n - **Default value**: `0`\n - **Possible values**: any positive integer\n \n-**Note:** A value of `0` results in [`array_layout`](#array_layout) being applied regardless of a line's width.\n+**Note:** A value of `0` results in [`array_indent`](#array_indent) being applied regardless of a line's width.\n \n #### `0` (default):\n \n@@ -50,7 +50,7 @@ let a = vec![\n ];\n ```\n \n-## `array_layout`\n+## `array_indent`\n \n Indent on arrays\n \n@@ -90,15 +90,15 @@ Maximum width of an array literal before falling back to vertical formatting\n - **Default value**: `60`\n - **Possible values**: any positive integer\n \n-**Note:** A value of `0` results in [`array_layout`](#array_layout) being applied regardless of a line's width.\n+**Note:** A value of `0` results in [`array_indent`](#array_indent) being applied regardless of a line's width.\n \n #### Lines shorter than `array_width`:\n ```rust\n let lorem = vec![\"ipsum\", \"dolor\", \"sit\", \"amet\", \"consectetur\", \"adipiscing\", \"elit\"];\n ```\n \n #### Lines longer than `array_width`:\n-See [`array_layout`](#array_layout).\n+See [`array_indent`](#array_indent).\n \n ## `attributes_on_same_line_as_field`\n "}, {"sha": "8442f3141970d2c812e7d4df7f1691ca5f242efb", "filename": "legacy-rustfmt.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5096cdff56e15e4b9127c67737d59d856b9bb83d/legacy-rustfmt.toml", "raw_url": "https://github.com/rust-lang/rust/raw/5096cdff56e15e4b9127c67737d59d856b9bb83d/legacy-rustfmt.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/legacy-rustfmt.toml?ref=5096cdff56e15e4b9127c67737d59d856b9bb83d", "patch": "@@ -1,5 +1,5 @@\n fn_args_layout = \"Visual\"\n-array_layout = \"Visual\"\n+array_indent = \"Visual\"\n control_style = \"Legacy\"\n where_style = \"Legacy\"\n generics_indent = \"Visual\""}, {"sha": "a223e2da68b0c5c34743d61e51447d66edc1fe3e", "filename": "src/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5096cdff56e15e4b9127c67737d59d856b9bb83d/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5096cdff56e15e4b9127c67737d59d856b9bb83d/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=5096cdff56e15e4b9127c67737d59d856b9bb83d", "patch": "@@ -561,7 +561,7 @@ create_config! {\n     fn_args_density: Density, Density::Tall, false, \"Argument density in functions\";\n     fn_args_layout: IndentStyle, IndentStyle::Block, false,\n         \"Layout of function arguments and tuple structs\";\n-    array_layout: IndentStyle, IndentStyle::Block, false, \"Indent on arrays\";\n+    array_indent: IndentStyle, IndentStyle::Block, false, \"Indent on arrays\";\n     array_width: usize, 60, false,\n         \"Maximum width of an array literal before falling back to vertical formatting\";\n     array_horizontal_layout_threshold: usize, 0, false,"}, {"sha": "9888ffc3e00f7ac99a2f865774b68182d9773d6f", "filename": "src/expr.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5096cdff56e15e4b9127c67737d59d856b9bb83d/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5096cdff56e15e4b9127c67737d59d856b9bb83d/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=5096cdff56e15e4b9127c67737d59d856b9bb83d", "patch": "@@ -419,7 +419,7 @@ where\n         1 // \"[\"\n     };\n \n-    let nested_shape = match context.config.array_layout() {\n+    let nested_shape = match context.config.array_indent() {\n         IndentStyle::Block => shape\n             .block()\n             .block_indent(context.config.tab_spaces())\n@@ -454,7 +454,7 @@ where\n         .iter()\n         .any(|li| li.item.as_ref().map(|s| s.len() > 10).unwrap_or(false));\n \n-    let mut tactic = match context.config.array_layout() {\n+    let mut tactic = match context.config.array_indent() {\n         IndentStyle::Block => {\n             // FIXME wrong shape in one-line case\n             match shape.width.checked_sub(2 * bracket_size) {\n@@ -477,7 +477,7 @@ where\n             DefinitiveListTactic::Mixed\n         },\n     };\n-    let ends_with_newline = tactic.ends_with_newline(context.config.array_layout());\n+    let ends_with_newline = tactic.ends_with_newline(context.config.array_indent());\n     if context.config.array_horizontal_layout_threshold() > 0\n         && items.len() > context.config.array_horizontal_layout_threshold()\n     {\n@@ -489,7 +489,7 @@ where\n         separator: \",\",\n         trailing_separator: if trailing_comma {\n             SeparatorTactic::Always\n-        } else if context.inside_macro || context.config.array_layout() == IndentStyle::Visual {\n+        } else if context.inside_macro || context.config.array_indent() == IndentStyle::Visual {\n             SeparatorTactic::Never\n         } else {\n             SeparatorTactic::Vertical\n@@ -502,7 +502,7 @@ where\n     };\n     let list_str = write_list(&items, &fmt)?;\n \n-    let result = if context.config.array_layout() == IndentStyle::Visual\n+    let result = if context.config.array_indent() == IndentStyle::Visual\n         || tactic == DefinitiveListTactic::Horizontal\n     {\n         if context.config.spaces_within_square_brackets() && !list_str.is_empty() {"}, {"sha": "84cfb06bcedb48d5592e1dfb20220db3816c5885", "filename": "tests/source/configs-array_horizontal_layout_threshold-1000-visual.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5096cdff56e15e4b9127c67737d59d856b9bb83d/tests%2Fsource%2Fconfigs-array_horizontal_layout_threshold-1000-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5096cdff56e15e4b9127c67737d59d856b9bb83d/tests%2Fsource%2Fconfigs-array_horizontal_layout_threshold-1000-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-array_horizontal_layout_threshold-1000-visual.rs?ref=5096cdff56e15e4b9127c67737d59d856b9bb83d", "patch": "@@ -1,5 +1,5 @@\n // rustfmt-array_horizontal_layout_threshold: 1000\n-// rustfmt-array_layout: Visual\n+// rustfmt-array_indent: Visual\n \n const ARRAY: [u8; 2048] =\n     [99, 72, 48, 104, 44, 112, 38, 62, 40, 93, 23, 24, 32, 21, 102, 76, 65, 29, 116,"}, {"sha": "7aefa36c187dc688c3d8feef8036130b710b0bc0", "filename": "tests/source/configs-array_layout-block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5096cdff56e15e4b9127c67737d59d856b9bb83d/tests%2Fsource%2Fconfigs-array_layout-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5096cdff56e15e4b9127c67737d59d856b9bb83d/tests%2Fsource%2Fconfigs-array_layout-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-array_layout-block.rs?ref=5096cdff56e15e4b9127c67737d59d856b9bb83d", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-array_layout: Block\n+// rustfmt-array_indent: Block\n // Array layout\n \n fn main() {"}, {"sha": "f448e9607d7012c70a128fa001d7069c93e61345", "filename": "tests/source/configs-array_layout-visual.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5096cdff56e15e4b9127c67737d59d856b9bb83d/tests%2Fsource%2Fconfigs-array_layout-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5096cdff56e15e4b9127c67737d59d856b9bb83d/tests%2Fsource%2Fconfigs-array_layout-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-array_layout-visual.rs?ref=5096cdff56e15e4b9127c67737d59d856b9bb83d", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-array_layout: Visual\n+// rustfmt-array_indent: Visual\n // Array layout\n \n fn main() {"}, {"sha": "cd3d601e1b6518fdac9713e8d14f0582048c68d2", "filename": "tests/source/configs-tab_spaces-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5096cdff56e15e4b9127c67737d59d856b9bb83d/tests%2Fsource%2Fconfigs-tab_spaces-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5096cdff56e15e4b9127c67737d59d856b9bb83d/tests%2Fsource%2Fconfigs-tab_spaces-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-tab_spaces-2.rs?ref=5096cdff56e15e4b9127c67737d59d856b9bb83d", "patch": "@@ -1,6 +1,6 @@\n // rustfmt-tab_spaces: 2\n // rustfmt-max_width: 30\n-// rustfmt-array_layout: Block\n+// rustfmt-array_indent: Block\n // Tab spaces\n \n fn lorem() {"}, {"sha": "3a18f9be0eeeb64c432b0a580254333c102b2a1a", "filename": "tests/source/configs-tab_spaces-4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5096cdff56e15e4b9127c67737d59d856b9bb83d/tests%2Fsource%2Fconfigs-tab_spaces-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5096cdff56e15e4b9127c67737d59d856b9bb83d/tests%2Fsource%2Fconfigs-tab_spaces-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-tab_spaces-4.rs?ref=5096cdff56e15e4b9127c67737d59d856b9bb83d", "patch": "@@ -1,6 +1,6 @@\n // rustfmt-tab_spaces: 4\n // rustfmt-max_width: 30\n-// rustfmt-array_layout: Block\n+// rustfmt-array_indent: Block\n // Tab spaces\n \n fn lorem() {"}, {"sha": "2b899151535df4c63da308782a943daa0da25e5a", "filename": "tests/source/expr-block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5096cdff56e15e4b9127c67737d59d856b9bb83d/tests%2Fsource%2Fexpr-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5096cdff56e15e4b9127c67737d59d856b9bb83d/tests%2Fsource%2Fexpr-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fexpr-block.rs?ref=5096cdff56e15e4b9127c67737d59d856b9bb83d", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-array_layout: Block\n+// rustfmt-array_indent: Block\n // rustfmt-fn_call_style: Block\n // rustfmt-control_style: Rfc\n // Test expressions with block formatting."}, {"sha": "a4a2f6a3d2c325a12daa9628dedb0d4889ca1d55", "filename": "tests/target/configs-array_horizontal_layout_threshold-1000-visual.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5096cdff56e15e4b9127c67737d59d856b9bb83d/tests%2Ftarget%2Fconfigs-array_horizontal_layout_threshold-1000-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5096cdff56e15e4b9127c67737d59d856b9bb83d/tests%2Ftarget%2Fconfigs-array_horizontal_layout_threshold-1000-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-array_horizontal_layout_threshold-1000-visual.rs?ref=5096cdff56e15e4b9127c67737d59d856b9bb83d", "patch": "@@ -1,5 +1,5 @@\n // rustfmt-array_horizontal_layout_threshold: 1000\n-// rustfmt-array_layout: Visual\n+// rustfmt-array_indent: Visual\n \n const ARRAY: [u8; 2048] =\n     [99, 72, 48, 104, 44, 112, 38, 62, 40, 93, 23, 24, 32, 21, 102, 76, 65, 29, 116, 21, 18, 37,"}, {"sha": "c6c220967595fcdc2dd57cf15d0d104dba16bd4f", "filename": "tests/target/configs-array_layout-block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5096cdff56e15e4b9127c67737d59d856b9bb83d/tests%2Ftarget%2Fconfigs-array_layout-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5096cdff56e15e4b9127c67737d59d856b9bb83d/tests%2Ftarget%2Fconfigs-array_layout-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-array_layout-block.rs?ref=5096cdff56e15e4b9127c67737d59d856b9bb83d", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-array_layout: Block\n+// rustfmt-array_indent: Block\n // Array layout\n \n fn main() {"}, {"sha": "bd15f2a37378b77d401bcbd3917335e6c6dade28", "filename": "tests/target/configs-array_layout-visual.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5096cdff56e15e4b9127c67737d59d856b9bb83d/tests%2Ftarget%2Fconfigs-array_layout-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5096cdff56e15e4b9127c67737d59d856b9bb83d/tests%2Ftarget%2Fconfigs-array_layout-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-array_layout-visual.rs?ref=5096cdff56e15e4b9127c67737d59d856b9bb83d", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-array_layout: Visual\n+// rustfmt-array_indent: Visual\n // Array layout\n \n fn main() {"}, {"sha": "3bbb4c05290a822e0350568586124638c22ef52d", "filename": "tests/target/configs-tab_spaces-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5096cdff56e15e4b9127c67737d59d856b9bb83d/tests%2Ftarget%2Fconfigs-tab_spaces-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5096cdff56e15e4b9127c67737d59d856b9bb83d/tests%2Ftarget%2Fconfigs-tab_spaces-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-tab_spaces-2.rs?ref=5096cdff56e15e4b9127c67737d59d856b9bb83d", "patch": "@@ -1,6 +1,6 @@\n // rustfmt-tab_spaces: 2\n // rustfmt-max_width: 30\n-// rustfmt-array_layout: Block\n+// rustfmt-array_indent: Block\n // Tab spaces\n \n fn lorem() {"}, {"sha": "c8c802c9db5ec0a54994c4051987b6f210dabaab", "filename": "tests/target/configs-tab_spaces-4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5096cdff56e15e4b9127c67737d59d856b9bb83d/tests%2Ftarget%2Fconfigs-tab_spaces-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5096cdff56e15e4b9127c67737d59d856b9bb83d/tests%2Ftarget%2Fconfigs-tab_spaces-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-tab_spaces-4.rs?ref=5096cdff56e15e4b9127c67737d59d856b9bb83d", "patch": "@@ -1,6 +1,6 @@\n // rustfmt-tab_spaces: 4\n // rustfmt-max_width: 30\n-// rustfmt-array_layout: Block\n+// rustfmt-array_indent: Block\n // Tab spaces\n \n fn lorem() {"}, {"sha": "75d15418ba2e6f05a054b9aafade6cc4c771f7ff", "filename": "tests/target/expr-block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5096cdff56e15e4b9127c67737d59d856b9bb83d/tests%2Ftarget%2Fexpr-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5096cdff56e15e4b9127c67737d59d856b9bb83d/tests%2Ftarget%2Fexpr-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr-block.rs?ref=5096cdff56e15e4b9127c67737d59d856b9bb83d", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-array_layout: Block\n+// rustfmt-array_indent: Block\n // rustfmt-fn_call_style: Block\n // rustfmt-control_style: Rfc\n // Test expressions with block formatting."}]}