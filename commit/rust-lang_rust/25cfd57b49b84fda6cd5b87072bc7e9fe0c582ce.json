{"sha": "25cfd57b49b84fda6cd5b87072bc7e9fe0c582ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1Y2ZkNTdiNDliODRmZGE2Y2Q1Yjg3MDcyYmM3ZTlmZTBjNTgyY2U=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-08-24T02:41:45Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-08-24T02:41:45Z"}, "message": "xpy fmt", "tree": {"sha": "a5b1489bd74aac9a033367be6dbba6513a93194d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5b1489bd74aac9a033367be6dbba6513a93194d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25cfd57b49b84fda6cd5b87072bc7e9fe0c582ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25cfd57b49b84fda6cd5b87072bc7e9fe0c582ce", "html_url": "https://github.com/rust-lang/rust/commit/25cfd57b49b84fda6cd5b87072bc7e9fe0c582ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25cfd57b49b84fda6cd5b87072bc7e9fe0c582ce/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73de34319eac65a66037870138324f7f5618342d", "url": "https://api.github.com/repos/rust-lang/rust/commits/73de34319eac65a66037870138324f7f5618342d", "html_url": "https://github.com/rust-lang/rust/commit/73de34319eac65a66037870138324f7f5618342d"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "bf091a0a624ddabb9be98d87e3d3066affeb4a7c", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/25cfd57b49b84fda6cd5b87072bc7e9fe0c582ce/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25cfd57b49b84fda6cd5b87072bc7e9fe0c582ce/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=25cfd57b49b84fda6cd5b87072bc7e9fe0c582ce", "patch": "@@ -741,13 +741,8 @@ impl<'a, 'tcx> DocFolder for LinkCollector<'a, 'tcx> {\n \n                 match disambiguator.map(Disambiguator::ns) {\n                     Some(ns @ (ValueNS | TypeNS)) => {\n-                        match self.resolve(\n-                            path_str,\n-                            ns,\n-                            &current_item,\n-                            base_node,\n-                            &extra_fragment,\n-                        ) {\n+                        match self.resolve(path_str, ns, &current_item, base_node, &extra_fragment)\n+                        {\n                             Ok(res) => res,\n                             Err(ErrorKind::ResolutionFailure) => {\n                                 resolution_failure(cx, &item, path_str, &dox, link_range);"}]}