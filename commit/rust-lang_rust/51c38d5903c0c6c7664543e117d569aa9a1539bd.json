{"sha": "51c38d5903c0c6c7664543e117d569aa9a1539bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxYzM4ZDU5MDNjMGM2Yzc2NjQ1NDNlMTE3ZDU2OWFhOWExNTM5YmQ=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-04T07:45:35Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-04T07:45:35Z"}, "message": "Improve logging in drop paths.", "tree": {"sha": "98c9405a431f433849967f8982ff6caf452cda51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98c9405a431f433849967f8982ff6caf452cda51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51c38d5903c0c6c7664543e117d569aa9a1539bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51c38d5903c0c6c7664543e117d569aa9a1539bd", "html_url": "https://github.com/rust-lang/rust/commit/51c38d5903c0c6c7664543e117d569aa9a1539bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51c38d5903c0c6c7664543e117d569aa9a1539bd/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "818fbfb3252687ab6ea8ba358d8d5d199f1e330a", "url": "https://api.github.com/repos/rust-lang/rust/commits/818fbfb3252687ab6ea8ba358d8d5d199f1e330a", "html_url": "https://github.com/rust-lang/rust/commit/818fbfb3252687ab6ea8ba358d8d5d199f1e330a"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "35d2c1d8dac6b60a2981b809d65447d8b12e6592", "filename": "src/boot/me/trans.ml", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/51c38d5903c0c6c7664543e117d569aa9a1539bd/src%2Fboot%2Fme%2Ftrans.ml", "raw_url": "https://github.com/rust-lang/rust/raw/51c38d5903c0c6c7664543e117d569aa9a1539bd/src%2Fboot%2Fme%2Ftrans.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftrans.ml?ref=51c38d5903c0c6c7664543e117d569aa9a1539bd", "patch": "@@ -2434,6 +2434,7 @@ let trans_visitor\n       match ty with\n \n           Ast.TY_fn _ ->\n+            note_drop_step ty \"drop_ty: fn path\";\n             let binding = get_element_ptr cell Abi.binding_field_binding in\n             let null_jmp = null_check binding in\n               (* Drop non-null bindings. *)\n@@ -2442,9 +2443,11 @@ let trans_visitor\n                * and will leak closures with box substructure.\n                *)\n               drop_ty ty_params binding (Ast.TY_box Ast.TY_int) curr_iso;\n-              patch null_jmp\n+              patch null_jmp;\n+              note_drop_step ty \"drop_ty: done fn path\";\n \n         | Ast.TY_obj _ ->\n+            note_drop_step ty \"drop_ty: obj path\";\n             let binding = get_element_ptr cell Abi.binding_field_binding in\n             let null_jmp = null_check binding in\n             let obj = deref binding in\n@@ -2460,38 +2463,42 @@ let trans_visitor\n             in\n             let null_dtor_jmp = null_check dtor in\n               (* Call any dtor, if present. *)\n+            note_drop_step ty \"drop_ty: calling obj dtor\";\n             trans_call_dynamic_glue tydesc\n               Abi.tydesc_field_obj_drop_glue None [| binding |];\n             patch null_dtor_jmp;\n             (* Drop the body. *)\n+            note_drop_step ty \"drop_ty: dropping obj body\";\n             trans_call_dynamic_glue tydesc\n               Abi.tydesc_field_drop_glue None [| ty_params; alias body |];\n             (* FIXME: this will fail if the user has lied about the\n              * state-ness of their obj. We need to store state-ness in the\n              * captured tydesc, and use that.  *)\n+            note_drop_step ty \"drop_ty: freeing obj body\";\n             trans_free binding (type_has_state ty);\n             mov binding zero;\n             patch rc_jmp;\n-            patch null_jmp\n+            patch null_jmp;\n+            note_drop_step ty \"drop_ty: done obj path\";\n \n \n       | Ast.TY_param (i, _) ->\n-          iflog (fun _ -> annotate\n-                   (Printf.sprintf \"drop_ty: parametric drop %#d\" i));\n+          note_drop_step ty \"drop_ty: parametric-ty path\";\n           aliasing false cell\n             begin\n               fun cell ->\n                 trans_call_simple_dynamic_glue\n                   i Abi.tydesc_field_drop_glue ty_params cell\n-            end\n+            end;\n+          note_drop_step ty \"drop_ty: done parametric-ty path\";\n \n       | _ ->\n           match mctrl with\n               MEM_gc\n             | MEM_rc_opaque\n             | MEM_rc_struct ->\n \n-                note_drop_step ty \"in box-drop path of drop_ty\";\n+                note_drop_step ty \"drop_ty: box-drop path\";\n \n                 let _ = check_box_rty cell in\n                 let null_jmp = null_check cell in\n@@ -2511,15 +2518,18 @@ let trans_visitor\n                    *)\n                   mov cell zero;\n                   patch j;\n-                  patch null_jmp\n+                  patch null_jmp;\n+                  note_drop_step ty \"drop_ty: done box-drop path\";\n \n             | MEM_interior when type_is_structured ty ->\n-                note_drop_step ty \"in structured-interior path of drop_ty\";\n+                note_drop_step ty \"drop:ty structured-interior path\";\n                 iter_ty_parts ty_params cell ty\n-                  (drop_ty ty_params) curr_iso\n+                  (drop_ty ty_params) curr_iso;\n+                note_drop_step ty \"drop_ty: done structured-interior path\";\n+\n \n             | MEM_interior ->\n-                note_drop_step ty \"in simple-interior path of drop_ty\";\n+                note_drop_step ty \"drop_ty: no-op simple-interior path\";\n                 (* Interior allocation of all-interior value not caught above:\n                  * nothing to do.\n                  *)"}]}