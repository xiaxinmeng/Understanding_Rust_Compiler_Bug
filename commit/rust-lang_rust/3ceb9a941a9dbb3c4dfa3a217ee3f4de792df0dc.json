{"sha": "3ceb9a941a9dbb3c4dfa3a217ee3f4de792df0dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjZWI5YTk0MWE5ZGJiM2M0ZGZhM2EyMTdlZTNmNGRlNzkyZGYwZGM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-01-16T16:56:14Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-01-16T16:56:14Z"}, "message": "Remove dead code", "tree": {"sha": "e85440f20cc3d8e097c5dfc79a9b20bab27e728d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e85440f20cc3d8e097c5dfc79a9b20bab27e728d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ceb9a941a9dbb3c4dfa3a217ee3f4de792df0dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ceb9a941a9dbb3c4dfa3a217ee3f4de792df0dc", "html_url": "https://github.com/rust-lang/rust/commit/3ceb9a941a9dbb3c4dfa3a217ee3f4de792df0dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ceb9a941a9dbb3c4dfa3a217ee3f4de792df0dc/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bc236253dd9cd8e0729bbb681f0e03b20bc3627", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bc236253dd9cd8e0729bbb681f0e03b20bc3627", "html_url": "https://github.com/rust-lang/rust/commit/6bc236253dd9cd8e0729bbb681f0e03b20bc3627"}], "stats": {"total": 36, "additions": 2, "deletions": 34}, "files": [{"sha": "27c12e46c55b4160cd9dfccb6cb911d3be06b886", "filename": "crates/ra_hir_def/src/nameres.rs", "status": "modified", "additions": 2, "deletions": 34, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/3ceb9a941a9dbb3c4dfa3a217ee3f4de792df0dc/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ceb9a941a9dbb3c4dfa3a217ee3f4de792df0dc/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs?ref=3ceb9a941a9dbb3c4dfa3a217ee3f4de792df0dc", "patch": "@@ -59,12 +59,9 @@ use std::sync::Arc;\n \n use hir_expand::{diagnostics::DiagnosticSink, name::Name, InFile};\n use ra_arena::Arena;\n-use ra_db::{CrateId, Edition, FileId, FilePosition};\n+use ra_db::{CrateId, Edition, FileId};\n use ra_prof::profile;\n-use ra_syntax::{\n-    ast::{self, AstNode},\n-    SyntaxNode,\n-};\n+use ra_syntax::ast;\n use rustc_hash::FxHashMap;\n \n use crate::{\n@@ -255,35 +252,6 @@ pub enum ModuleSource {\n     Module(ast::Module),\n }\n \n-impl ModuleSource {\n-    // FIXME: this methods do not belong here\n-    pub fn from_position(db: &impl DefDatabase, position: FilePosition) -> ModuleSource {\n-        let parse = db.parse(position.file_id);\n-        match &ra_syntax::algo::find_node_at_offset::<ast::Module>(\n-            parse.tree().syntax(),\n-            position.offset,\n-        ) {\n-            Some(m) if !m.has_semi() => ModuleSource::Module(m.clone()),\n-            _ => {\n-                let source_file = parse.tree();\n-                ModuleSource::SourceFile(source_file)\n-            }\n-        }\n-    }\n-\n-    pub fn from_child_node(db: &impl DefDatabase, child: InFile<&SyntaxNode>) -> ModuleSource {\n-        if let Some(m) =\n-            child.value.ancestors().filter_map(ast::Module::cast).find(|it| !it.has_semi())\n-        {\n-            ModuleSource::Module(m)\n-        } else {\n-            let file_id = child.file_id.original_file(db);\n-            let source_file = db.parse(file_id).tree();\n-            ModuleSource::SourceFile(source_file)\n-        }\n-    }\n-}\n-\n mod diagnostics {\n     use hir_expand::diagnostics::DiagnosticSink;\n     use ra_db::RelativePathBuf;"}]}