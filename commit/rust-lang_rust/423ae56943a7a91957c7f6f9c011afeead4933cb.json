{"sha": "423ae56943a7a91957c7f6f9c011afeead4933cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyM2FlNTY5NDNhN2E5MTk1N2M3ZjZmOWMwMTFhZmVlYWQ0OTMzY2I=", "commit": {"author": {"name": "kenta7777", "email": "k.hasegw7@gmail.com", "date": "2019-02-24T03:55:14Z"}, "committer": {"name": "kenta7777", "email": "k.hasegw7@gmail.com", "date": "2019-02-24T03:55:14Z"}, "message": "reduce a code repetition like (n << amt) >> amt", "tree": {"sha": "c49faeeb048f20259bbdfece309acb7cde517101", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c49faeeb048f20259bbdfece309acb7cde517101"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/423ae56943a7a91957c7f6f9c011afeead4933cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/423ae56943a7a91957c7f6f9c011afeead4933cb", "html_url": "https://github.com/rust-lang/rust/commit/423ae56943a7a91957c7f6f9c011afeead4933cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/423ae56943a7a91957c7f6f9c011afeead4933cb/comments", "author": {"login": "kenta7777", "id": 16369171, "node_id": "MDQ6VXNlcjE2MzY5MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/16369171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kenta7777", "html_url": "https://github.com/kenta7777", "followers_url": "https://api.github.com/users/kenta7777/followers", "following_url": "https://api.github.com/users/kenta7777/following{/other_user}", "gists_url": "https://api.github.com/users/kenta7777/gists{/gist_id}", "starred_url": "https://api.github.com/users/kenta7777/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kenta7777/subscriptions", "organizations_url": "https://api.github.com/users/kenta7777/orgs", "repos_url": "https://api.github.com/users/kenta7777/repos", "events_url": "https://api.github.com/users/kenta7777/events{/privacy}", "received_events_url": "https://api.github.com/users/kenta7777/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kenta7777", "id": 16369171, "node_id": "MDQ6VXNlcjE2MzY5MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/16369171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kenta7777", "html_url": "https://github.com/kenta7777", "followers_url": "https://api.github.com/users/kenta7777/followers", "following_url": "https://api.github.com/users/kenta7777/following{/other_user}", "gists_url": "https://api.github.com/users/kenta7777/gists{/gist_id}", "starred_url": "https://api.github.com/users/kenta7777/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kenta7777/subscriptions", "organizations_url": "https://api.github.com/users/kenta7777/orgs", "repos_url": "https://api.github.com/users/kenta7777/repos", "events_url": "https://api.github.com/users/kenta7777/events{/privacy}", "received_events_url": "https://api.github.com/users/kenta7777/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aadbc459bd97a0325897e2ff94999efbec6a499c", "url": "https://api.github.com/repos/rust-lang/rust/commits/aadbc459bd97a0325897e2ff94999efbec6a499c", "html_url": "https://github.com/rust-lang/rust/commit/aadbc459bd97a0325897e2ff94999efbec6a499c"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "dd382ec006bd7437fa7b4d45d58ed584e6391a94", "filename": "src/librustc/ty/sty.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/423ae56943a7a91957c7f6f9c011afeead4933cb/src%2Flibrustc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/423ae56943a7a91957c7f6f9c011afeead4933cb/src%2Flibrustc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsty.rs?ref=423ae56943a7a91957c7f6f9c011afeead4933cb", "patch": "@@ -3,7 +3,7 @@\n use crate::hir;\n use crate::hir::def_id::DefId;\n use crate::infer::canonical::Canonical;\n-use crate::mir::interpret::ConstValue;\n+use crate::mir::interpret::{ConstValue, truncate};\n use crate::middle::region;\n use polonius_engine::Atom;\n use rustc_data_structures::indexed_vec::Idx;\n@@ -2118,8 +2118,7 @@ impl<'tcx> Const<'tcx> {\n         let size = tcx.layout_of(ty).unwrap_or_else(|e| {\n             panic!(\"could not compute layout for {:?}: {:?}\", ty, e)\n         }).size;\n-        let shift = 128 - size.bits();\n-        let truncated = (bits << shift) >> shift;\n+        let truncated = truncate(bits, size);\n         assert_eq!(truncated, bits, \"from_bits called with untruncated value\");\n         Self::from_scalar(Scalar::Bits { bits, size: size.bytes() as u8 }, ty.value)\n     }"}]}