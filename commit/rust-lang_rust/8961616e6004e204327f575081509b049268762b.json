{"sha": "8961616e6004e204327f575081509b049268762b", "node_id": "C_kwDOAAsO6NoAKDg5NjE2MTZlNjAwNGUyMDQzMjdmNTc1MDgxNTA5YjA0OTI2ODc2MmI", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-11-14T02:02:03Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-10-03T14:08:51Z"}, "message": "Move rustc_middle::middle::cstore to rustc_session.", "tree": {"sha": "06316b86ee9c02ab0c55aee421c98d9dff7b24cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06316b86ee9c02ab0c55aee421c98d9dff7b24cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8961616e6004e204327f575081509b049268762b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8961616e6004e204327f575081509b049268762b", "html_url": "https://github.com/rust-lang/rust/commit/8961616e6004e204327f575081509b049268762b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8961616e6004e204327f575081509b049268762b/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b66dfaaa6428314066307cfc76f2f3e140555db8", "url": "https://api.github.com/repos/rust-lang/rust/commits/b66dfaaa6428314066307cfc76f2f3e140555db8", "html_url": "https://github.com/rust-lang/rust/commit/b66dfaaa6428314066307cfc76f2f3e140555db8"}], "stats": {"total": 106, "additions": 52, "deletions": 54}, "files": [{"sha": "bada67eda449a9cf7c90b4c5336ffa953ccea979", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -4382,6 +4382,7 @@ dependencies = [\n  \"rustc_errors\",\n  \"rustc_feature\",\n  \"rustc_fs_util\",\n+ \"rustc_hir\",\n  \"rustc_lint_defs\",\n  \"rustc_macros\",\n  \"rustc_serialize\","}, {"sha": "71f510c037f11f70148f4527c9d07bf863e136f7", "filename": "compiler/rustc_codegen_cranelift/src/archive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_codegen_cranelift%2Fsrc%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_codegen_cranelift%2Fsrc%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2Fsrc%2Farchive.rs?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -242,7 +242,7 @@ impl<'a> ArchiveBuilder<'a> for ArArchiveBuilder<'a> {\n     fn inject_dll_import_lib(\n         &mut self,\n         _lib_name: &str,\n-        _dll_imports: &[rustc_middle::middle::cstore::DllImport],\n+        _dll_imports: &[rustc_session::cstore::DllImport],\n         _tmpdir: &rustc_data_structures::temp_dir::MaybeTempDir,\n     ) {\n         bug!(\"injecting dll imports is not supported\");"}, {"sha": "11dd6d49aa768d5d207cf4a1e4fe57e2008534a1", "filename": "compiler/rustc_codegen_gcc/src/archive.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_codegen_gcc%2Fsrc%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_codegen_gcc%2Fsrc%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_gcc%2Fsrc%2Farchive.rs?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -1,12 +1,11 @@\n use std::fs::File;\n use std::path::{Path, PathBuf};\n \n-use rustc_session::Session;\n use rustc_codegen_ssa::back::archive::ArchiveBuilder;\n+use rustc_session::Session;\n \n use rustc_data_structures::temp_dir::MaybeTempDir;\n-use rustc_middle::middle::cstore::DllImport;\n-\n+use rustc_session::cstore::DllImport;\n \n struct ArchiveConfig<'a> {\n     sess: &'a Session,"}, {"sha": "ebc3b704158544db79850004fced6fc885e123a3", "filename": "compiler/rustc_codegen_llvm/src/back/archive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Farchive.rs?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -11,7 +11,7 @@ use crate::llvm::archive_ro::{ArchiveRO, Child};\n use crate::llvm::{self, ArchiveKind, LLVMMachineType, LLVMRustCOFFShortExport};\n use rustc_codegen_ssa::back::archive::ArchiveBuilder;\n use rustc_data_structures::temp_dir::MaybeTempDir;\n-use rustc_middle::middle::cstore::{DllCallingConvention, DllImport};\n+use rustc_session::cstore::{DllCallingConvention, DllImport};\n use rustc_session::Session;\n \n struct ArchiveConfig<'a> {"}, {"sha": "3db948a16fc738c74b66a6ee3712876ffc4fc180", "filename": "compiler/rustc_codegen_ssa/src/back/archive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Farchive.rs?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -1,5 +1,5 @@\n use rustc_data_structures::temp_dir::MaybeTempDir;\n-use rustc_middle::middle::cstore::DllImport;\n+use rustc_session::cstore::DllImport;\n use rustc_session::Session;\n use rustc_span::symbol::Symbol;\n "}, {"sha": "ed15b4648724063a82e854efe0e60106a577c95c", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -3,10 +3,10 @@ use rustc_data_structures::temp_dir::MaybeTempDir;\n use rustc_errors::{ErrorReported, Handler};\n use rustc_fs_util::fix_windows_verbatim_for_gcc;\n use rustc_hir::def_id::CrateNum;\n-use rustc_middle::middle::cstore::DllImport;\n use rustc_middle::middle::dependency_format::Linkage;\n use rustc_session::config::{self, CFGuard, CrateType, DebugInfo, LdImpl, Strip};\n use rustc_session::config::{OutputFilenames, OutputType, PrintRequest};\n+use rustc_session::cstore::DllImport;\n use rustc_session::output::{check_file_is_writeable, invalid_output_for_target, out_filename};\n use rustc_session::search_paths::PathKind;\n use rustc_session::utils::NativeLibKind;"}, {"sha": "ffeb926e648e50c5130c13827f5190d488e8a8e7", "filename": "compiler/rustc_codegen_ssa/src/back/metadata.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fmetadata.rs?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -8,7 +8,7 @@ use rustc_data_structures::memmap::Mmap;\n use rustc_data_structures::owning_ref::OwningRef;\n use rustc_data_structures::rustc_erase_owner;\n use rustc_data_structures::sync::MetadataRef;\n-use rustc_middle::middle::cstore::MetadataLoader;\n+use rustc_session::cstore::MetadataLoader;\n use rustc_target::spec::Target;\n \n use crate::METADATA_FILENAME;"}, {"sha": "b759e3a7a7a33d72b946bfa2f69e4b7e245ad764", "filename": "compiler/rustc_codegen_ssa/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -25,10 +25,10 @@ use rustc_data_structures::sync::Lrc;\n use rustc_hir::def_id::CrateNum;\n use rustc_hir::LangItem;\n use rustc_middle::dep_graph::WorkProduct;\n-use rustc_middle::middle::cstore::{self, CrateSource};\n use rustc_middle::middle::dependency_format::Dependencies;\n use rustc_middle::ty::query::Providers;\n use rustc_session::config::{CrateType, OutputFilenames, OutputType, RUST_CGU_EXT};\n+use rustc_session::cstore::{self, CrateSource};\n use rustc_session::utils::NativeLibKind;\n use rustc_span::symbol::Symbol;\n use std::path::{Path, PathBuf};"}, {"sha": "8129a14fcfdc965b844074c9c9220fb1c3d99225", "filename": "compiler/rustc_codegen_ssa/src/traits/backend.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fbackend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fbackend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fbackend.rs?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -8,12 +8,12 @@ use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::ErrorReported;\n use rustc_metadata::EncodedMetadata;\n use rustc_middle::dep_graph::{WorkProduct, WorkProductId};\n-use rustc_middle::middle::cstore::MetadataLoaderDyn;\n use rustc_middle::ty::layout::{FnAbiOf, HasTyCtxt, LayoutOf, TyAndLayout};\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::{Ty, TyCtxt};\n use rustc_session::{\n     config::{self, OutputFilenames, PrintRequest},\n+    cstore::MetadataLoaderDyn,\n     Session,\n };\n use rustc_span::symbol::Symbol;"}, {"sha": "ab7ee03b643f8e315497303c9dd2a5e839c793d3", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -25,12 +25,12 @@ use rustc_interface::util::{self, collect_crate_types, get_codegen_backend};\n use rustc_interface::{interface, Queries};\n use rustc_lint::LintStore;\n use rustc_metadata::locator;\n-use rustc_middle::middle::cstore::MetadataLoader;\n use rustc_save_analysis as save;\n use rustc_save_analysis::DumpHandler;\n use rustc_serialize::json::{self, ToJson};\n use rustc_session::config::{nightly_options, CG_OPTIONS, DB_OPTIONS};\n use rustc_session::config::{ErrorOutputType, Input, OutputType, PrintRequest, TrimmedDefPaths};\n+use rustc_session::cstore::MetadataLoader;\n use rustc_session::getopts;\n use rustc_session::lint::{Lint, LintId};\n use rustc_session::{config, DiagnosticOutput, Session};"}, {"sha": "c29c4fc4bc242d261dc721212d4377afea64fa68", "filename": "compiler/rustc_interface/src/passes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -19,7 +19,6 @@ use rustc_metadata::creader::CStore;\n use rustc_metadata::{encode_metadata, EncodedMetadata};\n use rustc_middle::arena::Arena;\n use rustc_middle::dep_graph::DepGraph;\n-use rustc_middle::middle::cstore::{MetadataLoader, MetadataLoaderDyn};\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::{self, GlobalCtxt, ResolverOutputs, TyCtxt};\n use rustc_mir_build as mir_build;\n@@ -30,6 +29,7 @@ use rustc_query_impl::{OnDiskCache, Queries as TcxQueries};\n use rustc_resolve::{Resolver, ResolverArenas};\n use rustc_serialize::json;\n use rustc_session::config::{CrateType, Input, OutputFilenames, OutputType, PpMode, PpSourceMode};\n+use rustc_session::cstore::{MetadataLoader, MetadataLoaderDyn};\n use rustc_session::lint;\n use rustc_session::output::{filename_for_input, filename_for_metadata};\n use rustc_session::search_paths::PathKind;"}, {"sha": "6e7d9754384ad08e1ee6b7426241f6f37f11c926", "filename": "compiler/rustc_metadata/src/creader.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -13,11 +13,11 @@ use rustc_expand::base::SyntaxExtension;\n use rustc_hir::def_id::{CrateNum, LocalDefId, StableCrateId, LOCAL_CRATE};\n use rustc_hir::definitions::Definitions;\n use rustc_index::vec::IndexVec;\n-use rustc_middle::middle::cstore::{CrateDepKind, CrateSource, ExternCrate};\n-use rustc_middle::middle::cstore::{ExternCrateSource, MetadataLoaderDyn};\n use rustc_middle::ty::TyCtxt;\n use rustc_serialize::json::ToJson;\n use rustc_session::config::{self, CrateType, ExternLocation};\n+use rustc_session::cstore::{CrateDepKind, CrateSource, ExternCrate};\n+use rustc_session::cstore::{ExternCrateSource, MetadataLoaderDyn};\n use rustc_session::lint::{self, BuiltinLintDiagnostics, ExternDepSpec};\n use rustc_session::output::validate_crate_name;\n use rustc_session::search_paths::PathKind;"}, {"sha": "ddc3e10fa484f976e073e60e1295c7da791a6fd9", "filename": "compiler/rustc_metadata/src/dependency_format.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_metadata%2Fsrc%2Fdependency_format.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_metadata%2Fsrc%2Fdependency_format.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Fdependency_format.rs?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -55,11 +55,11 @@ use crate::creader::CStore;\n \n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::def_id::CrateNum;\n-use rustc_middle::middle::cstore::CrateDepKind;\n-use rustc_middle::middle::cstore::LinkagePreference::{self, RequireDynamic, RequireStatic};\n use rustc_middle::middle::dependency_format::{Dependencies, DependencyList, Linkage};\n use rustc_middle::ty::TyCtxt;\n use rustc_session::config::CrateType;\n+use rustc_session::cstore::CrateDepKind;\n+use rustc_session::cstore::LinkagePreference::{self, RequireDynamic, RequireStatic};\n use rustc_target::spec::PanicStrategy;\n \n crate fn calculate(tcx: TyCtxt<'_>) -> Dependencies {"}, {"sha": "5b42f48a7d466bb9133f9004e334864f8d4abec1", "filename": "compiler/rustc_metadata/src/foreign_modules.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_metadata%2Fsrc%2Fforeign_modules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_metadata%2Fsrc%2Fforeign_modules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Fforeign_modules.rs?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -1,7 +1,7 @@\n use rustc_hir as hir;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n-use rustc_middle::middle::cstore::ForeignModule;\n use rustc_middle::ty::TyCtxt;\n+use rustc_session::cstore::ForeignModule;\n \n crate fn collect(tcx: TyCtxt<'_>) -> Vec<ForeignModule> {\n     let mut collector = Collector { modules: Vec::new() };"}, {"sha": "4d503f0fbf714bc7f25eb31b0aa1b91e2513316a", "filename": "compiler/rustc_metadata/src/locator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -221,8 +221,8 @@ use rustc_data_structures::owning_ref::OwningRef;\n use rustc_data_structures::svh::Svh;\n use rustc_data_structures::sync::MetadataRef;\n use rustc_errors::struct_span_err;\n-use rustc_middle::middle::cstore::{CrateSource, MetadataLoader};\n use rustc_session::config::{self, CrateType};\n+use rustc_session::cstore::{CrateSource, MetadataLoader};\n use rustc_session::filesearch::{FileDoesntMatch, FileMatches, FileSearch};\n use rustc_session::search_paths::PathKind;\n use rustc_session::utils::CanonicalizedPath;"}, {"sha": "8b327a53ed9cdb87af70594e56d404e662ee27f7", "filename": "compiler/rustc_metadata/src/native_libs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_metadata%2Fsrc%2Fnative_libs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_metadata%2Fsrc%2Fnative_libs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Fnative_libs.rs?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -3,8 +3,8 @@ use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n-use rustc_middle::middle::cstore::{DllCallingConvention, DllImport, NativeLib};\n use rustc_middle::ty::{List, ParamEnv, ParamEnvAnd, Ty, TyCtxt};\n+use rustc_session::cstore::{DllCallingConvention, DllImport, NativeLib};\n use rustc_session::parse::feature_err;\n use rustc_session::utils::NativeLibKind;\n use rustc_session::Session;"}, {"sha": "08fc11f21d94e4ec42817c5ccbf98e0cb665cd00", "filename": "compiler/rustc_metadata/src/rmeta/decoder.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -21,15 +21,16 @@ use rustc_hir::definitions::{DefKey, DefPath, DefPathData, DefPathHash};\n use rustc_hir::lang_items;\n use rustc_index::vec::{Idx, IndexVec};\n use rustc_middle::hir::exports::Export;\n-use rustc_middle::middle::cstore::{CrateSource, ExternCrate};\n-use rustc_middle::middle::cstore::{ForeignModule, LinkagePreference, NativeLib};\n use rustc_middle::middle::exported_symbols::{ExportedSymbol, SymbolExportLevel};\n use rustc_middle::mir::interpret::{AllocDecodingSession, AllocDecodingState};\n use rustc_middle::mir::{self, Body, Promoted};\n use rustc_middle::thir;\n use rustc_middle::ty::codec::TyDecoder;\n use rustc_middle::ty::{self, Ty, TyCtxt, Visibility};\n use rustc_serialize::{opaque, Decodable, Decoder};\n+use rustc_session::cstore::{\n+    CrateSource, ExternCrate, ForeignModule, LinkagePreference, NativeLib,\n+};\n use rustc_session::Session;\n use rustc_span::hygiene::{ExpnIndex, MacroKind};\n use rustc_span::source_map::{respan, Spanned};"}, {"sha": "292ef03d856d977a0ede95dc390635439ee928a0", "filename": "compiler/rustc_metadata/src/rmeta/decoder/cstore_impl.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -8,12 +8,11 @@ use rustc_hir::def::{CtorKind, DefKind};\n use rustc_hir::def_id::{CrateNum, DefId, DefIdMap, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc_hir::definitions::{DefKey, DefPath, DefPathHash};\n use rustc_middle::hir::exports::Export;\n-use rustc_middle::middle::cstore::ForeignModule;\n-use rustc_middle::middle::cstore::{CrateSource, CrateStore};\n use rustc_middle::middle::exported_symbols::ExportedSymbol;\n use rustc_middle::middle::stability::DeprecationEntry;\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::{self, TyCtxt, Visibility};\n+use rustc_session::cstore::{CrateSource, CrateStore, ForeignModule};\n use rustc_session::utils::NativeLibKind;\n use rustc_session::{Session, StableCrateId};\n use rustc_span::hygiene::{ExpnHash, ExpnId};"}, {"sha": "072398983afb95067fc8ce67eb398a9a8a8f34b1", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -18,7 +18,6 @@ use rustc_hir::{AnonConst, GenericParamKind};\n use rustc_index::bit_set::GrowableBitSet;\n use rustc_index::vec::Idx;\n use rustc_middle::hir::map::Map;\n-use rustc_middle::middle::cstore::{ForeignModule, LinkagePreference, NativeLib};\n use rustc_middle::middle::dependency_format::Linkage;\n use rustc_middle::middle::exported_symbols::{\n     metadata_symbol_name, ExportedSymbol, SymbolExportLevel,\n@@ -30,6 +29,7 @@ use rustc_middle::ty::codec::TyEncoder;\n use rustc_middle::ty::{self, SymbolName, Ty, TyCtxt};\n use rustc_serialize::{opaque, Encodable, Encoder};\n use rustc_session::config::CrateType;\n+use rustc_session::cstore::{ForeignModule, LinkagePreference, NativeLib};\n use rustc_span::symbol::{sym, Ident, Symbol};\n use rustc_span::{self, ExternalSource, FileName, SourceFile, Span, SyntaxContext};\n use rustc_span::{"}, {"sha": "42855e9d9d12f2fc25fda08857d48f3b8b0b908c", "filename": "compiler/rustc_metadata/src/rmeta/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -13,13 +13,13 @@ use rustc_hir::definitions::DefKey;\n use rustc_hir::lang_items;\n use rustc_index::{bit_set::FiniteBitSet, vec::IndexVec};\n use rustc_middle::hir::exports::Export;\n-use rustc_middle::middle::cstore::{CrateDepKind, ForeignModule, LinkagePreference, NativeLib};\n use rustc_middle::middle::exported_symbols::{ExportedSymbol, SymbolExportLevel};\n use rustc_middle::mir;\n use rustc_middle::thir;\n use rustc_middle::ty::{self, ReprOptions, Ty};\n use rustc_serialize::opaque::Encoder;\n use rustc_session::config::SymbolManglingVersion;\n+use rustc_session::cstore::{CrateDepKind, ForeignModule, LinkagePreference, NativeLib};\n use rustc_span::edition::Edition;\n use rustc_span::hygiene::{ExpnIndex, MacroKind};\n use rustc_span::symbol::{Ident, Symbol};"}, {"sha": "962aea448b82ca5ae2c79b9af400692e569d7151", "filename": "compiler/rustc_middle/src/arena.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_middle%2Fsrc%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_middle%2Fsrc%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Farena.rs?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -79,8 +79,8 @@ macro_rules! arena_types {\n                 >,\n             [few] all_traits: Vec<rustc_hir::def_id::DefId>,\n             [few] privacy_access_levels: rustc_middle::middle::privacy::AccessLevels,\n-            [few] foreign_module: rustc_middle::middle::cstore::ForeignModule,\n-            [few] foreign_modules: Vec<rustc_middle::middle::cstore::ForeignModule>,\n+            [few] foreign_module: rustc_session::cstore::ForeignModule,\n+            [few] foreign_modules: Vec<rustc_session::cstore::ForeignModule>,\n             [] upvars_mentioned: rustc_data_structures::fx::FxIndexMap<rustc_hir::HirId, rustc_hir::Upvar>,\n             [] object_safety_violations: rustc_middle::traits::ObjectSafetyViolation,\n             [] codegen_unit: rustc_middle::mir::mono::CodegenUnit<$tcx>,"}, {"sha": "029b4aed3eeba2efdb642d92721347f5e5d78aa9", "filename": "compiler/rustc_middle/src/ich/hcx.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_middle%2Fsrc%2Fich%2Fhcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_middle%2Fsrc%2Fich%2Fhcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fich%2Fhcx.rs?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -1,14 +1,13 @@\n use crate::ich;\n-use crate::middle::cstore::CrateStore;\n use crate::ty::TyCtxt;\n-\n use rustc_ast as ast;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_data_structures::sync::Lrc;\n use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, LocalDefId};\n use rustc_hir::definitions::{DefPathHash, Definitions};\n+use rustc_session::cstore::CrateStore;\n use rustc_session::Session;\n use rustc_span::source_map::SourceMap;\n use rustc_span::symbol::Symbol;"}, {"sha": "80a54071311ce921d77a3924b9994da4e840faa9", "filename": "compiler/rustc_middle/src/middle/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fmod.rs?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -1,5 +1,4 @@\n pub mod codegen_fn_attrs;\n-pub mod cstore;\n pub mod dependency_format;\n pub mod exported_symbols;\n pub mod lang_items;"}, {"sha": "a6d6a2d10f7035449914f3151e1c04e6bf268124", "filename": "compiler/rustc_middle/src/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -21,7 +21,6 @@ pub use vtable::*;\n \n use crate::hir::exports::ExportMap;\n use crate::ich::StableHashingContext;\n-use crate::middle::cstore::CrateStoreDyn;\n use crate::mir::{Body, GeneratorLayout};\n use crate::traits::{self, Reveal};\n use crate::ty;\n@@ -37,6 +36,7 @@ use rustc_hir::def::{CtorKind, CtorOf, DefKind, Res};\n use rustc_hir::def_id::{CrateNum, DefId, LocalDefId, LocalDefIdMap, CRATE_DEF_INDEX};\n use rustc_hir::Node;\n use rustc_macros::HashStable;\n+use rustc_session::cstore::CrateStoreDyn;\n use rustc_span::symbol::{kw, Ident, Symbol};\n use rustc_span::Span;\n use rustc_target::abi::Align;"}, {"sha": "251bee0a3bf215bc2a534700cb9082d30e08f706", "filename": "compiler/rustc_middle/src/ty/print/pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -1,4 +1,3 @@\n-use crate::middle::cstore::{ExternCrate, ExternCrateSource};\n use crate::mir::interpret::{AllocRange, ConstValue, GlobalAlloc, Pointer, Provenance, Scalar};\n use crate::ty::subst::{GenericArg, GenericArgKind, Subst};\n use crate::ty::{self, ConstInt, DefIdTree, ParamConst, ScalarInt, Ty, TyCtxt, TypeFoldable};\n@@ -11,6 +10,7 @@ use rustc_hir::def_id::{DefId, DefIdSet, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc_hir::definitions::{DefPathData, DefPathDataName, DisambiguatedDefPathData};\n use rustc_hir::ItemKind;\n use rustc_session::config::TrimmedDefPaths;\n+use rustc_session::cstore::{ExternCrate, ExternCrateSource};\n use rustc_span::symbol::{kw, Ident, Symbol};\n use rustc_target::abi::Size;\n use rustc_target::spec::abi::Abi;"}, {"sha": "ada344b9856da3917dd9352cb19c092c09b17022", "filename": "compiler/rustc_middle/src/ty/query.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery.rs?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -3,8 +3,6 @@ use crate::hir::exports::Export;\n use crate::infer::canonical::{self, Canonical};\n use crate::lint::LintLevelMap;\n use crate::middle::codegen_fn_attrs::CodegenFnAttrs;\n-use crate::middle::cstore::{CrateDepKind, CrateSource};\n-use crate::middle::cstore::{ExternCrate, ForeignModule, LinkagePreference, NativeLib};\n use crate::middle::exported_symbols::{ExportedSymbol, SymbolExportLevel};\n use crate::middle::lib_features::LibFeatures;\n use crate::middle::privacy::AccessLevels;\n@@ -46,6 +44,8 @@ use rustc_hir::lang_items::{LangItem, LanguageItems};\n use rustc_hir::{Crate, ItemLocalId, TraitCandidate};\n use rustc_index::{bit_set::FiniteBitSet, vec::IndexVec};\n use rustc_session::config::{EntryFnType, OptLevel, OutputFilenames, SymbolManglingVersion};\n+use rustc_session::cstore::{CrateDepKind, CrateSource};\n+use rustc_session::cstore::{ExternCrate, ForeignModule, LinkagePreference, NativeLib};\n use rustc_session::utils::NativeLibKind;\n use rustc_session::Limits;\n use rustc_target::abi;"}, {"sha": "388c33917c64fc9c8d062cfedc095752668e975e", "filename": "compiler/rustc_passes/src/lang_items.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_passes%2Fsrc%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_passes%2Fsrc%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Flang_items.rs?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -10,16 +10,15 @@\n use crate::check_attr::target_from_impl_item;\n use crate::weak_lang_items;\n \n-use rustc_middle::middle::cstore::ExternCrate;\n-use rustc_middle::ty::TyCtxt;\n-\n use rustc_ast::Attribute;\n use rustc_errors::{pluralize, struct_span_err};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_hir::lang_items::{extract, GenericRequirement, ITEM_REFS};\n use rustc_hir::{HirId, LangItem, LanguageItems, Target};\n+use rustc_middle::ty::TyCtxt;\n+use rustc_session::cstore::ExternCrate;\n use rustc_span::Span;\n \n use rustc_middle::ty::query::Providers;"}, {"sha": "c21075a443c0b77427882e8baeaba29ab615f737", "filename": "compiler/rustc_plugin_impl/src/load.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_plugin_impl%2Fsrc%2Fload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_plugin_impl%2Fsrc%2Fload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_plugin_impl%2Fsrc%2Fload.rs?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -4,7 +4,7 @@ use crate::Registry;\n use rustc_ast::Crate;\n use rustc_errors::struct_span_err;\n use rustc_metadata::locator;\n-use rustc_middle::middle::cstore::MetadataLoader;\n+use rustc_session::cstore::MetadataLoader;\n use rustc_session::Session;\n use rustc_span::symbol::{sym, Ident};\n use rustc_span::Span;"}, {"sha": "2a562a06cb3cdc001544b01959bca02811a4c7b5", "filename": "compiler/rustc_resolve/src/build_reduced_graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -27,8 +27,8 @@ use rustc_hir::def_id::{DefId, LocalDefId, CRATE_DEF_INDEX};\n use rustc_metadata::creader::LoadedMacro;\n use rustc_middle::bug;\n use rustc_middle::hir::exports::Export;\n-use rustc_middle::middle::cstore::CrateStore;\n use rustc_middle::ty;\n+use rustc_session::cstore::CrateStore;\n use rustc_span::hygiene::{ExpnId, LocalExpnId, MacroKind};\n use rustc_span::source_map::{respan, Spanned};\n use rustc_span::symbol::{kw, sym, Ident, Symbol};"}, {"sha": "3e7783033efa5df265ff3365ff054866dbd99973", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -51,10 +51,10 @@ use rustc_hir::TraitCandidate;\n use rustc_index::vec::IndexVec;\n use rustc_metadata::creader::{CStore, CrateLoader};\n use rustc_middle::hir::exports::ExportMap;\n-use rustc_middle::middle::cstore::{CrateStore, MetadataLoaderDyn};\n use rustc_middle::span_bug;\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::{self, DefIdTree, MainDefinition, ResolverOutputs};\n+use rustc_session::cstore::{CrateStore, MetadataLoaderDyn};\n use rustc_session::lint;\n use rustc_session::lint::{BuiltinLintDiagnostics, LintBuffer};\n use rustc_session::Session;"}, {"sha": "543cd0247a53daecd9400c4b4711a6232c54578a", "filename": "compiler/rustc_save_analysis/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_save_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_save_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_save_analysis%2Fsrc%2Flib.rs?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -19,11 +19,11 @@ use rustc_hir::intravisit::{self, Visitor};\n use rustc_hir::Node;\n use rustc_hir_pretty::{enum_def_to_string, fn_to_string, ty_to_string};\n use rustc_middle::hir::map::Map;\n-use rustc_middle::middle::cstore::ExternCrate;\n use rustc_middle::middle::privacy::AccessLevels;\n use rustc_middle::ty::{self, print::with_no_trimmed_paths, DefIdTree, TyCtxt};\n use rustc_middle::{bug, span_bug};\n use rustc_session::config::{CrateType, Input, OutputType};\n+use rustc_session::cstore::ExternCrate;\n use rustc_session::output::{filename_for_metadata, out_filename};\n use rustc_span::source_map::Spanned;\n use rustc_span::symbol::Ident;"}, {"sha": "37cfc4a0dc3c2b91d586228a5d61df1dda0e7912", "filename": "compiler/rustc_session/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_session%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_session%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2FCargo.toml?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -9,6 +9,7 @@ rustc_macros = { path = \"../rustc_macros\" }\n tracing = \"0.1\"\n rustc_errors = { path = \"../rustc_errors\" }\n rustc_feature = { path = \"../rustc_feature\" }\n+rustc_hir = { path = \"../rustc_hir\" }\n rustc_target = { path = \"../rustc_target\" }\n rustc_serialize = { path = \"../rustc_serialize\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }"}, {"sha": "4b93a3e8e83a176ed8c51e74949581dcf0abc058", "filename": "compiler/rustc_session/src/cstore.rs", "status": "renamed", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_session%2Fsrc%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_session%2Fsrc%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fcstore.rs?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -2,13 +2,12 @@\n //! are *mostly* used as a part of that interface, but these should\n //! probably get a better home if someone can find one.\n \n+use crate::search_paths::PathKind;\n+use crate::utils::NativeLibKind;\n use rustc_ast as ast;\n use rustc_data_structures::sync::{self, MetadataRef};\n use rustc_hir::def_id::{CrateNum, DefId, StableCrateId, LOCAL_CRATE};\n use rustc_hir::definitions::{DefKey, DefPath, DefPathHash};\n-use rustc_macros::HashStable;\n-use rustc_session::search_paths::PathKind;\n-use rustc_session::utils::NativeLibKind;\n use rustc_span::hygiene::{ExpnHash, ExpnId};\n use rustc_span::symbol::Symbol;\n use rustc_span::Span;\n@@ -21,7 +20,7 @@ use std::path::{Path, PathBuf};\n \n /// Where a crate came from on the local filesystem. One of these three options\n /// must be non-None.\n-#[derive(PartialEq, Clone, Debug, HashStable, Encodable, Decodable)]\n+#[derive(PartialEq, Clone, Debug, HashStable_Generic, Encodable, Decodable)]\n pub struct CrateSource {\n     pub dylib: Option<(PathBuf, PathKind)>,\n     pub rlib: Option<(PathBuf, PathKind)>,\n@@ -35,7 +34,7 @@ impl CrateSource {\n }\n \n #[derive(Encodable, Decodable, Copy, Clone, Ord, PartialOrd, Eq, PartialEq, Debug)]\n-#[derive(HashStable)]\n+#[derive(HashStable_Generic)]\n pub enum CrateDepKind {\n     /// A dependency that is only used for its macros.\n     MacrosOnly,\n@@ -56,13 +55,13 @@ impl CrateDepKind {\n     }\n }\n \n-#[derive(Copy, Debug, PartialEq, Clone, Encodable, Decodable, HashStable)]\n+#[derive(Copy, Debug, PartialEq, Clone, Encodable, Decodable, HashStable_Generic)]\n pub enum LinkagePreference {\n     RequireDynamic,\n     RequireStatic,\n }\n \n-#[derive(Debug, Encodable, Decodable, HashStable)]\n+#[derive(Debug, Encodable, Decodable, HashStable_Generic)]\n pub struct NativeLib {\n     pub kind: NativeLibKind,\n     pub name: Option<Symbol>,\n@@ -73,7 +72,7 @@ pub struct NativeLib {\n     pub dll_imports: Vec<DllImport>,\n }\n \n-#[derive(Clone, Debug, Encodable, Decodable, HashStable)]\n+#[derive(Clone, Debug, Encodable, Decodable, HashStable_Generic)]\n pub struct DllImport {\n     pub name: Symbol,\n     pub ordinal: Option<u16>,\n@@ -90,21 +89,21 @@ pub struct DllImport {\n ///\n /// The usize value, where present, indicates the size of the function's argument list\n /// in bytes.\n-#[derive(Clone, PartialEq, Debug, Encodable, Decodable, HashStable)]\n+#[derive(Clone, PartialEq, Debug, Encodable, Decodable, HashStable_Generic)]\n pub enum DllCallingConvention {\n     C,\n     Stdcall(usize),\n     Fastcall(usize),\n     Vectorcall(usize),\n }\n \n-#[derive(Clone, TyEncodable, TyDecodable, HashStable, Debug)]\n+#[derive(Clone, Encodable, Decodable, HashStable_Generic, Debug)]\n pub struct ForeignModule {\n     pub foreign_items: Vec<DefId>,\n     pub def_id: DefId,\n }\n \n-#[derive(Copy, Clone, Debug, HashStable)]\n+#[derive(Copy, Clone, Debug, HashStable_Generic)]\n pub struct ExternCrate {\n     pub src: ExternCrateSource,\n \n@@ -135,7 +134,7 @@ impl ExternCrate {\n     }\n }\n \n-#[derive(Copy, Clone, Debug, HashStable)]\n+#[derive(Copy, Clone, Debug, HashStable_Generic)]\n pub enum ExternCrateSource {\n     /// Crate is loaded by `extern crate`.\n     Extern(", "previous_filename": "compiler/rustc_middle/src/middle/cstore.rs"}, {"sha": "d5f887f935b4217466d9ff263a1bd260550eb47f", "filename": "compiler/rustc_session/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_session%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8961616e6004e204327f575081509b049268762b/compiler%2Frustc_session%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Flib.rs?ref=8961616e6004e204327f575081509b049268762b", "patch": "@@ -14,6 +14,7 @@ pub mod parse;\n mod code_stats;\n #[macro_use]\n pub mod config;\n+pub mod cstore;\n pub mod filesearch;\n mod options;\n pub mod search_paths;\n@@ -28,4 +29,4 @@ pub use getopts;\n /// Requirements for a `StableHashingContext` to be used in this crate.\n /// This is a hack to allow using the `HashStable_Generic` derive macro\n /// instead of implementing everything in `rustc_middle`.\n-pub trait HashStableContext {}\n+pub trait HashStableContext: rustc_ast::HashStableContext + rustc_hir::HashStableContext {}"}]}