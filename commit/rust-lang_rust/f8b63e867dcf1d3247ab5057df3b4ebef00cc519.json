{"sha": "f8b63e867dcf1d3247ab5057df3b4ebef00cc519", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4YjYzZTg2N2RjZjFkMzI0N2FiNTA1N2RmM2I0ZWJlZjAwY2M1MTk=", "commit": {"author": {"name": "Hech", "email": "tryctor@gmail.com", "date": "2015-04-30T00:30:46Z"}, "committer": {"name": "Hech", "email": "tryctor@gmail.com", "date": "2015-04-30T00:30:46Z"}, "message": "docs: link fix", "tree": {"sha": "8439442e629e2a83ecb5e1cf6571cc22168518be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8439442e629e2a83ecb5e1cf6571cc22168518be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8b63e867dcf1d3247ab5057df3b4ebef00cc519", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8b63e867dcf1d3247ab5057df3b4ebef00cc519", "html_url": "https://github.com/rust-lang/rust/commit/f8b63e867dcf1d3247ab5057df3b4ebef00cc519", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8b63e867dcf1d3247ab5057df3b4ebef00cc519/comments", "author": {"login": "Hech", "id": 5958748, "node_id": "MDQ6VXNlcjU5NTg3NDg=", "avatar_url": "https://avatars.githubusercontent.com/u/5958748?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hech", "html_url": "https://github.com/Hech", "followers_url": "https://api.github.com/users/Hech/followers", "following_url": "https://api.github.com/users/Hech/following{/other_user}", "gists_url": "https://api.github.com/users/Hech/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hech/subscriptions", "organizations_url": "https://api.github.com/users/Hech/orgs", "repos_url": "https://api.github.com/users/Hech/repos", "events_url": "https://api.github.com/users/Hech/events{/privacy}", "received_events_url": "https://api.github.com/users/Hech/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Hech", "id": 5958748, "node_id": "MDQ6VXNlcjU5NTg3NDg=", "avatar_url": "https://avatars.githubusercontent.com/u/5958748?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hech", "html_url": "https://github.com/Hech", "followers_url": "https://api.github.com/users/Hech/followers", "following_url": "https://api.github.com/users/Hech/following{/other_user}", "gists_url": "https://api.github.com/users/Hech/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hech/subscriptions", "organizations_url": "https://api.github.com/users/Hech/orgs", "repos_url": "https://api.github.com/users/Hech/repos", "events_url": "https://api.github.com/users/Hech/events{/privacy}", "received_events_url": "https://api.github.com/users/Hech/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "551a74dddd84cf01440ee84148ebd18bc68bd7c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/551a74dddd84cf01440ee84148ebd18bc68bd7c8", "html_url": "https://github.com/rust-lang/rust/commit/551a74dddd84cf01440ee84148ebd18bc68bd7c8"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "dbacd405065d421ab090c3214f1e9aca8dcb613b", "filename": "src/doc/trpl/casting-between-types.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8b63e867dcf1d3247ab5057df3b4ebef00cc519/src%2Fdoc%2Ftrpl%2Fcasting-between-types.md", "raw_url": "https://github.com/rust-lang/rust/raw/f8b63e867dcf1d3247ab5057df3b4ebef00cc519/src%2Fdoc%2Ftrpl%2Fcasting-between-types.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fcasting-between-types.md?ref=f8b63e867dcf1d3247ab5057df3b4ebef00cc519", "patch": "@@ -43,7 +43,7 @@ what it does is very simple, but very scary. It tells Rust to treat a value of\n one type as though it were another type. It does this regardless of the\n typechecking system, and just completely trusts you.\n \n-[intrinsic]: intrinsics.html\n+[intrinsics]: intrinsics.html\n \n In our previous example, we know that an array of four `u8`s represents a `u32`\n properly, and so we want to do the cast. Using `transmute` instead of `as`,"}]}