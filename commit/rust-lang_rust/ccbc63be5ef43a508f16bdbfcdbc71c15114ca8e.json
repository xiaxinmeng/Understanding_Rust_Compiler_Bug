{"sha": "ccbc63be5ef43a508f16bdbfcdbc71c15114ca8e", "node_id": "C_kwDOAAsO6NoAKGNjYmM2M2JlNWVmNDNhNTA4ZjE2YmRiZmNkYmM3MWMxNTExNGNhOGU", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-10-09T11:40:49Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-10-09T11:41:39Z"}, "message": "1/1000 events do happen sometimes...", "tree": {"sha": "ebb88d42503b7af421253442005ed767446cb1ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ebb88d42503b7af421253442005ed767446cb1ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ccbc63be5ef43a508f16bdbfcdbc71c15114ca8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ccbc63be5ef43a508f16bdbfcdbc71c15114ca8e", "html_url": "https://github.com/rust-lang/rust/commit/ccbc63be5ef43a508f16bdbfcdbc71c15114ca8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ccbc63be5ef43a508f16bdbfcdbc71c15114ca8e/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb29c9e1303b3ce29bcaf908ccacfb7d9b6c5602", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb29c9e1303b3ce29bcaf908ccacfb7d9b6c5602", "html_url": "https://github.com/rust-lang/rust/commit/eb29c9e1303b3ce29bcaf908ccacfb7d9b6c5602"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "ca8590cc6b3f47f31ebcf3c9125c921377daecf3", "filename": "src/tools/miri/tests/fail/unaligned_pointers/dyn_alignment.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ccbc63be5ef43a508f16bdbfcdbc71c15114ca8e/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Funaligned_pointers%2Fdyn_alignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccbc63be5ef43a508f16bdbfcdbc71c15114ca8e/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Funaligned_pointers%2Fdyn_alignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Funaligned_pointers%2Fdyn_alignment.rs?ref=ccbc63be5ef43a508f16bdbfcdbc71c15114ca8e", "patch": "@@ -7,7 +7,7 @@ struct MuchAlign;\n \n fn main() {\n     // Try many times as this might work by chance.\n-    for _ in 0..10 {\n+    for _ in 0..20 {\n         let buf = [0u32; 256];\n         // `buf` is sufficiently aligned for `layout.align` on a `dyn Debug`, but not\n         // for the actual alignment required by `MuchAlign`."}, {"sha": "a807200771d62c087c51e9035a8fa5d50bc30f31", "filename": "src/tools/miri/tests/fail/unaligned_pointers/reference_to_packed.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ccbc63be5ef43a508f16bdbfcdbc71c15114ca8e/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Funaligned_pointers%2Freference_to_packed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccbc63be5ef43a508f16bdbfcdbc71c15114ca8e/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Funaligned_pointers%2Freference_to_packed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Funaligned_pointers%2Freference_to_packed.rs?ref=ccbc63be5ef43a508f16bdbfcdbc71c15114ca8e", "patch": "@@ -11,7 +11,7 @@ struct Foo {\n \n fn main() {\n     // Try many times as this might work by chance.\n-    for _ in 0..10 {\n+    for _ in 0..20 {\n         let foo = Foo { x: 42, y: 99 };\n         let p = &foo.x;\n         let i = *p; //~ERROR: alignment 4 is required"}, {"sha": "3aa8cb492a13c2e0ad920fa43138f26af5f4f2bb", "filename": "src/tools/miri/tests/fail/unaligned_pointers/unaligned_ptr3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ccbc63be5ef43a508f16bdbfcdbc71c15114ca8e/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Funaligned_pointers%2Funaligned_ptr3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccbc63be5ef43a508f16bdbfcdbc71c15114ca8e/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Funaligned_pointers%2Funaligned_ptr3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Funaligned_pointers%2Funaligned_ptr3.rs?ref=ccbc63be5ef43a508f16bdbfcdbc71c15114ca8e", "patch": "@@ -3,7 +3,7 @@\n \n fn main() {\n     // Try many times as this might work by chance.\n-    for _ in 0..10 {\n+    for _ in 0..20 {\n         let x = [2u16, 3, 4, 5]; // Make it big enough so we don't get an out-of-bounds error.\n         let x = &x[0] as *const _ as *const *const u8; // cast to ptr-to-ptr, so that we load a ptr\n         // This must fail because alignment is violated. Test specifically for loading pointers,"}, {"sha": "606316120d6e49629217543b9ce3c653e87d2ca5", "filename": "src/tools/miri/tests/fail/unaligned_pointers/unaligned_ptr4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ccbc63be5ef43a508f16bdbfcdbc71c15114ca8e/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Funaligned_pointers%2Funaligned_ptr4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccbc63be5ef43a508f16bdbfcdbc71c15114ca8e/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Funaligned_pointers%2Funaligned_ptr4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Funaligned_pointers%2Funaligned_ptr4.rs?ref=ccbc63be5ef43a508f16bdbfcdbc71c15114ca8e", "patch": "@@ -6,7 +6,7 @@ fn main() {\n     // (This would be missed if u8 allocations are *always* at odd addresses.)\n     //\n     // Try many times as this might work by chance.\n-    for _ in 0..10 {\n+    for _ in 0..20 {\n         let x = [0u8; 4];\n         let ptr = x.as_ptr().wrapping_offset(1).cast::<u16>();\n         let _val = unsafe { *ptr }; //~ERROR: but alignment"}, {"sha": "eff4237595600364b520087eb737788e872f9f9f", "filename": "src/tools/miri/tests/fail/unaligned_pointers/unaligned_ptr_zst.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ccbc63be5ef43a508f16bdbfcdbc71c15114ca8e/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Funaligned_pointers%2Funaligned_ptr_zst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccbc63be5ef43a508f16bdbfcdbc71c15114ca8e/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Funaligned_pointers%2Funaligned_ptr_zst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Funaligned_pointers%2Funaligned_ptr_zst.rs?ref=ccbc63be5ef43a508f16bdbfcdbc71c15114ca8e", "patch": "@@ -4,7 +4,7 @@\n \n fn main() {\n     // Try many times as this might work by chance.\n-    for i in 0..10 {\n+    for i in 0..20 {\n         let x = i as u8;\n         let x = &x as *const _ as *const [u32; 0];\n         // This must fail because alignment is violated. Test specifically for loading ZST."}, {"sha": "2b6e83891d6eae684907f257158057ece130bdf2", "filename": "src/tools/miri/tests/pass/align.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ccbc63be5ef43a508f16bdbfcdbc71c15114ca8e/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Falign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccbc63be5ef43a508f16bdbfcdbc71c15114ca8e/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Falign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Falign.rs?ref=ccbc63be5ef43a508f16bdbfcdbc71c15114ca8e", "patch": "@@ -22,7 +22,7 @@ fn align_to() {\n \n fn main() {\n     // Do this a couple times in a loop because it may work \"by chance\".\n-    for _ in 0..10 {\n+    for _ in 0..20 {\n         manual_alignment();\n         align_to();\n     }"}]}