{"sha": "ba1c6fcf382c1ad30adfc33952c9975a1fd9fc59", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhMWM2ZmNmMzgyYzFhZDMwYWRmYzMzOTUyYzk5NzVhMWZkOWZjNTk=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-10-20T15:32:10Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-10-20T15:36:28Z"}, "message": "Remove the last vestiges of main.ll\n\nCloses #992", "tree": {"sha": "a7d420532a230ca1dd3d270ba557d2da870032f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a7d420532a230ca1dd3d270ba557d2da870032f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba1c6fcf382c1ad30adfc33952c9975a1fd9fc59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba1c6fcf382c1ad30adfc33952c9975a1fd9fc59", "html_url": "https://github.com/rust-lang/rust/commit/ba1c6fcf382c1ad30adfc33952c9975a1fd9fc59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba1c6fcf382c1ad30adfc33952c9975a1fd9fc59/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef63f09dcd65729f84a4f49432467ad5ace86906", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef63f09dcd65729f84a4f49432467ad5ace86906", "html_url": "https://github.com/rust-lang/rust/commit/ef63f09dcd65729f84a4f49432467ad5ace86906"}], "stats": {"total": 94, "additions": 1, "deletions": 93}, "files": [{"sha": "c12d592104ed1a74476468c1eba2a5192479c83b", "filename": "Makefile.in", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ba1c6fcf382c1ad30adfc33952c9975a1fd9fc59/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/ba1c6fcf382c1ad30adfc33952c9975a1fd9fc59/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=ba1c6fcf382c1ad30adfc33952c9975a1fd9fc59", "patch": "@@ -256,8 +256,7 @@ HOST_SREQ$(1) = \\\n TARGET_SREQ$(1)$(2) = \\\n \t$$(HOST_SREQ$(1)) \\\n \t$$(TARGET_LIB$(1)$(2))/$$(CFG_RUNTIME) \\\n-\t$$(TARGET_LIB$(1)$(2))/intrinsics.bc \\\n-\t$$(TARGET_LIB$(1)$(2))/main.o\n+\t$$(TARGET_LIB$(1)$(2))/intrinsics.bc\n \n # Prerequisites for complete stageN targets\n SREQ$(1)$(2) = \\"}, {"sha": "2009df61f2d656b9e3073e51e6f6ae5141a78038", "filename": "mk/clean.mk", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ba1c6fcf382c1ad30adfc33952c9975a1fd9fc59/mk%2Fclean.mk", "raw_url": "https://github.com/rust-lang/rust/raw/ba1c6fcf382c1ad30adfc33952c9975a1fd9fc59/mk%2Fclean.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fclean.mk?ref=ba1c6fcf382c1ad30adfc33952c9975a1fd9fc59", "patch": "@@ -22,8 +22,6 @@ clean-misc:\n \t$(Q)rm -f $(GENERATED)\n \t$(Q)rm -f rustllvm/$(CFG_RUSTLLVM) rustllvm/rustllvmbits.a\n \t$(Q)rm -f rt/$(CFG_RUNTIME)\n-\t$(Q)rm -f rt/main.o\n-\t$(Q)rm -f rt/main.ll\n \t$(Q)rm -f rt/libuv/uv.a\n \t$(Q)rm -Rf $(wildcard rt/libuv/src/*/*)\n \t$(Q)rm -f $(wildcard rt/libuv/src/*.o)\n@@ -60,7 +58,6 @@ clean$(1)$(2):\n \t$(Q)rm -f $$(TARGET_LIB$(1)$(2))/$(CFG_RUSTLLVM)\n \t$(Q)rm -f $$(TARGET_LIB$(1)$(2))/libstd.rlib\n \t$(Q)rm -f $$(TARGET_LIB$(1)$(2))/intrinsics.bc\n-\t$(Q)rm -f $$(TARGET_LIB$(1)$(2))/main.o\n \n endef\n "}, {"sha": "89017c1d297a833acce58262188d590e6bb574f8", "filename": "mk/dist.mk", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ba1c6fcf382c1ad30adfc33952c9975a1fd9fc59/mk%2Fdist.mk", "raw_url": "https://github.com/rust-lang/rust/raw/ba1c6fcf382c1ad30adfc33952c9975a1fd9fc59/mk%2Fdist.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fdist.mk?ref=ba1c6fcf382c1ad30adfc33952c9975a1fd9fc59", "patch": "@@ -40,7 +40,6 @@ PKG_FILES = \\\n       $(RUNTIME_S)                             \\\n       rt/rustrt.def.in                         \\\n       rt/intrinsics/intrinsics.ll.in           \\\n-      rt/main.ll.in                            \\\n       $(RUSTLLVM_LIB_CS) $(RUSTLLVM_OBJS_CS)   \\\n       $(RUSTLLVM_HDR)                          \\\n       rustllvm/rustllvm.def.in                 \\"}, {"sha": "6bdf301546a9b779f8ac13d8eaf8a6155187b5aa", "filename": "mk/install.mk", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ba1c6fcf382c1ad30adfc33952c9975a1fd9fc59/mk%2Finstall.mk", "raw_url": "https://github.com/rust-lang/rust/raw/ba1c6fcf382c1ad30adfc33952c9975a1fd9fc59/mk%2Finstall.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Finstall.mk?ref=ba1c6fcf382c1ad30adfc33952c9975a1fd9fc59", "patch": "@@ -32,7 +32,6 @@ install-target$(1): $$(SREQ$$(ISTAGE)$(1))\n \t$(Q)$(call INSTALL,$$(TL$(1)),$$(PTL$(1)),$$(CFG_RUNTIME))\n \t$(Q)$(call INSTALL,$$(TL$(1)),$$(PTL$(1)),$$(CFG_STDLIB))\n \t$(Q)$(call INSTALL,$$(TL$(1)),$$(PTL$(1)),intrinsics.bc)\n-\t$(Q)$(call INSTALL,$$(TL$(1)),$$(PTL$(1)),main.o)\n endef\n \n $(foreach target,$(CFG_TARGET_TRIPLES), \\"}, {"sha": "07d1879efc2910ff36bdddb5c7282c90fa089d0e", "filename": "mk/rt.mk", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ba1c6fcf382c1ad30adfc33952c9975a1fd9fc59/mk%2Frt.mk", "raw_url": "https://github.com/rust-lang/rust/raw/ba1c6fcf382c1ad30adfc33952c9975a1fd9fc59/mk%2Frt.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frt.mk?ref=ba1c6fcf382c1ad30adfc33952c9975a1fd9fc59", "patch": "@@ -102,22 +102,6 @@ rt/%.o: rt/%.S $(MKFILES)\n \t@$(call E, compile: $@)\n \t$(Q)$(call CFG_COMPILE_C, $@, $(RUNTIME_INCS)) $<\n \n-ifdef CFG_WINDOWSY\n-rt/main.ll: rt/main.ll.in\n-\t@$(call E, sed: $@)\n-\t$(Q)sed 's/MAIN/WinMain@16/' < $^ > $@\n-rt/main0.ll: rt/main0.ll.in\n-\t@$(call E, sed: $@)\n-\t$(Q)sed 's/MAIN/WinMain@16/' < $^ > $@\n-else\n-rt/main.ll: rt/main.ll.in\n-\t@$(call E, sed: $@)\n-\t$(Q)sed 's/MAIN/main/' < $^ > $@\n-rt/main0.ll: rt/main0.ll.in\n-\t@$(call E, sed: $@)\n-\t$(Q)sed 's/MAIN/main/' < $^ > $@\n-endif\n-\n rt/%.o: rt/%.ll $(MKFILES)\n \t@$(call E, llc: $@)\n \t$(Q)$(LLC) -filetype=obj -relocation-model=pic -march=x86 -o $@ $<"}, {"sha": "16ebf1eeb7ca71b4bfe990a6cdc65d3986745923", "filename": "mk/target.mk", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ba1c6fcf382c1ad30adfc33952c9975a1fd9fc59/mk%2Ftarget.mk", "raw_url": "https://github.com/rust-lang/rust/raw/ba1c6fcf382c1ad30adfc33952c9975a1fd9fc59/mk%2Ftarget.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftarget.mk?ref=ba1c6fcf382c1ad30adfc33952c9975a1fd9fc59", "patch": "@@ -23,23 +23,9 @@ $$(TARGET_LIB$(1)$(2))/libstd.rlib: \\\n \t@$$(call E, compile_and_link: $$@)\n \t$$(STAGE$(1)) --lib --static -o $$@ $$<\n \n-ifeq ($(1), 0)\n-$$(TARGET_LIB$(1)$(2))/main.o: rt/main0.o\n-\t@$$(call E, cp: $$@)\n-\t$$(Q)cp $$< $$@\n-\n-$$(TARGET_LIB$(1)$(2))/$$(CFG_RUNTIME): stage0/lib/$$(CFG_RUNTIME)\n-\t@$$(call E, cp: $$@)\n-\t$$(Q)cp $$< $$@\n-else\n-$$(TARGET_LIB$(1)$(2))/main.o: rt/main.o\n-\t@$$(call E, cp: $$@)\n-\t$$(Q)cp $$< $$@\n-\n $$(TARGET_LIB$(1)$(2))/$$(CFG_RUNTIME): rt/$$(CFG_RUNTIME)\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n-endif\n \n $$(TARGET_LIB$(1)$(2))/$$(CFG_RUSTLLVM): rustllvm/$$(CFG_RUSTLLVM)\n \t@$$(call E, cp: $$@)"}, {"sha": "8c19b2df251ad07e00134e5ad1e8671b1b0f0612", "filename": "src/rt/main.ll.in", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ef63f09dcd65729f84a4f49432467ad5ace86906/src%2Frt%2Fmain.ll.in", "raw_url": "https://github.com/rust-lang/rust/raw/ef63f09dcd65729f84a4f49432467ad5ace86906/src%2Frt%2Fmain.ll.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fmain.ll.in?ref=ef63f09dcd65729f84a4f49432467ad5ace86906", "patch": "@@ -1,13 +0,0 @@\n-%0 = type { i32, [1 x i32] }\n-%1 = type { i32, i32 }\n-%2 = type { i32, %3 }\n-%3 = type { %tydesc*, %4, i1, {} }\n-%4 = type { i1*, i1* }\n-%5 = type { i32, i32, i32, i32, [0 x %6*] }\n-%6 = type { i32, i32, i32, i32, [0 x i8] }\n-\n-%tydesc = type { %tydesc**, i32, i32, void (i1*, %task*, i1*, %tydesc**, i8*)*, void (i1*, %task*, i1*, %tydesc**, i8*)*, void (i1*, %task*, i1*, %tydesc**, i8*)*, void (i1*, %task*, i1*, %tydesc**, i8*)*, void (i1*, %task*, i1*, %tydesc**, i8*)*, void (i1*, %task*, i1*, %tydesc**, i8*)*, void (i1*, %task*, i1*, %tydesc**, i8*)*, void (i1*, %task*, i1*, %tydesc**, i8*, i8*, i8)* }\n-\n-%task = type { i32, i32, i32, i32, i32, i32, i32, i32 }\n-\n-%vec = type { i32, i32, [0 x i8] }"}, {"sha": "6b0454cc31fc42021bd6f25d7d76075e92539d6d", "filename": "src/rt/main0.ll.in", "status": "removed", "additions": 0, "deletions": 43, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/ef63f09dcd65729f84a4f49432467ad5ace86906/src%2Frt%2Fmain0.ll.in", "raw_url": "https://github.com/rust-lang/rust/raw/ef63f09dcd65729f84a4f49432467ad5ace86906/src%2Frt%2Fmain0.ll.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fmain0.ll.in?ref=ef63f09dcd65729f84a4f49432467ad5ace86906", "patch": "@@ -1,43 +0,0 @@\n-%0 = type { i32, [1 x i32] }\n-%1 = type { i32, i32 }\n-%2 = type { i32, %3 }\n-%3 = type { %tydesc*, %4, i1, {} }\n-%4 = type { i1*, i1* }\n-%5 = type { i32, i32, i32, i32, [0 x %6*] }\n-%6 = type { i32, i32, i32, i32, [0 x i8] }\n-\n-%tydesc = type { %tydesc**, i32, i32, void (i1*, %task*, i1*, %tydesc**, i8*)*, void (i1*, %task*, i1*, %tydesc**, i8*)*, void (i1*, %task*, i1*, %tydesc**, i8*)*, void (i1*, %task*, i1*, %tydesc**, i8*)*, void (i1*, %task*, i1*, %tydesc**, i8*)*, void (i1*, %task*, i1*, %tydesc**, i8*)*, void (i1*, %task*, i1*, %tydesc**, i8*)*, void (i1*, %task*, i1*, %tydesc**, i8*, i8*, i8)* }\n-\n-%task = type { i32, i32, i32, i32, i32, i32, i32, i32 }\n-\n-%vec = type { i32, i32, [0 x i8] }\n-\n-@_rust_crate_map_toplevel = external global %0\n-\n-declare i32 @rust_start(i32, i32, i32, i32)\n-\n-declare external fastcc void @_rust_main(i1* nocapture, %task*, %2* nocapture, %vec*)\n-\n-define void @_rust_main_wrap(i1* nocapture, %task *, %2* nocapture, %vec *)\n-{\n-  tail call fastcc void @_rust_main(i1* %0, %task *%1, %2* nocapture %2, %vec* %3)\n-  ret void\n-}\n-\n-%nullary_fn = type void (i1*, %task*, %2*)\n-\n-define void @_rust_spawn_wrap(\n-       i1* nocapture, %task*, %2* nocapture, %nullary_fn* %f)\n-{\n-  call void %f(i1* %0, %task *%1, %2* nocapture %2)\n-  ret void\n-}\n-\n-declare external void @set_spawn_wrapper(void (i1*, %task*, %2*, %nullary_fn*)*);\n-\n-define i32 @\"MAIN\"(i32, i32) {\n-  call void @set_spawn_wrapper(void (i1*, %task*, %2*, %nullary_fn*)* @_rust_spawn_wrap)\n-\n-  %result = tail call i32 @rust_start(i32 ptrtoint (void (i1*, %task*, %2*, %vec*)* @_rust_main_wrap to i32), i32 %0, i32 %1, i32 ptrtoint (%0* @_rust_crate_map_toplevel to i32))\n-  ret i32 %result\n-}"}]}