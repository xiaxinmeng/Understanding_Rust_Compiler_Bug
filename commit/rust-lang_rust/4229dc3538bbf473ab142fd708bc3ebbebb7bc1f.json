{"sha": "4229dc3538bbf473ab142fd708bc3ebbebb7bc1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyMjlkYzM1MzhiYmY0NzNhYjE0MmZkNzA4YmMzZWJiZWJiN2JjMWY=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-08-11T19:18:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-11T19:18:49Z"}, "message": "Rollup merge of #63464 - Mark-Simulacrum:deref-instance, r=eddyb\n\nCopy ty::Instance instead of passing by reference\n\nty::Instance is small and Copy, we should not be adding additional\nindirection.\n\nFixes #63409.\n\nr? @eddyb", "tree": {"sha": "a0e1a3e4c92814f3487c1df5d13af152f1d496dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0e1a3e4c92814f3487c1df5d13af152f1d496dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4229dc3538bbf473ab142fd708bc3ebbebb7bc1f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdUGoZCRBK7hj4Ov3rIwAAdHIIAFQ1N1U79mARaIfqKPpj+M17\nibUue2K7rLITyEv5GhsHE19fO0wzIDTTthkeM7M4wcDjnqyk6AIBJybpblAzMjKs\nTVg0ywnIkpc+grohjBW9NyQGQ6Y72IcaJOvdstlJzQGDd51b2arWDCb/4ugZLihq\nnRsDf4hJyixl8FeTyfi28O5FT2gztMqMdq4rUaZbcN9FvxyV26xVRaWr1+kAjGuo\n6E+2w1pTVifZBWuhCMCrzDIt5cCEpF3x3MwdIX3GfsoWlT5D0bI+VQSLqaw+AlAI\ngYwhtSU6IfkHi2oXr8J6naLpt3IdA7ZefEX547jOXUNGg/H6MUDkB9kUuEAAjpQ=\n=3/uu\n-----END PGP SIGNATURE-----\n", "payload": "tree a0e1a3e4c92814f3487c1df5d13af152f1d496dc\nparent 86ceab47b1caff6928ba04dbcffd058f6cd37a29\nparent 43de341f19e702f6efa2fe30c07dd5099b1a8efb\nauthor Mark Rousskov <mark.simulacrum@gmail.com> 1565551129 -0400\ncommitter GitHub <noreply@github.com> 1565551129 -0400\n\nRollup merge of #63464 - Mark-Simulacrum:deref-instance, r=eddyb\n\nCopy ty::Instance instead of passing by reference\n\nty::Instance is small and Copy, we should not be adding additional\nindirection.\n\nFixes #63409.\n\nr? @eddyb\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4229dc3538bbf473ab142fd708bc3ebbebb7bc1f", "html_url": "https://github.com/rust-lang/rust/commit/4229dc3538bbf473ab142fd708bc3ebbebb7bc1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4229dc3538bbf473ab142fd708bc3ebbebb7bc1f/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86ceab47b1caff6928ba04dbcffd058f6cd37a29", "url": "https://api.github.com/repos/rust-lang/rust/commits/86ceab47b1caff6928ba04dbcffd058f6cd37a29", "html_url": "https://github.com/rust-lang/rust/commit/86ceab47b1caff6928ba04dbcffd058f6cd37a29"}, {"sha": "43de341f19e702f6efa2fe30c07dd5099b1a8efb", "url": "https://api.github.com/repos/rust-lang/rust/commits/43de341f19e702f6efa2fe30c07dd5099b1a8efb", "html_url": "https://github.com/rust-lang/rust/commit/43de341f19e702f6efa2fe30c07dd5099b1a8efb"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "19c753bc30436e822d3e2931dda6ea32cd5c5478", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4229dc3538bbf473ab142fd708bc3ebbebb7bc1f/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4229dc3538bbf473ab142fd708bc3ebbebb7bc1f/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=4229dc3538bbf473ab142fd708bc3ebbebb7bc1f", "patch": "@@ -2518,7 +2518,7 @@ where\n         + HasTyCtxt<'tcx>\n         + HasParamEnv<'tcx>,\n {\n-    fn of_instance(cx: &C, instance: &ty::Instance<'tcx>) -> Self;\n+    fn of_instance(cx: &C, instance: ty::Instance<'tcx>) -> Self;\n     fn new(cx: &C, sig: ty::FnSig<'tcx>, extra_args: &[Ty<'tcx>]) -> Self;\n     fn new_vtable(cx: &C, sig: ty::FnSig<'tcx>, extra_args: &[Ty<'tcx>]) -> Self;\n     fn new_internal(\n@@ -2538,7 +2538,7 @@ where\n         + HasTyCtxt<'tcx>\n         + HasParamEnv<'tcx>,\n {\n-    fn of_instance(cx: &C, instance: &ty::Instance<'tcx>) -> Self {\n+    fn of_instance(cx: &C, instance: ty::Instance<'tcx>) -> Self {\n         let sig = instance.fn_sig(cx.tcx());\n         let sig = cx\n             .tcx()"}, {"sha": "ce98979cc0c641a7b99071c112db9ac2dadde557", "filename": "src/librustc_codegen_ssa/mir/block.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4229dc3538bbf473ab142fd708bc3ebbebb7bc1f/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4229dc3538bbf473ab142fd708bc3ebbebb7bc1f/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs?ref=4229dc3538bbf473ab142fd708bc3ebbebb7bc1f", "patch": "@@ -337,7 +337,7 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n             }\n             _ => {\n                 (bx.get_fn(drop_fn),\n-                 FnType::of_instance(&bx, &drop_fn))\n+                 FnType::of_instance(&bx, drop_fn))\n             }\n         };\n         helper.do_call(self, &mut bx, fn_ty, drop_fn, args,\n@@ -435,7 +435,7 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n         // Obtain the panic entry point.\n         let def_id = common::langcall(bx.tcx(), Some(span), \"\", lang_item);\n         let instance = ty::Instance::mono(bx.tcx(), def_id);\n-        let fn_ty = FnType::of_instance(&bx, &instance);\n+        let fn_ty = FnType::of_instance(&bx, instance);\n         let llfn = bx.get_fn(instance);\n \n         // Codegen the actual panic invoke/call.\n@@ -552,7 +552,7 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n                 let def_id =\n                     common::langcall(bx.tcx(), Some(span), \"\", lang_items::PanicFnLangItem);\n                 let instance = ty::Instance::mono(bx.tcx(), def_id);\n-                let fn_ty = FnType::of_instance(&bx, &instance);\n+                let fn_ty = FnType::of_instance(&bx, instance);\n                 let llfn = bx.get_fn(instance);\n \n                 // Codegen the actual panic invoke/call."}, {"sha": "47289064f4d0d576a3a22e24c628d62edf6a2899", "filename": "src/librustc_mir/interpret/snapshot.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4229dc3538bbf473ab142fd708bc3ebbebb7bc1f/src%2Flibrustc_mir%2Finterpret%2Fsnapshot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4229dc3538bbf473ab142fd708bc3ebbebb7bc1f/src%2Flibrustc_mir%2Finterpret%2Fsnapshot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fsnapshot.rs?ref=4229dc3538bbf473ab142fd708bc3ebbebb7bc1f", "patch": "@@ -304,7 +304,7 @@ impl_stable_hash_for!(enum crate::interpret::eval_context::StackPopCleanup {\n \n #[derive(Eq, PartialEq)]\n struct FrameSnapshot<'a, 'tcx> {\n-    instance: &'a ty::Instance<'tcx>,\n+    instance: ty::Instance<'tcx>,\n     span: Span,\n     return_to_block: &'a StackPopCleanup,\n     return_place: Option<Place<(), AllocIdSnapshot<'a>>>,\n@@ -344,7 +344,7 @@ impl<'a, 'mir, 'tcx, Ctx> Snapshot<'a, Ctx> for &'a Frame<'mir, 'tcx>\n         } = self;\n \n         FrameSnapshot {\n-            instance,\n+            instance: *instance,\n             span: *span,\n             return_to_block,\n             block,"}]}