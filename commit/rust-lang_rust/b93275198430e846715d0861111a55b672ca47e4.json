{"sha": "b93275198430e846715d0861111a55b672ca47e4", "node_id": "C_kwDOAAsO6NoAKGI5MzI3NTE5ODQzMGU4NDY3MTVkMDg2MTExMWE1NWI2NzJjYTQ3ZTQ", "commit": {"author": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2023-03-25T20:47:56Z"}, "committer": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2023-03-25T23:33:19Z"}, "message": "Ignore the unwrap_unchecked test on wasm32-unknown-unknown", "tree": {"sha": "c0e58ae19175ad7d0a27e129ddd09a0810195c78", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0e58ae19175ad7d0a27e129ddd09a0810195c78"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b93275198430e846715d0861111a55b672ca47e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b93275198430e846715d0861111a55b672ca47e4", "html_url": "https://github.com/rust-lang/rust/commit/b93275198430e846715d0861111a55b672ca47e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b93275198430e846715d0861111a55b672ca47e4/comments", "author": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88e78aba820c399fa1facc97604ef10497d3c4ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/88e78aba820c399fa1facc97604ef10497d3c4ca", "html_url": "https://github.com/rust-lang/rust/commit/88e78aba820c399fa1facc97604ef10497d3c4ca"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "5856f1479414cb979b662d07c2378fe026240b88", "filename": "tests/mir-opt/inline/unwrap_unchecked.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b93275198430e846715d0861111a55b672ca47e4/tests%2Fmir-opt%2Finline%2Funwrap_unchecked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b93275198430e846715d0861111a55b672ca47e4/tests%2Fmir-opt%2Finline%2Funwrap_unchecked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Finline%2Funwrap_unchecked.rs?ref=b93275198430e846715d0861111a55b672ca47e4", "patch": "@@ -1,5 +1,6 @@\n #![crate_type = \"lib\"]\n \n+// ignore-wasm32-bare compiled with panic=abort by default\n // ignore-debug: the debug assertions prevent the inlining we are testing for\n // compile-flags: -Zmir-opt-level=2 -Zinline-mir\n "}, {"sha": "543ddcfc44c1d7cc7d53fee785a91a84d50fcc69", "filename": "tests/mir-opt/inline/unwrap_unchecked.unwrap_unchecked.Inline.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b93275198430e846715d0861111a55b672ca47e4/tests%2Fmir-opt%2Finline%2Funwrap_unchecked.unwrap_unchecked.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b93275198430e846715d0861111a55b672ca47e4/tests%2Fmir-opt%2Finline%2Funwrap_unchecked.unwrap_unchecked.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Finline%2Funwrap_unchecked.unwrap_unchecked.Inline.diff?ref=b93275198430e846715d0861111a55b672ca47e4", "patch": "@@ -5,7 +5,7 @@\n       debug slf => _1;                     // in scope 0 at $DIR/unwrap_unchecked.rs:+0:35: +0:38\n       let mut _0: T;                       // return place in scope 0 at $DIR/unwrap_unchecked.rs:+0:54: +0:55\n       let mut _2: std::option::Option<T>;  // in scope 0 at $DIR/unwrap_unchecked.rs:+1:5: +1:8\n-+     scope 1 (inlined #[track_caller] Option::<T>::unwrap_unchecked) { // at $DIR/unwrap_unchecked.rs:9:9: 9:27\n++     scope 1 (inlined #[track_caller] Option::<T>::unwrap_unchecked) { // at $DIR/unwrap_unchecked.rs:10:9: 10:27\n +         debug self => _2;                // in scope 1 at $SRC_DIR/core/src/option.rs:LL:COL\n +         let mut _3: &std::option::Option<T>; // in scope 1 at $SRC_DIR/core/src/option.rs:LL:COL\n +         let mut _4: isize;               // in scope 1 at $SRC_DIR/core/src/option.rs:LL:COL\n@@ -30,7 +30,7 @@\n           _2 = move _1;                    // scope 0 at $DIR/unwrap_unchecked.rs:+1:5: +1:8\n -         _0 = Option::<T>::unwrap_unchecked(move _2) -> [return: bb1, unwind: bb2]; // scope 0 at $DIR/unwrap_unchecked.rs:+1:5: +1:27\n -                                          // mir::Constant\n--                                          // + span: $DIR/unwrap_unchecked.rs:9:9: 9:25\n+-                                          // + span: $DIR/unwrap_unchecked.rs:10:9: 10:25\n -                                          // + literal: Const { ty: unsafe fn(Option<T>) -> T {Option::<T>::unwrap_unchecked}, val: Value(<ZST>) }\n +         StorageLive(_3);                 // scope 0 at $DIR/unwrap_unchecked.rs:+1:9: +1:27\n +         _4 = discriminant(_2);           // scope 1 at $SRC_DIR/core/src/option.rs:LL:COL"}, {"sha": "c5e2469fc27c60c3ade8b7d15ac1f012951a0021", "filename": "tests/mir-opt/inline/unwrap_unchecked.unwrap_unchecked.PreCodegen.after.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b93275198430e846715d0861111a55b672ca47e4/tests%2Fmir-opt%2Finline%2Funwrap_unchecked.unwrap_unchecked.PreCodegen.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b93275198430e846715d0861111a55b672ca47e4/tests%2Fmir-opt%2Finline%2Funwrap_unchecked.unwrap_unchecked.PreCodegen.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Finline%2Funwrap_unchecked.unwrap_unchecked.PreCodegen.after.mir?ref=b93275198430e846715d0861111a55b672ca47e4", "patch": "@@ -3,7 +3,7 @@\n fn unwrap_unchecked(_1: Option<T>) -> T {\n     debug slf => _1;                     // in scope 0 at $DIR/unwrap_unchecked.rs:+0:35: +0:38\n     let mut _0: T;                       // return place in scope 0 at $DIR/unwrap_unchecked.rs:+0:54: +0:55\n-    scope 1 (inlined #[track_caller] Option::<T>::unwrap_unchecked) { // at $DIR/unwrap_unchecked.rs:9:9: 9:27\n+    scope 1 (inlined #[track_caller] Option::<T>::unwrap_unchecked) { // at $DIR/unwrap_unchecked.rs:10:9: 10:27\n         debug self => _1;                // in scope 1 at $SRC_DIR/core/src/option.rs:LL:COL\n         let mut _2: &std::option::Option<T>; // in scope 1 at $SRC_DIR/core/src/option.rs:LL:COL\n         let mut _3: isize;               // in scope 1 at $SRC_DIR/core/src/option.rs:LL:COL"}]}