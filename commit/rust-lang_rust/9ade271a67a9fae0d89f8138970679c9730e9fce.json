{"sha": "9ade271a67a9fae0d89f8138970679c9730e9fce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhZGUyNzFhNjdhOWZhZTBkODlmODEzODk3MDY3OWM5NzMwZTlmY2U=", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2019-05-21T11:04:54Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2019-05-21T11:19:08Z"}, "message": "Use ThemeColor and add support for light themes", "tree": {"sha": "7a3cc5a13d3d71d0d247f5d0b86ecdabfc9f8f35", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a3cc5a13d3d71d0d247f5d0b86ecdabfc9f8f35"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ade271a67a9fae0d89f8138970679c9730e9fce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ade271a67a9fae0d89f8138970679c9730e9fce", "html_url": "https://github.com/rust-lang/rust/commit/9ade271a67a9fae0d89f8138970679c9730e9fce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ade271a67a9fae0d89f8138970679c9730e9fce/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eabfe3902f363ee03bef8421580c6fe8e3730899", "url": "https://api.github.com/repos/rust-lang/rust/commits/eabfe3902f363ee03bef8421580c6fe8e3730899", "html_url": "https://github.com/rust-lang/rust/commit/eabfe3902f363ee03bef8421580c6fe8e3730899"}], "stats": {"total": 166, "additions": 152, "deletions": 14}, "files": [{"sha": "ab69a4374382213d78fff930225207dba781bb9b", "filename": "crates/ra_ide_api/src/syntax_highlighting.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9ade271a67a9fae0d89f8138970679c9730e9fce/crates%2Fra_ide_api%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ade271a67a9fae0d89f8138970679c9730e9fce/crates%2Fra_ide_api%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsyntax_highlighting.rs?ref=9ade271a67a9fae0d89f8138970679c9730e9fce", "patch": "@@ -1,6 +1,6 @@\n use rustc_hash::FxHashSet;\n \n-use ra_syntax::{ast, AstNode, TextRange, Direction, SyntaxKind::*, SyntaxElement, T};\n+use ra_syntax::{ast, AstNode, TextRange, Direction, SyntaxKind, SyntaxKind::*, SyntaxElement, T};\n use ra_db::SourceDatabase;\n \n use crate::{FileId, db::RootDatabase};\n@@ -11,6 +11,14 @@ pub struct HighlightedRange {\n     pub tag: &'static str,\n }\n \n+fn is_control_keyword(kind: SyntaxKind) -> bool {\n+    match kind {\n+        FOR_KW | LOOP_KW | WHILE_KW | CONTINUE_KW | BREAK_KW | IF_KW | ELSE_KW | MATCH_KW\n+        | RETURN_KW => true,\n+        _ => false,\n+    }\n+}\n+\n pub(crate) fn highlight(db: &RootDatabase, file_id: FileId) -> Vec<HighlightedRange> {\n     let source_file = db.parse(file_id);\n \n@@ -29,6 +37,8 @@ pub(crate) fn highlight(db: &RootDatabase, file_id: FileId) -> Vec<HighlightedRa\n             NAME => \"function\",\n             INT_NUMBER | FLOAT_NUMBER | CHAR | BYTE => \"literal\",\n             LIFETIME => \"parameter\",\n+            UNSAFE_KW => \"unsafe\",\n+            k if is_control_keyword(k) => \"control\",\n             k if k.is_keyword() => \"keyword\",\n             _ => {\n                 if let Some(macro_call) = node.as_node().and_then(ast::MacroCall::cast) {"}, {"sha": "c72037da91032192a2fdce9ebf82e48b670561a5", "filename": "editors/code/package.json", "status": "modified", "additions": 119, "deletions": 0, "changes": 119, "blob_url": "https://github.com/rust-lang/rust/blob/9ade271a67a9fae0d89f8138970679c9730e9fce/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/9ade271a67a9fae0d89f8138970679c9730e9fce/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=9ade271a67a9fae0d89f8138970679c9730e9fce", "patch": "@@ -268,6 +268,125 @@\n                 },\n                 \"pattern\": \"$rustc\"\n             }\n+        ],\n+        \"colors\": [\n+            {\n+                \"id\": \"ralsp.background\",\n+                \"description\": \"Background color\",\n+                \"defaults\": {\n+                    \"dark\": \"#3F3F3F\",\n+                    \"light\": \"#001080\",\n+                    \"highContrast\": \"#000000\"\n+                }\n+            },\n+            {\n+                \"id\": \"ralsp.comment\",\n+                \"description\": \"Color for comments\",\n+                \"defaults\": {\n+                    \"dark\": \"#7F9F7F\",\n+                    \"light\": \"#008000\",\n+                    \"highContrast\": \"#7CA668\"\n+                }\n+            },\n+            {\n+                \"id\": \"ralsp.string\",\n+                \"description\": \"Color for strings\",\n+                \"defaults\": {\n+                    \"dark\": \"#CC9393\",\n+                    \"light\": \"#A31515\",\n+                    \"highContrast\": \"#CE9178\"\n+                }\n+            },\n+            {\n+                \"id\": \"ralsp.unsafe\",\n+                \"description\": \"Color for unsafe\",\n+                \"defaults\": {\n+                    \"dark\": \"#FF3030\",\n+                    \"light\": \"#FF1010\",\n+                    \"highContrast\": \"#FF1010\"\n+                }\n+            },\n+            {\n+                \"id\": \"ralsp.keyword\",\n+                \"description\": \"Color for keywords\",\n+                \"defaults\": {\n+                    \"dark\": \"#F0DFAF\",\n+                    \"light\": \"#0000FF\",\n+                    \"highContrast\": \"#569CD6\"\n+                }\n+            },\n+            {\n+                \"id\": \"ralsp.control\",\n+                \"description\": \"Color for control keywords\",\n+                \"defaults\": {\n+                    \"dark\": \"#CF20FB\",\n+                    \"light\": \"#AF00DB\",\n+                    \"highContrast\": \"#C586C0\"\n+                }\n+            },\n+            {\n+                \"id\": \"ralsp.function\",\n+                \"description\": \"Color for functions\",\n+                \"defaults\": {\n+                    \"dark\": \"#93E0E3\",\n+                    \"light\": \"#795E26\",\n+                    \"highContrast\": \"#DCDCAA\"\n+                }\n+            },\n+            {\n+                \"id\": \"ralsp.parameter\",\n+                \"description\": \"Color for parameters\",\n+                \"defaults\": {\n+                    \"dark\": \"#94BFF3\",\n+                    \"light\": \"#001080\",\n+                    \"highContrast\": \"#9CDCFE\"\n+                }\n+            },\n+            {\n+                \"id\": \"ralsp.builtin\",\n+                \"description\": \"Color for builtins\",\n+                \"defaults\": {\n+                    \"dark\": \"#DD6718\",\n+                    \"light\": \"#DD6718\",\n+                    \"highContrast\": \"#DD6718\"\n+                }\n+            },\n+            {\n+                \"id\": \"ralsp.text\",\n+                \"description\": \"Color for text\",\n+                \"defaults\": {\n+                    \"dark\": \"#DCDCCC\",\n+                    \"light\": \"#000000\",\n+                    \"highContrast\": \"#FFFFFF\"\n+                }\n+            },\n+            {\n+                \"id\": \"ralsp.attribute\",\n+                \"description\": \"Color for attributes\",\n+                \"defaults\": {\n+                    \"dark\": \"#BFEBBF\",\n+                    \"light\": \"#1F4B1F\",\n+                    \"highContrast\": \"#108010\"\n+                }\n+            },\n+            {\n+                \"id\": \"ralsp.literal\",\n+                \"description\": \"Color for literals\",\n+                \"defaults\": {\n+                    \"dark\": \"#DFAF8F\",\n+                    \"light\": \"#09885A\",\n+                    \"highContrast\": \"#B5CEA8\"\n+                }\n+            },\n+            {\n+                \"id\": \"ralsp.macro\",\n+                \"description\": \"Color for DFAF8F\",\n+                \"defaults\": {\n+                    \"dark\": \"#BFEBBF\",\n+                    \"light\": \"#DD6718\",\n+                    \"highContrast\": \"#ED7718\"\n+                }\n+            }\n         ]\n     }\n }"}, {"sha": "432f40ff40d385d5f074a640bbf76a1e171c183e", "filename": "editors/code/src/highlighting.ts", "status": "modified", "additions": 22, "deletions": 13, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/9ade271a67a9fae0d89f8138970679c9730e9fce/editors%2Fcode%2Fsrc%2Fhighlighting.ts", "raw_url": "https://github.com/rust-lang/rust/raw/9ade271a67a9fae0d89f8138970679c9730e9fce/editors%2Fcode%2Fsrc%2Fhighlighting.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fhighlighting.ts?ref=9ade271a67a9fae0d89f8138970679c9730e9fce", "patch": "@@ -13,23 +13,32 @@ export class Highlighter {\n         string,\n         vscode.TextEditorDecorationType\n     > {\n-        const decor = (color: string) =>\n-            vscode.window.createTextEditorDecorationType({ color });\n+        const colorContrib = (\n+            tag: string\n+        ): [string, vscode.TextEditorDecorationType] => {\n+            const color = new vscode.ThemeColor('ralsp.' + tag);\n+            const decor = vscode.window.createTextEditorDecorationType({\n+                color\n+            });\n+            return [tag, decor];\n+        };\n \n         const decorations: Iterable<\n             [string, vscode.TextEditorDecorationType]\n         > = [\n-            ['background', decor('#3F3F3F')],\n-            ['comment', decor('#7F9F7F')],\n-            ['string', decor('#CC9393')],\n-            ['keyword', decor('#F0DFAF')],\n-            ['function', decor('#93E0E3')],\n-            ['parameter', decor('#94BFF3')],\n-            ['builtin', decor('#DD6718')],\n-            ['text', decor('#DCDCCC')],\n-            ['attribute', decor('#BFEBBF')],\n-            ['literal', decor('#DFAF8F')],\n-            ['macro', decor('#DFAF8F')]\n+            colorContrib('background'),\n+            colorContrib('comment'),\n+            colorContrib('string'),\n+            colorContrib('unsafe'),\n+            colorContrib('keyword'),\n+            colorContrib('control'),\n+            colorContrib('function'),\n+            colorContrib('parameter'),\n+            colorContrib('builtin'),\n+            colorContrib('text'),\n+            colorContrib('attribute'),\n+            colorContrib('literal'),\n+            colorContrib('macro')\n         ];\n \n         return new Map<string, vscode.TextEditorDecorationType>(decorations);"}]}