{"sha": "e4200512ff976b9c1afff8069ae66ace52dfbcb8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0MjAwNTEyZmY5NzZiOWMxYWZmZjgwNjlhZTY2YWNlNTJkZmJjYjg=", "commit": {"author": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2020-09-27T09:54:50Z"}, "committer": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2020-09-27T09:54:50Z"}, "message": "Clean up trivial if let", "tree": {"sha": "8fb2f322097b7388bb807549c5ca1173d497cf6e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8fb2f322097b7388bb807549c5ca1173d497cf6e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4200512ff976b9c1afff8069ae66ace52dfbcb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4200512ff976b9c1afff8069ae66ace52dfbcb8", "html_url": "https://github.com/rust-lang/rust/commit/e4200512ff976b9c1afff8069ae66ace52dfbcb8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4200512ff976b9c1afff8069ae66ace52dfbcb8/comments", "author": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b9e8864032a3bfefa6f69c33fd99e0383a414af", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b9e8864032a3bfefa6f69c33fd99e0383a414af", "html_url": "https://github.com/rust-lang/rust/commit/5b9e8864032a3bfefa6f69c33fd99e0383a414af"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "3e28468171b2e04d0e65e6c32b50633f42d5bb2f", "filename": "compiler/rustc_span/src/hygiene.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4200512ff976b9c1afff8069ae66ace52dfbcb8/compiler%2Frustc_span%2Fsrc%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4200512ff976b9c1afff8069ae66ace52dfbcb8/compiler%2Frustc_span%2Fsrc%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fhygiene.rs?ref=e4200512ff976b9c1afff8069ae66ace52dfbcb8", "patch": "@@ -759,7 +759,7 @@ impl ExpnData {\n \n     #[inline]\n     pub fn is_root(&self) -> bool {\n-        if let ExpnKind::Root = self.kind { true } else { false }\n+        matches!(self.kind, ExpnKind::Root)\n     }\n }\n "}]}