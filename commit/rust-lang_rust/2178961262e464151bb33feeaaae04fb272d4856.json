{"sha": "2178961262e464151bb33feeaaae04fb272d4856", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxNzg5NjEyNjJlNDY0MTUxYmIzM2ZlZWFhYWUwNGZiMjcyZDQ4NTY=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-08T10:35:15Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-08T10:35:15Z"}, "message": "improve the docs of ConstantId", "tree": {"sha": "e085483031e14457604d5c357de6be5c3625f632", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e085483031e14457604d5c357de6be5c3625f632"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2178961262e464151bb33feeaaae04fb272d4856", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXV/TjAAoJEFbW7qD8Z6xGEvYP/1fqU/5xvaDhtNLZjACqQaQc\n4YRskOSIwWhqO8eDKOX82iArmQbpQQ3waCeRmQrFoIocBofX5eFJTc9Lt6XbdbOI\nbnZ5X4k9aZXof8JtvtyVMoa9X7qDQ90W2wN9qvsqab3IPoRhNbt+BJP+qiF1S0dR\n1FdSxDXnzwUz9ZLUcOj7qUxRzvPFA7Pa13NAE7ul0ytkzo/n3L3kbXrSqSZLCvat\nGckegQqSKSls6UfgETCf4SQ1l1mUYbAh66N5a05uw/41pLF5FPvotxaIbySHUfR0\nhJ1/uSSjP0Q9RWxQumUxOixX9ZYeWvIeVGCxeb+c/4+Z/6p/YG/T30ycJXyqbIKF\np7077S+ciLKdwdZgQwffNelrNL5Oa1bZyMNkDAXtk41SSrpg7mgmB9DLQOJI6PqY\ncW7L6mJrpYnunNr4+sUXwFFls9nKHifWDnCrYKBMXxZMHu2hunhije5rs5o2rIgH\nLsUmdX5Ksh1q1kvcTbeImV1YWDsWHL3+G0t68cdvZdbr60bQhmza8WFUpmu+DuMx\nVYnB6Y/uNK0xYjp7bFCYnSj3nwGzK25dXxEWCWDIonEkx633QnmyWfN5ztmAHdxQ\nXgBDjPwf3BwfJTRxGbRvLfTQcV4IcM1BosMuIMYtHNSfP3OeFTP79rnWeH2wnoQM\nDGtIjM30mprbRaA14Otz\n=g8bZ\n-----END PGP SIGNATURE-----", "payload": "tree e085483031e14457604d5c357de6be5c3625f632\nparent 240f0c0dd64f0091f98d1c6dd543d306d60ee29c\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1465382115 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1465382115 +0200\n\nimprove the docs of ConstantId"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2178961262e464151bb33feeaaae04fb272d4856", "html_url": "https://github.com/rust-lang/rust/commit/2178961262e464151bb33feeaaae04fb272d4856", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2178961262e464151bb33feeaaae04fb272d4856/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "240f0c0dd64f0091f98d1c6dd543d306d60ee29c", "url": "https://api.github.com/repos/rust-lang/rust/commits/240f0c0dd64f0091f98d1c6dd543d306d60ee29c", "html_url": "https://github.com/rust-lang/rust/commit/240f0c0dd64f0091f98d1c6dd543d306d60ee29c"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "1942727e47694613f79269b889eb0c4efa6147e0", "filename": "src/interpreter/mod.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2178961262e464151bb33feeaaae04fb272d4856/src%2Finterpreter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2178961262e464151bb33feeaaae04fb272d4856/src%2Finterpreter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fmod.rs?ref=2178961262e464151bb33feeaaae04fb272d4856", "patch": "@@ -129,16 +129,23 @@ enum TerminatorTarget {\n }\n \n #[derive(Clone, Debug, Eq, PartialEq, Hash)]\n+/// Uniquely identifies a specific constant or static\n struct ConstantId<'tcx> {\n+    /// the def id of the constant/static or in case of promoteds, the def id of the function they belong to\n     def_id: DefId,\n+    /// In case of statics and constants this is `Substs::empty()`, so only promoteds and associated\n+    /// constants actually have something useful here. We could special case statics and constants,\n+    /// but that would only require more branching when working with constants, and not bring any\n+    /// real benefits.\n     substs: &'tcx Substs<'tcx>,\n     kind: ConstantKind,\n }\n \n #[derive(Clone, Debug, Eq, PartialEq, Hash)]\n enum ConstantKind {\n     Promoted(usize),\n-    Static,\n+    /// Statics, constants and associated constants\n+    Global,\n }\n \n impl<'a, 'tcx> GlobalEvalContext<'a, 'tcx> {\n@@ -1199,7 +1206,7 @@ impl<'a, 'b, 'mir, 'tcx> FnEvalContext<'a, 'b, 'mir, 'tcx> {\n                             let cid = ConstantId {\n                                 def_id: def_id,\n                                 substs: substs,\n-                                kind: ConstantKind::Static,\n+                                kind: ConstantKind::Global,\n                             };\n                             Ok(*self.statics.get(&cid).expect(\"static should have been cached (rvalue)\"))\n                         }\n@@ -1231,7 +1238,7 @@ impl<'a, 'b, 'mir, 'tcx> FnEvalContext<'a, 'b, 'mir, 'tcx> {\n                 let cid = ConstantId {\n                     def_id: def_id,\n                     substs: substs,\n-                    kind: ConstantKind::Static,\n+                    kind: ConstantKind::Global,\n                 };\n                 *self.gecx.statics.get(&cid).expect(\"static should have been cached (lvalue)\")\n             },"}, {"sha": "f9bf5c2d3b85314cdfaaa1cf5b01c454afdc5bef", "filename": "src/interpreter/stepper.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2178961262e464151bb33feeaaae04fb272d4856/src%2Finterpreter%2Fstepper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2178961262e464151bb33feeaaae04fb272d4856/src%2Finterpreter%2Fstepper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fstepper.rs?ref=2178961262e464151bb33feeaaae04fb272d4856", "patch": "@@ -145,7 +145,7 @@ impl<'a, 'b, 'mir, 'tcx> ConstantExtractor<'a, 'b, 'mir, 'tcx> {\n         let cid = ConstantId {\n             def_id: def_id,\n             substs: substs,\n-            kind: ConstantKind::Static,\n+            kind: ConstantKind::Global,\n         };\n         if self.gecx.statics.contains_key(&cid) {\n             return;"}]}