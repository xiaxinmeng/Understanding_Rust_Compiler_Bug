{"sha": "a78271b8611d7ab7709976dfb94ae36b668ac42b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3ODI3MWI4NjExZDdhYjc3MDk5NzZkZmI5NGFlMzZiNjY4YWM0MmI=", "commit": {"author": {"name": "Pierre-Andre Gagnon", "email": "pagagnon@gmail.com", "date": "2021-02-18T22:32:55Z"}, "committer": {"name": "Pierre-Andre Gagnon", "email": "pagagnon@gmail.com", "date": "2021-02-18T22:32:55Z"}, "message": "Changed fn body suggestion msg", "tree": {"sha": "b808f52c585bf8f5c5e87f3aa8c9ff040b1b1762", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b808f52c585bf8f5c5e87f3aa8c9ff040b1b1762"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a78271b8611d7ab7709976dfb94ae36b668ac42b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a78271b8611d7ab7709976dfb94ae36b668ac42b", "html_url": "https://github.com/rust-lang/rust/commit/a78271b8611d7ab7709976dfb94ae36b668ac42b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a78271b8611d7ab7709976dfb94ae36b668ac42b/comments", "author": {"login": "pag4k", "id": 32080686, "node_id": "MDQ6VXNlcjMyMDgwNjg2", "avatar_url": "https://avatars.githubusercontent.com/u/32080686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pag4k", "html_url": "https://github.com/pag4k", "followers_url": "https://api.github.com/users/pag4k/followers", "following_url": "https://api.github.com/users/pag4k/following{/other_user}", "gists_url": "https://api.github.com/users/pag4k/gists{/gist_id}", "starred_url": "https://api.github.com/users/pag4k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pag4k/subscriptions", "organizations_url": "https://api.github.com/users/pag4k/orgs", "repos_url": "https://api.github.com/users/pag4k/repos", "events_url": "https://api.github.com/users/pag4k/events{/privacy}", "received_events_url": "https://api.github.com/users/pag4k/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pag4k", "id": 32080686, "node_id": "MDQ6VXNlcjMyMDgwNjg2", "avatar_url": "https://avatars.githubusercontent.com/u/32080686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pag4k", "html_url": "https://github.com/pag4k", "followers_url": "https://api.github.com/users/pag4k/followers", "following_url": "https://api.github.com/users/pag4k/following{/other_user}", "gists_url": "https://api.github.com/users/pag4k/gists{/gist_id}", "starred_url": "https://api.github.com/users/pag4k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pag4k/subscriptions", "organizations_url": "https://api.github.com/users/pag4k/orgs", "repos_url": "https://api.github.com/users/pag4k/repos", "events_url": "https://api.github.com/users/pag4k/events{/privacy}", "received_events_url": "https://api.github.com/users/pag4k/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6165cccf7e43cf4ca2234e84dcf7060c7d89ef45", "url": "https://api.github.com/repos/rust-lang/rust/commits/6165cccf7e43cf4ca2234e84dcf7060c7d89ef45", "html_url": "https://github.com/rust-lang/rust/commit/6165cccf7e43cf4ca2234e84dcf7060c7d89ef45"}], "stats": {"total": 46, "additions": 31, "deletions": 15}, "files": [{"sha": "607585125a4c37dca29dbd04e92acc631c2ca9b1", "filename": "clippy_lints/src/unnecessary_wraps.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a78271b8611d7ab7709976dfb94ae36b668ac42b/clippy_lints%2Fsrc%2Funnecessary_wraps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a78271b8611d7ab7709976dfb94ae36b668ac42b/clippy_lints%2Fsrc%2Funnecessary_wraps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funnecessary_wraps.rs?ref=a78271b8611d7ab7709976dfb94ae36b668ac42b", "patch": "@@ -131,11 +131,12 @@ impl<'tcx> LateLintPass<'tcx> for UnnecessaryWraps {\n         });\n \n         if can_sugg && !suggs.is_empty() {\n-            let (lint_msg, return_type_suggestion_msg, return_type_suggestion) = if inner_type.is_unit() {\n+            let (lint_msg, return_type_sugg_msg, return_type_sugg, body_sugg_msg) = if inner_type.is_unit() {\n                 (\n                     \"this function's return value is unnecessary\".to_string(),\n                     \"remove the return type...\".to_string(),\n                     snippet(cx, fn_decl.output.span(), \"..\").to_string(),\n+                    \"...and then remove returned values\",\n                 )\n             } else {\n                 (\n@@ -145,21 +146,18 @@ impl<'tcx> LateLintPass<'tcx> for UnnecessaryWraps {\n                     ),\n                     format!(\"remove `{}` from the return type...\", return_type_label),\n                     inner_type.to_string(),\n+                    \"...and then change returning expressions\",\n                 )\n             };\n \n             span_lint_and_then(cx, UNNECESSARY_WRAPS, span, lint_msg.as_str(), |diag| {\n                 diag.span_suggestion(\n                     fn_decl.output.span(),\n-                    return_type_suggestion_msg.as_str(),\n-                    return_type_suggestion,\n-                    Applicability::MaybeIncorrect,\n-                );\n-                diag.multipart_suggestion(\n-                    \"...and then change the returning expressions\",\n-                    suggs,\n+                    return_type_sugg_msg.as_str(),\n+                    return_type_sugg,\n                     Applicability::MaybeIncorrect,\n                 );\n+                diag.multipart_suggestion(body_sugg_msg, suggs, Applicability::MaybeIncorrect);\n             });\n         }\n     }"}, {"sha": "a510263e67da19a2256975ffe18767606dffae0c", "filename": "tests/ui/unnecessary_wraps.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a78271b8611d7ab7709976dfb94ae36b668ac42b/tests%2Fui%2Funnecessary_wraps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a78271b8611d7ab7709976dfb94ae36b668ac42b/tests%2Fui%2Funnecessary_wraps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_wraps.rs?ref=a78271b8611d7ab7709976dfb94ae36b668ac42b", "patch": "@@ -141,6 +141,24 @@ fn issue_6640_2(a: bool, b: bool) -> Result<(), i32> {\n     }\n }\n \n+// should not be linted\n+fn issue_6640_3() -> Option<()> {\n+    if true {\n+        Some(())\n+    } else {\n+        None\n+    }\n+}\n+\n+// should not be linted\n+fn issue_6640_4() -> Result<(), ()> {\n+    if true {\n+        Ok(())\n+    } else {\n+        Err(())\n+    }\n+}\n+\n fn main() {\n     // method calls are not linted\n     func1(true, true);"}, {"sha": "9a861c61a4679bd4fc7f46f83dca2a84a895af55", "filename": "tests/ui/unnecessary_wraps.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a78271b8611d7ab7709976dfb94ae36b668ac42b/tests%2Fui%2Funnecessary_wraps.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a78271b8611d7ab7709976dfb94ae36b668ac42b/tests%2Fui%2Funnecessary_wraps.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_wraps.stderr?ref=a78271b8611d7ab7709976dfb94ae36b668ac42b", "patch": "@@ -15,7 +15,7 @@ help: remove `Option` from the return type...\n    |\n LL | fn func1(a: bool, b: bool) -> i32 {\n    |                               ^^^\n-help: ...and then change the returning expressions\n+help: ...and then change returning expressions\n    |\n LL |         return 42;\n LL |     }\n@@ -41,7 +41,7 @@ help: remove `Option` from the return type...\n    |\n LL | fn func2(a: bool, b: bool) -> i32 {\n    |                               ^^^\n-help: ...and then change the returning expressions\n+help: ...and then change returning expressions\n    |\n LL |         return 10;\n LL |     }\n@@ -63,7 +63,7 @@ help: remove `Option` from the return type...\n    |\n LL | fn func5() -> i32 {\n    |               ^^^\n-help: ...and then change the returning expressions\n+help: ...and then change returning expressions\n    |\n LL |     1\n    |\n@@ -80,7 +80,7 @@ help: remove `Result` from the return type...\n    |\n LL | fn func7() -> i32 {\n    |               ^^^\n-help: ...and then change the returning expressions\n+help: ...and then change returning expressions\n    |\n LL |     1\n    |\n@@ -97,7 +97,7 @@ help: remove `Option` from the return type...\n    |\n LL |     fn func12() -> i32 {\n    |                    ^^^\n-help: ...and then change the returning expressions\n+help: ...and then change returning expressions\n    |\n LL |         1\n    |\n@@ -118,7 +118,7 @@ help: remove the return type...\n    |\n LL | fn issue_6640_1(a: bool, b: bool) -> Option<()> {\n    |                                      ^^^^^^^^^^\n-help: ...and then change the returning expressions\n+help: ...and then remove returned values\n    |\n LL |         return ;\n LL |     }\n@@ -144,7 +144,7 @@ help: remove the return type...\n    |\n LL | fn issue_6640_2(a: bool, b: bool) -> Result<(), i32> {\n    |                                      ^^^^^^^^^^^^^^^\n-help: ...and then change the returning expressions\n+help: ...and then remove returned values\n    |\n LL |         return ;\n LL |     }"}]}