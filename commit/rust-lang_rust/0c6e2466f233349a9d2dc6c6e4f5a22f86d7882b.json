{"sha": "0c6e2466f233349a9d2dc6c6e4f5a22f86d7882b", "node_id": "C_kwDOAAsO6NoAKDBjNmUyNDY2ZjIzMzM0OWE5ZDJkYzZjNmU0ZjVhMjJmODZkNzg4MmI", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-03-30T10:13:31Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-04-10T11:42:47Z"}, "message": "Do not access HIR to compute symbol_name.", "tree": {"sha": "557ee1b4606a729150d1f165889fc05ed9ce2666", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/557ee1b4606a729150d1f165889fc05ed9ce2666"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c6e2466f233349a9d2dc6c6e4f5a22f86d7882b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c6e2466f233349a9d2dc6c6e4f5a22f86d7882b", "html_url": "https://github.com/rust-lang/rust/commit/0c6e2466f233349a9d2dc6c6e4f5a22f86d7882b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c6e2466f233349a9d2dc6c6e4f5a22f86d7882b/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69d818333755d4b836a28a4498f2caad71c2d014", "url": "https://api.github.com/repos/rust-lang/rust/commits/69d818333755d4b836a28a4498f2caad71c2d014", "html_url": "https://github.com/rust-lang/rust/commit/69d818333755d4b836a28a4498f2caad71c2d014"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "0ff0267d0ce768ad03807b72fd32b79922790f58", "filename": "compiler/rustc_symbol_mangling/src/lib.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0c6e2466f233349a9d2dc6c6e4f5a22f86d7882b/compiler%2Frustc_symbol_mangling%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c6e2466f233349a9d2dc6c6e4f5a22f86d7882b/compiler%2Frustc_symbol_mangling%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2Fsrc%2Flib.rs?ref=0c6e2466f233349a9d2dc6c6e4f5a22f86d7882b", "patch": "@@ -97,7 +97,6 @@\n extern crate rustc_middle;\n \n use rustc_hir::def_id::{CrateNum, LOCAL_CRATE};\n-use rustc_hir::Node;\n use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n use rustc_middle::mir::mono::{InstantiationMode, MonoItem};\n use rustc_middle::ty::query::Providers;\n@@ -168,17 +167,14 @@ fn compute_symbol_name<'tcx>(\n \n     debug!(\"symbol_name(def_id={:?}, substs={:?})\", def_id, substs);\n \n-    // FIXME(eddyb) Precompute a custom symbol name based on attributes.\n-    let is_foreign = if let Some(def_id) = def_id.as_local() {\n+    if let Some(def_id) = def_id.as_local() {\n         if tcx.proc_macro_decls_static(()) == Some(def_id) {\n             let stable_crate_id = tcx.sess.local_stable_crate_id();\n             return tcx.sess.generate_proc_macro_decls_symbol(stable_crate_id);\n         }\n-        matches!(tcx.hir().get_by_def_id(def_id), Node::ForeignItem(_))\n-    } else {\n-        tcx.is_foreign_item(def_id)\n-    };\n+    }\n \n+    // FIXME(eddyb) Precompute a custom symbol name based on attributes.\n     let attrs = tcx.codegen_fn_attrs(def_id);\n \n     // Foreign items by default use no mangling for their symbol name. There's a\n@@ -197,7 +193,7 @@ fn compute_symbol_name<'tcx>(\n     //   show up in the `wasm-import-name` custom attribute in LLVM IR.\n     //\n     // [1]: https://bugs.llvm.org/show_bug.cgi?id=44316\n-    if is_foreign\n+    if tcx.is_foreign_item(def_id)\n         && (!tcx.sess.target.is_like_wasm\n             || !tcx.wasm_import_module_map(def_id.krate).contains_key(&def_id))\n     {"}]}