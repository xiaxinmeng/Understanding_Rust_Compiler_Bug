{"sha": "c0e321abcbc25c47e55a808628fb7e65b3fe0f98", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwZTMyMWFiY2JjMjVjNDdlNTVhODA4NjI4ZmI3ZTY1YjNmZTBmOTg=", "commit": {"author": {"name": "Ms2ger", "email": "Ms2ger@gmail.com", "date": "2016-05-10T13:52:33Z"}, "committer": {"name": "Ms2ger", "email": "Ms2ger@gmail.com", "date": "2016-05-11T07:32:05Z"}, "message": "Make LocalCrateReader private to creader.", "tree": {"sha": "0302c922beaa748cc7d9e250be944a42e2bfc7c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0302c922beaa748cc7d9e250be944a42e2bfc7c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0e321abcbc25c47e55a808628fb7e65b3fe0f98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0e321abcbc25c47e55a808628fb7e65b3fe0f98", "html_url": "https://github.com/rust-lang/rust/commit/c0e321abcbc25c47e55a808628fb7e65b3fe0f98", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0e321abcbc25c47e55a808628fb7e65b3fe0f98/comments", "author": {"login": "Ms2ger", "id": 111161, "node_id": "MDQ6VXNlcjExMTE2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/111161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ms2ger", "html_url": "https://github.com/Ms2ger", "followers_url": "https://api.github.com/users/Ms2ger/followers", "following_url": "https://api.github.com/users/Ms2ger/following{/other_user}", "gists_url": "https://api.github.com/users/Ms2ger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ms2ger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ms2ger/subscriptions", "organizations_url": "https://api.github.com/users/Ms2ger/orgs", "repos_url": "https://api.github.com/users/Ms2ger/repos", "events_url": "https://api.github.com/users/Ms2ger/events{/privacy}", "received_events_url": "https://api.github.com/users/Ms2ger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ms2ger", "id": 111161, "node_id": "MDQ6VXNlcjExMTE2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/111161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ms2ger", "html_url": "https://github.com/Ms2ger", "followers_url": "https://api.github.com/users/Ms2ger/followers", "following_url": "https://api.github.com/users/Ms2ger/following{/other_user}", "gists_url": "https://api.github.com/users/Ms2ger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ms2ger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ms2ger/subscriptions", "organizations_url": "https://api.github.com/users/Ms2ger/orgs", "repos_url": "https://api.github.com/users/Ms2ger/repos", "events_url": "https://api.github.com/users/Ms2ger/events{/privacy}", "received_events_url": "https://api.github.com/users/Ms2ger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5511e6568f41b7ca9d57b0055c193be187e437d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/5511e6568f41b7ca9d57b0055c193be187e437d8", "html_url": "https://github.com/rust-lang/rust/commit/5511e6568f41b7ca9d57b0055c193be187e437d8"}], "stats": {"total": 44, "additions": 27, "deletions": 17}, "files": [{"sha": "d2a5e12009ec45eda9fb01b90f7e025b59c5c2c6", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c0e321abcbc25c47e55a808628fb7e65b3fe0f98/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0e321abcbc25c47e55a808628fb7e65b3fe0f98/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=c0e321abcbc25c47e55a808628fb7e65b3fe0f98", "patch": "@@ -28,7 +28,7 @@ use rustc_borrowck as borrowck;\n use rustc_incremental;\n use rustc_resolve as resolve;\n use rustc_metadata::macro_import;\n-use rustc_metadata::creader::LocalCrateReader;\n+use rustc_metadata::creader::read_local_crates;\n use rustc_metadata::cstore::CStore;\n use rustc_trans::back::link;\n use rustc_trans::back::write;\n@@ -148,8 +148,7 @@ pub fn compile_input(sess: &Session,\n \n         time(sess.time_passes(),\n              \"external crate/lib resolution\",\n-             || LocalCrateReader::new(sess, &cstore, &defs, &expanded_crate, &id)\n-                    .read_crates(&dep_graph));\n+             || read_local_crates(sess, &cstore, &defs, &expanded_crate, &id, &dep_graph));\n \n         time(sess.time_passes(),\n              \"early lint checks\","}, {"sha": "5c62d236844ee900abe8022a1ce8927eaa4334d2", "filename": "src/librustc_driver/test.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c0e321abcbc25c47e55a808628fb7e65b3fe0f98/src%2Flibrustc_driver%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0e321abcbc25c47e55a808628fb7e65b3fe0f98/src%2Flibrustc_driver%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Ftest.rs?ref=c0e321abcbc25c47e55a808628fb7e65b3fe0f98", "patch": "@@ -26,7 +26,7 @@ use rustc::traits::ProjectionMode;\n use rustc::ty::{self, Ty, TyCtxt, TypeFoldable};\n use rustc::infer::{self, InferOk, InferResult, TypeOrigin};\n use rustc_metadata::cstore::CStore;\n-use rustc_metadata::creader::LocalCrateReader;\n+use rustc_metadata::creader::read_local_crates;\n use rustc::hir::map as hir_map;\n use rustc::session::{self, config};\n use std::rc::Rc;\n@@ -120,7 +120,7 @@ fn test_env<F>(source_string: &str,\n     let dep_graph = DepGraph::new(false);\n     let krate = driver::assign_node_ids(&sess, krate);\n     let mut defs = hir_map::collect_definitions(&krate);\n-    LocalCrateReader::new(&sess, &cstore, &defs, &krate, \"test_crate\").read_crates(&dep_graph);\n+    read_local_crates(&sess, &cstore, &defs, &krate, \"test_crate\", &dep_graph);\n     let _ignore = dep_graph.in_ignore();\n \n     let (_, resolutions, mut hir_forest) = {"}, {"sha": "63c6af704bbfe6b64357447c6f59c29edfa9561a", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/c0e321abcbc25c47e55a808628fb7e65b3fe0f98/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0e321abcbc25c47e55a808628fb7e65b3fe0f98/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=c0e321abcbc25c47e55a808628fb7e65b3fe0f98", "patch": "@@ -41,7 +41,7 @@ use syntax::parse::token::InternedString;\n use syntax::visit;\n use log;\n \n-pub struct LocalCrateReader<'a> {\n+struct LocalCrateReader<'a> {\n     sess: &'a Session,\n     cstore: &'a CStore,\n     creader: CrateReader<'a>,\n@@ -841,12 +841,12 @@ impl<'a> CrateReader<'a> {\n }\n \n impl<'a> LocalCrateReader<'a> {\n-    pub fn new(sess: &'a Session,\n-               cstore: &'a CStore,\n-               defs: &'a hir_map::Definitions,\n-               krate: &'a ast::Crate,\n-               local_crate_name: &str)\n-               -> LocalCrateReader<'a> {\n+    fn new(sess: &'a Session,\n+           cstore: &'a CStore,\n+           defs: &'a hir_map::Definitions,\n+           krate: &'a ast::Crate,\n+           local_crate_name: &str)\n+           -> LocalCrateReader<'a> {\n         LocalCrateReader {\n             sess: sess,\n             cstore: cstore,\n@@ -859,7 +859,7 @@ impl<'a> LocalCrateReader<'a> {\n     // Traverses an AST, reading all the information about use'd crates and\n     // extern libraries necessary for later resolving, typechecking, linking,\n     // etc.\n-    pub fn read_crates(&mut self, dep_graph: &DepGraph) {\n+    fn read_crates(&mut self, dep_graph: &DepGraph) {\n         let _task = dep_graph.in_task(DepNode::CrateReader);\n \n         self.process_crate(self.krate);\n@@ -981,6 +981,17 @@ impl<'a> LocalCrateReader<'a> {\n     }\n }\n \n+/// Traverses an AST, reading all the information about use'd crates and extern\n+/// libraries necessary for later resolving, typechecking, linking, etc.\n+pub fn read_local_crates(sess: & Session,\n+                         cstore: & CStore,\n+                         defs: & hir_map::Definitions,\n+                         krate: & ast::Crate,\n+                         local_crate_name: &str,\n+                         dep_graph: &DepGraph) {\n+    LocalCrateReader::new(sess, cstore, defs, krate, local_crate_name).read_crates(dep_graph)\n+}\n+\n /// Imports the codemap from an external crate into the codemap of the crate\n /// currently being compiled (the \"local crate\").\n ///"}, {"sha": "67eb268af08f689a2823af166e847eb829ff4a04", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c0e321abcbc25c47e55a808628fb7e65b3fe0f98/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0e321abcbc25c47e55a808628fb7e65b3fe0f98/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=c0e321abcbc25c47e55a808628fb7e65b3fe0f98", "patch": "@@ -21,7 +21,7 @@ use rustc::lint;\n use rustc_trans::back::link;\n use rustc_resolve as resolve;\n use rustc_metadata::cstore::CStore;\n-use rustc_metadata::creader::LocalCrateReader;\n+use rustc_metadata::creader::read_local_crates;\n \n use syntax::{ast, codemap, errors};\n use syntax::errors::emitter::ColorConfig;\n@@ -154,7 +154,7 @@ pub fn run_core(search_paths: SearchPaths,\n     let dep_graph = DepGraph::new(false);\n \n     let mut defs = hir_map::collect_definitions(&krate);\n-    LocalCrateReader::new(&sess, &cstore, &defs, &krate, &name).read_crates(&dep_graph);\n+    read_local_crates(&sess, &cstore, &defs, &krate, &name, &dep_graph);\n \n     // Lower ast -> hir and resolve.\n     let (analysis, resolutions, mut hir_forest) = {"}, {"sha": "0ad113b8d8b38c90d83968feec79f7ab8adcf447", "filename": "src/test/run-make/execution-engine/test.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c0e321abcbc25c47e55a808628fb7e65b3fe0f98/src%2Ftest%2Frun-make%2Fexecution-engine%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0e321abcbc25c47e55a808628fb7e65b3fe0f98/src%2Ftest%2Frun-make%2Fexecution-engine%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fexecution-engine%2Ftest.rs?ref=c0e321abcbc25c47e55a808628fb7e65b3fe0f98", "patch": "@@ -34,7 +34,7 @@ use rustc::session::config::{self, basic_options, build_configuration, Input, Op\n use rustc::session::build_session;\n use rustc_driver::{driver, abort_on_err};\n use rustc_resolve::MakeGlobMap;\n-use rustc_metadata::creader::LocalCrateReader;\n+use rustc_metadata::creader::read_local_crates;\n use rustc_metadata::cstore::CStore;\n use libc::c_void;\n \n@@ -240,7 +240,7 @@ fn compile_program(input: &str, sysroot: PathBuf)\n         let dep_graph = DepGraph::new(sess.opts.build_dep_graph());\n         let krate = driver::assign_node_ids(&sess, krate);\n         let mut defs = ast_map::collect_definitions(&krate);\n-        LocalCrateReader::new(&sess, &cstore, &defs, &krate, &id).read_crates(&dep_graph);\n+        read_local_crates(&sess, &cstore, &defs, &krate, &id, &dep_graph);\n         let (analysis, resolutions, mut hir_forest) = {\n             driver::lower_and_resolve(&sess, &id, &mut defs, &krate, dep_graph, MakeGlobMap::No)\n         };"}]}