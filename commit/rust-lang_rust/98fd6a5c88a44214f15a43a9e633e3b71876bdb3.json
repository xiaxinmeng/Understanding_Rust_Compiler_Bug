{"sha": "98fd6a5c88a44214f15a43a9e633e3b71876bdb3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4ZmQ2YTVjODhhNDQyMTRmMTVhNDNhOWU2MzNlM2I3MTg3NmJkYjM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-11T15:21:30Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-01T17:58:08Z"}, "message": "1. move allow_internal_unstable to rustc_attr\n2. as a result, drop rustc_errors dep from syntax", "tree": {"sha": "52ab451508805fb2d0a2e40cff72145933da6486", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52ab451508805fb2d0a2e40cff72145933da6486"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98fd6a5c88a44214f15a43a9e633e3b71876bdb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98fd6a5c88a44214f15a43a9e633e3b71876bdb3", "html_url": "https://github.com/rust-lang/rust/commit/98fd6a5c88a44214f15a43a9e633e3b71876bdb3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98fd6a5c88a44214f15a43a9e633e3b71876bdb3/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "097d5e1c5edea1c0bf350b709087ddf5d60d2d9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/097d5e1c5edea1c0bf350b709087ddf5d60d2d9f", "html_url": "https://github.com/rust-lang/rust/commit/097d5e1c5edea1c0bf350b709087ddf5d60d2d9f"}], "stats": {"total": 49, "additions": 21, "deletions": 28}, "files": [{"sha": "b6e9738f10ec4f347d74d2e060f78be9dfa823be", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/98fd6a5c88a44214f15a43a9e633e3b71876bdb3/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/98fd6a5c88a44214f15a43a9e633e3b71876bdb3/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=98fd6a5c88a44214f15a43a9e633e3b71876bdb3", "patch": "@@ -4512,7 +4512,6 @@ version = \"0.0.0\"\n dependencies = [\n  \"log\",\n  \"rustc_data_structures\",\n- \"rustc_errors\",\n  \"rustc_index\",\n  \"rustc_lexer\",\n  \"rustc_macros\","}, {"sha": "c944537048fa20fde6ee7bbe2c37b15ea5ed9d59", "filename": "src/librustc_attr/builtin.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/98fd6a5c88a44214f15a43a9e633e3b71876bdb3/src%2Flibrustc_attr%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98fd6a5c88a44214f15a43a9e633e3b71876bdb3/src%2Flibrustc_attr%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_attr%2Fbuiltin.rs?ref=98fd6a5c88a44214f15a43a9e633e3b71876bdb3", "patch": "@@ -1,6 +1,6 @@\n //! Parsing and validation of builtin attributes\n \n-use super::mark_used;\n+use super::{find_by_name, mark_used};\n \n use rustc_errors::{struct_span_err, Applicability, Handler};\n use rustc_feature::{find_gated_cfg, is_builtin_attr_name, Features, GatedCfg};\n@@ -1043,3 +1043,21 @@ pub fn find_transparency(\n     let fallback = if is_legacy { Transparency::SemiTransparent } else { Transparency::Opaque };\n     (transparency.map_or(fallback, |t| t.0), error)\n }\n+\n+pub fn allow_internal_unstable<'a>(\n+    attrs: &[Attribute],\n+    diag: &'a rustc_errors::Handler,\n+) -> Option<impl Iterator<Item = Symbol> + 'a> {\n+    let attr = find_by_name(attrs, sym::allow_internal_unstable)?;\n+    let list = attr.meta_item_list().or_else(|| {\n+        diag.span_err(attr.span, \"allow_internal_unstable expects list of feature names\");\n+        None\n+    })?;\n+    Some(list.into_iter().filter_map(move |it| {\n+        let name = it.ident().map(|ident| ident.name);\n+        if name.is_none() {\n+            diag.span_err(it.span(), \"`allow_internal_unstable` expects feature names\");\n+        }\n+        name\n+    }))\n+}"}, {"sha": "6a68ccdddffdcf15da00335513bef38be21c0829", "filename": "src/librustc_mir/transform/qualify_min_const_fn.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/98fd6a5c88a44214f15a43a9e633e3b71876bdb3/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98fd6a5c88a44214f15a43a9e633e3b71876bdb3/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs?ref=98fd6a5c88a44214f15a43a9e633e3b71876bdb3", "patch": "@@ -1,11 +1,12 @@\n use rustc::mir::*;\n use rustc::ty::{self, adjustment::PointerCast, Predicate, Ty, TyCtxt};\n+use rustc_attr as attr;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use std::borrow::Cow;\n-use syntax::{ast, attr};\n+use syntax::ast;\n \n type McfResult = Result<(), (Span, Cow<'static, str>)>;\n "}, {"sha": "ff03ae3f425c425773d908b9152ebecae077a54b", "filename": "src/libsyntax/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/98fd6a5c88a44214f15a43a9e633e3b71876bdb3/src%2Flibsyntax%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/98fd6a5c88a44214f15a43a9e633e3b71876bdb3/src%2Flibsyntax%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2FCargo.toml?ref=98fd6a5c88a44214f15a43a9e633e3b71876bdb3", "patch": "@@ -13,7 +13,6 @@ doctest = false\n rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }\n log = \"0.4\"\n scoped-tls = \"1.0\"\n-rustc_errors = { path = \"../librustc_errors\" }\n rustc_span = { path = \"../librustc_span\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_index = { path = \"../librustc_index\" }"}, {"sha": "313f5269235641a7f13200fd4e5fe0d57ca43aca", "filename": "src/libsyntax/attr/mod.rs", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/98fd6a5c88a44214f15a43a9e633e3b71876bdb3/src%2Flibsyntax%2Fattr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98fd6a5c88a44214f15a43a9e633e3b71876bdb3/src%2Flibsyntax%2Fattr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr%2Fmod.rs?ref=98fd6a5c88a44214f15a43a9e633e3b71876bdb3", "patch": "@@ -406,30 +406,6 @@ pub fn find_by_name(attrs: &[Attribute], name: Symbol) -> Option<&Attribute> {\n     attrs.iter().find(|attr| attr.check_name(name))\n }\n \n-pub fn allow_internal_unstable<'a>(\n-    attrs: &[Attribute],\n-    span_diagnostic: &'a rustc_errors::Handler,\n-) -> Option<impl Iterator<Item = Symbol> + 'a> {\n-    find_by_name(attrs, sym::allow_internal_unstable).and_then(|attr| {\n-        attr.meta_item_list()\n-            .or_else(|| {\n-                span_diagnostic\n-                    .span_err(attr.span, \"allow_internal_unstable expects list of feature names\");\n-                None\n-            })\n-            .map(|features| {\n-                features.into_iter().filter_map(move |it| {\n-                    let name = it.ident().map(|ident| ident.name);\n-                    if name.is_none() {\n-                        span_diagnostic\n-                            .span_err(it.span(), \"`allow_internal_unstable` expects feature names\")\n-                    }\n-                    name\n-                })\n-            })\n-    })\n-}\n-\n pub fn filter_by_name(attrs: &[Attribute], name: Symbol) -> impl Iterator<Item = &Attribute> {\n     attrs.iter().filter(move |attr| attr.check_name(name))\n }"}]}