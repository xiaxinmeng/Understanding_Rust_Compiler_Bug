{"sha": "0414dfa0aa072b6e1153ae60f94de852c07bb803", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0MTRkZmEwYWEwNzJiNmUxMTUzYWU2MGY5NGRlODUyYzA3YmI4MDM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-28T21:42:52Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-28T21:42:52Z"}, "message": "Auto merge of #62941 - GuillaumeGomez:save-crate-filter, r=Mark-Simulacrum\n\nSave crate filtering on rustdoc\n\nFixes #62929.\n\nI added a hashmap and a hash encoding for the current crate list in case you have multiple crates handling on a same website (who talked about docs.rs?!). Like that, for each context, you have the filter crate selected.\n\nr? @QuietMisdreavus", "tree": {"sha": "3cc8486d52afbbd2eb19afc85a5766b93bcdbfaa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3cc8486d52afbbd2eb19afc85a5766b93bcdbfaa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0414dfa0aa072b6e1153ae60f94de852c07bb803", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0414dfa0aa072b6e1153ae60f94de852c07bb803", "html_url": "https://github.com/rust-lang/rust/commit/0414dfa0aa072b6e1153ae60f94de852c07bb803", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0414dfa0aa072b6e1153ae60f94de852c07bb803/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17e73e801a75559eac5c932ff07bd9c8499a1364", "url": "https://api.github.com/repos/rust-lang/rust/commits/17e73e801a75559eac5c932ff07bd9c8499a1364", "html_url": "https://github.com/rust-lang/rust/commit/17e73e801a75559eac5c932ff07bd9c8499a1364"}, {"sha": "06228d33cac6770653d6798cf5f80d1269e5482d", "url": "https://api.github.com/repos/rust-lang/rust/commits/06228d33cac6770653d6798cf5f80d1269e5482d", "html_url": "https://github.com/rust-lang/rust/commit/06228d33cac6770653d6798cf5f80d1269e5482d"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "4e5ffad8a742bcd7ca5b0254a7ab6cf8b8016a66", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0414dfa0aa072b6e1153ae60f94de852c07bb803/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/0414dfa0aa072b6e1153ae60f94de852c07bb803/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=0414dfa0aa072b6e1153ae60f94de852c07bb803", "patch": "@@ -445,6 +445,21 @@ if (!DOMTokenList.prototype.remove) {\n         var OUTPUT_DATA = 1;\n         var params = getQueryStringParams();\n \n+        // Set the crate filter from saved storage, if the current page has the saved crate filter.\n+        //\n+        // If not, ignore the crate filter -- we want to support filtering for crates on sites like\n+        // doc.rust-lang.org where the crates may differ from page to page while on the same domain.\n+        var savedCrate = getCurrentValue(\"rustdoc-saved-filter-crate\");\n+        if (savedCrate !== null) {\n+            onEachLazy(document.getElementById(\"crate-search\").getElementsByTagName(\"option\"),\n+                       function(e) {\n+                if (e.value === savedCrate) {\n+                    document.getElementById(\"crate-search\").value = e.value;\n+                    return true;\n+                }\n+            });\n+        }\n+\n         // Populate search bar with query string search term when provided,\n         // but only if the input bar is empty. This avoid the obnoxious issue\n         // where you start trying to do a search, and the index loads, and\n@@ -1658,9 +1673,10 @@ if (!DOMTokenList.prototype.remove) {\n             };\n             search_input.onpaste = search_input.onchange;\n \n-            var selectCrate = document.getElementById('crate-search');\n+            var selectCrate = document.getElementById(\"crate-search\");\n             if (selectCrate) {\n                 selectCrate.onchange = function() {\n+                    updateLocalStorage(\"rustdoc-saved-filter-crate\", selectCrate.value);\n                     search(undefined, true);\n                 };\n             }\n@@ -2496,7 +2512,7 @@ if (!DOMTokenList.prototype.remove) {\n     }\n \n     function addSearchOptions(crates) {\n-        var elem = document.getElementById('crate-search');\n+        var elem = document.getElementById(\"crate-search\");\n \n         if (!elem) {\n             return;"}, {"sha": "9d30e7ee79be4794f190685e33a1ceb517c85801", "filename": "src/librustdoc/html/static/storage.js", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0414dfa0aa072b6e1153ae60f94de852c07bb803/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstorage.js", "raw_url": "https://github.com/rust-lang/rust/raw/0414dfa0aa072b6e1153ae60f94de852c07bb803/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstorage.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstorage.js?ref=0414dfa0aa072b6e1153ae60f94de852c07bb803", "patch": "@@ -57,7 +57,7 @@ function onEachLazy(lazyArray, func, reversed) {\n \n function usableLocalStorage() {\n     // Check if the browser supports localStorage at all:\n-    if (typeof(Storage) === \"undefined\") {\n+    if (typeof Storage === \"undefined\") {\n         return false;\n     }\n     // Check if we can access it; this access will fail if the browser"}]}