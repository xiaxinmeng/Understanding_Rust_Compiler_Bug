{"sha": "221000abbeb233edafff2a00b9b10c2d13f4ad05", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyMTAwMGFiYmViMjMzZWRhZmZmMmEwMGI5YjEwYzJkMTNmNGFkMDU=", "commit": {"author": {"name": "Nikhil Shagrithaya", "email": "nikhilshagri@gmail.com", "date": "2016-07-15T15:17:45Z"}, "committer": {"name": "Nikhil Shagrithaya", "email": "nikhilshagri@gmail.com", "date": "2016-08-10T16:34:41Z"}, "message": "Refactored code to access TLS only in case of panic", "tree": {"sha": "5f8337aac7fcc0a876ec486a32674c1855d621bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f8337aac7fcc0a876ec486a32674c1855d621bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/221000abbeb233edafff2a00b9b10c2d13f4ad05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/221000abbeb233edafff2a00b9b10c2d13f4ad05", "html_url": "https://github.com/rust-lang/rust/commit/221000abbeb233edafff2a00b9b10c2d13f4ad05", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/221000abbeb233edafff2a00b9b10c2d13f4ad05/comments", "author": {"login": "nikhilshagri", "id": 11256206, "node_id": "MDQ6VXNlcjExMjU2MjA2", "avatar_url": "https://avatars.githubusercontent.com/u/11256206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikhilshagri", "html_url": "https://github.com/nikhilshagri", "followers_url": "https://api.github.com/users/nikhilshagri/followers", "following_url": "https://api.github.com/users/nikhilshagri/following{/other_user}", "gists_url": "https://api.github.com/users/nikhilshagri/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikhilshagri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikhilshagri/subscriptions", "organizations_url": "https://api.github.com/users/nikhilshagri/orgs", "repos_url": "https://api.github.com/users/nikhilshagri/repos", "events_url": "https://api.github.com/users/nikhilshagri/events{/privacy}", "received_events_url": "https://api.github.com/users/nikhilshagri/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikhilshagri", "id": 11256206, "node_id": "MDQ6VXNlcjExMjU2MjA2", "avatar_url": "https://avatars.githubusercontent.com/u/11256206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikhilshagri", "html_url": "https://github.com/nikhilshagri", "followers_url": "https://api.github.com/users/nikhilshagri/followers", "following_url": "https://api.github.com/users/nikhilshagri/following{/other_user}", "gists_url": "https://api.github.com/users/nikhilshagri/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikhilshagri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikhilshagri/subscriptions", "organizations_url": "https://api.github.com/users/nikhilshagri/orgs", "repos_url": "https://api.github.com/users/nikhilshagri/repos", "events_url": "https://api.github.com/users/nikhilshagri/events{/privacy}", "received_events_url": "https://api.github.com/users/nikhilshagri/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae774103501337ed63b42b673c6c4fdbf369e80e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae774103501337ed63b42b673c6c4fdbf369e80e", "html_url": "https://github.com/rust-lang/rust/commit/ae774103501337ed63b42b673c6c4fdbf369e80e"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "4473e79a294f4e990c4a910d7febacfe42494243", "filename": "src/libstd/panicking.rs", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/221000abbeb233edafff2a00b9b10c2d13f4ad05/src%2Flibstd%2Fpanicking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/221000abbeb233edafff2a00b9b10c2d13f4ad05/src%2Flibstd%2Fpanicking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpanicking.rs?ref=221000abbeb233edafff2a00b9b10c2d13f4ad05", "patch": "@@ -242,10 +242,9 @@ fn default_hook(info: &PanicInfo) {\n pub unsafe fn try<R, F: FnOnce() -> R>(f: F) -> Result<R, Box<Any + Send>> {\n     let mut slot = None;\n     let mut f = Some(f);\n-    let ret = PANIC_COUNT.with(|s| {\n-        let prev = s.get();\n-        s.set(0);\n+    let ret;\n \n+    {\n         let mut to_run = || {\n             slot = Some(f.take().unwrap()());\n         };\n@@ -258,18 +257,21 @@ pub unsafe fn try<R, F: FnOnce() -> R>(f: F) -> Result<R, Box<Any + Send>> {\n                                          dataptr,\n                                          &mut any_data,\n                                          &mut any_vtable);\n-        s.set(prev);\n-\n         if r == 0 {\n-            Ok(())\n+            ret = Ok(());\n         } else {\n-            Err(mem::transmute(raw::TraitObject {\n+            PANIC_COUNT.with(|s| {\n+                let prev = s.get();\n+                s.set(prev - 1);\n+            });\n+            ret = Err(mem::transmute(raw::TraitObject {\n                 data: any_data as *mut _,\n                 vtable: any_vtable as *mut _,\n-            }))\n+            }));\n         }\n-    });\n+    }\n \n+    debug_assert!(PANIC_COUNT.with(|c| c.get() == 0));\n     return ret.map(|()| {\n         slot.take().unwrap()\n     });"}]}