{"sha": "441866417764cb0ad32bce50ebda83deec525997", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0MTg2NjQxNzc2NGNiMGFkMzJiY2U1MGViZGE4M2RlZWM1MjU5OTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-18T11:51:20Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-18T11:51:20Z"}, "message": "auto merge of #15733 : sanxiyn/rust/use-from-type, r=alexcrichton\n\nImporting from types was disallowed in #6462. Flag was set for paths whether it is a module or a type. Type flag was set when impl was seen. The problem is, for cross-crate situations, when reexport is involved, it is possible that impl is seen too late because metadata is loaded lazily.\r\n\r\nFix #15664.", "tree": {"sha": "f1fd7e8d1e688841135ecf717947fdf2f6f52687", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1fd7e8d1e688841135ecf717947fdf2f6f52687"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/441866417764cb0ad32bce50ebda83deec525997", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/441866417764cb0ad32bce50ebda83deec525997", "html_url": "https://github.com/rust-lang/rust/commit/441866417764cb0ad32bce50ebda83deec525997", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/441866417764cb0ad32bce50ebda83deec525997/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9f1d6b7f69f293ba5f060fd9e179de228d9497b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9f1d6b7f69f293ba5f060fd9e179de228d9497b", "html_url": "https://github.com/rust-lang/rust/commit/d9f1d6b7f69f293ba5f060fd9e179de228d9497b"}, {"sha": "99bd9265d98b74283ee2fa7fa45782e83e5bb79c", "url": "https://api.github.com/repos/rust-lang/rust/commits/99bd9265d98b74283ee2fa7fa45782e83e5bb79c", "html_url": "https://github.com/rust-lang/rust/commit/99bd9265d98b74283ee2fa7fa45782e83e5bb79c"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "3ff2ef770898c7b8e83402197abb73b0d318ed35", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/441866417764cb0ad32bce50ebda83deec525997/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/441866417764cb0ad32bce50ebda83deec525997/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=441866417764cb0ad32bce50ebda83deec525997", "patch": "@@ -1622,6 +1622,12 @@ impl<'a> Resolver<'a> {\n         if is_exported {\n             self.external_exports.insert(def.def_id());\n         }\n+\n+        let kind = match def {\n+            DefStruct(..) | DefTy(..) => ImplModuleKind,\n+            _ => NormalModuleKind\n+        };\n+\n         match def {\n           DefMod(def_id) | DefForeignMod(def_id) | DefStruct(def_id) |\n           DefTy(def_id) => {\n@@ -1640,7 +1646,7 @@ impl<'a> Resolver<'a> {\n \n                 child_name_bindings.define_module(parent_link,\n                                                   Some(def_id),\n-                                                  NormalModuleKind,\n+                                                  kind,\n                                                   true,\n                                                   is_public,\n                                                   DUMMY_SP);"}, {"sha": "8c547c2800204e357b8b523523360b11ff796c7d", "filename": "src/test/auxiliary/use_from_trait_xc.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/441866417764cb0ad32bce50ebda83deec525997/src%2Ftest%2Fauxiliary%2Fuse_from_trait_xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/441866417764cb0ad32bce50ebda83deec525997/src%2Ftest%2Fauxiliary%2Fuse_from_trait_xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fuse_from_trait_xc.rs?ref=441866417764cb0ad32bce50ebda83deec525997", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+pub use self::sub::Bar;\n+\n pub trait Trait {\n     fn foo();\n }\n@@ -17,3 +19,11 @@ struct Foo;\n impl Foo {\n     pub fn new() {}\n }\n+\n+mod sub {\n+    pub struct Bar;\n+\n+    impl Bar {\n+        pub fn new() {}\n+    }\n+}"}, {"sha": "cea85955d37955a01c474e4f666dbc8ac8e6e1aa", "filename": "src/test/compile-fail/use-from-trait-xc.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/441866417764cb0ad32bce50ebda83deec525997/src%2Ftest%2Fcompile-fail%2Fuse-from-trait-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/441866417764cb0ad32bce50ebda83deec525997/src%2Ftest%2Fcompile-fail%2Fuse-from-trait-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-from-trait-xc.rs?ref=441866417764cb0ad32bce50ebda83deec525997", "patch": "@@ -18,4 +18,7 @@ use use_from_trait_xc::Trait::foo;\n use use_from_trait_xc::Foo::new;\n //~^ ERROR unresolved import `use_from_trait_xc::Foo::new`. Cannot import from a trait or type imple\n \n+use use_from_trait_xc::Bar::new;\n+//~^ ERROR unresolved import `use_from_trait_xc::Bar::new`. Cannot import from a trait or type\n+\n fn main() {}"}]}