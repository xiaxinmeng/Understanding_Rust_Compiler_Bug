{"sha": "d4754edc2802da85bf9ed269aae45dafca01de9d", "node_id": "C_kwDOAAsO6NoAKGQ0NzU0ZWRjMjgwMmRhODViZjllZDI2OWFhZTQ1ZGFmY2EwMWRlOWQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-11T11:55:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-11T11:55:44Z"}, "message": "Rollup merge of #108949 - Urgau:check-cfg-target-json, r=oli-obk\n\nHonor current target when checking conditional compilation values\n\nThis is fixed by simply using the currently registered target in the current session. We need to use it because of target json that are not by design included in the rustc list of targets.\n\nFixes https://github.com/rust-lang/rust/issues/108941", "tree": {"sha": "a5e5c78166844ca41a8a6c784cebf3736a28a761", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5e5c78166844ca41a8a6c784cebf3736a28a761"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4754edc2802da85bf9ed269aae45dafca01de9d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkDGxACRBK7hj4Ov3rIwAA5vUIAJ4usgUntJX/jf2RioeDS1Fh\n8N7O02E0Uz9xF5JTDD6dNnnFuMF+LQXr6lS+ehK5drbUHvI+MgUVkLPSdB/6uQrp\nlbM/1NZoOcwgbfdt4uRF6ZXov9ewDHdeJ9dBSOd+yeXYXaGHbNXC2Thui4wgckbl\n0OdCCYBt/hBxVlBxkWMghhpA9k2AFH3e6a2vuVkHJpBx8+qaLT0Ar0iqwEu+0cS5\nQKSKufkHe9sQFdntQGy334SgpE7Z5deusFYC+AnglraHzzSvXokzDNFIlAlHN6F9\nye10/ngcs90JSAdq5MxZaZclngBCuXlZ+tofBhEV77hBJ5M3kShnm0Nds2g0FGA=\n=kaoq\n-----END PGP SIGNATURE-----\n", "payload": "tree a5e5c78166844ca41a8a6c784cebf3736a28a761\nparent 5e52ada714a46b6150e78c7c5a2ff7178a2d79d3\nparent 3455d66041eb1d766814b57608d7ae8f20c8b04e\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1678535744 +0100\ncommitter GitHub <noreply@github.com> 1678535744 +0100\n\nRollup merge of #108949 - Urgau:check-cfg-target-json, r=oli-obk\n\nHonor current target when checking conditional compilation values\n\nThis is fixed by simply using the currently registered target in the current session. We need to use it because of target json that are not by design included in the rustc list of targets.\n\nFixes https://github.com/rust-lang/rust/issues/108941\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4754edc2802da85bf9ed269aae45dafca01de9d", "html_url": "https://github.com/rust-lang/rust/commit/d4754edc2802da85bf9ed269aae45dafca01de9d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4754edc2802da85bf9ed269aae45dafca01de9d/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e52ada714a46b6150e78c7c5a2ff7178a2d79d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e52ada714a46b6150e78c7c5a2ff7178a2d79d3", "html_url": "https://github.com/rust-lang/rust/commit/5e52ada714a46b6150e78c7c5a2ff7178a2d79d3"}, {"sha": "3455d66041eb1d766814b57608d7ae8f20c8b04e", "url": "https://api.github.com/repos/rust-lang/rust/commits/3455d66041eb1d766814b57608d7ae8f20c8b04e", "html_url": "https://github.com/rust-lang/rust/commit/3455d66041eb1d766814b57608d7ae8f20c8b04e"}], "stats": {"total": 55, "additions": 51, "deletions": 4}, "files": [{"sha": "043892410ceaa8e8f5bd9d915472c562b0248d6d", "filename": "compiler/rustc_interface/src/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4754edc2802da85bf9ed269aae45dafca01de9d/compiler%2Frustc_interface%2Fsrc%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4754edc2802da85bf9ed269aae45dafca01de9d/compiler%2Frustc_interface%2Fsrc%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Futil.rs?ref=d4754edc2802da85bf9ed269aae45dafca01de9d", "patch": "@@ -110,7 +110,7 @@ pub fn create_session(\n     add_configuration(&mut cfg, &mut sess, &*codegen_backend);\n \n     let mut check_cfg = config::to_crate_check_config(check_cfg);\n-    check_cfg.fill_well_known();\n+    check_cfg.fill_well_known(&sess.target);\n \n     sess.parse_sess.config = cfg;\n     sess.parse_sess.check_config = check_cfg;"}, {"sha": "485c3f554625abb3f456988b702ae0c998a3a9c9", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d4754edc2802da85bf9ed269aae45dafca01de9d/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4754edc2802da85bf9ed269aae45dafca01de9d/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=d4754edc2802da85bf9ed269aae45dafca01de9d", "patch": "@@ -1137,7 +1137,7 @@ impl CrateCheckConfig {\n     }\n \n     /// Fills a `CrateCheckConfig` with well-known configuration values.\n-    fn fill_well_known_values(&mut self) {\n+    fn fill_well_known_values(&mut self, current_target: &Target) {\n         if !self.well_known_values {\n             return;\n         }\n@@ -1229,6 +1229,7 @@ impl CrateCheckConfig {\n             for target in TARGETS\n                 .iter()\n                 .map(|target| Target::expect_builtin(&TargetTriple::from_triple(target)))\n+                .chain(iter::once(current_target.clone()))\n             {\n                 values_target_os.insert(Symbol::intern(&target.options.os));\n                 values_target_family\n@@ -1243,9 +1244,9 @@ impl CrateCheckConfig {\n         }\n     }\n \n-    pub fn fill_well_known(&mut self) {\n+    pub fn fill_well_known(&mut self, current_target: &Target) {\n         self.fill_well_known_names();\n-        self.fill_well_known_values();\n+        self.fill_well_known_values(current_target);\n     }\n }\n "}, {"sha": "5e9ab8f1a2d00e2194cf95b042767f2387f5b175", "filename": "tests/ui/check-cfg/my-awesome-platform.json", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d4754edc2802da85bf9ed269aae45dafca01de9d/tests%2Fui%2Fcheck-cfg%2Fmy-awesome-platform.json", "raw_url": "https://github.com/rust-lang/rust/raw/d4754edc2802da85bf9ed269aae45dafca01de9d/tests%2Fui%2Fcheck-cfg%2Fmy-awesome-platform.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcheck-cfg%2Fmy-awesome-platform.json?ref=d4754edc2802da85bf9ed269aae45dafca01de9d", "patch": "@@ -0,0 +1,12 @@\n+{\n+    \"llvm-target\": \"x86_64-unknown-none-gnu\",\n+    \"data-layout\": \"e-m:e-i64:64-f80:128-n8:16:32:64-S128\",\n+    \"arch\": \"x86_64\",\n+    \"target-endian\": \"little\",\n+    \"target-pointer-width\": \"64\",\n+    \"target-c-int-width\": \"32\",\n+    \"os\": \"ericos\",\n+    \"linker-flavor\": \"ld.lld\",\n+    \"linker\": \"rust-lld\",\n+    \"executables\": true\n+}"}, {"sha": "2ef5a44592b8133aeca40ccdf4442b02e2f7acab", "filename": "tests/ui/check-cfg/values-target-json.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d4754edc2802da85bf9ed269aae45dafca01de9d/tests%2Fui%2Fcheck-cfg%2Fvalues-target-json.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4754edc2802da85bf9ed269aae45dafca01de9d/tests%2Fui%2Fcheck-cfg%2Fvalues-target-json.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcheck-cfg%2Fvalues-target-json.rs?ref=d4754edc2802da85bf9ed269aae45dafca01de9d", "patch": "@@ -0,0 +1,21 @@\n+// This test checks that we don't lint values defined by a custom target (target json)\n+//\n+// check-pass\n+// needs-llvm-components: x86\n+// compile-flags: --crate-type=lib --check-cfg=values() --target={{src-base}}/check-cfg/my-awesome-platform.json -Z unstable-options\n+\n+#![feature(lang_items, no_core, auto_traits)]\n+#![no_core]\n+\n+#[lang = \"sized\"]\n+trait Sized {}\n+\n+#[cfg(target_os = \"linuz\")]\n+//~^ WARNING unexpected `cfg` condition value\n+fn target_os_linux_misspell() {}\n+\n+#[cfg(target_os = \"linux\")]\n+fn target_os_linux() {}\n+\n+#[cfg(target_os = \"ericos\")]\n+fn target_os_ericos() {}"}, {"sha": "b58d2970773b801548971abced9aa24a49e44ea6", "filename": "tests/ui/check-cfg/values-target-json.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d4754edc2802da85bf9ed269aae45dafca01de9d/tests%2Fui%2Fcheck-cfg%2Fvalues-target-json.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d4754edc2802da85bf9ed269aae45dafca01de9d/tests%2Fui%2Fcheck-cfg%2Fvalues-target-json.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcheck-cfg%2Fvalues-target-json.stderr?ref=d4754edc2802da85bf9ed269aae45dafca01de9d", "patch": "@@ -0,0 +1,13 @@\n+warning: unexpected `cfg` condition value\n+  --> $DIR/values-target-json.rs:13:7\n+   |\n+LL | #[cfg(target_os = \"linuz\")]\n+   |       ^^^^^^^^^^^^-------\n+   |                   |\n+   |                   help: did you mean: `\"linux\"`\n+   |\n+   = note: expected values for `target_os` are: aix, android, cuda, dragonfly, emscripten, ericos, espidf, freebsd, fuchsia, haiku, hermit, horizon, illumos, ios, l4re, linux, macos, netbsd, none, nto, openbsd, psp, redox, solaris, solid_asp3, tvos, uefi, unknown, vita, vxworks, wasi, watchos, windows, xous\n+   = note: `#[warn(unexpected_cfgs)]` on by default\n+\n+warning: 1 warning emitted\n+"}]}