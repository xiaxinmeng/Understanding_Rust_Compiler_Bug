{"sha": "409eb89b3beaab3d962752ee6b024c36dd6cfd31", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwOWViODliM2JlYWFiM2Q5NjI3NTJlZTZiMDI0YzM2ZGQ2Y2ZkMzE=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-09-13T18:21:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-13T18:21:05Z"}, "message": "Rollup merge of #75559 - RalfJung:union-test-move, r=joshtriplett\n\nunions: test move behavior of non-Copy fields\n\nThis test ensures the behaviors suggested by @petrochenkov [here](https://github.com/rust-lang/rust/issues/32836#issuecomment-242511491).", "tree": {"sha": "39fd568bf6e38e7982d5273d996dc54e8ced1030", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39fd568bf6e38e7982d5273d996dc54e8ced1030"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/409eb89b3beaab3d962752ee6b024c36dd6cfd31", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfXmMSCRBK7hj4Ov3rIwAAdHIIABT3QkdLJV60WUSD7IP9Ixkd\niyGwqrMoqTQ/lhe/DkLM7UMvr4mQiOKuGFVD9Vwe4e8qxASqqTJGpFXS9X+aWavA\nOcc9HNTf+7JN/hslD4SPDEnaLuA6ZZ22l61KRaDyHBR43qZ3ZQx9ZdpxEOSsJmtW\n8Z9ZmSu0Y5f+Yn1+2TIfPubXEbcJKBX44o/iKPCOZWp0gLBpgBnGu9M5bHScFszi\nADcdyE5wgXY1dLWVuOSSJAO0sPBcM830Dav9PP7cNxSZjoY4s7YsdOJ8Rg00pAqH\nNeEervE63wzTNhAw3xoPlkaturyQBviVGI7049/GFLvTr6fMmgtSXRMhEC3Rgss=\n=TnPg\n-----END PGP SIGNATURE-----\n", "payload": "tree 39fd568bf6e38e7982d5273d996dc54e8ced1030\nparent 7402a394471a6738a40fea7d4f1891666e5a80c5\nparent 5dfe015ba51238e686945d8ce19caf7dee8bc78c\nauthor Jonas Schievink <jonasschievink@gmail.com> 1600021265 +0200\ncommitter GitHub <noreply@github.com> 1600021265 +0200\n\nRollup merge of #75559 - RalfJung:union-test-move, r=joshtriplett\n\nunions: test move behavior of non-Copy fields\n\nThis test ensures the behaviors suggested by @petrochenkov [here](https://github.com/rust-lang/rust/issues/32836#issuecomment-242511491).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/409eb89b3beaab3d962752ee6b024c36dd6cfd31", "html_url": "https://github.com/rust-lang/rust/commit/409eb89b3beaab3d962752ee6b024c36dd6cfd31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/409eb89b3beaab3d962752ee6b024c36dd6cfd31/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7402a394471a6738a40fea7d4f1891666e5a80c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/7402a394471a6738a40fea7d4f1891666e5a80c5", "html_url": "https://github.com/rust-lang/rust/commit/7402a394471a6738a40fea7d4f1891666e5a80c5"}, {"sha": "5dfe015ba51238e686945d8ce19caf7dee8bc78c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5dfe015ba51238e686945d8ce19caf7dee8bc78c", "html_url": "https://github.com/rust-lang/rust/commit/5dfe015ba51238e686945d8ce19caf7dee8bc78c"}], "stats": {"total": 95, "additions": 94, "deletions": 1}, "files": [{"sha": "4df3ed502827ea80695b4d89fe4784abd8a5ca45", "filename": "src/test/ui/union/union-drop.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/409eb89b3beaab3d962752ee6b024c36dd6cfd31/src%2Ftest%2Fui%2Funion%2Funion-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/409eb89b3beaab3d962752ee6b024c36dd6cfd31/src%2Ftest%2Fui%2Funion%2Funion-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-drop.rs?ref=409eb89b3beaab3d962752ee6b024c36dd6cfd31", "patch": "@@ -48,6 +48,11 @@ fn main() {\n         {\n             let y = Y { a: S };\n         }\n-        assert_eq!(CHECK, 2); // 2, dtor of Y is called\n+        assert_eq!(CHECK, 2); // 2, Y has no dtor\n+        {\n+            let u2 = U { a: 1 };\n+            std::mem::forget(u2);\n+        }\n+        assert_eq!(CHECK, 2); // 2, dtor of U *not* called for u2\n     }\n }"}, {"sha": "a0a2d0d659837a60bbe6e4b6a04ea34796938cfd", "filename": "src/test/ui/union/union-move.rs", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/409eb89b3beaab3d962752ee6b024c36dd6cfd31/src%2Ftest%2Fui%2Funion%2Funion-move.rs", "raw_url": "https://github.com/rust-lang/rust/raw/409eb89b3beaab3d962752ee6b024c36dd6cfd31/src%2Ftest%2Fui%2Funion%2Funion-move.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-move.rs?ref=409eb89b3beaab3d962752ee6b024c36dd6cfd31", "patch": "@@ -0,0 +1,53 @@\n+//! Test the behavior of moving out of non-`Copy` union fields.\n+//! Avoid types that `Drop`, we want to focus on moving.\n+#![feature(untagged_unions)]\n+\n+use std::cell::RefCell;\n+\n+fn move_out<T>(x: T) {}\n+\n+union U1 {\n+    f1_nocopy: RefCell<i32>,\n+    f2_nocopy: RefCell<i32>,\n+    f3_copy: i32,\n+}\n+\n+union U2 {\n+    f1_nocopy: RefCell<i32>,\n+}\n+impl Drop for U2 {\n+    fn drop(&mut self) {}\n+}\n+\n+fn test1(x: U1) {\n+    // Moving out of a nocopy field prevents accessing other nocopy field.\n+    unsafe {\n+        move_out(x.f1_nocopy);\n+        move_out(x.f2_nocopy); //~ ERROR use of moved value: `x`\n+    }\n+}\n+\n+fn test2(x: U1) {\n+    // \"Moving\" out of copy field doesn't prevent later field accesses.\n+    unsafe {\n+        move_out(x.f3_copy);\n+        move_out(x.f2_nocopy); // no error\n+    }\n+}\n+\n+fn test3(x: U1) {\n+    // Moving out of a nocopy field prevents accessing other copy field.\n+    unsafe {\n+        move_out(x.f2_nocopy);\n+        move_out(x.f3_copy); //~ ERROR use of moved value: `x`\n+    }\n+}\n+\n+fn test4(x: U2) {\n+    // Cannot move out of union that implements `Drop`.\n+    unsafe {\n+        move_out(x.f1_nocopy); //~ ERROR cannot move out of type `U2`, which implements the `Drop`\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "5679192b64194fd9e5ca5350c7f342eb12201ebb", "filename": "src/test/ui/union/union-move.stderr", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/409eb89b3beaab3d962752ee6b024c36dd6cfd31/src%2Ftest%2Fui%2Funion%2Funion-move.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/409eb89b3beaab3d962752ee6b024c36dd6cfd31/src%2Ftest%2Fui%2Funion%2Funion-move.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-move.stderr?ref=409eb89b3beaab3d962752ee6b024c36dd6cfd31", "patch": "@@ -0,0 +1,35 @@\n+error[E0382]: use of moved value: `x`\n+  --> $DIR/union-move.rs:26:18\n+   |\n+LL | fn test1(x: U1) {\n+   |          - move occurs because `x` has type `U1`, which does not implement the `Copy` trait\n+...\n+LL |         move_out(x.f1_nocopy);\n+   |                  ----------- value moved here\n+LL |         move_out(x.f2_nocopy);\n+   |                  ^^^^^^^^^^^ value used here after move\n+\n+error[E0382]: use of moved value: `x`\n+  --> $DIR/union-move.rs:42:18\n+   |\n+LL | fn test3(x: U1) {\n+   |          - move occurs because `x` has type `U1`, which does not implement the `Copy` trait\n+...\n+LL |         move_out(x.f2_nocopy);\n+   |                  ----------- value moved here\n+LL |         move_out(x.f3_copy);\n+   |                  ^^^^^^^^^ value used here after move\n+\n+error[E0509]: cannot move out of type `U2`, which implements the `Drop` trait\n+  --> $DIR/union-move.rs:49:18\n+   |\n+LL |         move_out(x.f1_nocopy);\n+   |                  ^^^^^^^^^^^\n+   |                  |\n+   |                  cannot move out of here\n+   |                  move occurs because `x.f1_nocopy` has type `RefCell<i32>`, which does not implement the `Copy` trait\n+\n+error: aborting due to 3 previous errors\n+\n+Some errors have detailed explanations: E0382, E0509.\n+For more information about an error, try `rustc --explain E0382`."}]}