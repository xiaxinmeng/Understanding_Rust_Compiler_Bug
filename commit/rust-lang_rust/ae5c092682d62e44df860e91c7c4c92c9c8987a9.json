{"sha": "ae5c092682d62e44df860e91c7c4c92c9c8987a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlNWMwOTI2ODJkNjJlNDRkZjg2MGU5MWM3YzRjOTJjOWM4OTg3YTk=", "commit": {"author": {"name": "Georg Semmler", "email": "georg_semmler_05@web.de", "date": "2019-01-03T12:25:49Z"}, "committer": {"name": "Georg Semmler", "email": "georg_semmler_05@web.de", "date": "2019-01-03T21:29:11Z"}, "message": "More test deduplication", "tree": {"sha": "c7f0e21e078fd4c828360e28731d98d76e3a41aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7f0e21e078fd4c828360e28731d98d76e3a41aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae5c092682d62e44df860e91c7c4c92c9c8987a9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEt/EOFp+yWvA8Dk28qHvO5SBc5IkFAlwufqcACgkQqHvO5SBc\n5In24gf/czJrBVEeO8e8ZTjhwQNgJJhRaSWFUvwHg2MJ1BuWfKpC75p60sjcQtbj\nJlozjYSKtZlBV5LW4cWCqbT4ic2FVkY/VnPPlSl0/5nOg1ytspmkv1chRzAzvLFR\nBDysQx4MeygaEGq+i6Eb9swuluZSVKuETvoQWHsXrSi4byjv2jGvGh1gyx1V1eeM\npPzmnwUaehAzQBUPExCCgKFyF30sYjb2SqX4xiRZQvGKtG3F0SWzpapw0jUC1Hoq\nmMo2OzD5T6Q4oGZhBsyKPMtfUWktfFz+ptr5rTYtLMolHET1OcQILESBeIfNF1KK\nTugsWb9SDcggKJNmWTIZzm1XYLRtiA==\n=PB+1\n-----END PGP SIGNATURE-----", "payload": "tree c7f0e21e078fd4c828360e28731d98d76e3a41aa\nparent 2bc436e713d4816d66eeb5e0a1691491f68c1067\nauthor Georg Semmler <georg_semmler_05@web.de> 1546518349 +0100\ncommitter Georg Semmler <georg_semmler_05@web.de> 1546550951 +0100\n\nMore test deduplication\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae5c092682d62e44df860e91c7c4c92c9c8987a9", "html_url": "https://github.com/rust-lang/rust/commit/ae5c092682d62e44df860e91c7c4c92c9c8987a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae5c092682d62e44df860e91c7c4c92c9c8987a9/comments", "author": {"login": "weiznich", "id": 1674512, "node_id": "MDQ6VXNlcjE2NzQ1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1674512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiznich", "html_url": "https://github.com/weiznich", "followers_url": "https://api.github.com/users/weiznich/followers", "following_url": "https://api.github.com/users/weiznich/following{/other_user}", "gists_url": "https://api.github.com/users/weiznich/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiznich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiznich/subscriptions", "organizations_url": "https://api.github.com/users/weiznich/orgs", "repos_url": "https://api.github.com/users/weiznich/repos", "events_url": "https://api.github.com/users/weiznich/events{/privacy}", "received_events_url": "https://api.github.com/users/weiznich/received_events", "type": "User", "site_admin": false}, "committer": {"login": "weiznich", "id": 1674512, "node_id": "MDQ6VXNlcjE2NzQ1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1674512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiznich", "html_url": "https://github.com/weiznich", "followers_url": "https://api.github.com/users/weiznich/followers", "following_url": "https://api.github.com/users/weiznich/following{/other_user}", "gists_url": "https://api.github.com/users/weiznich/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiznich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiznich/subscriptions", "organizations_url": "https://api.github.com/users/weiznich/orgs", "repos_url": "https://api.github.com/users/weiznich/repos", "events_url": "https://api.github.com/users/weiznich/events{/privacy}", "received_events_url": "https://api.github.com/users/weiznich/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2bc436e713d4816d66eeb5e0a1691491f68c1067", "url": "https://api.github.com/repos/rust-lang/rust/commits/2bc436e713d4816d66eeb5e0a1691491f68c1067", "html_url": "https://github.com/rust-lang/rust/commit/2bc436e713d4816d66eeb5e0a1691491f68c1067"}], "stats": {"total": 484, "additions": 38, "deletions": 446}, "files": [{"sha": "c8d027b25c7486dedf9ca2aec24f832d8def828b", "filename": "src/test/run-pass/coherence/auxiliary/re_rebalance_coherence_lib.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/ae5c092682d62e44df860e91c7c4c92c9c8987a9/src%2Ftest%2Frun-pass%2Fcoherence%2Fauxiliary%2Fre_rebalance_coherence_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae5c092682d62e44df860e91c7c4c92c9c8987a9/src%2Ftest%2Frun-pass%2Fcoherence%2Fauxiliary%2Fre_rebalance_coherence_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcoherence%2Fauxiliary%2Fre_rebalance_coherence_lib.rs?ref=ae5c092682d62e44df860e91c7c4c92c9c8987a9", "previous_filename": "src/test/run-pass/re_rebalance_coherence/auxiliary/re_rebalance_coherence_lib.rs"}, {"sha": "0c9abdc15e620dd7c3ace7094ed4b3f8c17e4412", "filename": "src/test/run-pass/coherence/coherence-bigint-int.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ae5c092682d62e44df860e91c7c4c92c9c8987a9/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-bigint-int.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae5c092682d62e44df860e91c7c4c92c9c8987a9/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-bigint-int.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-bigint-int.rs?ref=ae5c092682d62e44df860e91c7c4c92c9c8987a9", "patch": "@@ -1,5 +1,8 @@\n // run-pass\n // aux-build:coherence_lib.rs\n+// revisions: old re\n+\n+#![cfg_attr(re, feature(re_rebalance_coherence))]\n \n // pretty-expanded FIXME #23616\n "}, {"sha": "38e0be0aa9ab9c4df057962bfebc8a1757b67daf", "filename": "src/test/run-pass/coherence/coherence-bigint-vecint.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ae5c092682d62e44df860e91c7c4c92c9c8987a9/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-bigint-vecint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae5c092682d62e44df860e91c7c4c92c9c8987a9/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-bigint-vecint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-bigint-vecint.rs?ref=ae5c092682d62e44df860e91c7c4c92c9c8987a9", "patch": "@@ -1,5 +1,8 @@\n // run-pass\n // aux-build:coherence_lib.rs\n+// revisions: old re\n+\n+#![cfg_attr(re, feature(re_rebalance_coherence))]\n \n // pretty-expanded FIXME #23616\n "}, {"sha": "5d310cc2c6ac5126f83822f24592cbc5c34bc8f5", "filename": "src/test/run-pass/coherence/coherence-blanket.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ae5c092682d62e44df860e91c7c4c92c9c8987a9/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-blanket.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae5c092682d62e44df860e91c7c4c92c9c8987a9/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-blanket.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-blanket.rs?ref=ae5c092682d62e44df860e91c7c4c92c9c8987a9", "patch": "@@ -1,6 +1,9 @@\n // run-pass\n #![allow(unused_imports)]\n // aux-build:coherence_lib.rs\n+// revisions: old re\n+\n+#![cfg_attr(re, feature(re_rebalance_coherence))]\n \n // pretty-expanded FIXME #23616\n "}, {"sha": "1cf039f0831f53b077b1ddee61fc6b26a31d74e3", "filename": "src/test/run-pass/coherence/coherence-covered-type-parameter.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ae5c092682d62e44df860e91c7c4c92c9c8987a9/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-covered-type-parameter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae5c092682d62e44df860e91c7c4c92c9c8987a9/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-covered-type-parameter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-covered-type-parameter.rs?ref=ae5c092682d62e44df860e91c7c4c92c9c8987a9", "patch": "@@ -1,6 +1,9 @@\n // run-pass\n #![allow(dead_code)]\n // aux-build:coherence_lib.rs\n+// revisions: old re\n+\n+#![cfg_attr(re, feature(re_rebalance_coherence))]\n \n // pretty-expanded FIXME #23616\n "}, {"sha": "09e2c1e5a4edd3faf2b176f971d1eef0eefbb2c3", "filename": "src/test/run-pass/coherence/coherence-impl-in-fn.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ae5c092682d62e44df860e91c7c4c92c9c8987a9/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-impl-in-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae5c092682d62e44df860e91c7c4c92c9c8987a9/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-impl-in-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-impl-in-fn.rs?ref=ae5c092682d62e44df860e91c7c4c92c9c8987a9", "patch": "@@ -1,4 +1,7 @@\n // run-pass\n+// revisions: old re\n+\n+#![cfg_attr(re, feature(re_rebalance_coherence))]\n #![allow(dead_code)]\n #![allow(non_camel_case_types)]\n "}, {"sha": "051cc280b2d1262018a42743e13eb75eb058f2a0", "filename": "src/test/run-pass/coherence/coherence-iterator-vec-any-elem.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ae5c092682d62e44df860e91c7c4c92c9c8987a9/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-iterator-vec-any-elem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae5c092682d62e44df860e91c7c4c92c9c8987a9/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-iterator-vec-any-elem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-iterator-vec-any-elem.rs?ref=ae5c092682d62e44df860e91c7c4c92c9c8987a9", "patch": "@@ -1,4 +1,7 @@\n // run-pass\n+// revisions: old re\n+\n+#![cfg_attr(re, feature(re_rebalance_coherence))]\n #![allow(dead_code)]\n // aux-build:coherence_lib.rs\n "}, {"sha": "df6e808f7dec594dab2258e13f2e80c7dfdf8876", "filename": "src/test/run-pass/coherence/coherence-iterator-vec.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ae5c092682d62e44df860e91c7c4c92c9c8987a9/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-iterator-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae5c092682d62e44df860e91c7c4c92c9c8987a9/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-iterator-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-iterator-vec.rs?ref=ae5c092682d62e44df860e91c7c4c92c9c8987a9", "patch": "@@ -1,4 +1,7 @@\n // run-pass\n+// revisions: old re\n+\n+#![cfg_attr(re, feature(re_rebalance_coherence))]\n #![allow(dead_code)]\n // aux-build:coherence_lib.rs\n "}, {"sha": "6a816664c4832b0e3511336a2dc909261357311a", "filename": "src/test/run-pass/coherence/coherence-multidispatch-tuple.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ae5c092682d62e44df860e91c7c4c92c9c8987a9/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-multidispatch-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae5c092682d62e44df860e91c7c4c92c9c8987a9/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-multidispatch-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-multidispatch-tuple.rs?ref=ae5c092682d62e44df860e91c7c4c92c9c8987a9", "patch": "@@ -1,4 +1,7 @@\n // run-pass\n+// revisions: old re\n+\n+#![cfg_attr(re, feature(re_rebalance_coherence))]\n #![allow(unused_imports)]\n // pretty-expanded FIXME #23616\n "}, {"sha": "98b04489ac4de8063e5c18af82ff48afca7339f4", "filename": "src/test/run-pass/coherence/coherence-negative-impls-safe.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ae5c092682d62e44df860e91c7c4c92c9c8987a9/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-negative-impls-safe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae5c092682d62e44df860e91c7c4c92c9c8987a9/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-negative-impls-safe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-negative-impls-safe.rs?ref=ae5c092682d62e44df860e91c7c4c92c9c8987a9", "patch": "@@ -1,4 +1,7 @@\n // run-pass\n+// revisions: old re\n+\n+#![cfg_attr(re, feature(re_rebalance_coherence))]\n #![allow(dead_code)]\n // pretty-expanded FIXME #23616\n "}, {"sha": "4da54d386fd35438da341f4a6f54f073461ac1df", "filename": "src/test/run-pass/coherence/coherence-rfc447-constrained.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ae5c092682d62e44df860e91c7c4c92c9c8987a9/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-rfc447-constrained.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae5c092682d62e44df860e91c7c4c92c9c8987a9/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-rfc447-constrained.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-rfc447-constrained.rs?ref=ae5c092682d62e44df860e91c7c4c92c9c8987a9", "patch": "@@ -1,4 +1,7 @@\n // run-pass\n+// revisions: old re\n+\n+#![cfg_attr(re, feature(re_rebalance_coherence))]\n // check that trait matching can handle impls whose types are only\n // constrained by a projection.\n "}, {"sha": "283974203858d85ffd5205a8799edd667d2d6bb9", "filename": "src/test/run-pass/coherence/coherence-where-clause.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ae5c092682d62e44df860e91c7c4c92c9c8987a9/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-where-clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae5c092682d62e44df860e91c7c4c92c9c8987a9/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-where-clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence-where-clause.rs?ref=ae5c092682d62e44df860e91c7c4c92c9c8987a9", "patch": "@@ -1,4 +1,8 @@\n // run-pass\n+// revisions: old re\n+\n+#![cfg_attr(re, feature(re_rebalance_coherence))]\n+\n use std::fmt::Debug;\n use std::default::Default;\n "}, {"sha": "653f76264c1108bdf3db8aaa648e4b37a22e70b4", "filename": "src/test/run-pass/coherence/coherence_copy_like.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ae5c092682d62e44df860e91c7c4c92c9c8987a9/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence_copy_like.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae5c092682d62e44df860e91c7c4c92c9c8987a9/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence_copy_like.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcoherence%2Fcoherence_copy_like.rs?ref=ae5c092682d62e44df860e91c7c4c92c9c8987a9", "patch": "@@ -1,4 +1,7 @@\n // run-pass\n+// revisions: old re\n+\n+#![cfg_attr(re, feature(re_rebalance_coherence))]\n #![allow(dead_code)]\n // Test that we are able to introduce a negative constraint that\n // `MyType: !MyTrait` along with other \"fundamental\" wrappers."}, {"sha": "bacd3b89fad29333a04f65de99c86f0b8b75abb6", "filename": "src/test/run-pass/coherence/re-rebalance-coherence.rs", "status": "renamed", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ae5c092682d62e44df860e91c7c4c92c9c8987a9/src%2Ftest%2Frun-pass%2Fcoherence%2Fre-rebalance-coherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae5c092682d62e44df860e91c7c4c92c9c8987a9/src%2Ftest%2Frun-pass%2Fcoherence%2Fre-rebalance-coherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcoherence%2Fre-rebalance-coherence.rs?ref=ae5c092682d62e44df860e91c7c4c92c9c8987a9", "patch": "@@ -1,3 +1,4 @@\n+#![allow(dead_code)]\n #![feature(re_rebalance_coherence)]\n \n // run-pass", "previous_filename": "src/test/run-pass/re_rebalance_coherence/re-rebalance-coherence.rs"}, {"sha": "d3d389c6a8bd52da51a2579ea7bf4c6408ee2c69", "filename": "src/test/run-pass/re_rebalance_coherence/auxiliary/coherence_copy_like_lib.rs", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2bc436e713d4816d66eeb5e0a1691491f68c1067/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fauxiliary%2Fcoherence_copy_like_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bc436e713d4816d66eeb5e0a1691491f68c1067/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fauxiliary%2Fcoherence_copy_like_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fauxiliary%2Fcoherence_copy_like_lib.rs?ref=2bc436e713d4816d66eeb5e0a1691491f68c1067", "patch": "@@ -1,20 +0,0 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![crate_type = \"rlib\"]\n-#![feature(fundamental)]\n-\n-pub trait MyCopy { }\n-impl MyCopy for i32 { }\n-\n-pub struct MyStruct<T>(T);\n-\n-#[fundamental]\n-pub struct MyFundamentalStruct<T>(T);"}, {"sha": "daa123849e4e797d539db3433a7908c97f18887f", "filename": "src/test/run-pass/re_rebalance_coherence/auxiliary/coherence_lib.rs", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/2bc436e713d4816d66eeb5e0a1691491f68c1067/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fauxiliary%2Fcoherence_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bc436e713d4816d66eeb5e0a1691491f68c1067/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fauxiliary%2Fcoherence_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fauxiliary%2Fcoherence_lib.rs?ref=2bc436e713d4816d66eeb5e0a1691491f68c1067", "patch": "@@ -1,25 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![crate_type=\"lib\"]\n-\n-pub trait Remote {\n-    fn foo(&self) { }\n-}\n-\n-pub trait Remote1<T> {\n-    fn foo(&self, t: T) { }\n-}\n-\n-pub trait Remote2<T, U> {\n-    fn foo(&self, t: T, u: U) { }\n-}\n-\n-pub struct Pair<T,U>(T,U);"}, {"sha": "c436901a34f08a8e9bd7a7f7ff7508e4c973120a", "filename": "src/test/run-pass/re_rebalance_coherence/coherence-bigint-int.rs", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/2bc436e713d4816d66eeb5e0a1691491f68c1067/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-bigint-int.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bc436e713d4816d66eeb5e0a1691491f68c1067/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-bigint-int.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-bigint-int.rs?ref=2bc436e713d4816d66eeb5e0a1691491f68c1067", "patch": "@@ -1,25 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![feature(re_rebalance_coherence)]\n-\n-// run-pass\n-// aux-build:coherence_lib.rs\n-\n-// pretty-expanded FIXME #23616\n-\n-extern crate coherence_lib as lib;\n-use lib::Remote1;\n-\n-pub struct BigInt;\n-\n-impl Remote1<BigInt> for isize { }\n-\n-fn main() { }"}, {"sha": "67fb9d1d335cbf50a7a14b5397aa80949efd3a64", "filename": "src/test/run-pass/re_rebalance_coherence/coherence-bigint-vecint.rs", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/2bc436e713d4816d66eeb5e0a1691491f68c1067/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-bigint-vecint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bc436e713d4816d66eeb5e0a1691491f68c1067/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-bigint-vecint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-bigint-vecint.rs?ref=2bc436e713d4816d66eeb5e0a1691491f68c1067", "patch": "@@ -1,25 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![feature(re_rebalance_coherence)]\n-\n-// run-pass\n-// aux-build:coherence_lib.rs\n-\n-// pretty-expanded FIXME #23616\n-\n-extern crate coherence_lib as lib;\n-use lib::Remote1;\n-\n-pub struct BigInt;\n-\n-impl Remote1<BigInt> for Vec<isize> { }\n-\n-fn main() { }"}, {"sha": "7f8f27f39b1b12e42cd1989bcf5018f1bccf580f", "filename": "src/test/run-pass/re_rebalance_coherence/coherence-blanket.rs", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/2bc436e713d4816d66eeb5e0a1691491f68c1067/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-blanket.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bc436e713d4816d66eeb5e0a1691491f68c1067/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-blanket.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-blanket.rs?ref=2bc436e713d4816d66eeb5e0a1691491f68c1067", "patch": "@@ -1,27 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// run-pass\n-#![allow(unused_imports)]\n-#![feature(re_rebalance_coherence)]\n-// aux-build:coherence_lib.rs\n-\n-// pretty-expanded FIXME #23616\n-\n-extern crate coherence_lib as lib;\n-use lib::Remote1;\n-\n-pub trait Local {\n-    fn foo(&self) { }\n-}\n-\n-impl<T> Local for T { }\n-\n-fn main() { }"}, {"sha": "5e0d61884f91762667209d70c1d63dbeaf2e692c", "filename": "src/test/run-pass/re_rebalance_coherence/coherence-covered-type-parameter.rs", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/2bc436e713d4816d66eeb5e0a1691491f68c1067/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-covered-type-parameter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bc436e713d4816d66eeb5e0a1691491f68c1067/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-covered-type-parameter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-covered-type-parameter.rs?ref=2bc436e713d4816d66eeb5e0a1691491f68c1067", "patch": "@@ -1,25 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// run-pass\n-#![allow(dead_code)]\n-#![feature(re_rebalance_coherence)]\n-// aux-build:coherence_lib.rs\n-\n-// pretty-expanded FIXME #23616\n-\n-extern crate coherence_lib as lib;\n-use lib::Remote;\n-\n-struct Foo<T>(T);\n-\n-impl<T> Remote for Foo<T> { }\n-\n-fn main() { }"}, {"sha": "2f8cbc032f2fb00fcb710eb46382571eeb562b12", "filename": "src/test/run-pass/re_rebalance_coherence/coherence-impl-in-fn.rs", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/2bc436e713d4816d66eeb5e0a1691491f68c1067/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-impl-in-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bc436e713d4816d66eeb5e0a1691491f68c1067/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-impl-in-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-impl-in-fn.rs?ref=2bc436e713d4816d66eeb5e0a1691491f68c1067", "patch": "@@ -1,25 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// run-pass\n-#![allow(dead_code)]\n-#![allow(non_camel_case_types)]\n-#![feature(re_rebalance_coherence)]\n-\n-pub fn main() {\n-    #[derive(Copy, Clone)]\n-    enum x { foo }\n-    impl ::std::cmp::PartialEq for x {\n-        fn eq(&self, other: &x) -> bool {\n-            (*self) as isize == (*other) as isize\n-        }\n-        fn ne(&self, other: &x) -> bool { !(*self).eq(other) }\n-    }\n-}"}, {"sha": "b19bede74410627b186187aba8e81c8a4d198f7f", "filename": "src/test/run-pass/re_rebalance_coherence/coherence-iterator-vec-any-elem.rs", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/2bc436e713d4816d66eeb5e0a1691491f68c1067/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-iterator-vec-any-elem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bc436e713d4816d66eeb5e0a1691491f68c1067/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-iterator-vec-any-elem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-iterator-vec-any-elem.rs?ref=2bc436e713d4816d66eeb5e0a1691491f68c1067", "patch": "@@ -1,25 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// run-pass\n-#![allow(dead_code)]\n-#![feature(re_rebalance_coherence)]\n-// aux-build:coherence_lib.rs\n-\n-// pretty-expanded FIXME #23616\n-\n-extern crate coherence_lib as lib;\n-use lib::Remote1;\n-\n-struct Foo<T>(T);\n-\n-impl<T,U> Remote1<U> for Foo<T> { }\n-\n-fn main() { }"}, {"sha": "5ce71f5d422738a5059d80931a80671cec559fde", "filename": "src/test/run-pass/re_rebalance_coherence/coherence-iterator-vec.rs", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/2bc436e713d4816d66eeb5e0a1691491f68c1067/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-iterator-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bc436e713d4816d66eeb5e0a1691491f68c1067/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-iterator-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-iterator-vec.rs?ref=2bc436e713d4816d66eeb5e0a1691491f68c1067", "patch": "@@ -1,25 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// run-pass\n-#![allow(dead_code)]\n-#![feature(re_rebalance_coherence)]\n-// aux-build:coherence_lib.rs\n-\n-// pretty-expanded FIXME #23616\n-\n-extern crate coherence_lib as lib;\n-use lib::Remote1;\n-\n-struct Foo<T>(T);\n-\n-impl<T> Remote1<T> for Foo<T> { }\n-\n-fn main() { }"}, {"sha": "6dc1da3376b15eec3957a43a7e2fb80727372733", "filename": "src/test/run-pass/re_rebalance_coherence/coherence-multidispatch-tuple.rs", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/2bc436e713d4816d66eeb5e0a1691491f68c1067/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-multidispatch-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bc436e713d4816d66eeb5e0a1691491f68c1067/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-multidispatch-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-multidispatch-tuple.rs?ref=2bc436e713d4816d66eeb5e0a1691491f68c1067", "patch": "@@ -1,35 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// run-pass\n-#![allow(unused_imports)]\n-#![feature(re_rebalance_coherence)]\n-// pretty-expanded FIXME #23616\n-\n-use std::fmt::Debug;\n-use std::default::Default;\n-\n-// Test that an impl for homogeneous pairs does not conflict with a\n-// heterogeneous pair.\n-\n-trait MyTrait {\n-    fn get(&self) -> usize;\n-}\n-\n-impl<T> MyTrait for (T,T) {\n-    fn get(&self) -> usize { 0 }\n-}\n-\n-impl MyTrait for (usize,isize) {\n-    fn get(&self) -> usize { 0 }\n-}\n-\n-fn main() {\n-}"}, {"sha": "5e1a0e39e234e7ac6a46cbf3d53a981ba49c119f", "filename": "src/test/run-pass/re_rebalance_coherence/coherence-negative-impls-safe.rs", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/2bc436e713d4816d66eeb5e0a1691491f68c1067/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-negative-impls-safe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bc436e713d4816d66eeb5e0a1691491f68c1067/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-negative-impls-safe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-negative-impls-safe.rs?ref=2bc436e713d4816d66eeb5e0a1691491f68c1067", "patch": "@@ -1,24 +0,0 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// run-pass\n-#![allow(dead_code)]\n-// pretty-expanded FIXME #23616\n-\n-#![feature(optin_builtin_traits)]\n-#![feature(re_rebalance_coherence)]\n-\n-use std::marker::Send;\n-\n-struct TestType;\n-\n-impl !Send for TestType {}\n-\n-fn main() {}"}, {"sha": "651e595bde1202ca9a5598f72ed1ff35b4bbc78b", "filename": "src/test/run-pass/re_rebalance_coherence/coherence-rfc447-constrained.rs", "status": "removed", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/2bc436e713d4816d66eeb5e0a1691491f68c1067/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-rfc447-constrained.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bc436e713d4816d66eeb5e0a1691491f68c1067/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-rfc447-constrained.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-rfc447-constrained.rs?ref=2bc436e713d4816d66eeb5e0a1691491f68c1067", "patch": "@@ -1,34 +0,0 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![feature(re_rebalance_coherence)]\n-\n-// run-pass\n-// check that trait matching can handle impls whose types are only\n-// constrained by a projection.\n-\n-trait IsU32 {}\n-impl IsU32 for u32 {}\n-\n-trait Mirror { type Image: ?Sized; }\n-impl<T: ?Sized> Mirror for T { type Image = T; }\n-\n-trait Bar {}\n-impl<U: Mirror, V: Mirror<Image=L>, L: Mirror<Image=U>> Bar for V\n-    where U::Image: IsU32 {}\n-\n-trait Foo { fn name() -> &'static str; }\n-impl Foo for u64 { fn name() -> &'static str { \"u64\" } }\n-impl<T: Bar> Foo for T { fn name() -> &'static str { \"Bar\" }}\n-\n-fn main() {\n-    assert_eq!(<u64 as Foo>::name(), \"u64\");\n-    assert_eq!(<u32 as Foo>::name(), \"Bar\");\n-}"}, {"sha": "d9a9f580cfaf6433300860805109ca6b1bfddc2a", "filename": "src/test/run-pass/re_rebalance_coherence/coherence-subtyping.rs", "status": "removed", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/2bc436e713d4816d66eeb5e0a1691491f68c1067/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-subtyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bc436e713d4816d66eeb5e0a1691491f68c1067/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-subtyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-subtyping.rs?ref=2bc436e713d4816d66eeb5e0a1691491f68c1067", "patch": "@@ -1,51 +0,0 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![feature(re_rebalance_coherence)]\n-\n-// run-pass\n-// Test that two distinct impls which match subtypes of one another\n-// yield coherence errors (or not) depending on the variance.\n-\n-trait Contravariant {\n-    fn foo(&self) { }\n-}\n-\n-impl Contravariant for for<'a,'b> fn(&'a u8, &'b u8) -> &'a u8 {\n-}\n-\n-impl Contravariant for for<'a> fn(&'a u8, &'a u8) -> &'a u8 {\n-}\n-\n-///////////////////////////////////////////////////////////////////////////\n-\n-trait Covariant {\n-    fn foo(&self) { }\n-}\n-\n-impl Covariant for for<'a,'b> fn(&'a u8, &'b u8) -> &'a u8 {\n-}\n-\n-impl Covariant for for<'a> fn(&'a u8, &'a u8) -> &'a u8 {\n-}\n-\n-///////////////////////////////////////////////////////////////////////////\n-\n-trait Invariant {\n-    fn foo(&self) { }\n-}\n-\n-impl Invariant for for<'a,'b> fn(&'a u8, &'b u8) -> &'a u8 {\n-}\n-\n-impl Invariant for for<'a> fn(&'a u8, &'a u8) -> &'a u8 {\n-}\n-\n-fn main() { }"}, {"sha": "a7d3602a3cc6bbefabae9b71cfd23511a29518cf", "filename": "src/test/run-pass/re_rebalance_coherence/coherence-where-clause.rs", "status": "removed", "additions": 0, "deletions": 49, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/2bc436e713d4816d66eeb5e0a1691491f68c1067/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-where-clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bc436e713d4816d66eeb5e0a1691491f68c1067/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-where-clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence-where-clause.rs?ref=2bc436e713d4816d66eeb5e0a1691491f68c1067", "patch": "@@ -1,49 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![feature(re_rebalance_coherence)]\n-\n-// run-pass\n-use std::fmt::Debug;\n-use std::default::Default;\n-\n-trait MyTrait {\n-    fn get(&self) -> Self;\n-}\n-\n-impl<T> MyTrait for T\n-    where T : Default\n-{\n-    fn get(&self) -> T {\n-        Default::default()\n-    }\n-}\n-\n-#[derive(Clone, Copy, Debug, PartialEq)]\n-struct MyType {\n-    dummy: usize\n-}\n-\n-impl MyTrait for MyType {\n-    fn get(&self) -> MyType { (*self).clone() }\n-}\n-\n-fn test_eq<M>(m: M, n: M)\n-where M : MyTrait + Debug + PartialEq\n-{\n-    assert_eq!(m.get(), n);\n-}\n-\n-pub fn main() {\n-    test_eq(0_usize, 0_usize);\n-\n-    let value = MyType { dummy: 256 + 22 };\n-    test_eq(value, value);\n-}"}, {"sha": "221095b148e0cffab90ca81903c14f6b4ca2e341", "filename": "src/test/run-pass/re_rebalance_coherence/coherence_copy_like.rs", "status": "removed", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/2bc436e713d4816d66eeb5e0a1691491f68c1067/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence_copy_like.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bc436e713d4816d66eeb5e0a1691491f68c1067/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence_copy_like.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fre_rebalance_coherence%2Fcoherence_copy_like.rs?ref=2bc436e713d4816d66eeb5e0a1691491f68c1067", "patch": "@@ -1,31 +0,0 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// run-pass\n-#![allow(dead_code)]\n-#![feature(re_rebalance_coherence)]\n-\n-// Test that we are able to introduce a negative constraint that\n-// `MyType: !MyTrait` along with other \"fundamental\" wrappers.\n-\n-// aux-build:coherence_copy_like_lib.rs\n-\n-extern crate coherence_copy_like_lib as lib;\n-\n-struct MyType { x: i32 }\n-\n-trait MyTrait { }\n-impl<T: lib::MyCopy> MyTrait for T { }\n-impl MyTrait for MyType { }\n-impl<'a> MyTrait for &'a MyType { }\n-impl MyTrait for Box<MyType> { }\n-impl<'a> MyTrait for &'a Box<MyType> { }\n-\n-fn main() { }"}]}