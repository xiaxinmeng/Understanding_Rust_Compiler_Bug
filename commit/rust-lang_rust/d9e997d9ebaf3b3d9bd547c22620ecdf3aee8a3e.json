{"sha": "d9e997d9ebaf3b3d9bd547c22620ecdf3aee8a3e", "node_id": "C_kwDOAAsO6NoAKGQ5ZTk5N2Q5ZWJhZjNiM2Q5YmQ1NDdjMjI2MjBlY2RmM2FlZThhM2U", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-12-10T23:56:21Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-12-11T10:08:46Z"}, "message": "Remove useless variant.", "tree": {"sha": "98b2842ff774e1bd0562cd7b2ece064a20e75337", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98b2842ff774e1bd0562cd7b2ece064a20e75337"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d9e997d9ebaf3b3d9bd547c22620ecdf3aee8a3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d9e997d9ebaf3b3d9bd547c22620ecdf3aee8a3e", "html_url": "https://github.com/rust-lang/rust/commit/d9e997d9ebaf3b3d9bd547c22620ecdf3aee8a3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d9e997d9ebaf3b3d9bd547c22620ecdf3aee8a3e/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a66a704b2c3d30ff07d89380ebb9ba3de3b3182", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a66a704b2c3d30ff07d89380ebb9ba3de3b3182", "html_url": "https://github.com/rust-lang/rust/commit/4a66a704b2c3d30ff07d89380ebb9ba3de3b3182"}], "stats": {"total": 22, "additions": 1, "deletions": 21}, "files": [{"sha": "3c79020523a9fea2f99e036dc22811c0f2b7c31c", "filename": "compiler/rustc_lint/src/context.rs", "status": "modified", "additions": 1, "deletions": 20, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d9e997d9ebaf3b3d9bd547c22620ecdf3aee8a3e/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9e997d9ebaf3b3d9bd547c22620ecdf3aee8a3e/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs?ref=d9e997d9ebaf3b3d9bd547c22620ecdf3aee8a3e", "patch": "@@ -22,9 +22,7 @@ use ast::util::unicode::TEXT_FLOW_CONTROL_CHARS;\n use rustc_ast as ast;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::sync;\n-use rustc_errors::{\n-    add_elided_lifetime_in_path_suggestion, struct_span_err, Applicability, SuggestionStyle,\n-};\n+use rustc_errors::{struct_span_err, Applicability, SuggestionStyle};\n use rustc_hir as hir;\n use rustc_hir::def::Res;\n use rustc_hir::def_id::{CrateNum, DefId};\n@@ -670,23 +668,6 @@ pub trait LintContext: Sized {\n                 ) => {\n                     db.span_note(span_def, \"the macro is defined here\");\n                 }\n-                BuiltinLintDiagnostics::ElidedLifetimesInPaths(\n-                    n,\n-                    path_span,\n-                    incl_angl_brckt,\n-                    insertion_span,\n-                    anon_lts,\n-                ) => {\n-                    add_elided_lifetime_in_path_suggestion(\n-                        sess.source_map(),\n-                        &mut db,\n-                        n,\n-                        path_span,\n-                        incl_angl_brckt,\n-                        insertion_span,\n-                        anon_lts,\n-                    );\n-                }\n                 BuiltinLintDiagnostics::UnknownCrateTypes(span, note, sugg) => {\n                     db.span_suggestion(span, &note, sugg, Applicability::MaybeIncorrect);\n                 }"}, {"sha": "3f504d75dfc92120bee05a736400105e181ca579", "filename": "compiler/rustc_lint_defs/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d9e997d9ebaf3b3d9bd547c22620ecdf3aee8a3e/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9e997d9ebaf3b3d9bd547c22620ecdf3aee8a3e/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs?ref=d9e997d9ebaf3b3d9bd547c22620ecdf3aee8a3e", "patch": "@@ -289,7 +289,6 @@ pub enum BuiltinLintDiagnostics {\n     AbsPathWithModule(Span),\n     ProcMacroDeriveResolutionFallback(Span),\n     MacroExpandedMacroExportsAccessedByAbsolutePaths(Span),\n-    ElidedLifetimesInPaths(usize, Span, bool, Span, String),\n     UnknownCrateTypes(Span, String, String),\n     UnusedImports(String, Vec<(Span, String)>),\n     RedundantImport(Vec<(Span, bool)>, Ident),"}]}