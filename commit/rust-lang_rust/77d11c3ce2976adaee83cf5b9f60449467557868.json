{"sha": "77d11c3ce2976adaee83cf5b9f60449467557868", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3ZDExYzNjZTI5NzZhZGFlZTgzY2Y1YjlmNjA0NDk0Njc1NTc4Njg=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-09-04T17:54:07Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-09-06T21:40:07Z"}, "message": "rustbuild: Build tests with LLD if `use-lld = true` was passed", "tree": {"sha": "27158b32a187eee66a9083c863ba84e1c9e79a0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27158b32a187eee66a9083c863ba84e1c9e79a0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77d11c3ce2976adaee83cf5b9f60449467557868", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77d11c3ce2976adaee83cf5b9f60449467557868", "html_url": "https://github.com/rust-lang/rust/commit/77d11c3ce2976adaee83cf5b9f60449467557868", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77d11c3ce2976adaee83cf5b9f60449467557868/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d74e880061c250936105125a2ffa901f315aaaa", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d74e880061c250936105125a2ffa901f315aaaa", "html_url": "https://github.com/rust-lang/rust/commit/5d74e880061c250936105125a2ffa901f315aaaa"}], "stats": {"total": 26, "additions": 11, "deletions": 15}, "files": [{"sha": "33b03d57dd43c21c10af8cfe3aaae743606e4ddc", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/77d11c3ce2976adaee83cf5b9f60449467557868/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77d11c3ce2976adaee83cf5b9f60449467557868/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=77d11c3ce2976adaee83cf5b9f60449467557868", "patch": "@@ -755,7 +755,7 @@ impl<'a> Builder<'a> {\n         cmd.env_remove(\"MAKEFLAGS\");\n         cmd.env_remove(\"MFLAGS\");\n \n-        if let Some(linker) = self.linker(compiler.host, true) {\n+        if let Some(linker) = self.linker(compiler.host) {\n             cmd.env(\"RUSTC_TARGET_LINKER\", linker);\n         }\n         cmd\n@@ -1041,11 +1041,11 @@ impl<'a> Builder<'a> {\n             }\n         }\n \n-        if let Some(host_linker) = self.linker(compiler.host, true) {\n+        if let Some(host_linker) = self.linker(compiler.host) {\n             cargo.env(\"RUSTC_HOST_LINKER\", host_linker);\n         }\n \n-        if let Some(target_linker) = self.linker(target, true) {\n+        if let Some(target_linker) = self.linker(target) {\n             let target = crate::envify(&target.triple);\n             cargo.env(&format!(\"CARGO_TARGET_{}_LINKER\", target), target_linker);\n         }"}, {"sha": "642f1ea9c009561e8851eff01a908c92659b46f7", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/77d11c3ce2976adaee83cf5b9f60449467557868/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77d11c3ce2976adaee83cf5b9f60449467557868/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=77d11c3ce2976adaee83cf5b9f60449467557868", "patch": "@@ -850,7 +850,7 @@ impl Build {\n     }\n \n     /// Returns the path to the linker for the given target if it needs to be overridden.\n-    fn linker(&self, target: TargetSelection, can_use_lld: bool) -> Option<&Path> {\n+    fn linker(&self, target: TargetSelection) -> Option<&Path> {\n         if let Some(linker) = self.config.target_config.get(&target).and_then(|c| c.linker.as_ref())\n         {\n             Some(linker)\n@@ -863,12 +863,9 @@ impl Build {\n             && !target.contains(\"msvc\")\n         {\n             Some(self.cc(target))\n-        } else if target.contains(\"msvc\")\n-            && can_use_lld\n-            && self.config.use_lld\n-            && self.build == target\n-        {\n-            // Currently we support using LLD directly via `rust.use_lld` option only with MSVC\n+        } else if target.contains(\"msvc\") && self.config.use_lld && self.build == target {\n+            // `rust.use_lld` means using LLD directly only for MSVC, for other targets it only\n+            // adds `-fuse-ld=lld` to already selected linker.\n             Some(&self.initial_lld)\n         } else {\n             None"}, {"sha": "f7eb2aecc0dc8454da059c17f648b1441af7e90f", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/77d11c3ce2976adaee83cf5b9f60449467557868/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77d11c3ce2976adaee83cf5b9f60449467557868/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=77d11c3ce2976adaee83cf5b9f60449467557868", "patch": "@@ -600,7 +600,7 @@ impl Step for RustdocTheme {\n             .env(\"CFG_RELEASE_CHANNEL\", &builder.config.channel)\n             .env(\"RUSTDOC_REAL\", builder.rustdoc(self.compiler))\n             .env(\"RUSTC_BOOTSTRAP\", \"1\");\n-        if let Some(linker) = builder.linker(self.compiler.host, true) {\n+        if let Some(linker) = builder.linker(self.compiler.host) {\n             cmd.env(\"RUSTC_TARGET_LINKER\", linker);\n         }\n         try_run(builder, &mut cmd);\n@@ -1061,8 +1061,7 @@ impl Step for Compiletest {\n         flags.push(\"-Zunstable-options\".to_string());\n         flags.push(builder.config.cmd.rustc_args().join(\" \"));\n \n-        // Don't use LLD here since we want to test that rustc finds and uses a linker by itself.\n-        if let Some(linker) = builder.linker(target, false) {\n+        if let Some(linker) = builder.linker(target) {\n             cmd.arg(\"--linker\").arg(linker);\n         }\n "}, {"sha": "634c9ece3f5c8907c2611552e6daf36ac519ab35", "filename": "src/test/run-make-fulldeps/tools.mk", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/77d11c3ce2976adaee83cf5b9f60449467557868/src%2Ftest%2Frun-make-fulldeps%2Ftools.mk", "raw_url": "https://github.com/rust-lang/rust/raw/77d11c3ce2976adaee83cf5b9f60449467557868/src%2Ftest%2Frun-make-fulldeps%2Ftools.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Ftools.mk?ref=77d11c3ce2976adaee83cf5b9f60449467557868", "patch": "@@ -11,8 +11,8 @@ BARE_RUSTDOC := $(HOST_RPATH_ENV) '$(RUSTDOC)'\n RUSTC := $(BARE_RUSTC) --out-dir $(TMPDIR) -L $(TMPDIR) $(RUSTFLAGS)\n RUSTDOC := $(BARE_RUSTDOC) -L $(TARGET_RPATH_DIR)\n ifdef RUSTC_LINKER\n-RUSTC := $(RUSTC) -Clinker=$(RUSTC_LINKER)\n-RUSTDOC := $(RUSTDOC) -Clinker=$(RUSTC_LINKER)\n+RUSTC := $(RUSTC) -Clinker='$(RUSTC_LINKER)'\n+RUSTDOC := $(RUSTDOC) -Clinker='$(RUSTC_LINKER)'\n endif\n #CC := $(CC) -L $(TMPDIR)\n HTMLDOCCK := '$(PYTHON)' '$(S)/src/etc/htmldocck.py'"}]}