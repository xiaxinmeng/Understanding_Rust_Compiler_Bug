{"sha": "64f6e4f21ccd8e0ed1f4bb32abe525b4f6ab87c1", "node_id": "C_kwDOAAsO6NoAKDY0ZjZlNGYyMWNjZDhlMGVkMWY0YmIzMmFiZTUyNWI0ZjZhYjg3YzE", "commit": {"author": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2023-03-19T17:41:48Z"}, "committer": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2023-03-24T11:52:34Z"}, "message": "Fix bad suggestion for clone/is_some in field init shorthand", "tree": {"sha": "d60352a53dbd023376f88d50860b4c49f70fe274", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d60352a53dbd023376f88d50860b4c49f70fe274"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64f6e4f21ccd8e0ed1f4bb32abe525b4f6ab87c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64f6e4f21ccd8e0ed1f4bb32abe525b4f6ab87c1", "html_url": "https://github.com/rust-lang/rust/commit/64f6e4f21ccd8e0ed1f4bb32abe525b4f6ab87c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64f6e4f21ccd8e0ed1f4bb32abe525b4f6ab87c1/comments", "author": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c90eb4825a9faca0d6317292a452859f00d5b786", "url": "https://api.github.com/repos/rust-lang/rust/commits/c90eb4825a9faca0d6317292a452859f00d5b786", "html_url": "https://github.com/rust-lang/rust/commit/c90eb4825a9faca0d6317292a452859f00d5b786"}], "stats": {"total": 114, "additions": 104, "deletions": 10}, "files": [{"sha": "aa8767fc85c99f8a4415d75cdcf204811ed2f6db", "filename": "compiler/rustc_hir_typeck/src/fn_ctxt/suggestions.rs", "status": "modified", "additions": 19, "deletions": 10, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/64f6e4f21ccd8e0ed1f4bb32abe525b4f6ab87c1/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64f6e4f21ccd8e0ed1f4bb32abe525b4f6ab87c1/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fsuggestions.rs?ref=64f6e4f21ccd8e0ed1f4bb32abe525b4f6ab87c1", "patch": "@@ -985,13 +985,18 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 )\n                 .must_apply_modulo_regions()\n           {\n-              diag.span_suggestion_verbose(\n-                  expr.span.shrink_to_hi(),\n-                  \"consider using clone here\",\n-                  \".clone()\",\n-                  Applicability::MachineApplicable,\n-              );\n-              return true;\n+            let suggestion = match self.maybe_get_struct_pattern_shorthand_field(expr) {\n+                Some(ident) => format!(\": {}.clone()\", ident),\n+                None => \".clone()\".to_string()\n+            };\n+\n+            diag.span_suggestion_verbose(\n+                expr.span.shrink_to_hi(),\n+                \"consider using clone here\",\n+                suggestion,\n+                Applicability::MachineApplicable,\n+            );\n+            return true;\n           }\n         false\n     }\n@@ -1153,13 +1158,17 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             return false;\n         }\n \n-        diag.span_suggestion(\n+        let suggestion = match self.maybe_get_struct_pattern_shorthand_field(expr) {\n+            Some(ident) => format!(\": {}.is_some()\", ident),\n+            None => \".is_some()\".to_string(),\n+        };\n+\n+        diag.span_suggestion_verbose(\n             expr.span.shrink_to_hi(),\n             \"use `Option::is_some` to test if the `Option` has a value\",\n-            \".is_some()\",\n+            suggestion,\n             Applicability::MachineApplicable,\n         );\n-\n         true\n     }\n "}, {"sha": "9d15c4a8fcb9088579cb0b2f2accce92d56b495e", "filename": "tests/ui/suggestions/issue-108470.fixed", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/64f6e4f21ccd8e0ed1f4bb32abe525b4f6ab87c1/tests%2Fui%2Fsuggestions%2Fissue-108470.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/64f6e4f21ccd8e0ed1f4bb32abe525b4f6ab87c1/tests%2Fui%2Fsuggestions%2Fissue-108470.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fissue-108470.fixed?ref=64f6e4f21ccd8e0ed1f4bb32abe525b4f6ab87c1", "patch": "@@ -0,0 +1,29 @@\n+// run-rustfix\n+#![allow(dead_code)]\n+\n+struct Foo {\n+    t: Thing\n+}\n+\n+#[derive(Clone)]\n+struct Thing;\n+\n+fn test_clone() {\n+    let t = &Thing;\n+    let _f = Foo {\n+        t: t.clone() //~ ERROR mismatched types\n+    };\n+}\n+\n+struct Bar {\n+    t: bool\n+}\n+\n+fn test_is_some() {\n+    let t = Option::<i32>::Some(1);\n+    let _f = Bar {\n+        t: t.is_some() //~ ERROR mismatched types\n+    };\n+}\n+\n+fn main() {}"}, {"sha": "bda39085d4db5d4ad68ce599eae27812e437042e", "filename": "tests/ui/suggestions/issue-108470.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/64f6e4f21ccd8e0ed1f4bb32abe525b4f6ab87c1/tests%2Fui%2Fsuggestions%2Fissue-108470.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64f6e4f21ccd8e0ed1f4bb32abe525b4f6ab87c1/tests%2Fui%2Fsuggestions%2Fissue-108470.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fissue-108470.rs?ref=64f6e4f21ccd8e0ed1f4bb32abe525b4f6ab87c1", "patch": "@@ -0,0 +1,29 @@\n+// run-rustfix\n+#![allow(dead_code)]\n+\n+struct Foo {\n+    t: Thing\n+}\n+\n+#[derive(Clone)]\n+struct Thing;\n+\n+fn test_clone() {\n+    let t = &Thing;\n+    let _f = Foo {\n+        t //~ ERROR mismatched types\n+    };\n+}\n+\n+struct Bar {\n+    t: bool\n+}\n+\n+fn test_is_some() {\n+    let t = Option::<i32>::Some(1);\n+    let _f = Bar {\n+        t //~ ERROR mismatched types\n+    };\n+}\n+\n+fn main() {}"}, {"sha": "4e561eca73426b04ee679d6ef814b1d7085a4c68", "filename": "tests/ui/suggestions/issue-108470.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/64f6e4f21ccd8e0ed1f4bb32abe525b4f6ab87c1/tests%2Fui%2Fsuggestions%2Fissue-108470.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/64f6e4f21ccd8e0ed1f4bb32abe525b4f6ab87c1/tests%2Fui%2Fsuggestions%2Fissue-108470.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fissue-108470.stderr?ref=64f6e4f21ccd8e0ed1f4bb32abe525b4f6ab87c1", "patch": "@@ -0,0 +1,27 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-108470.rs:14:9\n+   |\n+LL |         t\n+   |         ^ expected `Thing`, found `&Thing`\n+   |\n+help: consider using clone here\n+   |\n+LL |         t: t.clone()\n+   |          +++++++++++\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-108470.rs:25:9\n+   |\n+LL |         t\n+   |         ^ expected `bool`, found `Option<i32>`\n+   |\n+   = note: expected type `bool`\n+              found enum `Option<i32>`\n+help: use `Option::is_some` to test if the `Option` has a value\n+   |\n+LL |         t: t.is_some()\n+   |          +++++++++++++\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}]}