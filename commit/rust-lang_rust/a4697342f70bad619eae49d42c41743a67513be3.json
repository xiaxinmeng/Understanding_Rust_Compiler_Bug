{"sha": "a4697342f70bad619eae49d42c41743a67513be3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0Njk3MzQyZjcwYmFkNjE5ZWFlNDlkNDJjNDE3NDNhNjc1MTNiZTM=", "commit": {"author": {"name": "Micah Chalmer", "email": "micah@micahchalmer.net", "date": "2013-09-07T04:39:38Z"}, "committer": {"name": "Micah Chalmer", "email": "micah@micahchalmer.net", "date": "2013-09-07T04:39:38Z"}, "message": "Cover all cases for padding in paragraph fills as intended", "tree": {"sha": "649637ceaeff77d86d9a528b8dc070f11fc42af2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/649637ceaeff77d86d9a528b8dc070f11fc42af2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4697342f70bad619eae49d42c41743a67513be3", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4697342f70bad619eae49d42c41743a67513be3", "html_url": "https://github.com/rust-lang/rust/commit/a4697342f70bad619eae49d42c41743a67513be3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4697342f70bad619eae49d42c41743a67513be3/comments", "author": {"login": "MicahChalmer", "id": 698400, "node_id": "MDQ6VXNlcjY5ODQwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/698400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MicahChalmer", "html_url": "https://github.com/MicahChalmer", "followers_url": "https://api.github.com/users/MicahChalmer/followers", "following_url": "https://api.github.com/users/MicahChalmer/following{/other_user}", "gists_url": "https://api.github.com/users/MicahChalmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/MicahChalmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MicahChalmer/subscriptions", "organizations_url": "https://api.github.com/users/MicahChalmer/orgs", "repos_url": "https://api.github.com/users/MicahChalmer/repos", "events_url": "https://api.github.com/users/MicahChalmer/events{/privacy}", "received_events_url": "https://api.github.com/users/MicahChalmer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "MicahChalmer", "id": 698400, "node_id": "MDQ6VXNlcjY5ODQwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/698400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MicahChalmer", "html_url": "https://github.com/MicahChalmer", "followers_url": "https://api.github.com/users/MicahChalmer/followers", "following_url": "https://api.github.com/users/MicahChalmer/following{/other_user}", "gists_url": "https://api.github.com/users/MicahChalmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/MicahChalmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MicahChalmer/subscriptions", "organizations_url": "https://api.github.com/users/MicahChalmer/orgs", "repos_url": "https://api.github.com/users/MicahChalmer/repos", "events_url": "https://api.github.com/users/MicahChalmer/events{/privacy}", "received_events_url": "https://api.github.com/users/MicahChalmer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be4f19ae7c8b72669f1201c5d009e34af2d49228", "url": "https://api.github.com/repos/rust-lang/rust/commits/be4f19ae7c8b72669f1201c5d009e34af2d49228", "html_url": "https://github.com/rust-lang/rust/commit/be4f19ae7c8b72669f1201c5d009e34af2d49228"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "4bfdee50c6b968d93d8886fde40c3a26780953a8", "filename": "src/etc/emacs/rust-mode-tests.el", "status": "modified", "additions": 19, "deletions": 14, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/a4697342f70bad619eae49d42c41743a67513be3/src%2Fetc%2Femacs%2Frust-mode-tests.el", "raw_url": "https://github.com/rust-lang/rust/raw/a4697342f70bad619eae49d42c41743a67513be3/src%2Fetc%2Femacs%2Frust-mode-tests.el", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Femacs%2Frust-mode-tests.el?ref=a4697342f70bad619eae49d42c41743a67513be3", "patch": "@@ -51,20 +51,25 @@ Also, the result should be the same regardless of whether the code is at the beg\n          (padding-len (length padding)))\n     (loop\n      for pad-at-beginning from 0 to 1\n-     for pad-at-end from 0 to 1\n-     with padding-beginning = (if (= 0 pad-at-beginning) \"\" padding)\n-     with padding-end = (if (= 0 pad-at-end) \"\" padding)\n-     with padding-adjust = (* padding-len pad-at-beginning)\n-     with padding-beginning = (if (= 0 pad-at-beginning) \"\" padding)\n-     with padding-end = (if (= 0 pad-at-end) \"\" padding)\n-     for pos from (if (= 1 start-pos) 1 (+ padding-adjust start-pos)) to (+ end-pos padding-adjust)\n-     do (rust-test-manip-code\n-           (concat padding-beginning unfilled padding-end)\n-           pos\n-           (lambda () \n-             (let ((fill-column rust-test-fill-column))\n-               (fill-paragraph)))\n-           (concat padding-beginning expected padding-end)))))\n+     do (loop for pad-at-end from 0 to 1\n+           with padding-beginning = (if (= 0 pad-at-beginning) \"\" padding)\n+           with padding-end = (if (= 0 pad-at-end) \"\" padding)\n+           with padding-adjust = (* padding-len pad-at-beginning)\n+           with padding-beginning = (if (= 0 pad-at-beginning) \"\" padding)\n+           with padding-end = (if (= 0 pad-at-end) \"\" padding)\n+           ;; If we're adding space to the beginning, and our start position\n+           ;; is at the very beginning, we want to test within the added space.\n+           ;; Otherwise adjust the start and end for the beginning padding.\n+           with start-pos = (if (= 1 start-pos) 1 (+ padding-adjust start-pos))\n+           with end-pos = (+ end-pos padding-adjust)\n+           do (loop for pos from start-pos to end-pos\n+                 do (rust-test-manip-code\n+                     (concat padding-beginning unfilled padding-end)\n+                     pos\n+                     (lambda () \n+                       (let ((fill-column rust-test-fill-column))\n+                         (fill-paragraph)))\n+                     (concat padding-beginning expected padding-end)))))))\n \n (ert-deftest fill-paragraph-top-level-multi-line-style-doc-comment-second-line ()\n   (test-fill-paragraph "}]}