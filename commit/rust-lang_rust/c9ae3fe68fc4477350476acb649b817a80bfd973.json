{"sha": "c9ae3fe68fc4477350476acb649b817a80bfd973", "node_id": "C_kwDOAAsO6NoAKGM5YWUzZmU2OGZjNDQ3NzM1MDQ3NmFjYjY0OWI4MTdhODBiZmQ5NzM", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-03-24T10:11:31Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-03-24T10:11:31Z"}, "message": "Explicitly use CLOCK_MONOTONIC in futex_wait.\n\nInstant might be changed to use CLOCK_BOOTTIME at some point.", "tree": {"sha": "a11a9f393cf4a0e3069ad2b5bf97f272ba5481eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a11a9f393cf4a0e3069ad2b5bf97f272ba5481eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9ae3fe68fc4477350476acb649b817a80bfd973", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9ae3fe68fc4477350476acb649b817a80bfd973", "html_url": "https://github.com/rust-lang/rust/commit/c9ae3fe68fc4477350476acb649b817a80bfd973", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9ae3fe68fc4477350476acb649b817a80bfd973/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23badeb4cb22afd09e0264348800e44cda80af38", "url": "https://api.github.com/repos/rust-lang/rust/commits/23badeb4cb22afd09e0264348800e44cda80af38", "html_url": "https://github.com/rust-lang/rust/commit/23badeb4cb22afd09e0264348800e44cda80af38"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "b82a4a734402b7530161382af80cf3dcc60295bc", "filename": "library/std/src/sys/unix/futex.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c9ae3fe68fc4477350476acb649b817a80bfd973/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9ae3fe68fc4477350476acb649b817a80bfd973/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffutex.rs?ref=c9ae3fe68fc4477350476acb649b817a80bfd973", "patch": "@@ -9,13 +9,13 @@ use crate::time::Duration;\n \n #[cfg(any(target_os = \"linux\", target_os = \"android\"))]\n pub fn futex_wait(futex: &AtomicI32, expected: i32, timeout: Option<Duration>) -> bool {\n-    use super::time::Instant;\n+    use super::time::Timespec;\n     use crate::ptr::null;\n     use crate::sync::atomic::Ordering::Relaxed;\n \n     // Calculate the timeout as an absolute timespec.\n     let timespec =\n-        timeout.and_then(|d| Some(Instant::now().checked_add_duration(&d)?.as_timespec()));\n+        timeout.and_then(|d| Some(Timespec::now(libc::CLOCK_MONOTONIC).checked_add_duration(&d)?));\n \n     loop {\n         // No need to wait if the value already changed.\n@@ -31,7 +31,7 @@ pub fn futex_wait(futex: &AtomicI32, expected: i32, timeout: Option<Duration>) -\n                 futex as *const AtomicI32,\n                 libc::FUTEX_WAIT_BITSET | libc::FUTEX_PRIVATE_FLAG,\n                 expected,\n-                timespec.as_ref().map_or(null(), |d| d as *const libc::timespec),\n+                timespec.as_ref().map_or(null(), |t| &t.t as *const libc::timespec),\n                 null::<u32>(), // This argument is unused for FUTEX_WAIT_BITSET.\n                 !0u32,         // A full bitmask, to make it behave like a regular FUTEX_WAIT.\n             )"}]}