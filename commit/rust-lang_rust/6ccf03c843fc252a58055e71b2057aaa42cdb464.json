{"sha": "6ccf03c843fc252a58055e71b2057aaa42cdb464", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjY2YwM2M4NDNmYzI1MmE1ODA1NWU3MWIyMDU3YWFhNDJjZGI0NjQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-03-12T00:03:28Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-03-14T21:56:48Z"}, "message": "rustbuild: Fix 32-bit Windows build\n\nUnfortunately on i686-pc-windows-gnu LLVM's answer to `--host-target` is\n`x86_64-pc-windows-gnu` even though we're building in a 32-bit shell as well as\ncompiling 32-bit libraries. For now use Cargo's `HOST` environment variable to\ndetermine whether we're doing a cross compilation or not.", "tree": {"sha": "7461d44b3ff1e9853cebc2a9a6d9dc2d34600959", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7461d44b3ff1e9853cebc2a9a6d9dc2d34600959"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ccf03c843fc252a58055e71b2057aaa42cdb464", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ccf03c843fc252a58055e71b2057aaa42cdb464", "html_url": "https://github.com/rust-lang/rust/commit/6ccf03c843fc252a58055e71b2057aaa42cdb464", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ccf03c843fc252a58055e71b2057aaa42cdb464/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01118928fc2b280e96189ed394af749d65cbcffe", "url": "https://api.github.com/repos/rust-lang/rust/commits/01118928fc2b280e96189ed394af749d65cbcffe", "html_url": "https://github.com/rust-lang/rust/commit/01118928fc2b280e96189ed394af749d65cbcffe"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "dcfb518ba793815527411421cafe914845875474", "filename": "src/librustc_llvm/build.rs", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6ccf03c843fc252a58055e71b2057aaa42cdb464/src%2Flibrustc_llvm%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ccf03c843fc252a58055e71b2057aaa42cdb464/src%2Flibrustc_llvm%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Fbuild.rs?ref=6ccf03c843fc252a58055e71b2057aaa42cdb464", "patch": "@@ -47,14 +47,20 @@ fn main() {\n     // the host platform. This only really works if the host LLVM and target\n     // LLVM are compiled the same way, but for us that's typically the case.\n     //\n-    // We detect this cross compiling situation by asking llvm-config what it's\n-    // host-target is. If that's not the TARGET, then we're cross compiling.\n-    // This generally just means that we can't trust all the output of\n-    // llvm-config becaues it might be targeted for the host rather than the\n-    // target.\n+    // We *want* detect this cross compiling situation by asking llvm-config\n+    // what it's host-target is. If that's not the TARGET, then we're cross\n+    // compiling. Unfortunately `llvm-config` seems either be buggy, or we're\n+    // misconfiguring it, because the `i686-pc-windows-gnu` build of LLVM will\n+    // report itself with a `--host-target` of `x86_64-pc-windows-gnu`. This\n+    // tricks us into thinking we're doing a cross build when we aren't, so\n+    // havoc ensues.\n+    //\n+    // In any case, if we're cross compiling, this generally just means that we\n+    // can't trust all the output of llvm-config becaues it might be targeted\n+    // for the host rather than the target. As a result a bunch of blocks below\n+    // are gated on `if !is_crossed`\n     let target = env::var(\"TARGET\").unwrap();\n-    let host = output(Command::new(&llvm_config).arg(\"--host-target\"));\n-    let host = host.trim();\n+    let host = env::var(\"HOST\").unwrap();\n     let is_crossed = target != host;\n \n     let optional_components = [\"x86\", \"arm\", \"aarch64\", \"mips\", \"powerpc\","}]}