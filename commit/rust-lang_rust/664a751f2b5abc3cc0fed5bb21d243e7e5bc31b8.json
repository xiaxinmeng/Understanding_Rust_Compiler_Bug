{"sha": "664a751f2b5abc3cc0fed5bb21d243e7e5bc31b8", "node_id": "C_kwDOAAsO6NoAKDY2NGE3NTFmMmI1YWJjM2NjMGZlZDViYjIxZDI0M2U3ZTViYzMxYjg", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-06-15T12:29:13Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-06-15T12:29:13Z"}, "message": "fix: Clear proc-macro changed flag when reloading workspace", "tree": {"sha": "391e62b019480aa711078db98be2fdee2b278b0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/391e62b019480aa711078db98be2fdee2b278b0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/664a751f2b5abc3cc0fed5bb21d243e7e5bc31b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/664a751f2b5abc3cc0fed5bb21d243e7e5bc31b8", "html_url": "https://github.com/rust-lang/rust/commit/664a751f2b5abc3cc0fed5bb21d243e7e5bc31b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/664a751f2b5abc3cc0fed5bb21d243e7e5bc31b8/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "002447d6cbdb19b80c998792486b655f0bd53365", "url": "https://api.github.com/repos/rust-lang/rust/commits/002447d6cbdb19b80c998792486b655f0bd53365", "html_url": "https://github.com/rust-lang/rust/commit/002447d6cbdb19b80c998792486b655f0bd53365"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "69a03850b5cefb1313ef613a5ad474516c91a295", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/664a751f2b5abc3cc0fed5bb21d243e7e5bc31b8/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/664a751f2b5abc3cc0fed5bb21d243e7e5bc31b8/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=664a751f2b5abc3cc0fed5bb21d243e7e5bc31b8", "patch": "@@ -45,6 +45,7 @@ use crate::{\n \n pub(crate) fn handle_workspace_reload(state: &mut GlobalState, _: ()) -> Result<()> {\n     state.proc_macro_client = None;\n+    state.proc_macro_changed = false;\n     state.fetch_workspaces_queue.request_op(\"reload workspace request\".to_string());\n     state.fetch_build_data_queue.request_op(\"reload workspace request\".to_string());\n     Ok(())"}, {"sha": "62a446ce2a68ef124eba8736f0f77a338f772e7f", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/664a751f2b5abc3cc0fed5bb21d243e7e5bc31b8/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/664a751f2b5abc3cc0fed5bb21d243e7e5bc31b8/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=664a751f2b5abc3cc0fed5bb21d243e7e5bc31b8", "patch": "@@ -162,7 +162,7 @@ impl GlobalState {\n     }\n \n     pub(crate) fn fetch_build_data(&mut self, cause: Cause) {\n-        tracing::debug!(%cause, \"will fetch build data\");\n+        tracing::info!(%cause, \"will fetch build data\");\n         let workspaces = Arc::clone(&self.workspaces);\n         let config = self.config.cargo();\n         self.task_pool.handle.spawn_with_sender(move |sender| {"}, {"sha": "10063470f79f28adfcb65f01f4c245effb3fce25", "filename": "editors/code/src/ctx.ts", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/664a751f2b5abc3cc0fed5bb21d243e7e5bc31b8/editors%2Fcode%2Fsrc%2Fctx.ts", "raw_url": "https://github.com/rust-lang/rust/raw/664a751f2b5abc3cc0fed5bb21d243e7e5bc31b8/editors%2Fcode%2Fsrc%2Fctx.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fctx.ts?ref=664a751f2b5abc3cc0fed5bb21d243e7e5bc31b8", "patch": "@@ -77,10 +77,10 @@ export class Ctx {\n     }\n \n     setServerStatus(status: ServerStatusParams) {\n-        this.statusBar.tooltip = status.message ?? \"Ready\";\n         let icon = \"\";\n         switch (status.health) {\n             case \"ok\":\n+                this.statusBar.tooltip = status.message ?? \"Ready\";\n                 this.statusBar.command = undefined;\n                 this.statusBar.color = undefined;\n                 this.statusBar.backgroundColor = undefined;\n@@ -105,7 +105,7 @@ export class Ctx {\n                 break;\n         }\n         if (!status.quiescent) icon = \"$(sync~spin) \";\n-        this.statusBar.text = `${icon} rust-analyzer`;\n+        this.statusBar.text = `${icon}rust-analyzer`;\n     }\n \n     pushCleanup(d: Disposable) {"}]}