{"sha": "19ce66c1c12f1de38896081de005a8c0abb47b88", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5Y2U2NmMxYzEyZjFkZTM4ODk2MDgxZGUwMDVhOGMwYWJiNDdiODg=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-02-04T20:38:26Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-02-04T20:38:26Z"}, "message": "Re-cover use of unnecessary unwraps in macros", "tree": {"sha": "43975f964958c3ffa1894ec1b13dc58c71115810", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43975f964958c3ffa1894ec1b13dc58c71115810"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19ce66c1c12f1de38896081de005a8c0abb47b88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19ce66c1c12f1de38896081de005a8c0abb47b88", "html_url": "https://github.com/rust-lang/rust/commit/19ce66c1c12f1de38896081de005a8c0abb47b88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19ce66c1c12f1de38896081de005a8c0abb47b88/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "514b1bc2af3b841552e713cf431af506d2708f9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/514b1bc2af3b841552e713cf431af506d2708f9d", "html_url": "https://github.com/rust-lang/rust/commit/514b1bc2af3b841552e713cf431af506d2708f9d"}], "stats": {"total": 51, "additions": 36, "deletions": 15}, "files": [{"sha": "4fd421e4af94d6cbb60d760e5054a6f93f6c3ff9", "filename": "clippy_lints/src/unwrap.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/19ce66c1c12f1de38896081de005a8c0abb47b88/clippy_lints%2Fsrc%2Funwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19ce66c1c12f1de38896081de005a8c0abb47b88/clippy_lints%2Fsrc%2Funwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funwrap.rs?ref=19ce66c1c12f1de38896081de005a8c0abb47b88", "patch": "@@ -1,6 +1,7 @@\n-use crate::utils::{higher::if_block, in_macro, match_type, paths, span_lint_and_then, usage::is_potentially_mutated};\n+use crate::utils::{higher::if_block, match_type, paths, span_lint_and_then, usage::is_potentially_mutated};\n use if_chain::if_chain;\n use rustc::hir::map::Map;\n+use rustc::lint::in_external_macro;\n use rustc_hir::intravisit::*;\n use rustc_hir::*;\n use rustc_lint::{LateContext, LateLintPass};\n@@ -139,7 +140,7 @@ impl<'a, 'tcx> Visitor<'tcx> for UnwrappableVariablesVisitor<'a, 'tcx> {\n \n     fn visit_expr(&mut self, expr: &'tcx Expr<'_>) {\n         // Shouldn't lint when `expr` is in macro.\n-        if in_macro(expr.span) {\n+        if in_external_macro(self.cx.tcx.sess, expr.span) {\n             return;\n         }\n         if let Some((cond, then, els)) = if_block(&expr) {"}, {"sha": "b0fc26ff76de559b36b13ee2170f1607d93f1bf8", "filename": "tests/ui/checked_unwrap/simple_conditionals.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/19ce66c1c12f1de38896081de005a8c0abb47b88/tests%2Fui%2Fchecked_unwrap%2Fsimple_conditionals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19ce66c1c12f1de38896081de005a8c0abb47b88/tests%2Fui%2Fchecked_unwrap%2Fsimple_conditionals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchecked_unwrap%2Fsimple_conditionals.rs?ref=19ce66c1c12f1de38896081de005a8c0abb47b88", "patch": "@@ -1,6 +1,14 @@\n #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n #![allow(clippy::if_same_then_else)]\n \n+macro_rules! m {\n+    ($a:expr) => {\n+        if $a.is_some() {\n+            $a.unwrap(); // unnecessary\n+        }\n+    };\n+}\n+\n fn main() {\n     let x = Some(());\n     if x.is_some() {\n@@ -13,6 +21,7 @@ fn main() {\n     } else {\n         x.unwrap(); // unnecessary\n     }\n+    m!(x);\n     let mut x: Result<(), ()> = Ok(());\n     if x.is_ok() {\n         x.unwrap(); // unnecessary"}, {"sha": "b226bd726403f1331bbc960b393c92166e7a5d88", "filename": "tests/ui/checked_unwrap/simple_conditionals.stderr", "status": "modified", "additions": 24, "deletions": 13, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/19ce66c1c12f1de38896081de005a8c0abb47b88/tests%2Fui%2Fchecked_unwrap%2Fsimple_conditionals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19ce66c1c12f1de38896081de005a8c0abb47b88/tests%2Fui%2Fchecked_unwrap%2Fsimple_conditionals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchecked_unwrap%2Fsimple_conditionals.stderr?ref=19ce66c1c12f1de38896081de005a8c0abb47b88", "patch": "@@ -1,5 +1,5 @@\n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/simple_conditionals.rs:7:9\n+  --> $DIR/simple_conditionals.rs:15:9\n    |\n LL |     if x.is_some() {\n    |        ----------- the check is happening here\n@@ -13,7 +13,7 @@ LL | #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/simple_conditionals.rs:9:9\n+  --> $DIR/simple_conditionals.rs:17:9\n    |\n LL |     if x.is_some() {\n    |        ----------- because of this check\n@@ -28,15 +28,15 @@ LL | #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/simple_conditionals.rs:12:9\n+  --> $DIR/simple_conditionals.rs:20:9\n    |\n LL |     if x.is_none() {\n    |        ----------- because of this check\n LL |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/simple_conditionals.rs:14:9\n+  --> $DIR/simple_conditionals.rs:22:9\n    |\n LL |     if x.is_none() {\n    |        ----------- the check is happening here\n@@ -45,15 +45,26 @@ LL |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/simple_conditionals.rs:18:9\n+  --> $DIR/simple_conditionals.rs:7:13\n+   |\n+LL |         if $a.is_some() {\n+   |            ------------ the check is happening here\n+LL |             $a.unwrap(); // unnecessary\n+   |             ^^^^^^^^^^^\n+...\n+LL |     m!(x);\n+   |     ------ in this macro invocation\n+\n+error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n+  --> $DIR/simple_conditionals.rs:27:9\n    |\n LL |     if x.is_ok() {\n    |        --------- the check is happening here\n LL |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: This call to `unwrap_err()` will always panic.\n-  --> $DIR/simple_conditionals.rs:19:9\n+  --> $DIR/simple_conditionals.rs:28:9\n    |\n LL |     if x.is_ok() {\n    |        --------- because of this check\n@@ -62,7 +73,7 @@ LL |         x.unwrap_err(); // will panic\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/simple_conditionals.rs:21:9\n+  --> $DIR/simple_conditionals.rs:30:9\n    |\n LL |     if x.is_ok() {\n    |        --------- because of this check\n@@ -71,7 +82,7 @@ LL |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/simple_conditionals.rs:22:9\n+  --> $DIR/simple_conditionals.rs:31:9\n    |\n LL |     if x.is_ok() {\n    |        --------- the check is happening here\n@@ -80,15 +91,15 @@ LL |         x.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/simple_conditionals.rs:25:9\n+  --> $DIR/simple_conditionals.rs:34:9\n    |\n LL |     if x.is_err() {\n    |        ---------- because of this check\n LL |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/simple_conditionals.rs:26:9\n+  --> $DIR/simple_conditionals.rs:35:9\n    |\n LL |     if x.is_err() {\n    |        ---------- the check is happening here\n@@ -97,7 +108,7 @@ LL |         x.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/simple_conditionals.rs:28:9\n+  --> $DIR/simple_conditionals.rs:37:9\n    |\n LL |     if x.is_err() {\n    |        ---------- the check is happening here\n@@ -106,13 +117,13 @@ LL |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: This call to `unwrap_err()` will always panic.\n-  --> $DIR/simple_conditionals.rs:29:9\n+  --> $DIR/simple_conditionals.rs:38:9\n    |\n LL |     if x.is_err() {\n    |        ---------- because of this check\n ...\n LL |         x.unwrap_err(); // will panic\n    |         ^^^^^^^^^^^^^^\n \n-error: aborting due to 12 previous errors\n+error: aborting due to 13 previous errors\n "}]}