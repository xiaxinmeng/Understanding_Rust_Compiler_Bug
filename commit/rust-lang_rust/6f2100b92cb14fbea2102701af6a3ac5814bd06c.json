{"sha": "6f2100b92cb14fbea2102701af6a3ac5814bd06c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmMjEwMGI5MmNiMTRmYmVhMjEwMjcwMWFmNmEzYWM1ODE0YmQwNmM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-03-06T06:14:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-03-06T06:14:11Z"}, "message": "Auto merge of #48509 - Phlosioneer:option-doc-change, r=TimNN\n\nSlight modification to the as_ref example of std::option::Option\n\nA user in a reddit thread was confused by the name of the variable\n\"num_as_int\"; they thought the example was trying to convert the\nstring \"10\" as if it were binary 2 by calling str::len(). In reality,\nthe example is simply demonstrating how to take an immutable reference\nto the value of an Option. The confusion comes from the coincidence\nthat the length of the string \"10\" is also its binary representation,\nand the implication from the variable names that a conversion was\noccuring (\"num_as_str\" to \"num_as_int\").\n\nThis PR changes the example number to 12 instead of 10, and changes\nthe variable name from \"num_as_int\" to \"num_length\" to better\ncommunicate what the example is doing.\n\nThe reddit thread:\nhttps://www.reddit.com/r/rust/comments/7zpvev/notyetawesome_rust_what_use_cases_would_you_like/dur39xw/", "tree": {"sha": "f7d8b613e7b197fafbeb6c6ca76ac11ca87e311e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7d8b613e7b197fafbeb6c6ca76ac11ca87e311e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f2100b92cb14fbea2102701af6a3ac5814bd06c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f2100b92cb14fbea2102701af6a3ac5814bd06c", "html_url": "https://github.com/rust-lang/rust/commit/6f2100b92cb14fbea2102701af6a3ac5814bd06c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f2100b92cb14fbea2102701af6a3ac5814bd06c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1733a61141d125beb45587dd89d54cd4a01cdd5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1733a61141d125beb45587dd89d54cd4a01cdd5a", "html_url": "https://github.com/rust-lang/rust/commit/1733a61141d125beb45587dd89d54cd4a01cdd5a"}, {"sha": "b7b3498ce86d025ed84b0daa9a28588190ac444a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7b3498ce86d025ed84b0daa9a28588190ac444a", "html_url": "https://github.com/rust-lang/rust/commit/b7b3498ce86d025ed84b0daa9a28588190ac444a"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "2b77ba39122790473235d7dcd4f6cfc532e72dfc", "filename": "src/libcore/option.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6f2100b92cb14fbea2102701af6a3ac5814bd06c/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f2100b92cb14fbea2102701af6a3ac5814bd06c/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=6f2100b92cb14fbea2102701af6a3ac5814bd06c", "patch": "@@ -233,11 +233,11 @@ impl<T> Option<T> {\n     /// [`usize`]: ../../std/primitive.usize.html\n     ///\n     /// ```\n-    /// let num_as_str: Option<String> = Some(\"10\".to_string());\n+    /// let text: Option<String> = Some(\"Hello, world!\".to_string());\n     /// // First, cast `Option<String>` to `Option<&String>` with `as_ref`,\n-    /// // then consume *that* with `map`, leaving `num_as_str` on the stack.\n-    /// let num_as_int: Option<usize> = num_as_str.as_ref().map(|n| n.len());\n-    /// println!(\"still can print num_as_str: {:?}\", num_as_str);\n+    /// // then consume *that* with `map`, leaving `text` on the stack.\n+    /// let text_length: Option<usize> = text.as_ref().map(|s| s.len());\n+    /// println!(\"still can print text: {:?}\", text);\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]"}]}