{"sha": "cb91c6f24dfd522d07a4c7db6294dca9fbc2d20d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiOTFjNmYyNGRmZDUyMmQwN2E0YzdkYjYyOTRkY2E5ZmJjMmQyMGQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-05-11T09:47:39Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-05-12T09:28:00Z"}, "message": "Fix indent in JS files", "tree": {"sha": "25e2b3c38bc0f17d503f769f251dd5fc031ed069", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25e2b3c38bc0f17d503f769f251dd5fc031ed069"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb91c6f24dfd522d07a4c7db6294dca9fbc2d20d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb91c6f24dfd522d07a4c7db6294dca9fbc2d20d", "html_url": "https://github.com/rust-lang/rust/commit/cb91c6f24dfd522d07a4c7db6294dca9fbc2d20d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb91c6f24dfd522d07a4c7db6294dca9fbc2d20d/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8b10692a0d9d50376eaea6985da0fd9e5d87eb7", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8b10692a0d9d50376eaea6985da0fd9e5d87eb7", "html_url": "https://github.com/rust-lang/rust/commit/d8b10692a0d9d50376eaea6985da0fd9e5d87eb7"}], "stats": {"total": 278, "additions": 140, "deletions": 138}, "files": [{"sha": "48ac307e3bac9fd402f0c1d320d4687d4fa0055d", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 139, "deletions": 137, "changes": 276, "blob_url": "https://github.com/rust-lang/rust/blob/cb91c6f24dfd522d07a4c7db6294dca9fbc2d20d/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/cb91c6f24dfd522d07a4c7db6294dca9fbc2d20d/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=cb91c6f24dfd522d07a4c7db6294dca9fbc2d20d", "patch": "@@ -156,152 +156,154 @@ function hideThemeButtonState() {\n     \"use strict\";\n \n     window.searchState = {\n-      loadingText: \"Loading search results...\",\n-      input: document.getElementsByClassName(\"search-input\")[0],\n-      outputElement: function() {\n-        return document.getElementById(\"search\");\n-      },\n-      title: null,\n-      titleBeforeSearch: document.title,\n-      timeout: null,\n-      // On the search screen, so you remain on the last tab you opened.\n-      //\n-      // 0 for \"In Names\"\n-      // 1 for \"In Parameters\"\n-      // 2 for \"In Return Types\"\n-      currentTab: 0,\n-      mouseMovedAfterSearch: true,\n-      clearInputTimeout: function() {\n-        if (searchState.timeout !== null) {\n-            clearTimeout(searchState.timeout);\n-            searchState.timeout = null;\n-        }\n-      },\n-      // Sets the focus on the search bar at the top of the page\n-      focus: function() {\n-          searchState.input.focus();\n-      },\n-      // Removes the focus from the search bar.\n-      defocus: function() {\n-          searchState.input.blur();\n-      },\n-      showResults: function(search) {\n-        if (search === null || typeof search === 'undefined') {\n-            search = searchState.outputElement();\n-        }\n-        addClass(main, \"hidden\");\n-        removeClass(search, \"hidden\");\n-        searchState.mouseMovedAfterSearch = false;\n-        document.title = searchState.title;\n-      },\n-      hideResults: function(search) {\n-        if (search === null || typeof search === 'undefined') {\n-            search = searchState.outputElement();\n-        }\n-        addClass(search, \"hidden\");\n-        removeClass(main, \"hidden\");\n-        document.title = searchState.titleBeforeSearch;\n-        // We also remove the query parameter from the URL.\n-        if (searchState.browserSupportsHistoryApi()) {\n-            history.replaceState(\"\", window.currentCrate + \" - Rust\",\n-                getNakedUrl() + window.location.hash);\n-        }\n-      },\n-      getQueryStringParams: function() {\n-        var params = {};\n-        window.location.search.substring(1).split(\"&\").\n-            map(function(s) {\n-                var pair = s.split(\"=\");\n-                params[decodeURIComponent(pair[0])] =\n-                    typeof pair[1] === \"undefined\" ? null : decodeURIComponent(pair[1]);\n-            });\n-        return params;\n-      },\n-      putBackSearch: function(search_input) {\n-        var search = searchState.outputElement();\n-        if (search_input.value !== \"\" && hasClass(search, \"hidden\")) {\n-            searchState.showResults(search);\n-            if (searchState.browserSupportsHistoryApi()) {\n-                var extra = \"?search=\" + encodeURIComponent(search_input.value);\n-                history.replaceState(search_input.value, \"\",\n-                    getNakedUrl() + extra + window.location.hash);\n+        loadingText: \"Loading search results...\",\n+        input: document.getElementsByClassName(\"search-input\")[0],\n+        outputElement: function() {\n+            return document.getElementById(\"search\");\n+        },\n+        title: null,\n+        titleBeforeSearch: document.title,\n+        timeout: null,\n+        // On the search screen, so you remain on the last tab you opened.\n+        //\n+        // 0 for \"In Names\"\n+        // 1 for \"In Parameters\"\n+        // 2 for \"In Return Types\"\n+        currentTab: 0,\n+        mouseMovedAfterSearch: true,\n+        clearInputTimeout: function() {\n+            if (searchState.timeout !== null) {\n+                clearTimeout(searchState.timeout);\n+                searchState.timeout = null;\n+            }\n+        },\n+        // Sets the focus on the search bar at the top of the page\n+        focus: function() {\n+            searchState.input.focus();\n+        },\n+        // Removes the focus from the search bar.\n+        defocus: function() {\n+            searchState.input.blur();\n+        },\n+        showResults: function(search) {\n+            if (search === null || typeof search === 'undefined') {\n+                search = searchState.outputElement();\n             }\n+            addClass(main, \"hidden\");\n+            removeClass(search, \"hidden\");\n+            searchState.mouseMovedAfterSearch = false;\n             document.title = searchState.title;\n-        }\n-      },\n-      browserSupportsHistoryApi: function() {\n-          return window.history && typeof window.history.pushState === \"function\";\n-      },\n-      setup: function() {\n-        var search_input = searchState.input;\n-        if (!searchState.input) {\n-            return;\n-        }\n-        function loadScript(url) {\n-            var script = document.createElement('script');\n-            script.src = url;\n-            document.head.append(script);\n-        }\n-\n-        var searchLoaded = false;\n-        function loadSearch() {\n-            if (!searchLoaded) {\n-                searchLoaded = true;\n-                loadScript(window.searchJS);\n-                loadScript(window.searchIndexJS);\n+        },\n+        hideResults: function(search) {\n+            if (search === null || typeof search === 'undefined') {\n+                search = searchState.outputElement();\n+            }\n+            addClass(search, \"hidden\");\n+            removeClass(main, \"hidden\");\n+            document.title = searchState.titleBeforeSearch;\n+            // We also remove the query parameter from the URL.\n+            if (searchState.browserSupportsHistoryApi()) {\n+                history.replaceState(\"\", window.currentCrate + \" - Rust\",\n+                    getNakedUrl() + window.location.hash);\n+            }\n+        },\n+        getQueryStringParams: function() {\n+            var params = {};\n+            window.location.search.substring(1).split(\"&\").\n+                map(function(s) {\n+                    var pair = s.split(\"=\");\n+                    params[decodeURIComponent(pair[0])] =\n+                        typeof pair[1] === \"undefined\" ? null : decodeURIComponent(pair[1]);\n+                });\n+            return params;\n+        },\n+        putBackSearch: function(search_input) {\n+            var search = searchState.outputElement();\n+            if (search_input.value !== \"\" && hasClass(search, \"hidden\")) {\n+                searchState.showResults(search);\n+                if (searchState.browserSupportsHistoryApi()) {\n+                    var extra = \"?search=\" + encodeURIComponent(search_input.value);\n+                    history.replaceState(search_input.value, \"\",\n+                        getNakedUrl() + extra + window.location.hash);\n+                }\n+                document.title = searchState.title;\n+            }\n+        },\n+        browserSupportsHistoryApi: function() {\n+            return window.history && typeof window.history.pushState === \"function\";\n+        },\n+        setup: function() {\n+            var search_input = searchState.input;\n+            if (!searchState.input) {\n+                return;\n+            }\n+            function loadScript(url) {\n+                var script = document.createElement('script');\n+                script.src = url;\n+                document.head.append(script);\n             }\n-        }\n \n-        search_input.addEventListener(\"focus\", function() {\n-            searchState.putBackSearch(this);\n-            search_input.origPlaceholder = searchState.input.placeholder;\n-            search_input.placeholder = \"Type your search here.\";\n-            loadSearch();\n-        });\n-        search_input.addEventListener(\"blur\", function() {\n-            search_input.placeholder = searchState.input.origPlaceholder;\n-        });\n+            var searchLoaded = false;\n+            function loadSearch() {\n+                if (!searchLoaded) {\n+                    searchLoaded = true;\n+                    loadScript(window.searchJS);\n+                    loadScript(window.searchIndexJS);\n+                }\n+            }\n \n-        document.addEventListener(\"mousemove\", function() {\n-          searchState.mouseMovedAfterSearch = true;\n-        });\n+            search_input.addEventListener(\"focus\", function() {\n+                searchState.putBackSearch(this);\n+                search_input.origPlaceholder = searchState.input.placeholder;\n+                search_input.placeholder = \"Type your search here.\";\n+                loadSearch();\n+            });\n+            search_input.addEventListener(\"blur\", function() {\n+                search_input.placeholder = searchState.input.origPlaceholder;\n+            });\n \n-        search_input.removeAttribute('disabled');\n+            document.addEventListener(\"mousemove\", function() {\n+                searchState.mouseMovedAfterSearch = true;\n+            });\n \n-        // `crates{version}.js` should always be loaded before this script, so we can use it safely.\n-        searchState.addCrateDropdown(window.ALL_CRATES);\n-        var params = searchState.getQueryStringParams();\n-        if (params.search !== undefined) {\n-            var search = searchState.outputElement();\n-            search.innerHTML = \"<h3 style=\\\"text-align: center;\\\">\" +\n-               searchState.loadingText + \"</h3>\";\n-            searchState.showResults(search);\n-            loadSearch();\n-        }\n-      },\n-      addCrateDropdown: function(crates) {\n-        var elem = document.getElementById(\"crate-search\");\n+            search_input.removeAttribute('disabled');\n+\n+            // `crates{version}.js` should always be loaded before this script, so we can use it\n+            // safely.\n+            searchState.addCrateDropdown(window.ALL_CRATES);\n+            var params = searchState.getQueryStringParams();\n+            if (params.search !== undefined) {\n+                var search = searchState.outputElement();\n+                search.innerHTML = \"<h3 style=\\\"text-align: center;\\\">\" +\n+                   searchState.loadingText + \"</h3>\";\n+                searchState.showResults(search);\n+                loadSearch();\n+            }\n+        },\n+        addCrateDropdown: function(crates) {\n+            var elem = document.getElementById(\"crate-search\");\n \n-        if (!elem) {\n-            return;\n-        }\n-        var savedCrate = getSettingValue(\"saved-filter-crate\");\n-        for (var i = 0, len = crates.length; i < len; ++i) {\n-            var option = document.createElement(\"option\");\n-            option.value = crates[i];\n-            option.innerText = crates[i];\n-            elem.appendChild(option);\n-            // Set the crate filter from saved storage, if the current page has the saved crate\n-            // filter.\n-            //\n-            // If not, ignore the crate filter -- we want to support filtering for crates on sites\n-            // like doc.rust-lang.org where the crates may differ from page to page while on the\n-            // same domain.\n-            if (crates[i] === savedCrate) {\n-                elem.value = savedCrate;\n+            if (!elem) {\n+                return;\n             }\n-        }\n-      },\n+            var savedCrate = getSettingValue(\"saved-filter-crate\");\n+            for (var i = 0, len = crates.length; i < len; ++i) {\n+                var option = document.createElement(\"option\");\n+                option.value = crates[i];\n+                option.innerText = crates[i];\n+                elem.appendChild(option);\n+                // Set the crate filter from saved storage, if the current page has the saved crate\n+                // filter.\n+                //\n+                // If not, ignore the crate filter -- we want to support filtering for crates on\n+                // sites like doc.rust-lang.org where the crates may differ from page to page while\n+                // on the\n+                // same domain.\n+                if (crates[i] === savedCrate) {\n+                    elem.value = savedCrate;\n+                }\n+            }\n+        },\n     };\n \n     function getPageId() {"}, {"sha": "a09d3eb1796b3ff6512f0600af6602a0ab5ea167", "filename": "src/librustdoc/html/static/search.js", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cb91c6f24dfd522d07a4c7db6294dca9fbc2d20d/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsearch.js", "raw_url": "https://github.com/rust-lang/rust/raw/cb91c6f24dfd522d07a4c7db6294dca9fbc2d20d/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsearch.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsearch.js?ref=cb91c6f24dfd522d07a4c7db6294dca9fbc2d20d", "patch": "@@ -1505,7 +1505,7 @@ window.initSearch = function(rawSearchIndex) {\n };\n \n if (window.searchIndex !== undefined) {\n-  initSearch(window.searchIndex);\n+    initSearch(window.searchIndex);\n }\n \n })();"}]}