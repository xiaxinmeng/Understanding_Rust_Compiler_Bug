{"sha": "b9189ed2db8cb1934e677a17fcc6282c66306df1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5MTg5ZWQyZGI4Y2IxOTM0ZTY3N2ExN2ZjYzYyODJjNjYzMDZkZjE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-07-31T21:30:17Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-07-31T21:30:17Z"}, "message": "move lambdas", "tree": {"sha": "1456403c6eac7820c6b6760ccc6900326aedc792", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1456403c6eac7820c6b6760ccc6900326aedc792"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9189ed2db8cb1934e677a17fcc6282c66306df1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9189ed2db8cb1934e677a17fcc6282c66306df1", "html_url": "https://github.com/rust-lang/rust/commit/b9189ed2db8cb1934e677a17fcc6282c66306df1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9189ed2db8cb1934e677a17fcc6282c66306df1/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2bbd4c510d2da5c78f566b28e90548102bb107dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/2bbd4c510d2da5c78f566b28e90548102bb107dc", "html_url": "https://github.com/rust-lang/rust/commit/2bbd4c510d2da5c78f566b28e90548102bb107dc"}], "stats": {"total": 110, "additions": 106, "deletions": 4}, "files": [{"sha": "b4c121f4debf26f97c2ce9450f6730ad5478aee0", "filename": "src/grammar.ron", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b9189ed2db8cb1934e677a17fcc6282c66306df1/src%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/b9189ed2db8cb1934e677a17fcc6282c66306df1/src%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar.ron?ref=b9189ed2db8cb1934e677a17fcc6282c66306df1", "patch": "@@ -69,6 +69,7 @@ Grammar(\n         \"type\",\n         \"ref\",\n         \"let\",\n+        \"move\",\n     ],\n     contextual_keywords: [\n         \"auto\","}, {"sha": "c0eb0e756cbc30649ea86fa488a5cb0bc3965cb8", "filename": "src/grammar/expressions.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b9189ed2db8cb1934e677a17fcc6282c66306df1/src%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9189ed2db8cb1934e677a17fcc6282c66306df1/src%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fexpressions.rs?ref=b9189ed2db8cb1934e677a17fcc6282c66306df1", "patch": "@@ -162,6 +162,7 @@ fn atom_expr(p: &mut Parser) -> Option<CompletedMarker> {\n     let done = match p.current() {\n         L_PAREN => tuple_expr(p),\n         PIPE => lambda_expr(p),\n+        MOVE_KW if p.nth(1) == PIPE => lambda_expr(p),\n         IF_KW => if_expr(p),\n         _ => {\n             p.err_and_bump(\"expected expression\");\n@@ -184,11 +185,12 @@ fn tuple_expr(p: &mut Parser) -> CompletedMarker {\n //     || ();\n //     || -> i32 { 92 };\n //     |x| x;\n-//     |x: i32,| x;\n+//     move |x: i32,| x;\n // }\n fn lambda_expr(p: &mut Parser) -> CompletedMarker {\n-    assert!(p.at(PIPE));\n+    assert!(p.at(PIPE) || (p.at(MOVE_KW) && p.nth(1) == PIPE));\n     let m = p.start();\n+    p.eat(MOVE_KW);\n     params::param_list_opt_types(p);\n     if fn_ret_type(p) {\n         block(p);"}, {"sha": "435be781c182bd897eaa3a6b4161f9a7fb124f09", "filename": "src/syntax_kinds/generated.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b9189ed2db8cb1934e677a17fcc6282c66306df1/src%2Fsyntax_kinds%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9189ed2db8cb1934e677a17fcc6282c66306df1/src%2Fsyntax_kinds%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsyntax_kinds%2Fgenerated.rs?ref=b9189ed2db8cb1934e677a17fcc6282c66306df1", "patch": "@@ -70,6 +70,7 @@ pub enum SyntaxKind {\n     TYPE_KW,\n     REF_KW,\n     LET_KW,\n+    MOVE_KW,\n     AUTO_KW,\n     DEFAULT_KW,\n     UNION_KW,\n@@ -235,6 +236,7 @@ impl SyntaxKind {\n             TYPE_KW => &SyntaxInfo { name: \"TYPE_KW\" },\n             REF_KW => &SyntaxInfo { name: \"REF_KW\" },\n             LET_KW => &SyntaxInfo { name: \"LET_KW\" },\n+            MOVE_KW => &SyntaxInfo { name: \"MOVE_KW\" },\n             AUTO_KW => &SyntaxInfo { name: \"AUTO_KW\" },\n             DEFAULT_KW => &SyntaxInfo { name: \"DEFAULT_KW\" },\n             UNION_KW => &SyntaxInfo { name: \"UNION_KW\" },\n@@ -359,6 +361,7 @@ impl SyntaxKind {\n             \"type\" => TYPE_KW,\n             \"ref\" => REF_KW,\n             \"let\" => LET_KW,\n+            \"move\" => MOVE_KW,\n             _ => return None,\n         };\n         Some(kw)\n@@ -461,6 +464,7 @@ impl SyntaxKind {\n             TYPE_KW => \"type\",\n             REF_KW => \"ref\",\n             LET_KW => \"let\",\n+            MOVE_KW => \"move\",\n             AUTO_KW => \"auto\",\n             DEFAULT_KW => \"default\",\n             UNION_KW => \"union\","}, {"sha": "22b06356796782da9fb1adb060b3f6e745f3b218", "filename": "tests/data/lexer/0011_keywords.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b9189ed2db8cb1934e677a17fcc6282c66306df1/tests%2Fdata%2Flexer%2F0011_keywords.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9189ed2db8cb1934e677a17fcc6282c66306df1/tests%2Fdata%2Flexer%2F0011_keywords.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Flexer%2F0011_keywords.rs?ref=b9189ed2db8cb1934e677a17fcc6282c66306df1", "patch": "@@ -1,3 +1,3 @@\n fn use struct trait enum impl true false as extern crate\n mod pub self super in where for loop while if match const\n-static mut type ref let else\n+static mut type ref let else move"}, {"sha": "7cfc76716650800f5bed8718997c5e3458c35723", "filename": "tests/data/lexer/0011_keywords.txt", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b9189ed2db8cb1934e677a17fcc6282c66306df1/tests%2Fdata%2Flexer%2F0011_keywords.txt", "raw_url": "https://github.com/rust-lang/rust/raw/b9189ed2db8cb1934e677a17fcc6282c66306df1/tests%2Fdata%2Flexer%2F0011_keywords.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Flexer%2F0011_keywords.txt?ref=b9189ed2db8cb1934e677a17fcc6282c66306df1", "patch": "@@ -55,4 +55,6 @@ WHITESPACE 1 \" \"\n LET_KW 3 \"let\"\n WHITESPACE 1 \" \"\n ELSE_KW 4 \"else\"\n+WHITESPACE 1 \" \"\n+MOVE_KW 4 \"move\"\n WHITESPACE 1 \"\\n\""}, {"sha": "c20d29751044b003a53cb92f8c1fd0787020659e", "filename": "tests/data/parser/inline/0066_lambda_expr.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b9189ed2db8cb1934e677a17fcc6282c66306df1/tests%2Fdata%2Fparser%2Finline%2F0066_lambda_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9189ed2db8cb1934e677a17fcc6282c66306df1/tests%2Fdata%2Fparser%2Finline%2F0066_lambda_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0066_lambda_expr.rs?ref=b9189ed2db8cb1934e677a17fcc6282c66306df1", "patch": "@@ -2,5 +2,5 @@ fn foo() {\n     || ();\n     || -> i32 { 92 };\n     |x| x;\n-    |x: i32,| x;\n+    move |x: i32,| x;\n }", "previous_filename": "tests/data/parser/inline/0063_lambda_expr.rs"}, {"sha": "8c6bc7522380bd777e28a22ba63df1f7241ee229", "filename": "tests/data/parser/inline/0066_lambda_expr.txt", "status": "added", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/rust-lang/rust/blob/b9189ed2db8cb1934e677a17fcc6282c66306df1/tests%2Fdata%2Fparser%2Finline%2F0066_lambda_expr.txt", "raw_url": "https://github.com/rust-lang/rust/raw/b9189ed2db8cb1934e677a17fcc6282c66306df1/tests%2Fdata%2Fparser%2Finline%2F0066_lambda_expr.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0066_lambda_expr.txt?ref=b9189ed2db8cb1934e677a17fcc6282c66306df1", "patch": "@@ -0,0 +1,93 @@\n+FILE@[0; 79)\n+  FN_ITEM@[0; 79)\n+    FN_KW@[0; 2)\n+    NAME@[2; 6)\n+      WHITESPACE@[2; 3)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 9)\n+      L_PAREN@[6; 7)\n+      R_PAREN@[7; 8)\n+      WHITESPACE@[8; 9)\n+    BLOCK@[9; 79)\n+      L_CURLY@[9; 10)\n+      EXPR_STMT@[10; 26)\n+        LAMBDA_EXPR@[10; 20)\n+          PARAM_LIST@[10; 18)\n+            WHITESPACE@[10; 15)\n+            PIPE@[15; 16)\n+            PIPE@[16; 17)\n+            WHITESPACE@[17; 18)\n+          TUPLE_EXPR@[18; 20)\n+            L_PAREN@[18; 19)\n+            R_PAREN@[19; 20)\n+        SEMI@[20; 21)\n+        WHITESPACE@[21; 26)\n+      EXPR_STMT@[26; 48)\n+        LAMBDA_EXPR@[26; 42)\n+          PARAM_LIST@[26; 29)\n+            PIPE@[26; 27)\n+            PIPE@[27; 28)\n+            WHITESPACE@[28; 29)\n+          THIN_ARROW@[29; 31)\n+          PATH_TYPE@[31; 36)\n+            PATH@[31; 36)\n+              PATH_SEGMENT@[31; 36)\n+                NAME_REF@[31; 36)\n+                  WHITESPACE@[31; 32)\n+                  IDENT@[32; 35) \"i32\"\n+                  WHITESPACE@[35; 36)\n+          BLOCK@[36; 42)\n+            L_CURLY@[36; 37)\n+            LITERAL@[37; 41)\n+              WHITESPACE@[37; 38)\n+              INT_NUMBER@[38; 40) \"92\"\n+              WHITESPACE@[40; 41)\n+            R_CURLY@[41; 42)\n+        SEMI@[42; 43)\n+        WHITESPACE@[43; 48)\n+      EXPR_STMT@[48; 59)\n+        LAMBDA_EXPR@[48; 53)\n+          PARAM_LIST@[48; 52)\n+            PIPE@[48; 49)\n+            PARAM@[49; 50)\n+              BIND_PAT@[49; 50)\n+                NAME@[49; 50)\n+                  IDENT@[49; 50) \"x\"\n+            PIPE@[50; 51)\n+            WHITESPACE@[51; 52)\n+          PATH_EXPR@[52; 53)\n+            PATH@[52; 53)\n+              PATH_SEGMENT@[52; 53)\n+                NAME_REF@[52; 53)\n+                  IDENT@[52; 53) \"x\"\n+        SEMI@[53; 54)\n+        WHITESPACE@[54; 59)\n+      EXPR_STMT@[59; 77)\n+        LAMBDA_EXPR@[59; 75)\n+          MOVE_KW@[59; 63)\n+          PARAM_LIST@[63; 74)\n+            WHITESPACE@[63; 64)\n+            PIPE@[64; 65)\n+            PARAM@[65; 71)\n+              BIND_PAT@[65; 66)\n+                NAME@[65; 66)\n+                  IDENT@[65; 66) \"x\"\n+              COLON@[66; 67)\n+              PATH_TYPE@[67; 71)\n+                PATH@[67; 71)\n+                  PATH_SEGMENT@[67; 71)\n+                    NAME_REF@[67; 71)\n+                      WHITESPACE@[67; 68)\n+                      IDENT@[68; 71) \"i32\"\n+            COMMA@[71; 72)\n+            PIPE@[72; 73)\n+            WHITESPACE@[73; 74)\n+          PATH_EXPR@[74; 75)\n+            PATH@[74; 75)\n+              PATH_SEGMENT@[74; 75)\n+                NAME_REF@[74; 75)\n+                  IDENT@[74; 75) \"x\"\n+        SEMI@[75; 76)\n+        WHITESPACE@[76; 77)\n+      R_CURLY@[77; 78)\n+      WHITESPACE@[78; 79)"}]}