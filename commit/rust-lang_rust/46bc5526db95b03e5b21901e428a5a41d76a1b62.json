{"sha": "46bc5526db95b03e5b21901e428a5a41d76a1b62", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2YmM1NTI2ZGI5NWIwM2U1YjIxOTAxZTQyOGE1YTQxZDc2YTFiNjI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-05-15T11:29:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-15T11:29:57Z"}, "message": "Rollup merge of #85323 - GuillaumeGomez:fix-eslint-errors, r=jsha\n\nFix eslint errors\n\nI cherry-picked the two non-CI commits from #85285.\n\nr? ```@jsha```", "tree": {"sha": "062f0f41de2dcb9a2cd20f070c647018a6f368b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/062f0f41de2dcb9a2cd20f070c647018a6f368b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46bc5526db95b03e5b21901e428a5a41d76a1b62", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgn7C1CRBK7hj4Ov3rIwAArlUIALIoQpDowTVzRxnMMobQ0sXw\nldpTudV/edNZeisNabHN7fawfiOfSjWuNvVlmJLeiTlgyRo/8jr+i7I8LitVlaf3\nfFpoQRMxQEIepMP5z+c24JoZ9PK7QVZBAyJAHqQ+mBIsRvh6nrf0iBv5PzKuwKi2\ndqy4HF31md8MDg7hIwHmKMxRfnv8QoNBKT+OQPCJWQHb9nymEKr7OzbUv2lpX3GV\nfT2jwQDrfv2I81tGbTPBejfLDcRlq6sBUEiArYhOJPIi4JB7zqcXlCKk92ECpwvr\nE7Bc4h8YI4vl1PV4bM23BZF0E6H+hA/gim/0sp5P3/A2lXgFWeoAcvSWuuMSTmo=\n=MuZl\n-----END PGP SIGNATURE-----\n", "payload": "tree 062f0f41de2dcb9a2cd20f070c647018a6f368b6\nparent 2b5ef2574488f0c9fbb160f4f8be04fb59208a8d\nparent 18b7c0a00e6c248bc1b83263db5be0e1d0bf82d1\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1621078197 +0200\ncommitter GitHub <noreply@github.com> 1621078197 +0200\n\nRollup merge of #85323 - GuillaumeGomez:fix-eslint-errors, r=jsha\n\nFix eslint errors\n\nI cherry-picked the two non-CI commits from #85285.\n\nr? ```@jsha```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46bc5526db95b03e5b21901e428a5a41d76a1b62", "html_url": "https://github.com/rust-lang/rust/commit/46bc5526db95b03e5b21901e428a5a41d76a1b62", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46bc5526db95b03e5b21901e428a5a41d76a1b62/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b5ef2574488f0c9fbb160f4f8be04fb59208a8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b5ef2574488f0c9fbb160f4f8be04fb59208a8d", "html_url": "https://github.com/rust-lang/rust/commit/2b5ef2574488f0c9fbb160f4f8be04fb59208a8d"}, {"sha": "18b7c0a00e6c248bc1b83263db5be0e1d0bf82d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/18b7c0a00e6c248bc1b83263db5be0e1d0bf82d1", "html_url": "https://github.com/rust-lang/rust/commit/18b7c0a00e6c248bc1b83263db5be0e1d0bf82d1"}], "stats": {"total": 69, "additions": 34, "deletions": 35}, "files": [{"sha": "be30871ea4c70f2a27bb2d692a8173041f17ccb7", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/46bc5526db95b03e5b21901e428a5a41d76a1b62/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/46bc5526db95b03e5b21901e428a5a41d76a1b62/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=46bc5526db95b03e5b21901e428a5a41d76a1b62", "patch": "@@ -1,6 +1,6 @@\n // Local js definitions:\n-/* global addClass, getSettingValue, hasClass */\n-/* global onEach, onEachLazy, hasOwnProperty, removeClass, updateLocalStorage */\n+/* global addClass, getSettingValue, hasClass, searchState */\n+/* global onEach, onEachLazy, removeClass */\n /* global switchTheme, useSystemTheme */\n \n if (!String.prototype.startsWith) {\n@@ -347,10 +347,6 @@ function hideThemeButtonState() {\n         document.getElementsByTagName(\"body\")[0].style.marginTop = \"\";\n     }\n \n-    function isHidden(elem) {\n-        return elem.offsetHeight === 0;\n-    }\n-\n     var toggleAllDocsId = \"toggle-all-docs\";\n     var main = document.getElementById(\"main\");\n     var savedHash = \"\";\n@@ -553,7 +549,7 @@ function hideThemeButtonState() {\n                     len = window.rootPath.match(/\\.\\.\\//g).length + 1;\n \n                 for (i = 0; i < len; ++i) {\n-                    match = url.match(/\\/[^\\/]*$/);\n+                    match = url.match(/\\/[^/]*$/);\n                     if (i < len - 1) {\n                         stripped = match[0] + stripped;\n                     }\n@@ -952,13 +948,11 @@ function hideThemeButtonState() {\n         });\n \n         var currentType = document.getElementsByClassName(\"type-decl\")[0];\n-        var className = null;\n         if (currentType) {\n             currentType = currentType.getElementsByClassName(\"rust\")[0];\n             if (currentType) {\n                 onEachLazy(currentType.classList, function(item) {\n                     if (item !== \"main\") {\n-                        className = item;\n                         return true;\n                     }\n                 });\n@@ -1047,7 +1041,7 @@ function hideThemeButtonState() {\n         };\n     }\n \n-    function buildHelperPopup() {\n+    var buildHelperPopup = function() {\n         var popup = document.createElement(\"aside\");\n         addClass(popup, \"hidden\");\n         popup.id = \"help\";\n@@ -1114,7 +1108,7 @@ function hideThemeButtonState() {\n         insertAfter(popup, searchState.outputElement());\n         // So that it's only built once and then it'll do nothing when called!\n         buildHelperPopup = function() {};\n-    }\n+    };\n \n     onHashChange(null);\n     window.addEventListener(\"hashchange\", onHashChange);"}, {"sha": "c53b3d5f14bc644ce2f5bb1521943c51671b827b", "filename": "src/librustdoc/html/static/search.js", "status": "modified", "additions": 19, "deletions": 16, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/46bc5526db95b03e5b21901e428a5a41d76a1b62/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsearch.js", "raw_url": "https://github.com/rust-lang/rust/raw/46bc5526db95b03e5b21901e428a5a41d76a1b62/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsearch.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsearch.js?ref=46bc5526db95b03e5b21901e428a5a41d76a1b62", "patch": "@@ -1,3 +1,6 @@\n+/* global addClass, getNakedUrl, getSettingValue, hasOwnPropertyRustdoc, initSearch, onEach */\n+/* global onEachLazy, removeClass, searchState, updateLocalStorage */\n+\n (function() {\n // This mapping table should match the discriminants of\n // `rustdoc::html::item_type::ItemType` type in Rust.\n@@ -170,7 +173,7 @@ window.initSearch = function(rawSearchIndex) {\n         function sortResults(results, isType) {\n             var ar = [];\n             for (var entry in results) {\n-                if (hasOwnProperty(results, entry)) {\n+                if (hasOwnPropertyRustdoc(results, entry)) {\n                     ar.push(results[entry]);\n                 }\n             }\n@@ -254,7 +257,7 @@ window.initSearch = function(rawSearchIndex) {\n             });\n \n             for (i = 0, len = results.length; i < len; ++i) {\n-                var result = results[i];\n+                result = results[i];\n \n                 // this validation does not make sense when searching by types\n                 if (result.dontValidate) {\n@@ -301,7 +304,7 @@ window.initSearch = function(rawSearchIndex) {\n                 if (obj.length > GENERICS_DATA &&\n                       obj[GENERICS_DATA].length >= val.generics.length) {\n                     var elems = Object.create(null);\n-                    var elength = object[GENERICS_DATA].length;\n+                    var elength = obj[GENERICS_DATA].length;\n                     for (var x = 0; x < elength; ++x) {\n                         elems[getObjectNameFromId(obj[GENERICS_DATA][x])] += 1;\n                     }\n@@ -717,7 +720,7 @@ window.initSearch = function(rawSearchIndex) {\n             query.output = val;\n             query.search = val;\n             // gather matching search results up to a certain maximum\n-            val = val.replace(/\\_/g, \"\");\n+            val = val.replace(/_/g, \"\");\n \n             var valGenerics = extractGenerics(val);\n \n@@ -1242,7 +1245,9 @@ window.initSearch = function(rawSearchIndex) {\n     function getFilterCrates() {\n         var elem = document.getElementById(\"crate-search\");\n \n-        if (elem && elem.value !== \"All crates\" && hasOwnProperty(rawSearchIndex, elem.value)) {\n+        if (elem && elem.value !== \"All crates\" &&\n+            hasOwnPropertyRustdoc(rawSearchIndex, elem.value))\n+        {\n             return elem.value;\n         }\n         return undefined;\n@@ -1293,14 +1298,13 @@ window.initSearch = function(rawSearchIndex) {\n         var id = 0;\n \n         for (var crate in rawSearchIndex) {\n-            if (!hasOwnProperty(rawSearchIndex, crate)) { continue; }\n+            if (!hasOwnPropertyRustdoc(rawSearchIndex, crate)) {\n+                continue;\n+            }\n \n             var crateSize = 0;\n \n             searchWords.push(crate);\n-            var normalizedName = crate.indexOf(\"_\") === -1\n-                ? crate\n-                : crate.replace(/_/g, \"\");\n             // This object should have exactly the same set of fields as the \"row\"\n             // object defined below. Your JavaScript runtime will thank you.\n             // https://mathiasbynens.be/notes/shapes-ics\n@@ -1313,7 +1317,7 @@ window.initSearch = function(rawSearchIndex) {\n                 parent: undefined,\n                 type: null,\n                 id: id,\n-                normalizedName: normalizedName,\n+                normalizedName: crate.indexOf(\"_\") === -1 ? crate : crate.replace(/_/g, \"\"),\n             };\n             id += 1;\n             searchIndex.push(crateRow);\n@@ -1363,9 +1367,6 @@ window.initSearch = function(rawSearchIndex) {\n                     word = \"\";\n                     searchWords.push(\"\");\n                 }\n-                var normalizedName = word.indexOf(\"_\") === -1\n-                    ? word\n-                    : word.replace(/_/g, \"\");\n                 var row = {\n                     crate: crate,\n                     ty: itemTypes[i],\n@@ -1375,7 +1376,7 @@ window.initSearch = function(rawSearchIndex) {\n                     parent: itemParentIdxs[i] > 0 ? paths[itemParentIdxs[i] - 1] : undefined,\n                     type: itemFunctionSearchTypes[i],\n                     id: id,\n-                    normalizedName: normalizedName,\n+                    normalizedName: word.indexOf(\"_\") === -1 ? word : word.replace(/_/g, \"\"),\n                 };\n                 id += 1;\n                 searchIndex.push(row);\n@@ -1387,9 +1388,11 @@ window.initSearch = function(rawSearchIndex) {\n                 ALIASES[crate] = {};\n                 var j, local_aliases;\n                 for (var alias_name in aliases) {\n-                    if (!aliases.hasOwnProperty(alias_name)) { continue; }\n+                    if (!hasOwnPropertyRustdoc(aliases, alias_name)) {\n+                        continue;\n+                    }\n \n-                    if (!ALIASES[crate].hasOwnProperty(alias_name)) {\n+                    if (!hasOwnPropertyRustdoc(ALIASES[crate], alias_name)) {\n                         ALIASES[crate][alias_name] = [];\n                     }\n                     local_aliases = aliases[alias_name];"}, {"sha": "4d9a59f836b9e1b0d2604a95dbfe8883ac93111d", "filename": "src/librustdoc/html/static/source-script.js", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/46bc5526db95b03e5b21901e428a5a41d76a1b62/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsource-script.js", "raw_url": "https://github.com/rust-lang/rust/raw/46bc5526db95b03e5b21901e428a5a41d76a1b62/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsource-script.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsource-script.js?ref=46bc5526db95b03e5b21901e428a5a41d76a1b62", "patch": "@@ -2,7 +2,8 @@\n /* global search, sourcesIndex */\n \n // Local js definitions:\n-/* global addClass, getCurrentValue, hasClass, removeClass, updateLocalStorage */\n+/* global addClass, getCurrentValue, hasClass, onEachLazy, removeClass, searchState */\n+/* global updateLocalStorage */\n (function() {\n \n function getCurrentFilePath() {\n@@ -153,7 +154,7 @@ function createSourceSidebar() {\n \n var lineNumbersRegex = /^#?(\\d+)(?:-(\\d+))?$/;\n \n-function highlightSourceLines(match, ev) {\n+function highlightSourceLines(scrollTo, match) {\n     if (typeof match === \"undefined\") {\n         match = window.location.hash.match(lineNumbersRegex);\n     }\n@@ -174,7 +175,7 @@ function highlightSourceLines(match, ev) {\n     if (!elem) {\n         return;\n     }\n-    if (!ev) {\n+    if (scrollTo) {\n         var x = document.getElementById(from);\n         if (x) {\n             x.scrollIntoView();\n@@ -202,7 +203,7 @@ var handleSourceHighlight = (function() {\n             y = window.scrollY;\n         if (searchState.browserSupportsHistoryApi()) {\n             history.replaceState(null, null, \"#\" + name);\n-            highlightSourceLines();\n+            highlightSourceLines(true);\n         } else {\n             location.replace(\"#\" + name);\n         }\n@@ -234,15 +235,15 @@ var handleSourceHighlight = (function() {\n window.addEventListener(\"hashchange\", function() {\n     var match = window.location.hash.match(lineNumbersRegex);\n     if (match) {\n-        return highlightSourceLines(match, ev);\n+        return highlightSourceLines(false, match);\n     }\n });\n \n onEachLazy(document.getElementsByClassName(\"line-numbers\"), function(el) {\n     el.addEventListener(\"click\", handleSourceHighlight);\n });\n \n-highlightSourceLines();\n+highlightSourceLines(true);\n \n window.createSourceSidebar = createSourceSidebar;\n })();"}, {"sha": "2eaa81a97d8c5e46f59d1441a4f0bae37eed007e", "filename": "src/librustdoc/html/static/storage.js", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46bc5526db95b03e5b21901e428a5a41d76a1b62/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstorage.js", "raw_url": "https://github.com/rust-lang/rust/raw/46bc5526db95b03e5b21901e428a5a41d76a1b62/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstorage.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstorage.js?ref=46bc5526db95b03e5b21901e428a5a41d76a1b62", "patch": "@@ -84,7 +84,7 @@ function onEachLazy(lazyArray, func, reversed) {\n }\n \n // eslint-disable-next-line no-unused-vars\n-function hasOwnProperty(obj, property) {\n+function hasOwnPropertyRustdoc(obj, property) {\n     return Object.prototype.hasOwnProperty.call(obj, property);\n }\n "}, {"sha": "86b16f8b0e60d8bba1d879c66fe6b37db9ed88c6", "filename": "src/tools/rustdoc-js/tester.js", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/46bc5526db95b03e5b21901e428a5a41d76a1b62/src%2Ftools%2Frustdoc-js%2Ftester.js", "raw_url": "https://github.com/rust-lang/rust/raw/46bc5526db95b03e5b21901e428a5a41d76a1b62/src%2Ftools%2Frustdoc-js%2Ftester.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustdoc-js%2Ftester.js?ref=46bc5526db95b03e5b21901e428a5a41d76a1b62", "patch": "@@ -267,9 +267,10 @@ function loadSearchJsAndIndex(searchJs, searchIndex, storageJs, crate) {\n                            \"handleAliases\", \"getQuery\", \"buildIndex\", \"execQuery\", \"execSearch\",\n                            \"removeEmptyStringsFromArray\"];\n \n+    const functions = [\"hasOwnPropertyRustdoc\", \"onEach\"];\n     ALIASES = {};\n     finalJS += 'window = { \"currentCrate\": \"' + crate + '\", rootPath: \"../\" };\\n';\n-    finalJS += loadThings([\"hasOwnProperty\", \"onEach\"], 'function', extractFunction, storageJs);\n+    finalJS += loadThings(functions, 'function', extractFunction, storageJs);\n     finalJS += loadThings(arraysToLoad, 'array', extractArrayVariable, searchJs);\n     finalJS += loadThings(variablesToLoad, 'variable', extractVariable, searchJs);\n     finalJS += loadThings(functionsToLoad, 'function', extractFunction, searchJs);"}]}