{"sha": "30dd32d4db0834a9bb965cfceaee3211f09a5344", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwZGQzMmQ0ZGIwODM0YTliYjk2NWNmY2VhZWUzMjExZjA5YTUzNDQ=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-06-18T19:50:09Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-06-18T22:54:37Z"}, "message": "Fix generation of str/@. Closes #2638.", "tree": {"sha": "40202fb654183cef4ecd4ac693551617e48c54e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40202fb654183cef4ecd4ac693551617e48c54e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30dd32d4db0834a9bb965cfceaee3211f09a5344", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30dd32d4db0834a9bb965cfceaee3211f09a5344", "html_url": "https://github.com/rust-lang/rust/commit/30dd32d4db0834a9bb965cfceaee3211f09a5344", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30dd32d4db0834a9bb965cfceaee3211f09a5344/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "797856cbdefaff84072a39bb92fc8dbc0950e96e", "url": "https://api.github.com/repos/rust-lang/rust/commits/797856cbdefaff84072a39bb92fc8dbc0950e96e", "html_url": "https://github.com/rust-lang/rust/commit/797856cbdefaff84072a39bb92fc8dbc0950e96e"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "3803f60c04536dee186d1429bfaf30e73093072c", "filename": "src/rt/rust_upcall.cpp", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/30dd32d4db0834a9bb965cfceaee3211f09a5344/src%2Frt%2Frust_upcall.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/30dd32d4db0834a9bb965cfceaee3211f09a5344/src%2Frt%2Frust_upcall.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_upcall.cpp?ref=30dd32d4db0834a9bb965cfceaee3211f09a5344", "patch": "@@ -373,8 +373,9 @@ upcall_s_str_new_shared(s_str_new_shared_args *args) {\n     size_t str_fill = args->len + 1;\n     size_t str_alloc = str_fill;\n     args->retval = (rust_opaque_box *)\n-        task->boxed.malloc(&str_body_tydesc, str_fill);\n-    rust_str *str = (rust_str *)box_body(args->retval);\n+        task->boxed.malloc(&str_body_tydesc,\n+                           str_fill + sizeof(rust_vec));\n+    rust_str *str = (rust_str *)args->retval;\n     str->body.fill = str_fill;\n     str->body.alloc = str_alloc;\n     memcpy(&str->body.data, args->cstr, args->len);"}, {"sha": "72e82a96709038e110c5cd98fa7d23ca9271536f", "filename": "src/rustc/middle/trans/tvec.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/30dd32d4db0834a9bb965cfceaee3211f09a5344/src%2Frustc%2Fmiddle%2Ftrans%2Ftvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30dd32d4db0834a9bb965cfceaee3211f09a5344/src%2Frustc%2Fmiddle%2Ftrans%2Ftvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Ftvec.rs?ref=30dd32d4db0834a9bb965cfceaee3211f09a5344", "patch": "@@ -290,7 +290,9 @@ fn trans_estr(bcx: block, s: @str, vstore: ast::vstore,\n       ast::vstore_box {\n         let cs = PointerCast(bcx, C_cstr(ccx, *s), T_ptr(T_i8()));\n         let len = C_uint(ccx, str::len(*s));\n-        Call(bcx, ccx.upcalls.str_new_shared, [cs, len])\n+        let c = Call(bcx, ccx.upcalls.str_new_shared, [cs, len]);\n+        PointerCast(bcx, c,\n+                    T_box_ptr(T_box(ccx, T_vec(ccx, T_i8()))))\n       }\n     };\n "}, {"sha": "c0f3014cf961ee75fe28535a30128f4a36622344", "filename": "src/rustc/middle/trans/type_of.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/30dd32d4db0834a9bb965cfceaee3211f09a5344/src%2Frustc%2Fmiddle%2Ftrans%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30dd32d4db0834a9bb965cfceaee3211f09a5344/src%2Frustc%2Fmiddle%2Ftrans%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Ftype_of.rs?ref=30dd32d4db0834a9bb965cfceaee3211f09a5344", "patch": "@@ -93,7 +93,9 @@ fn type_of(cx: @crate_ctxt, t: ty::t) -> TypeRef {\n             T_unique_ptr(T_unique(cx, T_vec(cx, T_i8())))\n           }\n           ty::ty_enum(did, _) { type_of_enum(cx, did, t) }\n-          ty::ty_estr(ty::vstore_box) { T_box_ptr(T_box(cx, T_i8())) }\n+          ty::ty_estr(ty::vstore_box) {\n+            T_box_ptr(T_box(cx, T_vec(cx, T_i8())))\n+          }\n           ty::ty_evec(mt, ty::vstore_box) {\n             T_box_ptr(T_box(cx, T_vec(cx, type_of(cx, mt.ty))))\n           }"}]}