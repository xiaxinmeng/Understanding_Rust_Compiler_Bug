{"sha": "b660ca59ff16bc4bfb675fa6afe61b32aa284d96", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2NjBjYTU5ZmYxNmJjNGJmYjY3NWZhNmFmZTYxYjMyYWEyODRkOTY=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-02-24T22:51:11Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-02-24T22:51:11Z"}, "message": "Rollup merge of #31870 - ivan:filter-explain, r=steveklabnik\n\nAs a Rust newbie, I found the book's explanation for why the `filter` closure gets a reference very confusing, and tried to figure out why `filter` is somehow less consumptive than `map` -- but it isn't; that's controlled by `iter`/`into_iter`.  I flailed around for a while until @habnabit explained it to me, and in retrospect it is quite obvious :-)", "tree": {"sha": "b86509358be85838e2c677348bb476a981327f6b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b86509358be85838e2c677348bb476a981327f6b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b660ca59ff16bc4bfb675fa6afe61b32aa284d96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b660ca59ff16bc4bfb675fa6afe61b32aa284d96", "html_url": "https://github.com/rust-lang/rust/commit/b660ca59ff16bc4bfb675fa6afe61b32aa284d96", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b660ca59ff16bc4bfb675fa6afe61b32aa284d96/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a834cd1b70aecdc71b7fc4f9ff127ecaf1b2258d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a834cd1b70aecdc71b7fc4f9ff127ecaf1b2258d", "html_url": "https://github.com/rust-lang/rust/commit/a834cd1b70aecdc71b7fc4f9ff127ecaf1b2258d"}, {"sha": "7042c8ef8d8242b96bbf9efd2a7de472a3b71e05", "url": "https://api.github.com/repos/rust-lang/rust/commits/7042c8ef8d8242b96bbf9efd2a7de472a3b71e05", "html_url": "https://github.com/rust-lang/rust/commit/7042c8ef8d8242b96bbf9efd2a7de472a3b71e05"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "0c4f804126631fea066fdc402ad7e4a47a566dd8", "filename": "src/doc/book/iterators.md", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b660ca59ff16bc4bfb675fa6afe61b32aa284d96/src%2Fdoc%2Fbook%2Fiterators.md", "raw_url": "https://github.com/rust-lang/rust/raw/b660ca59ff16bc4bfb675fa6afe61b32aa284d96/src%2Fdoc%2Fbook%2Fiterators.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fiterators.md?ref=b660ca59ff16bc4bfb675fa6afe61b32aa284d96", "patch": "@@ -311,10 +311,12 @@ for i in (1..100).filter(|&x| x % 2 == 0) {\n ```\n \n This will print all of the even numbers between one and a hundred.\n-(Note that because `filter` doesn't consume the elements that are\n-being iterated over, it is passed a reference to each element, and\n-thus the filter predicate uses the `&x` pattern to extract the integer\n-itself.)\n+(Note that, unlike `map`, the closure passed to `filter` is passed a reference\n+to the element instead of the element itself. The filter predicate here uses\n+the `&x` pattern to extract the integer. The filter closure is passed a\n+reference because it returns `true` or `false` instead of the element,\n+so the `filter` implementation must retain ownership to put the elements\n+into the newly constructed iterator.)\n \n You can chain all three things together: start with an iterator, adapt it\n a few times, and then consume the result. Check it out:"}]}