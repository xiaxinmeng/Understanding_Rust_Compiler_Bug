{"sha": "0c51d0dc53e07b3fb61fda3a4369308c1b1322e2", "node_id": "C_kwDOAAsO6NoAKDBjNTFkMGRjNTNlMDdiM2ZiNjFmZGEzYTQzNjkzMDhjMWIxMzIyZTI", "commit": {"author": {"name": "fren_gor", "email": "goro@frengor.com", "date": "2023-03-19T03:24:35Z"}, "committer": {"name": "fren_gor", "email": "goro@frengor.com", "date": "2023-03-19T03:24:35Z"}, "message": "Improve collect_into documentation", "tree": {"sha": "97488e8ebe21b6ee1e118286be1b0697cafa416e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97488e8ebe21b6ee1e118286be1b0697cafa416e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c51d0dc53e07b3fb61fda3a4369308c1b1322e2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE9FfbKJ1S/hsdw3lWRtPYaX1lE/gFAmQWgHMACgkQRtPYaX1l\nE/ib8w//WbI7tplbcyDG2TzzLpa11j3C2JoH3TSPqpeaxyApU6LHg0OpKDOfttdj\n4YoZxIox3lLKNhi2OMARk6NCXDM9u891GPGLUFl4OwA9v0LLasC5ewUjY31Gh4BF\nMDwF7uAZpCwjhivYPJcCs5s9wM2hjxnTZwuGJhfa6Il8/yiQYqQMP3dgcCJh+mOM\nNEN4szn8sr+FXYO8TrqAWI9q5jhZJoLLVuUIIXzyDWiUBPDzFvLZalmO2km6Xm1i\nVoepm9FMVVu0hvzPJiBFGac0WUJ4cbiZJiPO4I6U8VAi9/6jCJQDnxWyQa+B3y38\n33ajdCOym/EOWoGe9fUpF8vxVg2K+rwJtZtJtxEuCbTLcYaGif2Awp3c+KJUBbJr\naNAqjx6uet6FSwboPVRlZy5TwMh6UzvyiFtT+5VH6zVsLqGeLAbYHzvIr0a69OWu\nRJX6hA6eTwT2vjNfg7mFprWaGKjAlYpFgpUD+wJmYdQfy1Vz7x+i62+l+uWv3vE9\n+kFmk0+j1ECuelVLjHVsUqYA3HQ/WSdTQMbyrFxNGqaAKWRIb2QEzXz1DZ3u9++t\nGv87Zg2hi+Evh7p1AgxlL8uKKSvKEavnvE/OqDmfaYESr5GFsMe41yH0Ll6bNexH\n4AhblArn7whTV1wD+KgAcU3xKXCCAq1nfab3e9dtTXhQNI7DLYs=\n=7zSk\n-----END PGP SIGNATURE-----", "payload": "tree 97488e8ebe21b6ee1e118286be1b0697cafa416e\nparent ab9bb3ea368b2412531a3e8c07ba73d1dd690134\nauthor fren_gor <goro@frengor.com> 1679196275 +0100\ncommitter fren_gor <goro@frengor.com> 1679196275 +0100\n\nImprove collect_into documentation\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c51d0dc53e07b3fb61fda3a4369308c1b1322e2", "html_url": "https://github.com/rust-lang/rust/commit/0c51d0dc53e07b3fb61fda3a4369308c1b1322e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c51d0dc53e07b3fb61fda3a4369308c1b1322e2/comments", "author": {"login": "frengor", "id": 31711263, "node_id": "MDQ6VXNlcjMxNzExMjYz", "avatar_url": "https://avatars.githubusercontent.com/u/31711263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frengor", "html_url": "https://github.com/frengor", "followers_url": "https://api.github.com/users/frengor/followers", "following_url": "https://api.github.com/users/frengor/following{/other_user}", "gists_url": "https://api.github.com/users/frengor/gists{/gist_id}", "starred_url": "https://api.github.com/users/frengor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frengor/subscriptions", "organizations_url": "https://api.github.com/users/frengor/orgs", "repos_url": "https://api.github.com/users/frengor/repos", "events_url": "https://api.github.com/users/frengor/events{/privacy}", "received_events_url": "https://api.github.com/users/frengor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frengor", "id": 31711263, "node_id": "MDQ6VXNlcjMxNzExMjYz", "avatar_url": "https://avatars.githubusercontent.com/u/31711263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frengor", "html_url": "https://github.com/frengor", "followers_url": "https://api.github.com/users/frengor/followers", "following_url": "https://api.github.com/users/frengor/following{/other_user}", "gists_url": "https://api.github.com/users/frengor/gists{/gist_id}", "starred_url": "https://api.github.com/users/frengor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frengor/subscriptions", "organizations_url": "https://api.github.com/users/frengor/orgs", "repos_url": "https://api.github.com/users/frengor/repos", "events_url": "https://api.github.com/users/frengor/events{/privacy}", "received_events_url": "https://api.github.com/users/frengor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab9bb3ea368b2412531a3e8c07ba73d1dd690134", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab9bb3ea368b2412531a3e8c07ba73d1dd690134", "html_url": "https://github.com/rust-lang/rust/commit/ab9bb3ea368b2412531a3e8c07ba73d1dd690134"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "2e1e9a2739c417191d1a8495dfc115e19d1257c7", "filename": "library/core/src/iter/traits/iterator.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0c51d0dc53e07b3fb61fda3a4369308c1b1322e2/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c51d0dc53e07b3fb61fda3a4369308c1b1322e2/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs?ref=0c51d0dc53e07b3fb61fda3a4369308c1b1322e2", "patch": "@@ -1998,7 +1998,7 @@ pub trait Iterator {\n     /// a.iter().map(|&x| x * 2).collect_into(&mut vec);\n     /// a.iter().map(|&x| x * 10).collect_into(&mut vec);\n     ///\n-    /// assert_eq!(vec![0, 1, 2, 4, 6, 10, 20, 30], vec);\n+    /// assert_eq!(vec, vec![0, 1, 2, 4, 6, 10, 20, 30]);\n     /// ```\n     ///\n     /// `Vec` can have a manual set capacity to avoid reallocating it:\n@@ -2013,7 +2013,7 @@ pub trait Iterator {\n     /// a.iter().map(|&x| x * 10).collect_into(&mut vec);\n     ///\n     /// assert_eq!(6, vec.capacity());\n-    /// println!(\"{:?}\", vec);\n+    /// assert_eq!(vec, vec![2, 4, 6, 10, 20, 30]);\n     /// ```\n     ///\n     /// The returned mutable reference can be used to continue the call chain:\n@@ -2027,12 +2027,12 @@ pub trait Iterator {\n     /// let count = a.iter().collect_into(&mut vec).iter().count();\n     ///\n     /// assert_eq!(count, vec.len());\n-    /// println!(\"Vec len is {}\", count);\n+    /// assert_eq!(vec, vec![1, 2, 3]);\n     ///\n     /// let count = a.iter().collect_into(&mut vec).iter().count();\n     ///\n     /// assert_eq!(count, vec.len());\n-    /// println!(\"Vec len now is {}\", count);\n+    /// assert_eq!(vec, vec![1, 2, 3, 1, 2, 3]);\n     /// ```\n     #[inline]\n     #[unstable(feature = \"iter_collect_into\", reason = \"new API\", issue = \"94780\")]"}]}