{"sha": "522948827b8e691f8f1efce2a87ab813045af60b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyMjk0ODgyN2I4ZTY5MWY4ZjFlZmNlMmE4N2FiODEzMDQ1YWY2MGI=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-10-13T18:21:08Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-10-13T18:35:19Z"}, "message": "Copy extern prelude from resolver to global context", "tree": {"sha": "a61249aa83822de5ac550c64330375c76bdeb1fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a61249aa83822de5ac550c64330375c76bdeb1fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/522948827b8e691f8f1efce2a87ab813045af60b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/522948827b8e691f8f1efce2a87ab813045af60b", "html_url": "https://github.com/rust-lang/rust/commit/522948827b8e691f8f1efce2a87ab813045af60b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/522948827b8e691f8f1efce2a87ab813045af60b/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83bb430663b35989cfc968550196c64a7b173cf4", "url": "https://api.github.com/repos/rust-lang/rust/commits/83bb430663b35989cfc968550196c64a7b173cf4", "html_url": "https://github.com/rust-lang/rust/commit/83bb430663b35989cfc968550196c64a7b173cf4"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "5e15ca16b97cdfb7884801f8c8d38d1583c02858", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/522948827b8e691f8f1efce2a87ab813045af60b/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/522948827b8e691f8f1efce2a87ab813045af60b/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=522948827b8e691f8f1efce2a87ab813045af60b", "patch": "@@ -936,8 +936,8 @@ pub struct GlobalCtxt<'tcx> {\n     freevars: FxHashMap<DefId, Lrc<Vec<hir::Freevar>>>,\n \n     maybe_unused_trait_imports: FxHashSet<DefId>,\n-\n     maybe_unused_extern_crates: Vec<(DefId, Span)>,\n+    pub extern_prelude: FxHashSet<ast::Name>,\n \n     // Internal cache for metadata decoding. No need to track deps on this.\n     pub rcache: Lock<FxHashMap<ty::CReaderCacheKey, Ty<'tcx>>>,\n@@ -1223,6 +1223,7 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n                     .into_iter()\n                     .map(|(id, sp)| (hir.local_def_id(id), sp))\n                     .collect(),\n+            extern_prelude: resolutions.extern_prelude,\n             hir,\n             def_path_hash_to_def_id,\n             queries: query::Queries::new("}, {"sha": "ca4cafd0a73912e3efdec339cd68fc6da2f43231", "filename": "src/librustc/ty/item_path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/522948827b8e691f8f1efce2a87ab813045af60b/src%2Flibrustc%2Fty%2Fitem_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/522948827b8e691f8f1efce2a87ab813045af60b/src%2Flibrustc%2Fty%2Fitem_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fitem_path.rs?ref=522948827b8e691f8f1efce2a87ab813045af60b", "patch": "@@ -289,7 +289,7 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n                 // printing the `CrateRoot` so we don't prepend a `crate::` to paths.\n                 let mut is_prelude_crate = false;\n                 if let DefPathData::CrateRoot = self.def_key(parent_did).disambiguated_data.data {\n-                    if self.sess.extern_prelude.contains(&data.as_interned_str().as_symbol()) {\n+                    if self.extern_prelude.contains(&data.as_interned_str().as_symbol()) {\n                         is_prelude_crate = true;\n                     }\n                 }"}, {"sha": "ee6d2dfb065f048c2c5ff3929a3f9cd2213c3eca", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/522948827b8e691f8f1efce2a87ab813045af60b/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/522948827b8e691f8f1efce2a87ab813045af60b/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=522948827b8e691f8f1efce2a87ab813045af60b", "patch": "@@ -36,7 +36,7 @@ use ty::subst::{Subst, Substs};\n use ty::util::{IntTypeExt, Discr};\n use ty::walk::TypeWalker;\n use util::captures::Captures;\n-use util::nodemap::{NodeSet, DefIdMap, FxHashMap};\n+use util::nodemap::{NodeSet, DefIdMap, FxHashMap, FxHashSet};\n use arena::SyncDroplessArena;\n use session::DataTypeKind;\n \n@@ -140,6 +140,7 @@ pub struct Resolutions {\n     pub maybe_unused_trait_imports: NodeSet,\n     pub maybe_unused_extern_crates: Vec<(NodeId, Span)>,\n     pub export_map: ExportMap,\n+    pub extern_prelude: FxHashSet<Name>,\n }\n \n #[derive(Clone, Copy, PartialEq, Eq, Debug)]"}, {"sha": "3b0acfd6f8c12c60e622f77050fe7cc32525210e", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/522948827b8e691f8f1efce2a87ab813045af60b/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/522948827b8e691f8f1efce2a87ab813045af60b/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=522948827b8e691f8f1efce2a87ab813045af60b", "patch": "@@ -790,6 +790,7 @@ where\n                 trait_map: resolver.trait_map,\n                 maybe_unused_trait_imports: resolver.maybe_unused_trait_imports,\n                 maybe_unused_extern_crates: resolver.maybe_unused_extern_crates,\n+                extern_prelude: resolver.extern_prelude,\n             },\n \n             analysis: ty::CrateAnalysis {"}, {"sha": "8cf3c0f8843a855787c116e60e986abfa7958b34", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/522948827b8e691f8f1efce2a87ab813045af60b/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/522948827b8e691f8f1efce2a87ab813045af60b/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=522948827b8e691f8f1efce2a87ab813045af60b", "patch": "@@ -1360,7 +1360,7 @@ pub struct Resolver<'a, 'b: 'a> {\n     graph_root: Module<'a>,\n \n     prelude: Option<Module<'a>>,\n-    extern_prelude: FxHashSet<Name>,\n+    pub extern_prelude: FxHashSet<Name>,\n \n     /// n.b. This is used only for better diagnostics, not name resolution itself.\n     has_self: FxHashSet<DefId>,"}, {"sha": "f9aa0397257b8e63de1b1e5575723d8729598509", "filename": "src/librustc_typeck/check_unused.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/522948827b8e691f8f1efce2a87ab813045af60b/src%2Flibrustc_typeck%2Fcheck_unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/522948827b8e691f8f1efce2a87ab813045af60b/src%2Flibrustc_typeck%2Fcheck_unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck_unused.rs?ref=522948827b8e691f8f1efce2a87ab813045af60b", "patch": "@@ -164,7 +164,7 @@ fn unused_crates_lint<'tcx>(tcx: TyCtxt<'_, 'tcx, 'tcx>) {\n         // If the extern crate isn't in the extern prelude,\n         // there is no way it can be written as an `use`.\n         let orig_name = extern_crate.orig_name.unwrap_or(item.name);\n-        if !tcx.sess.extern_prelude.contains(&orig_name) {\n+        if !tcx.extern_prelude.contains(&orig_name) {\n             continue;\n         }\n "}, {"sha": "4a698e499a7fbd18209becabf75f22488d895fc9", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/522948827b8e691f8f1efce2a87ab813045af60b/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/522948827b8e691f8f1efce2a87ab813045af60b/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=522948827b8e691f8f1efce2a87ab813045af60b", "patch": "@@ -474,6 +474,7 @@ pub fn run_core(search_paths: SearchPaths,\n             trait_map: resolver.trait_map.clone(),\n             maybe_unused_trait_imports: resolver.maybe_unused_trait_imports.clone(),\n             maybe_unused_extern_crates: resolver.maybe_unused_extern_crates.clone(),\n+            extern_prelude: resolver.extern_prelude.clone(),\n         };\n         let analysis = ty::CrateAnalysis {\n             access_levels: Lrc::new(AccessLevels::default()),"}]}