{"sha": "c9c1d860f14d2d422106d21a30beb2ea237d9de3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5YzFkODYwZjE0ZDJkNDIyMTA2ZDIxYTMwYmViMmVhMjM3ZDlkZTM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-10T00:23:15Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-10T00:23:15Z"}, "message": "rustc: Report type errors in terms of the actual types involved, not type variables", "tree": {"sha": "a934b63e241a8ba5f569179b62404b4a10161a07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a934b63e241a8ba5f569179b62404b4a10161a07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9c1d860f14d2d422106d21a30beb2ea237d9de3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9c1d860f14d2d422106d21a30beb2ea237d9de3", "html_url": "https://github.com/rust-lang/rust/commit/c9c1d860f14d2d422106d21a30beb2ea237d9de3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9c1d860f14d2d422106d21a30beb2ea237d9de3/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5318248f24afbcc61cf948bbcacd61d8b157c24a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5318248f24afbcc61cf948bbcacd61d8b157c24a", "html_url": "https://github.com/rust-lang/rust/commit/5318248f24afbcc61cf948bbcacd61d8b157c24a"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "98bb1f9de302ed0322001a45e0b3d3a54ba4b2e3", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c9c1d860f14d2d422106d21a30beb2ea237d9de3/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9c1d860f14d2d422106d21a30beb2ea237d9de3/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=c9c1d860f14d2d422106d21a30beb2ea237d9de3", "patch": "@@ -896,6 +896,14 @@ fn count_boxes(&@fn_ctxt fcx, &span sp, &ty::t t) -> uint {\n }\n \n \n+fn resolve_type_vars_if_possible(&@fn_ctxt fcx, ty::t typ) -> ty::t {\n+    alt (ty::unify::fixup_vars(fcx.ccx.tcx, fcx.var_bindings, typ)) {\n+        case (fix_ok(?new_type)) { ret new_type; }\n+        case (fix_err(_)) { ret typ; }\n+    }\n+}\n+\n+\n // Demands - procedures that require that two types unify and emit an error\n // message if they don't.\n \n@@ -956,10 +964,13 @@ mod demand {\n             }\n \n             case (ures_err(?err)) {\n+                auto e_err = resolve_type_vars_if_possible(fcx, expected_1);\n+                auto a_err = resolve_type_vars_if_possible(fcx, actual_1);\n+\n                 fcx.ccx.tcx.sess.span_err\n                     (sp, \"mismatched types: expected \"\n-                     + ty_to_str(fcx.ccx.tcx, expected_1) + \" but found \"\n-                     + ty_to_str(fcx.ccx.tcx, actual_1) + \" (\"\n+                     + ty_to_str(fcx.ccx.tcx, e_err) + \" but found \"\n+                     + ty_to_str(fcx.ccx.tcx, a_err) + \" (\"\n                      + ty::type_err_to_str(err) + \")\");\n \n                 // TODO: In the future, try returning \"expected\", reporting"}]}