{"sha": "9895529d5c7223e572f04ec424d94a187b4983a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4OTU1MjlkNWM3MjIzZTU3MmYwNGVjNDI0ZDk0YTE4N2I0OTgzYTE=", "commit": {"author": {"name": "gfreezy", "email": "gfreezy@gmail.com", "date": "2019-01-01T15:00:29Z"}, "committer": {"name": "gfreezy", "email": "gfreezy@gmail.com", "date": "2019-01-01T15:00:29Z"}, "message": "move to a seperate complete_use_tree_keyword mod", "tree": {"sha": "7aed703921e1952f0f1ab0e44d74a3d6a7f46b59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7aed703921e1952f0f1ab0e44d74a3d6a7f46b59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9895529d5c7223e572f04ec424d94a187b4983a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9895529d5c7223e572f04ec424d94a187b4983a1", "html_url": "https://github.com/rust-lang/rust/commit/9895529d5c7223e572f04ec424d94a187b4983a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9895529d5c7223e572f04ec424d94a187b4983a1/comments", "author": {"login": "gfreezy", "id": 510012, "node_id": "MDQ6VXNlcjUxMDAxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/510012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gfreezy", "html_url": "https://github.com/gfreezy", "followers_url": "https://api.github.com/users/gfreezy/followers", "following_url": "https://api.github.com/users/gfreezy/following{/other_user}", "gists_url": "https://api.github.com/users/gfreezy/gists{/gist_id}", "starred_url": "https://api.github.com/users/gfreezy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gfreezy/subscriptions", "organizations_url": "https://api.github.com/users/gfreezy/orgs", "repos_url": "https://api.github.com/users/gfreezy/repos", "events_url": "https://api.github.com/users/gfreezy/events{/privacy}", "received_events_url": "https://api.github.com/users/gfreezy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gfreezy", "id": 510012, "node_id": "MDQ6VXNlcjUxMDAxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/510012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gfreezy", "html_url": "https://github.com/gfreezy", "followers_url": "https://api.github.com/users/gfreezy/followers", "following_url": "https://api.github.com/users/gfreezy/following{/other_user}", "gists_url": "https://api.github.com/users/gfreezy/gists{/gist_id}", "starred_url": "https://api.github.com/users/gfreezy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gfreezy/subscriptions", "organizations_url": "https://api.github.com/users/gfreezy/orgs", "repos_url": "https://api.github.com/users/gfreezy/repos", "events_url": "https://api.github.com/users/gfreezy/events{/privacy}", "received_events_url": "https://api.github.com/users/gfreezy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22ea00d5ff2a993735702ec8e28fecfcbf4ffc4f", "url": "https://api.github.com/repos/rust-lang/rust/commits/22ea00d5ff2a993735702ec8e28fecfcbf4ffc4f", "html_url": "https://github.com/rust-lang/rust/commit/22ea00d5ff2a993735702ec8e28fecfcbf4ffc4f"}], "stats": {"total": 141, "additions": 77, "deletions": 64}, "files": [{"sha": "a795dd7677d8f3ac20ce1bf62b6e8c7a68cbd7f2", "filename": "crates/ra_analysis/src/completion.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9895529d5c7223e572f04ec424d94a187b4983a1/crates%2Fra_analysis%2Fsrc%2Fcompletion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9895529d5c7223e572f04ec424d94a187b4983a1/crates%2Fra_analysis%2Fsrc%2Fcompletion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion.rs?ref=9895529d5c7223e572f04ec424d94a187b4983a1", "patch": "@@ -7,6 +7,7 @@ mod complete_keyword;\n mod complete_snippet;\n mod complete_path;\n mod complete_scope;\n+mod complete_use_tree;\n \n use ra_db::SyntaxDatabase;\n \n@@ -45,6 +46,7 @@ pub(crate) fn completions(\n     complete_path::complete_path(&mut acc, &ctx)?;\n     complete_scope::complete_scope(&mut acc, &ctx)?;\n     complete_dot::complete_dot(&mut acc, &ctx)?;\n+    complete_use_tree::complete_use_tree_keyword(&mut acc, &ctx);\n \n     Ok(Some(acc))\n }"}, {"sha": "a381046e9900ff9884c6db2ceaabd4d1213204ba", "filename": "crates/ra_analysis/src/completion/complete_keyword.rs", "status": "modified", "additions": 0, "deletions": 64, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/9895529d5c7223e572f04ec424d94a187b4983a1/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9895529d5c7223e572f04ec424d94a187b4983a1/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs?ref=9895529d5c7223e572f04ec424d94a187b4983a1", "patch": "@@ -15,36 +15,6 @@ fn keyword(kw: &str, snippet: &str) -> CompletionItem {\n }\n \n pub(super) fn complete_expr_keyword(acc: &mut Completions, ctx: &CompletionContext) {\n-    // complete keyword \"crate\" in use stmt\n-    match (ctx.use_item_syntax.as_ref(), ctx.path_prefix.as_ref()) {\n-        (Some(_), None) => {\n-            CompletionItem::new(CompletionKind::Keyword, \"crate\")\n-                .kind(CompletionItemKind::Keyword)\n-                .lookup_by(\"crate\")\n-                .snippet(\"crate::\")\n-                .add_to(acc);\n-            CompletionItem::new(CompletionKind::Keyword, \"self\")\n-                .kind(CompletionItemKind::Keyword)\n-                .lookup_by(\"self\")\n-                .add_to(acc);\n-            CompletionItem::new(CompletionKind::Keyword, \"super\")\n-                .kind(CompletionItemKind::Keyword)\n-                .lookup_by(\"super\")\n-                .add_to(acc);\n-        }\n-        (Some(_), Some(_)) => {\n-            CompletionItem::new(CompletionKind::Keyword, \"self\")\n-                .kind(CompletionItemKind::Keyword)\n-                .lookup_by(\"self\")\n-                .add_to(acc);\n-            CompletionItem::new(CompletionKind::Keyword, \"super\")\n-                .kind(CompletionItemKind::Keyword)\n-                .lookup_by(\"super\")\n-                .add_to(acc);\n-        }\n-        _ => {}\n-    }\n-\n     if !ctx.is_trivial_path {\n         return;\n     }\n@@ -300,38 +270,4 @@ mod tests {\n             \"#,\n         )\n     }\n-\n-    #[test]\n-    fn completes_keywords_in_use_stmt() {\n-        check_keyword_completion(\n-            r\"\n-            use <|>\n-            \",\n-            r#\"\n-            crate \"crate\" \"crate::\"\n-            self \"self\"\n-            super \"super\"\n-            \"#,\n-        );\n-\n-        check_keyword_completion(\n-            r\"\n-            use a::<|>\n-            \",\n-            r#\"\n-            self \"self\"\n-            super \"super\"\n-            \"#,\n-        );\n-\n-        check_keyword_completion(\n-            r\"\n-            use a::{b, <|>}\n-            \",\n-            r#\"\n-            self \"self\"\n-            super \"super\"\n-            \"#,\n-        );\n-    }\n }"}, {"sha": "5f2f6e4496eff08aef5560495511c355c208ec8c", "filename": "crates/ra_analysis/src/completion/complete_use_tree.rs", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/9895529d5c7223e572f04ec424d94a187b4983a1/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_use_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9895529d5c7223e572f04ec424d94a187b4983a1/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_use_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_use_tree.rs?ref=9895529d5c7223e572f04ec424d94a187b4983a1", "patch": "@@ -0,0 +1,75 @@\n+use crate::completion::{CompletionContext, CompletionItem, Completions, CompletionKind, CompletionItemKind};\n+\n+pub(super) fn complete_use_tree_keyword(acc: &mut Completions, ctx: &CompletionContext) {\n+    // complete keyword \"crate\" in use stmt\n+    match (ctx.use_item_syntax.as_ref(), ctx.path_prefix.as_ref()) {\n+        (Some(_), None) => {\n+            CompletionItem::new(CompletionKind::Keyword, \"crate\")\n+                .kind(CompletionItemKind::Keyword)\n+                .lookup_by(\"crate\")\n+                .snippet(\"crate::\")\n+                .add_to(acc);\n+            CompletionItem::new(CompletionKind::Keyword, \"self\")\n+                .kind(CompletionItemKind::Keyword)\n+                .lookup_by(\"self\")\n+                .add_to(acc);\n+            CompletionItem::new(CompletionKind::Keyword, \"super\")\n+                .kind(CompletionItemKind::Keyword)\n+                .lookup_by(\"super\")\n+                .add_to(acc);\n+        }\n+        (Some(_), Some(_)) => {\n+            CompletionItem::new(CompletionKind::Keyword, \"self\")\n+                .kind(CompletionItemKind::Keyword)\n+                .lookup_by(\"self\")\n+                .add_to(acc);\n+            CompletionItem::new(CompletionKind::Keyword, \"super\")\n+                .kind(CompletionItemKind::Keyword)\n+                .lookup_by(\"super\")\n+                .add_to(acc);\n+        }\n+        _ => {}\n+    }\n+}\n+\n+#[cfg(test)]\n+mod tests {\n+    use crate::completion::{CompletionKind, check_completion};\n+    fn check_keyword_completion(code: &str, expected_completions: &str) {\n+        check_completion(code, expected_completions, CompletionKind::Keyword);\n+    }\n+\n+    #[test]\n+    fn completes_keywords_in_use_stmt() {\n+        check_keyword_completion(\n+            r\"\n+            use <|>\n+            \",\n+            r#\"\n+            crate \"crate\" \"crate::\"\n+            self \"self\"\n+            super \"super\"\n+            \"#,\n+        );\n+\n+        check_keyword_completion(\n+            r\"\n+            use a::<|>\n+            \",\n+            r#\"\n+            self \"self\"\n+            super \"super\"\n+            \"#,\n+        );\n+\n+        check_keyword_completion(\n+            r\"\n+            use a::{b, <|>}\n+            \",\n+            r#\"\n+            self \"self\"\n+            super \"super\"\n+            \"#,\n+        );\n+    }\n+}"}]}