{"sha": "4f5b8eace152601d20ac7d4aa3b9c9de0f45dd62", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmNWI4ZWFjZTE1MjYwMWQyMGFjN2Q0YWEzYjljOWRlMGY0NWRkNjI=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2018-11-30T21:48:31Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2018-11-30T21:48:31Z"}, "message": "Remove the `region_map` field from `BorrowSet`", "tree": {"sha": "a4849ee8d952331c162e6f03581e04470966083f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4849ee8d952331c162e6f03581e04470966083f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f5b8eace152601d20ac7d4aa3b9c9de0f45dd62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f5b8eace152601d20ac7d4aa3b9c9de0f45dd62", "html_url": "https://github.com/rust-lang/rust/commit/4f5b8eace152601d20ac7d4aa3b9c9de0f45dd62", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f5b8eace152601d20ac7d4aa3b9c9de0f45dd62/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d92287a4e94a5ca729867ae8af146bfaed197542", "url": "https://api.github.com/repos/rust-lang/rust/commits/d92287a4e94a5ca729867ae8af146bfaed197542", "html_url": "https://github.com/rust-lang/rust/commit/d92287a4e94a5ca729867ae8af146bfaed197542"}], "stats": {"total": 19, "additions": 2, "deletions": 17}, "files": [{"sha": "a6af79ffbe922f2e0eb06e669fe4700d9a8ad1b3", "filename": "src/librustc_mir/borrow_check/borrow_set.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4f5b8eace152601d20ac7d4aa3b9c9de0f45dd62/src%2Flibrustc_mir%2Fborrow_check%2Fborrow_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f5b8eace152601d20ac7d4aa3b9c9de0f45dd62/src%2Flibrustc_mir%2Fborrow_check%2Fborrow_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fborrow_set.rs?ref=4f5b8eace152601d20ac7d4aa3b9c9de0f45dd62", "patch": "@@ -16,7 +16,7 @@ use rustc::mir::traversal;\n use rustc::mir::visit::{\n     PlaceContext, Visitor, NonUseContext, MutatingUseContext, NonMutatingUseContext\n };\n-use rustc::mir::{self, Location, Mir, Place, Local};\n+use rustc::mir::{self, Location, Mir, Local};\n use rustc::ty::{RegionVid, TyCtxt};\n use rustc::util::nodemap::{FxHashMap, FxHashSet};\n use rustc_data_structures::indexed_vec::IndexVec;\n@@ -41,10 +41,6 @@ crate struct BorrowSet<'tcx> {\n     /// only need to store one borrow index\n     crate activation_map: FxHashMap<Location, Vec<BorrowIndex>>,\n \n-    /// Every borrow has a region; this maps each such regions back to\n-    /// its borrow-indexes.\n-    crate region_map: FxHashMap<RegionVid, FxHashSet<BorrowIndex>>,\n-\n     /// Map from local to all the borrows on that local\n     crate local_map: FxHashMap<mir::Local, FxHashSet<BorrowIndex>>,\n \n@@ -149,7 +145,6 @@ impl<'tcx> BorrowSet<'tcx> {\n             idx_vec: IndexVec::new(),\n             location_map: Default::default(),\n             activation_map: Default::default(),\n-            region_map: Default::default(),\n             local_map: Default::default(),\n             pending_activations: Default::default(),\n             locals_state_at_exit:\n@@ -164,7 +159,6 @@ impl<'tcx> BorrowSet<'tcx> {\n             borrows: visitor.idx_vec,\n             location_map: visitor.location_map,\n             activation_map: visitor.activation_map,\n-            region_map: visitor.region_map,\n             local_map: visitor.local_map,\n             locals_state_at_exit: visitor.locals_state_at_exit,\n         }\n@@ -184,7 +178,6 @@ struct GatherBorrows<'a, 'gcx: 'tcx, 'tcx: 'a> {\n     idx_vec: IndexVec<BorrowIndex, BorrowData<'tcx>>,\n     location_map: FxHashMap<Location, BorrowIndex>,\n     activation_map: FxHashMap<Location, Vec<BorrowIndex>>,\n-    region_map: FxHashMap<RegionVid, FxHashSet<BorrowIndex>>,\n     local_map: FxHashMap<mir::Local, FxHashSet<BorrowIndex>>,\n \n     /// When we encounter a 2-phase borrow statement, it will always\n@@ -229,7 +222,6 @@ impl<'a, 'gcx, 'tcx> Visitor<'tcx> for GatherBorrows<'a, 'gcx, 'tcx> {\n \n             self.insert_as_pending_if_two_phase(location, &assigned_place, kind, idx);\n \n-            self.region_map.entry(region).or_default().insert(idx);\n             if let Some(local) = borrowed_place.root_local() {\n                 self.local_map.entry(local).or_default().insert(idx);\n             }"}, {"sha": "3a9e4fc9e4ab949126bc2bfca33e69866d61cc21", "filename": "src/librustc_mir/dataflow/impls/borrows.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4f5b8eace152601d20ac7d4aa3b9c9de0f45dd62/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f5b8eace152601d20ac7d4aa3b9c9de0f45dd62/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs?ref=4f5b8eace152601d20ac7d4aa3b9c9de0f45dd62", "patch": "@@ -246,7 +246,7 @@ impl<'a, 'gcx, 'tcx> BitDenotation for Borrows<'a, 'gcx, 'tcx> {\n                 // re-consider the current implementations of the\n                 // propagate_call_return method.\n \n-                if let mir::Rvalue::Ref(region, _, ref place) = **rhs {\n+                if let mir::Rvalue::Ref(_, _, ref place) = **rhs {\n                     if place.ignore_borrow(\n                         self.tcx,\n                         self.mir,\n@@ -258,13 +258,6 @@ impl<'a, 'gcx, 'tcx> BitDenotation for Borrows<'a, 'gcx, 'tcx> {\n                         panic!(\"could not find BorrowIndex for location {:?}\", location);\n                     });\n \n-                    assert!(self.borrow_set.region_map\n-                        .get(&region.to_region_vid())\n-                        .unwrap_or_else(|| {\n-                            panic!(\"could not find BorrowIndexs for RegionVid {:?}\", region);\n-                        })\n-                        .contains(&index)\n-                    );\n                     sets.gen(*index);\n \n                     // Issue #46746: Two-phase borrows handles"}]}