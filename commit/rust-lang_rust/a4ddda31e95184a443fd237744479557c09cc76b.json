{"sha": "a4ddda31e95184a443fd237744479557c09cc76b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0ZGRkYTMxZTk1MTg0YTQ0M2ZkMjM3NzQ0NDc5NTU3YzA5Y2M3NmI=", "commit": {"author": {"name": "S\u00e9bastien Marie", "email": "semarie@online.fr", "date": "2018-07-15T10:46:02Z"}, "committer": {"name": "S\u00e9bastien Marie", "email": "semarie@online.fr", "date": "2018-07-15T10:46:02Z"}, "message": "tidy: add a new test for external dependencies\n\nensure all packages in Cargo.lock will be vendored, and fail if the\nsource packages isn't whitelisted.", "tree": {"sha": "7df0a4e2140451b0f4ed1ba38011a05e4a4fb390", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7df0a4e2140451b0f4ed1ba38011a05e4a4fb390"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4ddda31e95184a443fd237744479557c09cc76b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4ddda31e95184a443fd237744479557c09cc76b", "html_url": "https://github.com/rust-lang/rust/commit/a4ddda31e95184a443fd237744479557c09cc76b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4ddda31e95184a443fd237744479557c09cc76b/comments", "author": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc903c64eb52a3904a4f269ff58363528c4e96cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc903c64eb52a3904a4f269ff58363528c4e96cd", "html_url": "https://github.com/rust-lang/rust/commit/cc903c64eb52a3904a4f269ff58363528c4e96cd"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "761803a45b8b35ecf99b8b6e899305393c76d466", "filename": "src/tools/tidy/src/extdeps.rs", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/a4ddda31e95184a443fd237744479557c09cc76b/src%2Ftools%2Ftidy%2Fsrc%2Fextdeps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4ddda31e95184a443fd237744479557c09cc76b/src%2Ftools%2Ftidy%2Fsrc%2Fextdeps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fextdeps.rs?ref=a4ddda31e95184a443fd237744479557c09cc76b", "patch": "@@ -0,0 +1,50 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ! Check for external package sources. Allow only vendorable packages.\n+\n+use std::fs::File;\n+use std::io::Read;\n+use std::path::Path;\n+\n+/// List of whitelisted sources for packages\n+static WHITELISTED_SOURCES: &'static [&'static str] = &[\n+    \"\\\"registry+https://github.com/rust-lang/crates.io-index\\\"\",\n+];\n+\n+/// check for external package sources\n+pub fn check(path: &Path, bad: &mut bool) {\n+    // Cargo.lock of rust: src/Cargo.lock\n+    let path = path.join(\"Cargo.lock\");\n+\n+    // open and read the whole file\n+    let mut cargo_lock = String::new();\n+    t!(t!(File::open(path)).read_to_string(&mut cargo_lock));\n+\n+    // process each line\n+    let mut lines = cargo_lock.lines();\n+    while let Some(line) = lines.next() {\n+\n+        // consider only source entries\n+        if ! line.starts_with(\"source = \") {\n+            continue;\n+        }\n+\n+        // extract source value\n+        let parts: Vec<&str> = line.splitn(2, \"=\").collect();\n+        let source = parts[1].trim();\n+\n+        // ensure source is whitelisted\n+        if !WHITELISTED_SOURCES.contains(&&*source) {\n+            println!(\"invalid source: {}\", source);\n+            *bad = true;\n+        }\n+    }\n+}"}, {"sha": "46217a4200967c90330a7670670c676b852d0b8f", "filename": "src/tools/tidy/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a4ddda31e95184a443fd237744479557c09cc76b/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4ddda31e95184a443fd237744479557c09cc76b/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs?ref=a4ddda31e95184a443fd237744479557c09cc76b", "patch": "@@ -49,6 +49,7 @@ pub mod features;\n pub mod cargo;\n pub mod pal;\n pub mod deps;\n+pub mod extdeps;\n pub mod ui_tests;\n pub mod unstable_book;\n pub mod libcoretest;"}, {"sha": "4fe77f8b58feb39778c49f4480a24f8f111e0a8f", "filename": "src/tools/tidy/src/main.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a4ddda31e95184a443fd237744479557c09cc76b/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4ddda31e95184a443fd237744479557c09cc76b/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs?ref=a4ddda31e95184a443fd237744479557c09cc76b", "patch": "@@ -46,6 +46,7 @@ fn main() {\n         deps::check(&path, &mut bad);\n     }\n     deps::check_whitelist(&path, &cargo, &mut bad);\n+    extdeps::check(&path, &mut bad);\n     ui_tests::check(&path, &mut bad);\n \n     if bad {"}]}