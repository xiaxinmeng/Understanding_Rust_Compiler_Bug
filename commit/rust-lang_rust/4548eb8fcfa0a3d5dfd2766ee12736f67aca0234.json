{"sha": "4548eb8fcfa0a3d5dfd2766ee12736f67aca0234", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1NDhlYjhmY2ZhMGEzZDVkZmQyNzY2ZWUxMjczNmY2N2FjYTAyMzQ=", "commit": {"author": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-06-02T21:30:51Z"}, "committer": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-06-02T21:30:51Z"}, "message": "Clarify the behaviour of Pattern when used with methods like str::contains", "tree": {"sha": "f19da960cc57170618ac55bb00ad1a18a2ba3c5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f19da960cc57170618ac55bb00ad1a18a2ba3c5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4548eb8fcfa0a3d5dfd2766ee12736f67aca0234", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4548eb8fcfa0a3d5dfd2766ee12736f67aca0234", "html_url": "https://github.com/rust-lang/rust/commit/4548eb8fcfa0a3d5dfd2766ee12736f67aca0234", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4548eb8fcfa0a3d5dfd2766ee12736f67aca0234/comments", "author": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "committer": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eeaf497b2a6bc065874e3d3367b1f3023c5bb3d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/eeaf497b2a6bc065874e3d3367b1f3023c5bb3d3", "html_url": "https://github.com/rust-lang/rust/commit/eeaf497b2a6bc065874e3d3367b1f3023c5bb3d3"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "263d6b5efdff94ccac0cd2a3e511a87a272e066a", "filename": "src/libcore/str/pattern.rs", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/4548eb8fcfa0a3d5dfd2766ee12736f67aca0234/src%2Flibcore%2Fstr%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4548eb8fcfa0a3d5dfd2766ee12736f67aca0234/src%2Flibcore%2Fstr%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fpattern.rs?ref=4548eb8fcfa0a3d5dfd2766ee12736f67aca0234", "patch": "@@ -60,6 +60,43 @@ use crate::slice::memchr;\n /// The trait itself acts as a builder for an associated\n /// `Searcher` type, which does the actual work of finding\n /// occurrences of the pattern in a string.\n+///\n+/// Depending on the type of the pattern, the behaviour of methods like\n+/// [`str::find`] and [`str::contains`] can change. The table below describes\n+/// some of those behaviours.\n+///\n+/// | Pattern type             | Match condition                           |\n+/// |--------------------------|-------------------------------------------|\n+/// | `&str`                   | is substring                              |\n+/// | `char`                   | is contained in string                    |\n+/// | `&[char]                 | any char in slice is contained in string  |\n+/// | `F: FnMut(char) -> bool` | `F` returns `true` for a char in string   |\n+/// | `&&str`                  | is substring                              |\n+/// | `&String`                | is substring                              |\n+///\n+/// # Examples\n+/// ```\n+/// // &str\n+/// assert_eq!(\"abaaa\".find(\"ba\"), Some(1));\n+/// assert_eq!(\"abaaa\".find(\"bac\"), None);\n+///\n+/// // char\n+/// assert_eq!(\"abaaa\".find('a'), Some(0));\n+/// assert_eq!(\"abaaa\".find('b'), Some(1));\n+/// assert_eq!(\"abaaa\".find('c'), None);\n+///\n+/// // &[char]\n+/// assert_eq!(\"ab\".find(&['b', 'a'][..]), Some(0));\n+/// assert_eq!(\"abaaa\".find(&['a', 'z'][..]), Some(0));\n+/// assert_eq!(\"abaaa\".find(&['c', 'd'][..]), None);\n+///\n+/// // FnMut(char) -> bool\n+/// assert_eq!(\"abcdef_z\".find(|ch| ch > 'd' && ch < 'y'), Some(4));\n+/// assert_eq!(\"abcddd_z\".find(|ch| ch > 'd' && ch < 'y'), None);\n+/// ```\n+///\n+/// [`str::find`]: ../../../std/primitive.str.html#method.find\n+/// [`str::contains`]: ../../../std/primitive.str.html#method.contains\n pub trait Pattern<'a>: Sized {\n     /// Associated searcher for this pattern\n     type Searcher: Searcher<'a>;"}]}