{"sha": "0eabba8c4ca0a65819b3a5a27b52193505f1259c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlYWJiYThjNGNhMGE2NTgxOWIzYTVhMjdiNTIxOTM1MDVmMTI1OWM=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-09-18T19:26:45Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-09-23T12:18:34Z"}, "message": "Renamed ppaux highlight region hook.\n\nChanged `highlight_region_with_region` function(s) to\n`highlight_region_with_bound_region` to be more specific and less\nambigious.", "tree": {"sha": "579ef8171758b70f988f78238a27a11ba698ea63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/579ef8171758b70f988f78238a27a11ba698ea63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0eabba8c4ca0a65819b3a5a27b52193505f1259c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAlunhJoACgkQAXYLT59T\n8VQsaw/+J0tbahYL5P00/MsHMKV2g6PymoU5WhULqR0slg1ysRAhZZrS9AlEN+cV\nwDK8DgBGiX2+6YaX2k34KbVJUYNBWZmAmA56xfvlS9pT02MYMepcWTymFbDGVAT9\n55avFWXR70XUohUC0eRahh1X2xpQN8351HUbb8GEN9S/iDcNCT65BLb652d7iH6I\nBevJLu3yiThcqAKWMjr91DKhixBEPmatg3Auovaxdlgjvy40edtpV3lPiewB0gWy\nU0SyM4lKPX0XsaZTQU3L+GeE8ym9yIZyJtHk+10tefzlg8pzHlH6H0MQ1x2XEehH\nY9vyqj5SLh7KG7otLqD9K9B3m/qYR/jcujZLobVAlXryqzcn+m+dRt4u5cQzVD+T\nnYk5kpMo6Z2a+k9hgGPO6gVL2rVjkB7Y7fedyZT4yBsHvAbP/B+bhZqdjJzVYL2M\nDDTaSXfY7Mqbjr9isfIDH4ewAoeVOlXnKgS+F3PBSF6Ah4GPCfI4ByAXcFkWuXzB\nUfgkfW4ZAeFf8UcvPJOPkGF6rm91SzJacWqp5CQmJ7RnGDZ3Kv/yjxkVFMUwXovK\nk93DwirK/hnWtBksr8e5qmHZp9F4Di7K4cpmWa1smtuFckNWznyxqCpYTjx+uXU8\nAiWnmXhKaqdLjQVHJwOTptl8n6RjaszohDROQhHGsjtilB58CAo=\n=rCWe\n-----END PGP SIGNATURE-----", "payload": "tree 579ef8171758b70f988f78238a27a11ba698ea63\nparent 350ed4200c045ef8396c50bcc9e0397bf3df4cb6\nauthor David Wood <david@davidtw.co> 1537298805 +0200\ncommitter David Wood <david@davidtw.co> 1537705114 +0200\n\nRenamed ppaux highlight region hook.\n\nChanged `highlight_region_with_region` function(s) to\n`highlight_region_with_bound_region` to be more specific and less\nambigious.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0eabba8c4ca0a65819b3a5a27b52193505f1259c", "html_url": "https://github.com/rust-lang/rust/commit/0eabba8c4ca0a65819b3a5a27b52193505f1259c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0eabba8c4ca0a65819b3a5a27b52193505f1259c/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "350ed4200c045ef8396c50bcc9e0397bf3df4cb6", "url": "https://api.github.com/repos/rust-lang/rust/commits/350ed4200c045ef8396c50bcc9e0397bf3df4cb6", "html_url": "https://github.com/rust-lang/rust/commit/350ed4200c045ef8396c50bcc9e0397bf3df4cb6"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "59dd90dbd329a8e8cb5277fde0123216d4f0c281", "filename": "src/librustc/util/ppaux.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0eabba8c4ca0a65819b3a5a27b52193505f1259c/src%2Flibrustc%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0eabba8c4ca0a65819b3a5a27b52193505f1259c/src%2Flibrustc%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fppaux.rs?ref=0eabba8c4ca0a65819b3a5a27b52193505f1259c", "patch": "@@ -40,7 +40,8 @@ thread_local! {\n thread_local! {\n     /// Mechanism for highlighting of specific regions for display in NLL's 'borrow does not live\n     /// long enough' errors. Contains a region to highlight and a counter to use.\n-    static HIGHLIGHT_REGION_FOR_REGION: Cell<Option<(ty::BoundRegion, usize)>> = Cell::new(None)\n+    static HIGHLIGHT_REGION_FOR_BOUND_REGION: Cell<Option<(ty::BoundRegion, usize)>> =\n+        Cell::new(None)\n }\n \n macro_rules! gen_display_debug_body {\n@@ -588,16 +589,16 @@ pub fn with_highlight_region_for_regionvid<R>(\n     })\n }\n \n-fn get_highlight_region_for_region() -> Option<(ty::BoundRegion, usize)> {\n-    HIGHLIGHT_REGION_FOR_REGION.with(|hr| hr.get())\n+fn get_highlight_region_for_bound_region() -> Option<(ty::BoundRegion, usize)> {\n+    HIGHLIGHT_REGION_FOR_BOUND_REGION.with(|hr| hr.get())\n }\n \n-pub fn with_highlight_region_for_region<R>(\n+pub fn with_highlight_region_for_bound_region<R>(\n     r: ty::BoundRegion,\n     counter: usize,\n     op: impl Fn() -> R\n ) -> R {\n-    HIGHLIGHT_REGION_FOR_REGION.with(|hr| {\n+    HIGHLIGHT_REGION_FOR_BOUND_REGION.with(|hr| {\n         assert_eq!(hr.get(), None);\n         hr.set(Some((r, counter)));\n         let r = op();\n@@ -754,7 +755,7 @@ define_print! {\n                 return self.print_debug(f, cx);\n             }\n \n-            if let Some((region, counter)) = get_highlight_region_for_region() {\n+            if let Some((region, counter)) = get_highlight_region_for_bound_region() {\n                 if *self == region {\n                     return match *self {\n                         BrNamed(_, name) => write!(f, \"{}\", name),"}, {"sha": "73fdb4bd5d17b19f9f45af475c83d67302f76e4b", "filename": "src/librustc_mir/borrow_check/error_reporting.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0eabba8c4ca0a65819b3a5a27b52193505f1259c/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0eabba8c4ca0a65819b3a5a27b52193505f1259c/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs?ref=0eabba8c4ca0a65819b3a5a27b52193505f1259c", "patch": "@@ -22,7 +22,7 @@ use rustc::ty;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::sync::Lrc;\n use rustc_errors::{Applicability, DiagnosticBuilder};\n-use rustc::util::ppaux::with_highlight_region_for_region;\n+use rustc::util::ppaux::with_highlight_region_for_bound_region;\n use syntax_pos::Span;\n \n use super::borrow_set::BorrowData;\n@@ -1358,24 +1358,28 @@ impl<'tcx> AnnotatedBorrowFnSignature<'tcx> {\n         }\n     }\n \n+    /// Return the name of the provided `Ty` (that must be a reference) with a synthesized lifetime\n+    /// name where required.\n     fn get_name_for_ty(&self, ty: ty::Ty<'tcx>, counter: usize) -> String {\n         // We need to add synthesized lifetimes where appropriate. We do\n         // this by hooking into the pretty printer and telling it to label the\n         // lifetimes without names with the value `'0`.\n         match ty.sty {\n             ty::TyKind::Ref(ty::RegionKind::ReLateBound(_, br), _, _) |\n             ty::TyKind::Ref(ty::RegionKind::ReSkolemized(_, br), _, _) =>\n-                with_highlight_region_for_region(*br, counter, || format!(\"{}\", ty)),\n+                with_highlight_region_for_bound_region(*br, counter, || format!(\"{}\", ty)),\n             _ => format!(\"{}\", ty),\n         }\n     }\n \n+    /// Return the name of the provided `Ty` (that must be a reference)'s region with a\n+    /// synthesized lifetime name where required.\n     fn get_region_name_for_ty(&self, ty: ty::Ty<'tcx>, counter: usize) -> String {\n         match ty.sty {\n             ty::TyKind::Ref(region, _, _) => match region {\n                 ty::RegionKind::ReLateBound(_, br) |\n                 ty::RegionKind::ReSkolemized(_, br) =>\n-                    with_highlight_region_for_region(*br, counter, || format!(\"{}\", region)),\n+                    with_highlight_region_for_bound_region(*br, counter, || format!(\"{}\", region)),\n                 _ => format!(\"{}\", region),\n             }\n             _ => bug!(\"ty for annotation of borrow region is not a reference\"),"}]}