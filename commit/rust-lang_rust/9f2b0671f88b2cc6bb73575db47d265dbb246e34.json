{"sha": "9f2b0671f88b2cc6bb73575db47d265dbb246e34", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmMmIwNjcxZjg4YjJjYzZiYjczNTc1ZGI0N2QyNjVkYmIyNDZlMzQ=", "commit": {"author": {"name": "Alexander Bliskovsky", "email": "alexander.bliskovsky@gmail.com", "date": "2015-02-23T01:06:25Z"}, "committer": {"name": "Alexander Bliskovsky", "email": "alexander.bliskovsky@gmail.com", "date": "2015-02-23T01:26:54Z"}, "message": "Fixed erroneous statements in iterators.md.", "tree": {"sha": "fca232f75ce99921aad0c7d2165e67245b846e1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fca232f75ce99921aad0c7d2165e67245b846e1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f2b0671f88b2cc6bb73575db47d265dbb246e34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f2b0671f88b2cc6bb73575db47d265dbb246e34", "html_url": "https://github.com/rust-lang/rust/commit/9f2b0671f88b2cc6bb73575db47d265dbb246e34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f2b0671f88b2cc6bb73575db47d265dbb246e34/comments", "author": {"login": "jxcl", "id": 108500, "node_id": "MDQ6VXNlcjEwODUwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/108500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jxcl", "html_url": "https://github.com/jxcl", "followers_url": "https://api.github.com/users/jxcl/followers", "following_url": "https://api.github.com/users/jxcl/following{/other_user}", "gists_url": "https://api.github.com/users/jxcl/gists{/gist_id}", "starred_url": "https://api.github.com/users/jxcl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jxcl/subscriptions", "organizations_url": "https://api.github.com/users/jxcl/orgs", "repos_url": "https://api.github.com/users/jxcl/repos", "events_url": "https://api.github.com/users/jxcl/events{/privacy}", "received_events_url": "https://api.github.com/users/jxcl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jxcl", "id": 108500, "node_id": "MDQ6VXNlcjEwODUwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/108500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jxcl", "html_url": "https://github.com/jxcl", "followers_url": "https://api.github.com/users/jxcl/followers", "following_url": "https://api.github.com/users/jxcl/following{/other_user}", "gists_url": "https://api.github.com/users/jxcl/gists{/gist_id}", "starred_url": "https://api.github.com/users/jxcl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jxcl/subscriptions", "organizations_url": "https://api.github.com/users/jxcl/orgs", "repos_url": "https://api.github.com/users/jxcl/repos", "events_url": "https://api.github.com/users/jxcl/events{/privacy}", "received_events_url": "https://api.github.com/users/jxcl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72eaf2c30e846b3d14c520c0c7638b2b16bf8c73", "url": "https://api.github.com/repos/rust-lang/rust/commits/72eaf2c30e846b3d14c520c0c7638b2b16bf8c73", "html_url": "https://github.com/rust-lang/rust/commit/72eaf2c30e846b3d14c520c0c7638b2b16bf8c73"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "33dc1ba07ca86e63cd26fa2d8ce99d3d0e9f232c", "filename": "src/doc/trpl/iterators.md", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9f2b0671f88b2cc6bb73575db47d265dbb246e34/src%2Fdoc%2Ftrpl%2Fiterators.md", "raw_url": "https://github.com/rust-lang/rust/raw/9f2b0671f88b2cc6bb73575db47d265dbb246e34/src%2Fdoc%2Ftrpl%2Fiterators.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fiterators.md?ref=9f2b0671f88b2cc6bb73575db47d265dbb246e34", "patch": "@@ -91,11 +91,11 @@ for num in &nums {\n ```\n \n Now we're explicitly dereferencing `num`. Why does `&nums` give us\n-references?  Because we asked it to with `&`. If we had not had the\n-`&`, `nums` would have been moved into the `for` loop and consumed,\n-and we we would no longer be able to access `nums` afterward.  With\n-references, we're just borrowing a reference to the data, and so it's\n-just passing a reference, without needing to do the move.\n+references?  Firstly, because we explicitly asked it to with\n+`&`. Secondly, if it gave us the data itself, we would have to be its\n+owner, which would involve making a copy of the data and giving us the\n+copy. With references, we're just borrowing a reference to the data,\n+and so it's just passing a reference, without needing to do the move.\n \n So, now that we've established that ranges are often not what you want, let's\n talk about what you do want instead.\n@@ -242,9 +242,6 @@ for num in nums.iter() {\n }\n ```\n \n-Sometimes you need this functionality, but since for loops operate on the\n-`IntoIterator` trait, calling `.iter()` is rarely necessary.\n-\n These two basic iterators should serve you well. There are some more\n advanced iterators, including ones that are infinite. Like `count`:\n "}]}