{"sha": "66c15e46ba1c3cb0f48b65bd2e3ab2d2bb09fc99", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2YzE1ZTQ2YmExYzNjYjBmNDhiNjViZDJlM2FiMmQyYmIwOWZjOTk=", "commit": {"author": {"name": "Emilio Cobos \u00c1lvarez", "email": "emilio@crisal.io", "date": "2018-09-22T10:03:33Z"}, "committer": {"name": "Emilio Cobos \u00c1lvarez", "email": "emilio@crisal.io", "date": "2018-09-22T10:16:38Z"}, "message": "lists: Detect block comment by starting from the end.\n\nThe issue with the current code is that comments are collapsed, so comments like\nthe one from the test end up in a string like:\n\n```\n\"// this is a single line comment\\n/* block = */\"\n```\n\nI chose to fix it by detecting whether we're in a block comment starting from\nthe end instead, and tested a single-line comment ended in `*/` just for sanity,\nensuring line breaks are not removed in that case, which would break the\nformatting.\n\nThe right fix eventually is probably to lex the comments properly, but this does\nthe work for now, I guess :)\n\nFixes #3025", "tree": {"sha": "5a798a998c3c3f2f12eaefb06b3a6aa67d69bb12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a798a998c3c3f2f12eaefb06b3a6aa67d69bb12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66c15e46ba1c3cb0f48b65bd2e3ab2d2bb09fc99", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE+uMrE+H37zcdV8pyBWtye7nBAnwFAlumFpQACgkQBWtye7nB\nAnyEiQgAgeIKLp5sMg48gC3mJSjQzOp0+/AYm90ZpvoBNGKN2naWUstWnv3KEmaG\nzSnkFNyTL0rtb1OfNvXbPoVg7NUQDD8CRR2wNTFUCoVRvAD4I9jl0AwNi/NaVVNH\ntAcABkNf67/h0B+IdiL4eEDsRsTmcU6psNrCGZ/oG0agcYHWgkhvQlY6K4eMzZA8\n0c9Qr86nq+6GLsAIESvDVq3vHna6Xdy+N9T8MOCmwcu8LXprAsbltyvkcThcPBmX\nrBDycOxP9KVVvLqAtRgqbOQUzBOjHn0M6rWkkRHdhE2CqRittFkKm2rBbqiahoUV\nq+8eTJvpkQpHQ45hQ1uqQF3hQIf0/Q==\n=FKZj\n-----END PGP SIGNATURE-----", "payload": "tree 5a798a998c3c3f2f12eaefb06b3a6aa67d69bb12\nparent 4568c1a70f64d4ab77f9fd9553d532f0bcbe0d84\nauthor Emilio Cobos \u00c1lvarez <emilio@crisal.io> 1537610613 +0200\ncommitter Emilio Cobos \u00c1lvarez <emilio@crisal.io> 1537611398 +0200\n\nlists: Detect block comment by starting from the end.\n\nThe issue with the current code is that comments are collapsed, so comments like\nthe one from the test end up in a string like:\n\n```\n\"// this is a single line comment\\n/* block = */\"\n```\n\nI chose to fix it by detecting whether we're in a block comment starting from\nthe end instead, and tested a single-line comment ended in `*/` just for sanity,\nensuring line breaks are not removed in that case, which would break the\nformatting.\n\nThe right fix eventually is probably to lex the comments properly, but this does\nthe work for now, I guess :)\n\nFixes #3025\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66c15e46ba1c3cb0f48b65bd2e3ab2d2bb09fc99", "html_url": "https://github.com/rust-lang/rust/commit/66c15e46ba1c3cb0f48b65bd2e3ab2d2bb09fc99", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66c15e46ba1c3cb0f48b65bd2e3ab2d2bb09fc99/comments", "author": {"login": "emilio", "id": 1323194, "node_id": "MDQ6VXNlcjEzMjMxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1323194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emilio", "html_url": "https://github.com/emilio", "followers_url": "https://api.github.com/users/emilio/followers", "following_url": "https://api.github.com/users/emilio/following{/other_user}", "gists_url": "https://api.github.com/users/emilio/gists{/gist_id}", "starred_url": "https://api.github.com/users/emilio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emilio/subscriptions", "organizations_url": "https://api.github.com/users/emilio/orgs", "repos_url": "https://api.github.com/users/emilio/repos", "events_url": "https://api.github.com/users/emilio/events{/privacy}", "received_events_url": "https://api.github.com/users/emilio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emilio", "id": 1323194, "node_id": "MDQ6VXNlcjEzMjMxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1323194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emilio", "html_url": "https://github.com/emilio", "followers_url": "https://api.github.com/users/emilio/followers", "following_url": "https://api.github.com/users/emilio/following{/other_user}", "gists_url": "https://api.github.com/users/emilio/gists{/gist_id}", "starred_url": "https://api.github.com/users/emilio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emilio/subscriptions", "organizations_url": "https://api.github.com/users/emilio/orgs", "repos_url": "https://api.github.com/users/emilio/repos", "events_url": "https://api.github.com/users/emilio/events{/privacy}", "received_events_url": "https://api.github.com/users/emilio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4568c1a70f64d4ab77f9fd9553d532f0bcbe0d84", "url": "https://api.github.com/repos/rust-lang/rust/commits/4568c1a70f64d4ab77f9fd9553d532f0bcbe0d84", "html_url": "https://github.com/rust-lang/rust/commit/4568c1a70f64d4ab77f9fd9553d532f0bcbe0d84"}], "stats": {"total": 46, "additions": 39, "deletions": 7}, "files": [{"sha": "57f778896d3002020c89db427060b20fe99e77bc", "filename": "src/lists.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/66c15e46ba1c3cb0f48b65bd2e3ab2d2bb09fc99/src%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66c15e46ba1c3cb0f48b65bd2e3ab2d2bb09fc99/src%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flists.rs?ref=66c15e46ba1c3cb0f48b65bd2e3ab2d2bb09fc99", "patch": "@@ -566,14 +566,9 @@ where\n \n pub fn extract_pre_comment(pre_snippet: &str) -> (Option<String>, ListItemCommentStyle) {\n     let trimmed_pre_snippet = pre_snippet.trim();\n+    let has_block_comment = trimmed_pre_snippet.ends_with(\"*/\");\n     let has_single_line_comment = trimmed_pre_snippet.starts_with(\"//\");\n-    let has_block_comment = trimmed_pre_snippet.starts_with(\"/*\");\n-    if has_single_line_comment {\n-        (\n-            Some(trimmed_pre_snippet.to_owned()),\n-            ListItemCommentStyle::DifferentLine,\n-        )\n-    } else if has_block_comment {\n+    if has_block_comment {\n         let comment_end = pre_snippet.chars().rev().position(|c| c == '/').unwrap();\n         if pre_snippet\n             .chars()\n@@ -591,6 +586,11 @@ pub fn extract_pre_comment(pre_snippet: &str) -> (Option<String>, ListItemCommen\n                 ListItemCommentStyle::SameLine,\n             )\n         }\n+    } else if has_single_line_comment {\n+        (\n+            Some(trimmed_pre_snippet.to_owned()),\n+            ListItemCommentStyle::DifferentLine,\n+        )\n     } else {\n         (None, ListItemCommentStyle::None)\n     }"}, {"sha": "a3e6100b7f222aefc48da4a7f1399867076690c3", "filename": "tests/source/expr-block.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/66c15e46ba1c3cb0f48b65bd2e3ab2d2bb09fc99/tests%2Fsource%2Fexpr-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66c15e46ba1c3cb0f48b65bd2e3ab2d2bb09fc99/tests%2Fsource%2Fexpr-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fexpr-block.rs?ref=66c15e46ba1c3cb0f48b65bd2e3ab2d2bb09fc99", "patch": "@@ -280,6 +280,21 @@ fn issue_1862() {\n     )\n }\n \n+fn issue_3025() {\n+    foo(\n+        // This describes the argument below.\n+        /* bar = */ None ,\n+        // This describes the argument below.\n+        something_something,\n+        // This describes the argument below. */\n+        None ,\n+        // This describes the argument below.\n+        /* This comment waaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaay too long to be kept on the same line */ None ,\n+        // This describes the argument below.\n+        /* com */ this_last_arg_is_tooooooooooooooooooooooooooooooooo_long_to_be_kept_with_the_pre_comment ,\n+    )\n+}\n+\n fn issue_1878() {\n     let channel: &str = seq.next_element()?.ok_or_else(|| de::Error::invalid_length(2, &self))?;\n }"}, {"sha": "c5770065087337c0ef82f776df485611b7a0cd9d", "filename": "tests/target/expr-block.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/66c15e46ba1c3cb0f48b65bd2e3ab2d2bb09fc99/tests%2Ftarget%2Fexpr-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66c15e46ba1c3cb0f48b65bd2e3ab2d2bb09fc99/tests%2Ftarget%2Fexpr-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr-block.rs?ref=66c15e46ba1c3cb0f48b65bd2e3ab2d2bb09fc99", "patch": "@@ -281,6 +281,23 @@ fn issue_1862() {\n     )\n }\n \n+fn issue_3025() {\n+    foo(\n+        // This describes the argument below.\n+        /* bar = */ None,\n+        // This describes the argument below.\n+        something_something,\n+        // This describes the argument below. */\n+        None,\n+        // This describes the argument below.\n+        /* This comment waaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaay too long to be kept on the same line */\n+        None,\n+        // This describes the argument below.\n+        /* com */\n+        this_last_arg_is_tooooooooooooooooooooooooooooooooo_long_to_be_kept_with_the_pre_comment,\n+    )\n+}\n+\n fn issue_1878() {\n     let channel: &str = seq\n         .next_element()?"}]}