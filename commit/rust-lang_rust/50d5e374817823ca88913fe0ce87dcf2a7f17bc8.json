{"sha": "50d5e374817823ca88913fe0ce87dcf2a7f17bc8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwZDVlMzc0ODE3ODIzY2E4ODkxM2ZlMGNlODdkY2YyYTdmMTdiYzg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-08T11:23:00Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-08T11:23:00Z"}, "message": "convert some if-lets to match", "tree": {"sha": "025ce9be7cad6201ebe58050179fa4a7071bd062", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/025ce9be7cad6201ebe58050179fa4a7071bd062"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50d5e374817823ca88913fe0ce87dcf2a7f17bc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50d5e374817823ca88913fe0ce87dcf2a7f17bc8", "html_url": "https://github.com/rust-lang/rust/commit/50d5e374817823ca88913fe0ce87dcf2a7f17bc8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50d5e374817823ca88913fe0ce87dcf2a7f17bc8/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96236a9be542be461550083373be3d0cb0bd8406", "url": "https://api.github.com/repos/rust-lang/rust/commits/96236a9be542be461550083373be3d0cb0bd8406", "html_url": "https://github.com/rust-lang/rust/commit/96236a9be542be461550083373be3d0cb0bd8406"}], "stats": {"total": 21, "additions": 9, "deletions": 12}, "files": [{"sha": "b75adda84e70126a1d631a241462aa4b89f3d623", "filename": "crates/ra_hir/src/adt.rs", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/50d5e374817823ca88913fe0ce87dcf2a7f17bc8/crates%2Fra_hir%2Fsrc%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50d5e374817823ca88913fe0ce87dcf2a7f17bc8/crates%2Fra_hir%2Fsrc%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fadt.rs?ref=50d5e374817823ca88913fe0ce87dcf2a7f17bc8", "patch": "@@ -171,24 +171,21 @@ impl VariantData {\n         }\n     }\n     pub fn is_struct(&self) -> bool {\n-        if let VariantData::Struct(..) = *self {\n-            true\n-        } else {\n-            false\n+        match self {\n+            VariantData::Struct(..) => true,\n+            _ => false,\n         }\n     }\n     pub fn is_tuple(&self) -> bool {\n-        if let VariantData::Tuple(..) = *self {\n-            true\n-        } else {\n-            false\n+        match self {\n+            VariantData::Tuple(..) => true,\n+            _ => false,\n         }\n     }\n     pub fn is_unit(&self) -> bool {\n-        if let VariantData::Unit = *self {\n-            true\n-        } else {\n-            false\n+        match self {\n+            VariantData::Unit => true,\n+            _ => false,\n         }\n     }\n }"}]}