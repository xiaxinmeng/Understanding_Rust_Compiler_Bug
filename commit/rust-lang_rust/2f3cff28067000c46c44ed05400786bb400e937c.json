{"sha": "2f3cff28067000c46c44ed05400786bb400e937c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmM2NmZjI4MDY3MDAwYzQ2YzQ0ZWQwNTQwMDc4NmJiNDAwZTkzN2M=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-05-24T03:29:46Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-05-24T03:29:46Z"}, "message": "bench: Remove 99bob benchmarks", "tree": {"sha": "e797fbee6d6de24681f389707be7b834ba17c0de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e797fbee6d6de24681f389707be7b834ba17c0de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f3cff28067000c46c44ed05400786bb400e937c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f3cff28067000c46c44ed05400786bb400e937c", "html_url": "https://github.com/rust-lang/rust/commit/2f3cff28067000c46c44ed05400786bb400e937c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f3cff28067000c46c44ed05400786bb400e937c/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58988c356539b356201b19886edc61a5231656f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/58988c356539b356201b19886edc61a5231656f3", "html_url": "https://github.com/rust-lang/rust/commit/58988c356539b356201b19886edc61a5231656f3"}], "stats": {"total": 206, "additions": 0, "deletions": 206}, "files": [{"sha": "46b718a85c776eb4530be39a91517e4ab0d65aa8", "filename": "src/test/bench/99bob-iter.rs", "status": "removed", "additions": 0, "deletions": 57, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/58988c356539b356201b19886edc61a5231656f3/src%2Ftest%2Fbench%2F99bob-iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58988c356539b356201b19886edc61a5231656f3/src%2Ftest%2Fbench%2F99bob-iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2F99bob-iter.rs?ref=58988c356539b356201b19886edc61a5231656f3", "patch": "@@ -1,57 +0,0 @@\n-\n-\n-/* -*- mode::rust;indent-tabs-mode::nil -*-\n- * Implementation of 99 Bottles of Beer\n- * http://99-bottles-of-beer.net/\n- */\n-use std;\n-import int;\n-import str;\n-\n-fn b1() -> str { ret \"# of beer on the wall, # of beer.\"; }\n-\n-fn b2() -> str {\n-    ret \"Take one down and pass it around, # of beer on the wall.\";\n-}\n-\n-fn b7() -> str {\n-    ret \"No more bottles of beer on the wall, no more bottles of beer.\";\n-}\n-\n-fn b8() -> str {\n-    ret \"Go to the store and buy some more, # of beer on the wall.\";\n-}\n-\n-fn sub(t: str, n: int) -> str unsafe {\n-    let mut b: str = \"\";\n-    let mut i: uint = 0u;\n-    let mut ns: str;\n-    alt n {\n-      0 { ns = \"no more bottles\"; }\n-      1 { ns = \"1 bottle\"; }\n-      _ { ns = int::to_str(n, 10u) + \" bottles\"; }\n-    }\n-    while i < str::len(t) {\n-        if t[i] == '#' as u8 { b += ns; }\n-        else { str::unsafe::push_byte(b, t[i]); }\n-        i += 1u;\n-    }\n-    ret b;\n-}\n-\n-\n-/* Using an interator */\n-fn ninetynine(it: fn(int)) {\n-    let mut n: int = 100;\n-    while n > 1 { n -= 1; it(n); }\n-}\n-\n-fn main() {\n-    ninetynine {|n|\n-        log(debug, sub(b1(), n));\n-        log(debug, sub(b2(), n - 1));\n-        #debug(\"\");\n-    };\n-    log(debug, b7());\n-    log(debug, b8());\n-}"}, {"sha": "a2a1c00b75d6664a01b3ef77fe0f4b7740c0025a", "filename": "src/test/bench/99bob-pattern.rs", "status": "removed", "additions": 0, "deletions": 57, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/58988c356539b356201b19886edc61a5231656f3/src%2Ftest%2Fbench%2F99bob-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58988c356539b356201b19886edc61a5231656f3/src%2Ftest%2Fbench%2F99bob-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2F99bob-pattern.rs?ref=58988c356539b356201b19886edc61a5231656f3", "patch": "@@ -1,57 +0,0 @@\n-\n-\n-/* -*- mode::rust;indent-tabs-mode::nil -*-\n- * Implementation of 99 Bottles of Beer\n- * http://99-bottles-of-beer.net/\n- */\n-use std;\n-import int;\n-import str;\n-\n-enum bottle { none, dual, single, multiple(int), }\n-\n-fn show(b: bottle) {\n-    alt b {\n-      none {\n-        #debug(\"No more bottles of beer on the wall, \\\n-                no more bottles of beer,\");\n-        #debug(\"Go to the store and buy some more, \\\n-                99 bottles of beer on the wall.\");\n-      }\n-      single {\n-        #debug(\"1 bottle of beer on the wall, 1 bottle of beer,\");\n-        #debug(\"Take one down and pass it around, \\\n-                no more bottles of beer on the wall.\");\n-      }\n-      dual {\n-        #debug(\"2 bottles of beer on the wall, 2 bottles of beer,\");\n-        #debug(\"Take one down and pass it around, \\\n-                1 bottle of beer on the wall.\");\n-      }\n-      multiple(n) {\n-        #debug(\"%d bottles of beer on the wall, %d bottles of beer,\", n, n);\n-        #debug(\"Take one down and pass it around, \\\n-                %d bottles of beer on the wall.\", n-1);\n-      }\n-    }\n-}\n-\n-fn next(b: bottle) -> bottle {\n-    alt b {\n-      none { ret none; }\n-      single { ret none; }\n-      dual { ret single; }\n-      multiple(3) { ret dual; }\n-      multiple(n) { ret multiple(n - 1); }\n-    }\n-}\n-\n-\n-// Won't need this when tags can be compared with ==\n-fn more(b: bottle) -> bool { alt b { none { ret false; } _ { ret true; } } }\n-\n-fn main() {\n-    let mut b: bottle = multiple(99);\n-    let mut running: bool = true;\n-    while running { show(b); #debug(\"\"); running = more(b); b = next(b); }\n-}"}, {"sha": "2fa2b6cb18ee05c0d4d08eb8bb77c61436e88ecb", "filename": "src/test/bench/99bob-simple.rs", "status": "removed", "additions": 0, "deletions": 53, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/58988c356539b356201b19886edc61a5231656f3/src%2Ftest%2Fbench%2F99bob-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58988c356539b356201b19886edc61a5231656f3/src%2Ftest%2Fbench%2F99bob-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2F99bob-simple.rs?ref=58988c356539b356201b19886edc61a5231656f3", "patch": "@@ -1,53 +0,0 @@\n-\n-\n-/* -*- mode::rust;indent-tabs-mode::nil -*-\n- * Implementation of 99 Bottles of Beer\n- * http://99-bottles-of-beer.net/\n- */\n-use std;\n-import int;\n-import str;\n-\n-fn b1() -> str { ret \"# of beer on the wall, # of beer.\"; }\n-\n-fn b2() -> str {\n-    ret \"Take one down and pass it around, # of beer on the wall.\";\n-}\n-\n-fn b7() -> str {\n-    ret \"No more bottles of beer on the wall, no more bottles of beer.\";\n-}\n-\n-fn b8() -> str {\n-    ret \"Go to the store and buy some more, # of beer on the wall.\";\n-}\n-\n-fn sub(t: str, n: int) -> str unsafe {\n-    let mut b: str = \"\";\n-    let mut i: uint = 0u;\n-    let mut ns: str;\n-    alt n {\n-      0 { ns = \"no more bottles\"; }\n-      1 { ns = \"1 bottle\"; }\n-      _ { ns = int::to_str(n, 10u) + \" bottles\"; }\n-    }\n-    while i < str::len(t) {\n-        if t[i] == '#' as u8 { b += ns; }\n-        else { str::unsafe::push_byte(b, t[i]); }\n-        i += 1u;\n-    }\n-    ret b;\n-}\n-\n-\n-/* Straightforward counter */\n-fn main() {\n-    let mut n: int = 99;\n-    while n > 0 {\n-        log(debug, sub(b1(), n));\n-        log(debug, sub(b2(), n - 1));\n-        #debug(\"\"); n -= 1;\n-    }\n-    log(debug, b7());\n-    log(debug, sub(b8(), 99));\n-}"}, {"sha": "ccd6b6ca098db31827fddd9f584b3b82a533f221", "filename": "src/test/bench/99bob-tail.rs", "status": "removed", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/58988c356539b356201b19886edc61a5231656f3/src%2Ftest%2Fbench%2F99bob-tail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58988c356539b356201b19886edc61a5231656f3/src%2Ftest%2Fbench%2F99bob-tail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2F99bob-tail.rs?ref=58988c356539b356201b19886edc61a5231656f3", "patch": "@@ -1,39 +0,0 @@\n-/* -*- mode::rust;indent-tabs-mode::nil -*-\n- * Implementation of 99 Bottles of Beer\n- * http://99-bottles-of-beer.net/\n- */\n-use std;\n-import int;\n-import str;\n-\n-fn main() {\n-    fn multiple(n: int) {\n-        #debug(\"%d bottles of beer on the wall, %d bottles of beer,\", n, n);\n-        #debug(\"Take one down and pass it around, %d \\\n-                bottles of beer on the wall.\", n-1);\n-        #debug(\"\");\n-        if n > 3 { ret multiple(n - 1); } else { ret dual(); }\n-    }\n-    fn dual() {\n-        #debug(\"2 bottles of beer on the wall, 2 bottles of beer,\");\n-        #debug(\"Take one down and pass it around, \\\n-                1 bottle of beer on the wall.\");\n-        #debug(\"\");\n-        ret single();\n-    }\n-    fn single() {\n-        #debug(\"1 bottle of beer on the wall, 1 bottle of beer,\");\n-        #debug(\"Take one down and pass it around, \\\n-                no more bottles of beer on the wall.\");\n-        #debug(\"\");\n-        ret none();\n-    }\n-    fn none() {\n-        #debug(\"No more bottles of beer on the wall, \\\n-                no more bottles of beer,\");\n-        #debug(\"Go to the store and buy some more, \\\n-                99 bottles of beer on the wall.\");\n-        #debug(\"\");\n-    }\n-    multiple(99);\n-}"}]}