{"sha": "d65ba25ba740396f4cb748ab6320737e5797699a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2NWJhMjViYTc0MDM5NmY0Y2I3NDhhYjYzMjA3MzdlNTc5NzY5OWE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-01-10T12:30:21Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-01-10T12:30:21Z"}, "message": "Remove faerie support", "tree": {"sha": "3279deb65afed7f24639ef9eb752342b41c6d6e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3279deb65afed7f24639ef9eb752342b41c6d6e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d65ba25ba740396f4cb748ab6320737e5797699a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d65ba25ba740396f4cb748ab6320737e5797699a", "html_url": "https://github.com/rust-lang/rust/commit/d65ba25ba740396f4cb748ab6320737e5797699a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d65ba25ba740396f4cb748ab6320737e5797699a/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2bd7dcd2c01c17ed73005725b38fc8c4ad802dad", "url": "https://api.github.com/repos/rust-lang/rust/commits/2bd7dcd2c01c17ed73005725b38fc8c4ad802dad", "html_url": "https://github.com/rust-lang/rust/commit/2bd7dcd2c01c17ed73005725b38fc8c4ad802dad"}], "stats": {"total": 169, "additions": 4, "deletions": 165}, "files": [{"sha": "e73e9933976f69d22a1c1e5f03660e189156ee69", "filename": ".travis.yml", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d65ba25ba740396f4cb748ab6320737e5797699a/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/d65ba25ba740396f4cb748ab6320737e5797699a/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=d65ba25ba740396f4cb748ab6320737e5797699a", "patch": "@@ -21,6 +21,3 @@ env:\n     - RUST_BACKTRACE=1\n     # Reduce amount of benchmark runs as they are slow.\n     - COMPILE_RUNS=2 RUN_RUNS=2\n-  jobs:\n-    - \"CG_CLIF_COMPILE_FLAGS=\"\n-    - \"CG_CLIF_COMPILE_FLAGS='--features backend_object'\""}, {"sha": "0f844bb5e4eb2aae629f9ba1e2ec4b02b6d4c044", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 53, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/d65ba25ba740396f4cb748ab6320737e5797699a/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/d65ba25ba740396f4cb748ab6320737e5797699a/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=d65ba25ba740396f4cb748ab6320737e5797699a", "patch": "@@ -5,11 +5,6 @@ name = \"adler32\"\n version = \"1.0.4\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n-[[package]]\n-name = \"anyhow\"\n-version = \"1.0.26\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-\n [[package]]\n name = \"ar\"\n version = \"0.8.0\"\n@@ -91,19 +86,6 @@ name = \"cranelift-entity\"\n version = \"0.52.0\"\n source = \"git+https://github.com/bytecodealliance/cranelift/#f4684ccdefd5841dc02a8d3db377de60231a0126\"\n \n-[[package]]\n-name = \"cranelift-faerie\"\n-version = \"0.52.0\"\n-source = \"git+https://github.com/bytecodealliance/cranelift/#f4684ccdefd5841dc02a8d3db377de60231a0126\"\n-dependencies = [\n- \"anyhow 1.0.26 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"cranelift-codegen 0.52.0 (git+https://github.com/bytecodealliance/cranelift/)\",\n- \"cranelift-module 0.52.0 (git+https://github.com/bytecodealliance/cranelift/)\",\n- \"faerie 0.14.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"goblin 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"target-lexicon 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n [[package]]\n name = \"cranelift-frontend\"\n version = \"0.52.0\"\n@@ -189,21 +171,6 @@ dependencies = [\n  \"libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n-[[package]]\n-name = \"faerie\"\n-version = \"0.14.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"anyhow 1.0.26 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"goblin 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"indexmap 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"scroll 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"string-interner 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"target-lexicon 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"thiserror 1.0.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n [[package]]\n name = \"fallible-iterator\"\n version = \"0.2.0\"\n@@ -361,12 +328,10 @@ dependencies = [\n  \"ar 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"byteorder 1.3.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"cranelift-codegen 0.52.0 (git+https://github.com/bytecodealliance/cranelift/)\",\n- \"cranelift-faerie 0.52.0 (git+https://github.com/bytecodealliance/cranelift/)\",\n  \"cranelift-frontend 0.52.0 (git+https://github.com/bytecodealliance/cranelift/)\",\n  \"cranelift-module 0.52.0 (git+https://github.com/bytecodealliance/cranelift/)\",\n  \"cranelift-object 0.52.0 (git+https://github.com/bytecodealliance/cranelift/)\",\n  \"cranelift-simplejit 0.52.0 (git+https://github.com/bytecodealliance/cranelift/)\",\n- \"faerie 0.14.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"gimli 0.19.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"indexmap 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -414,11 +379,6 @@ name = \"semver-parser\"\n version = \"0.7.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n-[[package]]\n-name = \"serde\"\n-version = \"1.0.104\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-\n [[package]]\n name = \"smallvec\"\n version = \"1.1.0\"\n@@ -429,14 +389,6 @@ name = \"stable_deref_trait\"\n version = \"1.1.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n-[[package]]\n-name = \"string-interner\"\n-version = \"0.7.1\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"serde 1.0.104 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n [[package]]\n name = \"syn\"\n version = \"1.0.13\"\n@@ -501,7 +453,6 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [metadata]\n \"checksum adler32 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5d2e7343e7fc9de883d1b0341e0b13970f764c14101234857d2ddafa1cb1cac2\"\n-\"checksum anyhow 1.0.26 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7825f6833612eb2414095684fcf6c635becf3ce97fe48cf6421321e93bfbd53c\"\n \"checksum ar 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"450575f58f7bee32816abbff470cbc47797397c2a81e0eaced4b98436daf52e1\"\n \"checksum arrayvec 0.4.12 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cd9fd44efafa8690358b7408d253adf110036b88f55672a933f01d616ad9b1b9\"\n \"checksum autocfg 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1d49d90015b3c36167a20fe2810c5cd875ad504b39cff3d4eae7977e6b7c1cb2\"\n@@ -514,7 +465,6 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum cranelift-codegen-meta 0.52.0 (git+https://github.com/bytecodealliance/cranelift/)\" = \"<none>\"\n \"checksum cranelift-codegen-shared 0.52.0 (git+https://github.com/bytecodealliance/cranelift/)\" = \"<none>\"\n \"checksum cranelift-entity 0.52.0 (git+https://github.com/bytecodealliance/cranelift/)\" = \"<none>\"\n-\"checksum cranelift-faerie 0.52.0 (git+https://github.com/bytecodealliance/cranelift/)\" = \"<none>\"\n \"checksum cranelift-frontend 0.52.0 (git+https://github.com/bytecodealliance/cranelift/)\" = \"<none>\"\n \"checksum cranelift-module 0.52.0 (git+https://github.com/bytecodealliance/cranelift/)\" = \"<none>\"\n \"checksum cranelift-native 0.52.0 (git+https://github.com/bytecodealliance/cranelift/)\" = \"<none>\"\n@@ -523,7 +473,6 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum crc32fast 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ba125de2af0df55319f41944744ad91c71113bf74a4646efff39afe1f6842db1\"\n \"checksum errno 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c2a071601ed01b988f896ab14b95e67335d1eeb50190932a1320f7fe3cadc84e\"\n \"checksum errno-dragonfly 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"14ca354e36190500e1e1fb267c647932382b54053c50b14970856c0b00a35067\"\n-\"checksum faerie 0.14.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"74b9ed6159e4a6212c61d9c6a86bee01876b192a64accecf58d5b5ae3b667b52\"\n \"checksum fallible-iterator 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4443176a9f2c162692bd3d352d745ef9413eec5782a80d8fd6f8a1ac692a07f7\"\n \"checksum flate2 1.0.13 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6bd6d6f4752952feb71363cffc9ebac9411b75b87c6ab6058c40c8900cf43c0f\"\n \"checksum gcc 0.3.55 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8f5f3913fa0bfe7ee1fd8248b6b9f42a5af4b9d65ec2dd2c3c26132b950ecfc2\"\n@@ -547,10 +496,8 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum scroll_derive 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f8584eea9b9ff42825b46faf46a8c24d2cff13ec152fa2a50df788b87c07ee28\"\n \"checksum semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1d7eb9ef2c18661902cc47e535f9bc51b78acd254da71d375c2f6720d9a40403\"\n \"checksum semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"388a1df253eca08550bef6c72392cfe7c30914bf41df5269b68cbd6ff8f570a3\"\n-\"checksum serde 1.0.104 (registry+https://github.com/rust-lang/crates.io-index)\" = \"414115f25f818d7dfccec8ee535d76949ae78584fc4f79a6f45a904bf8ab4449\"\n \"checksum smallvec 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"44e59e0c9fa00817912ae6e4e6e3c4fe04455e75699d06eedc7d85917ed8e8f4\"\n \"checksum stable_deref_trait 1.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dba1a27d3efae4351c8051072d619e3ade2820635c3958d826bfea39d59b54c8\"\n-\"checksum string-interner 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fd710eadff449a1531351b0e43eb81ea404336fa2f56c777427ab0e32a4cf183\"\n \"checksum syn 1.0.13 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1e4ff033220a41d1a57d8125eab57bf5263783dfdcc18688b1dacc6ce9651ef8\"\n \"checksum target-lexicon 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ab0e7238dcc7b40a7be719a25365910f6807bd864f4cce6b2e6b873658e2b19d\"\n \"checksum thiserror 1.0.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6f357d1814b33bc2dc221243f8424104bfe72dbe911d5b71b3816a2dff1c977e\""}, {"sha": "dddf84c17b031fb2692708dbf91fa4a28ceb521d", "filename": "Cargo.toml", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d65ba25ba740396f4cb748ab6320737e5797699a/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d65ba25ba740396f4cb748ab6320737e5797699a/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=d65ba25ba740396f4cb748ab6320737e5797699a", "patch": "@@ -7,19 +7,13 @@ edition = \"2018\"\n [lib]\n crate-type = [\"dylib\"]\n \n-[features]\n-default = [\"backend_object\"]\n-backend_object = [\"object/write\", \"cranelift-object\"]\n-\n [dependencies]\n # These have to be in sync with each other\n cranelift-codegen = { git = \"https://github.com/bytecodealliance/cranelift/\", default-features = false, features = [\"std\"] }\n cranelift-frontend = { git = \"https://github.com/bytecodealliance/cranelift/\", default-features = false, features = [\"std\"] }\n cranelift-module = { git = \"https://github.com/bytecodealliance/cranelift/\" }\n-cranelift-faerie = { git = \"https://github.com/bytecodealliance/cranelift/\" }\n-cranelift-object = { git = \"https://github.com/bytecodealliance/cranelift/\", optional = true }\n+cranelift-object = { git = \"https://github.com/bytecodealliance/cranelift/\" }\n target-lexicon = \"0.10.0\"\n-faerie = \"0.14.0\"\n \n #goblin = \"0.0.17\"\n ar = \"0.8.0\"\n@@ -30,7 +24,7 @@ indexmap = \"1.0.2\"\n [dependencies.object]\n version = \"0.17.0\"\n default-features = false\n-features = [\"compression\", \"read\", \"std\"] # We don't need WASM support\n+features = [\"compression\", \"read\", \"std\", \"write\"] # We don't need WASM support\n \n [dependencies.gimli]\n version = \"0.19.0\"\n@@ -43,7 +37,6 @@ features = [\"write\"] # We don't need read support\n #cranelift-frontend = { path = \"../cranelift/cranelift-frontend\", default-features = false, features = [\"std\"] }\n #cranelift-module = { path = \"../cranelift/cranelift-module\" }\n #cranelift-simplejit = { path = \"../cranelift/cranelift-simplejit\" }\n-#cranelift-faerie = { path = \"../cranelift/cranelift-faerie\" }\n #cranelift-object = { path = \"../cranelift/cranelift-object\" }\n \n #[patch.crates-io]"}, {"sha": "ae6888316f40b46e034aa823efe590cc73cfa193", "filename": "src/backend.rs", "status": "modified", "additions": 0, "deletions": 98, "changes": 98, "blob_url": "https://github.com/rust-lang/rust/blob/d65ba25ba740396f4cb748ab6320737e5797699a/src%2Fbackend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d65ba25ba740396f4cb748ab6320737e5797699a/src%2Fbackend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbackend.rs?ref=d65ba25ba740396f4cb748ab6320737e5797699a", "patch": "@@ -5,14 +5,9 @@ use rustc::session::Session;\n \n use cranelift_module::{FuncId, Module};\n \n-use faerie::*;\n-#[cfg(feature = \"backend_object\")]\n use object::{SectionKind, SymbolFlags, RelocationKind, RelocationEncoding};\n-#[cfg(feature = \"backend_object\")]\n use object::write::*;\n-use cranelift_faerie::{FaerieBackend, FaerieBuilder, FaerieProduct, FaerieTrapCollection};\n \n-#[cfg(feature = \"backend_object\")]\n use cranelift_object::*;\n \n use gimli::SectionId;\n@@ -23,30 +18,6 @@ pub trait WriteMetadata {\n     fn add_rustc_section(&mut self, symbol_name: String, data: Vec<u8>, is_like_osx: bool);\n }\n \n-impl WriteMetadata for faerie::Artifact {\n-    fn add_rustc_section(&mut self, symbol_name: String, data: Vec<u8>, is_like_osx: bool) {\n-        self\n-            .declare(\".rustc\", faerie::Decl::section(faerie::SectionKind::Data))\n-            .unwrap();\n-        self\n-            .define_with_symbols(\".rustc\", data, {\n-                let mut map = std::collections::BTreeMap::new();\n-                // FIXME implement faerie elf backend section custom symbols\n-                // For MachO this is necessary to prevent the linker from throwing away the .rustc section,\n-                // but for ELF it isn't.\n-                if is_like_osx {\n-                    map.insert(\n-                        symbol_name,\n-                        0,\n-                    );\n-                }\n-                map\n-            })\n-            .unwrap();\n-    }\n-}\n-\n-#[cfg(feature = \"backend_object\")]\n impl WriteMetadata for object::write::Object {\n     fn add_rustc_section(&mut self, symbol_name: String, data: Vec<u8>, _is_like_osx: bool) {\n         let segment = self.segment_name(object::write::StandardSegment::Data).to_vec();\n@@ -80,42 +51,6 @@ pub trait WriteDebugInfo {\n     );\n }\n \n-impl WriteDebugInfo for FaerieProduct {\n-    type SectionId = SectionId;\n-\n-    fn add_debug_section(&mut self, id: SectionId, data: Vec<u8>) -> SectionId {\n-        self.artifact.declare_with(id.name(), Decl::section(faerie::SectionKind::Debug), data).unwrap();\n-        id\n-    }\n-\n-    fn add_debug_reloc(\n-        &mut self,\n-        _section_map: &HashMap<SectionId, Self::SectionId>,\n-        symbol_map: &indexmap::IndexMap<FuncId, String>,\n-        from: &Self::SectionId,\n-        reloc: &DebugReloc,\n-    ) {\n-        self\n-            .artifact\n-            .link_with(\n-                faerie::Link {\n-                    from: from.name(),\n-                    to: match reloc.name {\n-                        DebugRelocName::Section(id) => id.name(),\n-                        DebugRelocName::Symbol(index) => &symbol_map.get_index(index).unwrap().1,\n-                    },\n-                    at: u64::from(reloc.offset),\n-                },\n-                faerie::Reloc::Debug {\n-                    size: reloc.size,\n-                    addend: reloc.addend as i32,\n-                },\n-            )\n-            .expect(\"faerie relocation error\");\n-    }\n-}\n-\n-#[cfg(feature = \"backend_object\")]\n impl WriteDebugInfo for ObjectProduct {\n     type SectionId = (object::write::SectionId, object::write::SymbolId);\n \n@@ -168,30 +103,12 @@ pub trait Emit {\n     fn emit(self) -> Vec<u8>;\n }\n \n-impl Emit for FaerieProduct {\n-    fn emit(self) -> Vec<u8> {\n-        self.artifact.emit().unwrap()\n-    }\n-}\n-\n-#[cfg(feature = \"backend_object\")]\n impl Emit for ObjectProduct {\n     fn emit(self) -> Vec<u8> {\n         self.object.write().unwrap()\n     }\n }\n \n-#[cfg(not(feature = \"backend_object\"))]\n-pub fn with_object(sess: &Session, name: &str, f: impl FnOnce(&mut Artifact)) -> Vec<u8> {\n-    let mut metadata_artifact = faerie::Artifact::new(\n-        crate::build_isa(sess, true).triple().clone(),\n-        name.to_string(),\n-    );\n-    f(&mut metadata_artifact);\n-    metadata_artifact.emit().unwrap()\n-}\n-\n-#[cfg(feature = \"backend_object\")]\n pub fn with_object(sess: &Session, name: &str, f: impl FnOnce(&mut Object)) -> Vec<u8> {\n     let triple = crate::build_isa(sess, true).triple().clone();\n     let mut metadata_object =\n@@ -203,21 +120,6 @@ pub fn with_object(sess: &Session, name: &str, f: impl FnOnce(&mut Object)) -> V\n \n pub type Backend = impl cranelift_module::Backend<Product: Emit + WriteDebugInfo>;\n \n-#[cfg(not(feature = \"backend_object\"))]\n-pub fn make_module(sess: &Session, name: String) -> Module<Backend> {\n-    let module: Module<FaerieBackend> = Module::new(\n-        FaerieBuilder::new(\n-            crate::build_isa(sess, true),\n-            name + \".o\",\n-            FaerieTrapCollection::Disabled,\n-            cranelift_module::default_libcall_names(),\n-        )\n-        .unwrap(),\n-    );\n-    module\n-}\n-\n-#[cfg(feature = \"backend_object\")]\n pub fn make_module(sess: &Session, name: String) -> Module<Backend> {\n     let module: Module<ObjectBackend> = Module::new(\n         ObjectBuilder::new("}, {"sha": "2990a9c03ebf42741fce45ee92bad80894781435", "filename": "test.sh", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d65ba25ba740396f4cb748ab6320737e5797699a/test.sh", "raw_url": "https://github.com/rust-lang/rust/raw/d65ba25ba740396f4cb748ab6320737e5797699a/test.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test.sh?ref=d65ba25ba740396f4cb748ab6320737e5797699a", "patch": "@@ -4,10 +4,10 @@ set -e\n \n if [[ \"$1\" == \"--release\" ]]; then\n     export CHANNEL='release'\n-    CARGO_INCREMENTAL=1 cargo build --release $CG_CLIF_COMPILE_FLAGS\n+    CARGO_INCREMENTAL=1 cargo build --release\n else\n     export CHANNEL='debug'\n-    cargo build $CG_CLIF_COMPILE_FLAGS\n+    cargo build\n fi\n \n source config.sh"}]}