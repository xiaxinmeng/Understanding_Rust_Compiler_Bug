{"sha": "9eed85b1715a986a27a24ebe362ad6900fffdfa6", "node_id": "C_kwDOAAsO6NoAKDllZWQ4NWIxNzE1YTk4NmEyN2EyNGViZTM2MmFkNjkwMGZmZmRmYTY", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-01-02T18:06:19Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-01-02T18:10:23Z"}, "message": "fix syntactic highlighting for macros", "tree": {"sha": "f655e41fc40f71119c5ee6009d86f23da71adef2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f655e41fc40f71119c5ee6009d86f23da71adef2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9eed85b1715a986a27a24ebe362ad6900fffdfa6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9eed85b1715a986a27a24ebe362ad6900fffdfa6", "html_url": "https://github.com/rust-lang/rust/commit/9eed85b1715a986a27a24ebe362ad6900fffdfa6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9eed85b1715a986a27a24ebe362ad6900fffdfa6/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a525c831ffb1326dfaab4dcff078c21697af801", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a525c831ffb1326dfaab4dcff078c21697af801", "html_url": "https://github.com/rust-lang/rust/commit/3a525c831ffb1326dfaab4dcff078c21697af801"}], "stats": {"total": 32, "additions": 19, "deletions": 13}, "files": [{"sha": "3b322bd525ec419a9cfffe181caabf07cd4f52a5", "filename": "crates/ide/src/syntax_highlighting/highlight.rs", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/9eed85b1715a986a27a24ebe362ad6900fffdfa6/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9eed85b1715a986a27a24ebe362ad6900fffdfa6/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs?ref=9eed85b1715a986a27a24ebe362ad6900fffdfa6", "patch": "@@ -665,21 +665,27 @@ fn highlight_name_ref_by_syntax(\n             }\n         }\n         PATH_SEGMENT => {\n+            let name_based_fallback = || {\n+                if name.text().chars().next().unwrap_or_default().is_uppercase() {\n+                    SymbolKind::Struct.into()\n+                } else {\n+                    SymbolKind::Module.into()\n+                }\n+            };\n             let path = match parent.parent().and_then(ast::Path::cast) {\n                 Some(it) => it,\n-                _ => return default.into(),\n+                _ => return name_based_fallback(),\n             };\n-            let expr = match path.syntax().parent().and_then(ast::PathExpr::cast) {\n-                Some(it) => it,\n-                _ => {\n-                    // within path, decide whether it is module or adt by checking for uppercase name\n-                    return if name.text().chars().next().unwrap_or_default().is_uppercase() {\n-                        SymbolKind::Struct\n-                    } else {\n-                        SymbolKind::Module\n+            let expr = match path.syntax().parent() {\n+                Some(parent) => match_ast! {\n+                    match parent {\n+                        ast::PathExpr(path) => path,\n+                        ast::MacroCall(_) => return SymbolKind::Macro.into(),\n+                        _ => return name_based_fallback(),\n                     }\n-                    .into();\n-                }\n+                },\n+                // within path, decide whether it is module or adt by checking for uppercase name\n+                None => return name_based_fallback(),\n             };\n             let parent = match expr.syntax().parent() {\n                 Some(it) => it,"}, {"sha": "7dae4a1a14ddcbd4889b353bd361e7b8e4a6d7b1", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_doctest.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9eed85b1715a986a27a24ebe362ad6900fffdfa6/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html", "raw_url": "https://github.com/rust-lang/rust/raw/9eed85b1715a986a27a24ebe362ad6900fffdfa6/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html?ref=9eed85b1715a986a27a24ebe362ad6900fffdfa6", "patch": "@@ -89,7 +89,7 @@\n     <span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"none injected\"> </span><span class=\"variable declaration injected\">foo</span><span class=\"none injected\"> </span><span class=\"operator injected\">=</span><span class=\"none injected\"> </span><span class=\"struct injected\">Foo</span><span class=\"operator injected\">::</span><span class=\"function injected\">new</span><span class=\"parenthesis injected\">(</span><span class=\"parenthesis injected\">)</span><span class=\"semicolon injected\">;</span>\n     <span class=\"comment documentation\">///</span>\n     <span class=\"comment documentation\">/// </span><span class=\"comment injected\">// calls bar on foo</span>\n-    <span class=\"comment documentation\">/// </span><span class=\"module injected\">assert</span><span class=\"macro_bang injected\">!</span><span class=\"parenthesis injected\">(</span><span class=\"none injected\">foo</span><span class=\"operator injected\">.</span><span class=\"none injected\">bar</span><span class=\"parenthesis injected\">(</span><span class=\"parenthesis injected\">)</span><span class=\"parenthesis injected\">)</span><span class=\"semicolon injected\">;</span>\n+    <span class=\"comment documentation\">/// </span><span class=\"macro injected\">assert</span><span class=\"macro_bang injected\">!</span><span class=\"parenthesis injected\">(</span><span class=\"none injected\">foo</span><span class=\"operator injected\">.</span><span class=\"none injected\">bar</span><span class=\"parenthesis injected\">(</span><span class=\"parenthesis injected\">)</span><span class=\"parenthesis injected\">)</span><span class=\"semicolon injected\">;</span>\n     <span class=\"comment documentation\">///</span>\n     <span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"none injected\"> </span><span class=\"variable declaration injected\">bar</span><span class=\"none injected\"> </span><span class=\"operator injected\">=</span><span class=\"none injected\"> </span><span class=\"variable injected\">foo</span><span class=\"operator injected\">.</span><span class=\"field injected\">bar</span><span class=\"none injected\"> </span><span class=\"logical injected\">||</span><span class=\"none injected\"> </span><span class=\"struct injected\">Foo</span><span class=\"operator injected\">::</span><span class=\"constant injected\">bar</span><span class=\"semicolon injected\">;</span>\n     <span class=\"comment documentation\">///</span>\n@@ -149,7 +149,7 @@\n <span class=\"comment documentation\">///</span>\n <span class=\"attribute_bracket attribute\">#</span><span class=\"attribute_bracket attribute\">[</span><span class=\"builtin_attr attribute library\">cfg_attr</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">feature</span><span class=\"attribute_bracket attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute_bracket attribute\"> </span><span class=\"string_literal attribute\">\"alloc\"</span><span class=\"comma attribute\">,</span><span class=\"attribute_bracket attribute\"> </span><span class=\"none attribute\">doc</span><span class=\"attribute_bracket attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute_bracket attribute\"> </span><span class=\"string_literal attribute\">\"```rust\"</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute_bracket attribute\">]</span>\n <span class=\"attribute_bracket attribute\">#</span><span class=\"attribute_bracket attribute\">[</span><span class=\"builtin_attr attribute library\">cfg_attr</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">not</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">feature</span><span class=\"attribute_bracket attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute_bracket attribute\"> </span><span class=\"string_literal attribute\">\"alloc\"</span><span class=\"parenthesis attribute\">)</span><span class=\"comma attribute\">,</span><span class=\"attribute_bracket attribute\"> </span><span class=\"none attribute\">doc</span><span class=\"attribute_bracket attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute_bracket attribute\"> </span><span class=\"string_literal attribute\">\"```ignore\"</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute_bracket attribute\">]</span>\n-<span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"none injected\"> </span><span class=\"punctuation injected\">_</span><span class=\"none injected\"> </span><span class=\"operator injected\">=</span><span class=\"none injected\"> </span><span class=\"function injected\">example</span><span class=\"parenthesis injected\">(</span><span class=\"operator injected\">&</span><span class=\"module injected\">alloc</span><span class=\"operator injected\">::</span><span class=\"module injected\">vec</span><span class=\"macro_bang injected\">!</span><span class=\"bracket injected\">[</span><span class=\"numeric_literal injected\">1</span><span class=\"comma injected\">,</span><span class=\"none injected\"> </span><span class=\"numeric_literal injected\">2</span><span class=\"comma injected\">,</span><span class=\"none injected\"> </span><span class=\"numeric_literal injected\">3</span><span class=\"bracket injected\">]</span><span class=\"parenthesis injected\">)</span><span class=\"semicolon injected\">;</span>\n+<span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"none injected\"> </span><span class=\"punctuation injected\">_</span><span class=\"none injected\"> </span><span class=\"operator injected\">=</span><span class=\"none injected\"> </span><span class=\"function injected\">example</span><span class=\"parenthesis injected\">(</span><span class=\"operator injected\">&</span><span class=\"module injected\">alloc</span><span class=\"operator injected\">::</span><span class=\"macro injected\">vec</span><span class=\"macro_bang injected\">!</span><span class=\"bracket injected\">[</span><span class=\"numeric_literal injected\">1</span><span class=\"comma injected\">,</span><span class=\"none injected\"> </span><span class=\"numeric_literal injected\">2</span><span class=\"comma injected\">,</span><span class=\"none injected\"> </span><span class=\"numeric_literal injected\">3</span><span class=\"bracket injected\">]</span><span class=\"parenthesis injected\">)</span><span class=\"semicolon injected\">;</span>\n <span class=\"comment documentation\">/// ```</span>\n <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration public\">mix_and_match</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n "}]}