{"sha": "e461e53f0163fd2c7c443c5ca8335b6554b80619", "node_id": "C_kwDOAAsO6NoAKGU0NjFlNTNmMDE2M2ZkMmM3YzQ0M2M1Y2E4MzM1YjY1NTRiODA2MTk", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-05T09:23:32Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-05T09:23:32Z"}, "message": "Auto merge of #14739 - lowr:fix/type-with-leading-lifetime, r=Veykril\n\nParse bare dyn types with leading lifetime\n\nTIL types may start with a lifetime identifier e.g. `type A = 'static + Trait;`. When parsing types, leading lifetime followed by a plus sign should be parsed as a bare dyn type rather than a generic lifetime argument or error type (which is what we produce today).\n\nAlthough it's no longer accepted since Rust 2021, it wouldn't hurt to support this obsolete syntax.", "tree": {"sha": "4a49e2c293fdada1c5b045a828ca51df7275464c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a49e2c293fdada1c5b045a828ca51df7275464c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e461e53f0163fd2c7c443c5ca8335b6554b80619", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e461e53f0163fd2c7c443c5ca8335b6554b80619", "html_url": "https://github.com/rust-lang/rust/commit/e461e53f0163fd2c7c443c5ca8335b6554b80619", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e461e53f0163fd2c7c443c5ca8335b6554b80619/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0dd94d3b078fa524272f942f69239a9564532fe1", "url": "https://api.github.com/repos/rust-lang/rust/commits/0dd94d3b078fa524272f942f69239a9564532fe1", "html_url": "https://github.com/rust-lang/rust/commit/0dd94d3b078fa524272f942f69239a9564532fe1"}, {"sha": "2a509d0eb2f17464502727797af1911b94b726f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a509d0eb2f17464502727797af1911b94b726f1", "html_url": "https://github.com/rust-lang/rust/commit/2a509d0eb2f17464502727797af1911b94b726f1"}], "stats": {"total": 73, "additions": 72, "deletions": 1}, "files": [{"sha": "4cac04a32a40d8523a020a82742898e861ead250", "filename": "crates/parser/src/grammar/generic_args.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e461e53f0163fd2c7c443c5ca8335b6554b80619/crates%2Fparser%2Fsrc%2Fgrammar%2Fgeneric_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e461e53f0163fd2c7c443c5ca8335b6554b80619/crates%2Fparser%2Fsrc%2Fgrammar%2Fgeneric_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fgeneric_args.rs?ref=e461e53f0163fd2c7c443c5ca8335b6554b80619", "patch": "@@ -35,7 +35,7 @@ const GENERIC_ARG_FIRST: TokenSet = TokenSet::new(&[\n // type T = S<i32>;\n fn generic_arg(p: &mut Parser<'_>) -> bool {\n     match p.current() {\n-        LIFETIME_IDENT => lifetime_arg(p),\n+        LIFETIME_IDENT if !p.nth_at(1, T![+]) => lifetime_arg(p),\n         T!['{'] | T![true] | T![false] | T![-] => const_arg(p),\n         k if k.is_literal() => const_arg(p),\n         // test associated_type_bounds"}, {"sha": "26dac87956c101ced971282f3943b5d4e05d9407", "filename": "crates/parser/src/grammar/types.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e461e53f0163fd2c7c443c5ca8335b6554b80619/crates%2Fparser%2Fsrc%2Fgrammar%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e461e53f0163fd2c7c443c5ca8335b6554b80619/crates%2Fparser%2Fsrc%2Fgrammar%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Ftypes.rs?ref=e461e53f0163fd2c7c443c5ca8335b6554b80619", "patch": "@@ -15,6 +15,7 @@ pub(super) const TYPE_FIRST: TokenSet = paths::PATH_FIRST.union(TokenSet::new(&[\n     T![impl],\n     T![dyn],\n     T![Self],\n+    LIFETIME_IDENT,\n ]));\n \n pub(super) const TYPE_RECOVERY_SET: TokenSet = TokenSet::new(&[\n@@ -49,6 +50,7 @@ fn type_with_bounds_cond(p: &mut Parser<'_>, allow_bounds: bool) {\n         // Some path types are not allowed to have bounds (no plus)\n         T![<] => path_type_(p, allow_bounds),\n         _ if paths::is_path_start(p) => path_or_macro_type_(p, allow_bounds),\n+        LIFETIME_IDENT if p.nth_at(1, T![+]) => bare_dyn_trait_type(p),\n         _ => {\n             p.err_recover(\"expected type\", TYPE_RECOVERY_SET);\n         }\n@@ -275,6 +277,15 @@ fn dyn_trait_type(p: &mut Parser<'_>) {\n     m.complete(p, DYN_TRAIT_TYPE);\n }\n \n+// test bare_dyn_types_with_leading_lifetime\n+// type A = 'static + Trait;\n+// type B = S<'static + Trait>;\n+fn bare_dyn_trait_type(p: &mut Parser<'_>) {\n+    let m = p.start();\n+    generic_params::bounds_without_colon(p);\n+    m.complete(p, DYN_TRAIT_TYPE);\n+}\n+\n // test path_type\n // type A = Foo;\n // type B = ::Foo;"}, {"sha": "d7e67fbcd15c9cccfde64fff318d920448852ff4", "filename": "crates/parser/test_data/parser/inline/ok/0208_bare_dyn_types_with_leading_lifetime.rast", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/e461e53f0163fd2c7c443c5ca8335b6554b80619/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0208_bare_dyn_types_with_leading_lifetime.rast", "raw_url": "https://github.com/rust-lang/rust/raw/e461e53f0163fd2c7c443c5ca8335b6554b80619/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0208_bare_dyn_types_with_leading_lifetime.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0208_bare_dyn_types_with_leading_lifetime.rast?ref=e461e53f0163fd2c7c443c5ca8335b6554b80619", "patch": "@@ -0,0 +1,58 @@\n+SOURCE_FILE\n+  TYPE_ALIAS\n+    TYPE_KW \"type\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"A\"\n+    WHITESPACE \" \"\n+    EQ \"=\"\n+    WHITESPACE \" \"\n+    DYN_TRAIT_TYPE\n+      TYPE_BOUND_LIST\n+        TYPE_BOUND\n+          LIFETIME\n+            LIFETIME_IDENT \"'static\"\n+        WHITESPACE \" \"\n+        PLUS \"+\"\n+        WHITESPACE \" \"\n+        TYPE_BOUND\n+          PATH_TYPE\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"Trait\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  TYPE_ALIAS\n+    TYPE_KW \"type\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"B\"\n+    WHITESPACE \" \"\n+    EQ \"=\"\n+    WHITESPACE \" \"\n+    PATH_TYPE\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"S\"\n+          GENERIC_ARG_LIST\n+            L_ANGLE \"<\"\n+            TYPE_ARG\n+              DYN_TRAIT_TYPE\n+                TYPE_BOUND_LIST\n+                  TYPE_BOUND\n+                    LIFETIME\n+                      LIFETIME_IDENT \"'static\"\n+                  WHITESPACE \" \"\n+                  PLUS \"+\"\n+                  WHITESPACE \" \"\n+                  TYPE_BOUND\n+                    PATH_TYPE\n+                      PATH\n+                        PATH_SEGMENT\n+                          NAME_REF\n+                            IDENT \"Trait\"\n+            R_ANGLE \">\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\""}, {"sha": "3e9a9a29ddc446385ac9e4b6c7e2e839a1a9dd6e", "filename": "crates/parser/test_data/parser/inline/ok/0208_bare_dyn_types_with_leading_lifetime.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e461e53f0163fd2c7c443c5ca8335b6554b80619/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0208_bare_dyn_types_with_leading_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e461e53f0163fd2c7c443c5ca8335b6554b80619/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0208_bare_dyn_types_with_leading_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0208_bare_dyn_types_with_leading_lifetime.rs?ref=e461e53f0163fd2c7c443c5ca8335b6554b80619", "patch": "@@ -0,0 +1,2 @@\n+type A = 'static + Trait;\n+type B = S<'static + Trait>;"}]}