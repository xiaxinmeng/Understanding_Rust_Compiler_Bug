{"sha": "0f4ed08d0e3d180d66e46904126c3792f57668a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmNGVkMDhkMGUzZDE4MGQ2NmU0NjkwNDEyNmMzNzkyZjU3NjY4YTk=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-04-26T23:12:25Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-04-26T23:13:05Z"}, "message": "Harden tests to not rely on CWD", "tree": {"sha": "7d14b53b328dc8c13dd52f14cfdc2e5538890ea0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d14b53b328dc8c13dd52f14cfdc2e5538890ea0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f4ed08d0e3d180d66e46904126c3792f57668a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f4ed08d0e3d180d66e46904126c3792f57668a9", "html_url": "https://github.com/rust-lang/rust/commit/0f4ed08d0e3d180d66e46904126c3792f57668a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f4ed08d0e3d180d66e46904126c3792f57668a9/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8242ba93aced1a51bbb7c30162ed6e7055d652bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/8242ba93aced1a51bbb7c30162ed6e7055d652bd", "html_url": "https://github.com/rust-lang/rust/commit/8242ba93aced1a51bbb7c30162ed6e7055d652bd"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "cd746a6486b99ffaac86b91d8202efeaf269b3f0", "filename": "src/test/mod.rs", "status": "modified", "additions": 27, "deletions": 2, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/0f4ed08d0e3d180d66e46904126c3792f57668a9/src%2Ftest%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4ed08d0e3d180d66e46904126c3792f57668a9/src%2Ftest%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmod.rs?ref=0f4ed08d0e3d180d66e46904126c3792f57668a9", "patch": "@@ -857,28 +857,53 @@ fn configuration_snippet_tests() {\n     assert_eq!(failures, 0, \"{} configurations tests failed\", failures);\n }\n \n+struct TempFile {\n+    file_name: &'static str,\n+}\n+\n+fn make_temp_file(file_name: &'static str) -> TempFile {\n+    use std::fs::File;\n+\n+    let mut file = File::create(file_name).expect(\"Couldn't create temp file\");\n+    let content = \"fn main() {}\\n\";\n+    file.write_all(content.as_bytes())\n+        .expect(\"Couldn't write temp file\");\n+    TempFile { file_name }\n+}\n+\n+impl Drop for TempFile {\n+    fn drop(&mut self) {\n+        use std::fs::remove_file;\n+        remove_file(self.file_name).expect(\"Couldn't delete temp file\");\n+    }\n+}\n+\n #[test]\n fn verify_check_works() {\n+    let file_name = \"temp_check.rs\";\n+    let _temp_file = make_temp_file(file_name);\n     assert_cli::Assert::command(&[\n         \"cargo\",\n         \"run\",\n         \"--bin=rustfmt\",\n         \"--\",\n         \"--write-mode=check\",\n-        \"src/bin/main.rs\",\n+        file_name,\n     ]).succeeds()\n         .unwrap();\n }\n \n #[test]\n fn verify_diff_works() {\n+    let file_name = \"temp_diff.rs\";\n+    let _temp_file = make_temp_file(file_name);\n     assert_cli::Assert::command(&[\n         \"cargo\",\n         \"run\",\n         \"--bin=rustfmt\",\n         \"--\",\n         \"--write-mode=diff\",\n-        \"src/bin/main.rs\",\n+        file_name,\n     ]).succeeds()\n         .unwrap();\n }"}]}