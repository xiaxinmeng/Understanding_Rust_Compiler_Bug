{"sha": "2f6ba7b4da81afe966be8b49a43f95590f94c0f9", "node_id": "C_kwDOAAsO6NoAKDJmNmJhN2I0ZGE4MWFmZTk2NmJlOGI0OWE0M2Y5NTU5MGY5NGMwZjk", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-27T05:11:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-27T05:11:52Z"}, "message": "Rollup merge of #108463 - clubby789:update-check-output, r=albertlarsan68\n\nbootstrap: Update the output of the `check` descriptions\n\nThis should bring the output from `x check` in line with the changes in #108171", "tree": {"sha": "7f9648cd0827266653a774d596e333515333979d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f9648cd0827266653a774d596e333515333979d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f6ba7b4da81afe966be8b49a43f95590f94c0f9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj/DuYCRBK7hj4Ov3rIwAA1YAIAHtqE79Ke6ELBDcaSUuZJhGL\nP/CuJenDKqh0HMJa8gGj8TRnNXvqHQ8RcNFnQS7D0ELA55ALYP/CP8aIREclNIup\nfHaTgMcTOhlBtZss1kVJmGnJhVFdxDQuSmbNaBa2TYqiaAhOw86IptMuX/iHESgc\nLfpTCLMqTgdy2K7VA344ZMSz7EhpPgm3I4UX39Kz0UiwszJOpjh2PcsMQYcaZWGL\nFUIHcp76PqvpE8KeTeTgswWD65o/JB2Ep7LAheaFnGdCdw6n5G4k89iRcM9a1AF0\nY1pXxTR9iD4SoJh81dLi22OwW5VeHbK9jsTNJod/v71R5Dj7J1dDVrnAk8o9vzk=\n=YfGP\n-----END PGP SIGNATURE-----\n", "payload": "tree 7f9648cd0827266653a774d596e333515333979d\nparent 3fcc79f04a27850c243e33dd32c42b19ba64ee11\nparent b30d0da6f3f209766b7644fb73d5548eb8180572\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1677474712 +0100\ncommitter GitHub <noreply@github.com> 1677474712 +0100\n\nRollup merge of #108463 - clubby789:update-check-output, r=albertlarsan68\n\nbootstrap: Update the output of the `check` descriptions\n\nThis should bring the output from `x check` in line with the changes in #108171\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f6ba7b4da81afe966be8b49a43f95590f94c0f9", "html_url": "https://github.com/rust-lang/rust/commit/2f6ba7b4da81afe966be8b49a43f95590f94c0f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f6ba7b4da81afe966be8b49a43f95590f94c0f9/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fcc79f04a27850c243e33dd32c42b19ba64ee11", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fcc79f04a27850c243e33dd32c42b19ba64ee11", "html_url": "https://github.com/rust-lang/rust/commit/3fcc79f04a27850c243e33dd32c42b19ba64ee11"}, {"sha": "b30d0da6f3f209766b7644fb73d5548eb8180572", "url": "https://api.github.com/repos/rust-lang/rust/commits/b30d0da6f3f209766b7644fb73d5548eb8180572", "html_url": "https://github.com/rust-lang/rust/commit/b30d0da6f3f209766b7644fb73d5548eb8180572"}], "stats": {"total": 88, "additions": 60, "deletions": 28}, "files": [{"sha": "cd19667139ab6274bf7105fc75accaa90d0e81a3", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 60, "deletions": 28, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/2f6ba7b4da81afe966be8b49a43f95590f94c0f9/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f6ba7b4da81afe966be8b49a43f95590f94c0f9/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=2f6ba7b4da81afe966be8b49a43f95590f94c0f9", "patch": "@@ -105,10 +105,15 @@ impl Step for Std {\n             cargo.arg(\"--lib\");\n         }\n \n-        builder.info(&format!(\n-            \"Checking stage{} library artifacts ({} -> {})\",\n-            builder.top_stage, &compiler.host, target\n-        ));\n+        let msg = if compiler.host == target {\n+            format!(\"Checking stage{} library artifacts ({target})\", builder.top_stage)\n+        } else {\n+            format!(\n+                \"Checking stage{} library artifacts ({} -> {})\",\n+                builder.top_stage, &compiler.host, target\n+            )\n+        };\n+        builder.info(&msg);\n         run_cargo(\n             builder,\n             cargo,\n@@ -162,10 +167,18 @@ impl Step for Std {\n             cargo.arg(\"-p\").arg(krate.name);\n         }\n \n-        builder.info(&format!(\n-            \"Checking stage{} library test/bench/example targets ({} -> {})\",\n-            builder.top_stage, &compiler.host, target\n-        ));\n+        let msg = if compiler.host == target {\n+            format!(\n+                \"Checking stage{} library test/bench/example targets ({target})\",\n+                builder.top_stage\n+            )\n+        } else {\n+            format!(\n+                \"Checking stage{} library test/bench/example targets ({} -> {})\",\n+                builder.top_stage, &compiler.host, target\n+            )\n+        };\n+        builder.info(&msg);\n         run_cargo(\n             builder,\n             cargo,\n@@ -239,10 +252,15 @@ impl Step for Rustc {\n             cargo.arg(\"-p\").arg(krate.name);\n         }\n \n-        builder.info(&format!(\n-            \"Checking stage{} compiler artifacts ({} -> {})\",\n-            builder.top_stage, &compiler.host, target\n-        ));\n+        let msg = if compiler.host == target {\n+            format!(\"Checking stage{} compiler artifacts ({target})\", builder.top_stage)\n+        } else {\n+            format!(\n+                \"Checking stage{} compiler artifacts ({} -> {})\",\n+                builder.top_stage, &compiler.host, target\n+            )\n+        };\n+        builder.info(&msg);\n         run_cargo(\n             builder,\n             cargo,\n@@ -299,10 +317,15 @@ impl Step for CodegenBackend {\n             .arg(builder.src.join(format!(\"compiler/rustc_codegen_{}/Cargo.toml\", backend)));\n         rustc_cargo_env(builder, &mut cargo, target);\n \n-        builder.info(&format!(\n-            \"Checking stage{} {} artifacts ({} -> {})\",\n-            builder.top_stage, backend, &compiler.host.triple, target.triple\n-        ));\n+        let msg = if compiler.host == target {\n+            format!(\"Checking stage{} {} artifacts ({target})\", builder.top_stage, backend)\n+        } else {\n+            format!(\n+                \"Checking stage{} {} library ({} -> {})\",\n+                builder.top_stage, backend, &compiler.host.triple, target.triple\n+            )\n+        };\n+        builder.info(&msg);\n \n         run_cargo(\n             builder,\n@@ -362,10 +385,15 @@ impl Step for RustAnalyzer {\n             cargo.arg(\"--benches\");\n         }\n \n-        builder.info(&format!(\n-            \"Checking stage{} {} artifacts ({} -> {})\",\n-            compiler.stage, \"rust-analyzer\", &compiler.host.triple, target.triple\n-        ));\n+        let msg = if compiler.host == target {\n+            format!(\"Checking stage{} {} artifacts ({target})\", compiler.stage, \"rust-analyzer\")\n+        } else {\n+            format!(\n+                \"Checking stage{} {} artifacts ({} -> {})\",\n+                compiler.stage, \"rust-analyzer\", &compiler.host.triple, target.triple\n+            )\n+        };\n+        builder.info(&msg);\n         run_cargo(\n             builder,\n             cargo,\n@@ -432,14 +460,18 @@ macro_rules! tool_check_step {\n                 // NOTE: this doesn't enable lints for any other tools unless they explicitly add `#![warn(rustc::internal)]`\n                 // See https://github.com/rust-lang/rust/pull/80573#issuecomment-754010776\n                 cargo.rustflag(\"-Zunstable-options\");\n-\n-                builder.info(&format!(\n-                    \"Checking stage{} {} artifacts ({} -> {})\",\n-                    builder.top_stage,\n-                    stringify!($name).to_lowercase(),\n-                    &compiler.host.triple,\n-                    target.triple\n-                ));\n+                let msg = if compiler.host == target {\n+                    format!(\"Checking stage{} {} artifacts ({target})\", builder.top_stage, stringify!($name).to_lowercase())\n+                } else {\n+                    format!(\n+                        \"Checking stage{} {} artifacts ({} -> {})\",\n+                        builder.top_stage,\n+                        stringify!($name).to_lowercase(),\n+                        &compiler.host.triple,\n+                        target.triple\n+                    )\n+                };\n+                builder.info(&msg);\n                 run_cargo(\n                     builder,\n                     cargo,"}]}