{"sha": "4ad40a8737ab4ffaf6352ec4560fd86cb0b4ade8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhZDQwYTg3MzdhYjRmZmFmNjM1MmVjNDU2MGZkODZjYjBiNGFkZTg=", "commit": {"author": {"name": "Roman Proskuryakov", "email": "humbug@deeptown.org", "date": "2020-07-05T13:07:09Z"}, "committer": {"name": "Roman Proskuryakov", "email": "humbug@deeptown.org", "date": "2020-07-05T13:07:09Z"}, "message": "Remove LengthAtMost32", "tree": {"sha": "347d11604396a6ab6db2c779250b74a338055b7e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/347d11604396a6ab6db2c779250b74a338055b7e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ad40a8737ab4ffaf6352ec4560fd86cb0b4ade8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ad40a8737ab4ffaf6352ec4560fd86cb0b4ade8", "html_url": "https://github.com/rust-lang/rust/commit/4ad40a8737ab4ffaf6352ec4560fd86cb0b4ade8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ad40a8737ab4ffaf6352ec4560fd86cb0b4ade8/comments", "author": {"login": "kpp", "id": 467709, "node_id": "MDQ6VXNlcjQ2NzcwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/467709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kpp", "html_url": "https://github.com/kpp", "followers_url": "https://api.github.com/users/kpp/followers", "following_url": "https://api.github.com/users/kpp/following{/other_user}", "gists_url": "https://api.github.com/users/kpp/gists{/gist_id}", "starred_url": "https://api.github.com/users/kpp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kpp/subscriptions", "organizations_url": "https://api.github.com/users/kpp/orgs", "repos_url": "https://api.github.com/users/kpp/repos", "events_url": "https://api.github.com/users/kpp/events{/privacy}", "received_events_url": "https://api.github.com/users/kpp/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kpp", "id": 467709, "node_id": "MDQ6VXNlcjQ2NzcwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/467709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kpp", "html_url": "https://github.com/kpp", "followers_url": "https://api.github.com/users/kpp/followers", "following_url": "https://api.github.com/users/kpp/following{/other_user}", "gists_url": "https://api.github.com/users/kpp/gists{/gist_id}", "starred_url": "https://api.github.com/users/kpp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kpp/subscriptions", "organizations_url": "https://api.github.com/users/kpp/orgs", "repos_url": "https://api.github.com/users/kpp/repos", "events_url": "https://api.github.com/users/kpp/events{/privacy}", "received_events_url": "https://api.github.com/users/kpp/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eff62069ad602090e8d27b83cffd9e77479ed4be", "url": "https://api.github.com/repos/rust-lang/rust/commits/eff62069ad602090e8d27b83cffd9e77479ed4be", "html_url": "https://github.com/rust-lang/rust/commit/eff62069ad602090e8d27b83cffd9e77479ed4be"}], "stats": {"total": 26, "additions": 0, "deletions": 26}, "files": [{"sha": "1d3e255eaae6a3a713ea85abbe00d20b2d3a2c26", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4ad40a8737ab4ffaf6352ec4560fd86cb0b4ade8/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ad40a8737ab4ffaf6352ec4560fd86cb0b4ade8/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=4ad40a8737ab4ffaf6352ec4560fd86cb0b4ade8", "patch": "@@ -84,7 +84,6 @@\n #![feature(cfg_target_has_atomic)]\n #![feature(coerce_unsized)]\n #![feature(const_btree_new)]\n-#![feature(const_generic_impls_guard)]\n #![feature(const_generics)]\n #![feature(const_in_array_repeat_expressions)]\n #![cfg_attr(bootstrap, feature(const_if_match))]"}, {"sha": "c0bf3833b9c3366a3ce5e82bb588f4902bd25ca7", "filename": "src/libcore/array/mod.rs", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/4ad40a8737ab4ffaf6352ec4560fd86cb0b4ade8/src%2Flibcore%2Farray%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ad40a8737ab4ffaf6352ec4560fd86cb0b4ade8/src%2Flibcore%2Farray%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Farray%2Fmod.rs?ref=4ad40a8737ab4ffaf6352ec4560fd86cb0b4ade8", "patch": "@@ -342,31 +342,6 @@ impl<T: Ord, const N: usize> Ord for [T; N] {\n     }\n }\n \n-/// Implemented for lengths where trait impls are allowed on arrays in core/std\n-#[rustc_on_unimplemented(message = \"arrays only have std trait implementations for lengths 0..=32\")]\n-#[unstable(\n-    feature = \"const_generic_impls_guard\",\n-    issue = \"none\",\n-    reason = \"will never be stable, just a temporary step until const generics are stable\"\n-)]\n-pub trait LengthAtMost32 {}\n-\n-macro_rules! array_impls {\n-    ($($N:literal)+) => {\n-        $(\n-            #[unstable(feature = \"const_generic_impls_guard\", issue = \"none\")]\n-            impl<T> LengthAtMost32 for [T; $N] {}\n-        )+\n-    }\n-}\n-\n-array_impls! {\n-     0  1  2  3  4  5  6  7  8  9\n-    10 11 12 13 14 15 16 17 18 19\n-    20 21 22 23 24 25 26 27 28 29\n-    30 31 32\n-}\n-\n // The Default impls cannot be generated using the array_impls! macro because\n // they require array literals.\n "}]}