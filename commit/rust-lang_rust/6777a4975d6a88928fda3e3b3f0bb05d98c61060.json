{"sha": "6777a4975d6a88928fda3e3b3f0bb05d98c61060", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3NzdhNDk3NWQ2YTg4OTI4ZmRhM2UzYjNmMGJiMDVkOThjNjEwNjA=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-04-07T18:40:01Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-04-07T18:40:01Z"}, "message": "Move hir_trait_id to extension trait", "tree": {"sha": "549d8b9eb2a30b9c6542f87545936e8283b8a8dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/549d8b9eb2a30b9c6542f87545936e8283b8a8dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6777a4975d6a88928fda3e3b3f0bb05d98c61060", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6777a4975d6a88928fda3e3b3f0bb05d98c61060", "html_url": "https://github.com/rust-lang/rust/commit/6777a4975d6a88928fda3e3b3f0bb05d98c61060", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6777a4975d6a88928fda3e3b3f0bb05d98c61060/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86feac18e8f96a99830defd707eb221f12d02924", "url": "https://api.github.com/repos/rust-lang/rust/commits/86feac18e8f96a99830defd707eb221f12d02924", "html_url": "https://github.com/rust-lang/rust/commit/86feac18e8f96a99830defd707eb221f12d02924"}], "stats": {"total": 46, "additions": 27, "deletions": 19}, "files": [{"sha": "f5cb7a4dffe680221ac8915d81531f630ef7c773", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6777a4975d6a88928fda3e3b3f0bb05d98c61060/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6777a4975d6a88928fda3e3b3f0bb05d98c61060/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=6777a4975d6a88928fda3e3b3f0bb05d98c61060", "patch": "@@ -59,7 +59,8 @@ use hir_ty::{\n     traits::FnTrait,\n     AliasEq, AliasTy, BoundVar, CallableDefId, CallableSig, Canonical, CanonicalVarKinds, Cast,\n     DebruijnIndex, InEnvironment, Interner, QuantifiedWhereClause, Scalar, Solution, Substitution,\n-    TraitEnvironment, Ty, TyBuilder, TyDefId, TyExt, TyKind, TyVariableKind, WhereClause,\n+    TraitEnvironment, TraitRefExt, Ty, TyBuilder, TyDefId, TyExt, TyKind, TyVariableKind,\n+    WhereClause,\n };\n use itertools::Itertools;\n use rustc_hash::FxHashSet;"}, {"sha": "95538eff7478c9ee1e5334350c46d21da916b56f", "filename": "crates/hir_ty/src/chalk_ext.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6777a4975d6a88928fda3e3b3f0bb05d98c61060/crates%2Fhir_ty%2Fsrc%2Fchalk_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6777a4975d6a88928fda3e3b3f0bb05d98c61060/crates%2Fhir_ty%2Fsrc%2Fchalk_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fchalk_ext.rs?ref=6777a4975d6a88928fda3e3b3f0bb05d98c61060", "patch": "@@ -260,3 +260,13 @@ impl ProjectionTyExt for ProjectionTy {\n         }\n     }\n }\n+\n+pub trait TraitRefExt {\n+    fn hir_trait_id(&self) -> TraitId;\n+}\n+\n+impl TraitRefExt for TraitRef {\n+    fn hir_trait_id(&self) -> TraitId {\n+        from_chalk_trait_id(self.trait_id)\n+    }\n+}"}, {"sha": "52c2d6347720e9fb8ec832786f910e11d4d3b847", "filename": "crates/hir_ty/src/display.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6777a4975d6a88928fda3e3b3f0bb05d98c61060/crates%2Fhir_ty%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6777a4975d6a88928fda3e3b3f0bb05d98c61060/crates%2Fhir_ty%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdisplay.rs?ref=6777a4975d6a88928fda3e3b3f0bb05d98c61060", "patch": "@@ -24,7 +24,7 @@ use crate::{\n     traits::chalk::from_chalk, utils::generics, AdtId, AliasEq, AliasTy, CallableDefId,\n     CallableSig, Const, ConstValue, DomainGoal, GenericArg, ImplTraitId, Interner, Lifetime,\n     LifetimeData, LifetimeOutlives, Mutability, OpaqueTy, ProjectionTy, ProjectionTyExt,\n-    QuantifiedWhereClause, Scalar, TraitRef, Ty, TyExt, TyKind, WhereClause,\n+    QuantifiedWhereClause, Scalar, TraitRef, TraitRefExt, Ty, TyExt, TyKind, WhereClause,\n };\n \n pub struct HirFormatter<'a> {"}, {"sha": "f8955aa32494f8892c9641fdc0a477f77c25ffae", "filename": "crates/hir_ty/src/infer/path.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6777a4975d6a88928fda3e3b3f0bb05d98c61060/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6777a4975d6a88928fda3e3b3f0bb05d98c61060/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpath.rs?ref=6777a4975d6a88928fda3e3b3f0bb05d98c61060", "patch": "@@ -11,7 +11,8 @@ use hir_def::{\n use hir_expand::name::Name;\n \n use crate::{\n-    method_resolution, Interner, Substitution, Ty, TyBuilder, TyExt, TyKind, ValueTyDefId,\n+    method_resolution, Interner, Substitution, TraitRefExt, Ty, TyBuilder, TyExt, TyKind,\n+    ValueTyDefId,\n };\n \n use super::{ExprOrPatId, InferenceContext, TraitRef};"}, {"sha": "7538e08741090e5a9702e1d2a5655f65281ad824", "filename": "crates/hir_ty/src/lib.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6777a4975d6a88928fda3e3b3f0bb05d98c61060/crates%2Fhir_ty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6777a4975d6a88928fda3e3b3f0bb05d98c61060/crates%2Fhir_ty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Flib.rs?ref=6777a4975d6a88928fda3e3b3f0bb05d98c61060", "patch": "@@ -41,7 +41,7 @@ use crate::{db::HirDatabase, display::HirDisplay, utils::generics};\n \n pub use autoderef::autoderef;\n pub use builder::TyBuilder;\n-pub use chalk_ext::{ProjectionTyExt, TyExt};\n+pub use chalk_ext::*;\n pub use infer::{could_unify, InferenceResult};\n pub use lower::{\n     associated_type_shorthand_candidates, callable_item_sig, CallableDefId, ImplTraitLoweringMode,\n@@ -107,12 +107,6 @@ pub fn make_only_type_binders<T>(num_vars: usize, value: T) -> Binders<T> {\n     )\n }\n \n-impl TraitRef {\n-    pub fn hir_trait_id(&self) -> TraitId {\n-        from_chalk_trait_id(self.trait_id)\n-    }\n-}\n-\n impl<T> Canonical<T> {\n     pub fn new(value: T, kinds: impl IntoIterator<Item = TyVariableKind>) -> Self {\n         let kinds = kinds.into_iter().map(|tk| {"}, {"sha": "e6903e189e083189c2bedd098ca702fa1f1bfce4", "filename": "crates/hir_ty/src/lower.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6777a4975d6a88928fda3e3b3f0bb05d98c61060/crates%2Fhir_ty%2Fsrc%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6777a4975d6a88928fda3e3b3f0bb05d98c61060/crates%2Fhir_ty%2Fsrc%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Flower.rs?ref=6777a4975d6a88928fda3e3b3f0bb05d98c61060", "patch": "@@ -35,7 +35,7 @@ use crate::{\n     AliasEq, AliasTy, Binders, BoundVar, CallableSig, DebruijnIndex, DynTy, FnPointer, FnSig,\n     FnSubst, ImplTraitId, OpaqueTy, PolyFnSig, ProjectionTy, QuantifiedWhereClause,\n     QuantifiedWhereClauses, ReturnTypeImplTrait, ReturnTypeImplTraits, Substitution,\n-    TraitEnvironment, TraitRef, Ty, TyBuilder, TyKind, TypeWalk, WhereClause,\n+    TraitEnvironment, TraitRef, TraitRefExt, Ty, TyBuilder, TyKind, TypeWalk, WhereClause,\n };\n \n #[derive(Debug)]"}, {"sha": "7380b8613a414f2b25265703e31d92d8a4eca244", "filename": "crates/hir_ty/src/method_resolution.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6777a4975d6a88928fda3e3b3f0bb05d98c61060/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6777a4975d6a88928fda3e3b3f0bb05d98c61060/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs?ref=6777a4975d6a88928fda3e3b3f0bb05d98c61060", "patch": "@@ -22,8 +22,8 @@ use crate::{\n     static_lifetime,\n     utils::all_super_traits,\n     AdtId, Canonical, CanonicalVarKinds, DebruijnIndex, FnPointer, FnSig, ForeignDefId,\n-    InEnvironment, Interner, Scalar, Substitution, TraitEnvironment, Ty, TyBuilder, TyExt, TyKind,\n-    TypeWalk,\n+    InEnvironment, Interner, Scalar, Substitution, TraitEnvironment, TraitRefExt, Ty, TyBuilder,\n+    TyExt, TyKind, TypeWalk,\n };\n \n /// This is used as a key for indexing impls."}, {"sha": "7d87741b8e862ebaea5f78a8555a0922e65fc997", "filename": "crates/hir_ty/src/traits.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6777a4975d6a88928fda3e3b3f0bb05d98c61060/crates%2Fhir_ty%2Fsrc%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6777a4975d6a88928fda3e3b3f0bb05d98c61060/crates%2Fhir_ty%2Fsrc%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftraits.rs?ref=6777a4975d6a88928fda3e3b3f0bb05d98c61060", "patch": "@@ -9,7 +9,7 @@ use stdx::panic_context;\n \n use crate::{\n     db::HirDatabase, AliasEq, AliasTy, Canonical, DomainGoal, Guidance, HirDisplay, InEnvironment,\n-    Solution, Ty, TyKind, WhereClause,\n+    Solution, TraitRefExt, Ty, TyKind, WhereClause,\n };\n \n use self::chalk::{from_chalk, Interner, ToChalk};"}, {"sha": "090f6492b438b72f0e03885df6f031c17a9d87a0", "filename": "crates/hir_ty/src/traits/chalk.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6777a4975d6a88928fda3e3b3f0bb05d98c61060/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6777a4975d6a88928fda3e3b3f0bb05d98c61060/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk.rs?ref=6777a4975d6a88928fda3e3b3f0bb05d98c61060", "patch": "@@ -22,7 +22,7 @@ use crate::{\n     to_assoc_type_id, to_chalk_trait_id,\n     utils::generics,\n     AliasEq, AliasTy, BoundVar, CallableDefId, DebruijnIndex, FnDefId, ProjectionTy, Substitution,\n-    TraitRef, Ty, TyBuilder, TyExt, TyKind, WhereClause,\n+    TraitRef, TraitRefExt, Ty, TyBuilder, TyExt, TyKind, WhereClause,\n };\n use mapping::{\n     convert_where_clauses, generic_predicate_to_inline_bound, make_binders, TypeAliasAsValue,"}, {"sha": "f64b5f4f824dbe0051910dffa3a96587387f4781", "filename": "crates/hir_ty/src/traits/chalk/mapping.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6777a4975d6a88928fda3e3b3f0bb05d98c61060/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk%2Fmapping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6777a4975d6a88928fda3e3b3f0bb05d98c61060/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk%2Fmapping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk%2Fmapping.rs?ref=6777a4975d6a88928fda3e3b3f0bb05d98c61060", "patch": "@@ -10,9 +10,9 @@ use base_db::salsa::InternKey;\n use hir_def::{GenericDefId, TypeAliasId};\n \n use crate::{\n-    chalk_ext::ProjectionTyExt, db::HirDatabase, static_lifetime, AliasTy, CallableDefId,\n-    Canonical, ConstrainedSubst, DomainGoal, FnPointer, GenericArg, InEnvironment, OpaqueTy,\n-    ProjectionTy, QuantifiedWhereClause, Substitution, TraitRef, Ty, TypeWalk, WhereClause,\n+    db::HirDatabase, static_lifetime, AliasTy, CallableDefId, Canonical, ConstrainedSubst,\n+    DomainGoal, FnPointer, GenericArg, InEnvironment, OpaqueTy, ProjectionTy, ProjectionTyExt,\n+    QuantifiedWhereClause, Substitution, TraitRef, Ty, TypeWalk, WhereClause,\n };\n \n use super::interner::*;"}, {"sha": "8d5d5cd73396f5406fa177cc0638f0b635d4f9d6", "filename": "crates/hir_ty/src/utils.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6777a4975d6a88928fda3e3b3f0bb05d98c61060/crates%2Fhir_ty%2Fsrc%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6777a4975d6a88928fda3e3b3f0bb05d98c61060/crates%2Fhir_ty%2Fsrc%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Futils.rs?ref=6777a4975d6a88928fda3e3b3f0bb05d98c61060", "patch": "@@ -16,7 +16,9 @@ use hir_def::{\n };\n use hir_expand::name::{name, Name};\n \n-use crate::{db::HirDatabase, Interner, Substitution, TraitRef, TyKind, TypeWalk, WhereClause};\n+use crate::{\n+    db::HirDatabase, Interner, Substitution, TraitRef, TraitRefExt, TyKind, TypeWalk, WhereClause,\n+};\n \n fn direct_super_traits(db: &dyn DefDatabase, trait_: TraitId) -> Vec<TraitId> {\n     let resolver = trait_.resolver(db);"}]}