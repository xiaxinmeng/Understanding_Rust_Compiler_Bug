{"sha": "31dd4f4acbcbdb02b0745d2136399ed664a28050", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxZGQ0ZjRhY2JjYmRiMDJiMDc0NWQyMTM2Mzk5ZWQ2NjRhMjgwNTA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-13T17:39:01Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-13T17:39:01Z"}, "message": "Auto merge of #68088 - oli-obk:fix_miri, r=RalfJung\n\nDon't try to force_ptr pointers to zsts\n\nr? @RalfJung\n\ncc @wesleywiser\n\nThis is required to fix miri after https://github.com/rust-lang/rust/pull/67501 broke it. The reason only miri sees this is that it uses validation on values during interpretation and not just on the final value of constants, which never contain such values.", "tree": {"sha": "f23b2164b102686755c4bd7ac1cf7f2204b103a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f23b2164b102686755c4bd7ac1cf7f2204b103a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31dd4f4acbcbdb02b0745d2136399ed664a28050", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31dd4f4acbcbdb02b0745d2136399ed664a28050", "html_url": "https://github.com/rust-lang/rust/commit/31dd4f4acbcbdb02b0745d2136399ed664a28050", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31dd4f4acbcbdb02b0745d2136399ed664a28050/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf84eb538fd16743240434b3e837b36c35719fee", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf84eb538fd16743240434b3e837b36c35719fee", "html_url": "https://github.com/rust-lang/rust/commit/bf84eb538fd16743240434b3e837b36c35719fee"}, {"sha": "19b9b26986246b92e1f686a9a7b29da42a79ed9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/19b9b26986246b92e1f686a9a7b29da42a79ed9f", "html_url": "https://github.com/rust-lang/rust/commit/19b9b26986246b92e1f686a9a7b29da42a79ed9f"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "2f0fb81fffd13db3322a64153e465dfdfa4d4fc5", "filename": "src/librustc_mir/interpret/validity.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/31dd4f4acbcbdb02b0745d2136399ed664a28050/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31dd4f4acbcbdb02b0745d2136399ed664a28050/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs?ref=31dd4f4acbcbdb02b0745d2136399ed664a28050", "patch": "@@ -608,9 +608,14 @@ impl<'rt, 'mir, 'tcx, M: Machine<'mir, 'tcx>> ValueVisitor<'mir, 'tcx, M>\n                     return Ok(());\n                 }\n                 // This is the element type size.\n-                let ty_size = self.ecx.layout_of(tys)?.size;\n+                let layout = self.ecx.layout_of(tys)?;\n+                // Empty tuples and fieldless structs (the only ZSTs that allow reaching this code)\n+                // have no data to be checked.\n+                if layout.is_zst() {\n+                    return Ok(());\n+                }\n                 // This is the size in bytes of the whole array.\n-                let size = ty_size * len;\n+                let size = layout.size * len;\n                 // Size is not 0, get a pointer.\n                 let ptr = self.ecx.force_ptr(mplace.ptr)?;\n \n@@ -640,7 +645,7 @@ impl<'rt, 'mir, 'tcx, M: Machine<'mir, 'tcx>> ValueVisitor<'mir, 'tcx, M>\n                                 // Some byte was undefined, determine which\n                                 // element that byte belongs to so we can\n                                 // provide an index.\n-                                let i = (offset.bytes() / ty_size.bytes()) as usize;\n+                                let i = (offset.bytes() / layout.size.bytes()) as usize;\n                                 self.path.push(PathElem::ArrayElem(i));\n \n                                 throw_validation_failure!(\"undefined bytes\", self.path)"}]}