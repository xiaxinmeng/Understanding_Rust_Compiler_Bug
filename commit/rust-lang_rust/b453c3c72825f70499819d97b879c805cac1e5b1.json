{"sha": "b453c3c72825f70499819d97b879c805cac1e5b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0NTNjM2M3MjgyNWY3MDQ5OTgxOWQ5N2I4NzljODA1Y2FjMWU1YjE=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-05-03T22:50:56Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-05-03T22:56:00Z"}, "message": "Start sketching --depend support in rustc.", "tree": {"sha": "5561667396700f4a12b1984e4c0cadda1bca4714", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5561667396700f4a12b1984e4c0cadda1bca4714"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b453c3c72825f70499819d97b879c805cac1e5b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b453c3c72825f70499819d97b879c805cac1e5b1", "html_url": "https://github.com/rust-lang/rust/commit/b453c3c72825f70499819d97b879c805cac1e5b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b453c3c72825f70499819d97b879c805cac1e5b1/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6871c245a67fab222eccc2a21dcb620d11d3b0d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/6871c245a67fab222eccc2a21dcb620d11d3b0d0", "html_url": "https://github.com/rust-lang/rust/commit/6871c245a67fab222eccc2a21dcb620d11d3b0d0"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "a6f6ae050623e3f1989bb742fb967e93016b590b", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b453c3c72825f70499819d97b879c805cac1e5b1/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b453c3c72825f70499819d97b879c805cac1e5b1/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=b453c3c72825f70499819d97b879c805cac1e5b1", "patch": "@@ -142,6 +142,7 @@ options:\n     --ls               list the symbols defined by a crate file\n     -L <path>          add a directory to the library search path\n     --noverify         suppress LLVM verification step (slight speedup)\n+    --depend           print dependencies, in makefile-rule form\n     --parse-only       parse only; do not compile, assemble, or link\n     -O                 optimize\n     -S                 compile only; do not assemble or link"}, {"sha": "a1b3392c609aad4841ccc8fd236b23f439532d09", "filename": "src/comp/front/eval.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b453c3c72825f70499819d97b879c805cac1e5b1/src%2Fcomp%2Ffront%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b453c3c72825f70499819d97b879c805cac1e5b1/src%2Fcomp%2Ffront%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Feval.rs?ref=b453c3c72825f70499819d97b879c805cac1e5b1", "patch": "@@ -24,8 +24,15 @@ tag val {\n     val_str(str);\n }\n \n+tag eval_mode {\n+    mode_depend;\n+    mode_parse;\n+}\n+\n type env = vec[tup(ident, val)];\n type ctx = @rec(parser p,\n+                eval_mode mode,\n+                mutable vec[str] deps,\n                 session.session sess,\n                 mutable uint chpos);\n \n@@ -383,6 +390,11 @@ fn eval_crate_directive(ctx cx,\n \n             auto full_path = prefix + std.fs.path_sep() + file_path;\n \n+            if (cx.mode == mode_depend) {\n+                cx.deps += vec(full_path);\n+                ret;\n+            }\n+\n             auto start_id = cx.p.next_def_id();\n             auto p0 = new_parser(cx.sess, e, start_id, full_path, cx.chpos);\n             auto m0 = parse_mod_items(p0, token.EOF);"}, {"sha": "904efc2ea4e8e821392d27ab2101d52b70f77740", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b453c3c72825f70499819d97b879c805cac1e5b1/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b453c3c72825f70499819d97b879c805cac1e5b1/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=b453c3c72825f70499819d97b879c805cac1e5b1", "patch": "@@ -2497,7 +2497,12 @@ fn parse_crate_from_crate_file(parser p) -> @ast.crate {\n     auto lo = p.get_lo_pos();\n     auto prefix = std.fs.dirname(p.get_filemap().name);\n     auto cdirs = parse_crate_directives(p, token.EOF);\n-    auto cx = @rec(p=p, sess=p.get_session(), mutable chpos=p.get_chpos());\n+    let vec[str] deps = vec();\n+    auto cx = @rec(p=p,\n+                   mode=eval.mode_parse,\n+                   mutable deps = deps,\n+                   sess=p.get_session(),\n+                   mutable chpos=p.get_chpos());\n     auto m = eval.eval_crate_directives_to_mod(cx, p.get_env(),\n                                                cdirs, prefix);\n     auto hi = p.get_hi_pos();"}]}