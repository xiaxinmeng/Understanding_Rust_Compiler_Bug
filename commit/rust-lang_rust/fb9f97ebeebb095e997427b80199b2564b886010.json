{"sha": "fb9f97ebeebb095e997427b80199b2564b886010", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiOWY5N2ViZWViYjA5NWU5OTc0MjdiODAxOTliMjU2NGI4ODYwMTA=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-08-14T00:54:14Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-08-22T00:17:50Z"}, "message": "rustc: More helpful error message when using a struct type like a function\n\nCloses #6702", "tree": {"sha": "c0aaaab8dace0e3da0f0287494f1c55d8f9cd63d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0aaaab8dace0e3da0f0287494f1c55d8f9cd63d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb9f97ebeebb095e997427b80199b2564b886010", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb9f97ebeebb095e997427b80199b2564b886010", "html_url": "https://github.com/rust-lang/rust/commit/fb9f97ebeebb095e997427b80199b2564b886010", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb9f97ebeebb095e997427b80199b2564b886010/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "393a130b3da254e7ac02931d7c4a74d02af41b5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/393a130b3da254e7ac02931d7c4a74d02af41b5c", "html_url": "https://github.com/rust-lang/rust/commit/393a130b3da254e7ac02931d7c4a74d02af41b5c"}], "stats": {"total": 60, "additions": 48, "deletions": 12}, "files": [{"sha": "cbc6cd1a3430ab62f91cad7cdf4257aac9f4bdfc", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 29, "deletions": 12, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/fb9f97ebeebb095e997427b80199b2564b886010/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb9f97ebeebb095e997427b80199b2564b886010/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=fb9f97ebeebb095e997427b80199b2564b886010", "patch": "@@ -4981,20 +4981,37 @@ impl Resolver {\n                                         wrong_name));\n                         }\n                         else {\n-                            // limit search to 5 to reduce the number\n-                            // of stupid suggestions\n-                            match self.find_best_match_for_name(wrong_name, 5) {\n-                                Some(m) => {\n+                            // Be helpful if the name refers to a struct\n+                            // (The pattern matching def_tys where the id is in self.structs\n+                            // matches on regular structs while excluding tuple- and\n+                            // enum-like structs, which wouldn't result in this error.)\n+                            match self.resolve_path(expr.id, path, TypeNS, false, visitor) {\n+                                Some(def_ty(struct_id))\n+                                  if self.structs.contains(&struct_id) => {\n                                     self.session.span_err(expr.span,\n-                                            fmt!(\"unresolved name `%s`. \\\n-                                                Did you mean `%s`?\",\n-                                                wrong_name, m));\n-                                }\n-                                None => {\n-                                    self.session.span_err(expr.span,\n-                                            fmt!(\"unresolved name `%s`.\",\n-                                                wrong_name));\n+                                            fmt!(\"`%s` is a structure name, but this expression \\\n+                                                uses it like a function name\", wrong_name));\n+\n+                                    self.session.span_note(expr.span, fmt!(\"Did you mean to write: \\\n+                                                `%s { /* fields */ }`?\", wrong_name));\n+\n                                 }\n+                                _ =>\n+                                   // limit search to 5 to reduce the number\n+                                   // of stupid suggestions\n+                                   match self.find_best_match_for_name(wrong_name, 5) {\n+                                       Some(m) => {\n+                                           self.session.span_err(expr.span,\n+                                               fmt!(\"unresolved name `%s`. \\\n+                                                   Did you mean `%s`?\",\n+                                                   wrong_name, m));\n+                                       }\n+                                       None => {\n+                                           self.session.span_err(expr.span,\n+                                                fmt!(\"unresolved name `%s`.\",\n+                                                    wrong_name));\n+                                       }\n+                                   }\n                             }\n                         }\n                     }"}, {"sha": "168aa5f9d691f5f59aad6a74a2ece5ae3c8c88fa", "filename": "src/test/compile-fail/issue-6702.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/fb9f97ebeebb095e997427b80199b2564b886010/src%2Ftest%2Fcompile-fail%2Fissue-6702.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb9f97ebeebb095e997427b80199b2564b886010/src%2Ftest%2Fcompile-fail%2Fissue-6702.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-6702.rs?ref=fb9f97ebeebb095e997427b80199b2564b886010", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct Monster {\n+    damage: int\n+}\n+\n+\n+fn main() {\n+    let _m = Monster(); //~ ERROR `Monster` is a structure name, but\n+    //~^ NOTE Did you mean to write: `Monster { /* fields */ }`?\n+}"}]}