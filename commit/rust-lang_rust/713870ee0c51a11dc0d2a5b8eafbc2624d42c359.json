{"sha": "713870ee0c51a11dc0d2a5b8eafbc2624d42c359", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxMzg3MGVlMGM1MWExMWRjMGQyYTViOGVhZmJjMjYyNGQ0MmMzNTk=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-01-28T16:03:24Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-01-28T16:03:24Z"}, "message": "Add the tests", "tree": {"sha": "80c27afadba55e1c92a799e04b9eb06233e6cb8d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80c27afadba55e1c92a799e04b9eb06233e6cb8d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/713870ee0c51a11dc0d2a5b8eafbc2624d42c359", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/713870ee0c51a11dc0d2a5b8eafbc2624d42c359", "html_url": "https://github.com/rust-lang/rust/commit/713870ee0c51a11dc0d2a5b8eafbc2624d42c359", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/713870ee0c51a11dc0d2a5b8eafbc2624d42c359/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07b505b6339b84c0dfd5c6b1b5aaa163f73f1df2", "url": "https://api.github.com/repos/rust-lang/rust/commits/07b505b6339b84c0dfd5c6b1b5aaa163f73f1df2", "html_url": "https://github.com/rust-lang/rust/commit/07b505b6339b84c0dfd5c6b1b5aaa163f73f1df2"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "43b9b124a2d403a27595eab5894ab57153ce2868", "filename": "crates/ra_hir_def/src/find_path.rs", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/713870ee0c51a11dc0d2a5b8eafbc2624d42c359/crates%2Fra_hir_def%2Fsrc%2Ffind_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/713870ee0c51a11dc0d2a5b8eafbc2624d42c359/crates%2Fra_hir_def%2Fsrc%2Ffind_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Ffind_path.rs?ref=713870ee0c51a11dc0d2a5b8eafbc2624d42c359", "patch": "@@ -8,6 +8,7 @@ use crate::{\n     CrateId, ModuleDefId, ModuleId,\n };\n use hir_expand::name::{known, Name};\n+use test_utils::tested_by;\n \n const MAX_PATH_LEN: usize = 15;\n \n@@ -151,8 +152,10 @@ fn find_path_inner(\n \n fn select_best_path(old_path: ModPath, new_path: ModPath) -> ModPath {\n     if old_path.starts_with_std() && new_path.should_start_with_std() {\n+        tested_by!(prefer_std_paths);\n         old_path\n     } else if new_path.starts_with_std() && old_path.should_start_with_std() {\n+        tested_by!(prefer_std_paths);\n         new_path\n     } else if new_path.len() < old_path.len() {\n         new_path\n@@ -231,6 +234,7 @@ mod tests {\n     use hir_expand::hygiene::Hygiene;\n     use ra_db::fixture::WithFixture;\n     use ra_syntax::ast::AstNode;\n+    use test_utils::covers;\n \n     /// `code` needs to contain a cursor marker; checks that `find_path` for the\n     /// item the `path` refers to returns that same path when called from the\n@@ -482,4 +486,41 @@ mod tests {\n         \"#;\n         check_found_path(code, \"crate::foo::S\");\n     }\n+\n+    #[test]\n+    fn prefer_std_paths_over_alloc() {\n+        covers!(prefer_std_paths);\n+        let code = r#\"\n+        //- /main.rs crate:main deps:alloc,std\n+        <|>\n+\n+        //- /std.rs crate:std deps:alloc\n+        pub mod sync {\n+            pub use alloc::sync::Arc;\n+        }\n+\n+        //- /zzz.rs crate:alloc\n+        pub mod sync {\n+            pub struct Arc;\n+        }\n+        \"#;\n+        check_found_path(code, \"std::sync::Arc\");\n+    }\n+\n+    #[test]\n+    fn prefer_shorter_paths_if_not_alloc() {\n+        let code = r#\"\n+        //- /main.rs crate:main deps:megaalloc,std\n+        <|>\n+\n+        //- /std.rs crate:std deps:megaalloc\n+        pub mod sync {\n+            pub use megaalloc::sync::Arc;\n+        }\n+\n+        //- /zzz.rs crate:megaalloc\n+        pub struct Arc;\n+        \"#;\n+        check_found_path(code, \"megaalloc::Arc\");\n+    }\n }"}, {"sha": "daa49d5f1040b6e792127d3299261fe685b76322", "filename": "crates/ra_hir_def/src/marks.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/713870ee0c51a11dc0d2a5b8eafbc2624d42c359/crates%2Fra_hir_def%2Fsrc%2Fmarks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/713870ee0c51a11dc0d2a5b8eafbc2624d42c359/crates%2Fra_hir_def%2Fsrc%2Fmarks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fmarks.rs?ref=713870ee0c51a11dc0d2a5b8eafbc2624d42c359", "patch": "@@ -13,4 +13,5 @@ test_utils::marks!(\n     macro_dollar_crate_self\n     macro_dollar_crate_other\n     infer_resolve_while_let\n+    prefer_std_paths\n );"}]}