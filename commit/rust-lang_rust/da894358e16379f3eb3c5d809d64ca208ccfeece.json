{"sha": "da894358e16379f3eb3c5d809d64ca208ccfeece", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhODk0MzU4ZTE2Mzc5ZjNlYjNjNWQ4MDlkNjRjYTIwOGNjZmVlY2U=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-08-02T18:43:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-02T18:43:02Z"}, "message": "Merge #9764\n\n9764: fix: Don't use the module as the candidate node in fuzzy path flyimport r=Veykril a=Veykril\n\nThe problem was that the candidate node is whats being used for the scope, so using an inline module will yield the surrounding scope of the module instead of the scope of the module itself.\r\nAlso seems to fix the problem in this comment https://github.com/rust-analyzer/rust-analyzer/issues/9760#issuecomment-891125674, though I could not recreate that in a test for some reason.\r\n\r\nFixes #9760\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "4afc8bc063feed2b70e3f6d3e9f2060a05094cc3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4afc8bc063feed2b70e3f6d3e9f2060a05094cc3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da894358e16379f3eb3c5d809d64ca208ccfeece", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhCDy2CRBK7hj4Ov3rIwAA51sIAGvApxiRqRFVjKOtqNr4YcqR\nLPFHKosS0u77hbbnhdc6QFCOf2+rA9aGwvzjBcCtagcmlbnLz6AyxMlLMuKiwYC5\nxnqtVZYP6rj3OEYOWAps/3bkjqc8LQ1ZJ3Z/Wb/wsW4QiDhlXXtHZ/V4L8swvXGT\nGWYsyZVI7WWAGHFy6gbsK8HSEAPcg8LVFMELwj2ieOhAoLbR/hKutEHuIkdxkqcB\nOgAieOMVIIKES+UW7F2GbMO8JqxhU7QbmHRHV6XAh6WUc1mJ9G+tKQyOHZQduKF8\nB6KNHvupVW3cD5CN7FW2kYSIZIBLy2XsPgfM7ftRN8oQnVmRfTYOdWFBvn/q/0A=\n=v7dk\n-----END PGP SIGNATURE-----\n", "payload": "tree 4afc8bc063feed2b70e3f6d3e9f2060a05094cc3\nparent 29506b5a26ef0c448c0e50164b2a7782fb7e3f5a\nparent e138676664e4ec6c1e85612a19d5d83b49a9b7a2\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1627929782 +0000\ncommitter GitHub <noreply@github.com> 1627929782 +0000\n\nMerge #9764\n\n9764: fix: Don't use the module as the candidate node in fuzzy path flyimport r=Veykril a=Veykril\n\nThe problem was that the candidate node is whats being used for the scope, so using an inline module will yield the surrounding scope of the module instead of the scope of the module itself.\r\nAlso seems to fix the problem in this comment https://github.com/rust-analyzer/rust-analyzer/issues/9760#issuecomment-891125674, though I could not recreate that in a test for some reason.\r\n\r\nFixes #9760\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da894358e16379f3eb3c5d809d64ca208ccfeece", "html_url": "https://github.com/rust-lang/rust/commit/da894358e16379f3eb3c5d809d64ca208ccfeece", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da894358e16379f3eb3c5d809d64ca208ccfeece/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29506b5a26ef0c448c0e50164b2a7782fb7e3f5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/29506b5a26ef0c448c0e50164b2a7782fb7e3f5a", "html_url": "https://github.com/rust-lang/rust/commit/29506b5a26ef0c448c0e50164b2a7782fb7e3f5a"}, {"sha": "e138676664e4ec6c1e85612a19d5d83b49a9b7a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/e138676664e4ec6c1e85612a19d5d83b49a9b7a2", "html_url": "https://github.com/rust-lang/rust/commit/e138676664e4ec6c1e85612a19d5d83b49a9b7a2"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "392db66a8d1d7c9460544f5026187101e02e1b13", "filename": "crates/ide_completion/src/completions/flyimport.rs", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/da894358e16379f3eb3c5d809d64ca208ccfeece/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fflyimport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da894358e16379f3eb3c5d809d64ca208ccfeece/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fflyimport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fflyimport.rs?ref=da894358e16379f3eb3c5d809d64ca208ccfeece", "patch": "@@ -186,17 +186,12 @@ fn import_assets(ctx: &CompletionContext, fuzzy_name: String) -> Option<ImportAs\n         )\n     } else {\n         let fuzzy_name_length = fuzzy_name.len();\n-        let approximate_node = match current_module.definition_source(ctx.db).value {\n-            hir::ModuleSource::SourceFile(s) => s.syntax().clone(),\n-            hir::ModuleSource::Module(m) => m.syntax().clone(),\n-            hir::ModuleSource::BlockExpr(b) => b.syntax().clone(),\n-        };\n         let assets_for_path = ImportAssets::for_fuzzy_path(\n             current_module,\n             ctx.path_qual().cloned(),\n             fuzzy_name,\n             &ctx.sema,\n-            approximate_node,\n+            ctx.token.parent()?,\n         )?;\n \n         if matches!(assets_for_path.import_candidate(), ImportCandidate::Path(_))\n@@ -1189,4 +1184,23 @@ impl<T> Private for T {}\n             expect![[r#\"\"#]],\n         );\n     }\n+\n+    #[test]\n+    fn regression_9760() {\n+        check(\n+            r#\"\n+struct Struct;\n+fn main() {}\n+\n+mod mud {\n+    fn func() {\n+        let struct_instance = Stru$0\n+    }\n+}\n+\"#,\n+            expect![[r#\"\n+                st Struct (use crate::Struct)\n+            \"#]],\n+        );\n+    }\n }"}]}