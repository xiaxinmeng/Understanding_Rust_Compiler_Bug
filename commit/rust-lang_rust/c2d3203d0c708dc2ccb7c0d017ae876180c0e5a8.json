{"sha": "c2d3203d0c708dc2ccb7c0d017ae876180c0e5a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyZDMyMDNkMGM3MDhkYzJjY2I3YzBkMDE3YWU4NzYxODBjMGU1YTg=", "commit": {"author": {"name": "Ville Penttinen", "email": "villem.penttinen@gmail.com", "date": "2019-03-03T19:21:40Z"}, "committer": {"name": "Ville Penttinen", "email": "villem.penttinen@gmail.com", "date": "2019-03-03T19:43:40Z"}, "message": "Add vscode support for range in SyntaxTreeParams\n\nThis enables the client to use a command to either show the live-updating\nversion of the syntax tree for the current file. Or optionally when a selected\nrange is provided, we then provide a snapshot of the syntax tree for the range.", "tree": {"sha": "694ca7020bfdc8403e45060e10a590c2514df978", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/694ca7020bfdc8403e45060e10a590c2514df978"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2d3203d0c708dc2ccb7c0d017ae876180c0e5a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2d3203d0c708dc2ccb7c0d017ae876180c0e5a8", "html_url": "https://github.com/rust-lang/rust/commit/c2d3203d0c708dc2ccb7c0d017ae876180c0e5a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2d3203d0c708dc2ccb7c0d017ae876180c0e5a8/comments", "author": {"login": "vipentti", "id": 4726680, "node_id": "MDQ6VXNlcjQ3MjY2ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/4726680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vipentti", "html_url": "https://github.com/vipentti", "followers_url": "https://api.github.com/users/vipentti/followers", "following_url": "https://api.github.com/users/vipentti/following{/other_user}", "gists_url": "https://api.github.com/users/vipentti/gists{/gist_id}", "starred_url": "https://api.github.com/users/vipentti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vipentti/subscriptions", "organizations_url": "https://api.github.com/users/vipentti/orgs", "repos_url": "https://api.github.com/users/vipentti/repos", "events_url": "https://api.github.com/users/vipentti/events{/privacy}", "received_events_url": "https://api.github.com/users/vipentti/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vipentti", "id": 4726680, "node_id": "MDQ6VXNlcjQ3MjY2ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/4726680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vipentti", "html_url": "https://github.com/vipentti", "followers_url": "https://api.github.com/users/vipentti/followers", "following_url": "https://api.github.com/users/vipentti/following{/other_user}", "gists_url": "https://api.github.com/users/vipentti/gists{/gist_id}", "starred_url": "https://api.github.com/users/vipentti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vipentti/subscriptions", "organizations_url": "https://api.github.com/users/vipentti/orgs", "repos_url": "https://api.github.com/users/vipentti/repos", "events_url": "https://api.github.com/users/vipentti/events{/privacy}", "received_events_url": "https://api.github.com/users/vipentti/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac52d9a1f1a94e2c836c8a04a316f6454936a79a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac52d9a1f1a94e2c836c8a04a316f6454936a79a", "html_url": "https://github.com/rust-lang/rust/commit/ac52d9a1f1a94e2c836c8a04a316f6454936a79a"}], "stats": {"total": 52, "additions": 41, "deletions": 11}, "files": [{"sha": "fda411810a361dc27f4176d0bc325d591d53f09e", "filename": "editors/code/package.json", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2d3203d0c708dc2ccb7c0d017ae876180c0e5a8/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/c2d3203d0c708dc2ccb7c0d017ae876180c0e5a8/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=c2d3203d0c708dc2ccb7c0d017ae876180c0e5a8", "patch": "@@ -75,7 +75,7 @@\n         \"commands\": [\n             {\n                 \"command\": \"rust-analyzer.syntaxTree\",\n-                \"title\": \"Show syntax tree for current file\",\n+                \"title\": \"Show Syntax Tree\",\n                 \"category\": \"Rust Analyzer\"\n             },\n             {"}, {"sha": "7200ae82348012ca0becc88c99656ccf551df7e9", "filename": "editors/code/src/commands/syntaxTree.ts", "status": "modified", "additions": 35, "deletions": 9, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/c2d3203d0c708dc2ccb7c0d017ae876180c0e5a8/editors%2Fcode%2Fsrc%2Fcommands%2FsyntaxTree.ts", "raw_url": "https://github.com/rust-lang/rust/raw/c2d3203d0c708dc2ccb7c0d017ae876180c0e5a8/editors%2Fcode%2Fsrc%2Fcommands%2FsyntaxTree.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2FsyntaxTree.ts?ref=c2d3203d0c708dc2ccb7c0d017ae876180c0e5a8", "patch": "@@ -1,5 +1,5 @@\n import * as vscode from 'vscode';\n-import { TextDocumentIdentifier } from 'vscode-languageclient';\n+import { Range, TextDocumentIdentifier } from 'vscode-languageclient';\n \n import { Server } from '../server';\n \n@@ -17,8 +17,21 @@ export class TextDocumentContentProvider\n         if (editor == null) {\n             return '';\n         }\n+\n+        let range: Range | undefined;\n+\n+        // When the range based query is enabled we take the range of the selection\n+        if (uri.query === 'range=true') {\n+            range = editor.selection.isEmpty\n+                ? undefined\n+                : Server.client.code2ProtocolConverter.asRange(\n+                      editor.selection\n+                  );\n+        }\n+\n         const request: SyntaxTreeParams = {\n-            textDocument: { uri: editor.document.uri.toString() }\n+            textDocument: { uri: editor.document.uri.toString() },\n+            range\n         };\n         return Server.client.sendRequest<SyntaxTreeResult>(\n             'rust-analyzer/syntaxTree',\n@@ -33,18 +46,31 @@ export class TextDocumentContentProvider\n \n interface SyntaxTreeParams {\n     textDocument: TextDocumentIdentifier;\n+    range?: Range;\n }\n \n type SyntaxTreeResult = string;\n \n // Opens the virtual file that will show the syntax tree\n //\n // The contents of the file come from the `TextDocumentContentProvider`\n-export async function handle() {\n-    const document = await vscode.workspace.openTextDocument(syntaxTreeUri);\n-    return vscode.window.showTextDocument(\n-        document,\n-        vscode.ViewColumn.Two,\n-        true\n-    );\n+export function createHandle(provider: TextDocumentContentProvider) {\n+    return async () => {\n+        const editor = vscode.window.activeTextEditor;\n+        const rangeEnabled = !!(editor && !editor.selection.isEmpty);\n+\n+        const uri = rangeEnabled\n+            ? vscode.Uri.parse(`${syntaxTreeUri.toString()}?range=true`)\n+            : syntaxTreeUri;\n+\n+        const document = await vscode.workspace.openTextDocument(uri);\n+\n+        provider.eventEmitter.fire(uri);\n+\n+        return vscode.window.showTextDocument(\n+            document,\n+            vscode.ViewColumn.Two,\n+            true\n+        );\n+    };\n }"}, {"sha": "5134bb258dae438ae1e0fabe1ec4df7acfd2d706", "filename": "editors/code/src/extension.ts", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c2d3203d0c708dc2ccb7c0d017ae876180c0e5a8/editors%2Fcode%2Fsrc%2Fextension.ts", "raw_url": "https://github.com/rust-lang/rust/raw/c2d3203d0c708dc2ccb7c0d017ae876180c0e5a8/editors%2Fcode%2Fsrc%2Fextension.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fextension.ts?ref=c2d3203d0c708dc2ccb7c0d017ae876180c0e5a8", "patch": "@@ -52,7 +52,6 @@ export function activate(context: vscode.ExtensionContext) {\n     registerCommand('rust-analyzer.collectGarbage', () =>\n         Server.client.sendRequest<null>('rust-analyzer/collectGarbage', null)\n     );\n-    registerCommand('rust-analyzer.syntaxTree', commands.syntaxTree.handle);\n     registerCommand(\n         'rust-analyzer.extendSelection',\n         commands.extendSelection.handle\n@@ -109,6 +108,11 @@ export function activate(context: vscode.ExtensionContext) {\n         )\n     );\n \n+    registerCommand(\n+        'rust-analyzer.syntaxTree',\n+        commands.syntaxTree.createHandle(textDocumentContentProvider)\n+    );\n+\n     vscode.workspace.onDidChangeTextDocument(\n         events.changeTextDocument.createHandler(textDocumentContentProvider),\n         null,"}]}