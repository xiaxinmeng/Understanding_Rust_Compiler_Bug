{"sha": "01847fb32162811643681db7ba60437545ce9723", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxODQ3ZmIzMjE2MjgxMTY0MzY4MWRiN2JhNjA0Mzc1NDVjZTk3MjM=", "commit": {"author": {"name": "Igor Matuszewski", "email": "Xanewok@gmail.com", "date": "2018-04-26T22:09:01Z"}, "committer": {"name": "Igor Matuszewski", "email": "Xanewok@gmail.com", "date": "2018-04-26T22:09:01Z"}, "message": "Ignore checking inexistent .git/HEAD in build.rs", "tree": {"sha": "430eb04f3d485ba62cd1f2d6f1922962297a1f1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/430eb04f3d485ba62cd1f2d6f1922962297a1f1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01847fb32162811643681db7ba60437545ce9723", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01847fb32162811643681db7ba60437545ce9723", "html_url": "https://github.com/rust-lang/rust/commit/01847fb32162811643681db7ba60437545ce9723", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01847fb32162811643681db7ba60437545ce9723/comments", "author": {"login": "Xanewok", "id": 3093213, "node_id": "MDQ6VXNlcjMwOTMyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3093213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xanewok", "html_url": "https://github.com/Xanewok", "followers_url": "https://api.github.com/users/Xanewok/followers", "following_url": "https://api.github.com/users/Xanewok/following{/other_user}", "gists_url": "https://api.github.com/users/Xanewok/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xanewok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xanewok/subscriptions", "organizations_url": "https://api.github.com/users/Xanewok/orgs", "repos_url": "https://api.github.com/users/Xanewok/repos", "events_url": "https://api.github.com/users/Xanewok/events{/privacy}", "received_events_url": "https://api.github.com/users/Xanewok/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Xanewok", "id": 3093213, "node_id": "MDQ6VXNlcjMwOTMyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3093213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xanewok", "html_url": "https://github.com/Xanewok", "followers_url": "https://api.github.com/users/Xanewok/followers", "following_url": "https://api.github.com/users/Xanewok/following{/other_user}", "gists_url": "https://api.github.com/users/Xanewok/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xanewok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xanewok/subscriptions", "organizations_url": "https://api.github.com/users/Xanewok/orgs", "repos_url": "https://api.github.com/users/Xanewok/repos", "events_url": "https://api.github.com/users/Xanewok/events{/privacy}", "received_events_url": "https://api.github.com/users/Xanewok/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac8ae0062544743aaea1719a34f299b66f2b7dc9", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac8ae0062544743aaea1719a34f299b66f2b7dc9", "html_url": "https://github.com/rust-lang/rust/commit/ac8ae0062544743aaea1719a34f299b66f2b7dc9"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "3f1c412a7afc2518d057bf4e1dba886969e45f7b", "filename": "build.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/01847fb32162811643681db7ba60437545ce9723/build.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01847fb32162811643681db7ba60437545ce9723/build.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build.rs?ref=01847fb32162811643681db7ba60437545ce9723", "patch": "@@ -11,11 +11,16 @@\n use std::env;\n use std::fs::File;\n use std::io::Write;\n-use std::path::PathBuf;\n+use std::path::{Path, PathBuf};\n use std::process::Command;\n \n fn main() {\n-    println!(\"cargo:rerun-if-changed=.git/HEAD\");\n+    // Only check .git/HEAD dirty status if it exists - doing so when\n+    // building dependent crates may lead to false positives and rebuilds\n+    if Path::new(\".git/HEAD\").exists() {\n+        println!(\"cargo:rerun-if-changed=.git/HEAD\");\n+    }\n+\n     println!(\"cargo:rerun-if-env-changed=CFG_RELEASE_CHANNEL\");\n \n     let out_dir = PathBuf::from(env::var_os(\"OUT_DIR\").unwrap());"}]}