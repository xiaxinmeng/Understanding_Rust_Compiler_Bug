{"sha": "b8fcf0ab0ec5993981cc07fdb110f5a3db988a2b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4ZmNmMGFiMGVjNTk5Mzk4MWNjMDdmZGIxMTBmNWEzZGI5ODhhMmI=", "commit": {"author": {"name": "Elly Jones", "email": "elly@leptoquark.net", "date": "2011-12-02T03:37:56Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-12-02T03:49:17Z"}, "message": "cargo: support build-from-source\n\nNo install yet.", "tree": {"sha": "5c828952469c7b40a3abc2d4277b6a63d81b1852", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c828952469c7b40a3abc2d4277b6a63d81b1852"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8fcf0ab0ec5993981cc07fdb110f5a3db988a2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8fcf0ab0ec5993981cc07fdb110f5a3db988a2b", "html_url": "https://github.com/rust-lang/rust/commit/b8fcf0ab0ec5993981cc07fdb110f5a3db988a2b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8fcf0ab0ec5993981cc07fdb110f5a3db988a2b/comments", "author": null, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e5b314c0b342d893e2937321000b55376fdbaa4", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e5b314c0b342d893e2937321000b55376fdbaa4", "html_url": "https://github.com/rust-lang/rust/commit/3e5b314c0b342d893e2937321000b55376fdbaa4"}], "stats": {"total": 43, "additions": 36, "deletions": 7}, "files": [{"sha": "813b5d13516056aaa2545d1d10b847a3f6037a57", "filename": "src/cargo/cargo.rs", "status": "modified", "additions": 36, "deletions": 7, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/b8fcf0ab0ec5993981cc07fdb110f5a3db988a2b/src%2Fcargo%2Fcargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8fcf0ab0ec5993981cc07fdb110f5a3db988a2b/src%2Fcargo%2Fcargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcargo%2Fcargo.rs?ref=b8fcf0ab0ec5993981cc07fdb110f5a3db988a2b", "patch": "@@ -3,6 +3,7 @@\n import rustc::syntax::{ast, codemap, visit};\n import rustc::syntax::parse::parser;\n \n+import std::fs;\n import std::io;\n import std::option;\n import std::option::{none, some};\n@@ -95,9 +96,38 @@ fn rest(s: str, start: uint) -> str {\n     }\n }\n \n-fn install_file(_path: str) -> option::t<str> {\n+fn install_source(path: str) {\n+    log #fmt[\"source: %s\", path];\n+    fs::change_dir(path);\n+    let contents = fs::list_dir(\".\");\n+\n+    log #fmt[\"contents: %s\", str::connect(contents, \", \")];\n+\n+    let cratefile = vec::find::<str>({ |n| str::ends_with(n, \".rc\") }, contents);\n+\n+    // First, try a configure script:\n+    if vec::member(\"./configure\", contents) {\n+        run::run_program(\"./configure\", []);\n+    }\n+\n+    // Makefile?\n+    if vec::member(\"./Makefile\", contents) {\n+        run::run_program(\"make\", [\"RUSTC=rustc\"]);\n+    } else if option::is_some::<str>(cratefile) {\n+        run::run_program(\"rustc\", [option::get(cratefile)]);\n+    }\n+}\n+\n+fn install_file(_path: str) {\n     let wd = tempfile::mkdtemp(\"/tmp/cargo-work-\", \"\");\n-    ret wd;\n+    alt wd {\n+        some(p) {\n+            run::run_program(\"tar\", [\"-x\", \"--strip-components=1\",\n+                                     \"-C\", p, \"-f\", _path]);\n+            install_source(p);\n+        }\n+        _ { }\n+    }\n }\n \n fn cmd_install(argv: [str]) {\n@@ -107,12 +137,10 @@ fn cmd_install(argv: [str]) {\n         ret;\n     }\n \n-    let _wd = if str::starts_with(argv[2], \"file:\") {\n+    if str::starts_with(argv[2], \"file:\") {\n         let path = rest(argv[2], 5u);\n-        install_file(path)\n-    } else {\n-        none\n-    };\n+        install_file(path);\n+    }\n }\n \n fn cmd_usage() {\n@@ -125,6 +153,7 @@ fn main(argv: [str]) {\n         ret;\n     }\n     alt argv[1] {\n+        \"install\" { cmd_install(argv); }\n         \"usage\" { cmd_usage(); }\n         _ { cmd_usage(); }\n     }"}]}