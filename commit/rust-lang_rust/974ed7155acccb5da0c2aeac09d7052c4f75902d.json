{"sha": "974ed7155acccb5da0c2aeac09d7052c4f75902d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3NGVkNzE1NWFjY2NiNWRhMGMyYWVhYzA5ZDcwNTJjNGY3NTkwMmQ=", "commit": {"author": {"name": "Steffen Lyngbaek", "email": "steffenlyngbaek@gmail.com", "date": "2020-03-11T01:59:49Z"}, "committer": {"name": "Steffen Lyngbaek", "email": "steffenlyngbaek@gmail.com", "date": "2020-03-11T01:59:49Z"}, "message": "Deduplicate some Inlay definitions\n\n- Remove match conversion for InlayKind since we're using remote", "tree": {"sha": "456b334058c47dac1dda6d46789425e6f83a38c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/456b334058c47dac1dda6d46789425e6f83a38c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/974ed7155acccb5da0c2aeac09d7052c4f75902d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/974ed7155acccb5da0c2aeac09d7052c4f75902d", "html_url": "https://github.com/rust-lang/rust/commit/974ed7155acccb5da0c2aeac09d7052c4f75902d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/974ed7155acccb5da0c2aeac09d7052c4f75902d/comments", "author": {"login": "slyngbaek", "id": 1216902, "node_id": "MDQ6VXNlcjEyMTY5MDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1216902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slyngbaek", "html_url": "https://github.com/slyngbaek", "followers_url": "https://api.github.com/users/slyngbaek/followers", "following_url": "https://api.github.com/users/slyngbaek/following{/other_user}", "gists_url": "https://api.github.com/users/slyngbaek/gists{/gist_id}", "starred_url": "https://api.github.com/users/slyngbaek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slyngbaek/subscriptions", "organizations_url": "https://api.github.com/users/slyngbaek/orgs", "repos_url": "https://api.github.com/users/slyngbaek/repos", "events_url": "https://api.github.com/users/slyngbaek/events{/privacy}", "received_events_url": "https://api.github.com/users/slyngbaek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "slyngbaek", "id": 1216902, "node_id": "MDQ6VXNlcjEyMTY5MDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1216902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slyngbaek", "html_url": "https://github.com/slyngbaek", "followers_url": "https://api.github.com/users/slyngbaek/followers", "following_url": "https://api.github.com/users/slyngbaek/following{/other_user}", "gists_url": "https://api.github.com/users/slyngbaek/gists{/gist_id}", "starred_url": "https://api.github.com/users/slyngbaek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slyngbaek/subscriptions", "organizations_url": "https://api.github.com/users/slyngbaek/orgs", "repos_url": "https://api.github.com/users/slyngbaek/repos", "events_url": "https://api.github.com/users/slyngbaek/events{/privacy}", "received_events_url": "https://api.github.com/users/slyngbaek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cfb48df149bfa8a15b113b1a252598457a4ea392", "url": "https://api.github.com/repos/rust-lang/rust/commits/cfb48df149bfa8a15b113b1a252598457a4ea392", "html_url": "https://github.com/rust-lang/rust/commit/cfb48df149bfa8a15b113b1a252598457a4ea392"}], "stats": {"total": 67, "additions": 31, "deletions": 36}, "files": [{"sha": "22ff0845ca2e4a7481221ecb1329b188a834245c", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 2, "deletions": 29, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/974ed7155acccb5da0c2aeac09d7052c4f75902d/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/974ed7155acccb5da0c2aeac09d7052c4f75902d/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=974ed7155acccb5da0c2aeac09d7052c4f75902d", "patch": "@@ -7,40 +7,13 @@\n //! configure the server itself, feature flags are passed into analysis, and\n //! tweak things like automatic insertion of `()` in completions.\n \n-use ra_ide::{InlayConfig, InlayKind};\n+use crate::req::InlayConfigDef;\n+use ra_ide::InlayConfig;\n use rustc_hash::FxHashMap;\n \n use ra_project_model::CargoFeatures;\n use serde::{Deserialize, Deserializer};\n \n-#[derive(Deserialize)]\n-#[serde(remote = \"InlayKind\")]\n-pub enum InlayKindDef {\n-    TypeHint,\n-    ParameterHint,\n-}\n-\n-// Work-around until better serde support is added\n-// https://github.com/serde-rs/serde/issues/723#issuecomment-382501277\n-fn vec_inlay_kind<'de, D>(deserializer: D) -> Result<Vec<InlayKind>, D::Error>\n-where\n-    D: Deserializer<'de>,\n-{\n-    #[derive(Deserialize)]\n-    struct Wrapper(#[serde(with = \"InlayKindDef\")] InlayKind);\n-\n-    let v = Vec::deserialize(deserializer)?;\n-    Ok(v.into_iter().map(|Wrapper(a)| a).collect())\n-}\n-\n-#[derive(Deserialize)]\n-#[serde(remote = \"InlayConfig\")]\n-pub struct InlayConfigDef {\n-    #[serde(deserialize_with = \"vec_inlay_kind\")]\n-    pub display_type: Vec<InlayKind>,\n-    pub max_length: Option<usize>,\n-}\n-\n /// Client provided initialization options\n #[derive(Deserialize, Clone, Debug, PartialEq, Eq)]\n #[serde(rename_all = \"camelCase\", default)]"}, {"sha": "23463b28e6a2d487ca34f2db96407561d0b89897", "filename": "crates/rust-analyzer/src/main_loop/handlers.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/974ed7155acccb5da0c2aeac09d7052c4f75902d/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/974ed7155acccb5da0c2aeac09d7052c4f75902d/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=974ed7155acccb5da0c2aeac09d7052c4f75902d", "patch": "@@ -37,7 +37,7 @@ use crate::{\n     },\n     diagnostics::DiagnosticTask,\n     from_json,\n-    req::{self, Decoration, InlayHint, InlayHintsParams, InlayKind},\n+    req::{self, Decoration, InlayHint, InlayHintsParams},\n     semantic_tokens::SemanticTokensBuilder,\n     world::WorldSnapshot,\n     LspError, Result,\n@@ -1002,10 +1002,7 @@ pub fn handle_inlay_hints(\n         .map(|api_type| InlayHint {\n             label: api_type.label.to_string(),\n             range: api_type.range.conv_with(&line_index),\n-            kind: match api_type.kind {\n-                ra_ide::InlayKind::TypeHint => InlayKind::TypeHint,\n-                ra_ide::InlayKind::ParameterHint => InlayKind::ParameterHint,\n-            },\n+            kind: api_type.kind,\n         })\n         .collect())\n }"}, {"sha": "dab05405e05ddf7d04e618a2ff23a71a18cb16cc", "filename": "crates/rust-analyzer/src/req.rs", "status": "modified", "additions": 27, "deletions": 2, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/974ed7155acccb5da0c2aeac09d7052c4f75902d/crates%2Frust-analyzer%2Fsrc%2Freq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/974ed7155acccb5da0c2aeac09d7052c4f75902d/crates%2Frust-analyzer%2Fsrc%2Freq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freq.rs?ref=974ed7155acccb5da0c2aeac09d7052c4f75902d", "patch": "@@ -2,7 +2,9 @@\n \n use lsp_types::{Location, Position, Range, TextDocumentIdentifier, Url};\n use rustc_hash::FxHashMap;\n-use serde::{Deserialize, Serialize};\n+use serde::{Deserialize, Deserializer, Serialize};\n+\n+use ra_ide::{InlayConfig, InlayKind};\n \n pub use lsp_types::{\n     notification::*, request::*, ApplyWorkspaceEditParams, CodeActionParams, CodeLens,\n@@ -196,14 +198,37 @@ pub struct InlayHintsParams {\n }\n \n #[derive(Debug, PartialEq, Eq, Deserialize, Serialize)]\n-pub enum InlayKind {\n+#[serde(remote = \"InlayKind\")]\n+pub enum InlayKindDef {\n     TypeHint,\n     ParameterHint,\n }\n \n+// Work-around until better serde support is added\n+// https://github.com/serde-rs/serde/issues/723#issuecomment-382501277\n+fn vec_inlay_kind<'de, D>(deserializer: D) -> Result<Vec<InlayKind>, D::Error>\n+where\n+    D: Deserializer<'de>,\n+{\n+    #[derive(Deserialize)]\n+    struct Wrapper(#[serde(with = \"InlayKindDef\")] InlayKind);\n+\n+    let v = Vec::deserialize(deserializer)?;\n+    Ok(v.into_iter().map(|Wrapper(a)| a).collect())\n+}\n+\n+#[derive(Deserialize)]\n+#[serde(remote = \"InlayConfig\")]\n+pub struct InlayConfigDef {\n+    #[serde(deserialize_with = \"vec_inlay_kind\")]\n+    pub display_type: Vec<InlayKind>,\n+    pub max_length: Option<usize>,\n+}\n+\n #[derive(Debug, Deserialize, Serialize)]\n pub struct InlayHint {\n     pub range: Range,\n+    #[serde(with = \"InlayKindDef\")]\n     pub kind: InlayKind,\n     pub label: String,\n }"}]}