{"sha": "c0f0f457b8e6723a6e3d1e29a6aa91a36edfc169", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwZjBmNDU3YjhlNjcyM2E2ZTNkMWUyOWE2YWE5MWEzNmVkZmMxNjk=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-01-05T11:55:30Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-01-05T11:55:30Z"}, "message": "Don't actually create a full MIR stack frame when not needed", "tree": {"sha": "9ff7697c1f9d768745e0f26700d3c3eb9ffb176d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ff7697c1f9d768745e0f26700d3c3eb9ffb176d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0f0f457b8e6723a6e3d1e29a6aa91a36edfc169", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0f0f457b8e6723a6e3d1e29a6aa91a36edfc169", "html_url": "https://github.com/rust-lang/rust/commit/c0f0f457b8e6723a6e3d1e29a6aa91a36edfc169", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0f0f457b8e6723a6e3d1e29a6aa91a36edfc169/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2442823ef572a65092fbc46f6975633f983b50b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/2442823ef572a65092fbc46f6975633f983b50b6", "html_url": "https://github.com/rust-lang/rust/commit/2442823ef572a65092fbc46f6975633f983b50b6"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "947b94b61da8fd87d549b63c1f07f6116b2eae7d", "filename": "src/librustc_mir/const_eval.rs", "status": "modified", "additions": 27, "deletions": 3, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/c0f0f457b8e6723a6e3d1e29a6aa91a36edfc169/src%2Flibrustc_mir%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0f0f457b8e6723a6e3d1e29a6aa91a36edfc169/src%2Flibrustc_mir%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval.rs?ref=c0f0f457b8e6723a6e3d1e29a6aa91a36edfc169", "patch": "@@ -68,12 +68,36 @@ pub fn mk_eval_cx<'a, 'tcx>(\n     debug!(\"mk_eval_cx: {:?}, {:?}\", instance, param_env);\n     let span = tcx.def_span(instance.def_id());\n     let mut ecx = EvalContext::new(tcx.at(span), param_env, CompileTimeInterpreter::new());\n-    let mir = ecx.load_mir(instance.def)?;\n+    let mir = mir::Mir::new(\n+        ::std::iter::once(\n+            mir::BasicBlockData {\n+                statements: Vec::new(),\n+                is_cleanup: false,\n+                terminator: Some(mir::Terminator {\n+                    source_info: mir::SourceInfo {\n+                        scope: mir::OUTERMOST_SOURCE_SCOPE,\n+                        span: DUMMY_SP,\n+                    },\n+                    kind: mir::TerminatorKind::Return,\n+                }),\n+            }\n+        ).collect(), // basic blocks\n+        IndexVec::new(), // source_scopes\n+        mir::ClearCrossCrate::Clear, // source_scope_local_data\n+        IndexVec::new(), // promoted\n+        None, // yield ty\n+        ::std::iter::once(mir::LocalDecl::new_return_place(tcx.types.unit, DUMMY_SP)).collect(),\n+        IndexVec::new(), //user_type_annotations\n+        0, // arg_count\n+        Vec::new(), // upvar_decls\n+        DUMMY_SP, // span\n+        Vec::new(), // control_flow_destroyed\n+    );\n     // insert a stack frame so any queries have the correct substs\n     ecx.push_stack_frame(\n         instance,\n-        mir.span,\n-        mir,\n+        span,\n+        tcx.alloc_mir(mir),\n         None,\n         StackPopCleanup::Goto(None), // never pop\n     )?;"}]}