{"sha": "b91a51daca705b5aebfa58079963f24592a7e411", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5MWE1MWRhY2E3MDViNWFlYmZhNTgwNzk5NjNmMjQ1OTJhN2U0MTE=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-02-06T05:03:12Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-02-06T22:37:56Z"}, "message": "remove issue #3148 workarounds (no longer needed)", "tree": {"sha": "7de1bbd38bbf1f4179e501e765ca1550c553d960", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7de1bbd38bbf1f4179e501e765ca1550c553d960"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b91a51daca705b5aebfa58079963f24592a7e411", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b91a51daca705b5aebfa58079963f24592a7e411", "html_url": "https://github.com/rust-lang/rust/commit/b91a51daca705b5aebfa58079963f24592a7e411", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b91a51daca705b5aebfa58079963f24592a7e411/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b34f871ddac7bc84366b25c89d0a69926cb069e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/b34f871ddac7bc84366b25c89d0a69926cb069e0", "html_url": "https://github.com/rust-lang/rust/commit/b34f871ddac7bc84366b25c89d0a69926cb069e0"}], "stats": {"total": 16, "additions": 2, "deletions": 14}, "files": [{"sha": "88981f514cff35ee823d987dd9f75b25d6fff502", "filename": "src/libcore/hashmap.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b91a51daca705b5aebfa58079963f24592a7e411/src%2Flibcore%2Fhashmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b91a51daca705b5aebfa58079963f24592a7e411/src%2Flibcore%2Fhashmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fhashmap.rs?ref=b91a51daca705b5aebfa58079963f24592a7e411", "patch": "@@ -49,9 +49,8 @@ pub mod linear {\n         buckets: ~[Option<Bucket<K, V>>],\n     }\n \n-    // FIXME(#3148) -- we could rewrite FoundEntry\n-    // to have type Option<&Bucket<K, V>> which would be nifty\n-    // However, that won't work until #3148 is fixed\n+    // We could rewrite FoundEntry to have type Option<&Bucket<K, V>>\n+    // which would be nifty\n     enum SearchResult {\n         FoundEntry(uint), FoundHole(uint), TableFull\n     }\n@@ -296,8 +295,6 @@ pub mod linear {\n                 FoundEntry(idx) => {\n                     match self.buckets[idx] {\n                         Some(ref bkt) => {\n-                            // FIXME(#3148)---should be inferred\n-                            let bkt: &self/Bucket<K, V> = bkt;\n                             Some(&bkt.value)\n                         }\n                         None => {"}, {"sha": "13b58c433006ef82fa066332a6700a59dc6a19d6", "filename": "src/libstd/json.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b91a51daca705b5aebfa58079963f24592a7e411/src%2Flibstd%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b91a51daca705b5aebfa58079963f24592a7e411/src%2Flibstd%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fjson.rs?ref=b91a51daca705b5aebfa58079963f24592a7e411", "patch": "@@ -856,9 +856,6 @@ pub impl Decoder: serialize::Decoder {\n         debug!(\"read_vec_elt(idx=%u)\", idx);\n         match *self.peek() {\n             List(ref list) => {\n-                // FIXME(#3148)---should be inferred\n-                let list: &self/~[Json] = list;\n-\n                 self.stack.push(&list[idx]);\n                 f()\n             }\n@@ -885,9 +882,6 @@ pub impl Decoder: serialize::Decoder {\n         let top = self.peek();\n         match *top {\n             Object(ref obj) => {\n-                // FIXME(#3148) This hint should not be necessary.\n-                let obj: &self/~Object = obj;\n-\n                 match obj.find(&name.to_owned()) {\n                     None => die!(fmt!(\"no such field: %s\", name)),\n                     Some(json) => {\n@@ -917,8 +911,6 @@ pub impl Decoder: serialize::Decoder {\n         debug!(\"read_tup_elt(idx=%u)\", idx);\n         match *self.peek() {\n             List(ref list) => {\n-                // FIXME(#3148)---should be inferred\n-                let list: &self/~[Json] = list;\n                 self.stack.push(&list[idx]);\n                 f()\n             }"}, {"sha": "b7af5de4cbfef2be2d5cd1ad8a3a5db7925ccc63", "filename": "src/libstd/treemap.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b91a51daca705b5aebfa58079963f24592a7e411/src%2Flibstd%2Ftreemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b91a51daca705b5aebfa58079963f24592a7e411/src%2Flibstd%2Ftreemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftreemap.rs?ref=b91a51daca705b5aebfa58079963f24592a7e411", "patch": "@@ -142,7 +142,6 @@ impl <K: Ord, V> TreeMap<K, V>: Map<K, V> {\n         loop {\n             match *current {\n               Some(ref r) => {\n-                let r: &self/~TreeNode<K, V> = r; // FIXME: #3148\n                 if *key < r.key {\n                     current = &r.left;\n                 } else if r.key < *key {"}]}