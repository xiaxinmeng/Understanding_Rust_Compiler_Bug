{"sha": "bca8e07ef4048a7ca912d157156268f958369ef2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjYThlMDdlZjQwNDhhN2NhOTEyZDE1NzE1NjI2OGY5NTgzNjllZjI=", "commit": {"author": {"name": "Raoul Strackx", "email": "raoul.strackx@fortanix.com", "date": "2020-03-19T15:40:33Z"}, "committer": {"name": "Raoul Strackx", "email": "raoul.strackx@fortanix.com", "date": "2020-09-25T13:02:07Z"}, "message": "rust inline assembly lvi hardening test", "tree": {"sha": "a9a3c916a1e6ab3ea8d65cf1581590fbfab6a220", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9a3c916a1e6ab3ea8d65cf1581590fbfab6a220"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bca8e07ef4048a7ca912d157156268f958369ef2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bca8e07ef4048a7ca912d157156268f958369ef2", "html_url": "https://github.com/rust-lang/rust/commit/bca8e07ef4048a7ca912d157156268f958369ef2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bca8e07ef4048a7ca912d157156268f958369ef2/comments", "author": {"login": "raoulstrackx", "id": 56830709, "node_id": "MDQ6VXNlcjU2ODMwNzA5", "avatar_url": "https://avatars.githubusercontent.com/u/56830709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raoulstrackx", "html_url": "https://github.com/raoulstrackx", "followers_url": "https://api.github.com/users/raoulstrackx/followers", "following_url": "https://api.github.com/users/raoulstrackx/following{/other_user}", "gists_url": "https://api.github.com/users/raoulstrackx/gists{/gist_id}", "starred_url": "https://api.github.com/users/raoulstrackx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raoulstrackx/subscriptions", "organizations_url": "https://api.github.com/users/raoulstrackx/orgs", "repos_url": "https://api.github.com/users/raoulstrackx/repos", "events_url": "https://api.github.com/users/raoulstrackx/events{/privacy}", "received_events_url": "https://api.github.com/users/raoulstrackx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "raoulstrackx", "id": 56830709, "node_id": "MDQ6VXNlcjU2ODMwNzA5", "avatar_url": "https://avatars.githubusercontent.com/u/56830709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raoulstrackx", "html_url": "https://github.com/raoulstrackx", "followers_url": "https://api.github.com/users/raoulstrackx/followers", "following_url": "https://api.github.com/users/raoulstrackx/following{/other_user}", "gists_url": "https://api.github.com/users/raoulstrackx/gists{/gist_id}", "starred_url": "https://api.github.com/users/raoulstrackx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raoulstrackx/subscriptions", "organizations_url": "https://api.github.com/users/raoulstrackx/orgs", "repos_url": "https://api.github.com/users/raoulstrackx/repos", "events_url": "https://api.github.com/users/raoulstrackx/events{/privacy}", "received_events_url": "https://api.github.com/users/raoulstrackx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd31f40b6f59c8966a09e7f1e2d6c3c5ed1570f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd31f40b6f59c8966a09e7f1e2d6c3c5ed1570f1", "html_url": "https://github.com/rust-lang/rust/commit/cd31f40b6f59c8966a09e7f1e2d6c3c5ed1570f1"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "7e440169edbb1e4f309630135844901bdfae8326", "filename": "src/test/assembly/x86_64-fortanix-unknown-sgx-lvi-inline-assembly.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/bca8e07ef4048a7ca912d157156268f958369ef2/src%2Ftest%2Fassembly%2Fx86_64-fortanix-unknown-sgx-lvi-inline-assembly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bca8e07ef4048a7ca912d157156268f958369ef2/src%2Ftest%2Fassembly%2Fx86_64-fortanix-unknown-sgx-lvi-inline-assembly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fassembly%2Fx86_64-fortanix-unknown-sgx-lvi-inline-assembly.rs?ref=bca8e07ef4048a7ca912d157156268f958369ef2", "patch": "@@ -0,0 +1,41 @@\n+// Test LVI load hardening on SGX inline assembly code\n+\n+// assembly-output: emit-asm\n+// compile-flags: --crate-type staticlib\n+// only-x86_64-fortanix-unknown-sgx\n+\n+#![feature(asm)]\n+\n+#[no_mangle]\n+pub extern fn get(ptr: *const u64) -> u64 {\n+    let value : u64;\n+    unsafe {\n+        asm!(\".start_inline_asm:\",\n+            \"mov {}, [{}]\",\n+            \".end_inline_asm:\",\n+            out(reg) value,\n+            in(reg) ptr);\n+    }\n+    value\n+}\n+\n+// CHECK: get\n+// CHECK: .start_inline_asm\n+// CHECK-NEXT: movq\n+// CHECK-NEXT: lfence\n+// CHECK-NEXT: .end_inline_asm\n+\n+#[no_mangle]\n+pub extern fn myret() {\n+    unsafe {\n+        asm!(\".start_myret_inline_asm:\n+            ret\n+            .end_myret_inline_asm:\");\n+    }\n+}\n+\n+// CHECK: myret\n+// CHECK: .start_myret_inline_asm\n+// CHECK-NEXT: shlq $0, (%rsp)\n+// CHECK-NEXT: lfence\n+// CHECK-NEXT: retq"}]}