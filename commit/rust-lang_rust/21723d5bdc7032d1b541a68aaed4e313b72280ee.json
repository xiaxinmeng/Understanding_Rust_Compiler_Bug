{"sha": "21723d5bdc7032d1b541a68aaed4e313b72280ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxNzIzZDViZGM3MDMyZDFiNTQxYTY4YWFlZDRlMzEzYjcyMjgwZWU=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-04-16T13:00:16Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-04-16T13:07:46Z"}, "message": "libcore: vec::windowed iterates, not allocates.", "tree": {"sha": "c156bc4cedefd1a7e8503fcd87ba6789108f08a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c156bc4cedefd1a7e8503fcd87ba6789108f08a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21723d5bdc7032d1b541a68aaed4e313b72280ee", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21723d5bdc7032d1b541a68aaed4e313b72280ee", "html_url": "https://github.com/rust-lang/rust/commit/21723d5bdc7032d1b541a68aaed4e313b72280ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21723d5bdc7032d1b541a68aaed4e313b72280ee/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76e77af380e267ecd07c061aca6f428b42f8d35a", "url": "https://api.github.com/repos/rust-lang/rust/commits/76e77af380e267ecd07c061aca6f428b42f8d35a", "html_url": "https://github.com/rust-lang/rust/commit/76e77af380e267ecd07c061aca6f428b42f8d35a"}], "stats": {"total": 57, "additions": 41, "deletions": 16}, "files": [{"sha": "30201304d61912d379dea69820d54a3cee3bd206", "filename": "src/libcore/vec.rs", "status": "modified", "additions": 41, "deletions": 16, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/21723d5bdc7032d1b541a68aaed4e313b72280ee/src%2Flibcore%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21723d5bdc7032d1b541a68aaed4e313b72280ee/src%2Flibcore%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fvec.rs?ref=21723d5bdc7032d1b541a68aaed4e313b72280ee", "patch": "@@ -1495,16 +1495,35 @@ pub fn each_permutation<T:Copy>(v: &[T], put: &fn(ts: &[T]) -> bool) {\n     }\n }\n \n-pub fn windowed<TT:Copy>(nn: uint, xx: &[TT]) -> ~[~[TT]] {\n-    let mut ww = ~[];\n-    assert!(1u <= nn);\n-    for vec::eachi (xx) |ii, _x| {\n-        let len = xx.len();\n-        if ii+nn <= len {\n-            ww.push(slice(xx, ii, ii+nn).to_vec());\n-        }\n+/**\n+ * Iterate over all contiguous windows of length `n` of the vector `v`.\n+ *\n+ * # Example\n+ *\n+ * Print the adjacent pairs of a vector (i.e. `[1,2]`, `[2,3]`, `[3,4]`)\n+ *\n+ * ~~~\n+ * for windowed(2, &[1,2,3,4]) |v| {\n+ *     io::println(fmt!(\"%?\", v));\n+ * }\n+ * ~~~\n+ *\n+ */\n+#[cfg(stage0)] // XXX: lifetimes!\n+pub fn windowed<T>(n: uint, v: &[T], it: &fn(&[T]) -> bool) {\n+    assert!(1u <= n);\n+    for uint::range(0, v.len() - n + 1) |i| {\n+        if !it(v.slice(i, i+n)) { return }\n+    }\n+}\n+#[cfg(stage1)]\n+#[cfg(stage2)]\n+#[cfg(stage3)]\n+pub fn windowed<'r, T>(n: uint, v: &'r [T], it: &fn(&'r [T]) -> bool) {\n+    assert!(1u <= n);\n+    for uint::range(0, v.len() - n + 1) |i| {\n+        if !it(v.slice(i, i + n)) { return }\n     }\n-    ww\n }\n \n /**\n@@ -3761,20 +3780,26 @@ mod tests {\n \n     #[test]\n     fn test_windowed () {\n-        assert!(~[~[1u,2u,3u],~[2u,3u,4u],~[3u,4u,5u],~[4u,5u,6u]]\n-                     == windowed (3u, ~[1u,2u,3u,4u,5u,6u]));\n-\n-        assert!(~[~[1u,2u,3u,4u],~[2u,3u,4u,5u],~[3u,4u,5u,6u]]\n-                     == windowed (4u, ~[1u,2u,3u,4u,5u,6u]));\n+        fn t(n: uint, expected: &[&[int]]) {\n+            let mut i = 0;\n+            for windowed(n, ~[1,2,3,4,5,6]) |v| {\n+                assert_eq!(v, expected[i]);\n+                i += 1;\n+            }\n \n-        assert!(~[] == windowed (7u, ~[1u,2u,3u,4u,5u,6u]));\n+            // check that we actually iterated the right number of times\n+            assert_eq!(i, expected.len());\n+        }\n+        t(3, &[&[1,2,3],&[2,3,4],&[3,4,5],&[4,5,6]]);\n+        t(4, &[&[1,2,3,4],&[2,3,4,5],&[3,4,5,6]]);\n+        t(7, &[]);\n     }\n \n     #[test]\n     #[should_fail]\n     #[ignore(cfg(windows))]\n     fn test_windowed_() {\n-        let _x = windowed (0u, ~[1u,2u,3u,4u,5u,6u]);\n+        for windowed (0u, ~[1u,2u,3u,4u,5u,6u]) |_v| {}\n     }\n \n     #[test]"}]}