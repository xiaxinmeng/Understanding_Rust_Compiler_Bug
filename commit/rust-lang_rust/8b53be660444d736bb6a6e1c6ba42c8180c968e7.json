{"sha": "8b53be660444d736bb6a6e1c6ba42c8180c968e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiNTNiZTY2MDQ0NGQ3MzZiYjZhNmUxYzZiYTQyYzgxODBjOTY4ZTc=", "commit": {"author": {"name": "Cl\u00e9ment Renault", "email": "clement@meilisearch.com", "date": "2020-12-31T11:13:03Z"}, "committer": {"name": "Cl\u00e9ment Renault", "email": "clement@meilisearch.com", "date": "2020-12-31T11:13:03Z"}, "message": "Replace the tracking issue for the slice_group_by feature", "tree": {"sha": "b853cfc49b851400718d4ad6970a2af320e620b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b853cfc49b851400718d4ad6970a2af320e620b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b53be660444d736bb6a6e1c6ba42c8180c968e7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEAUNXpSBlykwfjB4xkq2k6TXnH6QFAl/tsj8ACgkQkq2k6TXn\nH6RIBxAAhXKQZtloO6+BdzacsmXv98JD/Jy7+S9KCCQUfA6dZaQTHZaIq0WeiYtD\nY4Ze2zlYKdw4/FRN14Rz8qgZeiW9iyuHfp2wQVM0bt4QwhCtFPUzAGUd+fq1KYdz\ndQAUUD/k/SdFu3CB6tLZUwz0dcxbR/RmlZxffF2vLhhPXLa93yGejY2GwzpppADz\niRONfTLFh073rPfw++tjO6+Xr9g2S7l/wHdOTzj98H7syGRZo4RiPZeF0zhFa3H/\nHVGs8FjIdkJAc1rA2xAapj3Yuc5Y/4avLQCZ7jv9tOnrqClZu5uENE5E4znZaNgt\ndlsJpjwQz0eTahESYC6ZLLo/EZPg4yK7zVGJSZlKR1y9CWimz/mexigIOuQ4LA/P\n2mmvE/Ww5ObTEOzg20/ZeFqOy3eqSlg4LB/AxGHn3DIlubLIFGswXGrw1FXWisdN\nxh4GLC6KU8U69mbIyHAuLwZki402JW0eXzYhyXtRQP2FKBv5lTZdMQk84O9DY+Au\nf0zNwrtQ1ySf7ph13JFv+FR37yOAv/hvkS8aDqWv9TeCMxECBBISTVnue4OawV/o\nvZ7mOHXZXCGYXIUHR4d1pajusjXVYDmG9TtCW3QtwUP49pPqUdJXd7WCWBhCUAQa\n6boldGynMgBlj8y3/0x4+EQreWT5siL1aRqRs9h9E7daSl1Xq44=\n=LIx4\n-----END PGP SIGNATURE-----", "payload": "tree b853cfc49b851400718d4ad6970a2af320e620b8\nparent a2d55d70c4c6ef24e114a48864c9483ed92687f7\nauthor Cl\u00e9ment Renault <clement@meilisearch.com> 1609413183 +0100\ncommitter Cl\u00e9ment Renault <clement@meilisearch.com> 1609413183 +0100\n\nReplace the tracking issue for the slice_group_by feature\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b53be660444d736bb6a6e1c6ba42c8180c968e7", "html_url": "https://github.com/rust-lang/rust/commit/8b53be660444d736bb6a6e1c6ba42c8180c968e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b53be660444d736bb6a6e1c6ba42c8180c968e7/comments", "author": {"login": "Kerollmops", "id": 3610253, "node_id": "MDQ6VXNlcjM2MTAyNTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3610253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kerollmops", "html_url": "https://github.com/Kerollmops", "followers_url": "https://api.github.com/users/Kerollmops/followers", "following_url": "https://api.github.com/users/Kerollmops/following{/other_user}", "gists_url": "https://api.github.com/users/Kerollmops/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kerollmops/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kerollmops/subscriptions", "organizations_url": "https://api.github.com/users/Kerollmops/orgs", "repos_url": "https://api.github.com/users/Kerollmops/repos", "events_url": "https://api.github.com/users/Kerollmops/events{/privacy}", "received_events_url": "https://api.github.com/users/Kerollmops/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Kerollmops", "id": 3610253, "node_id": "MDQ6VXNlcjM2MTAyNTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3610253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kerollmops", "html_url": "https://github.com/Kerollmops", "followers_url": "https://api.github.com/users/Kerollmops/followers", "following_url": "https://api.github.com/users/Kerollmops/following{/other_user}", "gists_url": "https://api.github.com/users/Kerollmops/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kerollmops/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kerollmops/subscriptions", "organizations_url": "https://api.github.com/users/Kerollmops/orgs", "repos_url": "https://api.github.com/users/Kerollmops/repos", "events_url": "https://api.github.com/users/Kerollmops/events{/privacy}", "received_events_url": "https://api.github.com/users/Kerollmops/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2d55d70c4c6ef24e114a48864c9483ed92687f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2d55d70c4c6ef24e114a48864c9483ed92687f7", "html_url": "https://github.com/rust-lang/rust/commit/a2d55d70c4c6ef24e114a48864c9483ed92687f7"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "cb015b949305c4d3e961ce1bfe6c35afdd3a47b5", "filename": "library/alloc/src/slice.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b53be660444d736bb6a6e1c6ba42c8180c968e7/library%2Falloc%2Fsrc%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b53be660444d736bb6a6e1c6ba42c8180c968e7/library%2Falloc%2Fsrc%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fslice.rs?ref=8b53be660444d736bb6a6e1c6ba42c8180c968e7", "patch": "@@ -110,7 +110,7 @@ pub use core::slice::{Chunks, Windows};\n pub use core::slice::{ChunksExact, ChunksExactMut};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use core::slice::{ChunksMut, Split, SplitMut};\n-#[unstable(feature = \"slice_group_by\", issue = \"none\")]\n+#[unstable(feature = \"slice_group_by\", issue = \"80552\")]\n pub use core::slice::{GroupBy, GroupByMut};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use core::slice::{Iter, IterMut};"}, {"sha": "a367b4737dbacbcaca403b26cf5aadbf2d9682ac", "filename": "library/core/src/slice/iter.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/8b53be660444d736bb6a6e1c6ba42c8180c968e7/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b53be660444d736bb6a6e1c6ba42c8180c968e7/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs?ref=8b53be660444d736bb6a6e1c6ba42c8180c968e7", "patch": "@@ -2975,20 +2975,20 @@ unsafe impl<'a, T> TrustedRandomAccess for IterMut<'a, T> {\n ///\n /// [`group_by`]: ../../std/primitive.slice.html#method.group_by\n /// [slices]: ../../std/primitive.slice.html\n-#[unstable(feature = \"slice_group_by\", issue = \"none\")]\n+#[unstable(feature = \"slice_group_by\", issue = \"80552\")]\n pub struct GroupBy<'a, T: 'a, P> {\n     slice: &'a [T],\n     predicate: P,\n }\n \n-#[unstable(feature = \"slice_group_by\", issue = \"none\")]\n+#[unstable(feature = \"slice_group_by\", issue = \"80552\")]\n impl<'a, T: 'a, P> GroupBy<'a, T, P> {\n     pub(super) fn new(slice: &'a [T], predicate: P) -> Self {\n         GroupBy { slice, predicate }\n     }\n }\n \n-#[unstable(feature = \"slice_group_by\", issue = \"none\")]\n+#[unstable(feature = \"slice_group_by\", issue = \"80552\")]\n impl<'a, T: 'a, P> Iterator for GroupBy<'a, T, P>\n where\n     P: FnMut(&T, &T) -> bool,\n@@ -3022,7 +3022,7 @@ where\n     }\n }\n \n-#[unstable(feature = \"slice_group_by\", issue = \"none\")]\n+#[unstable(feature = \"slice_group_by\", issue = \"80552\")]\n impl<'a, T: 'a, P> DoubleEndedIterator for GroupBy<'a, T, P>\n where\n     P: FnMut(&T, &T) -> bool,\n@@ -3044,10 +3044,10 @@ where\n     }\n }\n \n-#[unstable(feature = \"slice_group_by\", issue = \"none\")]\n+#[unstable(feature = \"slice_group_by\", issue = \"80552\")]\n impl<'a, T: 'a, P> FusedIterator for GroupBy<'a, T, P> where P: FnMut(&T, &T) -> bool {}\n \n-#[unstable(feature = \"slice_group_by\", issue = \"none\")]\n+#[unstable(feature = \"slice_group_by\", issue = \"80552\")]\n impl<'a, T: 'a + fmt::Debug, P> fmt::Debug for GroupBy<'a, T, P> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         f.debug_struct(\"GroupBy\").field(\"slice\", &self.slice).finish()\n@@ -3061,20 +3061,20 @@ impl<'a, T: 'a + fmt::Debug, P> fmt::Debug for GroupBy<'a, T, P> {\n ///\n /// [`group_by_mut`]: ../../std/primitive.slice.html#method.group_by_mut\n /// [slices]: ../../std/primitive.slice.html\n-#[unstable(feature = \"slice_group_by\", issue = \"none\")]\n+#[unstable(feature = \"slice_group_by\", issue = \"80552\")]\n pub struct GroupByMut<'a, T: 'a, P> {\n     slice: &'a mut [T],\n     predicate: P,\n }\n \n-#[unstable(feature = \"slice_group_by\", issue = \"none\")]\n+#[unstable(feature = \"slice_group_by\", issue = \"80552\")]\n impl<'a, T: 'a, P> GroupByMut<'a, T, P> {\n     pub(super) fn new(slice: &'a mut [T], predicate: P) -> Self {\n         GroupByMut { slice, predicate }\n     }\n }\n \n-#[unstable(feature = \"slice_group_by\", issue = \"none\")]\n+#[unstable(feature = \"slice_group_by\", issue = \"80552\")]\n impl<'a, T: 'a, P> Iterator for GroupByMut<'a, T, P>\n where\n     P: FnMut(&T, &T) -> bool,\n@@ -3109,7 +3109,7 @@ where\n     }\n }\n \n-#[unstable(feature = \"slice_group_by\", issue = \"none\")]\n+#[unstable(feature = \"slice_group_by\", issue = \"80552\")]\n impl<'a, T: 'a, P> DoubleEndedIterator for GroupByMut<'a, T, P>\n where\n     P: FnMut(&T, &T) -> bool,\n@@ -3132,10 +3132,10 @@ where\n     }\n }\n \n-#[unstable(feature = \"slice_group_by\", issue = \"none\")]\n+#[unstable(feature = \"slice_group_by\", issue = \"80552\")]\n impl<'a, T: 'a, P> FusedIterator for GroupByMut<'a, T, P> where P: FnMut(&T, &T) -> bool {}\n \n-#[unstable(feature = \"slice_group_by\", issue = \"none\")]\n+#[unstable(feature = \"slice_group_by\", issue = \"80552\")]\n impl<'a, T: 'a + fmt::Debug, P> fmt::Debug for GroupByMut<'a, T, P> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         f.debug_struct(\"GroupByMut\").field(\"slice\", &self.slice).finish()"}, {"sha": "b1332a3f7bc8b6bbfc39c9b61f508d39bdd52eaa", "filename": "library/core/src/slice/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8b53be660444d736bb6a6e1c6ba42c8180c968e7/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b53be660444d736bb6a6e1c6ba42c8180c968e7/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs?ref=8b53be660444d736bb6a6e1c6ba42c8180c968e7", "patch": "@@ -57,7 +57,7 @@ pub use iter::{ArrayChunks, ArrayChunksMut};\n #[unstable(feature = \"array_windows\", issue = \"75027\")]\n pub use iter::ArrayWindows;\n \n-#[unstable(feature = \"slice_group_by\", issue = \"none\")]\n+#[unstable(feature = \"slice_group_by\", issue = \"80552\")]\n pub use iter::{GroupBy, GroupByMut};\n \n #[unstable(feature = \"split_inclusive\", issue = \"72360\")]\n@@ -1246,7 +1246,7 @@ impl<T> [T] {\n     /// assert_eq!(iter.next(), Some(&[2, 3, 4][..]));\n     /// assert_eq!(iter.next(), None);\n     /// ```\n-    #[unstable(feature = \"slice_group_by\", issue = \"none\")]\n+    #[unstable(feature = \"slice_group_by\", issue = \"80552\")]\n     #[inline]\n     pub fn group_by<F>(&self, pred: F) -> GroupBy<'_, T, F>\n     where\n@@ -1291,7 +1291,7 @@ impl<T> [T] {\n     /// assert_eq!(iter.next(), Some(&mut [2, 3, 4][..]));\n     /// assert_eq!(iter.next(), None);\n     /// ```\n-    #[unstable(feature = \"slice_group_by\", issue = \"none\")]\n+    #[unstable(feature = \"slice_group_by\", issue = \"80552\")]\n     #[inline]\n     pub fn group_by_mut<F>(&mut self, pred: F) -> GroupByMut<'_, T, F>\n     where"}]}