{"sha": "846d373ddf31aeb76dabedb81a4ae9200d9da1cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0NmQzNzNkZGYzMWFlYjc2ZGFiZWRiODFhNGFlOTIwMGQ5ZGExY2Q=", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2017-08-08T16:53:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-08-08T16:53:51Z"}, "message": "Clarify the language around `RefCell::swap`", "tree": {"sha": "7fcaf7b5e0b04dca8ecf9ac86baf5ed6216c6f00", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7fcaf7b5e0b04dca8ecf9ac86baf5ed6216c6f00"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/846d373ddf31aeb76dabedb81a4ae9200d9da1cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/846d373ddf31aeb76dabedb81a4ae9200d9da1cd", "html_url": "https://github.com/rust-lang/rust/commit/846d373ddf31aeb76dabedb81a4ae9200d9da1cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/846d373ddf31aeb76dabedb81a4ae9200d9da1cd/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc76247a0a7778a0f38d63bcc3ae5428327bfcf1", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc76247a0a7778a0f38d63bcc3ae5428327bfcf1", "html_url": "https://github.com/rust-lang/rust/commit/dc76247a0a7778a0f38d63bcc3ae5428327bfcf1"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f0a94a634f5c3ed0b82208a3379429b71c419e83", "filename": "src/libcore/cell.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/846d373ddf31aeb76dabedb81a4ae9200d9da1cd/src%2Flibcore%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/846d373ddf31aeb76dabedb81a4ae9200d9da1cd/src%2Flibcore%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcell.rs?ref=846d373ddf31aeb76dabedb81a4ae9200d9da1cd", "patch": "@@ -589,7 +589,7 @@ impl<T> RefCell<T> {\n     ///\n     /// # Panics\n     ///\n-    /// This function will panic if the `RefCell` has any outstanding borrows,\n+    /// This function will panic if either `RefCell` has any outstanding borrows,\n     /// whether or not they are full mutable borrows.\n     #[inline]\n     #[unstable(feature = \"refcell_replace_swap\", issue=\"43570\")]"}]}