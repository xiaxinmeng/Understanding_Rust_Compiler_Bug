{"sha": "2b8f190d63d07bb7dd352c050c2a1daaa5c6574e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiOGYxOTBkNjNkMDdiYjdkZDM1MmMwNTBjMmExZGFhYTVjNjU3NGU=", "commit": {"author": {"name": "Jorge Aparicio", "email": "jorge@japaric.io", "date": "2017-10-07T18:48:25Z"}, "committer": {"name": "Jorge Aparicio", "email": "jorge@japaric.io", "date": "2017-10-07T18:48:25Z"}, "message": "enable strict alignment (+strict-align) on ARMv6\n\nAs discovered in #44538 ARMv6 devices may or may not support unaligned memory accesses. ARMv6\nLinux *seems* to have no problem with unaligned accesses but this is because the kernel is stepping\nin to fix each unaligned memory access -- this incurs in a performance penalty.\n\nThis commit enforces aligned memory accesses on all our in-tree ARM targets that may be used with\nARMv6 devices. This should improve performance of Rust programs on ARMv6 devices. For the record,\nclang also applies this attribute when targeting ARMv6 devices that are not running Darwin or\nNetBSD.", "tree": {"sha": "9289d87ffb4bf07d75b0c822fe755b028f8dd206", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9289d87ffb4bf07d75b0c822fe755b028f8dd206"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b8f190d63d07bb7dd352c050c2a1daaa5c6574e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b8f190d63d07bb7dd352c050c2a1daaa5c6574e", "html_url": "https://github.com/rust-lang/rust/commit/2b8f190d63d07bb7dd352c050c2a1daaa5c6574e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b8f190d63d07bb7dd352c050c2a1daaa5c6574e/comments", "author": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "committer": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb4d1491466d8239a7a5fd68bd605e3276e97afb", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb4d1491466d8239a7a5fd68bd605e3276e97afb", "html_url": "https://github.com/rust-lang/rust/commit/bb4d1491466d8239a7a5fd68bd605e3276e97afb"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "ba21b1df032a84dde687a6f5289b5beabb3d75e5", "filename": "src/librustc_back/target/arm_linux_androideabi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b8f190d63d07bb7dd352c050c2a1daaa5c6574e/src%2Flibrustc_back%2Ftarget%2Farm_linux_androideabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b8f190d63d07bb7dd352c050c2a1daaa5c6574e/src%2Flibrustc_back%2Ftarget%2Farm_linux_androideabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farm_linux_androideabi.rs?ref=2b8f190d63d07bb7dd352c050c2a1daaa5c6574e", "patch": "@@ -14,7 +14,7 @@ use target::{Target, TargetOptions, TargetResult};\n pub fn target() -> TargetResult {\n     let mut base = super::android_base::opts();\n     // https://developer.android.com/ndk/guides/abis.html#armeabi\n-    base.features = \"+v5te\".to_string();\n+    base.features = \"+strict-align,+v5te\".to_string();\n     base.max_atomic_width = Some(64);\n \n     Ok(Target {"}, {"sha": "e630376a67dd093cf65c867e3799454b03fa6d82", "filename": "src/librustc_back/target/arm_unknown_linux_gnueabi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b8f190d63d07bb7dd352c050c2a1daaa5c6574e/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_gnueabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b8f190d63d07bb7dd352c050c2a1daaa5c6574e/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_gnueabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_gnueabi.rs?ref=2b8f190d63d07bb7dd352c050c2a1daaa5c6574e", "patch": "@@ -27,7 +27,7 @@ pub fn target() -> TargetResult {\n         linker_flavor: LinkerFlavor::Gcc,\n \n         options: TargetOptions {\n-            features: \"+v6\".to_string(),\n+            features: \"+strict-align,+v6\".to_string(),\n             abi_blacklist: super::arm_base::abi_blacklist(),\n             .. base\n         },"}, {"sha": "178a948b2b9c8b33c492d2781ec144d26bea143c", "filename": "src/librustc_back/target/arm_unknown_linux_gnueabihf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b8f190d63d07bb7dd352c050c2a1daaa5c6574e/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_gnueabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b8f190d63d07bb7dd352c050c2a1daaa5c6574e/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_gnueabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_gnueabihf.rs?ref=2b8f190d63d07bb7dd352c050c2a1daaa5c6574e", "patch": "@@ -27,7 +27,7 @@ pub fn target() -> TargetResult {\n         linker_flavor: LinkerFlavor::Gcc,\n \n         options: TargetOptions {\n-            features: \"+v6,+vfp2\".to_string(),\n+            features: \"+strict-align,+v6,+vfp2\".to_string(),\n             abi_blacklist: super::arm_base::abi_blacklist(),\n             .. base\n         }"}, {"sha": "29720ec5efcd758e24a3ad8a7e443fd22345982e", "filename": "src/librustc_back/target/arm_unknown_linux_musleabi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b8f190d63d07bb7dd352c050c2a1daaa5c6574e/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_musleabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b8f190d63d07bb7dd352c050c2a1daaa5c6574e/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_musleabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_musleabi.rs?ref=2b8f190d63d07bb7dd352c050c2a1daaa5c6574e", "patch": "@@ -16,7 +16,7 @@ pub fn target() -> TargetResult {\n \n     // Most of these settings are copied from the arm_unknown_linux_gnueabi\n     // target.\n-    base.features = \"+v6\".to_string();\n+    base.features = \"+strict-align,+v6\".to_string();\n     base.max_atomic_width = Some(64);\n     Ok(Target {\n         // It's important we use \"gnueabi\" and not \"musleabi\" here. LLVM uses it"}, {"sha": "fc8313877f6409619b8cfe2dba684346976d467a", "filename": "src/librustc_back/target/arm_unknown_linux_musleabihf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b8f190d63d07bb7dd352c050c2a1daaa5c6574e/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_musleabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b8f190d63d07bb7dd352c050c2a1daaa5c6574e/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_musleabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_musleabihf.rs?ref=2b8f190d63d07bb7dd352c050c2a1daaa5c6574e", "patch": "@@ -16,7 +16,7 @@ pub fn target() -> TargetResult {\n \n     // Most of these settings are copied from the arm_unknown_linux_gnueabihf\n     // target.\n-    base.features = \"+v6,+vfp2\".to_string();\n+    base.features = \"+strict-align,+v6,+vfp2\".to_string();\n     base.max_atomic_width = Some(64);\n     Ok(Target {\n         // It's important we use \"gnueabihf\" and not \"musleabihf\" here. LLVM"}]}