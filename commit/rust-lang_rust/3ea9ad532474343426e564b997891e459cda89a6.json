{"sha": "3ea9ad532474343426e564b997891e459cda89a6", "node_id": "C_kwDOAAsO6NoAKDNlYTlhZDUzMjQ3NDM0MzQyNmU1NjRiOTk3ODkxZTQ1OWNkYTg5YTY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-16T04:03:26Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-16T04:03:26Z"}, "message": "Auto merge of #111134 - GilShoshan94:remove-send-bound-on-error, r=dtolnay\n\nRemove unnecessary Send bound\n\nHi,\n\nWhile working on a [PR on Tokio](https://github.com/tokio-rs/tokio/pull/5666), I took inspiration from the std channel mpsc and stumbled on a `Send` bound for a `Error` impl.\n\nTokio's maintainer `@Darksonn` pointed out to me that `Error` used to required the `Send` bound long time ago (here https://github.com/rust-lang/rust/pull/23541).\n\nIn the meantime, the `Send` bound `Error` got removed (see https://github.com/rust-lang/rust/pull/21312 and https://github.com/rust-lang/rust/pull/23799).\n\nSo here a PR to removed this bound for `SendError<T>`, `TrySendError<T>` and `SendTimeoutError<T>`.", "tree": {"sha": "654fc3cec3be01ae0690c87de6c5aa9ec074acbd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/654fc3cec3be01ae0690c87de6c5aa9ec074acbd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ea9ad532474343426e564b997891e459cda89a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ea9ad532474343426e564b997891e459cda89a6", "html_url": "https://github.com/rust-lang/rust/commit/3ea9ad532474343426e564b997891e459cda89a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ea9ad532474343426e564b997891e459cda89a6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76e79ca0260a95bd3993c4738df6f9d7c79676ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/76e79ca0260a95bd3993c4738df6f9d7c79676ea", "html_url": "https://github.com/rust-lang/rust/commit/76e79ca0260a95bd3993c4738df6f9d7c79676ea"}, {"sha": "af5de855a33256ea6125f5654296698e507f86e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/af5de855a33256ea6125f5654296698e507f86e0", "html_url": "https://github.com/rust-lang/rust/commit/af5de855a33256ea6125f5654296698e507f86e0"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "33b2bff8534980b1445188f2c2eb321182a4f1b3", "filename": "library/std/src/sync/mpmc/error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea9ad532474343426e564b997891e459cda89a6/library%2Fstd%2Fsrc%2Fsync%2Fmpmc%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea9ad532474343426e564b997891e459cda89a6/library%2Fstd%2Fsrc%2Fsync%2Fmpmc%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fmpmc%2Ferror.rs?ref=3ea9ad532474343426e564b997891e459cda89a6", "patch": "@@ -35,7 +35,7 @@ impl<T> fmt::Display for SendTimeoutError<T> {\n     }\n }\n \n-impl<T: Send> error::Error for SendTimeoutError<T> {}\n+impl<T> error::Error for SendTimeoutError<T> {}\n \n impl<T> From<SendError<T>> for SendTimeoutError<T> {\n     fn from(err: SendError<T>) -> SendTimeoutError<T> {"}, {"sha": "0e0c87d1c748e94a49f128bb43ab8efb12c73629", "filename": "library/std/src/sync/mpsc/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3ea9ad532474343426e564b997891e459cda89a6/library%2Fstd%2Fsrc%2Fsync%2Fmpsc%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea9ad532474343426e564b997891e459cda89a6/library%2Fstd%2Fsrc%2Fsync%2Fmpsc%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fmpsc%2Fmod.rs?ref=3ea9ad532474343426e564b997891e459cda89a6", "patch": "@@ -1124,7 +1124,7 @@ impl<T> fmt::Display for SendError<T> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<T: Send> error::Error for SendError<T> {\n+impl<T> error::Error for SendError<T> {\n     #[allow(deprecated)]\n     fn description(&self) -> &str {\n         \"sending on a closed channel\"\n@@ -1152,7 +1152,7 @@ impl<T> fmt::Display for TrySendError<T> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<T: Send> error::Error for TrySendError<T> {\n+impl<T> error::Error for TrySendError<T> {\n     #[allow(deprecated)]\n     fn description(&self) -> &str {\n         match *self {"}]}