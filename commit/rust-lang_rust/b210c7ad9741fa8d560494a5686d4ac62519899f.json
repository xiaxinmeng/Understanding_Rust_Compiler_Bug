{"sha": "b210c7ad9741fa8d560494a5686d4ac62519899f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyMTBjN2FkOTc0MWZhOGQ1NjA0OTRhNTY4NmQ0YWM2MjUxOTg5OWY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-29T05:09:54Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-29T15:41:26Z"}, "message": "stdlib: Allow the fast path of arena allocation to be CCI'd. 15% improvement on binary-trees.", "tree": {"sha": "4a6b5a64897d544a5c07eac45ea6910035ac21b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a6b5a64897d544a5c07eac45ea6910035ac21b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b210c7ad9741fa8d560494a5686d4ac62519899f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b210c7ad9741fa8d560494a5686d4ac62519899f", "html_url": "https://github.com/rust-lang/rust/commit/b210c7ad9741fa8d560494a5686d4ac62519899f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b210c7ad9741fa8d560494a5686d4ac62519899f/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d25594657826bf9be14dee014913447851e76b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d25594657826bf9be14dee014913447851e76b4", "html_url": "https://github.com/rust-lang/rust/commit/1d25594657826bf9be14dee014913447851e76b4"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "d61131c9d47c15ac8739cf545521882ac95e1974", "filename": "src/libstd/arena.rs", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/b210c7ad9741fa8d560494a5686d4ac62519899f/src%2Flibstd%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b210c7ad9741fa8d560494a5686d4ac62519899f/src%2Flibstd%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Farena.rs?ref=b210c7ad9741fa8d560494a5686d4ac62519899f", "patch": "@@ -22,22 +22,27 @@ fn arena() -> arena {\n }\n \n impl arena for arena {\n+    fn alloc_grow(n_bytes: uint, align: uint) -> *() {\n+        // Allocate a new chunk.\n+        let mut head = list::head(self.chunks);\n+        let chunk_size = vec::alloc_len(head.data);\n+        let new_min_chunk_size = uint::max(n_bytes, chunk_size);\n+        head = chunk(uint::next_power_of_two(new_min_chunk_size));\n+        self.chunks = list::cons(head, @self.chunks);\n+\n+        ret self.alloc(n_bytes, align);\n+    }\n+\n+    #[inline(always)]\n     fn alloc(n_bytes: uint, align: uint) -> *() {\n         let alignm1 = align - 1u;\n         let mut head = list::head(self.chunks);\n \n         let mut start = head.fill;\n         start = (start + alignm1) & !alignm1;\n-        let mut end = start + n_bytes;\n-\n+        let end = start + n_bytes;\n         if end > vec::alloc_len(head.data) {\n-            // Allocate a new chunk.\n-            let new_min_chunk_size = uint::max(n_bytes,\n-                                               vec::alloc_len(head.data));\n-            head = chunk(uint::next_power_of_two(new_min_chunk_size));\n-            self.chunks = list::cons(head, @self.chunks);\n-            start = 0u;\n-            end = n_bytes;\n+            ret self.alloc_grow(n_bytes, align);\n         }\n \n         unsafe {"}]}