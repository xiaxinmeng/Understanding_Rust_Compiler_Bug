{"sha": "a96a69b708dd2dae12d87ea36c545003009c9416", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5NmE2OWI3MDhkZDJkYWUxMmQ4N2VhMzZjNTQ1MDAzMDA5Yzk0MTY=", "commit": {"author": {"name": "Pavel Sountsov", "email": "siege@google.com", "date": "2015-11-17T07:18:07Z"}, "committer": {"name": "SiegeLord", "email": "slabode@aim.com", "date": "2015-11-17T07:18:07Z"}, "message": "Comments.\n\n- Move the option\n- Add some more tests (don't pass yet)", "tree": {"sha": "3e921db520f85a6757c098a0b08ac0ce313a54f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e921db520f85a6757c098a0b08ac0ce313a54f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a96a69b708dd2dae12d87ea36c545003009c9416", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a96a69b708dd2dae12d87ea36c545003009c9416", "html_url": "https://github.com/rust-lang/rust/commit/a96a69b708dd2dae12d87ea36c545003009c9416", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a96a69b708dd2dae12d87ea36c545003009c9416/comments", "author": {"login": "SiegeLordEx", "id": 43966695, "node_id": "MDQ6VXNlcjQzOTY2Njk1", "avatar_url": "https://avatars.githubusercontent.com/u/43966695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SiegeLordEx", "html_url": "https://github.com/SiegeLordEx", "followers_url": "https://api.github.com/users/SiegeLordEx/followers", "following_url": "https://api.github.com/users/SiegeLordEx/following{/other_user}", "gists_url": "https://api.github.com/users/SiegeLordEx/gists{/gist_id}", "starred_url": "https://api.github.com/users/SiegeLordEx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SiegeLordEx/subscriptions", "organizations_url": "https://api.github.com/users/SiegeLordEx/orgs", "repos_url": "https://api.github.com/users/SiegeLordEx/repos", "events_url": "https://api.github.com/users/SiegeLordEx/events{/privacy}", "received_events_url": "https://api.github.com/users/SiegeLordEx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SiegeLord", "id": 480550, "node_id": "MDQ6VXNlcjQ4MDU1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/480550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SiegeLord", "html_url": "https://github.com/SiegeLord", "followers_url": "https://api.github.com/users/SiegeLord/followers", "following_url": "https://api.github.com/users/SiegeLord/following{/other_user}", "gists_url": "https://api.github.com/users/SiegeLord/gists{/gist_id}", "starred_url": "https://api.github.com/users/SiegeLord/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SiegeLord/subscriptions", "organizations_url": "https://api.github.com/users/SiegeLord/orgs", "repos_url": "https://api.github.com/users/SiegeLord/repos", "events_url": "https://api.github.com/users/SiegeLord/events{/privacy}", "received_events_url": "https://api.github.com/users/SiegeLord/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8658774ad2252f00559d88f1fd8884197041f307", "url": "https://api.github.com/repos/rust-lang/rust/commits/8658774ad2252f00559d88f1fd8884197041f307", "html_url": "https://github.com/rust-lang/rust/commit/8658774ad2252f00559d88f1fd8884197041f307"}], "stats": {"total": 164, "additions": 129, "deletions": 35}, "files": [{"sha": "3990e1af6ad6b5728ad968d58324a54a34693222", "filename": "src/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a96a69b708dd2dae12d87ea36c545003009c9416/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a96a69b708dd2dae12d87ea36c545003009c9416/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=a96a69b708dd2dae12d87ea36c545003009c9416", "patch": "@@ -266,6 +266,7 @@ create_config! {\n         \"Maximum width in the body of a struct lit before falling back to vertical formatting\";\n     newline_style: NewlineStyle, NewlineStyle::Unix, \"Unix or Windows line endings\";\n     fn_brace_style: BraceStyle, BraceStyle::SameLineWhere, \"Brace style for functions\";\n+    item_brace_style: BraceStyle, BraceStyle::SameLineWhere, \"Brace style for structs and enums\";\n     fn_return_indent: ReturnIndent, ReturnIndent::WithArgs,\n         \"Location of return type in function declaration\";\n     fn_args_paren_newline: bool, true, \"If function argument parenthesis goes on a newline\";\n@@ -302,5 +303,4 @@ create_config! {\n     take_source_hints: bool, true, \"Retain some formatting characteristics from the source code\";\n     hard_tabs: bool, false, \"Use tab characters for indentation, spaces for alignment\";\n     wrap_comments: bool, false, \"Break comments to fit on the line\";\n-    item_brace_style: BraceStyle, BraceStyle::SameLineWhere, \"Brace style for structs and enums\";\n }"}, {"sha": "96a628349eaa89541805b1c589ca0a11dac3b787", "filename": "tests/source/item-brace-style-next-line.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/a96a69b708dd2dae12d87ea36c545003009c9416/tests%2Fsource%2Fitem-brace-style-next-line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a96a69b708dd2dae12d87ea36c545003009c9416/tests%2Fsource%2Fitem-brace-style-next-line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fitem-brace-style-next-line.rs?ref=a96a69b708dd2dae12d87ea36c545003009c9416", "patch": "@@ -0,0 +1,29 @@\n+// rustfmt-item_brace_style: AlwaysNextLine\n+\n+mod M {\n+    enum A {\n+        A,\n+    }\n+\n+    struct B {\n+        b: i32,\n+    }\n+\n+    // For empty enums and structs, the brace remains on the same line.\n+    enum C {}\n+\n+    struct D {}\n+\n+    enum A<T> where T: Copy {\n+        A,\n+    }\n+\n+    struct B<T> where T: Copy {\n+        b: i32,\n+    }\n+\n+    // For empty enums and structs, the brace remains on the same line.\n+    enum C<T> where T: Copy {}\n+\n+    struct D<T> where T: Copy {}\n+}"}, {"sha": "636a584ff68afa9280b38af1c99cc93ad6007cdd", "filename": "tests/source/item-brace-style-same-line.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/a96a69b708dd2dae12d87ea36c545003009c9416/tests%2Fsource%2Fitem-brace-style-same-line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a96a69b708dd2dae12d87ea36c545003009c9416/tests%2Fsource%2Fitem-brace-style-same-line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fitem-brace-style-same-line.rs?ref=a96a69b708dd2dae12d87ea36c545003009c9416", "patch": "@@ -0,0 +1,29 @@\n+// rustfmt-item_brace_style: PreferSameLine\n+\n+mod M {\n+    enum A\n+    {\n+        A,\n+    }\n+\n+    struct B\n+    {\n+        b: i32,\n+    }\n+\n+    enum C {}\n+\n+    struct D {}\n+\n+    enum A<T> where T: Copy {\n+        A,\n+    }\n+\n+    struct B<T> where T: Copy {\n+        b: i32,\n+    }\n+\n+    enum C<T> where T: Copy {}\n+\n+    struct D<T> where T: Copy {}\n+}"}, {"sha": "37b02f0940a9bc4aa9227cb2e3dabab5ef989f6c", "filename": "tests/source/item-brace-style.rs", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8658774ad2252f00559d88f1fd8884197041f307/tests%2Fsource%2Fitem-brace-style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8658774ad2252f00559d88f1fd8884197041f307/tests%2Fsource%2Fitem-brace-style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fitem-brace-style.rs?ref=8658774ad2252f00559d88f1fd8884197041f307", "patch": "@@ -1,16 +0,0 @@\n-// rustfmt-item_brace_style: AlwaysNextLine\n-\n-mod M {\n-    enum A {\n-        A,\n-    }\n-\n-    struct B {\n-        b: i32,\n-    }\n-\n-    // For empty enums and structs, the brace remains on the same line.\n-    enum C {}\n-\n-    struct D {}\n-}"}, {"sha": "a5c24102d922da34b425dc37cbf09961283337c7", "filename": "tests/target/item-brace-style-next-line.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/a96a69b708dd2dae12d87ea36c545003009c9416/tests%2Ftarget%2Fitem-brace-style-next-line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a96a69b708dd2dae12d87ea36c545003009c9416/tests%2Ftarget%2Fitem-brace-style-next-line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fitem-brace-style-next-line.rs?ref=a96a69b708dd2dae12d87ea36c545003009c9416", "patch": "@@ -0,0 +1,39 @@\n+// rustfmt-item_brace_style: AlwaysNextLine\n+\n+mod M {\n+    enum A\n+    {\n+        A,\n+    }\n+\n+    struct B\n+    {\n+        b: i32,\n+    }\n+\n+    // For empty enums and structs, the brace remains on the same line.\n+    enum C {}\n+\n+    struct D {}\n+\n+    enum A<T>\n+        where T: Copy\n+    {\n+        A,\n+    }\n+\n+    struct B<T>\n+        where T: Copy\n+    {\n+        b: i32,\n+    }\n+\n+    // For empty enums and structs, the brace remains on the same line.\n+    enum C<T>\n+        where T: Copy\n+    {}\n+\n+    struct D<T>\n+        where T: Copy\n+    {}\n+}"}, {"sha": "b38bd2e1a19149e9153f8e02626f5e4f18008f02", "filename": "tests/target/item-brace-style-same-line.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/a96a69b708dd2dae12d87ea36c545003009c9416/tests%2Ftarget%2Fitem-brace-style-same-line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a96a69b708dd2dae12d87ea36c545003009c9416/tests%2Ftarget%2Fitem-brace-style-same-line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fitem-brace-style-same-line.rs?ref=a96a69b708dd2dae12d87ea36c545003009c9416", "patch": "@@ -0,0 +1,31 @@\n+// rustfmt-item_brace_style: PreferSameLine\n+\n+mod M {\n+    enum A {\n+        A,\n+    }\n+\n+    struct B {\n+        b: i32,\n+    }\n+\n+    enum C {}\n+\n+    struct D {}\n+\n+    enum A<T>\n+        where T: Copy {\n+        A,\n+    }\n+\n+    struct B<T>\n+        where T: Copy {\n+        b: i32,\n+    }\n+\n+    enum C<T>\n+        where T: Copy {}\n+\n+    struct D<T>\n+        where T: Copy {}\n+}"}, {"sha": "006d6b4d3bf6997baa2e22ba94c7d65b917e485e", "filename": "tests/target/item-brace-style.rs", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8658774ad2252f00559d88f1fd8884197041f307/tests%2Ftarget%2Fitem-brace-style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8658774ad2252f00559d88f1fd8884197041f307/tests%2Ftarget%2Fitem-brace-style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fitem-brace-style.rs?ref=8658774ad2252f00559d88f1fd8884197041f307", "patch": "@@ -1,18 +0,0 @@\n-// rustfmt-item_brace_style: AlwaysNextLine\n-\n-mod M {\n-    enum A\n-    {\n-        A,\n-    }\n-\n-    struct B\n-    {\n-        b: i32,\n-    }\n-\n-    // For empty enums and structs, the brace remains on the same line.\n-    enum C {}\n-\n-    struct D {}\n-}"}]}