{"sha": "cfbd1a9a250ba3a82041c46605dcf16356f33727", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmYmQxYTlhMjUwYmEzYTgyMDQxYzQ2NjA1ZGNmMTYzNTZmMzM3Mjc=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2018-09-23T15:19:00Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2018-09-23T19:27:41Z"}, "message": "Update tests for changes to drop access", "tree": {"sha": "20b1036fd24321fb2ca387009b905e35a36a513f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20b1036fd24321fb2ca387009b905e35a36a513f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cfbd1a9a250ba3a82041c46605dcf16356f33727", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cfbd1a9a250ba3a82041c46605dcf16356f33727", "html_url": "https://github.com/rust-lang/rust/commit/cfbd1a9a250ba3a82041c46605dcf16356f33727", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cfbd1a9a250ba3a82041c46605dcf16356f33727/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4603fb8862ae5b9b0a82aa848a0bed4e36efc3d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/4603fb8862ae5b9b0a82aa848a0bed4e36efc3d6", "html_url": "https://github.com/rust-lang/rust/commit/4603fb8862ae5b9b0a82aa848a0bed4e36efc3d6"}], "stats": {"total": 36, "additions": 26, "deletions": 10}, "files": [{"sha": "ef7e64ffd97ae251494a68b10e5b8548955c115b", "filename": "src/test/ui/generator/dropck.nll.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cfbd1a9a250ba3a82041c46605dcf16356f33727/src%2Ftest%2Fui%2Fgenerator%2Fdropck.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfbd1a9a250ba3a82041c46605dcf16356f33727/src%2Ftest%2Fui%2Fgenerator%2Fdropck.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fdropck.nll.stderr?ref=cfbd1a9a250ba3a82041c46605dcf16356f33727", "patch": "@@ -9,6 +9,8 @@ LL | }\n    | |\n    | `*cell` dropped here while still borrowed\n    | borrow later used here, when `gen` is dropped\n+   |\n+   = note: values in a scope are dropped in the opposite order they are defined\n \n error[E0597]: `ref_` does not live long enough\n   --> $DIR/dropck.rs:22:11"}, {"sha": "5c753817e358d2cab177bd83a664f59ab9cfed0e", "filename": "src/test/ui/issues/issue-45696-scribble-on-boxed-borrow.migrate.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cfbd1a9a250ba3a82041c46605dcf16356f33727/src%2Ftest%2Fui%2Fissues%2Fissue-45696-scribble-on-boxed-borrow.migrate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfbd1a9a250ba3a82041c46605dcf16356f33727/src%2Ftest%2Fui%2Fissues%2Fissue-45696-scribble-on-boxed-borrow.migrate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45696-scribble-on-boxed-borrow.migrate.stderr?ref=cfbd1a9a250ba3a82041c46605dcf16356f33727", "patch": "@@ -23,7 +23,7 @@ LL |     &mut *(*s).0 //[nll]~ ERROR borrow may still be in use when destructor\n    |     ^^^^^^^^^^^^\n ...\n LL | }\n-   | - here, drop of `*s` needs exclusive access to `*s.0`, because the type `Scribble<'_>` implements the `Drop` trait\n+   | - here, drop of `s` needs exclusive access to `*s.0`, because the type `Scribble<'_>` implements the `Drop` trait\n    |\n note: borrowed value must be valid for the lifetime 'a as defined on the function body at 72:20...\n   --> $DIR/issue-45696-scribble-on-boxed-borrow.rs:72:20\n@@ -41,7 +41,7 @@ LL |     &mut *(**s).0 //[nll]~ ERROR borrow may still be in use when destructor\n    |     ^^^^^^^^^^^^^\n ...\n LL | }\n-   | - here, drop of `**s` needs exclusive access to `*s.0`, because the type `Scribble<'_>` implements the `Drop` trait\n+   | - here, drop of `s` needs exclusive access to `*s.0`, because the type `Scribble<'_>` implements the `Drop` trait\n    |\n note: borrowed value must be valid for the lifetime 'a as defined on the function body at 82:26...\n   --> $DIR/issue-45696-scribble-on-boxed-borrow.rs:82:26"}, {"sha": "79a7c0631f4804ffca17f6cd553b4858b2ff0781", "filename": "src/test/ui/issues/issue-45696-scribble-on-boxed-borrow.nll.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cfbd1a9a250ba3a82041c46605dcf16356f33727/src%2Ftest%2Fui%2Fissues%2Fissue-45696-scribble-on-boxed-borrow.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfbd1a9a250ba3a82041c46605dcf16356f33727/src%2Ftest%2Fui%2Fissues%2Fissue-45696-scribble-on-boxed-borrow.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45696-scribble-on-boxed-borrow.nll.stderr?ref=cfbd1a9a250ba3a82041c46605dcf16356f33727", "patch": "@@ -20,7 +20,7 @@ LL |     &mut *(*s).0 //[nll]~ ERROR borrow may still be in use when destructor\n    |     ^^^^^^^^^^^^\n ...\n LL | }\n-   | - here, drop of `*s` needs exclusive access to `*s.0`, because the type `Scribble<'_>` implements the `Drop` trait\n+   | - here, drop of `s` needs exclusive access to `*s.0`, because the type `Scribble<'_>` implements the `Drop` trait\n    |\n note: borrowed value must be valid for the lifetime 'a as defined on the function body at 72:20...\n   --> $DIR/issue-45696-scribble-on-boxed-borrow.rs:72:20\n@@ -35,7 +35,7 @@ LL |     &mut *(**s).0 //[nll]~ ERROR borrow may still be in use when destructor\n    |     ^^^^^^^^^^^^^\n ...\n LL | }\n-   | - here, drop of `**s` needs exclusive access to `*s.0`, because the type `Scribble<'_>` implements the `Drop` trait\n+   | - here, drop of `s` needs exclusive access to `*s.0`, because the type `Scribble<'_>` implements the `Drop` trait\n    |\n note: borrowed value must be valid for the lifetime 'a as defined on the function body at 82:26...\n   --> $DIR/issue-45696-scribble-on-boxed-borrow.rs:82:26"}, {"sha": "c565842c2c0020e5ad0ecd9b50b09e1289d53000", "filename": "src/test/ui/span/borrowck-ref-into-rvalue.nll.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/cfbd1a9a250ba3a82041c46605dcf16356f33727/src%2Ftest%2Fui%2Fspan%2Fborrowck-ref-into-rvalue.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfbd1a9a250ba3a82041c46605dcf16356f33727/src%2Ftest%2Fui%2Fspan%2Fborrowck-ref-into-rvalue.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fborrowck-ref-into-rvalue.nll.stderr?ref=cfbd1a9a250ba3a82041c46605dcf16356f33727", "patch": "@@ -1,16 +1,16 @@\n-error[E0713]: borrow may still be in use when destructor runs\n-  --> $DIR/borrowck-ref-into-rvalue.rs:14:14\n+error[E0597]: borrowed value does not live long enough\n+  --> $DIR/borrowck-ref-into-rvalue.rs:13:11\n    |\n-LL |         Some(ref m) => {\n-   |              ^^^^^\n+LL |     match Some(\"Hello\".to_string()) {\n+   |           ^^^^^^^^^^^^^^^^^^^^^^^^^ temporary value does not live long enough\n ...\n LL |     }\n-   |     - drop of temporary value occurs here\n+   |     - temporary value only lives until here\n LL |     println!(\"{}\", *msg);\n    |                    ---- borrow later used here\n    |\n    = note: consider using a `let` binding to create a longer lived value\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0713`.\n+For more information about this error, try `rustc --explain E0597`."}, {"sha": "74db695e7e5609bc1251cf74527bb8e0e55009f7", "filename": "src/test/ui/span/dropck_arr_cycle_checked.nll.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cfbd1a9a250ba3a82041c46605dcf16356f33727/src%2Ftest%2Fui%2Fspan%2Fdropck_arr_cycle_checked.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfbd1a9a250ba3a82041c46605dcf16356f33727/src%2Ftest%2Fui%2Fspan%2Fdropck_arr_cycle_checked.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fdropck_arr_cycle_checked.nll.stderr?ref=cfbd1a9a250ba3a82041c46605dcf16356f33727", "patch": "@@ -9,6 +9,8 @@ LL | }\n    | |\n    | `b2` dropped here while still borrowed\n    | borrow later used here, when `b1` is dropped\n+   |\n+   = note: values in a scope are dropped in the opposite order they are defined\n \n error[E0597]: `b3` does not live long enough\n   --> $DIR/dropck_arr_cycle_checked.rs:105:24\n@@ -21,6 +23,8 @@ LL | }\n    | |\n    | `b3` dropped here while still borrowed\n    | borrow later used here, when `b1` is dropped\n+   |\n+   = note: values in a scope are dropped in the opposite order they are defined\n \n error[E0597]: `b1` does not live long enough\n   --> $DIR/dropck_arr_cycle_checked.rs:111:24"}, {"sha": "f7ff4e5169fd45e20cd7cfbfb3353fe6bd045762", "filename": "src/test/ui/span/dropck_vec_cycle_checked.nll.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cfbd1a9a250ba3a82041c46605dcf16356f33727/src%2Ftest%2Fui%2Fspan%2Fdropck_vec_cycle_checked.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfbd1a9a250ba3a82041c46605dcf16356f33727/src%2Ftest%2Fui%2Fspan%2Fdropck_vec_cycle_checked.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fdropck_vec_cycle_checked.nll.stderr?ref=cfbd1a9a250ba3a82041c46605dcf16356f33727", "patch": "@@ -9,6 +9,8 @@ LL | }\n    | |\n    | `c2` dropped here while still borrowed\n    | borrow later used here, when `c1` is dropped\n+   |\n+   = note: values in a scope are dropped in the opposite order they are defined\n \n error[E0597]: `c3` does not live long enough\n   --> $DIR/dropck_vec_cycle_checked.rs:115:24\n@@ -21,6 +23,8 @@ LL | }\n    | |\n    | `c3` dropped here while still borrowed\n    | borrow later used here, when `c1` is dropped\n+   |\n+   = note: values in a scope are dropped in the opposite order they are defined\n \n error[E0597]: `c1` does not live long enough\n   --> $DIR/dropck_vec_cycle_checked.rs:121:24"}, {"sha": "a1451866e677ca319378464196f9abf9d3a2e2aa", "filename": "src/test/ui/span/issue-29106.nll.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cfbd1a9a250ba3a82041c46605dcf16356f33727/src%2Ftest%2Fui%2Fspan%2Fissue-29106.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfbd1a9a250ba3a82041c46605dcf16356f33727/src%2Ftest%2Fui%2Fspan%2Fissue-29106.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-29106.nll.stderr?ref=cfbd1a9a250ba3a82041c46605dcf16356f33727", "patch": "@@ -8,6 +8,8 @@ LL |     }\n    |     |\n    |     `x` dropped here while still borrowed\n    |     borrow later used here, when `y` is dropped\n+   |\n+   = note: values in a scope are dropped in the opposite order they are defined\n \n error[E0597]: `x` does not live long enough\n   --> $DIR/issue-29106.rs:33:25\n@@ -19,6 +21,8 @@ LL |     }\n    |     |\n    |     `x` dropped here while still borrowed\n    |     borrow later used here, when `y` is dropped\n+   |\n+   = note: values in a scope are dropped in the opposite order they are defined\n \n error: aborting due to 2 previous errors\n "}, {"sha": "292c007f5122518c24ad41cc1f0a42a77c722382", "filename": "src/test/ui/span/vec-must-not-hide-type-from-dropck.nll.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cfbd1a9a250ba3a82041c46605dcf16356f33727/src%2Ftest%2Fui%2Fspan%2Fvec-must-not-hide-type-from-dropck.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfbd1a9a250ba3a82041c46605dcf16356f33727/src%2Ftest%2Fui%2Fspan%2Fvec-must-not-hide-type-from-dropck.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fvec-must-not-hide-type-from-dropck.nll.stderr?ref=cfbd1a9a250ba3a82041c46605dcf16356f33727", "patch": "@@ -9,6 +9,8 @@ LL | }\n    | |\n    | `c2` dropped here while still borrowed\n    | borrow later used here, when `c1` is dropped\n+   |\n+   = note: values in a scope are dropped in the opposite order they are defined\n \n error[E0597]: `c1` does not live long enough\n   --> $DIR/vec-must-not-hide-type-from-dropck.rs:129:24"}]}