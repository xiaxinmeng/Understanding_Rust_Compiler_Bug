{"sha": "f8349e1a83bf44ea158d97aaba3103a52f8c940d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4MzQ5ZTFhODNiZjQ0ZWExNThkOTdhYWJhMzEwM2E1MmY4Yzk0MGQ=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2016-12-19T11:31:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-12-19T11:31:08Z"}, "message": "Merge pull request #1318 from oli-obk/op_assign_false_positive\n\ndon't lint on x = x + y inside an AddAssign impl", "tree": {"sha": "dedcd97817ce2a87658f8f55fbfe78d87041dd5a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dedcd97817ce2a87658f8f55fbfe78d87041dd5a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8349e1a83bf44ea158d97aaba3103a52f8c940d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8349e1a83bf44ea158d97aaba3103a52f8c940d", "html_url": "https://github.com/rust-lang/rust/commit/f8349e1a83bf44ea158d97aaba3103a52f8c940d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8349e1a83bf44ea158d97aaba3103a52f8c940d/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea0227fff7ef86bf20f7942bb9b7d062a11c3d99", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea0227fff7ef86bf20f7942bb9b7d062a11c3d99", "html_url": "https://github.com/rust-lang/rust/commit/ea0227fff7ef86bf20f7942bb9b7d062a11c3d99"}, {"sha": "5f6cae0659fc1c93f85b26525ec7ab63385dade3", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f6cae0659fc1c93f85b26525ec7ab63385dade3", "html_url": "https://github.com/rust-lang/rust/commit/5f6cae0659fc1c93f85b26525ec7ab63385dade3"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "0b1d7fd8671b651bed7f361d2f189915cd681bcb", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8349e1a83bf44ea158d97aaba3103a52f8c940d/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/f8349e1a83bf44ea158d97aaba3103a52f8c940d/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=f8349e1a83bf44ea158d97aaba3103a52f8c940d", "patch": "@@ -29,7 +29,7 @@ clippy_lints = { version = \"0.0.104\", path = \"clippy_lints\" }\n # end automatic update\n \n [dev-dependencies]\n-compiletest_rs = \"0.2.1\"\n+compiletest_rs = \"0.2.5\"\n lazy_static = \"0.1.15\"\n regex = \"0.1.71\"\n rustc-serialize = \"0.3\""}, {"sha": "5f5cddc64714b73c99add74553ad15a9389bd478", "filename": "clippy_lints/src/assign_ops.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f8349e1a83bf44ea158d97aaba3103a52f8c940d/clippy_lints%2Fsrc%2Fassign_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8349e1a83bf44ea158d97aaba3103a52f8c940d/clippy_lints%2Fsrc%2Fassign_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassign_ops.rs?ref=f8349e1a83bf44ea158d97aaba3103a52f8c940d", "patch": "@@ -1,5 +1,6 @@\n use rustc::hir;\n use rustc::lint::*;\n+use syntax::ast;\n use utils::{span_lint_and_then, snippet_opt, SpanlessEq, get_trait_def_id, implements_trait};\n use utils::{higher, sugg};\n \n@@ -135,6 +136,19 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for AssignOps {\n                                         } else {\n                                             return; // useless if the trait doesn't exist\n                                         };\n+                                        // check that we are not inside an `impl AssignOp` of this exact operation\n+                                        let parent_fn = cx.tcx.map.get_parent(e.id);\n+                                        let parent_impl = cx.tcx.map.get_parent(parent_fn);\n+                                        // the crate node is the only one that is not in the map\n+                                        if parent_impl != ast::CRATE_NODE_ID {\n+                                            if let hir::map::Node::NodeItem(item) = cx.tcx.map.get(parent_impl) {\n+                                                if let hir::Item_::ItemImpl(_, _, _, Some(ref trait_ref), _, _) = item.node {\n+                                                    if trait_ref.path.def.def_id() == trait_id {\n+                                                        return;\n+                                                    }\n+                                                }\n+                                            }\n+                                        }\n                                         implements_trait($cx, $ty, trait_id, vec![$rty])\n                                     },)*\n                                     _ => false,"}, {"sha": "e8549c01bc93268c7d4ff431a017150f3b14249b", "filename": "tests/compile-fail/assign_ops2.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/f8349e1a83bf44ea158d97aaba3103a52f8c940d/tests%2Fcompile-fail%2Fassign_ops2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8349e1a83bf44ea158d97aaba3103a52f8c940d/tests%2Fcompile-fail%2Fassign_ops2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fassign_ops2.rs?ref=f8349e1a83bf44ea158d97aaba3103a52f8c940d", "patch": "@@ -34,3 +34,24 @@ fn main() {\n     a %= 42 % a;\n     a <<= 6 << a;\n }\n+\n+// check that we don't lint on op assign impls, because that's just the way to impl them\n+\n+use std::ops::{Mul, MulAssign};\n+\n+#[derive(Copy, Clone, Debug, PartialEq)]\n+pub struct Wrap(i64);\n+\n+impl Mul<i64> for Wrap {\n+    type Output = Self;\n+\n+    fn mul(self, rhs: i64) -> Self {\n+        Wrap(self.0 * rhs)\n+    }\n+}\n+\n+impl MulAssign<i64> for Wrap {\n+    fn mul_assign(&mut self, rhs: i64) {\n+        *self = *self * rhs\n+    }\n+}"}]}