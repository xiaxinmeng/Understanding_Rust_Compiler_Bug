{"sha": "dca160a06a85cfe6d961a586543112e772e55b13", "node_id": "C_kwDOAAsO6NoAKGRjYTE2MGEwNmE4NWNmZTZkOTYxYTU4NjU0MzExMmU3NzJlNTViMTM", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-12-06T15:42:30Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2023-01-20T21:53:34Z"}, "message": "diagnostics: use `module_path` to check crate import instead of strings", "tree": {"sha": "6b3f24655c17940dd79be08ce1106899a042602a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b3f24655c17940dd79be08ce1106899a042602a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dca160a06a85cfe6d961a586543112e772e55b13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dca160a06a85cfe6d961a586543112e772e55b13", "html_url": "https://github.com/rust-lang/rust/commit/dca160a06a85cfe6d961a586543112e772e55b13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dca160a06a85cfe6d961a586543112e772e55b13/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e237690a28f0d38ab478616fe4b247fb6eb8013f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e237690a28f0d38ab478616fe4b247fb6eb8013f", "html_url": "https://github.com/rust-lang/rust/commit/e237690a28f0d38ab478616fe4b247fb6eb8013f"}], "stats": {"total": 24, "additions": 4, "deletions": 20}, "files": [{"sha": "0b60952ae3c0865ac567d3bbb8f0f74d1c759a6b", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 4, "deletions": 20, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/dca160a06a85cfe6d961a586543112e772e55b13/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dca160a06a85cfe6d961a586543112e772e55b13/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=dca160a06a85cfe6d961a586543112e772e55b13", "patch": "@@ -2126,26 +2126,10 @@ impl<'a, 'b> ImportResolver<'a, 'b> {\n                 let source_map = self.r.session.source_map();\n \n                 // Make sure this is actually crate-relative.\n-                let use_and_crate = import.use_span.with_hi(after_crate_name.lo());\n-                let is_definitely_crate =\n-                    source_map.span_to_snippet(use_and_crate).map_or(false, |s| {\n-                        let mut s = s.trim();\n-                        debug!(\"check_for_module_export_macro: s={s:?}\",);\n-                        s = s\n-                            .split_whitespace()\n-                            .rev()\n-                            .next()\n-                            .expect(\"split_whitespace always yields at least once\");\n-                        debug!(\"check_for_module_export_macro: s={s:?}\",);\n-                        if s.ends_with(\"::\") {\n-                            s = &s[..s.len() - 2];\n-                        } else {\n-                            return false;\n-                        }\n-                        s = s.trim();\n-                        debug!(\"check_for_module_export_macro: s={s:?}\",);\n-                        s != \"self\" && s != \"super\"\n-                    });\n+                let is_definitely_crate = import\n+                    .module_path\n+                    .first()\n+                    .map_or(false, |f| f.ident.name != kw::SelfLower && f.ident.name != kw::Super);\n \n                 // Add the import to the start, with a `{` if required.\n                 let start_point = source_map.start_point(after_crate_name);"}]}