{"sha": "146abdd1198d25541b19ce7e17c588f041d88518", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0NmFiZGQxMTk4ZDI1NTQxYjE5Y2U3ZTE3YzU4OGYwNDFkODg1MTg=", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-09-03T10:04:43Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-09-09T05:21:33Z"}, "message": "Add another test case + fmt", "tree": {"sha": "a1c3d1aa199091b1edcb604c4c84ed93a44d3beb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1c3d1aa199091b1edcb604c4c84ed93a44d3beb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/146abdd1198d25541b19ce7e17c588f041d88518", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEQ7Fl7qPq2YcWF1dqAn35M4hird0FAmE5md0ACgkQAn35M4hi\nrd0MWxAAsSl1NtcUC9OU4h8BqmfSXFKkBDiYE1jA08LS/Ug+pJSa3F7q7Rh/W0Bl\nmo/8bMO/to8iT6dG7LxIbTgOCYFf/IwdOt8skimGHV/L6TX/U4UuH5Zl93owm4R6\nZM1RKrVcWE2is7ji82biaoleK+Ah4Pm4irz17UASgHk5pjrrekSKb2q6Xyre2Vk1\n/zs7xQt0RtQZK2/Gon3ONFax8KBfyEgCgcbMtoQDVu23RF6iTB577iVr9qB4EQoD\nz3wKurNRktyMxWAmhu7cGn8ZJFkyyDR1V5Zs3HPEmZcbGVs9L+4M3pYMBV5kHBA3\n1r9oXsD4mjnfXl/qyY32/c5h1s4uD1LhEI8mKsTTHQ9NEGWyLgkGBoHtCJeUEaQV\nJ3jbauXFOF5OR5PMMcu3QQmiWaesf71vYMOfI5t2FUvwl8LaBupnVs+cRJ7it5L3\nonBPsZh/BB29HIJ5pUnBD/ZSaZaSDTFFtdJxo7J8ioSDPoN7WZqONdb88p/rLcxN\n81EKKLr5xw6lcrFTgYXVnnjNpkjJRcOfkX2stTpCqIaNZv3X4yUDQlbL2gZW+eYn\nSdDz47ry2NeGzggmPF/wWwRcy4yJkt32GgbsK0bcy5KRHIINwEa9+zwW9UK+vZdx\nT6SLw+jH4xLRdyNcvjN9xTP1xJI9Sr+Qm0acQRrl0UVkfzIX2Fg=\n=78v1\n-----END PGP SIGNATURE-----", "payload": "tree a1c3d1aa199091b1edcb604c4c84ed93a44d3beb\nparent 49ac725d51b136698f41b17c64187570d1f28ecd\nauthor Deadbeef <ent3rm4n@gmail.com> 1630663483 +0000\ncommitter Deadbeef <ent3rm4n@gmail.com> 1631164893 +0000\n\nAdd another test case + fmt\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/146abdd1198d25541b19ce7e17c588f041d88518", "html_url": "https://github.com/rust-lang/rust/commit/146abdd1198d25541b19ce7e17c588f041d88518", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/146abdd1198d25541b19ce7e17c588f041d88518/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49ac725d51b136698f41b17c64187570d1f28ecd", "url": "https://api.github.com/repos/rust-lang/rust/commits/49ac725d51b136698f41b17c64187570d1f28ecd", "html_url": "https://github.com/rust-lang/rust/commit/49ac725d51b136698f41b17c64187570d1f28ecd"}], "stats": {"total": 108, "additions": 94, "deletions": 14}, "files": [{"sha": "dc3927ed85b3da8fa8182549a11c3bc5cc16e762", "filename": "compiler/rustc_const_eval/src/transform/check_consts/qualifs.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/146abdd1198d25541b19ce7e17c588f041d88518/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fqualifs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/146abdd1198d25541b19ce7e17c588f041d88518/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fqualifs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fqualifs.rs?ref=146abdd1198d25541b19ce7e17c588f041d88518", "patch": "@@ -119,10 +119,8 @@ impl Qualif for NeedsNonConstDrop {\n             // without having the lang item present.\n             return false;\n         };\n-        let trait_ref = ty::TraitRef {\n-            def_id: drop_trait,\n-            substs: cx.tcx.mk_substs_trait(ty, &[]),\n-        };\n+        let trait_ref =\n+            ty::TraitRef { def_id: drop_trait, substs: cx.tcx.mk_substs_trait(ty, &[]) };\n         let obligation = Obligation::new(\n             ObligationCause::dummy(),\n             cx.param_env,"}, {"sha": "1ac62f0bfec053ec583767594b81773be477ed97", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-drop-fail.precise.stderr", "status": "modified", "additions": 37, "deletions": 5, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/146abdd1198d25541b19ce7e17c588f041d88518/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail.precise.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146abdd1198d25541b19ce7e17c588f041d88518/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail.precise.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail.precise.stderr?ref=146abdd1198d25541b19ce7e17c588f041d88518", "patch": "@@ -1,27 +1,59 @@\n+error: `~const` is not allowed here\n+  --> $DIR/const-drop-fail.rs:27:35\n+   |\n+LL | struct ConstDropImplWithBounds<T: ~const A>(PhantomData<T>);\n+   |                                   ^^^^^^^^\n+   |\n+   = note: only allowed on bounds on traits' associated types and functions, const fns, const impls and its associated functions\n+\n error[E0277]: the trait bound `NonTrivialDrop: Drop` is not satisfied\n-  --> $DIR/const-drop-fail.rs:30:5\n+  --> $DIR/const-drop-fail.rs:45:5\n    |\n LL |     NonTrivialDrop,\n    |     ^^^^^^^^^^^^^^ the trait `Drop` is not implemented for `NonTrivialDrop`\n    |\n note: required by a bound in `check`\n-  --> $DIR/const-drop-fail.rs:21:19\n+  --> $DIR/const-drop-fail.rs:36:19\n    |\n LL | const fn check<T: ~const Drop>(_: T) {}\n    |                   ^^^^^^^^^^^ required by this bound in `check`\n \n error[E0277]: the trait bound `ConstImplWithDropGlue: Drop` is not satisfied\n-  --> $DIR/const-drop-fail.rs:32:5\n+  --> $DIR/const-drop-fail.rs:47:5\n    |\n LL |     ConstImplWithDropGlue(NonTrivialDrop),\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Drop` is not implemented for `ConstImplWithDropGlue`\n    |\n note: required by a bound in `check`\n-  --> $DIR/const-drop-fail.rs:21:19\n+  --> $DIR/const-drop-fail.rs:36:19\n    |\n LL | const fn check<T: ~const Drop>(_: T) {}\n    |                   ^^^^^^^^^^^ required by this bound in `check`\n \n-error: aborting due to 2 previous errors\n+error[E0277]: the trait bound `NonTrivialDrop: A` is not satisfied\n+  --> $DIR/const-drop-fail.rs:49:5\n+   |\n+LL |     ConstDropImplWithBounds::<NonTrivialDrop>(PhantomData),\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `A` is not implemented for `NonTrivialDrop`\n+   |\n+note: required by `ConstDropImplWithBounds`\n+  --> $DIR/const-drop-fail.rs:27:1\n+   |\n+LL | struct ConstDropImplWithBounds<T: ~const A>(PhantomData<T>);\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0277]: the trait bound `NonTrivialDrop: A` is not satisfied\n+  --> $DIR/const-drop-fail.rs:49:5\n+   |\n+LL |     ConstDropImplWithBounds::<NonTrivialDrop>(PhantomData),\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `A` is not implemented for `NonTrivialDrop`\n+   |\n+note: required by a bound in `ConstDropImplWithBounds`\n+  --> $DIR/const-drop-fail.rs:27:35\n+   |\n+LL | struct ConstDropImplWithBounds<T: ~const A>(PhantomData<T>);\n+   |                                   ^^^^^^^^ required by this bound in `ConstDropImplWithBounds`\n+\n+error: aborting due to 5 previous errors\n \n For more information about this error, try `rustc --explain E0277`."}, {"sha": "3d4de088f5530f02cd9b8235160281c9192adb00", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-drop-fail.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/146abdd1198d25541b19ce7e17c588f041d88518/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/146abdd1198d25541b19ce7e17c588f041d88518/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail.rs?ref=146abdd1198d25541b19ce7e17c588f041d88518", "patch": "@@ -4,6 +4,8 @@\n #![feature(const_fn_trait_bound)]\n #![cfg_attr(precise, feature(const_precise_live_drops))]\n \n+use std::marker::PhantomData;\n+\n struct NonTrivialDrop;\n \n impl Drop for NonTrivialDrop {\n@@ -18,6 +20,19 @@ impl const Drop for ConstImplWithDropGlue {\n     fn drop(&mut self) {}\n }\n \n+trait A { fn a() { println!(\"A\"); } }\n+\n+impl A for NonTrivialDrop {}\n+\n+struct ConstDropImplWithBounds<T: ~const A>(PhantomData<T>);\n+//~^ ERROR `~const` is not allowed\n+\n+impl<T: ~const A> const Drop for ConstDropImplWithBounds<T> {\n+    fn drop(&mut self) {\n+        T::a();\n+    }\n+}\n+\n const fn check<T: ~const Drop>(_: T) {}\n \n macro_rules! check_all {\n@@ -31,6 +46,9 @@ check_all! {\n     //~^ ERROR the trait bound\n     ConstImplWithDropGlue(NonTrivialDrop),\n     //~^ ERROR the trait bound\n+    ConstDropImplWithBounds::<NonTrivialDrop>(PhantomData),\n+    //~^ ERROR the trait bound\n+    //~| ERROR the trait bound\n }\n \n fn main() {}"}, {"sha": "1ac62f0bfec053ec583767594b81773be477ed97", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-drop-fail.stock.stderr", "status": "modified", "additions": 37, "deletions": 5, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/146abdd1198d25541b19ce7e17c588f041d88518/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail.stock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/146abdd1198d25541b19ce7e17c588f041d88518/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail.stock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail.stock.stderr?ref=146abdd1198d25541b19ce7e17c588f041d88518", "patch": "@@ -1,27 +1,59 @@\n+error: `~const` is not allowed here\n+  --> $DIR/const-drop-fail.rs:27:35\n+   |\n+LL | struct ConstDropImplWithBounds<T: ~const A>(PhantomData<T>);\n+   |                                   ^^^^^^^^\n+   |\n+   = note: only allowed on bounds on traits' associated types and functions, const fns, const impls and its associated functions\n+\n error[E0277]: the trait bound `NonTrivialDrop: Drop` is not satisfied\n-  --> $DIR/const-drop-fail.rs:30:5\n+  --> $DIR/const-drop-fail.rs:45:5\n    |\n LL |     NonTrivialDrop,\n    |     ^^^^^^^^^^^^^^ the trait `Drop` is not implemented for `NonTrivialDrop`\n    |\n note: required by a bound in `check`\n-  --> $DIR/const-drop-fail.rs:21:19\n+  --> $DIR/const-drop-fail.rs:36:19\n    |\n LL | const fn check<T: ~const Drop>(_: T) {}\n    |                   ^^^^^^^^^^^ required by this bound in `check`\n \n error[E0277]: the trait bound `ConstImplWithDropGlue: Drop` is not satisfied\n-  --> $DIR/const-drop-fail.rs:32:5\n+  --> $DIR/const-drop-fail.rs:47:5\n    |\n LL |     ConstImplWithDropGlue(NonTrivialDrop),\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Drop` is not implemented for `ConstImplWithDropGlue`\n    |\n note: required by a bound in `check`\n-  --> $DIR/const-drop-fail.rs:21:19\n+  --> $DIR/const-drop-fail.rs:36:19\n    |\n LL | const fn check<T: ~const Drop>(_: T) {}\n    |                   ^^^^^^^^^^^ required by this bound in `check`\n \n-error: aborting due to 2 previous errors\n+error[E0277]: the trait bound `NonTrivialDrop: A` is not satisfied\n+  --> $DIR/const-drop-fail.rs:49:5\n+   |\n+LL |     ConstDropImplWithBounds::<NonTrivialDrop>(PhantomData),\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `A` is not implemented for `NonTrivialDrop`\n+   |\n+note: required by `ConstDropImplWithBounds`\n+  --> $DIR/const-drop-fail.rs:27:1\n+   |\n+LL | struct ConstDropImplWithBounds<T: ~const A>(PhantomData<T>);\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0277]: the trait bound `NonTrivialDrop: A` is not satisfied\n+  --> $DIR/const-drop-fail.rs:49:5\n+   |\n+LL |     ConstDropImplWithBounds::<NonTrivialDrop>(PhantomData),\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `A` is not implemented for `NonTrivialDrop`\n+   |\n+note: required by a bound in `ConstDropImplWithBounds`\n+  --> $DIR/const-drop-fail.rs:27:35\n+   |\n+LL | struct ConstDropImplWithBounds<T: ~const A>(PhantomData<T>);\n+   |                                   ^^^^^^^^ required by this bound in `ConstDropImplWithBounds`\n+\n+error: aborting due to 5 previous errors\n \n For more information about this error, try `rustc --explain E0277`."}]}