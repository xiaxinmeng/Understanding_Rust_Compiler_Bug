{"sha": "3a530baec9df99ed62a5b792da92baa6009842e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhNTMwYmFlYzlkZjk5ZWQ2MmE1Yjc5MmRhOTJiYWE2MDA5ODQyZTI=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-01-23T22:58:39Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-01-24T01:05:12Z"}, "message": "For E0277 on `for` loops, point at first line\n\nWhen E0277's span points at a `for` loop, the actual issue is in the\nelement being iterated. Instead of pointing at the entire loop, point\nonly at the first line (when possible) so that the span ends in the\nelement for which E0277 was triggered.", "tree": {"sha": "f1991a811bca047b237d59e1936df2bab1b1da02", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1991a811bca047b237d59e1936df2bab1b1da02"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a530baec9df99ed62a5b792da92baa6009842e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a530baec9df99ed62a5b792da92baa6009842e2", "html_url": "https://github.com/rust-lang/rust/commit/3a530baec9df99ed62a5b792da92baa6009842e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a530baec9df99ed62a5b792da92baa6009842e2/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a39b2aa5a68dd07aacab2106db3927f666a485a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a39b2aa5a68dd07aacab2106db3927f666a485a", "html_url": "https://github.com/rust-lang/rust/commit/3a39b2aa5a68dd07aacab2106db3927f666a485a"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "61456b3b0037999dbcc1e7cee2efcdde04890795", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3a530baec9df99ed62a5b792da92baa6009842e2/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a530baec9df99ed62a5b792da92baa6009842e2/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=3a530baec9df99ed62a5b792da92baa6009842e2", "patch": "@@ -551,6 +551,24 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n                         let OnUnimplementedNote { message, label }\n                             = self.on_unimplemented_note(trait_ref, obligation);\n                         let have_alt_message = message.is_some() || label.is_some();\n+                        let span = match self.tcx.sess.codemap().span_to_snippet(span) {\n+                            Ok(ref s) if s.starts_with(\"for \") => {\n+                                // On for loops, this error is caused by the element being iterated\n+                                // on, but the span points at the entire for loop. Instead of:\n+                                //\n+                                // / for c in \"asdf\" {\n+                                // |     ...\n+                                // | }\n+                                // |_^ `&str` is not an iterator\n+                                //\n+                                // lets point at:\n+                                //\n+                                // for c in \"asdf\" {\n+                                // ^^^^^^^^^^^^^^^ `&str` is not an iterator\n+                                self.tcx.sess.codemap().span_until_char(span, '{')\n+                            }\n+                            _ => span,\n+                        };\n \n                         let mut err = struct_span_err!(\n                             self.tcx.sess,"}, {"sha": "011886e8073467e67126ede597a0006dcf6dbfee", "filename": "src/test/ui/suggestions/for-c-in-str.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/3a530baec9df99ed62a5b792da92baa6009842e2/src%2Ftest%2Fui%2Fsuggestions%2Ffor-c-in-str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a530baec9df99ed62a5b792da92baa6009842e2/src%2Ftest%2Fui%2Fsuggestions%2Ffor-c-in-str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ffor-c-in-str.rs?ref=3a530baec9df99ed62a5b792da92baa6009842e2", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// E0277 should point exclusively at line 14, not the entire for loop span\n+\n+fn main() {\n+    for c in \"asdf\" {\n+    //~^ ERROR the trait bound `&str: std::iter::Iterator` is not satisfied\n+    //~| NOTE `&str` is not an iterator\n+    //~| HELP the trait `std::iter::Iterator` is not implemented for `&str`\n+    //~| NOTE required by `std::iter::IntoIterator::into_iter`\n+        println!(\"\");\n+    }\n+}"}, {"sha": "e99a7d7fe55ad08c5c818bcc5e517084f9bb014b", "filename": "src/test/ui/suggestions/for-c-in-str.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3a530baec9df99ed62a5b792da92baa6009842e2/src%2Ftest%2Fui%2Fsuggestions%2Ffor-c-in-str.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3a530baec9df99ed62a5b792da92baa6009842e2/src%2Ftest%2Fui%2Fsuggestions%2Ffor-c-in-str.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ffor-c-in-str.stderr?ref=3a530baec9df99ed62a5b792da92baa6009842e2", "patch": "@@ -0,0 +1,11 @@\n+error[E0277]: the trait bound `&str: std::iter::Iterator` is not satisfied\n+  --> $DIR/for-c-in-str.rs:14:5\n+   |\n+14 |     for c in \"asdf\" {\n+   |     ^^^^^^^^^^^^^^^ `&str` is not an iterator; maybe try calling `.iter()` or a similar method\n+   |\n+   = help: the trait `std::iter::Iterator` is not implemented for `&str`\n+   = note: required by `std::iter::IntoIterator::into_iter`\n+\n+error: aborting due to previous error\n+"}]}