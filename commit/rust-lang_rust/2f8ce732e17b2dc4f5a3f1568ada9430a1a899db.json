{"sha": "2f8ce732e17b2dc4f5a3f1568ada9430a1a899db", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmOGNlNzMyZTE3YjJkYzRmNWEzZjE1NjhhZGE5NDMwYTFhODk5ZGI=", "commit": {"author": {"name": "QuietMisdreavus", "email": "grey@quietmisdreavus.net", "date": "2018-11-10T22:05:29Z"}, "committer": {"name": "QuietMisdreavus", "email": "grey@quietmisdreavus.net", "date": "2018-11-10T22:05:29Z"}, "message": "move all static-file include!s into a single module", "tree": {"sha": "9b48f699294576d8f6dc0d1b27147c58e221470b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b48f699294576d8f6dc0d1b27147c58e221470b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f8ce732e17b2dc4f5a3f1568ada9430a1a899db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f8ce732e17b2dc4f5a3f1568ada9430a1a899db", "html_url": "https://github.com/rust-lang/rust/commit/2f8ce732e17b2dc4f5a3f1568ada9430a1a899db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f8ce732e17b2dc4f5a3f1568ada9430a1a899db/comments", "author": {"login": "QuietMisdreavus", "id": 5217170, "node_id": "MDQ6VXNlcjUyMTcxNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5217170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuietMisdreavus", "html_url": "https://github.com/QuietMisdreavus", "followers_url": "https://api.github.com/users/QuietMisdreavus/followers", "following_url": "https://api.github.com/users/QuietMisdreavus/following{/other_user}", "gists_url": "https://api.github.com/users/QuietMisdreavus/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuietMisdreavus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuietMisdreavus/subscriptions", "organizations_url": "https://api.github.com/users/QuietMisdreavus/orgs", "repos_url": "https://api.github.com/users/QuietMisdreavus/repos", "events_url": "https://api.github.com/users/QuietMisdreavus/events{/privacy}", "received_events_url": "https://api.github.com/users/QuietMisdreavus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "QuietMisdreavus", "id": 5217170, "node_id": "MDQ6VXNlcjUyMTcxNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5217170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuietMisdreavus", "html_url": "https://github.com/QuietMisdreavus", "followers_url": "https://api.github.com/users/QuietMisdreavus/followers", "following_url": "https://api.github.com/users/QuietMisdreavus/following{/other_user}", "gists_url": "https://api.github.com/users/QuietMisdreavus/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuietMisdreavus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuietMisdreavus/subscriptions", "organizations_url": "https://api.github.com/users/QuietMisdreavus/orgs", "repos_url": "https://api.github.com/users/QuietMisdreavus/repos", "events_url": "https://api.github.com/users/QuietMisdreavus/events{/privacy}", "received_events_url": "https://api.github.com/users/QuietMisdreavus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6cfc6033955dd2685dfa7baeec6f6bc3bfdfe2f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/6cfc6033955dd2685dfa7baeec6f6bc3bfdfe2f1", "html_url": "https://github.com/rust-lang/rust/commit/6cfc6033955dd2685dfa7baeec6f6bc3bfdfe2f1"}], "stats": {"total": 167, "additions": 140, "deletions": 27}, "files": [{"sha": "7dafe67485a6e92d86f2972fb34571a874a8aeec", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2f8ce732e17b2dc4f5a3f1568ada9430a1a899db/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f8ce732e17b2dc4f5a3f1568ada9430a1a899db/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=2f8ce732e17b2dc4f5a3f1568ada9430a1a899db", "patch": "@@ -29,6 +29,7 @@ use core::new_handler;\n use externalfiles::ExternalHtml;\n use html;\n use html::markdown::IdMap;\n+use html::static_files;\n use opts;\n use passes::{self, DefaultPassOption};\n use theme;\n@@ -261,7 +262,7 @@ impl Options {\n \n         let to_check = matches.opt_strs(\"theme-checker\");\n         if !to_check.is_empty() {\n-            let paths = theme::load_css_paths(include_bytes!(\"html/static/themes/light.css\"));\n+            let paths = theme::load_css_paths(static_files::themes::LIGHT.as_bytes());\n             let mut errors = 0;\n \n             println!(\"rustdoc: [theme-checker] Starting tests!\");\n@@ -338,7 +339,7 @@ impl Options {\n \n         let mut themes = Vec::new();\n         if matches.opt_present(\"themes\") {\n-            let paths = theme::load_css_paths(include_bytes!(\"html/static/themes/light.css\"));\n+            let paths = theme::load_css_paths(static_files::themes::LIGHT.as_bytes());\n \n             for (theme_file, theme_s) in matches.opt_strs(\"themes\")\n                                                 .iter()"}, {"sha": "f560350d5105d6298de6fada8d39894894cd1ca0", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/2f8ce732e17b2dc4f5a3f1568ada9430a1a899db/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f8ce732e17b2dc4f5a3f1568ada9430a1a899db/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=2f8ce732e17b2dc4f5a3f1568ada9430a1a899db", "patch": "@@ -76,7 +76,7 @@ use html::format::{VisSpace, Method, UnsafetySpace, MutableSpace};\n use html::format::fmt_impl_for_trait_page;\n use html::item_type::ItemType;\n use html::markdown::{self, Markdown, MarkdownHtml, MarkdownSummaryLine, ErrorCodes, IdMap};\n-use html::{highlight, layout};\n+use html::{highlight, layout, static_files};\n \n use minifier;\n \n@@ -767,10 +767,10 @@ fn write_shared(\n     // overwrite them anyway to make sure that they're fresh and up-to-date.\n \n     write_minify(cx.dst.join(&format!(\"rustdoc{}.css\", cx.shared.resource_suffix)),\n-                 include_str!(\"static/rustdoc.css\"),\n+                 static_files::RUSTDOC_CSS,\n                  options.enable_minification)?;\n     write_minify(cx.dst.join(&format!(\"settings{}.css\", cx.shared.resource_suffix)),\n-                 include_str!(\"static/settings.css\"),\n+                 static_files::SETTINGS_CSS,\n                  options.enable_minification)?;\n \n     // To avoid \"light.css\" to be overwritten, we'll first run over the received themes and only\n@@ -790,15 +790,15 @@ fn write_shared(\n     }\n \n     write(cx.dst.join(&format!(\"brush{}.svg\", cx.shared.resource_suffix)),\n-          include_bytes!(\"static/brush.svg\"))?;\n+          static_files::BRUSH_SVG)?;\n     write(cx.dst.join(&format!(\"wheel{}.svg\", cx.shared.resource_suffix)),\n-          include_bytes!(\"static/wheel.svg\"))?;\n+          static_files::WHEEL_SVG)?;\n     write_minify(cx.dst.join(&format!(\"light{}.css\", cx.shared.resource_suffix)),\n-                 include_str!(\"static/themes/light.css\"),\n+                 static_files::themes::LIGHT,\n                  options.enable_minification)?;\n     themes.insert(\"light\".to_owned());\n     write_minify(cx.dst.join(&format!(\"dark{}.css\", cx.shared.resource_suffix)),\n-                 include_str!(\"static/themes/dark.css\"),\n+                 static_files::themes::DARK,\n                  options.enable_minification)?;\n     themes.insert(\"dark\".to_owned());\n \n@@ -854,16 +854,16 @@ themePicker.onblur = handleThemeButtonsBlur;\n     )?;\n \n     write_minify(cx.dst.join(&format!(\"main{}.js\", cx.shared.resource_suffix)),\n-                 include_str!(\"static/main.js\"),\n+                 static_files::MAIN_JS,\n                  options.enable_minification)?;\n     write_minify(cx.dst.join(&format!(\"settings{}.js\", cx.shared.resource_suffix)),\n-                 include_str!(\"static/settings.js\"),\n+                 static_files::SETTINGS_JS,\n                  options.enable_minification)?;\n \n     {\n         let mut data = format!(\"var resourcesSuffix = \\\"{}\\\";\\n\",\n                                cx.shared.resource_suffix);\n-        data.push_str(include_str!(\"static/storage.js\"));\n+        data.push_str(static_files::STORAGE_JS);\n         write_minify(cx.dst.join(&format!(\"storage{}.js\", cx.shared.resource_suffix)),\n                      &data,\n                      options.enable_minification)?;\n@@ -882,36 +882,36 @@ themePicker.onblur = handleThemeButtonsBlur;\n         }\n     }\n     write_minify(cx.dst.join(&format!(\"normalize{}.css\", cx.shared.resource_suffix)),\n-                 include_str!(\"static/normalize.css\"),\n+                 static_files::NORMALIZE_CSS,\n                  options.enable_minification)?;\n     write(cx.dst.join(\"FiraSans-Regular.woff\"),\n-          include_bytes!(\"static/FiraSans-Regular.woff\"))?;\n+          static_files::fira_sans::REGULAR)?;\n     write(cx.dst.join(\"FiraSans-Medium.woff\"),\n-          include_bytes!(\"static/FiraSans-Medium.woff\"))?;\n+          static_files::fira_sans::MEDIUM)?;\n     write(cx.dst.join(\"FiraSans-LICENSE.txt\"),\n-          include_bytes!(\"static/FiraSans-LICENSE.txt\"))?;\n+          static_files::fira_sans::LICENSE)?;\n     write(cx.dst.join(\"Heuristica-Italic.woff\"),\n-          include_bytes!(\"static/Heuristica-Italic.woff\"))?;\n+          static_files::heuristica::ITALIC)?;\n     write(cx.dst.join(\"Heuristica-LICENSE.txt\"),\n-          include_bytes!(\"static/Heuristica-LICENSE.txt\"))?;\n+          static_files::heuristica::LICENSE)?;\n     write(cx.dst.join(\"SourceSerifPro-Regular.woff\"),\n-          include_bytes!(\"static/SourceSerifPro-Regular.woff\"))?;\n+          static_files::source_serif_pro::REGULAR)?;\n     write(cx.dst.join(\"SourceSerifPro-Bold.woff\"),\n-          include_bytes!(\"static/SourceSerifPro-Bold.woff\"))?;\n+          static_files::source_serif_pro::BOLD)?;\n     write(cx.dst.join(\"SourceSerifPro-LICENSE.txt\"),\n-          include_bytes!(\"static/SourceSerifPro-LICENSE.txt\"))?;\n+          static_files::source_serif_pro::LICENSE)?;\n     write(cx.dst.join(\"SourceCodePro-Regular.woff\"),\n-          include_bytes!(\"static/SourceCodePro-Regular.woff\"))?;\n+          static_files::source_code_pro::REGULAR)?;\n     write(cx.dst.join(\"SourceCodePro-Semibold.woff\"),\n-          include_bytes!(\"static/SourceCodePro-Semibold.woff\"))?;\n+          static_files::source_code_pro::SEMIBOLD)?;\n     write(cx.dst.join(\"SourceCodePro-LICENSE.txt\"),\n-          include_bytes!(\"static/SourceCodePro-LICENSE.txt\"))?;\n+          static_files::source_code_pro::LICENSE)?;\n     write(cx.dst.join(\"LICENSE-MIT.txt\"),\n-          include_bytes!(\"static/LICENSE-MIT.txt\"))?;\n+          static_files::LICENSE_MIT)?;\n     write(cx.dst.join(\"LICENSE-APACHE.txt\"),\n-          include_bytes!(\"static/LICENSE-APACHE.txt\"))?;\n+          static_files::LICENSE_APACHE)?;\n     write(cx.dst.join(\"COPYRIGHT.txt\"),\n-          include_bytes!(\"static/COPYRIGHT.txt\"))?;\n+          static_files::COPYRIGHT)?;\n \n     fn collect(path: &Path, krate: &str, key: &str) -> io::Result<(Vec<String>, Vec<String>)> {\n         let mut ret = Vec::new();"}, {"sha": "3baa082bd0e6936203c966e2c67994a7548723f0", "filename": "src/librustdoc/html/static_files.rs", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/rust-lang/rust/blob/2f8ce732e17b2dc4f5a3f1568ada9430a1a899db/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f8ce732e17b2dc4f5a3f1568ada9430a1a899db/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs?ref=2f8ce732e17b2dc4f5a3f1568ada9430a1a899db", "patch": "@@ -0,0 +1,111 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! Static files bundled with documentation output.\n+//!\n+//! All the static files are included here for centralized access in case anything other than the\n+//! HTML rendering code (say, the theme checker) needs to access one of these files.\n+//!\n+//! Note about types: CSS and JavaScript files are included as `&'static str` to allow for the\n+//! minifier to run on them. All other files are included as `&'static [u8]` so they can be\n+//! directly written to a `Write` handle.\n+\n+/// The file contents of the main `rustdoc.css` file, responsible for the core layout of the page.\n+pub static RUSTDOC_CSS: &'static str = include_str!(\"static/rustdoc.css\");\n+\n+/// The file contents of `settings.css`, responsible for the items on the settings page.\n+pub static SETTINGS_CSS: &'static str = include_str!(\"static/settings.css\");\n+\n+/// The file contents of `normalize.css`, included to even out standard elements between browser\n+/// implementations.\n+pub static NORMALIZE_CSS: &'static str = include_str!(\"static/normalize.css\");\n+\n+/// The file contents of `main.js`, which contains the core JavaScript used on documentation pages,\n+/// including search behavior and docblock folding, among others.\n+pub static MAIN_JS: &'static str = include_str!(\"static/main.js\");\n+\n+/// The file contents of `settings.js`, which contains the JavaScript used to handle the settings\n+/// page.\n+pub static SETTINGS_JS: &'static str = include_str!(\"static/settings.js\");\n+\n+/// The file contents of `storage.js`, which contains functionality related to browser Local\n+/// Storage, used to store documentation settings.\n+pub static STORAGE_JS: &'static str = include_str!(\"static/storage.js\");\n+\n+/// The file contents of `brush.svg`, the icon used for the theme-switch button.\n+pub static BRUSH_SVG: &'static [u8] = include_bytes!(\"static/brush.svg\");\n+\n+/// The file contents of `wheel.svg`, the icon used for the settings button.\n+pub static WHEEL_SVG: &'static [u8] = include_bytes!(\"static/wheel.svg\");\n+\n+/// The contents of `COPYRIGHT.txt`, the license listing for files distributed with documentation\n+/// output.\n+pub static COPYRIGHT: &'static [u8] = include_bytes!(\"static/COPYRIGHT.txt\");\n+\n+/// The contents of `LICENSE-APACHE.txt`, the text of the Apache License, version 2.0.\n+pub static LICENSE_APACHE: &'static [u8] = include_bytes!(\"static/LICENSE-APACHE.txt\");\n+\n+/// The contents of `LICENSE-MIT.txt`, the text of the MIT License.\n+pub static LICENSE_MIT: &'static [u8] = include_bytes!(\"static/LICENSE-MIT.txt\");\n+\n+/// The built-in themes given to every documentation site.\n+pub mod themes {\n+    /// The \"light\" theme, selected by default when no setting is available. Used as the basis for\n+    /// the `--theme-checker` functionality.\n+    pub static LIGHT: &'static str = include_str!(\"static/themes/light.css\");\n+\n+    /// The \"dark\" theme.\n+    pub static DARK: &'static str = include_str!(\"static/themes/dark.css\");\n+}\n+\n+/// Files related to the Fira Sans font.\n+pub mod fira_sans {\n+    /// The file `FiraSans-Regular.woff`, the Regular variant of the Fira Sans font.\n+    pub static REGULAR: &'static [u8] = include_bytes!(\"static/FiraSans-Regular.woff\");\n+\n+    /// The file `FiraSans-Medium.woff`, the Medium variant of the Fira Sans font.\n+    pub static MEDIUM: &'static [u8] = include_bytes!(\"static/FiraSans-Medium.woff\");\n+\n+    /// The file `FiraSans-LICENSE.txt`, the license text for the Fira Sans font.\n+    pub static LICENSE: &'static [u8] = include_bytes!(\"static/FiraSans-LICENSE.txt\");\n+}\n+\n+/// Files related to the Heuristica font.\n+pub mod heuristica {\n+    /// The file `Heuristica-Italic.woff`, the Italic variant of the Heuristica font.\n+    pub static ITALIC: &'static [u8] = include_bytes!(\"static/Heuristica-Italic.woff\");\n+\n+    /// The file `Heuristica-LICENSE.txt`, the license text for the Heuristica font.\n+    pub static LICENSE: &'static [u8] = include_bytes!(\"static/Heuristica-LICENSE.txt\");\n+}\n+\n+/// Files related to the Source Serif Pro font.\n+pub mod source_serif_pro {\n+    /// The file `SourceSerifPro-Regular.woff`, the Regular variant of the Source Serif Pro font.\n+    pub static REGULAR: &'static [u8] = include_bytes!(\"static/SourceSerifPro-Regular.woff\");\n+\n+    /// The file `SourceSerifPro-Bold.woff`, the Bold variant of the Source Serif Pro font.\n+    pub static BOLD: &'static [u8] = include_bytes!(\"static/SourceSerifPro-Bold.woff\");\n+\n+    /// The file `SourceSerifPro-LICENSE.txt`, the license text for the Source Serif Pro font.\n+    pub static LICENSE: &'static [u8] = include_bytes!(\"static/SourceSerifPro-LICENSE.txt\");\n+}\n+\n+/// Files related to the Source Code Pro font.\n+pub mod source_code_pro {\n+    /// The file `SourceCodePro-Regular.woff`, the Regular variant of the Source Code Pro font.\n+    pub static REGULAR: &'static [u8] = include_bytes!(\"static/SourceCodePro-Regular.woff\");\n+\n+    /// The file `SourceCodePro-Semibold.woff`, the Semibold variant of the Source Code Pro font.\n+    pub static SEMIBOLD: &'static [u8] = include_bytes!(\"static/SourceCodePro-Semibold.woff\");\n+\n+    /// The file `SourceCodePro-LICENSE.txt`, the license text of the Source Code Pro font.\n+    pub static LICENSE: &'static [u8] = include_bytes!(\"static/SourceCodePro-LICENSE.txt\");\n+}"}, {"sha": "4b043b26d8650d6a6149062d13cd202979e48000", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2f8ce732e17b2dc4f5a3f1568ada9430a1a899db/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f8ce732e17b2dc4f5a3f1568ada9430a1a899db/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=2f8ce732e17b2dc4f5a3f1568ada9430a1a899db", "patch": "@@ -78,6 +78,7 @@ pub mod html {\n     crate mod layout;\n     pub mod markdown;\n     crate mod render;\n+    crate mod static_files;\n     crate mod toc;\n }\n mod markdown;"}]}