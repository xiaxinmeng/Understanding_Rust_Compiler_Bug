{"sha": "89822e1cbca928038c646c29336240e9ea7b492a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5ODIyZTFjYmNhOTI4MDM4YzY0NmMyOTMzNjI0MGU5ZWE3YjQ5MmE=", "commit": {"author": {"name": "Thiago Carvalho", "email": "thiago.carvalho@westwing.de", "date": "2015-02-15T13:29:40Z"}, "committer": {"name": "Thiago Carvalho", "email": "thiago.carvalho@westwing.de", "date": "2015-02-15T13:29:40Z"}, "message": "Book - short explanation of arity", "tree": {"sha": "9ea2f9e079ab290cd3cd914762c60625e78315b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ea2f9e079ab290cd3cd914762c60625e78315b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89822e1cbca928038c646c29336240e9ea7b492a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89822e1cbca928038c646c29336240e9ea7b492a", "html_url": "https://github.com/rust-lang/rust/commit/89822e1cbca928038c646c29336240e9ea7b492a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89822e1cbca928038c646c29336240e9ea7b492a/comments", "author": null, "committer": null, "parents": [{"sha": "29ff00cc97e67ed6aec16aa6c30e152d6065e952", "url": "https://api.github.com/repos/rust-lang/rust/commits/29ff00cc97e67ed6aec16aa6c30e152d6065e952", "html_url": "https://github.com/rust-lang/rust/commit/29ff00cc97e67ed6aec16aa6c30e152d6065e952"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "09ce1c383a0f03e267dc38fc70f2178369c50ab0", "filename": "src/doc/trpl/compound-data-types.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/89822e1cbca928038c646c29336240e9ea7b492a/src%2Fdoc%2Ftrpl%2Fcompound-data-types.md", "raw_url": "https://github.com/rust-lang/rust/raw/89822e1cbca928038c646c29336240e9ea7b492a/src%2Fdoc%2Ftrpl%2Fcompound-data-types.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fcompound-data-types.md?ref=89822e1cbca928038c646c29336240e9ea7b492a", "patch": "@@ -47,7 +47,8 @@ This pattern is very powerful, and we'll see it repeated more later.\n \n There are also a few things you can do with a tuple as a whole, without\n destructuring. You can assign one tuple into another, if they have the same\n-arity and contained types.\n+contained types and arity. Tuples have the same arity when they have the same\n+length.\n \n ```rust\n let mut x = (1, 2); // x: (i32, i32)"}]}