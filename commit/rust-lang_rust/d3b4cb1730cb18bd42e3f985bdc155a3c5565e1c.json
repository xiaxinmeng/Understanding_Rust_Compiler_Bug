{"sha": "d3b4cb1730cb18bd42e3f985bdc155a3c5565e1c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzYjRjYjE3MzBjYjE4YmQ0MmUzZjk4NWJkYzE1NWEzYzU1NjVlMWM=", "commit": {"author": {"name": "Lucas Morales", "email": "lucas@lucasem.com", "date": "2018-06-26T01:26:31Z"}, "committer": {"name": "Lucas Morales", "email": "lucas@lucasem.com", "date": "2018-06-26T04:58:16Z"}, "message": "rustdoc codeblock hash escape", "tree": {"sha": "b06d38eb72eb3791bc59f1a2cf3cc7370ae17ac9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b06d38eb72eb3791bc59f1a2cf3cc7370ae17ac9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3b4cb1730cb18bd42e3f985bdc155a3c5565e1c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExgMSdpt0+BFsq5IwqzHpWfdVnhkFAlsxx+gACgkQqzHpWfdV\nnhlt1RAApmm+53HD6OTE5XS3GF4UkUC3Fo+nN9Vg8d4o6/70QYrwToIxxnURQbMl\nyCCLYrlqqge1AId8qbGC7ha4FM4wOyDarlxOOuYrsEAmtl/kSF/phgcnPSxm/Pvs\nKwUdqYB4X3e9C3eu7E62rtbZdkPFtF6JSymIOuPVByTDwAn6vyh3kNOozcF5Y91o\n9Mb+mspQzkDTI5PhdSgwOl/WiACS6opE5C4kLZrboCpslacqsN+MCzFUzoyYv07u\nLZVBqp2VdYZ63kqN2ujqADz48lg4MRR+DdQslA1WMfxjWBLj09LY3zkqBkuKb7eW\nL3gR83WgyIlwUPLTWR9ACgIfXLbRLt0OVWR6ld77K3dVLIniW8YOVF7gLB/HXvjg\nuTBYtEa5qkMjKfKnRChH1GNbByA74dE9RNzA0rVwN/TqMTe69XJHdSnrtVHm39uC\n+DYYqKta6g0n3UvTuKxZ9jc4pokE5VILIYHZngeJ5aWHW/4WW5waOsBbCU2zSfao\nkQtew+w4LePBvJQ3WFW0ztySXw5vIAYJ1QVj33bpUE+Ta4bv0ZwYjbpZOSarTzhW\nak8LVhRVzhX4MoWWJ9suVDXf/9lqCIbL05GnSJXwj6ONrWTSQixO/VQky1R3vkVR\nqxOQIAzybrfxPPHcD2JSpmqbsXHweHXfHP1TTza4gKHXMsvZ4IM=\n=tGTW\n-----END PGP SIGNATURE-----", "payload": "tree b06d38eb72eb3791bc59f1a2cf3cc7370ae17ac9\nparent fdd9cdc8792d8fa4a64956c7d3263fa5ce18e335\nauthor Lucas Morales <lucas@lucasem.com> 1529976391 -0400\ncommitter Lucas Morales <lucas@lucasem.com> 1529989096 -0400\n\nrustdoc codeblock hash escape\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3b4cb1730cb18bd42e3f985bdc155a3c5565e1c", "html_url": "https://github.com/rust-lang/rust/commit/d3b4cb1730cb18bd42e3f985bdc155a3c5565e1c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3b4cb1730cb18bd42e3f985bdc155a3c5565e1c/comments", "author": {"login": "lorepozo", "id": 859306, "node_id": "MDQ6VXNlcjg1OTMwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/859306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lorepozo", "html_url": "https://github.com/lorepozo", "followers_url": "https://api.github.com/users/lorepozo/followers", "following_url": "https://api.github.com/users/lorepozo/following{/other_user}", "gists_url": "https://api.github.com/users/lorepozo/gists{/gist_id}", "starred_url": "https://api.github.com/users/lorepozo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lorepozo/subscriptions", "organizations_url": "https://api.github.com/users/lorepozo/orgs", "repos_url": "https://api.github.com/users/lorepozo/repos", "events_url": "https://api.github.com/users/lorepozo/events{/privacy}", "received_events_url": "https://api.github.com/users/lorepozo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lorepozo", "id": 859306, "node_id": "MDQ6VXNlcjg1OTMwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/859306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lorepozo", "html_url": "https://github.com/lorepozo", "followers_url": "https://api.github.com/users/lorepozo/followers", "following_url": "https://api.github.com/users/lorepozo/following{/other_user}", "gists_url": "https://api.github.com/users/lorepozo/gists{/gist_id}", "starred_url": "https://api.github.com/users/lorepozo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lorepozo/subscriptions", "organizations_url": "https://api.github.com/users/lorepozo/orgs", "repos_url": "https://api.github.com/users/lorepozo/repos", "events_url": "https://api.github.com/users/lorepozo/events{/privacy}", "received_events_url": "https://api.github.com/users/lorepozo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdd9cdc8792d8fa4a64956c7d3263fa5ce18e335", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdd9cdc8792d8fa4a64956c7d3263fa5ce18e335", "html_url": "https://github.com/rust-lang/rust/commit/fdd9cdc8792d8fa4a64956c7d3263fa5ce18e335"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "c77a720b16ba503657cfd6e07eb8d5a3841fc0fc", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d3b4cb1730cb18bd42e3f985bdc155a3c5565e1c/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3b4cb1730cb18bd42e3f985bdc155a3c5565e1c/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=d3b4cb1730cb18bd42e3f985bdc155a3c5565e1c", "patch": "@@ -64,21 +64,21 @@ pub struct MarkdownSummaryLine<'a>(pub &'a str, pub &'a [(String, String)]);\n /// All lines are used in documentation tests.\n enum Line<'a> {\n     Hidden(&'a str),\n-    Shown(&'a str),\n+    Shown(Cow<'a, str>),\n }\n \n impl<'a> Line<'a> {\n-    fn for_html(self) -> Option<&'a str> {\n+    fn for_html(self) -> Option<Cow<'a, str>> {\n         match self {\n             Line::Shown(l) => Some(l),\n             Line::Hidden(_) => None,\n         }\n     }\n \n-    fn for_code(self) -> &'a str {\n+    fn for_code(self) -> Cow<'a, str> {\n         match self {\n-            Line::Shown(l) |\n-            Line::Hidden(l) => l,\n+            Line::Shown(l) => l,\n+            Line::Hidden(l) => Cow::Borrowed(l),\n         }\n     }\n }\n@@ -91,15 +91,15 @@ impl<'a> Line<'a> {\n fn map_line(s: &str) -> Line {\n     let trimmed = s.trim();\n     if trimmed.starts_with(\"##\") {\n-        Line::Shown(&trimmed[1..])\n+        Line::Shown(Cow::Owned(s.replacen(\"##\", \"#\", 1)))\n     } else if trimmed.starts_with(\"# \") {\n         // # text\n         Line::Hidden(&trimmed[2..])\n     } else if trimmed == \"#\" {\n         // We cannot handle '#text' because it could be #[attr].\n         Line::Hidden(\"\")\n     } else {\n-        Line::Shown(s)\n+        Line::Shown(Cow::Borrowed(s))\n     }\n }\n \n@@ -168,7 +168,7 @@ impl<'a, I: Iterator<Item = Event<'a>>> Iterator for CodeBlocks<'a, I> {\n             }\n         }\n         let lines = origtext.lines().filter_map(|l| map_line(l).for_html());\n-        let text = lines.collect::<Vec<&str>>().join(\"\\n\");\n+        let text = lines.collect::<Vec<Cow<str>>>().join(\"\\n\");\n         PLAYGROUND.with(|play| {\n             // insert newline to clearly separate it from the\n             // previous block so we can shorten the html output\n@@ -179,7 +179,7 @@ impl<'a, I: Iterator<Item = Event<'a>>> Iterator for CodeBlocks<'a, I> {\n                 }\n                 let test = origtext.lines()\n                     .map(|l| map_line(l).for_code())\n-                    .collect::<Vec<&str>>().join(\"\\n\");\n+                    .collect::<Vec<Cow<str>>>().join(\"\\n\");\n                 let krate = krate.as_ref().map(|s| &**s);\n                 let (test, _) = test::make_test(&test, krate, false,\n                                            &Default::default());\n@@ -477,7 +477,7 @@ pub fn find_testable_code(doc: &str, tests: &mut ::test::Collector, position: Sp\n                 }\n                 if let Some(offset) = offset {\n                     let lines = test_s.lines().map(|l| map_line(l).for_code());\n-                    let text = lines.collect::<Vec<&str>>().join(\"\\n\");\n+                    let text = lines.collect::<Vec<Cow<str>>>().join(\"\\n\");\n                     nb_lines += doc[prev_offset..offset].lines().count();\n                     let line = tests.get_line() + (nb_lines - 1);\n                     let filename = tests.get_filename();"}]}