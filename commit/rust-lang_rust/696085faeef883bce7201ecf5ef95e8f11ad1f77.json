{"sha": "696085faeef883bce7201ecf5ef95e8f11ad1f77", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5NjA4NWZhZWVmODgzYmNlNzIwMWVjZjVlZjk1ZThmMTFhZDFmNzc=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2017-06-17T19:54:09Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2017-06-18T21:26:39Z"}, "message": "Sort entries of SUMMARY.md alphabetically", "tree": {"sha": "63eea96b4a029188e29f28a57fa3bd818cdfaafb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63eea96b4a029188e29f28a57fa3bd818cdfaafb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/696085faeef883bce7201ecf5ef95e8f11ad1f77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/696085faeef883bce7201ecf5ef95e8f11ad1f77", "html_url": "https://github.com/rust-lang/rust/commit/696085faeef883bce7201ecf5ef95e8f11ad1f77", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/696085faeef883bce7201ecf5ef95e8f11ad1f77/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f6fb8e88f5983d882deb85c7820021a014d11b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f6fb8e88f5983d882deb85c7820021a014d11b9", "html_url": "https://github.com/rust-lang/rust/commit/9f6fb8e88f5983d882deb85c7820021a014d11b9"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "ff032b14ad1d5449a64596f67b60b9117dc00f26", "filename": "src/tools/tidy/src/unstable_book.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/696085faeef883bce7201ecf5ef95e8f11ad1f77/src%2Ftools%2Ftidy%2Fsrc%2Funstable_book.rs", "raw_url": "https://github.com/rust-lang/rust/raw/696085faeef883bce7201ecf5ef95e8f11ad1f77/src%2Ftools%2Ftidy%2Fsrc%2Funstable_book.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Funstable_book.rs?ref=696085faeef883bce7201ecf5ef95e8f11ad1f77", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::collections::HashSet;\n+use std::collections::BTreeSet;\n use std::fs;\n use std::path;\n use features::{collect_lang_features, collect_lib_features, Features, Status};\n@@ -45,15 +45,15 @@ fn dir_entry_is_file(dir_entry: &fs::DirEntry) -> bool {\n }\n \n /// Retrieve names of all unstable features\n-pub fn collect_unstable_feature_names(features: &Features) -> HashSet<String> {\n+pub fn collect_unstable_feature_names(features: &Features) -> BTreeSet<String> {\n     features\n         .iter()\n         .filter(|&(_, ref f)| f.level == Status::Unstable)\n         .map(|(name, _)| name.to_owned())\n         .collect()\n }\n \n-pub fn collect_unstable_book_section_file_names(dir: &path::Path) -> HashSet<String> {\n+pub fn collect_unstable_book_section_file_names(dir: &path::Path) -> BTreeSet<String> {\n     fs::read_dir(dir)\n         .expect(\"could not read directory\")\n         .into_iter()\n@@ -69,7 +69,7 @@ pub fn collect_unstable_book_section_file_names(dir: &path::Path) -> HashSet<Str\n /// * hyphens replaced by underscores\n /// * the markdown suffix ('.md') removed\n fn collect_unstable_book_lang_features_section_file_names(base_src_path: &path::Path)\n-                                                          -> HashSet<String> {\n+                                                          -> BTreeSet<String> {\n     collect_unstable_book_section_file_names(&unstable_book_lang_features_path(base_src_path))\n }\n \n@@ -78,7 +78,7 @@ fn collect_unstable_book_lang_features_section_file_names(base_src_path: &path::\n /// * hyphens replaced by underscores\n /// * the markdown suffix ('.md') removed\n fn collect_unstable_book_lib_features_section_file_names(base_src_path: &path::Path)\n-                                                         -> HashSet<String> {\n+                                                         -> BTreeSet<String> {\n     collect_unstable_book_section_file_names(&unstable_book_lib_features_path(base_src_path))\n }\n "}, {"sha": "5c2bd1e3e087d852e058a6408815aceaa08b9b67", "filename": "src/tools/unstable-book-gen/src/main.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/696085faeef883bce7201ecf5ef95e8f11ad1f77/src%2Ftools%2Funstable-book-gen%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/696085faeef883bce7201ecf5ef95e8f11ad1f77/src%2Ftools%2Funstable-book-gen%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Funstable-book-gen%2Fsrc%2Fmain.rs?ref=696085faeef883bce7201ecf5ef95e8f11ad1f77", "patch": "@@ -17,7 +17,7 @@ extern crate tidy;\n use tidy::features::{Feature, Features, collect_lib_features, collect_lang_features};\n use tidy::unstable_book::{collect_unstable_feature_names, collect_unstable_book_section_file_names,\n                           PATH_STR, LANG_FEATURES_DIR, LIB_FEATURES_DIR};\n-use std::collections::HashSet;\n+use std::collections::BTreeSet;\n use std::io::Write;\n use std::fs::{self, File};\n use std::env;\n@@ -48,9 +48,9 @@ fn generate_stub_no_issue(path: &Path, name: &str) {\n                                    name = name)));\n }\n \n-fn hset_to_summary_str(hset: HashSet<String>, dir: &str\n+fn set_to_summary_str(set: &BTreeSet<String>, dir: &str\n ) -> String {\n-    hset\n+    set\n         .iter()\n         .map(|ref n| format!(\"    - [{}]({}/{}.md)\",\n                                       n,\n@@ -63,16 +63,16 @@ fn generate_summary(path: &Path, lang_features: &Features, lib_features: &Featur\n     let compiler_flags = collect_unstable_book_section_file_names(\n         &path.join(\"compiler-flags\"));\n \n-    let compiler_flags_str = hset_to_summary_str(compiler_flags,\n-                                                 \"compiler-flags\");\n+    let compiler_flags_str = set_to_summary_str(&compiler_flags,\n+                                                \"compiler-flags\");\n \n     let unstable_lang_features = collect_unstable_feature_names(&lang_features);\n     let unstable_lib_features = collect_unstable_feature_names(&lib_features);\n \n-    let lang_features_str = hset_to_summary_str(unstable_lang_features,\n-                                                LANG_FEATURES_DIR);\n-    let lib_features_str = hset_to_summary_str(unstable_lib_features,\n-                                               LIB_FEATURES_DIR);\n+    let lang_features_str = set_to_summary_str(&unstable_lang_features,\n+                                               LANG_FEATURES_DIR);\n+    let lib_features_str = set_to_summary_str(&unstable_lib_features,\n+                                              LIB_FEATURES_DIR);\n \n     let mut file = t!(File::create(&path.join(\"SUMMARY.md\")));\n     t!(file.write_fmt(format_args!(include_str!(\"SUMMARY.md\"),"}]}