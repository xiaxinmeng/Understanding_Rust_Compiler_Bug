{"sha": "35d77fc1764d2e3e509ef5eeb4e00a6442321dc7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1ZDc3ZmMxNzY0ZDJlM2U1MDllZjVlZWI0ZTAwYTY0NDIzMjFkYzc=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2018-12-29T11:56:14Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2018-12-31T02:36:46Z"}, "message": "unchecked_{shl,shr}: extend const tests.", "tree": {"sha": "9dd8fd350785f184e7dfd8658b086d5e57f263b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9dd8fd350785f184e7dfd8658b086d5e57f263b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35d77fc1764d2e3e509ef5eeb4e00a6442321dc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35d77fc1764d2e3e509ef5eeb4e00a6442321dc7", "html_url": "https://github.com/rust-lang/rust/commit/35d77fc1764d2e3e509ef5eeb4e00a6442321dc7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35d77fc1764d2e3e509ef5eeb4e00a6442321dc7/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d85ec4a9fccbdfefd1e246bd0f791716dac6aaca", "url": "https://api.github.com/repos/rust-lang/rust/commits/d85ec4a9fccbdfefd1e246bd0f791716dac6aaca", "html_url": "https://github.com/rust-lang/rust/commit/d85ec4a9fccbdfefd1e246bd0f791716dac6aaca"}], "stats": {"total": 443, "additions": 428, "deletions": 15}, "files": [{"sha": "8ee029b6cc390295b00c512108a5fa1a4b8da7b1", "filename": "src/test/ui/consts/const-int-unchecked.rs", "status": "modified", "additions": 113, "deletions": 4, "changes": 117, "blob_url": "https://github.com/rust-lang/rust/blob/35d77fc1764d2e3e509ef5eeb4e00a6442321dc7/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35d77fc1764d2e3e509ef5eeb4e00a6442321dc7/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.rs?ref=35d77fc1764d2e3e509ef5eeb4e00a6442321dc7", "patch": "@@ -2,10 +2,119 @@\n \n use std::intrinsics;\n \n-const SHR: u8 = unsafe { intrinsics::unchecked_shr(5_u8, 8) };\n+// The documentation of `unchecked_shl` states that it:\n+//\n+// Performs an unchecked left shift, resulting in undefined behavior when\n+// y < 0 or y >= N, where N is the width of T in bits.\n+//\n+// So we check this for a few `y`.\n+\n+// unsigned types:\n+\n+const SHL_U8: u8 = unsafe { intrinsics::unchecked_shl(5_u8, 8) };\n+//~^ ERROR any use of this value will cause an error\n+const SHL_U16: u16 = unsafe { intrinsics::unchecked_shl(5_u16, 16) };\n+//~^ ERROR any use of this value will cause an error\n+const SHL_U32: u32 = unsafe { intrinsics::unchecked_shl(5_u32, 32) };\n+//~^ ERROR any use of this value will cause an error\n+const SHL_U64: u64 = unsafe { intrinsics::unchecked_shl(5_u64, 64) };\n+//~^ ERROR any use of this value will cause an error\n+const SHL_U128: u128 = unsafe { intrinsics::unchecked_shl(5_u128, 128) };\n+//~^ ERROR any use of this value will cause an error\n+\n+// signed types:\n+\n+const SHL_I8: i8 = unsafe { intrinsics::unchecked_shl(5_i8, 8) };\n+//~^ ERROR any use of this value will cause an error\n+const SHL_I16: i16 = unsafe { intrinsics::unchecked_shl(5_16, 16) };\n+//~^ ERROR any use of this value will cause an error\n+const SHL_I32: i32 = unsafe { intrinsics::unchecked_shl(5_i32, 32) };\n+//~^ ERROR any use of this value will cause an error\n+const SHL_I64: i64 = unsafe { intrinsics::unchecked_shl(5_i64, 64) };\n+//~^ ERROR any use of this value will cause an error\n+const SHL_I128: i128 = unsafe { intrinsics::unchecked_shl(5_i128, 128) };\n+//~^ ERROR any use of this value will cause an error\n+\n+// and make sure we capture y < 0:\n+\n+const SHL_I8_NEG: i8 = unsafe { intrinsics::unchecked_shl(5_i8, -1) };\n+//~^ ERROR any use of this value will cause an error\n+const SHL_I16_NEG: i16 = unsafe { intrinsics::unchecked_shl(5_16, -1) };\n+//~^ ERROR any use of this value will cause an error\n+const SHL_I32_NEG: i32 = unsafe { intrinsics::unchecked_shl(5_i32, -1) };\n+//~^ ERROR any use of this value will cause an error\n+const SHL_I64_NEG: i64 = unsafe { intrinsics::unchecked_shl(5_i64, -1) };\n+//~^ ERROR any use of this value will cause an error\n+const SHL_I128_NEG: i128 = unsafe { intrinsics::unchecked_shl(5_i128, -1) };\n+//~^ ERROR any use of this value will cause an error\n+\n+// and that there's no special relation to the value -1 by picking some\n+// negative values at random:\n+\n+const SHL_I8_NEG_RANDOM: i8 = unsafe { intrinsics::unchecked_shl(5_i8, -6) };\n+//~^ ERROR any use of this value will cause an error\n+const SHL_I16_NEG_RANDOM: i16 = unsafe { intrinsics::unchecked_shl(5_16, -13) };\n+//~^ ERROR any use of this value will cause an error\n+const SHL_I32_NEG_RANDOM: i32 = unsafe { intrinsics::unchecked_shl(5_i32, -25) };\n+//~^ ERROR any use of this value will cause an error\n+const SHL_I64_NEG_RANDOM: i64 = unsafe { intrinsics::unchecked_shl(5_i64, -30) };\n+//~^ ERROR any use of this value will cause an error\n+const SHL_I128_NEG_RANDOM: i128 = unsafe { intrinsics::unchecked_shl(5_i128, -93) };\n+//~^ ERROR any use of this value will cause an error\n+\n+// Repeat it all over for `unchecked_shr`\n+\n+// unsigned types:\n+\n+const SHR_U8: u8 = unsafe { intrinsics::unchecked_shr(5_u8, 8) };\n+//~^ ERROR any use of this value will cause an error\n+const SHR_U16: u16 = unsafe { intrinsics::unchecked_shr(5_u16, 16) };\n+//~^ ERROR any use of this value will cause an error\n+const SHR_U32: u32 = unsafe { intrinsics::unchecked_shr(5_u32, 32) };\n+//~^ ERROR any use of this value will cause an error\n+const SHR_U64: u64 = unsafe { intrinsics::unchecked_shr(5_u64, 64) };\n+//~^ ERROR any use of this value will cause an error\n+const SHR_U128: u128 = unsafe { intrinsics::unchecked_shr(5_u128, 128) };\n+//~^ ERROR any use of this value will cause an error\n+\n+// signed types:\n+\n+const SHR_I8: i8 = unsafe { intrinsics::unchecked_shr(5_i8, 8) };\n+//~^ ERROR any use of this value will cause an error\n+const SHR_I16: i16 = unsafe { intrinsics::unchecked_shr(5_16, 16) };\n+//~^ ERROR any use of this value will cause an error\n+const SHR_I32: i32 = unsafe { intrinsics::unchecked_shr(5_i32, 32) };\n+//~^ ERROR any use of this value will cause an error\n+const SHR_I64: i64 = unsafe { intrinsics::unchecked_shr(5_i64, 64) };\n+//~^ ERROR any use of this value will cause an error\n+const SHR_I128: i128 = unsafe { intrinsics::unchecked_shr(5_i128, 128) };\n+//~^ ERROR any use of this value will cause an error\n+\n+// and make sure we capture y < 0:\n+\n+const SHR_I8_NEG: i8 = unsafe { intrinsics::unchecked_shr(5_i8, -1) };\n+//~^ ERROR any use of this value will cause an error\n+const SHR_I16_NEG: i16 = unsafe { intrinsics::unchecked_shr(5_16, -1) };\n+//~^ ERROR any use of this value will cause an error\n+const SHR_I32_NEG: i32 = unsafe { intrinsics::unchecked_shr(5_i32, -1) };\n+//~^ ERROR any use of this value will cause an error\n+const SHR_I64_NEG: i64 = unsafe { intrinsics::unchecked_shr(5_i64, -1) };\n+//~^ ERROR any use of this value will cause an error\n+const SHR_I128_NEG: i128 = unsafe { intrinsics::unchecked_shr(5_i128, -1) };\n+//~^ ERROR any use of this value will cause an error\n+\n+// and that there's no special relation to the value -1 by picking some\n+// negative values at random:\n+\n+const SHR_I8_NEG_RANDOM: i8 = unsafe { intrinsics::unchecked_shr(5_i8, -6) };\n+//~^ ERROR any use of this value will cause an error\n+const SHR_I16_NEG_RANDOM: i16 = unsafe { intrinsics::unchecked_shr(5_16, -13) };\n+//~^ ERROR any use of this value will cause an error\n+const SHR_I32_NEG_RANDOM: i32 = unsafe { intrinsics::unchecked_shr(5_i32, -25) };\n+//~^ ERROR any use of this value will cause an error\n+const SHR_I64_NEG_RANDOM: i64 = unsafe { intrinsics::unchecked_shr(5_i64, -30) };\n //~^ ERROR any use of this value will cause an error\n-const SHL: u8 = unsafe { intrinsics::unchecked_shl(5_u8, 8) };\n+const SHR_I128_NEG_RANDOM: i128 = unsafe { intrinsics::unchecked_shr(5_i128, -93) };\n //~^ ERROR any use of this value will cause an error\n \n-fn main() {\n-}\n+fn main() {}"}, {"sha": "4382d9174b757bbf7bc3e883f3b453ae00168c9a", "filename": "src/test/ui/consts/const-int-unchecked.stderr", "status": "modified", "additions": 315, "deletions": 11, "changes": 326, "blob_url": "https://github.com/rust-lang/rust/blob/35d77fc1764d2e3e509ef5eeb4e00a6442321dc7/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/35d77fc1764d2e3e509ef5eeb4e00a6442321dc7/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.stderr?ref=35d77fc1764d2e3e509ef5eeb4e00a6442321dc7", "patch": "@@ -1,20 +1,324 @@\n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:5:1\n+  --> $DIR/const-int-unchecked.rs:14:1\n    |\n-LL | const SHR: u8 = unsafe { intrinsics::unchecked_shr(5_u8, 8) };\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^----------------------------------^^^\n-   |                          |\n-   |                          Overflowing shift by 8 in unchecked_shr\n+LL | const SHL_U8: u8 = unsafe { intrinsics::unchecked_shl(5_u8, 8) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^----------------------------------^^^\n+   |                             |\n+   |                             Overflowing shift by 8 in unchecked_shl\n    |\n    = note: #[deny(const_err)] on by default\n \n error: any use of this value will cause an error\n-  --> $DIR/const-int-unchecked.rs:7:1\n+  --> $DIR/const-int-unchecked.rs:16:1\n    |\n-LL | const SHL: u8 = unsafe { intrinsics::unchecked_shl(5_u8, 8) };\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^----------------------------------^^^\n-   |                          |\n-   |                          Overflowing shift by 8 in unchecked_shl\n+LL | const SHL_U16: u16 = unsafe { intrinsics::unchecked_shl(5_u16, 16) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^------------------------------------^^^\n+   |                               |\n+   |                               Overflowing shift by 16 in unchecked_shl\n \n-error: aborting due to 2 previous errors\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:18:1\n+   |\n+LL | const SHL_U32: u32 = unsafe { intrinsics::unchecked_shl(5_u32, 32) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^------------------------------------^^^\n+   |                               |\n+   |                               Overflowing shift by 32 in unchecked_shl\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:20:1\n+   |\n+LL | const SHL_U64: u64 = unsafe { intrinsics::unchecked_shl(5_u64, 64) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^------------------------------------^^^\n+   |                               |\n+   |                               Overflowing shift by 64 in unchecked_shl\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:22:1\n+   |\n+LL | const SHL_U128: u128 = unsafe { intrinsics::unchecked_shl(5_u128, 128) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^--------------------------------------^^^\n+   |                                 |\n+   |                                 Overflowing shift by 128 in unchecked_shl\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:27:1\n+   |\n+LL | const SHL_I8: i8 = unsafe { intrinsics::unchecked_shl(5_i8, 8) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^----------------------------------^^^\n+   |                             |\n+   |                             Overflowing shift by 8 in unchecked_shl\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:29:1\n+   |\n+LL | const SHL_I16: i16 = unsafe { intrinsics::unchecked_shl(5_16, 16) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-----------------------------------^^^\n+   |                               |\n+   |                               Overflowing shift by 16 in unchecked_shl\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:31:1\n+   |\n+LL | const SHL_I32: i32 = unsafe { intrinsics::unchecked_shl(5_i32, 32) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^------------------------------------^^^\n+   |                               |\n+   |                               Overflowing shift by 32 in unchecked_shl\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:33:1\n+   |\n+LL | const SHL_I64: i64 = unsafe { intrinsics::unchecked_shl(5_i64, 64) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^------------------------------------^^^\n+   |                               |\n+   |                               Overflowing shift by 64 in unchecked_shl\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:35:1\n+   |\n+LL | const SHL_I128: i128 = unsafe { intrinsics::unchecked_shl(5_i128, 128) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^--------------------------------------^^^\n+   |                                 |\n+   |                                 Overflowing shift by 128 in unchecked_shl\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:40:1\n+   |\n+LL | const SHL_I8_NEG: i8 = unsafe { intrinsics::unchecked_shl(5_i8, -1) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-----------------------------------^^^\n+   |                                 |\n+   |                                 Overflowing shift by 255 in unchecked_shl\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:42:1\n+   |\n+LL | const SHL_I16_NEG: i16 = unsafe { intrinsics::unchecked_shl(5_16, -1) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-----------------------------------^^^\n+   |                                   |\n+   |                                   Overflowing shift by 65535 in unchecked_shl\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:44:1\n+   |\n+LL | const SHL_I32_NEG: i32 = unsafe { intrinsics::unchecked_shl(5_i32, -1) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^------------------------------------^^^\n+   |                                   |\n+   |                                   Overflowing shift by 4294967295 in unchecked_shl\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:46:1\n+   |\n+LL | const SHL_I64_NEG: i64 = unsafe { intrinsics::unchecked_shl(5_i64, -1) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^------------------------------------^^^\n+   |                                   |\n+   |                                   Overflowing shift by 18446744073709551615 in unchecked_shl\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:48:1\n+   |\n+LL | const SHL_I128_NEG: i128 = unsafe { intrinsics::unchecked_shl(5_i128, -1) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-------------------------------------^^^\n+   |                                     |\n+   |                                     Overflowing shift by 340282366920938463463374607431768211455 in unchecked_shl\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:54:1\n+   |\n+LL | const SHL_I8_NEG_RANDOM: i8 = unsafe { intrinsics::unchecked_shl(5_i8, -6) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-----------------------------------^^^\n+   |                                        |\n+   |                                        Overflowing shift by 250 in unchecked_shl\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:56:1\n+   |\n+LL | const SHL_I16_NEG_RANDOM: i16 = unsafe { intrinsics::unchecked_shl(5_16, -13) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^------------------------------------^^^\n+   |                                          |\n+   |                                          Overflowing shift by 65523 in unchecked_shl\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:58:1\n+   |\n+LL | const SHL_I32_NEG_RANDOM: i32 = unsafe { intrinsics::unchecked_shl(5_i32, -25) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-------------------------------------^^^\n+   |                                          |\n+   |                                          Overflowing shift by 4294967271 in unchecked_shl\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:60:1\n+   |\n+LL | const SHL_I64_NEG_RANDOM: i64 = unsafe { intrinsics::unchecked_shl(5_i64, -30) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-------------------------------------^^^\n+   |                                          |\n+   |                                          Overflowing shift by 18446744073709551586 in unchecked_shl\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:62:1\n+   |\n+LL | const SHL_I128_NEG_RANDOM: i128 = unsafe { intrinsics::unchecked_shl(5_i128, -93) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^--------------------------------------^^^\n+   |                                            |\n+   |                                            Overflowing shift by 340282366920938463463374607431768211363 in unchecked_shl\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:69:1\n+   |\n+LL | const SHR_U8: u8 = unsafe { intrinsics::unchecked_shr(5_u8, 8) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^----------------------------------^^^\n+   |                             |\n+   |                             Overflowing shift by 8 in unchecked_shr\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:71:1\n+   |\n+LL | const SHR_U16: u16 = unsafe { intrinsics::unchecked_shr(5_u16, 16) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^------------------------------------^^^\n+   |                               |\n+   |                               Overflowing shift by 16 in unchecked_shr\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:73:1\n+   |\n+LL | const SHR_U32: u32 = unsafe { intrinsics::unchecked_shr(5_u32, 32) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^------------------------------------^^^\n+   |                               |\n+   |                               Overflowing shift by 32 in unchecked_shr\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:75:1\n+   |\n+LL | const SHR_U64: u64 = unsafe { intrinsics::unchecked_shr(5_u64, 64) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^------------------------------------^^^\n+   |                               |\n+   |                               Overflowing shift by 64 in unchecked_shr\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:77:1\n+   |\n+LL | const SHR_U128: u128 = unsafe { intrinsics::unchecked_shr(5_u128, 128) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^--------------------------------------^^^\n+   |                                 |\n+   |                                 Overflowing shift by 128 in unchecked_shr\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:82:1\n+   |\n+LL | const SHR_I8: i8 = unsafe { intrinsics::unchecked_shr(5_i8, 8) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^----------------------------------^^^\n+   |                             |\n+   |                             Overflowing shift by 8 in unchecked_shr\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:84:1\n+   |\n+LL | const SHR_I16: i16 = unsafe { intrinsics::unchecked_shr(5_16, 16) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-----------------------------------^^^\n+   |                               |\n+   |                               Overflowing shift by 16 in unchecked_shr\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:86:1\n+   |\n+LL | const SHR_I32: i32 = unsafe { intrinsics::unchecked_shr(5_i32, 32) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^------------------------------------^^^\n+   |                               |\n+   |                               Overflowing shift by 32 in unchecked_shr\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:88:1\n+   |\n+LL | const SHR_I64: i64 = unsafe { intrinsics::unchecked_shr(5_i64, 64) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^------------------------------------^^^\n+   |                               |\n+   |                               Overflowing shift by 64 in unchecked_shr\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:90:1\n+   |\n+LL | const SHR_I128: i128 = unsafe { intrinsics::unchecked_shr(5_i128, 128) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^--------------------------------------^^^\n+   |                                 |\n+   |                                 Overflowing shift by 128 in unchecked_shr\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:95:1\n+   |\n+LL | const SHR_I8_NEG: i8 = unsafe { intrinsics::unchecked_shr(5_i8, -1) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-----------------------------------^^^\n+   |                                 |\n+   |                                 Overflowing shift by 255 in unchecked_shr\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:97:1\n+   |\n+LL | const SHR_I16_NEG: i16 = unsafe { intrinsics::unchecked_shr(5_16, -1) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-----------------------------------^^^\n+   |                                   |\n+   |                                   Overflowing shift by 65535 in unchecked_shr\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:99:1\n+   |\n+LL | const SHR_I32_NEG: i32 = unsafe { intrinsics::unchecked_shr(5_i32, -1) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^------------------------------------^^^\n+   |                                   |\n+   |                                   Overflowing shift by 4294967295 in unchecked_shr\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:101:1\n+   |\n+LL | const SHR_I64_NEG: i64 = unsafe { intrinsics::unchecked_shr(5_i64, -1) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^------------------------------------^^^\n+   |                                   |\n+   |                                   Overflowing shift by 18446744073709551615 in unchecked_shr\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:103:1\n+   |\n+LL | const SHR_I128_NEG: i128 = unsafe { intrinsics::unchecked_shr(5_i128, -1) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-------------------------------------^^^\n+   |                                     |\n+   |                                     Overflowing shift by 340282366920938463463374607431768211455 in unchecked_shr\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:109:1\n+   |\n+LL | const SHR_I8_NEG_RANDOM: i8 = unsafe { intrinsics::unchecked_shr(5_i8, -6) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-----------------------------------^^^\n+   |                                        |\n+   |                                        Overflowing shift by 250 in unchecked_shr\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:111:1\n+   |\n+LL | const SHR_I16_NEG_RANDOM: i16 = unsafe { intrinsics::unchecked_shr(5_16, -13) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^------------------------------------^^^\n+   |                                          |\n+   |                                          Overflowing shift by 65523 in unchecked_shr\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:113:1\n+   |\n+LL | const SHR_I32_NEG_RANDOM: i32 = unsafe { intrinsics::unchecked_shr(5_i32, -25) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-------------------------------------^^^\n+   |                                          |\n+   |                                          Overflowing shift by 4294967271 in unchecked_shr\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:115:1\n+   |\n+LL | const SHR_I64_NEG_RANDOM: i64 = unsafe { intrinsics::unchecked_shr(5_i64, -30) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-------------------------------------^^^\n+   |                                          |\n+   |                                          Overflowing shift by 18446744073709551586 in unchecked_shr\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:117:1\n+   |\n+LL | const SHR_I128_NEG_RANDOM: i128 = unsafe { intrinsics::unchecked_shr(5_i128, -93) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^--------------------------------------^^^\n+   |                                            |\n+   |                                            Overflowing shift by 340282366920938463463374607431768211363 in unchecked_shr\n+\n+error: aborting due to 40 previous errors\n "}]}