{"sha": "4687afa480846c155af1598940a97d0286a2f1d5", "node_id": "C_kwDOAAsO6NoAKDQ2ODdhZmE0ODA4NDZjMTU1YWYxNTk4OTQwYTk3ZDAyODZhMmYxZDU", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-05T21:48:43Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-05T21:48:43Z"}, "message": "fix type in function name", "tree": {"sha": "17fc8d7fe9c9893e5f9daa892462c57c30b83f4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17fc8d7fe9c9893e5f9daa892462c57c30b83f4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4687afa480846c155af1598940a97d0286a2f1d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4687afa480846c155af1598940a97d0286a2f1d5", "html_url": "https://github.com/rust-lang/rust/commit/4687afa480846c155af1598940a97d0286a2f1d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4687afa480846c155af1598940a97d0286a2f1d5/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41ad4d9b2dbb895666337d162eda52619a6056db", "url": "https://api.github.com/repos/rust-lang/rust/commits/41ad4d9b2dbb895666337d162eda52619a6056db", "html_url": "https://github.com/rust-lang/rust/commit/41ad4d9b2dbb895666337d162eda52619a6056db"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "4661a7c28286de438b644a8d9ef8a0b431e6d9ab", "filename": "compiler/rustc_const_eval/src/interpret/machine.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4687afa480846c155af1598940a97d0286a2f1d5/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4687afa480846c155af1598940a97d0286a2f1d5/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fmachine.rs?ref=4687afa480846c155af1598940a97d0286a2f1d5", "patch": "@@ -145,7 +145,7 @@ pub trait Machine<'mir, 'tcx>: Sized {\n     }\n \n     /// Whether CheckedBinOp MIR statements should actually check for overflow.\n-    fn check_binop_checks_overflow(_ecx: &InterpCx<'mir, 'tcx, Self>) -> bool;\n+    fn checked_binop_checks_overflow(_ecx: &InterpCx<'mir, 'tcx, Self>) -> bool;\n \n     /// Entry point for obtaining the MIR of anything that should get evaluated.\n     /// So not just functions and shims, but also const/static initializers, anonymous\n@@ -472,7 +472,7 @@ pub macro compile_time_machine(<$mir: lifetime, $tcx: lifetime>) {\n     }\n \n     #[inline(always)]\n-    fn check_binop_checks_overflow(_ecx: &InterpCx<$mir, $tcx, Self>) -> bool {\n+    fn checked_binop_checks_overflow(_ecx: &InterpCx<$mir, $tcx, Self>) -> bool {\n         true\n     }\n "}, {"sha": "f0c113376eab1c576a46edc8f8d6e6975e8a6110", "filename": "compiler/rustc_const_eval/src/interpret/operator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4687afa480846c155af1598940a97d0286a2f1d5/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4687afa480846c155af1598940a97d0286a2f1d5/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperator.rs?ref=4687afa480846c155af1598940a97d0286a2f1d5", "patch": "@@ -33,7 +33,7 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         // As per https://github.com/rust-lang/rust/pull/98738, we always return `false` in the 2nd\n         // component when overflow checking is disabled.\n         let overflowed =\n-            overflowed && (force_overflow_checks || M::check_binop_checks_overflow(self));\n+            overflowed && (force_overflow_checks || M::checked_binop_checks_overflow(self));\n         // Write the result to `dest`.\n         if let Abi::ScalarPair(..) = dest.layout.abi {\n             // We can use the optimized path and avoid `place_field` (which might do"}]}