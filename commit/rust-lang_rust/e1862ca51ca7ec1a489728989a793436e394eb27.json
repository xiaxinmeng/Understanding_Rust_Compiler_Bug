{"sha": "e1862ca51ca7ec1a489728989a793436e394eb27", "node_id": "C_kwDOAAsO6NoAKGUxODYyY2E1MWNhN2VjMWE0ODk3Mjg5ODlhNzkzNDM2ZTM5NGViMjc", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-06-26T04:14:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-26T04:14:58Z"}, "message": "Rollup merge of #98474 - dtolnay:python3, r=Mark-Simulacrum\n\nx.py: Support systems with only `python3` not `python`\n\nFixes #71818 without the pitfalls so far described in previous attempts.", "tree": {"sha": "a0c367390ebb83c9b0b7ed389a17571ccaec9772", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0c367390ebb83c9b0b7ed389a17571ccaec9772"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1862ca51ca7ec1a489728989a793436e394eb27", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJit91CCRBK7hj4Ov3rIwAANjIIAA4EjQUVfiMc+LmsB81LkdWf\nkdzbU3s79CCIyaBVs8q+vum+H9uxpDZfhL/ra5xVA4XENgjlx2phdYkoft7PJeZX\n/9OZA7BAnBltHJvGa6YH+AUUbKF7Fr9J6lSaMAArrTPnVNzCSquGAXz3HpT92oEk\npz5ukMs1E/j4cIEtlCH0cPYkJ6LZ82qRiR4I2GovdolxKWYmPyjx7VsbefrDCQHo\nRH9jhZa9ittpkmZRuEgvEUVnweCTGzBDHNya9iF+xd4eutcbt7L3QaT2lkssmGT+\njvzFMz4f+p2Q1M0oCrD6CpKQyN08iaKvSDWDtLWzrmSnaifDAfg7QyTRoTErOoI=\n=0yBN\n-----END PGP SIGNATURE-----\n", "payload": "tree a0c367390ebb83c9b0b7ed389a17571ccaec9772\nparent 7c3977669b69cf69bf9ab51ed8bee155fb442448\nparent 9169905eb2d0e5df5c554396495df49283812abc\nauthor Yuki Okushi <jtitor@2k36.org> 1656216898 +0900\ncommitter GitHub <noreply@github.com> 1656216898 +0900\n\nRollup merge of #98474 - dtolnay:python3, r=Mark-Simulacrum\n\nx.py: Support systems with only `python3` not `python`\n\nFixes #71818 without the pitfalls so far described in previous attempts.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1862ca51ca7ec1a489728989a793436e394eb27", "html_url": "https://github.com/rust-lang/rust/commit/e1862ca51ca7ec1a489728989a793436e394eb27", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1862ca51ca7ec1a489728989a793436e394eb27/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c3977669b69cf69bf9ab51ed8bee155fb442448", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c3977669b69cf69bf9ab51ed8bee155fb442448", "html_url": "https://github.com/rust-lang/rust/commit/7c3977669b69cf69bf9ab51ed8bee155fb442448"}, {"sha": "9169905eb2d0e5df5c554396495df49283812abc", "url": "https://api.github.com/repos/rust-lang/rust/commits/9169905eb2d0e5df5c554396495df49283812abc", "html_url": "https://github.com/rust-lang/rust/commit/9169905eb2d0e5df5c554396495df49283812abc"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "0289056fdcb163889cd3d59b24e6e20afbbd2e30", "filename": "x.py", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/e1862ca51ca7ec1a489728989a793436e394eb27/x.py", "raw_url": "https://github.com/rust-lang/rust/raw/e1862ca51ca7ec1a489728989a793436e394eb27/x.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/x.py?ref=e1862ca51ca7ec1a489728989a793436e394eb27", "patch": "@@ -1,17 +1,38 @@\n-#!/usr/bin/env python\n+#!/usr/bin/env bash\n \n+# Modern Linux and macOS systems commonly only have a thing called `python3` and\n+# not `python`, while Windows commonly does not have `python3`, so we cannot\n+# directly use python in the shebang and have it consistently work. Instead we\n+# embed some bash to look for a python to run the rest of the script.\n+#\n+# On Windows, `py -3` sometimes works. We need to try it first because `python3`\n+# sometimes tries to launch the app store on Windows.\n+'''':\n+for PYTHON in \"py -3\" python3 python python2; do\n+    if command -v $PYTHON >/dev/null; then\n+        exec $PYTHON \"$0\" \"$@\"\n+        break\n+    fi\n+done\n+echo \"$0: error: did not find python installed\" >&2\n+exit 1\n+'''\n+\n+# The rest of this file is Python.\n+#\n # This file is only a \"symlink\" to bootstrap.py, all logic should go there.\n \n import os\n import sys\n \n # If this is python2, check if python3 is available and re-execute with that\n # interpreter.\n+#\n+# `./x.py` would not normally benefit from this because the bash above tries\n+# python3 before 2, but this matters if someone ran `python x.py` and their\n+# system's `python` is python2.\n if sys.version_info.major < 3:\n     try:\n-        # On Windows, `py -3` sometimes works.\n-        # Try this first, because 'python3' sometimes tries to launch the app\n-        # store on Windows\n         os.execvp(\"py\", [\"py\", \"-3\"] + sys.argv)\n     except OSError:\n         try:"}]}