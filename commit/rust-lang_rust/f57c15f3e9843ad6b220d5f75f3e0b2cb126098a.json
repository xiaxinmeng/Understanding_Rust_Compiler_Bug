{"sha": "f57c15f3e9843ad6b220d5f75f3e0b2cb126098a", "node_id": "C_kwDOAAsO6NoAKGY1N2MxNWYzZTk4NDNhZDZiMjIwZDVmNzVmM2UwYjJjYjEyNjA5OGE", "commit": {"author": {"name": "Mathew Horner", "email": "mathewhorner456@gmail.com", "date": "2022-09-12T21:34:13Z"}, "committer": {"name": "Mathew Horner", "email": "mathewhorner456@gmail.com", "date": "2022-09-12T21:34:13Z"}, "message": "Address comments and fix build.", "tree": {"sha": "c390226acb90111632f8207905359e1a35f078cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c390226acb90111632f8207905359e1a35f078cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f57c15f3e9843ad6b220d5f75f3e0b2cb126098a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f57c15f3e9843ad6b220d5f75f3e0b2cb126098a", "html_url": "https://github.com/rust-lang/rust/commit/f57c15f3e9843ad6b220d5f75f3e0b2cb126098a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f57c15f3e9843ad6b220d5f75f3e0b2cb126098a/comments", "author": {"login": "mdx97", "id": 33100798, "node_id": "MDQ6VXNlcjMzMTAwNzk4", "avatar_url": "https://avatars.githubusercontent.com/u/33100798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdx97", "html_url": "https://github.com/mdx97", "followers_url": "https://api.github.com/users/mdx97/followers", "following_url": "https://api.github.com/users/mdx97/following{/other_user}", "gists_url": "https://api.github.com/users/mdx97/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdx97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdx97/subscriptions", "organizations_url": "https://api.github.com/users/mdx97/orgs", "repos_url": "https://api.github.com/users/mdx97/repos", "events_url": "https://api.github.com/users/mdx97/events{/privacy}", "received_events_url": "https://api.github.com/users/mdx97/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mdx97", "id": 33100798, "node_id": "MDQ6VXNlcjMzMTAwNzk4", "avatar_url": "https://avatars.githubusercontent.com/u/33100798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdx97", "html_url": "https://github.com/mdx97", "followers_url": "https://api.github.com/users/mdx97/followers", "following_url": "https://api.github.com/users/mdx97/following{/other_user}", "gists_url": "https://api.github.com/users/mdx97/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdx97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdx97/subscriptions", "organizations_url": "https://api.github.com/users/mdx97/orgs", "repos_url": "https://api.github.com/users/mdx97/repos", "events_url": "https://api.github.com/users/mdx97/events{/privacy}", "received_events_url": "https://api.github.com/users/mdx97/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a2803d9aea5099fcbb2b7f7b32cb3de60ab9e01", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a2803d9aea5099fcbb2b7f7b32cb3de60ab9e01", "html_url": "https://github.com/rust-lang/rust/commit/8a2803d9aea5099fcbb2b7f7b32cb3de60ab9e01"}], "stats": {"total": 74, "additions": 34, "deletions": 40}, "files": [{"sha": "bfbe0db6e4b84f3c579a376cd9ca40faa2cade2c", "filename": "crates/ide/src/annotations.rs", "status": "modified", "additions": 10, "deletions": 17, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/f57c15f3e9843ad6b220d5f75f3e0b2cb126098a/crates%2Fide%2Fsrc%2Fannotations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f57c15f3e9843ad6b220d5f75f3e0b2cb126098a/crates%2Fide%2Fsrc%2Fannotations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fannotations.rs?ref=f57c15f3e9843ad6b220d5f75f3e0b2cb126098a", "patch": "@@ -41,7 +41,7 @@ pub struct AnnotationConfig {\n     pub annotate_references: bool,\n     pub annotate_method_references: bool,\n     pub annotate_enum_variant_references: bool,\n-    pub annotation_location: AnnotationLocation,\n+    pub location: AnnotationLocation,\n }\n \n pub enum AnnotationLocation {\n@@ -137,7 +137,7 @@ pub(crate) fn annotations(\n         ) -> Option<TextRange> {\n             if let Some(InFile { file_id, value }) = node.original_ast_node(db) {\n                 if file_id == source_file_id.into() {\n-                    return match config.annotation_location {\n+                    return match config.location {\n                         AnnotationLocation::AboveName => {\n                             value.name().map(|name| name.syntax().text_range())\n                         }\n@@ -212,10 +212,10 @@ mod tests {\n         annotate_references: true,\n         annotate_method_references: true,\n         annotate_enum_variant_references: true,\n-        annotation_location: AnnotationLocation::AboveName,\n+        location: AnnotationLocation::AboveName,\n     };\n \n-    fn check(ra_fixture: &str, expect: Expect, config: &AnnotationConfig) {\n+    fn check_with_config(ra_fixture: &str, expect: Expect, config: &AnnotationConfig) {\n         let (analysis, file_id) = fixture::file(ra_fixture);\n \n         let annotations: Vec<Annotation> = analysis\n@@ -228,6 +228,10 @@ mod tests {\n         expect.assert_debug_eq(&annotations);\n     }\n \n+    fn check(ra_fixture: &str, expect: Expect) {\n+        check_with_config(ra_fixture, expect, &DEFAULT_CONFIG);\n+    }\n+\n     #[test]\n     fn const_annotations() {\n         check(\n@@ -303,7 +307,6 @@ fn main() {\n                     },\n                 ]\n             \"#]],\n-            &DEFAULT_CONFIG,\n         );\n     }\n \n@@ -380,7 +383,6 @@ fn main() {\n                     },\n                 ]\n             \"#]],\n-            &DEFAULT_CONFIG,\n         );\n     }\n \n@@ -516,7 +518,6 @@ fn main() {\n                     },\n                 ]\n             \"#]],\n-            &DEFAULT_CONFIG,\n         );\n     }\n \n@@ -560,7 +561,6 @@ fn main() {}\n                     },\n                 ]\n             \"#]],\n-            &DEFAULT_CONFIG,\n         );\n     }\n \n@@ -675,7 +675,6 @@ fn main() {\n                     },\n                 ]\n             \"#]],\n-            &DEFAULT_CONFIG,\n         );\n     }\n \n@@ -772,7 +771,6 @@ mod tests {\n                     },\n                 ]\n             \"#]],\n-            &DEFAULT_CONFIG,\n         );\n     }\n \n@@ -788,7 +786,6 @@ struct Foo;\n             expect![[r#\"\n                 []\n             \"#]],\n-            &DEFAULT_CONFIG,\n         );\n     }\n \n@@ -808,13 +805,12 @@ m!();\n             expect![[r#\"\n                 []\n             \"#]],\n-            &DEFAULT_CONFIG,\n         );\n     }\n \n     #[test]\n     fn test_annotations_appear_above_whole_item_when_configured_to_do_so() {\n-        check(\n+        check_with_config(\n             r#\"\n /// This is a struct named Foo, obviously.\n #[derive(Clone)]\n@@ -844,10 +840,7 @@ struct Foo;\n                     },\n                 ]\n             \"#]],\n-            &AnnotationConfig {\n-                annotation_location: AnnotationLocation::AboveWholeItem,\n-                ..DEFAULT_CONFIG\n-            },\n+            &AnnotationConfig { location: AnnotationLocation::AboveWholeItem, ..DEFAULT_CONFIG },\n         );\n     }\n }"}, {"sha": "68b4c20140ffc7fa0d4762c05e3dce9fb764c8a3", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f57c15f3e9843ad6b220d5f75f3e0b2cb126098a/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f57c15f3e9843ad6b220d5f75f3e0b2cb126098a/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=f57c15f3e9843ad6b220d5f75f3e0b2cb126098a", "patch": "@@ -307,8 +307,7 @@ config_data! {\n         /// Join lines unwraps trivial blocks.\n         joinLines_unwrapTrivialBlock: bool = \"true\",\n \n-        /// Where to render annotations.\n-        lens_annotationLocation: AnnotationLocation = \"\\\"above_name\\\"\",\n+\n         /// Whether to show `Debug` lens. Only applies when\n         /// `#rust-analyzer.lens.enable#` is set.\n         lens_debug_enable: bool            = \"true\",\n@@ -320,6 +319,8 @@ config_data! {\n         /// Whether to show `Implementations` lens. Only applies when\n         /// `#rust-analyzer.lens.enable#` is set.\n         lens_implementations_enable: bool  = \"true\",\n+        /// Where to render annotations.\n+        lens_location: AnnotationLocation = \"\\\"above_name\\\"\",\n         /// Whether to show `References` lens for Struct, Enum, and Union.\n         /// Only applies when `#rust-analyzer.lens.enable#` is set.\n         lens_references_adt_enable: bool = \"false\",\n@@ -498,7 +499,7 @@ pub struct LensConfig {\n     pub enum_variant_refs: bool,\n \n     // annotations\n-    pub annotation_location: AnnotationLocation,\n+    pub location: AnnotationLocation,\n }\n \n #[derive(Copy, Clone, Debug, PartialEq, Eq, Deserialize)]\n@@ -1206,7 +1207,7 @@ impl Config {\n             refs_trait: self.data.lens_enable && self.data.lens_references_trait_enable,\n             enum_variant_refs: self.data.lens_enable\n                 && self.data.lens_references_enumVariant_enable,\n-            annotation_location: self.data.lens_annotationLocation,\n+            location: self.data.lens_location,\n         }\n     }\n "}, {"sha": "a1eb972f781e71e0a8649578b205c18b6e47e649", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f57c15f3e9843ad6b220d5f75f3e0b2cb126098a/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f57c15f3e9843ad6b220d5f75f3e0b2cb126098a/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=f57c15f3e9843ad6b220d5f75f3e0b2cb126098a", "patch": "@@ -1234,7 +1234,7 @@ pub(crate) fn handle_code_lens(\n             annotate_references: lens_config.refs_adt,\n             annotate_method_references: lens_config.method_refs,\n             annotate_enum_variant_references: lens_config.enum_variant_refs,\n-            annotation_location: lens_config.annotation_location.into(),\n+            location: lens_config.location.into(),\n         },\n         file_id,\n     )?;"}, {"sha": "6e6d40e3ff1e510711d42898197b211ad332cf78", "filename": "docs/user/generated_config.adoc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f57c15f3e9843ad6b220d5f75f3e0b2cb126098a/docs%2Fuser%2Fgenerated_config.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/f57c15f3e9843ad6b220d5f75f3e0b2cb126098a/docs%2Fuser%2Fgenerated_config.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fgenerated_config.adoc?ref=f57c15f3e9843ad6b220d5f75f3e0b2cb126098a", "patch": "@@ -451,11 +451,6 @@ Join lines removes trailing commas.\n --\n Join lines unwraps trivial blocks.\n --\n-[[rust-analyzer.lens.annotation.location]]rust-analyzer.lens.annotation.location (default: `above_name`)::\n-+\n---\n-Where to render annotations.\n---\n [[rust-analyzer.lens.debug.enable]]rust-analyzer.lens.debug.enable (default: `true`)::\n +\n --\n@@ -479,6 +474,11 @@ client doesn't set the corresponding capability.\n Whether to show `Implementations` lens. Only applies when\n `#rust-analyzer.lens.enable#` is set.\n --\n+[[rust-analyzer.lens.location]]rust-analyzer.lens.location (default: `\"above_name\"`)::\n++\n+--\n+Where to render annotations.\n+--\n [[rust-analyzer.lens.references.adt.enable]]rust-analyzer.lens.references.adt.enable (default: `false`)::\n +\n --"}, {"sha": "3696c99624658c79492f95170f26f3a756364a72", "filename": "editors/code/package.json", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f57c15f3e9843ad6b220d5f75f3e0b2cb126098a/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/f57c15f3e9843ad6b220d5f75f3e0b2cb126098a/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=f57c15f3e9843ad6b220d5f75f3e0b2cb126098a", "patch": "@@ -943,19 +943,6 @@\n                     \"default\": true,\n                     \"type\": \"boolean\"\n                 },\n-                \"rust-analyzer.lens.annotationLocation\": {\n-                    \"markdownDescription\": \"Where to render annotations.\",\n-                    \"default\": \"above_name\",\n-                    \"type\": \"string\",\n-                    \"enum\": [\n-                        \"above_name\",\n-                        \"above_whole_item\"\n-                    ],\n-                    \"enumDescriptions\": [\n-                        \"Render annotations above the name of the item.\",\n-                        \"Render annotations above the whole item, including documentation comments and attributes.\"\n-                    ]\n-                },\n                 \"rust-analyzer.lens.debug.enable\": {\n                     \"markdownDescription\": \"Whether to show `Debug` lens. Only applies when\\n`#rust-analyzer.lens.enable#` is set.\",\n                     \"default\": true,\n@@ -976,6 +963,19 @@\n                     \"default\": true,\n                     \"type\": \"boolean\"\n                 },\n+                \"rust-analyzer.lens.location\": {\n+                    \"markdownDescription\": \"Where to render annotations.\",\n+                    \"default\": \"above_name\",\n+                    \"type\": \"string\",\n+                    \"enum\": [\n+                        \"above_name\",\n+                        \"above_whole_item\"\n+                    ],\n+                    \"enumDescriptions\": [\n+                        \"Render annotations above the name of the item.\",\n+                        \"Render annotations above the whole item, including documentation comments and attributes.\"\n+                    ]\n+                },\n                 \"rust-analyzer.lens.references.adt.enable\": {\n                     \"markdownDescription\": \"Whether to show `References` lens for Struct, Enum, and Union.\\nOnly applies when `#rust-analyzer.lens.enable#` is set.\",\n                     \"default\": false,"}]}