{"sha": "661ed7b82dc7b9ab597a274f10055f58f9db6f4b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2MWVkN2I4MmRjN2I5YWI1OTdhMjc0ZjEwMDU1ZjU4ZjlkYjZmNGI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-06T10:38:40Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-06T10:40:10Z"}, "message": "implement atomic_nand", "tree": {"sha": "fe3114bcd8d92a24e5c76a5c37291fd02618b0d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe3114bcd8d92a24e5c76a5c37291fd02618b0d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/661ed7b82dc7b9ab597a274f10055f58f9db6f4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/661ed7b82dc7b9ab597a274f10055f58f9db6f4b", "html_url": "https://github.com/rust-lang/rust/commit/661ed7b82dc7b9ab597a274f10055f58f9db6f4b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/661ed7b82dc7b9ab597a274f10055f58f9db6f4b/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e0e2199171884c15f4806dbbaf85d033d04644e", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e0e2199171884c15f4806dbbaf85d033d04644e", "html_url": "https://github.com/rust-lang/rust/commit/9e0e2199171884c15f4806dbbaf85d033d04644e"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "b7c5d8d07c25581637b136d81f1239a7cc8d87ed", "filename": "src/intrinsic.rs", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/661ed7b82dc7b9ab597a274f10055f58f9db6f4b/src%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/661ed7b82dc7b9ab597a274f10055f58f9db6f4b/src%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsic.rs?ref=661ed7b82dc7b9ab597a274f10055f58f9db6f4b", "patch": "@@ -108,6 +108,11 @@ pub trait EvalContextExt<'a, 'mir, 'tcx: 'a+'mir>: crate::MiriEvalContextExt<'a,\n             \"atomic_and_rel\" |\n             \"atomic_and_acqrel\" |\n             \"atomic_and_relaxed\" |\n+            \"atomic_nand\" |\n+            \"atomic_nand_acq\" |\n+            \"atomic_nand_rel\" |\n+            \"atomic_nand_acqrel\" |\n+            \"atomic_nand_relaxed\" |\n             \"atomic_xadd\" |\n             \"atomic_xadd_acq\" |\n             \"atomic_xadd_rel\" |\n@@ -125,16 +130,23 @@ pub trait EvalContextExt<'a, 'mir, 'tcx: 'a+'mir>: crate::MiriEvalContextExt<'a,\n                 let rhs = this.read_immediate(args[1])?;\n                 let old = this.read_immediate(ptr.into())?;\n                 this.write_immediate(*old, dest)?; // old value is returned\n-                let op = match intrinsic_name.split('_').nth(1).unwrap() {\n-                    \"or\" => mir::BinOp::BitOr,\n-                    \"xor\" => mir::BinOp::BitXor,\n-                    \"and\" => mir::BinOp::BitAnd,\n-                    \"xadd\" => mir::BinOp::Add,\n-                    \"xsub\" => mir::BinOp::Sub,\n+                let (op, neg) = match intrinsic_name.split('_').nth(1).unwrap() {\n+                    \"or\" => (mir::BinOp::BitOr, false),\n+                    \"xor\" => (mir::BinOp::BitXor, false),\n+                    \"and\" => (mir::BinOp::BitAnd, false),\n+                    \"xadd\" => (mir::BinOp::Add, false),\n+                    \"xsub\" => (mir::BinOp::Sub, false),\n+                    \"nand\" => (mir::BinOp::BitAnd, true),\n                     _ => bug!(),\n                 };\n                 // Atomics wrap around on overflow.\n-                this.binop_ignore_overflow(op, old, rhs, ptr.into())?;\n+                let (val, _overflowed) = this.binary_op_imm(op, old, rhs)?;\n+                let val = if neg {\n+                    this.unary_op(mir::UnOp::Not, val, old.layout)?\n+                } else {\n+                    val\n+                };\n+                this.write_scalar(val, ptr.into())?;\n             }\n \n             \"breakpoint\" => unimplemented!(), // halt miri"}]}