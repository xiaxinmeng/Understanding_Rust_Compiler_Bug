{"sha": "5958fa6a7049cd003e87d6d8502ae1237262c378", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5NThmYTZhNzA0OWNkMDAzZTg3ZDZkODUwMmFlMTIzNzI2MmMzNzg=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-11-27T15:20:15Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-11-27T15:20:15Z"}, "message": "Use explicit `dyn` trait object", "tree": {"sha": "bfd5a849af5b6e17446f8f1a03a3cf24ff7e92e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfd5a849af5b6e17446f8f1a03a3cf24ff7e92e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5958fa6a7049cd003e87d6d8502ae1237262c378", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5958fa6a7049cd003e87d6d8502ae1237262c378", "html_url": "https://github.com/rust-lang/rust/commit/5958fa6a7049cd003e87d6d8502ae1237262c378", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5958fa6a7049cd003e87d6d8502ae1237262c378/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "edc2fb5f60232ddd629986accc553acf75ab78de", "url": "https://api.github.com/repos/rust-lang/rust/commits/edc2fb5f60232ddd629986accc553acf75ab78de", "html_url": "https://github.com/rust-lang/rust/commit/edc2fb5f60232ddd629986accc553acf75ab78de"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "278bbd9cf2b13d5ead44c7b1de87f615d0542fba", "filename": "src/mono_hash_map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5958fa6a7049cd003e87d6d8502ae1237262c378/src%2Fmono_hash_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5958fa6a7049cd003e87d6d8502ae1237262c378/src%2Fmono_hash_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmono_hash_map.rs?ref=5958fa6a7049cd003e87d6d8502ae1237262c378", "patch": "@@ -18,7 +18,7 @@ use crate::AllocMap;\n pub struct MonoHashMap<K: Hash + Eq, V>(RefCell<FxHashMap<K, Box<V>>>);\n \n impl<K: Hash + Eq, V> MonoHashMap<K, V> {\n-    pub fn values<T>(&self, f: impl FnOnce(&mut Iterator<Item=&V>) -> T) -> T {\n+    pub fn values<T>(&self, f: impl FnOnce(&mut dyn Iterator<Item=&V>) -> T) -> T {\n         f(&mut self.0.borrow().values().map(|v| &**v))\n     }\n }"}]}