{"sha": "dae5c9c685b8b7e936b48bedf41ce4f2e6890629", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhZTVjOWM2ODViOGI3ZTkzNmI0OGJlZGY0MWNlNGYyZTY4OTA2Mjk=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-03-16T10:17:36Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-03-16T10:17:36Z"}, "message": "AbsolutePathBuffer -> AbsolutePathPrinter", "tree": {"sha": "235610fd9917e0ce3c7e8456fcfd297c2280e8eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/235610fd9917e0ce3c7e8456fcfd297c2280e8eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dae5c9c685b8b7e936b48bedf41ce4f2e6890629", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAlyMzUEACgkQaTCGhp1Q\nZjckwQ//XYWZeB0XPPIK/dopfbVu9lXba0tq5Xr717QMw10rgBbutV0V5tIA1o1a\n+RyFQ2kLKBLK0bBOMfRTxNNkvYnTlgaFkK8nMhYy0IHRlGLKdf3PX9C/wSX+AGUj\nnQWt3yHGE711EVKmOoRAT+kRXxNEyMxzQAgXJtQrhA2xZW3r73ue4Y6KIfmBhvnm\nnqAjls7vENTw7PM0ZYsIl8IX+QprMQnqAcea+eThMr372OCUWnyBvvvthyP688BK\nW/ryBaMOOtA8ki0IQ2nVKkd8uVElx8gjxG9EpZXQrmhGfnvamh7KteNoMOLa2+Nv\nFA8AM/Rv/HT7QXz0VR4uSO7p+7Ga352NLeNSqfPLVp5k93ew/YeaSgyVHdvWF8AY\nG1kvQnWSxepKA5DvoRfbJzO+rIG3M7eFLTviomXN2/cIl4wbAV8FNgok/Apov9PP\nLxH8i1tcPXlkYBia/xnaf48lWcOw6P5D+/V4q879Z2ekat8Mb7bvuCBptp9QmJbe\nH0hIc1ndpRWLvDxk/a/uqVYC9bJDLvlOPb7P/1vUhojpa29gTIYGfXvbaIOraP3E\nzi/ZR7E/EjO3vu68muY69XbjaW0A5tAkvVrcMWNFtxE9wGu2j/Q/piZwbbpRWZbh\n3NmNwMEmm4me+E6DP570axKOUR/HiJhLXdgzl6yRnz49gEupClM=\n=ij3P\n-----END PGP SIGNATURE-----", "payload": "tree 235610fd9917e0ce3c7e8456fcfd297c2280e8eb\nparent 2d8618e95cf46f9d975f38eee06a1a94d5d4cd7e\nauthor flip1995 <hello@philkrones.com> 1552731456 +0100\ncommitter flip1995 <hello@philkrones.com> 1552731456 +0100\n\nAbsolutePathBuffer -> AbsolutePathPrinter\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dae5c9c685b8b7e936b48bedf41ce4f2e6890629", "html_url": "https://github.com/rust-lang/rust/commit/dae5c9c685b8b7e936b48bedf41ce4f2e6890629", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dae5c9c685b8b7e936b48bedf41ce4f2e6890629/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d8618e95cf46f9d975f38eee06a1a94d5d4cd7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d8618e95cf46f9d975f38eee06a1a94d5d4cd7e", "html_url": "https://github.com/rust-lang/rust/commit/2d8618e95cf46f9d975f38eee06a1a94d5d4cd7e"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "4433acf8efd198ffc4555634272434a6e13b4191", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dae5c9c685b8b7e936b48bedf41ce4f2e6890629/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dae5c9c685b8b7e936b48bedf41ce4f2e6890629/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=dae5c9c685b8b7e936b48bedf41ce4f2e6890629", "patch": "@@ -25,7 +25,7 @@ use crate::utils::paths;\n use crate::utils::{\n     clip, comparisons, differing_macro_contexts, higher, in_constant, in_macro, int_bits, last_path_segment,\n     match_def_path, match_path, multispan_sugg, same_tys, sext, snippet, snippet_opt, snippet_with_applicability,\n-    span_help_and_lint, span_lint, span_lint_and_sugg, span_lint_and_then, unsext, AbsolutePathBuffer,\n+    span_help_and_lint, span_lint, span_lint_and_sugg, span_lint_and_then, unsext, AbsolutePathPrinter,\n };\n \n /// Handles all the linting of funky types\n@@ -1138,7 +1138,7 @@ impl LintPass for CastPass {\n // one of the platform specific `libc::<platform>::c_void` of libc.\n fn is_c_void<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, ty: Ty<'_>) -> bool {\n     if let ty::Adt(adt, _) = ty.sty {\n-        let names = AbsolutePathBuffer { tcx }.print_def_path(adt.did, &[]).unwrap();\n+        let names = AbsolutePathPrinter { tcx }.print_def_path(adt.did, &[]).unwrap();\n \n         if names.is_empty() {\n             return false;"}, {"sha": "b46237b57f6e371f024244402ad37c25dd857a39", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dae5c9c685b8b7e936b48bedf41ce4f2e6890629/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dae5c9c685b8b7e936b48bedf41ce4f2e6890629/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=dae5c9c685b8b7e936b48bedf41ce4f2e6890629", "patch": "@@ -98,13 +98,13 @@ pub fn in_macro(span: Span) -> bool {\n /// Used to store the absolute path to a type.\n ///\n /// See `match_def_path` for usage.\n-pub struct AbsolutePathBuffer<'a, 'tcx> {\n+pub struct AbsolutePathPrinter<'a, 'tcx> {\n     pub tcx: TyCtxt<'a, 'tcx, 'tcx>,\n }\n \n use rustc::ty::print::Printer;\n \n-impl<'tcx> Printer<'tcx, 'tcx> for AbsolutePathBuffer<'_, 'tcx> {\n+impl<'tcx> Printer<'tcx, 'tcx> for AbsolutePathPrinter<'_, 'tcx> {\n     type Error = !;\n \n     type Path = Vec<String>;\n@@ -201,7 +201,7 @@ impl<'tcx> Printer<'tcx, 'tcx> for AbsolutePathBuffer<'_, 'tcx> {\n ///\n /// See also the `paths` module.\n pub fn match_def_path<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId, path: &[&str]) -> bool {\n-    let names = AbsolutePathBuffer { tcx }.print_def_path(def_id, &[]).unwrap();\n+    let names = AbsolutePathPrinter { tcx }.print_def_path(def_id, &[]).unwrap();\n \n     names.len() == path.len() && names.into_iter().zip(path.iter()).all(|(a, &b)| *a == *b)\n }\n@@ -216,7 +216,7 @@ pub fn match_def_path<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId, path\n /// };\n /// ```\n pub fn get_def_path<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId) -> Vec<String> {\n-    AbsolutePathBuffer { tcx }.print_def_path(def_id, &[]).unwrap()\n+    AbsolutePathPrinter { tcx }.print_def_path(def_id, &[]).unwrap()\n }\n \n /// Checks if type is struct, enum or union type with the given def path."}]}