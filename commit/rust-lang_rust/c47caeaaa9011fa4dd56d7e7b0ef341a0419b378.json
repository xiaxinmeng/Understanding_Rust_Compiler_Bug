{"sha": "c47caeaaa9011fa4dd56d7e7b0ef341a0419b378", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0N2NhZWFhYTkwMTFmYTRkZDU2ZDdlN2IwZWYzNDFhMDQxOWIzNzg=", "commit": {"author": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2020-10-03T02:23:33Z"}, "committer": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2020-10-03T02:38:56Z"}, "message": "Macro-expand test to cover all possible lanes", "tree": {"sha": "96afc5c3856d7ff44eac42e23500ef5a26c7c493", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96afc5c3856d7ff44eac42e23500ef5a26c7c493"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c47caeaaa9011fa4dd56d7e7b0ef341a0419b378", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c47caeaaa9011fa4dd56d7e7b0ef341a0419b378", "html_url": "https://github.com/rust-lang/rust/commit/c47caeaaa9011fa4dd56d7e7b0ef341a0419b378", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c47caeaaa9011fa4dd56d7e7b0ef341a0419b378/comments", "author": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac96f5b39ca7d9fad8571595c476c2db0bce8438", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac96f5b39ca7d9fad8571595c476c2db0bce8438", "html_url": "https://github.com/rust-lang/rust/commit/ac96f5b39ca7d9fad8571595c476c2db0bce8438"}], "stats": {"total": 264, "additions": 249, "deletions": 15}, "files": [{"sha": "811e5f45d1266f4f8bb5d120583a468cb7ca18df", "filename": "src/test/ui/simd/shuffle-not-out-of-bounds.rs", "status": "modified", "additions": 177, "deletions": 10, "changes": 187, "blob_url": "https://github.com/rust-lang/rust/blob/c47caeaaa9011fa4dd56d7e7b0ef341a0419b378/src%2Ftest%2Fui%2Fsimd%2Fshuffle-not-out-of-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c47caeaaa9011fa4dd56d7e7b0ef341a0419b378/src%2Ftest%2Fui%2Fsimd%2Fshuffle-not-out-of-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd%2Fshuffle-not-out-of-bounds.rs?ref=c47caeaaa9011fa4dd56d7e7b0ef341a0419b378", "patch": "@@ -6,18 +6,185 @@\n \n #[repr(simd)]\n #[derive(Copy, Clone)]\n-struct f32x4(f32, f32, f32, f32);\n+struct u8x2(u8, u8);\n \n-extern \"platform-intrinsic\" {\n-    pub fn simd_shuffle4<T, U>(x: T, y: T, idx: [u32; 4]) -> U;\n-}\n+#[repr(simd)]\n+#[derive(Copy, Clone)]\n+struct u8x4(u8, u8, u8, u8);\n \n+#[repr(simd)]\n+#[derive(Copy, Clone)]\n+struct u8x8(u8, u8, u8, u8, u8, u8, u8, u8);\n \n-fn main() {\n-    unsafe {\n-        let vec1 = f32x4(1.0, 2.0, 3.0, 4.0);\n-        let vec2 = f32x4(10_000.0, 20_000.0, 30_000.0, 40_000.0);\n-        let shuffled: f32x4 = simd_shuffle4(vec1, vec2, [0, 4, 7, 9]);\n-        //~^ ERROR: invalid monomorphization of `simd_shuffle4` intrinsic: shuffle index #3 is out\n+#[repr(simd)]\n+#[derive(Copy, Clone)]\n+struct u8x16(\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+);\n+\n+#[repr(simd)]\n+#[derive(Copy, Clone)]\n+struct u8x32(\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+);\n+\n+#[repr(simd)]\n+#[derive(Copy, Clone)]\n+struct u8x64(\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+    u8,\n+);\n+\n+// Test vectors by lane size. Since LLVM does not distinguish between a shuffle\n+// over two f32s and a shuffle over two u64s, or any other such combination,\n+// it is not necessary to test every possible vector, only lane counts.\n+macro_rules! test_shuffle_lanes {\n+    ($n:literal, $x:ident, $y:ident, $t:tt) => {\n+        unsafe {\n+                let shuffle: $x = {\n+                    const ARR: [u32; $n] = {\n+                        let mut arr = [0; $n];\n+                        arr[0] = $n * 2;\n+                        arr\n+                    };\n+                    extern \"platform-intrinsic\" {\n+                        pub fn $y<T, U>(x: T, y: T, idx: [u32; $n]) -> U;\n+                    }\n+                    let vec1 = $x$t;\n+                    let vec2 = $x$t;\n+                    $y(vec1, vec2, ARR)\n+                };\n+        }\n     }\n }\n+//~^^^^^ ERROR: invalid monomorphization of `simd_shuffle2` intrinsic\n+//~^^^^^^ ERROR: invalid monomorphization of `simd_shuffle4` intrinsic\n+//~^^^^^^^ ERROR: invalid monomorphization of `simd_shuffle8` intrinsic\n+//~^^^^^^^^ ERROR: invalid monomorphization of `simd_shuffle16` intrinsic\n+//~^^^^^^^^^ ERROR: invalid monomorphization of `simd_shuffle32` intrinsic\n+//~^^^^^^^^^^ ERROR: invalid monomorphization of `simd_shuffle64` intrinsic\n+// Because the test is mostly embedded in a macro, all the errors have the same origin point.\n+\n+fn main() {\n+    test_shuffle_lanes!(2, u8x2, simd_shuffle2, (2, 1));\n+    test_shuffle_lanes!(4, u8x4, simd_shuffle4, (4, 3, 2, 1));\n+    test_shuffle_lanes!(8, u8x8, simd_shuffle8, (8, 7, 6, 5, 4, 3, 2, 1));\n+    test_shuffle_lanes!(16, u8x16, simd_shuffle16,\n+        (16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1));\n+    test_shuffle_lanes!(32, u8x32, simd_shuffle32,\n+        (32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16,\n+         15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1));\n+    test_shuffle_lanes!(64, u8x64, simd_shuffle64,\n+        (64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49,\n+         48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33,\n+         32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17,\n+         16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1));\n+}"}, {"sha": "4806f2ca27b9eeb94f3e611c8aff15bcd5f0db5b", "filename": "src/test/ui/simd/shuffle-not-out-of-bounds.stderr", "status": "modified", "additions": 72, "deletions": 5, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/c47caeaaa9011fa4dd56d7e7b0ef341a0419b378/src%2Ftest%2Fui%2Fsimd%2Fshuffle-not-out-of-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c47caeaaa9011fa4dd56d7e7b0ef341a0419b378/src%2Ftest%2Fui%2Fsimd%2Fshuffle-not-out-of-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd%2Fshuffle-not-out-of-bounds.stderr?ref=c47caeaaa9011fa4dd56d7e7b0ef341a0419b378", "patch": "@@ -1,9 +1,76 @@\n-error[E0511]: invalid monomorphization of `simd_shuffle4` intrinsic: shuffle index #3 is out of bounds (limit 8)\n-  --> $DIR/shuffle-not-out-of-bounds.rs:20:31\n+error[E0511]: invalid monomorphization of `simd_shuffle2` intrinsic: shuffle index #0 is out of bounds (limit 4)\n+  --> $DIR/shuffle-not-out-of-bounds.rs:163:21\n    |\n-LL |         let shuffled: f32x4 = simd_shuffle4(vec1, vec2, [0, 4, 7, 9]);\n-   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |                     $y(vec1, vec2, ARR)\n+   |                     ^^^^^^^^^^^^^^^^^^^\n+...\n+LL |     test_shuffle_lanes!(2, u8x2, simd_shuffle2, (2, 1));\n+   |     ---------------------------------------------------- in this macro invocation\n+   |\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error[E0511]: invalid monomorphization of `simd_shuffle4` intrinsic: shuffle index #0 is out of bounds (limit 8)\n+  --> $DIR/shuffle-not-out-of-bounds.rs:163:21\n+   |\n+LL |                     $y(vec1, vec2, ARR)\n+   |                     ^^^^^^^^^^^^^^^^^^^\n+...\n+LL |     test_shuffle_lanes!(4, u8x4, simd_shuffle4, (4, 3, 2, 1));\n+   |     ---------------------------------------------------------- in this macro invocation\n+   |\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error[E0511]: invalid monomorphization of `simd_shuffle8` intrinsic: shuffle index #0 is out of bounds (limit 16)\n+  --> $DIR/shuffle-not-out-of-bounds.rs:163:21\n+   |\n+LL |                     $y(vec1, vec2, ARR)\n+   |                     ^^^^^^^^^^^^^^^^^^^\n+...\n+LL |     test_shuffle_lanes!(8, u8x8, simd_shuffle8, (8, 7, 6, 5, 4, 3, 2, 1));\n+   |     ---------------------------------------------------------------------- in this macro invocation\n+   |\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error[E0511]: invalid monomorphization of `simd_shuffle16` intrinsic: shuffle index #0 is out of bounds (limit 32)\n+  --> $DIR/shuffle-not-out-of-bounds.rs:163:21\n+   |\n+LL |                       $y(vec1, vec2, ARR)\n+   |                       ^^^^^^^^^^^^^^^^^^^\n+...\n+LL | /     test_shuffle_lanes!(16, u8x16, simd_shuffle16,\n+LL | |         (16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1));\n+   | |_________________________________________________________________- in this macro invocation\n+   |\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error[E0511]: invalid monomorphization of `simd_shuffle32` intrinsic: shuffle index #0 is out of bounds (limit 64)\n+  --> $DIR/shuffle-not-out-of-bounds.rs:163:21\n+   |\n+LL |                       $y(vec1, vec2, ARR)\n+   |                       ^^^^^^^^^^^^^^^^^^^\n+...\n+LL | /     test_shuffle_lanes!(32, u8x32, simd_shuffle32,\n+LL | |         (32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16,\n+LL | |          15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1));\n+   | |_____________________________________________________________- in this macro invocation\n+   |\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error[E0511]: invalid monomorphization of `simd_shuffle64` intrinsic: shuffle index #0 is out of bounds (limit 128)\n+  --> $DIR/shuffle-not-out-of-bounds.rs:163:21\n+   |\n+LL |                       $y(vec1, vec2, ARR)\n+   |                       ^^^^^^^^^^^^^^^^^^^\n+...\n+LL | /     test_shuffle_lanes!(64, u8x64, simd_shuffle64,\n+LL | |         (64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49,\n+LL | |          48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33,\n+LL | |          32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17,\n+LL | |          16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1));\n+   | |_________________________________________________________________- in this macro invocation\n+   |\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: aborting due to previous error\n+error: aborting due to 6 previous errors\n \n For more information about this error, try `rustc --explain E0511`."}]}