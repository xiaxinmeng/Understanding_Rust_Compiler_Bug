{"sha": "6aebf3cc16aa0730b4e636c638c39ad1607b8f39", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhZWJmM2NjMTZhYTA3MzBiNGU2MzZjNjM4YzM5YWQxNjA3YjhmMzk=", "commit": {"author": {"name": "klutzy", "email": "klutzytheklutzy@gmail.com", "date": "2013-09-16T01:55:11Z"}, "committer": {"name": "klutzy", "email": "klutzytheklutzy@gmail.com", "date": "2013-09-16T02:08:17Z"}, "message": "extra::fileinput: Enable tests on Win32\n\nThey were blocked by #8810, but it works now.", "tree": {"sha": "f2f487f351b576361426457d8122d509032f39eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2f487f351b576361426457d8122d509032f39eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6aebf3cc16aa0730b4e636c638c39ad1607b8f39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6aebf3cc16aa0730b4e636c638c39ad1607b8f39", "html_url": "https://github.com/rust-lang/rust/commit/6aebf3cc16aa0730b4e636c638c39ad1607b8f39", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6aebf3cc16aa0730b4e636c638c39ad1607b8f39/comments", "author": {"login": "klutzy", "id": 1589355, "node_id": "MDQ6VXNlcjE1ODkzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1589355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klutzy", "html_url": "https://github.com/klutzy", "followers_url": "https://api.github.com/users/klutzy/followers", "following_url": "https://api.github.com/users/klutzy/following{/other_user}", "gists_url": "https://api.github.com/users/klutzy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klutzy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klutzy/subscriptions", "organizations_url": "https://api.github.com/users/klutzy/orgs", "repos_url": "https://api.github.com/users/klutzy/repos", "events_url": "https://api.github.com/users/klutzy/events{/privacy}", "received_events_url": "https://api.github.com/users/klutzy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "klutzy", "id": 1589355, "node_id": "MDQ6VXNlcjE1ODkzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1589355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klutzy", "html_url": "https://github.com/klutzy", "followers_url": "https://api.github.com/users/klutzy/followers", "following_url": "https://api.github.com/users/klutzy/following{/other_user}", "gists_url": "https://api.github.com/users/klutzy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klutzy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klutzy/subscriptions", "organizations_url": "https://api.github.com/users/klutzy/orgs", "repos_url": "https://api.github.com/users/klutzy/repos", "events_url": "https://api.github.com/users/klutzy/events{/privacy}", "received_events_url": "https://api.github.com/users/klutzy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20e84709535844e3568f756b0fabda90b6160776", "url": "https://api.github.com/repos/rust-lang/rust/commits/20e84709535844e3568f756b0fabda90b6160776", "html_url": "https://github.com/rust-lang/rust/commit/20e84709535844e3568f756b0fabda90b6160776"}], "stats": {"total": 9, "additions": 0, "deletions": 9}, "files": [{"sha": "23d80362e3cb74da110fae75a23e99102d86ff34", "filename": "src/libextra/fileinput.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6aebf3cc16aa0730b4e636c638c39ad1607b8f39/src%2Flibextra%2Ffileinput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6aebf3cc16aa0730b4e636c638c39ad1607b8f39/src%2Flibextra%2Ffileinput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ffileinput.rs?ref=6aebf3cc16aa0730b4e636c638c39ad1607b8f39", "patch": "@@ -433,7 +433,6 @@ mod test {\n     }\n \n     #[test]\n-    #[ignore(cfg(windows))] // FIXME(#8810): rt::io::file and windows don't agree\n     fn test_make_path_option_vec() {\n         let strs = [~\"some/path\",\n                     ~\"some/other/path\"];\n@@ -448,7 +447,6 @@ mod test {\n     }\n \n     #[test]\n-    #[ignore(cfg(windows))] // FIXME(#8810): rt::io::file and windows don't agree\n     fn test_fileinput_read_byte() {\n         let filenames = make_path_option_vec(vec::from_fn(\n             3,\n@@ -479,7 +477,6 @@ mod test {\n     }\n \n     #[test]\n-    #[ignore(cfg(windows))] // FIXME(#8810): rt::io::file and windows don't agree\n     fn test_fileinput_read() {\n         let filenames = make_path_option_vec(vec::from_fn(\n             3,\n@@ -500,7 +497,6 @@ mod test {\n     }\n \n     #[test]\n-    #[ignore(cfg(windows))] // FIXME(#8810): rt::io::file and windows don't agree\n     fn test_input_vec() {\n         let mut all_lines = ~[];\n         let filenames = make_path_option_vec(vec::from_fn(\n@@ -524,7 +520,6 @@ mod test {\n     }\n \n     #[test]\n-    #[ignore(cfg(windows))] // FIXME(#8810): rt::io::file and windows don't agree\n     fn test_input_vec_state() {\n         let filenames = make_path_option_vec(vec::from_fn(\n             3,\n@@ -547,7 +542,6 @@ mod test {\n     }\n \n     #[test]\n-    #[ignore(cfg(windows))] // FIXME(#8810): rt::io::file and windows don't agree\n     fn test_empty_files() {\n         let filenames = make_path_option_vec(vec::from_fn(\n             3,\n@@ -572,7 +566,6 @@ mod test {\n     }\n \n     #[test]\n-    #[ignore(cfg(windows))] // FIXME(#8810): rt::io::file and windows don't agree\n     fn test_no_trailing_newline() {\n         let f1 =\n             Some(Path(\"tmp/lib-fileinput-test-no-trailing-newline-1.tmp\"));\n@@ -598,7 +591,6 @@ mod test {\n \n \n     #[test]\n-    #[ignore(cfg(windows))] // FIXME(#8810): rt::io::file and windows don't agree\n     fn test_next_file() {\n         let filenames = make_path_option_vec(vec::from_fn(\n             3,\n@@ -630,7 +622,6 @@ mod test {\n \n     #[test]\n     #[should_fail]\n-    #[ignore(cfg(windows))] // FIXME(#8810): rt::io::file and windows don't agree\n     fn test_input_vec_missing_file() {\n         do input_vec(make_path_option_vec([~\"this/file/doesnt/exist\"], true)) |line| {\n             println(line);"}]}