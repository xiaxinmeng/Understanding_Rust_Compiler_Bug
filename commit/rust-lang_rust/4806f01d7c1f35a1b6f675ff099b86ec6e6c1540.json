{"sha": "4806f01d7c1f35a1b6f675ff099b86ec6e6c1540", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4MDZmMDFkN2MxZjM1YTFiNmY2NzVmZjA5OWI4NmVjNmU2YzE1NDA=", "commit": {"author": {"name": "Nick Sweeting", "email": "git@nicksweeting.com", "date": "2017-03-27T20:34:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-03-27T20:34:13Z"}, "message": "Fix tidy errors and simplify example", "tree": {"sha": "dda45b0879739bb94fbef303b48ec72ba0de5e1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dda45b0879739bb94fbef303b48ec72ba0de5e1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4806f01d7c1f35a1b6f675ff099b86ec6e6c1540", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4806f01d7c1f35a1b6f675ff099b86ec6e6c1540", "html_url": "https://github.com/rust-lang/rust/commit/4806f01d7c1f35a1b6f675ff099b86ec6e6c1540", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4806f01d7c1f35a1b6f675ff099b86ec6e6c1540/comments", "author": {"login": "pirate", "id": 511499, "node_id": "MDQ6VXNlcjUxMTQ5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/511499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pirate", "html_url": "https://github.com/pirate", "followers_url": "https://api.github.com/users/pirate/followers", "following_url": "https://api.github.com/users/pirate/following{/other_user}", "gists_url": "https://api.github.com/users/pirate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pirate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pirate/subscriptions", "organizations_url": "https://api.github.com/users/pirate/orgs", "repos_url": "https://api.github.com/users/pirate/repos", "events_url": "https://api.github.com/users/pirate/events{/privacy}", "received_events_url": "https://api.github.com/users/pirate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04fbec1a0cb7467834bd264b80350b1cade8b4ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/04fbec1a0cb7467834bd264b80350b1cade8b4ca", "html_url": "https://github.com/rust-lang/rust/commit/04fbec1a0cb7467834bd264b80350b1cade8b4ca"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "1b0c992ba0976605fa7b10e9abb7df47ad74c73b", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4806f01d7c1f35a1b6f675ff099b86ec6e6c1540/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4806f01d7c1f35a1b6f675ff099b86ec6e6c1540/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=4806f01d7c1f35a1b6f675ff099b86ec6e6c1540", "patch": "@@ -145,16 +145,14 @@\n //! # }\n //! ```\n //!\n-//! Note that you cannot use the `?` operator in functions that do not return a `Result<T, E>` (e.g. `main`).\n-//! Instead, you can `match` on the return value to catch any possible errors:\n-//! \n+//! Note that you cannot use the `?` operator in functions that do not return\n+//! a `Result<T, E>` (e.g. `main`). Instead, you can call `.unwrap()` or `match`\n+//! on the return value to catch any possible errors:\n+//!\n //! ```\n //! let mut input = String::new();\n-//! \n-//! match io::stdin().read_line(&mut input) {\n-//!     Err(why) => panic!(\"Failed to read input: {}\", why.description()),\n-//!     Ok(_) => println!(\"You typed: {}\", input.trim()),\n-//! }\n+//!\n+//! io::stdin().read_line(&mut input).unwrap();\n //! ```\n //!\n //! And a very common source of output is standard output:"}]}