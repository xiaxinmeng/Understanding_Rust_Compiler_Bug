{"sha": "8fc14b6e626b5f0b98fb0cee425b7813b9de9851", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmYzE0YjZlNjI2YjVmMGI5OGZiMGNlZTQyNWI3ODEzYjlkZTk4NTE=", "commit": {"author": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2013-06-11T18:19:47Z"}, "committer": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-06-12T06:46:38Z"}, "message": "librustc: Don't allow duplicate methods on a trait.", "tree": {"sha": "de8211a9590cd09bc2974378b4265215d80cb9a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de8211a9590cd09bc2974378b4265215d80cb9a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8fc14b6e626b5f0b98fb0cee425b7813b9de9851", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8fc14b6e626b5f0b98fb0cee425b7813b9de9851", "html_url": "https://github.com/rust-lang/rust/commit/8fc14b6e626b5f0b98fb0cee425b7813b9de9851", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8fc14b6e626b5f0b98fb0cee425b7813b9de9851/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a52ff078623137ac451ff9ed0bfa145183bfa56", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a52ff078623137ac451ff9ed0bfa145183bfa56", "html_url": "https://github.com/rust-lang/rust/commit/4a52ff078623137ac451ff9ed0bfa145183bfa56"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "8c7751c879f88dc664dd1bebe063e78eccfeaca7", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8fc14b6e626b5f0b98fb0cee425b7813b9de9851/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8fc14b6e626b5f0b98fb0cee425b7813b9de9851/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=8fc14b6e626b5f0b98fb0cee425b7813b9de9851", "patch": "@@ -1333,7 +1333,7 @@ impl Resolver {\n                 }\n \n                 // Add the names of all the methods to the trait info.\n-                let mut method_names = HashSet::new();\n+                let mut method_names = HashMap::new();\n                 for methods.each |method| {\n                     let ty_m = trait_method_to_ty_method(method);\n \n@@ -1357,13 +1357,22 @@ impl Resolver {\n                                                               ty_m.span);\n                         }\n                         _ => {\n-                            method_names.insert(ident);\n+                            // Make sure you can't define duplicate methods\n+                            let old_sp = method_names.find_or_insert(ident, ty_m.span);\n+                            if *old_sp != ty_m.span {\n+                                self.session.span_err(ty_m.span,\n+                                                      fmt!(\"duplicate definition of method %s\",\n+                                                           *self.session.str_of(ident)));\n+                                self.session.span_note(*old_sp,\n+                                                       fmt!(\"first definition of method %s here\",\n+                                                            *self.session.str_of(ident)));\n+                            }\n                         }\n                     }\n                 }\n \n                 let def_id = local_def(item.id);\n-                for method_names.each |name| {\n+                for method_names.each |name, _| {\n                     if !self.method_map.contains_key(name) {\n                         self.method_map.insert(*name, HashSet::new());\n                     }"}]}