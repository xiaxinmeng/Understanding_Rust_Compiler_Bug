{"sha": "3b196fb391ea9c869a798005e0fd7c84214518f4", "node_id": "C_kwDOAAsO6NoAKDNiMTk2ZmIzOTFlYTljODY5YTc5ODAwNWUwZmQ3Yzg0MjE0NTE4ZjQ", "commit": {"author": {"name": "Mads Ravn", "email": "madsravn@gmail.com", "date": "2023-04-25T11:50:50Z"}, "committer": {"name": "Mads Ravn", "email": "madsravn@gmail.com", "date": "2023-04-25T11:50:50Z"}, "message": "Updating Wake example to use new 'pin!' macro", "tree": {"sha": "dba7553a024c0a9a2bc8019d4a5256274b7a25ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dba7553a024c0a9a2bc8019d4a5256274b7a25ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b196fb391ea9c869a798005e0fd7c84214518f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b196fb391ea9c869a798005e0fd7c84214518f4", "html_url": "https://github.com/rust-lang/rust/commit/3b196fb391ea9c869a798005e0fd7c84214518f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b196fb391ea9c869a798005e0fd7c84214518f4/comments", "author": {"login": "madsravn", "id": 399452, "node_id": "MDQ6VXNlcjM5OTQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/399452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/madsravn", "html_url": "https://github.com/madsravn", "followers_url": "https://api.github.com/users/madsravn/followers", "following_url": "https://api.github.com/users/madsravn/following{/other_user}", "gists_url": "https://api.github.com/users/madsravn/gists{/gist_id}", "starred_url": "https://api.github.com/users/madsravn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/madsravn/subscriptions", "organizations_url": "https://api.github.com/users/madsravn/orgs", "repos_url": "https://api.github.com/users/madsravn/repos", "events_url": "https://api.github.com/users/madsravn/events{/privacy}", "received_events_url": "https://api.github.com/users/madsravn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "madsravn", "id": 399452, "node_id": "MDQ6VXNlcjM5OTQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/399452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/madsravn", "html_url": "https://github.com/madsravn", "followers_url": "https://api.github.com/users/madsravn/followers", "following_url": "https://api.github.com/users/madsravn/following{/other_user}", "gists_url": "https://api.github.com/users/madsravn/gists{/gist_id}", "starred_url": "https://api.github.com/users/madsravn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/madsravn/subscriptions", "organizations_url": "https://api.github.com/users/madsravn/orgs", "repos_url": "https://api.github.com/users/madsravn/repos", "events_url": "https://api.github.com/users/madsravn/events{/privacy}", "received_events_url": "https://api.github.com/users/madsravn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91b61a4ad618c1abc2af43a58695de185ef1e513", "url": "https://api.github.com/repos/rust-lang/rust/commits/91b61a4ad618c1abc2af43a58695de185ef1e513", "html_url": "https://github.com/rust-lang/rust/commit/91b61a4ad618c1abc2af43a58695de185ef1e513"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "5d9772b878b03a88e547d9d2c062fb1ac826f3b3", "filename": "library/alloc/src/task.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3b196fb391ea9c869a798005e0fd7c84214518f4/library%2Falloc%2Fsrc%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b196fb391ea9c869a798005e0fd7c84214518f4/library%2Falloc%2Fsrc%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Ftask.rs?ref=3b196fb391ea9c869a798005e0fd7c84214518f4", "patch": "@@ -39,6 +39,7 @@ use crate::sync::Arc;\n /// use std::sync::Arc;\n /// use std::task::{Context, Poll, Wake};\n /// use std::thread::{self, Thread};\n+/// use core::pin::pin;\n ///\n /// /// A waker that wakes up the current thread when called.\n /// struct ThreadWaker(Thread);\n@@ -52,7 +53,7 @@ use crate::sync::Arc;\n /// /// Run a future to completion on the current thread.\n /// fn block_on<T>(fut: impl Future<Output = T>) -> T {\n ///     // Pin the future so it can be polled.\n-///     let mut fut = Box::pin(fut);\n+///     let mut fut = pin!(fut);\n ///\n ///     // Create a new context to be passed to the future.\n ///     let t = thread::current();"}]}