{"sha": "de1cd4b36d57b33f4217a46c0c52fbe1eb4530a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlMWNkNGIzNmQ1N2IzM2Y0MjE3YTQ2YzBjNTJmYmUxZWI0NTMwYTE=", "commit": {"author": {"name": "Tunahan Karlibas", "email": "dvt.tnhn.krlbs@gmail.com", "date": "2020-12-09T11:53:35Z"}, "committer": {"name": "Tunahan Karlibas", "email": "dvt.tnhn.krlbs@gmail.com", "date": "2020-12-09T11:53:35Z"}, "message": "Extra assertions in eval_body_using_ecx to disallow queries for\nfunctions that does allocations", "tree": {"sha": "333e638096048a184e570255d08fcf0aa7280a13", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/333e638096048a184e570255d08fcf0aa7280a13"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de1cd4b36d57b33f4217a46c0c52fbe1eb4530a1", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEjRc1/OFrtBrFGXTf7MSWjcnUU94FAl/Qu0wACgkQ7MSWjcnU\nU96hZg//fXCD9f2FHRf/hit8BqdRj7UOGew0tPiTgkRJE7etwFiQgv2yhqdYiAPZ\n4CKyuPa+kmcCRNUJzgIarfqhek820Is4zoUrfLaqFsWKu0fFo4K2j23Q0m2xstJ9\nXavK4aZbsWVfdFgId9tnILXDFMSsv47ojhFvA1Lqxzp64Ow6auVczrAmh1HSieIB\neYec9STOdMHQspKoWMby4jRohiYd+SImm1zdY20a2zZxluliWy/ZWik04iOrhDfB\nWFiMKerFcQrpFRA71+z5U+pwRBAStRJ9aD6CIEVlttv5EPHfOQEPYkfi+kqfGuKg\nV98ZkxJhkAgVanQuaSIehCBdWVeQY3egW0SaFMo+jhgSA0COObCqOOyQIakWz0JY\nqmeaUYMb1vZ25sWEyMnI7bcGmj5Tp54ZG+BB97BjcttER+sdJByMVjh1eG9Owg41\n8twKvbZSaBtXCdUk0JtPKODEdkyrOFBpKL4gquNtZYhaV9jjv3nKzl9IXbL3Cr0N\nJHbFBrR4m3buhh6154wOQ3quvfOrxqHeNnfr82L7ZgoDycOuuLXU/Rj6cbK5ipp5\nfwTIXPfn7ggKE2r7zHCHKKQpI/Of/1IUhCOdCgGZb1Zew+Fkmcc1q9i6/jFvEIiy\nrOyb/O0d6y0gID56BgsUzWdyu7Wy2Rp4mgrOO8TNwMmtQ5OftT0=\n=O1/z\n-----END PGP SIGNATURE-----", "payload": "tree 333e638096048a184e570255d08fcf0aa7280a13\nparent 7cb74ed1917cc982830d6b7b7bac7e8a7f4d271c\nauthor Tunahan Karlibas <dvt.tnhn.krlbs@gmail.com> 1607514815 +0300\ncommitter Tunahan Karlibas <dvt.tnhn.krlbs@gmail.com> 1607514815 +0300\n\nExtra assertions in eval_body_using_ecx to disallow queries for\nfunctions that does allocations\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de1cd4b36d57b33f4217a46c0c52fbe1eb4530a1", "html_url": "https://github.com/rust-lang/rust/commit/de1cd4b36d57b33f4217a46c0c52fbe1eb4530a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de1cd4b36d57b33f4217a46c0c52fbe1eb4530a1/comments", "author": null, "committer": null, "parents": [{"sha": "7cb74ed1917cc982830d6b7b7bac7e8a7f4d271c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7cb74ed1917cc982830d6b7b7bac7e8a7f4d271c", "html_url": "https://github.com/rust-lang/rust/commit/7cb74ed1917cc982830d6b7b7bac7e8a7f4d271c"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "80b58642136eeaf1db1097a803f5571ed0afa6b3", "filename": "compiler/rustc_middle/src/mir/interpret/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/de1cd4b36d57b33f4217a46c0c52fbe1eb4530a1/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de1cd4b36d57b33f4217a46c0c52fbe1eb4530a1/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fmod.rs?ref=de1cd4b36d57b33f4217a46c0c52fbe1eb4530a1", "patch": "@@ -132,7 +132,6 @@ pub use self::pointer::{Pointer, PointerArithmetic};\n /// Uniquely identifies one of the following:\n /// - A constant\n /// - A static\n-/// - A const fn where all arguments (if any) are zero-sized types\n #[derive(Copy, Clone, Debug, Eq, PartialEq, Hash, TyEncodable, TyDecodable)]\n #[derive(HashStable, Lift)]\n pub struct GlobalId<'tcx> {"}, {"sha": "4d14e45c2e9357fc67cab0240f951062f599ebeb", "filename": "compiler/rustc_mir/src/const_eval/eval_queries.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/de1cd4b36d57b33f4217a46c0c52fbe1eb4530a1/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Feval_queries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de1cd4b36d57b33f4217a46c0c52fbe1eb4530a1/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Feval_queries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Feval_queries.rs?ref=de1cd4b36d57b33f4217a46c0c52fbe1eb4530a1", "patch": "@@ -30,6 +30,13 @@ fn eval_body_using_ecx<'mir, 'tcx>(\n     body: &'mir mir::Body<'tcx>,\n ) -> InterpResult<'tcx, MPlaceTy<'tcx>> {\n     debug!(\"eval_body_using_ecx: {:?}, {:?}\", cid, ecx.param_env);\n+    assert!(\n+        cid.promoted.is_some()\n+            || matches!(\n+                ecx.tcx.hir().body_const_context(def_id),\n+                Some(ConstContext::Const | ConstContext::Static(_))\n+            )\n+    );\n     let tcx = *ecx.tcx;\n     let layout = ecx.layout_of(body.return_ty().subst(tcx, cid.instance.substs))?;\n     assert!(!layout.is_unsized());"}]}