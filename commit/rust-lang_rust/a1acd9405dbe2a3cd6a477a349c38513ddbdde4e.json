{"sha": "a1acd9405dbe2a3cd6a477a349c38513ddbdde4e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExYWNkOTQwNWRiZTJhM2NkNmE0NzdhMzQ5YzM4NTEzZGRiZGRlNGU=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-11-03T12:27:35Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-11-03T12:27:35Z"}, "message": "don't allocate on `drop` calls", "tree": {"sha": "ab14adb947938ee68c4272b1af483927336f5ced", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab14adb947938ee68c4272b1af483927336f5ced"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1acd9405dbe2a3cd6a477a349c38513ddbdde4e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJYGy03AAoJEFbW7qD8Z6xGZzMP/ieWFroa+T2nGLuJZhkr4VLG\noUAGwzcCAw4OABc0GzUgPCgvk7qWrZBEspXC4RKbLgMEpVf/AnW/zFzyr9VEvi3u\nSV2HV2kaDzoGDPRv69KEcCMkZcgKaTsvjtDT4iYdujF2cIHGG8RqjEfOej/2gGVu\nvePNVih7LzCdlTLjJy78L6awNBkaPPGTrwRFxYeP1KT7wez2v+qY/yIfcVnsWuaO\nomIX4uw7LcP+HT44j8XktIEZf2nq8HxQTFfj4mSwXznKfKO0Et3xjCZki8yOPhMe\nH0P9zkWNfdnqdqqm5yozlr4r4sumliNNBrPUtNy6LjvcBZBYFvJBMlxj88yBPKLT\nSPm1ndHn/sfqs6qCkV7LGRs4KxnyCmKLGFeoopTPisgp/boBRHrm6/7FzjiYYQgY\nwN4vCGjJdwGCnZomq55O9T8+5q26F9ebuRva22JU9HxBux7w9DAkI9zwV95dwhMD\nQzSG6GimoWs33GVc2BdHWqmqh4qpPh0DDS03ieL5DXyoe4Are4VG2rB4irirLTMT\nZdxBJtm4GNmIwL7FZXvAt6rEex3WkXxyiUUfvJ28UK7JwPSCqrheKWW1nPIZqf+g\novyWQbxmzleqEv+ATwA9HUIaIReqCDlZ1/0NgspUK7pJrzxZM7dWTR28nu/NRY5I\ncTPHJGrbtiM/wArJNWw4\n=O/Sw\n-----END PGP SIGNATURE-----", "payload": "tree ab14adb947938ee68c4272b1af483927336f5ced\nparent a9b984d21eec97c95d94c72bfd3f386e55f37b95\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1478176055 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1478176055 +0100\n\ndon't allocate on `drop` calls"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1acd9405dbe2a3cd6a477a349c38513ddbdde4e", "html_url": "https://github.com/rust-lang/rust/commit/a1acd9405dbe2a3cd6a477a349c38513ddbdde4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1acd9405dbe2a3cd6a477a349c38513ddbdde4e/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9b984d21eec97c95d94c72bfd3f386e55f37b95", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9b984d21eec97c95d94c72bfd3f386e55f37b95", "html_url": "https://github.com/rust-lang/rust/commit/a9b984d21eec97c95d94c72bfd3f386e55f37b95"}], "stats": {"total": 18, "additions": 6, "deletions": 12}, "files": [{"sha": "38768483d1d8723f700804f8341cc7c4c4044b65", "filename": "src/interpreter/terminator/mod.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a1acd9405dbe2a3cd6a477a349c38513ddbdde4e/src%2Finterpreter%2Fterminator%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1acd9405dbe2a3cd6a477a349c38513ddbdde4e/src%2Finterpreter%2Fterminator%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fterminator%2Fmod.rs?ref=a1acd9405dbe2a3cd6a477a349c38513ddbdde4e", "patch": "@@ -104,13 +104,10 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n             }\n \n             Drop { ref location, target, .. } => {\n-                // FIXME(solson)\n-                let lvalue = self.eval_lvalue(location)?;\n-                let lvalue = self.force_allocation(lvalue)?;\n+                let val = self.eval_and_read_lvalue(location)?;\n \n-                let ptr = lvalue.to_ptr();\n                 let ty = self.lvalue_ty(location);\n-                self.drop(ptr, ty)?;\n+                self.drop(val, ty)?;\n                 self.goto_block(target);\n             }\n \n@@ -471,7 +468,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n         self.tcx.type_needs_drop_given_env(ty, &self.tcx.empty_parameter_environment())\n     }\n \n-    fn drop(&mut self, ptr: Pointer, ty: Ty<'tcx>) -> EvalResult<'tcx, ()> {\n+    fn drop(&mut self, val: Value, ty: Ty<'tcx>) -> EvalResult<'tcx, ()> {\n         if !self.type_needs_drop(ty) {\n             debug!(\"no need to drop {:?}\", ty);\n             return Ok(());\n@@ -482,7 +479,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n \n         match ty.sty {\n             ty::TyBox(_contents_ty) => {\n-                let contents_ptr = self.memory.read_ptr(ptr)?;\n+                let contents_ptr = val.read_ptr(&self.memory)?;\n                 // self.drop(contents_ptr, contents_ty)?;\n                 trace!(\"-deallocating box\");\n                 self.memory.deallocate(contents_ptr)?;"}, {"sha": "d9285a41e41ab545d38105fce596da952d01ab98", "filename": "src/interpreter/value.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a1acd9405dbe2a3cd6a477a349c38513ddbdde4e/src%2Finterpreter%2Fvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1acd9405dbe2a3cd6a477a349c38513ddbdde4e/src%2Finterpreter%2Fvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fvalue.rs?ref=a1acd9405dbe2a3cd6a477a349c38513ddbdde4e", "patch": "@@ -23,12 +23,9 @@ impl<'a, 'tcx: 'a> Value {\n         match *self {\n             ByRef(ptr) => mem.read_ptr(ptr),\n \n-            ByVal(ptr) if ptr.try_as_ptr().is_some() => {\n-                Ok(ptr.try_as_ptr().unwrap())\n+            ByVal(ptr) | ByValPair(ptr, _) => {\n+                Ok(ptr.try_as_ptr().expect(\"unimplemented: `read_ptr` on non-ptr primval\"))\n             }\n-\n-            ByValPair(..) => unimplemented!(),\n-            ByVal(_other) => unimplemented!(),\n         }\n     }\n "}]}