{"sha": "4ea2f8e48fb9c69432b59d5f9f90a576cd0845da", "node_id": "C_kwDOAAsO6NoAKDRlYTJmOGU0OGZiOWM2OTQzMmI1OWQ1ZjlmOTBhNTc2Y2QwODQ1ZGE", "commit": {"author": {"name": "Amos Wenger", "email": "amoswenger@gmail.com", "date": "2022-07-22T15:21:33Z"}, "committer": {"name": "Amos Wenger", "email": "amoswenger@gmail.com", "date": "2022-07-24T08:37:47Z"}, "message": "Add test step for rust-analyzer, run it by default", "tree": {"sha": "5418932f2b5a74264e10ca00d49821203b248139", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5418932f2b5a74264e10ca00d49821203b248139"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ea2f8e48fb9c69432b59d5f9f90a576cd0845da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ea2f8e48fb9c69432b59d5f9f90a576cd0845da", "html_url": "https://github.com/rust-lang/rust/commit/4ea2f8e48fb9c69432b59d5f9f90a576cd0845da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ea2f8e48fb9c69432b59d5f9f90a576cd0845da/comments", "author": {"login": "fasterthanlime", "id": 7998310, "node_id": "MDQ6VXNlcjc5OTgzMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7998310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fasterthanlime", "html_url": "https://github.com/fasterthanlime", "followers_url": "https://api.github.com/users/fasterthanlime/followers", "following_url": "https://api.github.com/users/fasterthanlime/following{/other_user}", "gists_url": "https://api.github.com/users/fasterthanlime/gists{/gist_id}", "starred_url": "https://api.github.com/users/fasterthanlime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fasterthanlime/subscriptions", "organizations_url": "https://api.github.com/users/fasterthanlime/orgs", "repos_url": "https://api.github.com/users/fasterthanlime/repos", "events_url": "https://api.github.com/users/fasterthanlime/events{/privacy}", "received_events_url": "https://api.github.com/users/fasterthanlime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fasterthanlime", "id": 7998310, "node_id": "MDQ6VXNlcjc5OTgzMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7998310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fasterthanlime", "html_url": "https://github.com/fasterthanlime", "followers_url": "https://api.github.com/users/fasterthanlime/followers", "following_url": "https://api.github.com/users/fasterthanlime/following{/other_user}", "gists_url": "https://api.github.com/users/fasterthanlime/gists{/gist_id}", "starred_url": "https://api.github.com/users/fasterthanlime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fasterthanlime/subscriptions", "organizations_url": "https://api.github.com/users/fasterthanlime/orgs", "repos_url": "https://api.github.com/users/fasterthanlime/repos", "events_url": "https://api.github.com/users/fasterthanlime/events{/privacy}", "received_events_url": "https://api.github.com/users/fasterthanlime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d59abcf9b372548cc1664fb2a2cf34fc900991de", "url": "https://api.github.com/repos/rust-lang/rust/commits/d59abcf9b372548cc1664fb2a2cf34fc900991de", "html_url": "https://github.com/rust-lang/rust/commit/d59abcf9b372548cc1664fb2a2cf34fc900991de"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "8876f70c8c61cf0daa6ade1dfaea2cacb6f9a5bc", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4ea2f8e48fb9c69432b59d5f9f90a576cd0845da/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ea2f8e48fb9c69432b59d5f9f90a576cd0845da/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=4ea2f8e48fb9c69432b59d5f9f90a576cd0845da", "patch": "@@ -649,6 +649,7 @@ impl<'a> Builder<'a> {\n                 test::Cargotest,\n                 test::Cargo,\n                 test::Rls,\n+                test::RustAnalyzer,\n                 test::ErrorIndex,\n                 test::Distcheck,\n                 test::RunMakeFullDeps,"}, {"sha": "9578520c4297921577817a58e89e108fdc22d365", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/4ea2f8e48fb9c69432b59d5f9f90a576cd0845da/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ea2f8e48fb9c69432b59d5f9f90a576cd0845da/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=4ea2f8e48fb9c69432b59d5f9f90a576cd0845da", "patch": "@@ -352,6 +352,55 @@ impl Step for Rls {\n     }\n }\n \n+#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]\n+pub struct RustAnalyzer {\n+    stage: u32,\n+    host: TargetSelection,\n+}\n+\n+impl Step for RustAnalyzer {\n+    type Output = ();\n+    const ONLY_HOSTS: bool = true;\n+    const DEFAULT: bool = true;\n+\n+    fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n+        run.path(\"src/tools/rust-analyzer\")\n+    }\n+\n+    fn make_run(run: RunConfig<'_>) {\n+        run.builder.ensure(Self { stage: run.builder.top_stage, host: run.target });\n+    }\n+\n+    /// Runs `cargo test` for rust-analyzer\n+    fn run(self, builder: &Builder<'_>) {\n+        let stage = self.stage;\n+        let host = self.host;\n+        let compiler = builder.compiler(stage, host);\n+\n+        builder.ensure(tool::RustAnalyzer { compiler, target: self.host }).expect(\"in-tree tool\");\n+\n+        let path = \"src/tools/rust-analyzer\";\n+        let mut cargo = tool::prepare_tool_cargo(\n+            builder,\n+            compiler,\n+            Mode::ToolStd,\n+            host,\n+            \"test\",\n+            path,\n+            SourceType::InTree,\n+            &[\"rust-analyzer/in-rust-tree\".to_owned()],\n+        );\n+\n+        let dir = builder.src.join(path);\n+        cargo.env(\"CARGO_WORKSPACE_DIR\", &dir);\n+\n+        cargo.add_rustc_lib_path(builder, compiler);\n+        cargo.arg(\"--\").args(builder.config.cmd.test_args());\n+\n+        builder.run(&mut cargo.into());\n+    }\n+}\n+\n #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]\n pub struct Rustfmt {\n     stage: u32,"}]}