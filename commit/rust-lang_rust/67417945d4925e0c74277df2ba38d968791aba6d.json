{"sha": "67417945d4925e0c74277df2ba38d968791aba6d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3NDE3OTQ1ZDQ5MjVlMGM3NDI3N2RmMmJhMzhkOTY4NzkxYWJhNmQ=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-11-28T13:33:35Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-08T11:20:51Z"}, "message": "Detect all variants of stack removals", "tree": {"sha": "edd32386a8e10eac67eab04fa77768ac077f2d08", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edd32386a8e10eac67eab04fa77768ac077f2d08"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67417945d4925e0c74277df2ba38d968791aba6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67417945d4925e0c74277df2ba38d968791aba6d", "html_url": "https://github.com/rust-lang/rust/commit/67417945d4925e0c74277df2ba38d968791aba6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67417945d4925e0c74277df2ba38d968791aba6d/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0de213e421fa64f293d4247a2e7225104d8b6d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0de213e421fa64f293d4247a2e7225104d8b6d9", "html_url": "https://github.com/rust-lang/rust/commit/a0de213e421fa64f293d4247a2e7225104d8b6d9"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "be54b7f5ababb2c5237336ad40de2fabf4115fd3", "filename": "src/stacked_borrows.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/67417945d4925e0c74277df2ba38d968791aba6d/src%2Fstacked_borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67417945d4925e0c74277df2ba38d968791aba6d/src%2Fstacked_borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstacked_borrows.rs?ref=67417945d4925e0c74277df2ba38d968791aba6d", "patch": "@@ -271,6 +271,11 @@ impl<'tcx> Stack {\n \n     /// Check if the given item is protected.\n     fn check_protector(item: &Item, tag: Option<Tag>, global: &GlobalState) -> InterpResult<'tcx> {\n+        if let Tag::Tagged(id) = item.tag {\n+            if Some(id) == global.tracked_id {\n+                throw_unsup!(Unsupported(format!(\"disabling item {:?} for tag {:?}\", item, tag)));\n+            }\n+        }\n         if let Some(call) = item.protector {\n             if global.is_active(call) {\n                 if let Some(tag) = tag {\n@@ -313,11 +318,6 @@ impl<'tcx> Stack {\n             let first_incompatible_idx = self.find_first_write_incompatible(granting_idx);\n             for item in self.borrows.drain(first_incompatible_idx..).rev() {\n                 trace!(\"access: popping item {:?}\", item);\n-                if let Tag::Tagged(id) = item.tag {\n-                    if Some(id) == global.tracked_id {\n-                        throw_unsup!(Unsupported(format!(\"popped id {}\", id)));\n-                    }\n-                }\n                 Stack::check_protector(&item, Some(tag), global)?;\n             }\n         } else {"}, {"sha": "e691603b53416608b6cfd7ce222d491ec36a57c8", "filename": "tests/compile-fail/stacked_borrows/track_id.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/67417945d4925e0c74277df2ba38d968791aba6d/tests%2Fcompile-fail%2Fstacked_borrows%2Ftrack_id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67417945d4925e0c74277df2ba38d968791aba6d/tests%2Fcompile-fail%2Fstacked_borrows%2Ftrack_id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Ftrack_id.rs?ref=67417945d4925e0c74277df2ba38d968791aba6d", "patch": "@@ -13,7 +13,7 @@ fn main() {\n     let reference = unsafe { &*raw }; // freeze\n     let ptr = reference as *const _ as *mut i32; // raw ptr, with raw tag\n     let _mut_ref: &mut i32 = unsafe { mem::transmute(ptr) }; // &mut, with raw tag\n-    //~^ ERROR popped id 1372\n+    //~^ ERROR disabling item [SharedReadOnly for <1372>] for tag Some(<untagged>)\n     // Now we retag, making our ref top-of-stack -- and, in particular, unfreezing.\n     let _val = *reference;\n }"}]}