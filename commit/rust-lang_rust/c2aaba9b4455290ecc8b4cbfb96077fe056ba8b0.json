{"sha": "c2aaba9b4455290ecc8b4cbfb96077fe056ba8b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyYWFiYTliNDQ1NTI5MGVjYzhiNGNiZmI5NjA3N2ZlMDU2YmE4YjA=", "commit": {"author": {"name": "Sunjay Varma", "email": "varma.sunjay@gmail.com", "date": "2017-11-19T05:00:15Z"}, "committer": {"name": "Sunjay Varma", "email": "varma.sunjay@gmail.com", "date": "2017-12-01T06:26:29Z"}, "message": "Specifically gating generic_associated_types feature on associated Type declarations", "tree": {"sha": "e0679ac65209160350ad660f18c1d81f464ee64a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0679ac65209160350ad660f18c1d81f464ee64a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2aaba9b4455290ecc8b4cbfb96077fe056ba8b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2aaba9b4455290ecc8b4cbfb96077fe056ba8b0", "html_url": "https://github.com/rust-lang/rust/commit/c2aaba9b4455290ecc8b4cbfb96077fe056ba8b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2aaba9b4455290ecc8b4cbfb96077fe056ba8b0/comments", "author": {"login": "sunjay", "id": 530939, "node_id": "MDQ6VXNlcjUzMDkzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/530939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunjay", "html_url": "https://github.com/sunjay", "followers_url": "https://api.github.com/users/sunjay/followers", "following_url": "https://api.github.com/users/sunjay/following{/other_user}", "gists_url": "https://api.github.com/users/sunjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunjay/subscriptions", "organizations_url": "https://api.github.com/users/sunjay/orgs", "repos_url": "https://api.github.com/users/sunjay/repos", "events_url": "https://api.github.com/users/sunjay/events{/privacy}", "received_events_url": "https://api.github.com/users/sunjay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunjay", "id": 530939, "node_id": "MDQ6VXNlcjUzMDkzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/530939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunjay", "html_url": "https://github.com/sunjay", "followers_url": "https://api.github.com/users/sunjay/followers", "following_url": "https://api.github.com/users/sunjay/following{/other_user}", "gists_url": "https://api.github.com/users/sunjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunjay/subscriptions", "organizations_url": "https://api.github.com/users/sunjay/orgs", "repos_url": "https://api.github.com/users/sunjay/repos", "events_url": "https://api.github.com/users/sunjay/events{/privacy}", "received_events_url": "https://api.github.com/users/sunjay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e565b5bbdd93b2b2bf9b5b7867320201c6a0cb81", "url": "https://api.github.com/repos/rust-lang/rust/commits/e565b5bbdd93b2b2bf9b5b7867320201c6a0cb81", "html_url": "https://github.com/rust-lang/rust/commit/e565b5bbdd93b2b2bf9b5b7867320201c6a0cb81"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "09cbd3d591c3711f26998b60d4886ff74bdf212f", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c2aaba9b4455290ecc8b4cbfb96077fe056ba8b0/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2aaba9b4455290ecc8b4cbfb96077fe056ba8b0/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=c2aaba9b4455290ecc8b4cbfb96077fe056ba8b0", "patch": "@@ -1617,13 +1617,17 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n                     gate_feature_post!(&self, const_fn, ti.span, \"const fn is unstable\");\n                 }\n             }\n-            ast::TraitItemKind::Type(_, Some(_)) => {\n-                gate_feature_post!(&self, associated_type_defaults, ti.span,\n-                                  \"associated type defaults are unstable\");\n-            }\n-            _ if ti.generics.is_parameterized() => {\n-                gate_feature_post!(&self, generic_associated_types, ti.span,\n-                                   \"generic associated types are unstable\");\n+            ast::TraitItemKind::Type(_, default) => {\n+                // We use two if statements instead of something like match guards so that both\n+                // of these errors can be emitted if both cases apply.\n+                if default.is_some() {\n+                    gate_feature_post!(&self, associated_type_defaults, ti.span,\n+                                       \"associated type defaults are unstable\");\n+                }\n+                if ti.generics.is_parameterized() {\n+                    gate_feature_post!(&self, generic_associated_types, ti.span,\n+                                       \"generic associated types are unstable\");\n+                }\n             }\n             _ => {}\n         }\n@@ -1643,7 +1647,7 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n                     gate_feature_post!(&self, const_fn, ii.span, \"const fn is unstable\");\n                 }\n             }\n-            _ if ii.generics.is_parameterized() => {\n+            ast::ImplItemKind::Type(_) if ii.generics.is_parameterized() => {\n                 gate_feature_post!(&self, generic_associated_types, ii.span,\n                                    \"generic associated types are unstable\");\n             }"}]}