{"sha": "196cc6de2e517d4a265990409132e6064e487f4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5NmNjNmRlMmU1MTdkNGEyNjU5OTA0MDkxMzJlNjA2NGU0ODdmNGY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-30T01:30:00Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-30T05:58:34Z"}, "message": "Teach compiletest to construct the PATH variable correctly on win32", "tree": {"sha": "b1401e97a03e2108e8da71a27f929a82f4c0d3fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1401e97a03e2108e8da71a27f929a82f4c0d3fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/196cc6de2e517d4a265990409132e6064e487f4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/196cc6de2e517d4a265990409132e6064e487f4f", "html_url": "https://github.com/rust-lang/rust/commit/196cc6de2e517d4a265990409132e6064e487f4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/196cc6de2e517d4a265990409132e6064e487f4f/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b61e17bdfd5de3546d756cf3cc0e91fbb3c0ef0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b61e17bdfd5de3546d756cf3cc0e91fbb3c0ef0f", "html_url": "https://github.com/rust-lang/rust/commit/b61e17bdfd5de3546d756cf3cc0e91fbb3c0ef0f"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "aa6c7d5abdb1d680e6f5f521b4fdfe67c0a4473a", "filename": "src/test/compiletest/util.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/196cc6de2e517d4a265990409132e6064e487f4f/src%2Ftest%2Fcompiletest%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/196cc6de2e517d4a265990409132e6064e487f4f/src%2Ftest%2Fcompiletest%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompiletest%2Futil.rs?ref=196cc6de2e517d4a265990409132e6064e487f4f", "patch": "@@ -10,7 +10,9 @@ fn make_new_path(path: str) -> str {\n     // Windows just uses PATH as the library search path, so we have to\n     // maintain the current value while adding our own\n     alt getenv(lib_path_env_var()) {\n-      option::some(curr) { #fmt[\"%s:%s\", path, curr] }\n+      option::some(curr) {\n+        #fmt[\"%s%s%s\", path, path_div(), curr]\n+      }\n       option::none. { path }\n     }\n }\n@@ -24,6 +26,13 @@ fn lib_path_env_var() -> str { \"DYLD_LIBRARY_PATH\" }\n #[cfg(target_os = \"win32\")]\n fn lib_path_env_var() -> str { \"PATH\" }\n \n+#[cfg(target_os = \"linux\")]\n+#[cfg(target_os = \"macos\")]\n+fn path_div() -> str { \":\" }\n+\n+#[cfg(target_os = \"win32\")]\n+fn path_div() -> str { \";\" }\n+\n fn logv(config: config, s: str) {\n     log s;\n     if config.verbose { io::stdout().write_line(s); }"}]}