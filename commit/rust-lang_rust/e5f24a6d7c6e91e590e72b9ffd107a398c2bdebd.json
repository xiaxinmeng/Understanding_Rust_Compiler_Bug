{"sha": "e5f24a6d7c6e91e590e72b9ffd107a398c2bdebd", "node_id": "C_kwDOAAsO6NoAKGU1ZjI0YTZkN2M2ZTkxZTU5MGU3MmI5ZmZkMTA3YTM5OGMyYmRlYmQ", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-03-25T17:20:42Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-03-25T17:20:42Z"}, "message": "Set proc_macros input when creating the RootDatabase", "tree": {"sha": "e59745012662a9121d025e49b7c6b6a7dd4b8468", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e59745012662a9121d025e49b7c6b6a7dd4b8468"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5f24a6d7c6e91e590e72b9ffd107a398c2bdebd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5f24a6d7c6e91e590e72b9ffd107a398c2bdebd", "html_url": "https://github.com/rust-lang/rust/commit/e5f24a6d7c6e91e590e72b9ffd107a398c2bdebd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5f24a6d7c6e91e590e72b9ffd107a398c2bdebd/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "607375dc206259955a386c48d88c45529c316145", "url": "https://api.github.com/repos/rust-lang/rust/commits/607375dc206259955a386c48d88c45529c316145", "html_url": "https://github.com/rust-lang/rust/commit/607375dc206259955a386c48d88c45529c316145"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "3b8458980c6ddaedaeae5657f6e64116c9c04fda", "filename": "crates/ide-db/src/apply_change.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e5f24a6d7c6e91e590e72b9ffd107a398c2bdebd/crates%2Fide-db%2Fsrc%2Fapply_change.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5f24a6d7c6e91e590e72b9ffd107a398c2bdebd/crates%2Fide-db%2Fsrc%2Fapply_change.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-db%2Fsrc%2Fapply_change.rs?ref=e5f24a6d7c6e91e590e72b9ffd107a398c2bdebd", "patch": "@@ -64,6 +64,7 @@ impl RootDatabase {\n             // SourceDatabase\n             base_db::ParseQuery\n             base_db::CrateGraphQuery\n+            base_db::ProcMacrosQuery\n \n             // SourceDatabaseExt\n             base_db::FileTextQuery"}, {"sha": "f9b8a502d990cff2bd030d6874ba147104422366", "filename": "crates/ide-db/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e5f24a6d7c6e91e590e72b9ffd107a398c2bdebd/crates%2Fide-db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5f24a6d7c6e91e590e72b9ffd107a398c2bdebd/crates%2Fide-db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-db%2Fsrc%2Flib.rs?ref=e5f24a6d7c6e91e590e72b9ffd107a398c2bdebd", "patch": "@@ -137,6 +137,7 @@ impl RootDatabase {\n     pub fn new(lru_capacity: Option<usize>) -> RootDatabase {\n         let mut db = RootDatabase { storage: ManuallyDrop::new(salsa::Storage::default()) };\n         db.set_crate_graph_with_durability(Default::default(), Durability::HIGH);\n+        db.set_proc_macros_with_durability(Default::default(), Durability::HIGH);\n         db.set_local_roots_with_durability(Default::default(), Durability::HIGH);\n         db.set_library_roots_with_durability(Default::default(), Durability::HIGH);\n         db.set_enable_proc_attr_macros(false);"}, {"sha": "9c6edb46f41ca4509978d5c12d396db1ad54f79c", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e5f24a6d7c6e91e590e72b9ffd107a398c2bdebd/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5f24a6d7c6e91e590e72b9ffd107a398c2bdebd/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=e5f24a6d7c6e91e590e72b9ffd107a398c2bdebd", "patch": "@@ -445,12 +445,14 @@ impl GlobalState {\n         let mut change = Change::new();\n         change.set_crate_graph(crate_graph);\n         self.analysis_host.apply_change(change);\n+        self.process_changes();\n \n-        if same_workspaces {\n+        if same_workspaces && !self.fetch_workspaces_queue.op_requested() {\n             self.load_proc_macros(proc_macro_paths);\n         }\n-        self.process_changes();\n+\n         self.reload_flycheck();\n+\n         tracing::info!(\"did switch workspaces\");\n     }\n "}]}