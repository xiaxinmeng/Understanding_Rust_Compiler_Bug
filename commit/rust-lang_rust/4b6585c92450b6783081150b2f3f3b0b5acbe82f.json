{"sha": "4b6585c92450b6783081150b2f3f3b0b5acbe82f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiNjU4NWM5MjQ1MGI2NzgzMDgxMTUwYjJmM2YzYjBiNWFjYmU4MmY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-02T23:21:17Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-05T20:23:11Z"}, "message": "Parameterize the LLVM build over the target triples", "tree": {"sha": "a45827b9fc1094fb184115550310c7c12919bc64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a45827b9fc1094fb184115550310c7c12919bc64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b6585c92450b6783081150b2f3f3b0b5acbe82f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b6585c92450b6783081150b2f3f3b0b5acbe82f", "html_url": "https://github.com/rust-lang/rust/commit/4b6585c92450b6783081150b2f3f3b0b5acbe82f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b6585c92450b6783081150b2f3f3b0b5acbe82f/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4e1a438f676be35be660a0fe0170bbe69d62179", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4e1a438f676be35be660a0fe0170bbe69d62179", "html_url": "https://github.com/rust-lang/rust/commit/a4e1a438f676be35be660a0fe0170bbe69d62179"}], "stats": {"total": 207, "additions": 126, "deletions": 81}, "files": [{"sha": "7c7659e607bd9f56db9932824a0d4ee9a3015611", "filename": "Makefile.in", "status": "modified", "additions": 24, "deletions": 12, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/4b6585c92450b6783081150b2f3f3b0b5acbe82f/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/4b6585c92450b6783081150b2f3f3b0b5acbe82f/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=4b6585c92450b6783081150b2f3f3b0b5acbe82f", "patch": "@@ -196,19 +196,31 @@ COMPILER_INPUTS := $(wildcard $(addprefix $(S)src/comp/, \\\n # LLVM macros\n ######################################################################\n \n+define DEF_LLVM_VARS\n+# The configure script defines these variables with the target triples\n+# separated by Z. This defines new ones with the expected format.\n+CFG_LLVM_BUILD_DIR_$(1):=$$(CFG_LLVM_BUILD_DIR_$(subst -,_,$(1)))\n+CFG_LLVM_INST_DIR_$(1):=$$(CFG_LLVM_INST_DIR_$(subst -,_,$(1)))\n+\n # Any rules that depend on LLVM should depend on LLVM_CONFIG\n-LLVM_CONFIG:=$(CFG_LLVM_INST_DIR)/bin/llvm-config\n-LLVM_VERSION=$(shell \"$(LLVM_CONFIG)\" --version)\n-LLVM_BINDIR=$(shell \"$(LLVM_CONFIG)\" --bindir)\n-LLVM_INCDIR=$(shell \"$(LLVM_CONFIG)\" --includedir)\n-LLVM_LIBDIR=$(shell \"$(LLVM_CONFIG)\" --libdir)\n-LLVM_LIBS=$(shell \"$(LLVM_CONFIG)\" --libs)\n-LLVM_LDFLAGS=$(shell \"$(LLVM_CONFIG)\" --ldflags)\n-LLVM_CXXFLAGS=$(shell \"$(LLVM_CONFIG)\" --cxxflags)\n-LLVM_HOST_TRIPLE=$(shell \"$(LLVM_CONFIG)\" --host-target)\n-\n-LLVM_AS=$(LLVM_BINDIR)/llvm-as$(X)\n-LLC=$(LLVM_BINDIR)/llc$(X)\n+LLVM_CONFIG_$(1):=$$(CFG_LLVM_INST_DIR_$(1))/bin/llvm-config\n+LLVM_VERSION_$(1)=$$(shell \"$$(LLVM_CONFIG_$(1))\" --version)\n+LLVM_BINDIR_$(1)=$$(shell \"$$(LLVM_CONFIG_$(1))\" --bindir)\n+LLVM_INCDIR_$(1)=$$(shell \"$$(LLVM_CONFIG_$(1))\" --includedir)\n+LLVM_LIBDIR_$(1)=$$(shell \"$$(LLVM_CONFIG_$(1))\" --libdir)\n+LLVM_LIBS_$(1)=$$(shell \"$$(LLVM_CONFIG_$(1))\" --libs)\n+LLVM_LDFLAGS_$(1)=$$(shell \"$$(LLVM_CONFIG_$(1))\" --ldflags)\n+LLVM_CXXFLAGS_$(1)=$$(shell \"$$(LLVM_CONFIG_$(1))\" --cxxflags)\n+LLVM_HOST_TRIPLE_$(1)=$$(shell \"$$(LLVM_CONFIG_$(1))\" --host-target)\n+\n+LLVM_AS_$(1)=$$(LLVM_BINDIR_$(1))/llvm-as$$(X)\n+LLC_$(1)=$$(LLVM_BINDIR_$(1))/llc$$(X)\n+\n+endef\n+\n+$(foreach target,$(CFG_TARGET_TRIPLES), \\\n+ $(eval $(call DEF_LLVM_VARS,$(target))))\n+\n \n ######################################################################\n # Exports for sub-utilities"}, {"sha": "7aad41ad126a16cf960eb50261f1d1b0260fe52f", "filename": "configure", "status": "modified", "additions": 77, "deletions": 56, "changes": 133, "blob_url": "https://github.com/rust-lang/rust/blob/4b6585c92450b6783081150b2f3f3b0b5acbe82f/configure", "raw_url": "https://github.com/rust-lang/rust/raw/4b6585c92450b6783081150b2f3f3b0b5acbe82f/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=4b6585c92450b6783081150b2f3f3b0b5acbe82f", "patch": "@@ -372,12 +372,17 @@ for i in \\\n     nd nd/std \\\n     dl \\\n     test/run-pass test/run-fail test/compile-fail \\\n-    test/bench test/perf test/pretty \\\n-    llvm\n+    test/bench test/perf test/pretty\n do\n     make_dir $i\n done\n \n+make_dir llvm\n+for t in $CFG_TARGET_TRIPLES\n+do\n+    make_dir llvm/$t\n+done\n+\n make_dir rustllvm\n for t in $CFG_TARGET_TRIPLES\n do\n@@ -446,62 +451,78 @@ msg\n \n # Configure llvm. Here we go...\n CFG_LLVM_SRC_DIR=${CFG_SRC_DIR}src/llvm\n-CFG_LLVM_BUILD_DIR=${CFG_BUILD_DIR}/llvm\n-# Just use LLVM straight from its build directory to avoid 'make install' time\n-CFG_LLVM_INST_DIR=${CFG_LLVM_BUILD_DIR}/Release+Asserts\n+putvar CFG_LLVM_SRC_DIR\n \n-if [ -z $CFG_LLVM_ROOT ]\n-then\n-    step_msg \"configuring LLVM\"\n-\n-    LLVM_TARGETS=\"--enable-targets=x86,x86_64\"\n-    LLVM_BUILD=\"--build=${CFG_HOST_TRIPLE}\"\n-    LLVM_HOST=\"--host=${CFG_HOST_TRIPLE}\"\n-    LLVM_TARGET=\"--target=${CFG_HOST_TRIPLE}\"\n-    LLVM_OPTS=\"--enable-optimized --disable-docs\"\n-\n-    LLVM_CXX_32=\"g++ -m32\"\n-    LLVM_CC_32=\"gcc -m32\"\n-    LLVM_CFLAGS_32=\"-m32\"\n-    LLVM_CXXFLAGS_32=\"-m32\"\n-    LLVM_LDFLAGS_32=\"-m32\"\n-\n-    # FIXME: Need to change flags for x64\n-    LLVM_CXX=$LLVM_CXX_32\n-    LLVM_CC=$LLVM_CC_32\n-    LLVM_CFLAGS=$LLVM_CFLAGS_32\n-    LLVM_CXXFLAGS=$LLVM_CXXFLAGS_32\n-    LLVM_LDFLAGS=$LLVM_LDFLAGS_32\n-\n-    CXX=$LLVM_CXX\n-    CC=$LLVM_CC\n-    CFLAGS=$LLVM_CFLAGS\n-    CXXFLAGS=$LLVM_CXXFLAGS\n-    LDFLAGS=$LLVM_LDFLAGS\n-\n-    LLVM_FLAGS=\"$LLVM_TARGETS $LLVM_OPTS $LLVM_BUILD $LLVM_HOST $LLVM_TARGET\"\n-\n-    msg \"configuring LLVM with:\"\n-    msg \"$LLVM_FLAGS\"\n-\n-    export CXX\n-    export CC\n-    export CFLAGS\n-    export CXXFLAGS\n-    export LDFLAGS\n-\n-    cd $CFG_LLVM_BUILD_DIR\n-    # FIXME: This won't work if CFG_SRC_DIR is absolute\n-    ${CFG_BUILD_DIR}/${CFG_LLVM_SRC_DIR}/configure $LLVM_FLAGS\n-    cd $CFG_BUILD_DIR\n-else\n-    # The user is using their own LLVM\n-    CFG_LLVM_INST_DIR=$CFG_LLVM_ROOT\n-fi\n+for t in $CFG_TARGET_TRIPLES\n+do\n+    if [ -z $CFG_LLVM_ROOT ]\n+    then\n+\tstep_msg \"configuring LLVM for $t\"\n+\n+\tLLVM_BUILD_DIR=$CFG_BUILD_DIR/llvm/$t\n+        # Just use LLVM straight from its build directory to\n+        # avoid 'make install' time\n+\tLLVM_INST_DIR=$LLVM_BUILD_DIR/Release+Asserts\n+\n+\tLLVM_TARGETS=\"--enable-targets=x86,x86_64\"\n+\tLLVM_BUILD=\"--build=$t\"\n+\tLLVM_HOST=\"--host=$t\"\n+\tLLVM_TARGET=\"--target=$t\"\n+\tLLVM_OPTS=\"--enable-optimized --disable-docs\"\n+\n+\tLLVM_CXX_32=\"g++ -m32\"\n+\tLLVM_CC_32=\"gcc -m32\"\n+\tLLVM_CFLAGS_32=\"-m32\"\n+\tLLVM_CXXFLAGS_32=\"-m32\"\n+\tLLVM_LDFLAGS_32=\"-m32\"\n+\n+        # FIXME: Need to change flags for x64\n+\tLLVM_CXX=$LLVM_CXX_32\n+\tLLVM_CC=$LLVM_CC_32\n+\tLLVM_CFLAGS=$LLVM_CFLAGS_32\n+\tLLVM_CXXFLAGS=$LLVM_CXXFLAGS_32\n+\tLLVM_LDFLAGS=$LLVM_LDFLAGS_32\n+\n+\tCXX=$LLVM_CXX\n+\tCC=$LLVM_CC\n+\tCFLAGS=$LLVM_CFLAGS\n+\tCXXFLAGS=$LLVM_CXXFLAGS\n+\tLDFLAGS=$LLVM_LDFLAGS\n+\n+\tLLVM_FLAGS=\"$LLVM_TARGETS $LLVM_OPTS $LLVM_BUILD $LLVM_HOST $LLVM_TARGET\"\n+\n+\tmsg \"configuring LLVM with:\"\n+\tmsg \"$LLVM_FLAGS\"\n+\n+\texport CXX\n+\texport CC\n+\texport CFLAGS\n+\texport CXXFLAGS\n+\texport LDFLAGS\n+\n+\tcd $LLVM_BUILD_DIR\n+        # FIXME: This won't work if CFG_SRC_DIR is absolute\n+\t${CFG_BUILD_DIR}/${CFG_LLVM_SRC_DIR}/configure $LLVM_FLAGS\n+\tcd $CFG_BUILD_DIR\n+    else\n+\tLLVM_BUILD_DIR=bogus\n+        # The user is using their own LLVM\n+\tLLVM_INST_DIR=$CFG_LLVM_ROOT\n+    fi\n \n-putvar CFG_LLVM_SRC_DIR\n-putvar CFG_LLVM_BUILD_DIR\n-putvar CFG_LLVM_INST_DIR\n+    # Construct variables for LLVM build and install directories for\n+    # each target. These will be named\n+    # CFG_LLVM_BUILD_DIR_${target_triple} but all the hyphens in\n+    # target_triple will be converted to underscore, because bash\n+    # variables can't contain hyphens. The makefile will then have to\n+    # convert back.\n+    CFG_LLVM_BUILD_DIR=$(echo CFG_LLVM_BUILD_DIR_${t} | tr - _)\n+    CFG_LLVM_INST_DIR=$(echo CFG_LLVM_INST_DIR_${t} | tr - _)\n+    eval ${CFG_LLVM_BUILD_DIR}=\"'$LLVM_BUILD_DIR'\"\n+    eval ${CFG_LLVM_INST_DIR}=\"'$LLVM_INST_DIR'\"\n+    putvar $CFG_LLVM_BUILD_DIR\n+    putvar $CFG_LLVM_INST_DIR\n+done\n \n \n # Munge any paths that appear in config.mk back to posix-y"}, {"sha": "dc46b540ead38860593fdfe364477123acf11b63", "filename": "mk/autodep.mk", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4b6585c92450b6783081150b2f3f3b0b5acbe82f/mk%2Fautodep.mk", "raw_url": "https://github.com/rust-lang/rust/raw/4b6585c92450b6783081150b2f3f3b0b5acbe82f/mk%2Fautodep.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fautodep.mk?ref=4b6585c92450b6783081150b2f3f3b0b5acbe82f", "patch": "@@ -14,11 +14,11 @@ rt/%.d: rt/%.cpp $(MKFILES)\n \t$(Q)rm -f $@.tmp.bak\n \t$(Q)mv $@.tmp $@\n \n-rustllvm/%.d: rustllvm/%.cpp $(MKFILES) $(LLVM_CONFIG)\n+rustllvm/%.d: rustllvm/%.cpp $(MKFILES) $(LLVM_CONFIG_$(CFG_HOST_TRIPLE))\n \t@$(call E, dep: $@)\n \t$(Q)$(call CFG_DEPEND_C, $@ \\\n       $(subst $(S)src/,,$(patsubst %.cpp, %.o, $<)), \\\n-      $(LLVM_CXXFLAGS) $(RUSTLLVM_INCS)) $< >$@.tmp\n+      $(LLVM_CXXFLAGS_$(CFG_HOST_TRIPLE)) $(RUSTLLVM_INCS)) $< >$@.tmp\n \t$(Q)$(CFG_PATH_MUNGE) $@.tmp\n \t$(Q)rm -f $@.tmp.bak\n \t$(Q)mv $@.tmp $@"}, {"sha": "bd4e2ebe5a3d0e9e63c1b0c02d71bd6dd2d87adb", "filename": "mk/llvm.mk", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4b6585c92450b6783081150b2f3f3b0b5acbe82f/mk%2Fllvm.mk", "raw_url": "https://github.com/rust-lang/rust/raw/4b6585c92450b6783081150b2f3f3b0b5acbe82f/mk%2Fllvm.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fllvm.mk?ref=4b6585c92450b6783081150b2f3f3b0b5acbe82f", "patch": "@@ -2,6 +2,18 @@\n LLVM_DEPS:=$(wildcard $(addprefix $(CFG_LLVM_SRC_DIR)/, \\\n                         * */*h */*/*h */*/*/*h */*cpp */*/*cpp */*/*/*cpp))\n \n-$(LLVM_CONFIG): $(LLVM_DEPS)\n-\t@$(call E, make: llvm)\n-\t$(Q)make -C $(CFG_LLVM_BUILD_DIR)\n\\ No newline at end of file\n+define DEF_LLVM_RULES\n+\n+# If CFG_LLVM_ROOT is defined then we don't build LLVM ourselves\n+ifeq ($(CFG_LLVM_ROOT),)\n+\n+$$(LLVM_CONFIG_$(1)): $$(LLVM_DEPS_$(1))\n+\t@$$(call E, make: llvm)\n+\t$$(Q)make -C $$(CFG_LLVM_BUILD_DIR_$(1))\n+\n+endif\n+\n+endef\n+\n+$(foreach target,$(CFG_TARGET_TRIPLES), \\\n+ $(eval $(call DEF_LLVM_RULES,$(target))))\n\\ No newline at end of file"}, {"sha": "068c73400f5d335de63210c4d71dbf42d241969a", "filename": "mk/rustllvm.mk", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4b6585c92450b6783081150b2f3f3b0b5acbe82f/mk%2Frustllvm.mk", "raw_url": "https://github.com/rust-lang/rust/raw/4b6585c92450b6783081150b2f3f3b0b5acbe82f/mk%2Frustllvm.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frustllvm.mk?ref=4b6585c92450b6783081150b2f3f3b0b5acbe82f", "patch": "@@ -14,21 +14,21 @@ endif\n \n RUSTLLVM_DEF_$(1) := rustllvm/rustllvm$$(CFG_DEF_SUFFIX)\n \n-RUSTLLVM_INCS_$(1) := -iquote $$(LLVM_INCDIR) \\\n-                      -iquote $$(S)src/rustllvm/include\n+RUSTLLVM_INCS_$(1) = -iquote $$(LLVM_INCDIR_$(1)) \\\n+                     -iquote $$(S)src/rustllvm/include\n RUSTLLVM_OBJS_OBJS_$(1) := $$(RUSTLLVM_OBJS_CS_$(1):rustllvm/%.cpp=rustllvm/$(1)/%.o)\n \n rustllvm/$(1)/$(CFG_RUSTLLVM): $$(RUSTLLVM_OBJS_OBJS_$(1)) \\\n                           $$(MKFILES) $$(RUSTLLVM_DEF_$(1))\n \t@$$(call E, link: $$@)\n \t$$(Q)$$(call CFG_LINK_C_$(1),$$@,$$(RUSTLLVM_OBJS_OBJS_$(1)) \\\n-\t  $$(CFG_GCCISH_PRE_LIB_FLAGS) $$(LLVM_LIBS) \\\n+\t  $$(CFG_GCCISH_PRE_LIB_FLAGS) $$(LLVM_LIBS_$(1)) \\\n           $$(CFG_GCCISH_POST_LIB_FLAGS) \\\n-          $$(LLVM_LDFLAGS),$$(RUSTLLVM_DEF_$(1)),$$(CFG_RUSTLLVM))\n+          $$(LLVM_LDFLAGS_$(1)),$$(RUSTLLVM_DEF_$(1)),$$(CFG_RUSTLLVM))\n \n-rustllvm/$(1)/%.o: rustllvm/%.cpp $$(MKFILES) $$(LLVM_CONFIG)\n+rustllvm/$(1)/%.o: rustllvm/%.cpp $$(MKFILES) $$(LLVM_CONFIG_$(1))\n \t@$$(call E, compile: $$@)\n-\t$$(Q)$$(call CFG_COMPILE_C_$(1), $$@, $$(LLVM_CXXFLAGS) $$(RUSTLLVM_INCS_$(1))) $$<\n+\t$$(Q)$$(call CFG_COMPILE_C_$(1), $$@, $$(LLVM_CXXFLAGS_$(1)) $$(RUSTLLVM_INCS_$(1))) $$<\n endef\n \n # Instantiate template for all stages"}, {"sha": "b2c87d9b7e8db422978d70faef8f6fa2d279a10f", "filename": "mk/target.mk", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4b6585c92450b6783081150b2f3f3b0b5acbe82f/mk%2Ftarget.mk", "raw_url": "https://github.com/rust-lang/rust/raw/4b6585c92450b6783081150b2f3f3b0b5acbe82f/mk%2Ftarget.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftarget.mk?ref=4b6585c92450b6783081150b2f3f3b0b5acbe82f", "patch": "@@ -13,9 +13,9 @@ $$(TARGET_LIB$(1)$(2))/intrinsics.ll: \\\n \t$$(Q)sed s/@CFG_TARGET_TRIPLE@/$(2)/ $$< > $$@\n \n $$(TARGET_LIB$(1)$(2))/intrinsics.bc: $$(TARGET_LIB$(1)$(2))/intrinsics.ll \\\n-\t\t$$(LLVM_CONFIG)\n+\t\t$$(LLVM_CONFIG_$(2))\n \t@$$(call E, llvms-as: $$@)\n-\t$$(Q)$$(LLVM_AS) -o $$@ $$<\n+\t$$(Q)$$(LLVM_AS_$(2)) -o $$@ $$<\n \n $$(TARGET_LIB$(1)$(2))/$$(CFG_STDLIB): \\\n \t$$(STDLIB_CRATE) $$(STDLIB_INPUTS) \\"}]}