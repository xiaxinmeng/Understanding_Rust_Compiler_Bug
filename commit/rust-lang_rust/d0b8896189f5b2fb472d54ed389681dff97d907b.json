{"sha": "d0b8896189f5b2fb472d54ed389681dff97d907b", "node_id": "C_kwDOAAsO6NoAKGQwYjg4OTYxODlmNWIyZmI0NzJkNTRlZDM4OTY4MWRmZjk3ZDkwN2I", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-15T18:23:11Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-06-13T16:39:59Z"}, "message": "Allow building the build system using cargo\n\nRust's build system only handles cargo, not rustc.", "tree": {"sha": "efbd6821a4720b63da1d0a23d2f2c6278e2f2a90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/efbd6821a4720b63da1d0a23d2f2c6278e2f2a90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0b8896189f5b2fb472d54ed389681dff97d907b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0b8896189f5b2fb472d54ed389681dff97d907b", "html_url": "https://github.com/rust-lang/rust/commit/d0b8896189f5b2fb472d54ed389681dff97d907b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0b8896189f5b2fb472d54ed389681dff97d907b/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce3f300e40146480d3f508e9657c454bf6881b10", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce3f300e40146480d3f508e9657c454bf6881b10", "html_url": "https://github.com/rust-lang/rust/commit/ce3f300e40146480d3f508e9657c454bf6881b10"}], "stats": {"total": 155, "additions": 75, "deletions": 80}, "files": [{"sha": "8b4efd4e394885eeebd4f1b7da1ff93760235cc6", "filename": ".cirrus.yml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d0b8896189f5b2fb472d54ed389681dff97d907b/.cirrus.yml", "raw_url": "https://github.com/rust-lang/rust/raw/d0b8896189f5b2fb472d54ed389681dff97d907b/.cirrus.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.cirrus.yml?ref=d0b8896189f5b2fb472d54ed389681dff97d907b", "patch": "@@ -10,7 +10,7 @@ task:\n     folder: target\n   prepare_script:\n     - . $HOME/.cargo/env\n-    - ./y.rs prepare\n+    - ./y.sh prepare\n   test_script:\n     - . $HOME/.cargo/env\n-    - ./y.rs test\n+    - ./y.sh test"}, {"sha": "12aa69d3c795618e3295988d0eba61add8daaf11", "filename": ".github/workflows/abi-cafe.yml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d0b8896189f5b2fb472d54ed389681dff97d907b/.github%2Fworkflows%2Fabi-cafe.yml", "raw_url": "https://github.com/rust-lang/rust/raw/d0b8896189f5b2fb472d54ed389681dff97d907b/.github%2Fworkflows%2Fabi-cafe.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fabi-cafe.yml?ref=d0b8896189f5b2fb472d54ed389681dff97d907b", "patch": "@@ -46,12 +46,12 @@ jobs:\n       run: rustup set default-host x86_64-pc-windows-gnu\n \n     - name: Prepare dependencies\n-      run: ./y.rs prepare\n+      run: ./y.sh prepare\n \n     - name: Build\n-      run: ./y.rs build --sysroot none\n+      run: ./y.sh build --sysroot none\n \n     - name: Test abi-cafe\n       env:\n         TARGET_TRIPLE: ${{ matrix.env.TARGET_TRIPLE }}\n-      run: ./y.rs abi-cafe\n+      run: ./y.sh abi-cafe"}, {"sha": "8e6c1e8ade0152e5fe587d3b8d239b6ede4bfc17", "filename": ".github/workflows/main.yml", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/d0b8896189f5b2fb472d54ed389681dff97d907b/.github%2Fworkflows%2Fmain.yml", "raw_url": "https://github.com/rust-lang/rust/raw/d0b8896189f5b2fb472d54ed389681dff97d907b/.github%2Fworkflows%2Fmain.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fmain.yml?ref=d0b8896189f5b2fb472d54ed389681dff97d907b", "patch": "@@ -19,7 +19,7 @@ jobs:\n     - name: Rustfmt\n       run: |\n         cargo fmt --check\n-        rustfmt --check build_system/mod.rs\n+        rustfmt --check build_system/main.rs\n         rustfmt --check example/*\n \n \n@@ -91,15 +91,15 @@ jobs:\n         sudo apt-get install -y gcc-s390x-linux-gnu qemu-user\n \n     - name: Prepare dependencies\n-      run: ./y.rs prepare\n+      run: ./y.sh prepare\n \n     - name: Build\n-      run: ./y.rs build --sysroot none\n+      run: ./y.sh build --sysroot none\n \n     - name: Test\n       env:\n         TARGET_TRIPLE: ${{ matrix.env.TARGET_TRIPLE }}\n-      run: ./y.rs test\n+      run: ./y.sh test\n \n     - name: Install LLVM standard library\n       run: rustup target add ${{ matrix.env.TARGET_TRIPLE }}\n@@ -111,7 +111,7 @@ jobs:\n       if: matrix.os != 'windows-latest' || matrix.env.TARGET_TRIPLE != 'x86_64-pc-windows-gnu'\n       env:\n         TARGET_TRIPLE: ${{ matrix.env.TARGET_TRIPLE }}\n-      run: ./y.rs test --sysroot llvm --no-unstable-features\n+      run: ./y.sh test --sysroot llvm --no-unstable-features\n \n \n   # This job doesn't use cg_clif in any way. It checks that all cg_clif tests work with cg_llvm too.\n@@ -165,13 +165,13 @@ jobs:\n       run: cargo install hyperfine || true\n \n     - name: Prepare dependencies\n-      run: ./y.rs prepare\n+      run: ./y.sh prepare\n \n     - name: Build\n-      run: CI_OPT=1 ./y.rs build --sysroot none\n+      run: CI_OPT=1 ./y.sh build --sysroot none\n \n     - name: Benchmark\n-      run: CI_OPT=1 ./y.rs bench\n+      run: CI_OPT=1 ./y.sh bench\n \n \n   dist:\n@@ -224,13 +224,13 @@ jobs:\n         sudo apt-get install -y gcc-mingw-w64-x86-64 wine-stable\n \n     - name: Prepare dependencies\n-      run: ./y.rs prepare\n+      run: ./y.sh prepare\n \n     - name: Build backend\n-      run: CI_OPT=1 ./y.rs build --sysroot none\n+      run: CI_OPT=1 ./y.sh build --sysroot none\n \n     - name: Build sysroot\n-      run: CI_OPT=1 ./y.rs build\n+      run: CI_OPT=1 ./y.sh build\n \n     - name: Package prebuilt cg_clif\n       run: tar cvfJ cg_clif.tar.xz dist"}, {"sha": "b49dc3aff7aaab8f267df0f49cfa94cef177c8c8", "filename": ".github/workflows/rustc.yml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d0b8896189f5b2fb472d54ed389681dff97d907b/.github%2Fworkflows%2Frustc.yml", "raw_url": "https://github.com/rust-lang/rust/raw/d0b8896189f5b2fb472d54ed389681dff97d907b/.github%2Fworkflows%2Frustc.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Frustc.yml?ref=d0b8896189f5b2fb472d54ed389681dff97d907b", "patch": "@@ -18,7 +18,7 @@ jobs:\n         key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('rust-toolchain', '**/Cargo.lock') }}\n \n     - name: Prepare dependencies\n-      run: ./y.rs prepare\n+      run: ./y.sh prepare\n \n     - name: Test\n       run: ./scripts/test_bootstrap.sh\n@@ -38,7 +38,7 @@ jobs:\n         key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('rust-toolchain', '**/Cargo.lock') }}\n \n     - name: Prepare dependencies\n-      run: ./y.rs prepare\n+      run: ./y.sh prepare\n \n     - name: Test\n       run: ./scripts/test_rustc_tests.sh"}, {"sha": "e6ac8c8408da62f972157acdff706c1f676cc6c8", "filename": ".gitignore", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d0b8896189f5b2fb472d54ed389681dff97d907b/.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/d0b8896189f5b2fb472d54ed389681dff97d907b/.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitignore?ref=d0b8896189f5b2fb472d54ed389681dff97d907b", "patch": "@@ -1,4 +1,5 @@\n /target\n+/build_system/target\n **/*.rs.bk\n *.rlib\n *.o"}, {"sha": "60cb51d5663626225fcdf24013a5a6ff674c2898", "filename": ".vscode/settings.json", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d0b8896189f5b2fb472d54ed389681dff97d907b/.vscode%2Fsettings.json", "raw_url": "https://github.com/rust-lang/rust/raw/d0b8896189f5b2fb472d54ed389681dff97d907b/.vscode%2Fsettings.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.vscode%2Fsettings.json?ref=d0b8896189f5b2fb472d54ed389681dff97d907b", "patch": "@@ -6,9 +6,10 @@\n     \"rust-analyzer.imports.granularity.enforce\": true,\n     \"rust-analyzer.imports.granularity.group\": \"module\",\n     \"rust-analyzer.imports.prefix\": \"crate\",\n-    \"rust-analyzer.cargo.features\": [\"unstable-features\", \"__check_build_system_using_ra\"],\n+    \"rust-analyzer.cargo.features\": [\"unstable-features\"],\n     \"rust-analyzer.linkedProjects\": [\n         \"./Cargo.toml\",\n+        \"./build_system/Cargo.toml\",\n         {\n             \"crates\": [\n                 {"}, {"sha": "1c1f2d8577bd6d23bea940cbe6588332358f34f9", "filename": "Cargo.toml", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d0b8896189f5b2fb472d54ed389681dff97d907b/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d0b8896189f5b2fb472d54ed389681dff97d907b/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=d0b8896189f5b2fb472d54ed389681dff97d907b", "patch": "@@ -3,13 +3,6 @@ name = \"rustc_codegen_cranelift\"\n version = \"0.1.0\"\n edition = \"2021\"\n \n-[[bin]]\n-# This is used just to teach rust-analyzer how to check the build system. required-features is used\n-# to disable it for regular builds.\n-name = \"y\"\n-path = \"./y.rs\"\n-required-features = [\"__check_build_system_using_ra\"]\n-\n [lib]\n crate-type = [\"dylib\"]\n \n@@ -45,7 +38,6 @@ smallvec = \"1.8.1\"\n unstable-features = [\"jit\", \"inline_asm\"]\n jit = [\"cranelift-jit\", \"libloading\"]\n inline_asm = []\n-__check_build_system_using_ra = []\n \n [package.metadata.rust-analyzer]\n rustc_private = true"}, {"sha": "9469feea0cbf89b87b0e330cda8aa163ad4db04e", "filename": "Readme.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d0b8896189f5b2fb472d54ed389681dff97d907b/Readme.md", "raw_url": "https://github.com/rust-lang/rust/raw/d0b8896189f5b2fb472d54ed389681dff97d907b/Readme.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Readme.md?ref=d0b8896189f5b2fb472d54ed389681dff97d907b", "patch": "@@ -10,8 +10,8 @@ If not please open an issue.\n ```bash\n $ git clone https://github.com/bjorn3/rustc_codegen_cranelift\n $ cd rustc_codegen_cranelift\n-$ ./y.rs prepare\n-$ ./y.rs build\n+$ ./y.sh prepare\n+$ ./y.sh build\n ```\n \n To run the test suite replace the last command with:\n@@ -20,7 +20,7 @@ To run the test suite replace the last command with:\n $ ./test.sh\n ```\n \n-For more docs on how to build and test see [build_system/usage.txt](build_system/usage.txt) or the help message of `./y.rs`.\n+For more docs on how to build and test see [build_system/usage.txt](build_system/usage.txt) or the help message of `./y.sh`.\n \n ## Precompiled builds\n \n@@ -35,7 +35,7 @@ If you want to use `cargo clif build` instead of having to specify the full path\n \n rustc_codegen_cranelift can be used as a near-drop-in replacement for `cargo build` or `cargo run` for existing projects.\n \n-Assuming `$cg_clif_dir` is the directory you cloned this repo into and you followed the instructions (`y.rs prepare` and `y.rs build` or `test.sh`).\n+Assuming `$cg_clif_dir` is the directory you cloned this repo into and you followed the instructions (`y.sh prepare` and `y.sh build` or `test.sh`).\n \n In the directory with your project (where you can do the usual `cargo build`), run:\n "}, {"sha": "86268e19160302bb11e519e6e26b426e43c57c95", "filename": "build_system/Cargo.lock", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d0b8896189f5b2fb472d54ed389681dff97d907b/build_system%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/d0b8896189f5b2fb472d54ed389681dff97d907b/build_system%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2FCargo.lock?ref=d0b8896189f5b2fb472d54ed389681dff97d907b", "patch": "@@ -0,0 +1,7 @@\n+# This file is automatically @generated by Cargo.\n+# It is not intended for manual editing.\n+version = 3\n+\n+[[package]]\n+name = \"y\"\n+version = \"0.1.0\""}, {"sha": "f47b9bc55404170b8841d4233535740eb307615e", "filename": "build_system/Cargo.toml", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d0b8896189f5b2fb472d54ed389681dff97d907b/build_system%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d0b8896189f5b2fb472d54ed389681dff97d907b/build_system%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2FCargo.toml?ref=d0b8896189f5b2fb472d54ed389681dff97d907b", "patch": "@@ -0,0 +1,13 @@\n+[package]\n+name = \"y\"\n+version = \"0.1.0\"\n+edition = \"2021\"\n+\n+[[bin]]\n+name = \"y\"\n+path = \"main.rs\"\n+\n+[features]\n+unstable-features = [] # for rust-analyzer\n+\n+# Do not add any dependencies"}, {"sha": "2ed6272b2c534600e7a5b1b92f44f5c40d12284d", "filename": "build_system/build_sysroot.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d0b8896189f5b2fb472d54ed389681dff97d907b/build_system%2Fbuild_sysroot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0b8896189f5b2fb472d54ed389681dff97d907b/build_system%2Fbuild_sysroot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fbuild_sysroot.rs?ref=d0b8896189f5b2fb472d54ed389681dff97d907b", "patch": "@@ -225,7 +225,7 @@ fn build_clif_sysroot_for_triple(\n     match fs::read_to_string(SYSROOT_RUSTC_VERSION.to_path(dirs)) {\n         Err(e) => {\n             eprintln!(\"Failed to get rustc version for patched sysroot source: {}\", e);\n-            eprintln!(\"Hint: Try `./y.rs prepare` to patch the sysroot source\");\n+            eprintln!(\"Hint: Try `./y.sh prepare` to patch the sysroot source\");\n             process::exit(1);\n         }\n         Ok(source_version) => {\n@@ -234,7 +234,7 @@ fn build_clif_sysroot_for_triple(\n                 eprintln!(\"The patched sysroot source is outdated\");\n                 eprintln!(\"Source version: {}\", source_version.trim());\n                 eprintln!(\"Rustc version:  {}\", rustc_version.trim());\n-                eprintln!(\"Hint: Try `./y.rs prepare` to update the patched sysroot source\");\n+                eprintln!(\"Hint: Try `./y.sh prepare` to update the patched sysroot source\");\n                 process::exit(1);\n             }\n         }"}, {"sha": "06395eb141c86e54385c842dc1a126af9c198d02", "filename": "build_system/main.rs", "status": "renamed", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d0b8896189f5b2fb472d54ed389681dff97d907b/build_system%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0b8896189f5b2fb472d54ed389681dff97d907b/build_system%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fmain.rs?ref=d0b8896189f5b2fb472d54ed389681dff97d907b", "patch": "@@ -1,3 +1,7 @@\n+#![warn(rust_2018_idioms)]\n+#![warn(unused_lifetimes)]\n+#![warn(unreachable_pub)]\n+\n use std::env;\n use std::path::PathBuf;\n use std::process;\n@@ -37,19 +41,19 @@ enum Command {\n }\n \n #[derive(Copy, Clone, Debug)]\n-pub(crate) enum SysrootKind {\n+enum SysrootKind {\n     None,\n     Clif,\n     Llvm,\n }\n \n #[derive(Clone, Debug)]\n-pub(crate) enum CodegenBackend {\n+enum CodegenBackend {\n     Local(PathBuf),\n     Builtin(String),\n }\n \n-pub(crate) fn main() {\n+fn main() {\n     if env::var(\"RUST_BACKTRACE\").is_err() {\n         env::set_var(\"RUST_BACKTRACE\", \"1\");\n     }", "previous_filename": "build_system/mod.rs"}, {"sha": "9d20cdca6a7dd41b133bfe6dd7735b811cd03d00", "filename": "build_system/usage.txt", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d0b8896189f5b2fb472d54ed389681dff97d907b/build_system%2Fusage.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d0b8896189f5b2fb472d54ed389681dff97d907b/build_system%2Fusage.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fusage.txt?ref=d0b8896189f5b2fb472d54ed389681dff97d907b", "patch": "@@ -1,11 +1,11 @@\n The build system of cg_clif.\n \n USAGE:\n-    ./y.rs prepare [--out-dir DIR] [--download-dir DIR]\n-    ./y.rs build [--debug] [--sysroot none|clif|llvm] [--out-dir DIR] [--download-dir DIR] [--no-unstable-features] [--frozen]\n-    ./y.rs test [--debug] [--sysroot none|clif|llvm] [--out-dir DIR] [--download-dir DIR] [--no-unstable-features] [--frozen]\n-    ./y.rs abi-cafe [--debug] [--sysroot none|clif|llvm] [--out-dir DIR] [--download-dir DIR] [--no-unstable-features] [--frozen]\n-    ./y.rs bench [--debug] [--sysroot none|clif|llvm] [--out-dir DIR] [--download-dir DIR] [--no-unstable-features] [--frozen]\n+    ./y.sh prepare [--out-dir DIR] [--download-dir DIR]\n+    ./y.sh build [--debug] [--sysroot none|clif|llvm] [--out-dir DIR] [--download-dir DIR] [--no-unstable-features] [--frozen]\n+    ./y.sh test [--debug] [--sysroot none|clif|llvm] [--out-dir DIR] [--download-dir DIR] [--no-unstable-features] [--frozen]\n+    ./y.sh abi-cafe [--debug] [--sysroot none|clif|llvm] [--out-dir DIR] [--download-dir DIR] [--no-unstable-features] [--frozen]\n+    ./y.sh bench [--debug] [--sysroot none|clif|llvm] [--out-dir DIR] [--download-dir DIR] [--no-unstable-features] [--frozen]\n \n OPTIONS:\n     --debug\n@@ -40,7 +40,7 @@ REQUIREMENTS:\n     * Rustup: By default rustup is used to install the right nightly version. If you don't want to\n       use rustup, you can manually install the nightly version indicated by rust-toolchain.toml and\n       point the CARGO, RUSTC and RUSTDOC env vars to the right executables.\n-    * Git: `./y.rs prepare` uses git for applying patches and on Windows for downloading test repos.\n-    * Curl and tar (non-Windows only): Used by `./y.rs prepare` to download a single commit for\n+    * Git: `./y.sh prepare` uses git for applying patches and on Windows for downloading test repos.\n+    * Curl and tar (non-Windows only): Used by `./y.sh prepare` to download a single commit for\n       repos. Git will be used to clone the whole repo when using Windows.\n-    * [Hyperfine](https://github.com/sharkdp/hyperfine/): Used for benchmarking with `./y.rs bench`.\n+    * [Hyperfine](https://github.com/sharkdp/hyperfine/): Used for benchmarking with `./y.sh bench`."}, {"sha": "19405a53d1c65ce1423eb44c7243ea5b88d25a6b", "filename": "clean_all.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d0b8896189f5b2fb472d54ed389681dff97d907b/clean_all.sh", "raw_url": "https://github.com/rust-lang/rust/raw/d0b8896189f5b2fb472d54ed389681dff97d907b/clean_all.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clean_all.sh?ref=d0b8896189f5b2fb472d54ed389681dff97d907b", "patch": "@@ -1,7 +1,7 @@\n #!/usr/bin/env bash\n set -e\n \n-rm -rf target/ download/ build/ dist/ y.bin y.bin.dSYM y.exe y.pdb\n+rm -rf target/ build_system/target download/ build/ dist/ y.bin y.bin.dSYM y.exe y.pdb\n \n # Kept for now in case someone updates their checkout of cg_clif before running clean_all.sh\n # FIXME remove at some point in the future"}, {"sha": "c6210f958d6c12fc92838e27bd818046be38fa35", "filename": "docs/usage.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d0b8896189f5b2fb472d54ed389681dff97d907b/docs%2Fusage.md", "raw_url": "https://github.com/rust-lang/rust/raw/d0b8896189f5b2fb472d54ed389681dff97d907b/docs%2Fusage.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fusage.md?ref=d0b8896189f5b2fb472d54ed389681dff97d907b", "patch": "@@ -2,7 +2,7 @@\n \n rustc_codegen_cranelift can be used as a near-drop-in replacement for `cargo build` or `cargo run` for existing projects.\n \n-Assuming `$cg_clif_dir` is the directory you cloned this repo into and you followed the instructions (`y.rs prepare` and `y.rs build` or `test.sh`).\n+Assuming `$cg_clif_dir` is the directory you cloned this repo into and you followed the instructions (`y.sh prepare` and `y.sh build` or `test.sh`).\n \n ## Cargo\n "}, {"sha": "6b446aafb7b54388c9c4df8806c3e0e82e188db7", "filename": "scripts/rustup.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d0b8896189f5b2fb472d54ed389681dff97d907b/scripts%2Frustup.sh", "raw_url": "https://github.com/rust-lang/rust/raw/d0b8896189f5b2fb472d54ed389681dff97d907b/scripts%2Frustup.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/scripts%2Frustup.sh?ref=d0b8896189f5b2fb472d54ed389681dff97d907b", "patch": "@@ -32,7 +32,7 @@ case $1 in\n \n         ./clean_all.sh\n \n-        ./y.rs prepare\n+        ./y.sh prepare\n \n         (cd download/sysroot && cargo update && cargo fetch && cp Cargo.lock ../../build_sysroot/)\n         ;;"}, {"sha": "15b16b42be5b97f8d0e1b9b68babf71609fb3ec1", "filename": "scripts/setup_rust_fork.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d0b8896189f5b2fb472d54ed389681dff97d907b/scripts%2Fsetup_rust_fork.sh", "raw_url": "https://github.com/rust-lang/rust/raw/d0b8896189f5b2fb472d54ed389681dff97d907b/scripts%2Fsetup_rust_fork.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/scripts%2Fsetup_rust_fork.sh?ref=d0b8896189f5b2fb472d54ed389681dff97d907b", "patch": "@@ -1,7 +1,7 @@\n #!/usr/bin/env bash\n set -e\n \n-./y.rs build --no-unstable-features\n+./y.sh build --no-unstable-features\n \n echo \"[SETUP] Rust fork\"\n git clone https://github.com/rust-lang/rust.git || true"}, {"sha": "6357eebf026966e8083fff945e11dd6f13262b76", "filename": "test.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d0b8896189f5b2fb472d54ed389681dff97d907b/test.sh", "raw_url": "https://github.com/rust-lang/rust/raw/d0b8896189f5b2fb472d54ed389681dff97d907b/test.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test.sh?ref=d0b8896189f5b2fb472d54ed389681dff97d907b", "patch": "@@ -1,2 +1,2 @@\n #!/usr/bin/env bash\n-exec ./y.rs test \"$@\"\n+exec ./y.sh test \"$@\""}, {"sha": "e806a64d943448d9b4695b37ea56f36c2b11c514", "filename": "y.rs", "status": "modified", "additions": 2, "deletions": 31, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/d0b8896189f5b2fb472d54ed389681dff97d907b/y.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0b8896189f5b2fb472d54ed389681dff97d907b/y.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/y.rs?ref=d0b8896189f5b2fb472d54ed389681dff97d907b", "patch": "@@ -1,35 +1,6 @@\n #!/usr/bin/env bash\n #![deny(unsafe_code)] /*This line is ignored by bash\n # This block is ignored by rustc\n-set -e\n-echo \"[BUILD] y.rs\" 1>&2\n-rustc $0 -o ${0/.rs/.bin} -Cdebuginfo=1 --edition 2021\n-exec ${0/.rs/.bin} $@\n+echo \"Warning: y.rs is a deprecated alias for y.sh\" 1>&2\n+exec ./y.sh \"$@\"\n */\n-\n-#![warn(rust_2018_idioms)]\n-#![warn(unused_lifetimes)]\n-#![warn(unreachable_pub)]\n-\n-//! The build system for cg_clif\n-//!\n-//! # Manual compilation\n-//!\n-//! If your system doesn't support shell scripts you can manually compile and run this file using\n-//! for example:\n-//!\n-//! ```shell\n-//! $ rustc y.rs -o y.bin\n-//! $ ./y.bin\n-//! ```\n-//!\n-//! # Naming\n-//!\n-//! The name `y.rs` was chosen to not conflict with rustc's `x.py`.\n-\n-#[path = \"build_system/mod.rs\"]\n-mod build_system;\n-\n-fn main() {\n-    build_system::main();\n-}"}, {"sha": "bc925a23e2a88d866aa931d7147b57f5f7eca922", "filename": "y.sh", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d0b8896189f5b2fb472d54ed389681dff97d907b/y.sh", "raw_url": "https://github.com/rust-lang/rust/raw/d0b8896189f5b2fb472d54ed389681dff97d907b/y.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/y.sh?ref=d0b8896189f5b2fb472d54ed389681dff97d907b", "patch": "@@ -0,0 +1,6 @@\n+#!/usr/bin/env bash\n+\n+set -e\n+echo \"[BUILD] build system\" 1>&2\n+rustc build_system/main.rs -o y.bin -Cdebuginfo=1 --edition 2021\n+exec ./y.bin \"$@\""}]}