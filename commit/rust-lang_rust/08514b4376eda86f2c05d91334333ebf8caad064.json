{"sha": "08514b4376eda86f2c05d91334333ebf8caad064", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4NTE0YjQzNzZlZGE4NmYyYzA1ZDkxMzM0MzMzZWJmOGNhYWQwNjQ=", "commit": {"author": {"name": "Christian Poveda", "email": "z1mvader@protonmail.com", "date": "2017-04-25T22:22:34Z"}, "committer": {"name": "Christian Poveda", "email": "z1mvader@protonmail.com", "date": "2017-04-25T22:22:34Z"}, "message": "rewrote the thread struct docs", "tree": {"sha": "d5e26861ad5146301e58266a3b05f2a83ebc886b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5e26861ad5146301e58266a3b05f2a83ebc886b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08514b4376eda86f2c05d91334333ebf8caad064", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08514b4376eda86f2c05d91334333ebf8caad064", "html_url": "https://github.com/rust-lang/rust/commit/08514b4376eda86f2c05d91334333ebf8caad064", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08514b4376eda86f2c05d91334333ebf8caad064/comments", "author": null, "committer": null, "parents": [{"sha": "c7e724a148fbc1ca46508d953302b697ff35af16", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7e724a148fbc1ca46508d953302b697ff35af16", "html_url": "https://github.com/rust-lang/rust/commit/c7e724a148fbc1ca46508d953302b697ff35af16"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "98452a396aae7d781feb32706dd8f5a2e8e3f0f8", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/08514b4376eda86f2c05d91334333ebf8caad064/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08514b4376eda86f2c05d91334333ebf8caad064/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=08514b4376eda86f2c05d91334333ebf8caad064", "patch": "@@ -713,22 +713,27 @@ struct Inner {\n \n #[derive(Clone)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-/// A handle to a thread.\n+/// A handle to a thread, its just an abstract reference and as such\n+/// it can be used to identify a thread (by name, for example). In most\n+/// usage cases, this struct is not used directly.\n ///\n /// # Examples\n ///\n /// ```\n /// use std::thread;\n ///\n-/// let handler = thread::Builder::new()\n-///     .name(\"foo\".into())\n+/// for i in 0..5 {\n+///     let thread_name = format!(\"thread_{}\", i);\n+///     thread::Builder::new()\n+///     .name(thread_name) // Now you can identify which thread panicked\n+///                        // thanks to the handle's name\n ///     .spawn(|| {\n-///         let thread = thread::current();\n-///         println!(\"thread name: {}\", thread.name().unwrap());\n+///         if i == 3 {\n+///             panic!(\"I'm scared!!!\");\n+///         }\n ///     })\n ///     .unwrap();\n-///\n-/// handler.join().unwrap();\n+/// }\n /// ```\n pub struct Thread {\n     inner: Arc<Inner>,"}]}