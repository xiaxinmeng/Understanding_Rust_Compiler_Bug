{"sha": "8f49d4629711986a59b1627f6390150324af162c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmNDlkNDYyOTcxMTk4NmE1OWIxNjI3ZjYzOTAxNTAzMjRhZjE2MmM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-02-02T20:33:47Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-02-02T20:33:47Z"}, "message": "Auto merge of #68720 - wesleywiser:llvm_time_trace, r=davidtwco\n\nAdd support for enabling the LLVM time-trace feature\n\nI found this helpful while investigating an LLVM performance issue.\nPassing `-Z llvm-time-trace` causes a `llvm_timings.json` file to be\ncreated. This file can be inspected in with the Chrome Profiler\ntools or with any other compatible tool like SpeedScope.\n\nMore information on the LLVM feature:\n\n- https://aras-p.info/blog/2019/01/16/time-trace-timeline-flame-chart-profiler-for-Clang/\n\n- https://reviews.llvm.org/rL357340", "tree": {"sha": "153dfc3abe2f4b7b3c4c0d210252299f9dd6f92d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/153dfc3abe2f4b7b3c4c0d210252299f9dd6f92d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f49d4629711986a59b1627f6390150324af162c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f49d4629711986a59b1627f6390150324af162c", "html_url": "https://github.com/rust-lang/rust/commit/8f49d4629711986a59b1627f6390150324af162c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f49d4629711986a59b1627f6390150324af162c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f43c34a134358471726f25fe5973b8c7e177c825", "url": "https://api.github.com/repos/rust-lang/rust/commits/f43c34a134358471726f25fe5973b8c7e177c825", "html_url": "https://github.com/rust-lang/rust/commit/f43c34a134358471726f25fe5973b8c7e177c825"}, {"sha": "f5f86be1d40f30b3183ec148f443afa73d0cbe15", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5f86be1d40f30b3183ec148f443afa73d0cbe15", "html_url": "https://github.com/rust-lang/rust/commit/f5f86be1d40f30b3183ec148f443afa73d0cbe15"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "60771d385aea5187d098415cafe491ef9ea33cdc", "filename": "src/librustc_codegen_llvm/lib.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8f49d4629711986a59b1627f6390150324af162c/src%2Flibrustc_codegen_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f49d4629711986a59b1627f6390150324af162c/src%2Flibrustc_codegen_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Flib.rs?ref=8f49d4629711986a59b1627f6390150324af162c", "patch": "@@ -332,6 +332,12 @@ impl CodegenBackend for LlvmCodegenBackend {\n         // any more, we can finalize it (which involves renaming it)\n         rustc_incremental::finalize_session_directory(sess, codegen_results.crate_hash);\n \n+        sess.time(\"llvm_dump_timing_file\", || {\n+            if sess.opts.debugging_opts.llvm_time_trace {\n+                llvm_util::time_trace_profiler_finish(\"llvm_timings.json\");\n+            }\n+        });\n+\n         Ok(())\n     }\n }"}, {"sha": "3f37f86676c98a0deb7576340326e40f5ecc6948", "filename": "src/librustc_codegen_llvm/llvm/ffi.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8f49d4629711986a59b1627f6390150324af162c/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f49d4629711986a59b1627f6390150324af162c/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs?ref=8f49d4629711986a59b1627f6390150324af162c", "patch": "@@ -1454,6 +1454,10 @@ extern \"C\" {\n \n     pub fn LLVMInitializePasses();\n \n+    pub fn LLVMTimeTraceProfilerInitialize();\n+\n+    pub fn LLVMTimeTraceProfilerFinish(FileName: *const c_char);\n+\n     pub fn LLVMAddAnalysisPasses(T: &'a TargetMachine, PM: &PassManager<'a>);\n \n     pub fn LLVMPassManagerBuilderCreate() -> &'static mut PassManagerBuilder;"}, {"sha": "6d3498f8b800b90680f8a0ee852e3c9f50d2c596", "filename": "src/librustc_codegen_llvm/llvm_util.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8f49d4629711986a59b1627f6390150324af162c/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f49d4629711986a59b1627f6390150324af162c/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs?ref=8f49d4629711986a59b1627f6390150324af162c", "patch": "@@ -113,13 +113,31 @@ unsafe fn configure_llvm(sess: &Session) {\n         }\n     }\n \n+    if sess.opts.debugging_opts.llvm_time_trace && get_major_version() >= 9 {\n+        // time-trace is not thread safe and running it in parallel will cause seg faults.\n+        if !sess.opts.debugging_opts.no_parallel_llvm {\n+            bug!(\"`-Z llvm-time-trace` requires `-Z no-parallel-llvm\")\n+        }\n+\n+        llvm::LLVMTimeTraceProfilerInitialize();\n+    }\n+\n     llvm::LLVMInitializePasses();\n \n     ::rustc_llvm::initialize_available_targets();\n \n     llvm::LLVMRustSetLLVMOptions(llvm_args.len() as c_int, llvm_args.as_ptr());\n }\n \n+pub fn time_trace_profiler_finish(file_name: &str) {\n+    unsafe {\n+        if get_major_version() >= 9 {\n+            let file_name = CString::new(file_name).unwrap();\n+            llvm::LLVMTimeTraceProfilerFinish(file_name.as_ptr());\n+        }\n+    }\n+}\n+\n // WARNING: the features after applying `to_llvm_feature` must be known\n // to LLVM or the feature detection code will walk past the end of the feature\n // array, leading to crashes."}, {"sha": "be0e668a467b25e4ab2ea387a5e6d0c8c11f0e16", "filename": "src/librustc_session/options.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8f49d4629711986a59b1627f6390150324af162c/src%2Flibrustc_session%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f49d4629711986a59b1627f6390150324af162c/src%2Flibrustc_session%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Foptions.rs?ref=8f49d4629711986a59b1627f6390150324af162c", "patch": "@@ -730,6 +730,8 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         \"measure time of rustc processes\"),\n     time_llvm_passes: bool = (false, parse_bool, [UNTRACKED],\n         \"measure time of each LLVM pass\"),\n+    llvm_time_trace: bool = (false, parse_bool, [UNTRACKED],\n+        \"generate JSON tracing data file from LLVM data\"),\n     input_stats: bool = (false, parse_bool, [UNTRACKED],\n         \"gather statistics about the input\"),\n     asm_comments: bool = (false, parse_bool, [TRACKED],"}, {"sha": "4ac7e0e6e1fc08828d8bccd639e8aa65deeaa7ee", "filename": "src/rustllvm/PassWrapper.cpp", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8f49d4629711986a59b1627f6390150324af162c/src%2Frustllvm%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/8f49d4629711986a59b1627f6390150324af162c/src%2Frustllvm%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPassWrapper.cpp?ref=8f49d4629711986a59b1627f6390150324af162c", "patch": "@@ -26,6 +26,7 @@\n #include \"llvm/Transforms/Instrumentation.h\"\n #if LLVM_VERSION_GE(9, 0)\n #include \"llvm/Transforms/Instrumentation/AddressSanitizer.h\"\n+#include \"llvm/Support/TimeProfiler.h\"\n #endif\n #if LLVM_VERSION_GE(8, 0)\n #include \"llvm/Transforms/Instrumentation/ThreadSanitizer.h\"\n@@ -57,6 +58,23 @@ extern \"C\" void LLVMInitializePasses() {\n   initializeTarget(Registry);\n }\n \n+extern \"C\" void LLVMTimeTraceProfilerInitialize() {\n+#if LLVM_VERSION_GE(9, 0)\n+  timeTraceProfilerInitialize();\n+#endif\n+}\n+\n+extern \"C\" void LLVMTimeTraceProfilerFinish(const char* FileName) {\n+#if LLVM_VERSION_GE(9, 0)\n+  StringRef FN(FileName);\n+  std::error_code EC;\n+  raw_fd_ostream OS(FN, EC, sys::fs::CD_CreateAlways);\n+\n+  timeTraceProfilerWrite(OS);\n+  timeTraceProfilerCleanup();\n+#endif\n+}\n+\n enum class LLVMRustPassKind {\n   Other,\n   Function,"}]}