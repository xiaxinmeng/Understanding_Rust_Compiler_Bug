{"sha": "af131d55b6bb0e6824cf5921d04cbb5fc02c47d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmMTMxZDU1YjZiYjBlNjgyNGNmNTkyMWQwNGNiYjVmYzAyYzQ3ZDk=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-02-05T11:24:49Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-02-14T11:36:51Z"}, "message": "rustc_mir: remove qualify_consts::Qualif::FN_ARGUMENT.", "tree": {"sha": "c523f16188a95eae28111d6722fb5c76983ee626", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c523f16188a95eae28111d6722fb5c76983ee626"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af131d55b6bb0e6824cf5921d04cbb5fc02c47d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af131d55b6bb0e6824cf5921d04cbb5fc02c47d9", "html_url": "https://github.com/rust-lang/rust/commit/af131d55b6bb0e6824cf5921d04cbb5fc02c47d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af131d55b6bb0e6824cf5921d04cbb5fc02c47d9/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4fbebb636d0f31658354f9cecee52d265602d2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4fbebb636d0f31658354f9cecee52d265602d2e", "html_url": "https://github.com/rust-lang/rust/commit/b4fbebb636d0f31658354f9cecee52d265602d2e"}], "stats": {"total": 16, "additions": 4, "deletions": 12}, "files": [{"sha": "0d3080d3f22acb68f2234fa5760b7a14f502ec72", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/af131d55b6bb0e6824cf5921d04cbb5fc02c47d9/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af131d55b6bb0e6824cf5921d04cbb5fc02c47d9/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=af131d55b6bb0e6824cf5921d04cbb5fc02c47d9", "patch": "@@ -41,16 +41,13 @@ bitflags::bitflags! {\n         // Constant containing an ADT that implements Drop.\n         const NEEDS_DROP        = 1 << 1;\n \n-        // Function argument.\n-        const FN_ARGUMENT       = 1 << 2;\n-\n         // Not constant at all - non-`const fn` calls, asm!,\n         // pointer comparisons, ptr-to-int casts, etc.\n-        const NOT_CONST         = 1 << 3;\n+        const NOT_CONST         = 1 << 2;\n \n         // Refers to temporaries which cannot be promoted as\n         // promote_consts decided they weren't simple enough.\n-        const NOT_PROMOTABLE    = 1 << 4;\n+        const NOT_PROMOTABLE    = 1 << 3;\n \n         // Const items can only have MUTABLE_INTERIOR\n         // and NOT_PROMOTABLE without producing an error.\n@@ -136,10 +133,6 @@ impl<'a, 'tcx> Qualifier<'a, 'tcx> {\n                 let mut qualif = self.local_qualif[local]\n                     .unwrap_or(Qualif::NOT_CONST);\n \n-                if let LocalKind::Arg = kind {\n-                    qualif = qualif | Qualif::FN_ARGUMENT;\n-                }\n-\n                 if !self.temp_promotion_state[local].is_promotable() {\n                     qualif = qualif | Qualif::NOT_PROMOTABLE;\n                 }\n@@ -498,9 +491,8 @@ impl<'a, 'tcx> Checker<'a, 'tcx> {\n \n         let mut local_qualif = IndexVec::from_elem(None, &mir.local_decls);\n         for arg in mir.args_iter() {\n-            let mut qualif = Qualif::NEEDS_DROP;\n-            qualif.restrict(mir.local_decls[arg].ty, tcx, param_env);\n-            local_qualif[arg] = Some(qualif);\n+            let qualif = Qualif::for_ty(mir.local_decls[arg].ty, tcx, param_env);\n+            local_qualif[arg] = Some(Qualif::NOT_PROMOTABLE | qualif);\n         }\n \n         Checker {"}]}