{"sha": "3ef792a03591235a5d5c9e222161e7246aa3f845", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlZjc5MmEwMzU5MTIzNWE1ZDVjOWUyMjIxNjFlNzI0NmFhM2Y4NDU=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-09-15T02:32:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-09-15T02:32:34Z"}, "message": "Rollup merge of #44374 - jsheard:threadname, r=alexcrichton\n\nImplement named threads on Windows (v2)\n\nhttps://msdn.microsoft.com/en-us/library/windows/desktop/mt774976(v=vs.85).aspx\n\nWindows 10 version 1607 finally added a sensible API for naming threads, so we can now implement named threads without having to use MSVC compiler extensions like before. VS2017s debugger and the WPA profiler already use this API where available, but other tools may need some time to catch up.\n\n![thread](https://user-images.githubusercontent.com/3153547/30133438-c92a3cda-934b-11e7-9668-915d53e8d860.png)", "tree": {"sha": "add4a0ca09f0eebade1a5b85d2a9ed709f538973", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/add4a0ca09f0eebade1a5b85d2a9ed709f538973"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ef792a03591235a5d5c9e222161e7246aa3f845", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ef792a03591235a5d5c9e222161e7246aa3f845", "html_url": "https://github.com/rust-lang/rust/commit/3ef792a03591235a5d5c9e222161e7246aa3f845", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ef792a03591235a5d5c9e222161e7246aa3f845/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9761a8dc14cf38008703ba3370bb7c094d92b550", "url": "https://api.github.com/repos/rust-lang/rust/commits/9761a8dc14cf38008703ba3370bb7c094d92b550", "html_url": "https://github.com/rust-lang/rust/commit/9761a8dc14cf38008703ba3370bb7c094d92b550"}, {"sha": "597ac36547f5b135d55bd4cf26964762c8c4796f", "url": "https://api.github.com/repos/rust-lang/rust/commits/597ac36547f5b135d55bd4cf26964762c8c4796f", "html_url": "https://github.com/rust-lang/rust/commit/597ac36547f5b135d55bd4cf26964762c8c4796f"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "9535ddfe5cada5143c22cee3dbf9a1f9a48ba84a", "filename": "src/libstd/sys/windows/c.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3ef792a03591235a5d5c9e222161e7246aa3f845/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ef792a03591235a5d5c9e222161e7246aa3f845/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs?ref=3ef792a03591235a5d5c9e222161e7246aa3f845", "patch": "@@ -32,6 +32,7 @@ pub type DWORD = c_ulong;\n pub type HANDLE = LPVOID;\n pub type HINSTANCE = HANDLE;\n pub type HMODULE = HINSTANCE;\n+pub type HRESULT = LONG;\n pub type BOOL = c_int;\n pub type BYTE = u8;\n pub type BOOLEAN = BYTE;\n@@ -197,6 +198,8 @@ pub const ERROR_OPERATION_ABORTED: DWORD = 995;\n pub const ERROR_IO_PENDING: DWORD = 997;\n pub const ERROR_TIMEOUT: DWORD = 0x5B4;\n \n+pub const E_NOTIMPL: HRESULT = 0x80004001u32 as HRESULT;\n+\n pub const INVALID_HANDLE_VALUE: HANDLE = !0 as HANDLE;\n \n pub const FACILITY_NT_BIT: DWORD = 0x1000_0000;\n@@ -1163,8 +1166,8 @@ extern \"system\" {\n                   timeout: *const timeval) -> c_int;\n }\n \n-// Functions that aren't available on Windows XP, but we still use them and just\n-// provide some form of a fallback implementation.\n+// Functions that aren't available on every version of Windows that we support,\n+// but we still use them and just provide some form of a fallback implementation.\n compat_fn! {\n     kernel32:\n \n@@ -1182,6 +1185,10 @@ compat_fn! {\n     pub fn SetThreadStackGuarantee(_size: *mut c_ulong) -> BOOL {\n         SetLastError(ERROR_CALL_NOT_IMPLEMENTED as DWORD); 0\n     }\n+    pub fn SetThreadDescription(hThread: HANDLE,\n+                                lpThreadDescription: LPCWSTR) -> HRESULT {\n+        SetLastError(ERROR_CALL_NOT_IMPLEMENTED as DWORD); E_NOTIMPL\n+    }\n     pub fn SetFileInformationByHandle(_hFile: HANDLE,\n                     _FileInformationClass: FILE_INFO_BY_HANDLE_CLASS,\n                     _lpFileInformation: LPVOID,"}, {"sha": "c47baaa2434025fe4476fd8ac4b6dc3431c31dad", "filename": "src/libstd/sys/windows/thread.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/3ef792a03591235a5d5c9e222161e7246aa3f845/src%2Flibstd%2Fsys%2Fwindows%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ef792a03591235a5d5c9e222161e7246aa3f845/src%2Flibstd%2Fsys%2Fwindows%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fthread.rs?ref=3ef792a03591235a5d5c9e222161e7246aa3f845", "patch": "@@ -19,6 +19,8 @@ use sys::handle::Handle;\n use sys_common::thread::*;\n use time::Duration;\n \n+use super::to_u16s;\n+\n pub const DEFAULT_MIN_STACK_SIZE: usize = 2 * 1024 * 1024;\n \n pub struct Thread {\n@@ -55,11 +57,12 @@ impl Thread {\n         }\n     }\n \n-    pub fn set_name(_name: &CStr) {\n-        // Windows threads are nameless\n-        // The names in MSVC debugger are obtained using a \"magic\" exception,\n-        // which requires a use of MS C++ extensions.\n-        // See https://msdn.microsoft.com/en-us/library/xcb2z8hs.aspx\n+    pub fn set_name(name: &CStr) {\n+        if let Ok(utf8) = name.to_str() {\n+            if let Ok(utf16) = to_u16s(utf8) {\n+                unsafe { c::SetThreadDescription(c::GetCurrentThread(), utf16.as_ptr()); };\n+            };\n+        };\n     }\n \n     pub fn join(self) {"}]}