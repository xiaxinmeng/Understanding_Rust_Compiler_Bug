{"sha": "3c10a9412e2b1668bfe348f4728eedc2de0c642a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjMTBhOTQxMmUyYjE2NjhiZmUzNDhmNDcyOGVlZGMyZGUwYzY0MmE=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-04-17T19:24:49Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-04-28T16:51:15Z"}, "message": "remove unused functions, fix tiny lexing bug\n\nbefore this change, the parser would parse 14.a() as a method call, but\nwould parse 14.\u00f8() as the floating-point number 14. followed by a function\ncall. This is because it was checking is_alpha, rather than ident_start,\nand was therefore wrong with respect to unicode.", "tree": {"sha": "45d2a985c0b72da5348c4c0acac8aa24dd5e5be0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45d2a985c0b72da5348c4c0acac8aa24dd5e5be0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c10a9412e2b1668bfe348f4728eedc2de0c642a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c10a9412e2b1668bfe348f4728eedc2de0c642a", "html_url": "https://github.com/rust-lang/rust/commit/3c10a9412e2b1668bfe348f4728eedc2de0c642a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c10a9412e2b1668bfe348f4728eedc2de0c642a/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5411cbf656b42ef1d8a95e9de1a50bea616f7c56", "url": "https://api.github.com/repos/rust-lang/rust/commits/5411cbf656b42ef1d8a95e9de1a50bea616f7c56", "html_url": "https://github.com/rust-lang/rust/commit/5411cbf656b42ef1d8a95e9de1a50bea616f7c56"}], "stats": {"total": 11, "additions": 1, "deletions": 10}, "files": [{"sha": "edddac7bc7d9ef8403eb519e2794274361dea10f", "filename": "src/libsyntax/parse/lexer.rs", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3c10a9412e2b1668bfe348f4728eedc2de0c642a/src%2Flibsyntax%2Fparse%2Flexer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c10a9412e2b1668bfe348f4728eedc2de0c642a/src%2Flibsyntax%2Fparse%2Flexer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer.rs?ref=3c10a9412e2b1668bfe348f4728eedc2de0c642a", "patch": "@@ -225,20 +225,12 @@ pub fn is_whitespace(c: char) -> bool {\n     return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n';\n }\n \n-fn may_begin_ident(c: char) -> bool { return is_alpha(c) || c == '_'; }\n-\n fn in_range(c: char, lo: char, hi: char) -> bool {\n     return lo <= c && c <= hi\n }\n \n-fn is_alpha(c: char) -> bool {\n-    return in_range(c, 'a', 'z') || in_range(c, 'A', 'Z');\n-}\n-\n fn is_dec_digit(c: char) -> bool { return in_range(c, '0', '9'); }\n \n-fn is_alnum(c: char) -> bool { return is_alpha(c) || is_dec_digit(c); }\n-\n fn is_hex_digit(c: char) -> bool {\n     return in_range(c, '0', '9') || in_range(c, 'a', 'f') ||\n             in_range(c, 'A', 'F');\n@@ -444,8 +436,7 @@ fn scan_number(c: char, rdr: @mut StringReader) -> token::Token {\n         }\n     }\n     let mut is_float = false;\n-    if rdr.curr == '.' && !(is_alpha(nextch(rdr)) || nextch(rdr) == '_' ||\n-                            nextch(rdr) == '.') {\n+    if rdr.curr == '.' && !(ident_start(nextch(rdr)) || nextch(rdr) == '.') {\n         is_float = true;\n         bump(rdr);\n         let dec_part = scan_digits(rdr, 10u);"}]}