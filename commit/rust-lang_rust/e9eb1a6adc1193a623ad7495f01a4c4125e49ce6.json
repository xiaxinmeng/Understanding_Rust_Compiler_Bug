{"sha": "e9eb1a6adc1193a623ad7495f01a4c4125e49ce6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5ZWIxYTZhZGMxMTkzYTYyM2FkNzQ5NWYwMWE0YzQxMjVlNDljZTY=", "commit": {"author": {"name": "Sean Griffin", "email": "sean@seantheprogrammer.com", "date": "2018-02-26T22:14:24Z"}, "committer": {"name": "Sean Griffin", "email": "sean@seantheprogrammer.com", "date": "2018-03-01T15:04:26Z"}, "message": "Fix bad rebase", "tree": {"sha": "00356eb837e9519927513aa0a22b194f74eb034b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00356eb837e9519927513aa0a22b194f74eb034b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9eb1a6adc1193a623ad7495f01a4c4125e49ce6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9eb1a6adc1193a623ad7495f01a4c4125e49ce6", "html_url": "https://github.com/rust-lang/rust/commit/e9eb1a6adc1193a623ad7495f01a4c4125e49ce6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9eb1a6adc1193a623ad7495f01a4c4125e49ce6/comments", "author": {"login": "sgrif", "id": 1529387, "node_id": "MDQ6VXNlcjE1MjkzODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1529387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgrif", "html_url": "https://github.com/sgrif", "followers_url": "https://api.github.com/users/sgrif/followers", "following_url": "https://api.github.com/users/sgrif/following{/other_user}", "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions", "organizations_url": "https://api.github.com/users/sgrif/orgs", "repos_url": "https://api.github.com/users/sgrif/repos", "events_url": "https://api.github.com/users/sgrif/events{/privacy}", "received_events_url": "https://api.github.com/users/sgrif/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sgrif", "id": 1529387, "node_id": "MDQ6VXNlcjE1MjkzODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1529387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgrif", "html_url": "https://github.com/sgrif", "followers_url": "https://api.github.com/users/sgrif/followers", "following_url": "https://api.github.com/users/sgrif/following{/other_user}", "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions", "organizations_url": "https://api.github.com/users/sgrif/orgs", "repos_url": "https://api.github.com/users/sgrif/repos", "events_url": "https://api.github.com/users/sgrif/events{/privacy}", "received_events_url": "https://api.github.com/users/sgrif/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fb201dee5d5c920950859fe81152fff401de230", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fb201dee5d5c920950859fe81152fff401de230", "html_url": "https://github.com/rust-lang/rust/commit/4fb201dee5d5c920950859fe81152fff401de230"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "df3d081f898a797aac9de64f9c27484013df010b", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9eb1a6adc1193a623ad7495f01a4c4125e49ce6/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9eb1a6adc1193a623ad7495f01a4c4125e49ce6/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=e9eb1a6adc1193a623ad7495f01a4c4125e49ce6", "patch": "@@ -1027,8 +1027,8 @@ fn check_fn<'a, 'gcx, 'tcx>(inherited: &'a Inherited<'a, 'gcx, 'tcx>,\n     let span = body.value.span;\n \n     if body.is_generator && can_be_generator.is_some() {\n-        let yield_ty = fcx.next_ty_var(fcx.next_ty_var(ty::UniverseIndex::ROOT,\n-                                                       TypeVariableOrigin::TypeInference(span)));\n+        let yield_ty = fcx.next_ty_var(ty::UniverseIndex::ROOT,\n+                                       TypeVariableOrigin::TypeInference(span));\n         fcx.require_type_is_sized(yield_ty, span, traits::SizedYieldType);\n         fcx.yield_ty = Some(yield_ty);\n     }"}]}