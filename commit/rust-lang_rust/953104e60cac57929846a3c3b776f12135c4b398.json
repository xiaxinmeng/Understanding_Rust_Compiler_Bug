{"sha": "953104e60cac57929846a3c3b776f12135c4b398", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1MzEwNGU2MGNhYzU3OTI5ODQ2YTNjM2I3NzZmMTIxMzVjNGIzOTg=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-06-22T01:27:34Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-06-22T01:27:34Z"}, "message": "Fix spurious 'value moved here in previous iteration of loop' messages\n\nFixes #46099\n\nPreviously, we would check the 'move' and 'use' spans to see if we\nshould emit this message. However, this can give false positives when\nmacros are involved, since two distinct expressions may end up with the\nsame span.\n\nInstead, we check the actual MIR `Location`, which eliminates false\npositives.", "tree": {"sha": "56e344f1b629e07ac3457f6197cc918134c982cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56e344f1b629e07ac3457f6197cc918134c982cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/953104e60cac57929846a3c3b776f12135c4b398", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl7wCVcACgkQtAh+UQ6Y\nsWQNOQ/9Ey0bSbMhhzl5b6WTGwYbDwrfuDlkQXHKyXjZApQHLeukIGLeSrVfv7ZG\nWWOxgKc/9s7Z7TlGyDxhq1b1Ifnx4rrJA7cA3AY634IHaXyz0BMRY5dFM54XDQY0\n/xY0J9kQ+QwnVsgTg+3EFrWTq95oJFZx6CSryP9rS91gVKv1pjB988qn0b1gpnyi\nQYYEWcMdzshbLeYKpj4PEhqk0LU1XwwXn4RXPGYP8n7KIGrkMZ9vs+yLobkSwLs8\n299BSpHqF1gb11QtHMhDlNXQVhrI1kZ0/Vj2fUcMfCcNrqvd0rP8EjCpGglPfmzH\nF5NjdoVIw07tgfqD9Wcser/wGrANuvKF8u6mr+FYABEG3Kw/0kRhOEvKBWI5Yi/V\nwOH8M7I8VR/thIug6eGEmK8tsDH1lOfoLiYf5okYgrkBMt6IIC63McFdYKN7CzqG\nvhCDZKPS2fzR1PNegE3dBiRj0BDG4+gCklg0CJMh/x3obMKkIKz/Ya+Oezl7nsr+\nQLmPu8mGttNLLxk5HcifUx6BCLYGXd6iEtnEpkQDbVHSqDeadT5JL+Z/zDKvN25U\naJvUcG179btZpzhVzb+Vi3kT7fsUNthxepoqMdOFzUjrPznhoRTBSVVdhtS07din\nYHCIeKSVxK5kPhP9dDyRl7R+c/KytwE/h4Ac4R72ODGDjD3U5BI=\n=4yUb\n-----END PGP SIGNATURE-----", "payload": "tree 56e344f1b629e07ac3457f6197cc918134c982cf\nparent 1a4e2b6f9c75a0e21722c88a0e3b610d6ffc3ae3\nauthor Aaron Hill <aa1ronham@gmail.com> 1592789254 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1592789254 -0400\n\nFix spurious 'value moved here in previous iteration of loop' messages\n\nFixes #46099\n\nPreviously, we would check the 'move' and 'use' spans to see if we\nshould emit this message. However, this can give false positives when\nmacros are involved, since two distinct expressions may end up with the\nsame span.\n\nInstead, we check the actual MIR `Location`, which eliminates false\npositives.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/953104e60cac57929846a3c3b776f12135c4b398", "html_url": "https://github.com/rust-lang/rust/commit/953104e60cac57929846a3c3b776f12135c4b398", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/953104e60cac57929846a3c3b776f12135c4b398/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a4e2b6f9c75a0e21722c88a0e3b610d6ffc3ae3", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a4e2b6f9c75a0e21722c88a0e3b610d6ffc3ae3", "html_url": "https://github.com/rust-lang/rust/commit/1a4e2b6f9c75a0e21722c88a0e3b610d6ffc3ae3"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "b12ab5a727cbb1cd131389aef922fe8cc451156d", "filename": "src/librustc_mir/borrow_check/diagnostics/conflict_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/953104e60cac57929846a3c3b776f12135c4b398/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/953104e60cac57929846a3c3b776f12135c4b398/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs?ref=953104e60cac57929846a3c3b776f12135c4b398", "patch": "@@ -139,7 +139,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n \n                 let move_msg = if move_spans.for_closure() { \" into closure\" } else { \"\" };\n \n-                if span == move_span {\n+                if location == move_out.source {\n                     err.span_label(\n                         span,\n                         format!(\"value moved{} here, in previous iteration of loop\", move_msg),"}, {"sha": "576fe1f4c89052e47edd8d3977b3f2250c8d1796", "filename": "src/test/ui/moves/issue-46099-move-in-macro.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/953104e60cac57929846a3c3b776f12135c4b398/src%2Ftest%2Fui%2Fmoves%2Fissue-46099-move-in-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/953104e60cac57929846a3c3b776f12135c4b398/src%2Ftest%2Fui%2Fmoves%2Fissue-46099-move-in-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmoves%2Fissue-46099-move-in-macro.rs?ref=953104e60cac57929846a3c3b776f12135c4b398", "patch": "@@ -0,0 +1,15 @@\n+// Regression test for issue #46099\n+// Tests that we don't emit spurious\n+// 'value moved in previous iteration of loop' message\n+\n+macro_rules! test {\n+    ($v:expr) => {{\n+        drop(&$v);\n+        $v\n+    }}\n+}\n+\n+fn main() {\n+    let b = Box::new(true);\n+    test!({b}); //~ ERROR use of moved value\n+}"}, {"sha": "83c99db87095179d6f7c906f12b4e6d8c3fdad41", "filename": "src/test/ui/moves/issue-46099-move-in-macro.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/953104e60cac57929846a3c3b776f12135c4b398/src%2Ftest%2Fui%2Fmoves%2Fissue-46099-move-in-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/953104e60cac57929846a3c3b776f12135c4b398/src%2Ftest%2Fui%2Fmoves%2Fissue-46099-move-in-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmoves%2Fissue-46099-move-in-macro.stderr?ref=953104e60cac57929846a3c3b776f12135c4b398", "patch": "@@ -0,0 +1,14 @@\n+error[E0382]: use of moved value: `b`\n+  --> $DIR/issue-46099-move-in-macro.rs:14:12\n+   |\n+LL |     let b = Box::new(true);\n+   |         - move occurs because `b` has type `std::boxed::Box<bool>`, which does not implement the `Copy` trait\n+LL |     test!({b});\n+   |            ^\n+   |            |\n+   |            value moved here\n+   |            value used here after move\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0382`."}, {"sha": "00d89f550714c4af313a32be92e70a0841f4e2ab", "filename": "src/test/ui/moves/move-in-guard-2.stderr", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/953104e60cac57929846a3c3b776f12135c4b398/src%2Ftest%2Fui%2Fmoves%2Fmove-in-guard-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/953104e60cac57929846a3c3b776f12135c4b398/src%2Ftest%2Fui%2Fmoves%2Fmove-in-guard-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmoves%2Fmove-in-guard-2.stderr?ref=953104e60cac57929846a3c3b776f12135c4b398", "patch": "@@ -5,7 +5,10 @@ LL |     let x: Box<_> = box 1;\n    |         - move occurs because `x` has type `std::boxed::Box<i32>`, which does not implement the `Copy` trait\n ...\n LL |         (_, 2) if take(x) => (),\n-   |                        ^ value moved here, in previous iteration of loop\n+   |                        ^\n+   |                        |\n+   |                        value moved here\n+   |                        value used here after move\n \n error: aborting due to previous error\n "}]}