{"sha": "1a5e73a82d6a3e27804ac2f37d1f7dca62ecfc02", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhNWU3M2E4MmQ2YTNlMjc4MDRhYzJmMzdkMWY3ZGNhNjJlY2ZjMDI=", "commit": {"author": {"name": "Andrew Hobden", "email": "andrew@hoverbear.org", "date": "2015-03-29T18:06:38Z"}, "committer": {"name": "Andrew Hobden", "email": "andrew@hoverbear.org", "date": "2015-03-29T18:06:38Z"}, "message": "Fix trailing whitespace. Whoops!", "tree": {"sha": "3b526e8e65cc75a48421eb946ee5a907eb117169", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b526e8e65cc75a48421eb946ee5a907eb117169"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a5e73a82d6a3e27804ac2f37d1f7dca62ecfc02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a5e73a82d6a3e27804ac2f37d1f7dca62ecfc02", "html_url": "https://github.com/rust-lang/rust/commit/1a5e73a82d6a3e27804ac2f37d1f7dca62ecfc02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a5e73a82d6a3e27804ac2f37d1f7dca62ecfc02/comments", "author": null, "committer": null, "parents": [{"sha": "e489eaa0c5fb4a9d8b716dc3fc63aa653c22f4ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/e489eaa0c5fb4a9d8b716dc3fc63aa653c22f4ec", "html_url": "https://github.com/rust-lang/rust/commit/e489eaa0c5fb4a9d8b716dc3fc63aa653c22f4ec"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "9b78f5a5c616c28ec66465c9a55986f4ef9983f6", "filename": "src/libcore/error.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1a5e73a82d6a3e27804ac2f37d1f7dca62ecfc02/src%2Flibcore%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a5e73a82d6a3e27804ac2f37d1f7dca62ecfc02/src%2Flibcore%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ferror.rs?ref=1a5e73a82d6a3e27804ac2f37d1f7dca62ecfc02", "patch": "@@ -52,23 +52,23 @@\n //! use std::error::FromError;\n //! use std::{io, str};\n //! use std::fs::File;\n-//! \n+//!\n //! enum MyError { Io(io::Error), Utf8(str::Utf8Error), }\n-//! \n+//!\n //! impl FromError<io::Error> for MyError {\n //!     fn from_error(err: io::Error) -> MyError { MyError::Io(err) }\n //! }\n-//! \n+//!\n //! impl FromError<str::Utf8Error> for MyError {\n //!     fn from_error(err: str::Utf8Error) -> MyError { MyError::Utf8(err) }\n //! }\n-//! \n+//!\n //! #[allow(unused_variables)]\n //! fn open_and_map() -> Result<(), MyError> {\n //!     let b = b\"foo.txt\";\n //!     let s = try!(str::from_utf8(b));\n //!     let f = try!(File::open(s));\n-//! \n+//!\n //!     // do something interesting here...\n //!     Ok(())\n //! }"}]}