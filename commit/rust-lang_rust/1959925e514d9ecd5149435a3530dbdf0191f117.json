{"sha": "1959925e514d9ecd5149435a3530dbdf0191f117", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5NTk5MjVlNTE0ZDllY2Q1MTQ5NDM1YTM1MzBkYmRmMDE5MWYxMTc=", "commit": {"author": {"name": "Jonathan Reem", "email": "jonathan.reem@gmail.com", "date": "2014-05-31T02:19:52Z"}, "committer": {"name": "Jonathan Reem", "email": "jonathan.reem@gmail.com", "date": "2014-05-31T04:30:21Z"}, "message": "Remove deprecated owned vector from tutorial.", "tree": {"sha": "1b3726efc2e4890279ac8dd59d99fb984ce9bc27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b3726efc2e4890279ac8dd59d99fb984ce9bc27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1959925e514d9ecd5149435a3530dbdf0191f117", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1959925e514d9ecd5149435a3530dbdf0191f117", "html_url": "https://github.com/rust-lang/rust/commit/1959925e514d9ecd5149435a3530dbdf0191f117", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1959925e514d9ecd5149435a3530dbdf0191f117/comments", "author": {"login": "reem", "id": 4745181, "node_id": "MDQ6VXNlcjQ3NDUxODE=", "avatar_url": "https://avatars.githubusercontent.com/u/4745181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reem", "html_url": "https://github.com/reem", "followers_url": "https://api.github.com/users/reem/followers", "following_url": "https://api.github.com/users/reem/following{/other_user}", "gists_url": "https://api.github.com/users/reem/gists{/gist_id}", "starred_url": "https://api.github.com/users/reem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reem/subscriptions", "organizations_url": "https://api.github.com/users/reem/orgs", "repos_url": "https://api.github.com/users/reem/repos", "events_url": "https://api.github.com/users/reem/events{/privacy}", "received_events_url": "https://api.github.com/users/reem/received_events", "type": "User", "site_admin": false}, "committer": {"login": "reem", "id": 4745181, "node_id": "MDQ6VXNlcjQ3NDUxODE=", "avatar_url": "https://avatars.githubusercontent.com/u/4745181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reem", "html_url": "https://github.com/reem", "followers_url": "https://api.github.com/users/reem/followers", "following_url": "https://api.github.com/users/reem/following{/other_user}", "gists_url": "https://api.github.com/users/reem/gists{/gist_id}", "starred_url": "https://api.github.com/users/reem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reem/subscriptions", "organizations_url": "https://api.github.com/users/reem/orgs", "repos_url": "https://api.github.com/users/reem/repos", "events_url": "https://api.github.com/users/reem/events{/privacy}", "received_events_url": "https://api.github.com/users/reem/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66ee71a51732f3d36cd6efe14ca1e02031d26fb3", "url": "https://api.github.com/repos/rust-lang/rust/commits/66ee71a51732f3d36cd6efe14ca1e02031d26fb3", "html_url": "https://github.com/rust-lang/rust/commit/66ee71a51732f3d36cd6efe14ca1e02031d26fb3"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "8a759cf798006ff224df76caba701fd004a32226", "filename": "src/doc/tutorial.md", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/1959925e514d9ecd5149435a3530dbdf0191f117/src%2Fdoc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/1959925e514d9ecd5149435a3530dbdf0191f117/src%2Fdoc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftutorial.md?ref=1959925e514d9ecd5149435a3530dbdf0191f117", "patch": "@@ -2062,7 +2062,7 @@ extern crate collections;\n type Set<T> = collections::HashMap<T, ()>;\n \n struct Stack<T> {\n-    elements: ~[T]\n+    elements: Vec<T>\n }\n \n enum Option<T> {\n@@ -2320,7 +2320,7 @@ trait Seq<T> {\n     fn length(&self) -> uint;\n }\n \n-impl<T> Seq<T> for ~[T] {\n+impl<T> Seq<T> for Vec<T> {\n     fn length(&self) -> uint { self.len() }\n }\n ~~~~\n@@ -2392,7 +2392,7 @@ generic types.\n \n ~~~~\n # trait Printable { fn print(&self); }\n-fn print_all<T: Printable>(printable_things: ~[T]) {\n+fn print_all<T: Printable>(printable_things: Vec<T>) {\n     for thing in printable_things.iter() {\n         thing.print();\n     }\n@@ -2410,10 +2410,10 @@ as in this version of `print_all` that copies elements.\n \n ~~~\n # trait Printable { fn print(&self); }\n-fn print_all<T: Printable + Clone>(printable_things: ~[T]) {\n+fn print_all<T: Printable + Clone>(printable_things: Vec<T>) {\n     let mut i = 0;\n     while i < printable_things.len() {\n-        let copy_of_thing = printable_things[i].clone();\n+        let copy_of_thing = printable_things.get(i).clone();\n         copy_of_thing.print();\n         i += 1;\n     }\n@@ -2438,11 +2438,11 @@ However, consider this function:\n # fn new_circle() -> int { 1 }\n trait Drawable { fn draw(&self); }\n \n-fn draw_all<T: Drawable>(shapes: ~[T]) {\n+fn draw_all<T: Drawable>(shapes: Vec<T>) {\n     for shape in shapes.iter() { shape.draw(); }\n }\n # let c: Circle = new_circle();\n-# draw_all(~[c]);\n+# draw_all(vec![c]);\n ~~~~\n \n You can call that on a vector of circles, or a vector of rectangles\n@@ -2742,9 +2742,9 @@ mod farm {\n # pub type Chicken = int;\n # struct Human(int);\n # impl Human { pub fn rest(&self) { } }\n-# pub fn make_me_a_farm() -> Farm { Farm { chickens: ~[], farmer: Human(0) } }\n+# pub fn make_me_a_farm() -> Farm { Farm { chickens: vec![], farmer: Human(0) } }\n     pub struct Farm {\n-        chickens: ~[Chicken],\n+        chickens: Vec<Chicken>,\n         pub farmer: Human\n     }\n "}]}