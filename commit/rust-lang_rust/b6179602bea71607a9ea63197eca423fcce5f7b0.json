{"sha": "b6179602bea71607a9ea63197eca423fcce5f7b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2MTc5NjAyYmVhNzE2MDdhOWVhNjMxOTdlY2E0MjNmY2NlNWY3YjA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-08-10T15:10:17Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-08-10T15:10:17Z"}, "message": "Auto merge of #43720 - pornel:staticconst, r=petrochenkov\n\nHint correct extern constant syntax\n\nError message for `extern \"C\" { const \u2026}` is terse, and the right syntax is hard to guess given unfortunate difference between meaning of `static` in C and Rust.\n\nI've added a hint for the right syntax.", "tree": {"sha": "6bfe47d69f9df71b8e5682c7d6d61333194c76a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6bfe47d69f9df71b8e5682c7d6d61333194c76a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6179602bea71607a9ea63197eca423fcce5f7b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6179602bea71607a9ea63197eca423fcce5f7b0", "html_url": "https://github.com/rust-lang/rust/commit/b6179602bea71607a9ea63197eca423fcce5f7b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6179602bea71607a9ea63197eca423fcce5f7b0/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2400ebfe76225745d1591c8a63c54570174ab22c", "url": "https://api.github.com/repos/rust-lang/rust/commits/2400ebfe76225745d1591c8a63c54570174ab22c", "html_url": "https://github.com/rust-lang/rust/commit/2400ebfe76225745d1591c8a63c54570174ab22c"}, {"sha": "cabc9be9e2057c5197db273ba0c750aad5ff3366", "url": "https://api.github.com/repos/rust-lang/rust/commits/cabc9be9e2057c5197db273ba0c750aad5ff3366", "html_url": "https://github.com/rust-lang/rust/commit/cabc9be9e2057c5197db273ba0c750aad5ff3366"}], "stats": {"total": 50, "additions": 40, "deletions": 10}, "files": [{"sha": "7bf4c6799b3cb208119bbaccb6535c643788b051", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/b6179602bea71607a9ea63197eca423fcce5f7b0/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6179602bea71607a9ea63197eca423fcce5f7b0/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=b6179602bea71607a9ea63197eca423fcce5f7b0", "patch": "@@ -5518,12 +5518,11 @@ impl<'a> Parser<'a> {\n         })\n     }\n \n-    /// Parse a static item from a foreign module\n+    /// Parse a static item from a foreign module.\n+    /// Assumes that the `static` keyword is already parsed.\n     fn parse_item_foreign_static(&mut self, vis: ast::Visibility, lo: Span, attrs: Vec<Attribute>)\n                                  -> PResult<'a, ForeignItem> {\n-        self.expect_keyword(keywords::Static)?;\n         let mutbl = self.eat_keyword(keywords::Mut);\n-\n         let ident = self.parse_ident()?;\n         self.expect(&token::Colon)?;\n         let ty = self.parse_ty()?;\n@@ -5997,19 +5996,23 @@ impl<'a> Parser<'a> {\n         let lo = self.span;\n         let visibility = self.parse_visibility(false)?;\n \n-        if self.check_keyword(keywords::Static) {\n-            // FOREIGN STATIC ITEM\n+        // FOREIGN STATIC ITEM\n+        // Treat `const` as `static` for error recovery, but don't add it to expected tokens.\n+        if self.check_keyword(keywords::Static) || self.token.is_keyword(keywords::Const) {\n+            if self.token.is_keyword(keywords::Const) {\n+                self.diagnostic()\n+                    .struct_span_err(self.span, \"extern items cannot be `const`\")\n+                    .span_suggestion(self.span, \"instead try using\", \"static\".to_owned())\n+                    .emit();\n+            }\n+            self.bump(); // `static` or `const`\n             return Ok(Some(self.parse_item_foreign_static(visibility, lo, attrs)?));\n         }\n+        // FOREIGN FUNCTION ITEM\n         if self.check_keyword(keywords::Fn) {\n-            // FOREIGN FUNCTION ITEM\n             return Ok(Some(self.parse_item_foreign_fn(visibility, lo, attrs)?));\n         }\n \n-        if self.check_keyword(keywords::Const) {\n-            return Err(self.span_fatal(self.span, \"extern items cannot be `const`\"));\n-        }\n-\n         // FIXME #5668: this will occur for a macro invocation:\n         match self.parse_macro_use_or_failure(attrs, true, false, lo, visibility)? {\n             Some(item) => {"}, {"sha": "a77d7b118956653e8b5df8dca22188f27a3b21c2", "filename": "src/test/ui/extern-const.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/b6179602bea71607a9ea63197eca423fcce5f7b0/src%2Ftest%2Fui%2Fextern-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6179602bea71607a9ea63197eca423fcce5f7b0/src%2Ftest%2Fui%2Fextern-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern-const.rs?ref=b6179602bea71607a9ea63197eca423fcce5f7b0", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -Z continue-parse-after-error\n+\n+extern \"C\" {\n+    const C: u8; //~ ERROR extern items cannot be `const`\n+}\n+\n+fn main() {\n+    let x = C;\n+}"}, {"sha": "c5a3149e85a7a70737fe14f45311de9cc64ccda4", "filename": "src/test/ui/extern-const.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b6179602bea71607a9ea63197eca423fcce5f7b0/src%2Ftest%2Fui%2Fextern-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b6179602bea71607a9ea63197eca423fcce5f7b0/src%2Ftest%2Fui%2Fextern-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern-const.stderr?ref=b6179602bea71607a9ea63197eca423fcce5f7b0", "patch": "@@ -0,0 +1,8 @@\n+error: extern items cannot be `const`\n+  --> $DIR/extern-const.rs:14:5\n+   |\n+14 |     const C: u8; //~ ERROR extern items cannot be `const`\n+   |     ^^^^^ help: instead try using: `static`\n+\n+error: aborting due to previous error\n+"}]}