{"sha": "c8da9ee50af722385e673e79c466fb3abcb75697", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4ZGE5ZWU1MGFmNzIyMzg1ZTY3M2U3OWM0NjZmYjNhYmNiNzU2OTc=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2019-09-15T20:02:44Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-02-21T18:41:22Z"}, "message": "Improve specialization test", "tree": {"sha": "9afa0e88a138b7849aa4b1d0f149a9783d2b94e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9afa0e88a138b7849aa4b1d0f149a9783d2b94e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c8da9ee50af722385e673e79c466fb3abcb75697", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c8da9ee50af722385e673e79c466fb3abcb75697", "html_url": "https://github.com/rust-lang/rust/commit/c8da9ee50af722385e673e79c466fb3abcb75697", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c8da9ee50af722385e673e79c466fb3abcb75697/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fbcd136b655c2743d3a8c3aa87e460ac38d57046", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbcd136b655c2743d3a8c3aa87e460ac38d57046", "html_url": "https://github.com/rust-lang/rust/commit/fbcd136b655c2743d3a8c3aa87e460ac38d57046"}], "stats": {"total": 97, "additions": 88, "deletions": 9}, "files": [{"sha": "833981fc8e3c89a2570c55006586394f94a18583", "filename": "src/test/ui/associated-types/defaults-specialization.rs", "status": "modified", "additions": 34, "deletions": 2, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/c8da9ee50af722385e673e79c466fb3abcb75697/src%2Ftest%2Fui%2Fassociated-types%2Fdefaults-specialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8da9ee50af722385e673e79c466fb3abcb75697/src%2Ftest%2Fui%2Fassociated-types%2Fdefaults-specialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fdefaults-specialization.rs?ref=c8da9ee50af722385e673e79c466fb3abcb75697", "patch": "@@ -7,7 +7,10 @@\n trait Tr {\n     type Ty = u8;\n \n-    fn make() -> Self::Ty;\n+    fn make() -> Self::Ty {\n+        0u8\n+        //~^ error: mismatched types\n+    }\n }\n \n struct A<T>(T);\n@@ -61,4 +64,33 @@ impl Tr for D<bool> {\n     fn make() -> u8 { 255 }\n }\n \n-fn main() {}\n+struct E<T>(T);\n+impl<T> Tr for E<T> {\n+    default fn make() -> Self::Ty { panic!(); }\n+}\n+\n+// This impl specializes and sets `Ty`, it can rely on `Ty=String`.\n+impl Tr for E<bool> {\n+    type Ty = String;\n+\n+    fn make() -> String { String::new() }\n+}\n+\n+fn main() {\n+    // Test that we can assume the right set of assoc. types from outside the impl\n+\n+    // This is a `default impl`, which does *not* mean that `A`/`A2` actually implement the trait.\n+    // cf. https://github.com/rust-lang/rust/issues/48515\n+    //let _: <A<()> as Tr>::Ty = 0u8;\n+    //let _: <A2<()> as Tr>::Ty = 0u8;\n+\n+    let _: <B<()> as Tr>::Ty = 0u8;   //~ error: mismatched types\n+    let _: <B<()> as Tr>::Ty = true;  //~ error: mismatched types\n+    let _: <B2<()> as Tr>::Ty = 0u8;  //~ error: mismatched types\n+    let _: <B2<()> as Tr>::Ty = true; //~ error: mismatched types\n+\n+    let _: <C<()> as Tr>::Ty = true;\n+\n+    let _: <D<()> as Tr>::Ty = 0u8;\n+    let _: <D<bool> as Tr>::Ty = 0u8;\n+}"}, {"sha": "bd0fd7166f6681ee565b69aa243210ed4b42cd89", "filename": "src/test/ui/associated-types/defaults-specialization.stderr", "status": "modified", "additions": 54, "deletions": 7, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/c8da9ee50af722385e673e79c466fb3abcb75697/src%2Ftest%2Fui%2Fassociated-types%2Fdefaults-specialization.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c8da9ee50af722385e673e79c466fb3abcb75697/src%2Ftest%2Fui%2Fassociated-types%2Fdefaults-specialization.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fdefaults-specialization.stderr?ref=c8da9ee50af722385e673e79c466fb3abcb75697", "patch": "@@ -1,7 +1,7 @@\n error[E0053]: method `make` has an incompatible type for trait\n-  --> $DIR/defaults-specialization.rs:17:18\n+  --> $DIR/defaults-specialization.rs:20:18\n    |\n-LL |     fn make() -> Self::Ty;\n+LL |     fn make() -> Self::Ty {\n    |                  -------- type in trait\n ...\n LL |     fn make() -> u8 { 0 }\n@@ -11,9 +11,9 @@ LL |     fn make() -> u8 { 0 }\n               found type `fn() -> u8`\n \n error[E0053]: method `make` has an incompatible type for trait\n-  --> $DIR/defaults-specialization.rs:33:18\n+  --> $DIR/defaults-specialization.rs:36:18\n    |\n-LL |     fn make() -> Self::Ty;\n+LL |     fn make() -> Self::Ty {\n    |                  -------- type in trait\n ...\n LL |     fn make() -> bool { true }\n@@ -23,7 +23,18 @@ LL |     fn make() -> bool { true }\n               found type `fn() -> bool`\n \n error[E0308]: mismatched types\n-  --> $DIR/defaults-specialization.rs:24:29\n+  --> $DIR/defaults-specialization.rs:11:9\n+   |\n+LL |     fn make() -> Self::Ty {\n+   |                  -------- expected `<Self as Tr>::Ty` because of return type\n+LL |         0u8\n+   |         ^^^ expected associated type, found u8\n+   |\n+   = note: expected type `<Self as Tr>::Ty`\n+              found type `u8`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/defaults-specialization.rs:27:29\n    |\n LL |     fn make() -> Self::Ty { 0u8 }\n    |                  --------   ^^^ expected associated type, found u8\n@@ -34,7 +45,7 @@ LL |     fn make() -> Self::Ty { 0u8 }\n               found type `u8`\n \n error[E0308]: mismatched types\n-  --> $DIR/defaults-specialization.rs:42:29\n+  --> $DIR/defaults-specialization.rs:45:29\n    |\n LL |     fn make() -> Self::Ty { true }\n    |                  --------   ^^^^ expected associated type, found bool\n@@ -44,7 +55,43 @@ LL |     fn make() -> Self::Ty { true }\n    = note: expected type `<B2<T> as Tr>::Ty`\n               found type `bool`\n \n-error: aborting due to 4 previous errors\n+error[E0308]: mismatched types\n+  --> $DIR/defaults-specialization.rs:87:32\n+   |\n+LL |     let _: <B<()> as Tr>::Ty = 0u8;\n+   |                                ^^^ expected associated type, found u8\n+   |\n+   = note: expected type `<B<()> as Tr>::Ty`\n+              found type `u8`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/defaults-specialization.rs:88:32\n+   |\n+LL |     let _: <B<()> as Tr>::Ty = true;\n+   |                                ^^^^ expected associated type, found bool\n+   |\n+   = note: expected type `<B<()> as Tr>::Ty`\n+              found type `bool`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/defaults-specialization.rs:89:33\n+   |\n+LL |     let _: <B2<()> as Tr>::Ty = 0u8;\n+   |                                 ^^^ expected associated type, found u8\n+   |\n+   = note: expected type `<B2<()> as Tr>::Ty`\n+              found type `u8`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/defaults-specialization.rs:90:33\n+   |\n+LL |     let _: <B2<()> as Tr>::Ty = true;\n+   |                                 ^^^^ expected associated type, found bool\n+   |\n+   = note: expected type `<B2<()> as Tr>::Ty`\n+              found type `bool`\n+\n+error: aborting due to 9 previous errors\n \n Some errors have detailed explanations: E0053, E0308.\n For more information about an error, try `rustc --explain E0053`."}]}