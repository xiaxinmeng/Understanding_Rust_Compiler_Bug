{"sha": "c05c90275c264a800f15ca7a52019c0874ad58a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwNWM5MDI3NWMyNjRhODAwZjE1Y2E3YTUyMDE5YzA4NzRhZDU4YTg=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-02-18T18:34:40Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-03-09T18:09:36Z"}, "message": "Remove hir::MacroDef::attrs.", "tree": {"sha": "59c3932d6d6b2926aa6f3921d1a3d8c633d32a67", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59c3932d6d6b2926aa6f3921d1a3d8c633d32a67"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c05c90275c264a800f15ca7a52019c0874ad58a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c05c90275c264a800f15ca7a52019c0874ad58a8", "html_url": "https://github.com/rust-lang/rust/commit/c05c90275c264a800f15ca7a52019c0874ad58a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c05c90275c264a800f15ca7a52019c0874ad58a8/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd8a0217571d00d028bb2878cc0df5c3686a300e", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd8a0217571d00d028bb2878cc0df5c3686a300e", "html_url": "https://github.com/rust-lang/rust/commit/fd8a0217571d00d028bb2878cc0df5c3686a300e"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "35995f6ee93901a3c220c589254c53b53ede09aa", "filename": "compiler/rustc_ast_lowering/src/item.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c05c90275c264a800f15ca7a52019c0874ad58a8/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c05c90275c264a800f15ca7a52019c0874ad58a8/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs?ref=c05c90275c264a800f15ca7a52019c0874ad58a8", "patch": "@@ -221,12 +221,11 @@ impl<'hir> LoweringContext<'_, 'hir> {\n         if let ItemKind::MacroDef(MacroDef { ref body, macro_rules }) = i.kind {\n             if !macro_rules || self.sess.contains_name(&i.attrs, sym::macro_export) {\n                 let hir_id = self.lower_node_id(i.id);\n-                let attrs = self.lower_attrs(hir_id, &i.attrs);\n+                self.lower_attrs(hir_id, &i.attrs);\n                 let body = P(self.lower_mac_args(body));\n                 self.exported_macros.push(hir::MacroDef {\n                     ident,\n                     vis,\n-                    attrs,\n                     def_id: hir_id.expect_owner(),\n                     span: i.span,\n                     ast: MacroDef { body, macro_rules },"}, {"sha": "a1569c7a999b2f5818a08f878b7078fe3099d72f", "filename": "compiler/rustc_hir/src/hir.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c05c90275c264a800f15ca7a52019c0874ad58a8/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c05c90275c264a800f15ca7a52019c0874ad58a8/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fhir.rs?ref=c05c90275c264a800f15ca7a52019c0874ad58a8", "patch": "@@ -768,7 +768,6 @@ impl Crate<'_> {\n pub struct MacroDef<'hir> {\n     pub ident: Ident,\n     pub vis: Visibility<'hir>,\n-    pub attrs: &'hir [Attribute],\n     pub def_id: LocalDefId,\n     pub span: Span,\n     pub ast: ast::MacroDef,"}, {"sha": "87b41d3691552bf3d7cd071c9e68791fd4f6b7b5", "filename": "compiler/rustc_hir/src/stable_hash_impls.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c05c90275c264a800f15ca7a52019c0874ad58a8/compiler%2Frustc_hir%2Fsrc%2Fstable_hash_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c05c90275c264a800f15ca7a52019c0874ad58a8/compiler%2Frustc_hir%2Fsrc%2Fstable_hash_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fstable_hash_impls.rs?ref=c05c90275c264a800f15ca7a52019c0874ad58a8", "patch": "@@ -206,11 +206,10 @@ impl<HirCtx: crate::HashStableContext> HashStable<HirCtx> for Item<'_> {\n \n impl<HirCtx: crate::HashStableContext> HashStable<HirCtx> for MacroDef<'_> {\n     fn hash_stable(&self, hcx: &mut HirCtx, hasher: &mut StableHasher) {\n-        let MacroDef { ident, ref attrs, def_id: _, ref ast, ref vis, span } = *self;\n+        let MacroDef { ident, def_id: _, ref ast, ref vis, span } = *self;\n \n         hcx.hash_hir_item_like(|hcx| {\n             ident.name.hash_stable(hcx, hasher);\n-            attrs.hash_stable(hcx, hasher);\n             ast.hash_stable(hcx, hasher);\n             vis.hash_stable(hcx, hasher);\n             span.hash_stable(hcx, hasher);"}, {"sha": "5be8f248e8baff036f6da4a19c706d956db0b1ba", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c05c90275c264a800f15ca7a52019c0874ad58a8/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c05c90275c264a800f15ca7a52019c0874ad58a8/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=c05c90275c264a800f15ca7a52019c0874ad58a8", "patch": "@@ -568,7 +568,8 @@ impl<'tcx> LateLintPass<'tcx> for MissingDoc {\n         self.check_missing_docs_attrs(cx, hir::CRATE_HIR_ID, krate.item.span, \"the\", \"crate\");\n \n         for macro_def in krate.exported_macros {\n-            let has_doc = macro_def.attrs.iter().any(|a| has_doc(cx.sess(), a));\n+            let attrs = cx.tcx.hir().attrs(macro_def.hir_id());\n+            let has_doc = attrs.iter().any(|a| has_doc(cx.sess(), a));\n             if !has_doc {\n                 cx.struct_span_lint(\n                     MISSING_DOCS,"}, {"sha": "72be266b338baeeef74cde3c230bd967745fd59d", "filename": "compiler/rustc_privacy/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c05c90275c264a800f15ca7a52019c0874ad58a8/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c05c90275c264a800f15ca7a52019c0874ad58a8/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_privacy%2Fsrc%2Flib.rs?ref=c05c90275c264a800f15ca7a52019c0874ad58a8", "patch": "@@ -881,7 +881,8 @@ impl Visitor<'tcx> for EmbargoVisitor<'tcx> {\n \n     fn visit_macro_def(&mut self, md: &'tcx hir::MacroDef<'tcx>) {\n         // Non-opaque macros cannot make other items more accessible than they already are.\n-        if attr::find_transparency(&self.tcx.sess, &md.attrs, md.ast.macro_rules).0\n+        let attrs = self.tcx.hir().attrs(md.hir_id());\n+        if attr::find_transparency(&self.tcx.sess, &attrs, md.ast.macro_rules).0\n             != Transparency::Opaque\n         {\n             // `#[macro_export]`-ed `macro_rules!` are `Public` since they"}]}