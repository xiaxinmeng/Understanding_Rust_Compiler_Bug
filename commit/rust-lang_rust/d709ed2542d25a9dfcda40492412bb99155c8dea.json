{"sha": "d709ed2542d25a9dfcda40492412bb99155c8dea", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3MDllZDI1NDJkMjVhOWRmY2RhNDA0OTI0MTJiYjk5MTU1YzhkZWE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-05-06T18:05:14Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-05-06T18:05:14Z"}, "message": "Merge pull request #2336 from tychosci/vim-syntax\n\nVim syntax update", "tree": {"sha": "dd1e42c04b4e3f5f7d86c214828d0d8dea8aa345", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd1e42c04b4e3f5f7d86c214828d0d8dea8aa345"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d709ed2542d25a9dfcda40492412bb99155c8dea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d709ed2542d25a9dfcda40492412bb99155c8dea", "html_url": "https://github.com/rust-lang/rust/commit/d709ed2542d25a9dfcda40492412bb99155c8dea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d709ed2542d25a9dfcda40492412bb99155c8dea/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95a2b5d42f1acb96b035f21f192b0fab6cb2af6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/95a2b5d42f1acb96b035f21f192b0fab6cb2af6a", "html_url": "https://github.com/rust-lang/rust/commit/95a2b5d42f1acb96b035f21f192b0fab6cb2af6a"}, {"sha": "16848becaa8a1f812ba5e131cd6d4d4601f63979", "url": "https://api.github.com/repos/rust-lang/rust/commits/16848becaa8a1f812ba5e131cd6d4d4601f63979", "html_url": "https://github.com/rust-lang/rust/commit/16848becaa8a1f812ba5e131cd6d4d4601f63979"}], "stats": {"total": 57, "additions": 38, "deletions": 19}, "files": [{"sha": "320f04bb56d7658cf0414047c2b715d6c7c71a5a", "filename": "src/etc/vim/syntax/rust.vim", "status": "modified", "additions": 38, "deletions": 19, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/d709ed2542d25a9dfcda40492412bb99155c8dea/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "raw_url": "https://github.com/rust-lang/rust/raw/d709ed2542d25a9dfcda40492412bb99155c8dea/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim?ref=d709ed2542d25a9dfcda40492412bb99155c8dea", "patch": "@@ -15,11 +15,17 @@ if !exists(\"main_syntax\")\n endif\n \n syn keyword   rustKeyword     alt as assert be bind break\n-syn keyword   rustKeyword     check claim cont const copy do else enum export fail\n-syn keyword   rustKeyword     fn for if iface impl import in inline lambda let log\n+syn keyword   rustKeyword     check claim cont const copy do else export fail\n+syn keyword   rustKeyword     for if impl import in inline lambda let log\n syn keyword   rustKeyword     loop mod mut mutable native note of prove pure\n-syn keyword   rustKeyword     resource ret self syntax to type unchecked\n+syn keyword   rustKeyword     ret self syntax to unchecked\n syn keyword   rustKeyword     unsafe use while with\n+\" FIXME: Scoped impl's name is also fallen in this category\n+syn keyword   rustKeyword     mod iface resource class enum type nextgroup=rustIdentifier skipwhite\n+syn keyword   rustKeyword     fn nextgroup=rustFuncName skipwhite\n+\n+syn match     rustIdentifier  \"\\%([^[:cntrl:][:space:][:punct:][:digit:]]\\|_\\)\\%([^[:cntrl:][:punct:][:space:]]\\|_\\)*\" display contained\n+syn match     rustFuncName    \"\\%([^[:cntrl:][:space:][:punct:][:digit:]]\\|_\\)\\%([^[:cntrl:][:punct:][:space:]]\\|_\\)*\" display contained\n \n \" Reserved words\n syn keyword   rustKeyword     m32 m64 m128 f80 f16 f128 class trait\n@@ -33,35 +39,48 @@ syn match     rustItemPath    \"\\(\\w\\|::\\)\\+\"\n \n syn region\t  rustString      start=+L\\=\"+ skip=+\\\\\\\\\\|\\\\\"+ end=+\"+\n \n-\"integer number, or floating point number without a dot and with \"f\".\n-syn case ignore\n-syn match\t  rustNumber\t\tdisplay contained \"\\d\\+\\(u\\=l\\{0,2}\\|ll\\=u\\)\\>\"\n-\"hex number\n-syn match\t  rustNumber\t\tdisplay contained \"0x\\x\\+\\(u\\=l\\{0,2}\\|ll\\=u\\)\\>\"\n-syn match\trustFloat\t\tdisplay contained \"\\d\\+f\"\n-\"floating point number, with dot, optional exponent\n-syn match\trustFloat\t\tdisplay contained \"\\d\\+\\.\\d*\\(e[-+]\\=\\d\\+\\)\\=[fl]\\=\"\n-\"floating point number, starting with a dot, optional exponent\n-syn match\trustFloat\t\tdisplay contained \"\\.\\d\\+\\(e[-+]\\=\\d\\+\\)\\=[fl]\\=\\>\"\n-\"floating point number, without dot, with exponent\n-syn match\trustFloat\t\tdisplay contained \"\\d\\+e[-+]\\=\\d\\+[fl]\\=\\>\"\n-\n-syn case match\n+\" Number literals\n+syn match     rustNumber      display \"\\<[0-9][0-9_]*\\>\"\n+syn match     rustNumber      display \"\\<[0-9][0-9_]*\\(u\\|u8\\|u16\\|u32\\|u64\\)\\>\"\n+syn match     rustNumber      display \"\\<[0-9][0-9_]*\\(i8\\|i16\\|i32\\|i64\\)\\>\"\n+\n+syn match     rustHexNumber   display \"\\<0x[a-fA-F0-9_]\\+\\>\"\n+syn match     rustHexNumber   display \"\\<0x[a-fA-F0-9_]\\+\\(u\\|u8\\|u16\\|u32\\|u64\\)\\>\"\n+syn match     rustHexNumber   display \"\\<0x[a-fA-F0-9_]\\+\\(i8\\|i16\\|i32\\|i64\\)\\>\"\n+syn match     rustBinNumber   display \"\\<0b[01_]\\+\\>\"\n+syn match     rustBinNumber   display \"\\<0b[01_]\\+\\(u\\|u8\\|u16\\|u32\\|u64\\)\\>\"\n+syn match     rustBinNumber   display \"\\<0b[01_]\\+\\(i8\\|i16\\|i32\\|i64\\)\\>\"\n+\n+syn match     rustFloat       display \"\\<[0-9][0-9_]*\\(f\\|f32\\|f64\\)\\>\"\n+syn match     rustFloat       display \"\\<[0-9][0-9_]*\\([eE][+-]\\=[0-9_]\\+\\)\\>\"\n+syn match     rustFloat       display \"\\<[0-9][0-9_]*\\([eE][+-]\\=[0-9_]\\+\\)\\(f\\|f32\\|f64\\)\\>\"\n+syn match     rustFloat       display \"\\<[0-9][0-9_]*\\.[0-9_]\\+\\>\"\n+syn match     rustFloat       display \"\\<[0-9][0-9_]*\\.[0-9_]\\+\\(f\\|f32\\|f64\\)\\>\"\n+syn match     rustFloat       display \"\\<[0-9][0-9_]*\\.[0-9_]\\+\\%([eE][+-]\\=[0-9_]\\+\\)\\>\"\n+syn match     rustFloat       display \"\\<[0-9][0-9_]*\\.[0-9_]\\+\\%([eE][+-]\\=[0-9_]\\+\\)\\(f\\|f32\\|f64\\)\\>\"\n \n syn match   rustCharacter   \"'\\([^'\\\\]\\|\\\\\\(['nrt\\\\\\\"]\\|x\\x\\{2}\\|u\\x\\{4}\\|U\\x\\{8}\\)\\)'\"\n \n-syn region    rustComment     start=\"/\\*\" end=\"\\*/\" contains=rustComment\n-syn region    rustComment     start=\"//\" skip=\"\\\\$\" end=\"$\" keepend\n+syn region    rustComment     start=\"/\\*\" end=\"\\*/\" contains=rustComment,rustTodo\n+syn region    rustComment     start=\"//\" skip=\"\\\\$\" end=\"$\" contains=rustTodo keepend\n+\n+syn keyword   rustTodo        TODO FIXME XXX NB\n+\n+hi def link rustHexNumber     rustNumber\n+hi def link rustBinNumber     rustNumber\n \n hi def link rustString        String\n hi def link rustCharacter     Character\n hi def link rustNumber        Number\n hi def link rustBoolean       Boolean\n hi def link rustFloat         Float\n hi def link rustKeyword       Keyword\n+hi def link rustIdentifier    Identifier\n+hi def link rustFuncName      Function\n hi def link rustComment       Comment\n hi def link rustMacro         Macro\n hi def link rustType          Type\n+hi def link rustTodo          Todo\n \n syn sync minlines=200\n syn sync maxlines=500"}]}