{"sha": "2011d9a7834a8ab5e2a7d71421227fabc6a31c7c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwMTFkOWE3ODM0YThhYjVlMmE3ZDcxNDIxMjI3ZmFiYzZhMzFjN2M=", "commit": {"author": {"name": "Philipp Krones", "email": "hello@philkrones.com", "date": "2020-04-08T13:50:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-08T13:50:23Z"}, "message": "Rollup merge of #5419 - dtolnay:unreadable, r=flip1995\n\nDowngrade unreadable_literal to pedantic\n\nAs motivated by #5418. This is the top most commonly suppressed Clippy style lint, which indicates that the community has decided they don't share Clippy's opinion on the best style of this.\n\nI've left the lint in as pedantic, though it could be that \"restriction\" would be better -- I can see this lint being useful as an opt-in restriction in some codebases.\n\nchangelog: Remove unreadable_literal from default set of enabled lints", "tree": {"sha": "4e476815837f22bdafd6a8d4d1d10284339dd4b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e476815837f22bdafd6a8d4d1d10284339dd4b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2011d9a7834a8ab5e2a7d71421227fabc6a31c7c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJejdafCRBK7hj4Ov3rIwAAdHIIAISXHO8lTzUCBQyjIlwsrRtj\neKB2YdGwFNjYg9xwL33F2elDC3QSVrUljgYe5Av478cWI1Eqip8hGYt4DsmuUeCd\nVI0rwMQNRZtLHhHTvCC0jkt62PcXTjv9g1lUzTKCkO++X5t2C1JPELWEAyxoKLqV\nWnNN471e1/Sv/PunK2fmzEBtS407YxOjMrN79unNPGTpzbOIBCXjhOjfpqVvBa7R\nRYLJyIK5emzB/W7u6II94d8H7/oZQ9E0gYurGFTt1brXc/wJYqFUZnVSfKI7tq1I\ndSh4KxFzG2Lh3nUBOJqQusvGo3FpVXWV47cIKHiE+21mLhNuEEqYkcg2J64tyJs=\n=pPxe\n-----END PGP SIGNATURE-----\n", "payload": "tree 4e476815837f22bdafd6a8d4d1d10284339dd4b3\nparent f84b72bf3afc093e76b808b8928aa7f13a438227\nparent be34bc46ed7699c598e4525b07e04067e19e49aa\nauthor Philipp Krones <hello@philkrones.com> 1586353823 +0200\ncommitter GitHub <noreply@github.com> 1586353823 +0200\n\nRollup merge of #5419 - dtolnay:unreadable, r=flip1995\n\nDowngrade unreadable_literal to pedantic\n\nAs motivated by #5418. This is the top most commonly suppressed Clippy style lint, which indicates that the community has decided they don't share Clippy's opinion on the best style of this.\n\nI've left the lint in as pedantic, though it could be that \"restriction\" would be better -- I can see this lint being useful as an opt-in restriction in some codebases.\n\nchangelog: Remove unreadable_literal from default set of enabled lints\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2011d9a7834a8ab5e2a7d71421227fabc6a31c7c", "html_url": "https://github.com/rust-lang/rust/commit/2011d9a7834a8ab5e2a7d71421227fabc6a31c7c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2011d9a7834a8ab5e2a7d71421227fabc6a31c7c/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f84b72bf3afc093e76b808b8928aa7f13a438227", "url": "https://api.github.com/repos/rust-lang/rust/commits/f84b72bf3afc093e76b808b8928aa7f13a438227", "html_url": "https://github.com/rust-lang/rust/commit/f84b72bf3afc093e76b808b8928aa7f13a438227"}, {"sha": "be34bc46ed7699c598e4525b07e04067e19e49aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/be34bc46ed7699c598e4525b07e04067e19e49aa", "html_url": "https://github.com/rust-lang/rust/commit/be34bc46ed7699c598e4525b07e04067e19e49aa"}], "stats": {"total": 37, "additions": 21, "deletions": 16}, "files": [{"sha": "201aa48e3ecc08a3f238734749b1321b998b55a1", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2011d9a7834a8ab5e2a7d71421227fabc6a31c7c/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2011d9a7834a8ab5e2a7d71421227fabc6a31c7c/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=2011d9a7834a8ab5e2a7d71421227fabc6a31c7c", "patch": "@@ -1105,6 +1105,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&items_after_statements::ITEMS_AFTER_STATEMENTS),\n         LintId::of(&large_stack_arrays::LARGE_STACK_ARRAYS),\n         LintId::of(&literal_representation::LARGE_DIGIT_GROUPS),\n+        LintId::of(&literal_representation::UNREADABLE_LITERAL),\n         LintId::of(&loops::EXPLICIT_INTO_ITER_LOOP),\n         LintId::of(&loops::EXPLICIT_ITER_LOOP),\n         LintId::of(&macro_use::MACRO_USE_IMPORTS),\n@@ -1229,7 +1230,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&lifetimes::NEEDLESS_LIFETIMES),\n         LintId::of(&literal_representation::INCONSISTENT_DIGIT_GROUPING),\n         LintId::of(&literal_representation::MISTYPED_LITERAL_SUFFIXES),\n-        LintId::of(&literal_representation::UNREADABLE_LITERAL),\n         LintId::of(&loops::EMPTY_LOOP),\n         LintId::of(&loops::EXPLICIT_COUNTER_LOOP),\n         LintId::of(&loops::FOR_KV_MAP),\n@@ -1436,7 +1436,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&len_zero::LEN_ZERO),\n         LintId::of(&let_if_seq::USELESS_LET_IF_SEQ),\n         LintId::of(&literal_representation::INCONSISTENT_DIGIT_GROUPING),\n-        LintId::of(&literal_representation::UNREADABLE_LITERAL),\n         LintId::of(&loops::EMPTY_LOOP),\n         LintId::of(&loops::FOR_KV_MAP),\n         LintId::of(&loops::NEEDLESS_RANGE_LOOP),"}, {"sha": "0a6ffc1130a306f78bc214bb83408403958205fa", "filename": "clippy_lints/src/literal_representation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2011d9a7834a8ab5e2a7d71421227fabc6a31c7c/clippy_lints%2Fsrc%2Fliteral_representation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2011d9a7834a8ab5e2a7d71421227fabc6a31c7c/clippy_lints%2Fsrc%2Fliteral_representation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fliteral_representation.rs?ref=2011d9a7834a8ab5e2a7d71421227fabc6a31c7c", "patch": "@@ -27,7 +27,7 @@ declare_clippy_lint! {\n     /// let x: u64 = 61864918973511;\n     /// ```\n     pub UNREADABLE_LITERAL,\n-    style,\n+    pedantic,\n     \"long integer literal without underscores\"\n }\n "}, {"sha": "33bbfff2011de7cd3a87b6e4cfedc3b07ca5ce52", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2011d9a7834a8ab5e2a7d71421227fabc6a31c7c/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2011d9a7834a8ab5e2a7d71421227fabc6a31c7c/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=2011d9a7834a8ab5e2a7d71421227fabc6a31c7c", "patch": "@@ -2301,7 +2301,7 @@ pub static ref ALL_LINTS: Vec<Lint> = vec![\n     },\n     Lint {\n         name: \"unreadable_literal\",\n-        group: \"style\",\n+        group: \"pedantic\",\n         desc: \"long integer literal without underscores\",\n         deprecation: None,\n         module: \"literal_representation\","}, {"sha": "fb57a0becbb25e81b751bef0e1be0ddb0b559253", "filename": "tests/ui/approx_const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2011d9a7834a8ab5e2a7d71421227fabc6a31c7c/tests%2Fui%2Fapprox_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2011d9a7834a8ab5e2a7d71421227fabc6a31c7c/tests%2Fui%2Fapprox_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fapprox_const.rs?ref=2011d9a7834a8ab5e2a7d71421227fabc6a31c7c", "patch": "@@ -1,5 +1,5 @@\n #[warn(clippy::approx_constant)]\n-#[allow(unused, clippy::shadow_unrelated, clippy::similar_names, clippy::unreadable_literal)]\n+#[allow(unused, clippy::shadow_unrelated, clippy::similar_names)]\n fn main() {\n     let my_e = 2.7182;\n     let almost_e = 2.718;"}, {"sha": "ae4d1806af494af782da82b7fd39261839edaa40", "filename": "tests/ui/inconsistent_digit_grouping.fixed", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2011d9a7834a8ab5e2a7d71421227fabc6a31c7c/tests%2Fui%2Finconsistent_digit_grouping.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/2011d9a7834a8ab5e2a7d71421227fabc6a31c7c/tests%2Fui%2Finconsistent_digit_grouping.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finconsistent_digit_grouping.fixed?ref=2011d9a7834a8ab5e2a7d71421227fabc6a31c7c", "patch": "@@ -1,5 +1,6 @@\n // run-rustfix\n #[warn(clippy::inconsistent_digit_grouping)]\n+#[deny(clippy::unreadable_literal)]\n #[allow(unused_variables, clippy::excessive_precision)]\n fn main() {\n     macro_rules! mac1 {"}, {"sha": "a1ac21746f648254ca08e4f337ea1643a4488fca", "filename": "tests/ui/inconsistent_digit_grouping.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2011d9a7834a8ab5e2a7d71421227fabc6a31c7c/tests%2Fui%2Finconsistent_digit_grouping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2011d9a7834a8ab5e2a7d71421227fabc6a31c7c/tests%2Fui%2Finconsistent_digit_grouping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finconsistent_digit_grouping.rs?ref=2011d9a7834a8ab5e2a7d71421227fabc6a31c7c", "patch": "@@ -1,5 +1,6 @@\n // run-rustfix\n #[warn(clippy::inconsistent_digit_grouping)]\n+#[deny(clippy::unreadable_literal)]\n #[allow(unused_variables, clippy::excessive_precision)]\n fn main() {\n     macro_rules! mac1 {"}, {"sha": "b8ac915546200718aba29271f5776a380980efe7", "filename": "tests/ui/inconsistent_digit_grouping.stderr", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/2011d9a7834a8ab5e2a7d71421227fabc6a31c7c/tests%2Fui%2Finconsistent_digit_grouping.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2011d9a7834a8ab5e2a7d71421227fabc6a31c7c/tests%2Fui%2Finconsistent_digit_grouping.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finconsistent_digit_grouping.stderr?ref=2011d9a7834a8ab5e2a7d71421227fabc6a31c7c", "patch": "@@ -1,63 +1,67 @@\n error: digits grouped inconsistently by underscores\n-  --> $DIR/inconsistent_digit_grouping.rs:25:16\n+  --> $DIR/inconsistent_digit_grouping.rs:26:16\n    |\n LL |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n    |                ^^^^^^^^ help: consider: `123_456`\n    |\n    = note: `-D clippy::inconsistent-digit-grouping` implied by `-D warnings`\n \n error: digits grouped inconsistently by underscores\n-  --> $DIR/inconsistent_digit_grouping.rs:25:26\n+  --> $DIR/inconsistent_digit_grouping.rs:26:26\n    |\n LL |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n    |                          ^^^^^^^^^^ help: consider: `12_345_678`\n \n error: digits grouped inconsistently by underscores\n-  --> $DIR/inconsistent_digit_grouping.rs:25:38\n+  --> $DIR/inconsistent_digit_grouping.rs:26:38\n    |\n LL |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n    |                                      ^^^^^^^^ help: consider: `1_234_567`\n \n error: digits grouped inconsistently by underscores\n-  --> $DIR/inconsistent_digit_grouping.rs:25:48\n+  --> $DIR/inconsistent_digit_grouping.rs:26:48\n    |\n LL |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n    |                                                ^^^^^^^^^^^^^^ help: consider: `1_234.567_8_f32`\n \n error: digits grouped inconsistently by underscores\n-  --> $DIR/inconsistent_digit_grouping.rs:25:64\n+  --> $DIR/inconsistent_digit_grouping.rs:26:64\n    |\n LL |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n    |                                                                ^^^^^^^^^^^^^^ help: consider: `1.234_567_8_f32`\n \n error: long literal lacking separators\n-  --> $DIR/inconsistent_digit_grouping.rs:28:13\n+  --> $DIR/inconsistent_digit_grouping.rs:29:13\n    |\n LL |     let _ = 0x100000;\n    |             ^^^^^^^^ help: consider: `0x0010_0000`\n    |\n-   = note: `-D clippy::unreadable-literal` implied by `-D warnings`\n+note: the lint level is defined here\n+  --> $DIR/inconsistent_digit_grouping.rs:3:8\n+   |\n+LL | #[deny(clippy::unreadable_literal)]\n+   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: long literal lacking separators\n-  --> $DIR/inconsistent_digit_grouping.rs:29:13\n+  --> $DIR/inconsistent_digit_grouping.rs:30:13\n    |\n LL |     let _ = 0x1000000;\n    |             ^^^^^^^^^ help: consider: `0x0100_0000`\n \n error: long literal lacking separators\n-  --> $DIR/inconsistent_digit_grouping.rs:30:13\n+  --> $DIR/inconsistent_digit_grouping.rs:31:13\n    |\n LL |     let _ = 0x10000000;\n    |             ^^^^^^^^^^ help: consider: `0x1000_0000`\n \n error: long literal lacking separators\n-  --> $DIR/inconsistent_digit_grouping.rs:31:13\n+  --> $DIR/inconsistent_digit_grouping.rs:32:13\n    |\n LL |     let _ = 0x100000000_u64;\n    |             ^^^^^^^^^^^^^^^ help: consider: `0x0001_0000_0000_u64`\n \n error: digits grouped inconsistently by underscores\n-  --> $DIR/inconsistent_digit_grouping.rs:34:18\n+  --> $DIR/inconsistent_digit_grouping.rs:35:18\n    |\n LL |     let _: f32 = 1_23_456.;\n    |                  ^^^^^^^^^ help: consider: `123_456.`"}]}