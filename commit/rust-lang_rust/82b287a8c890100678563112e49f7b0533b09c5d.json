{"sha": "82b287a8c890100678563112e49f7b0533b09c5d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyYjI4N2E4Yzg5MDEwMDY3ODU2MzExMmU0OWY3YjA1MzNiMDljNWQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-10-30T09:28:46Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-10-31T16:41:40Z"}, "message": "test \"needs drop\" on region-erased, lifted types\n\nThis will be important in next commit, since the input types will be\ntagged not with `'gcx` but rather `'tcx`. Also, using the region-erased,\nlifted types enables better caching.", "tree": {"sha": "876004da02e70ed4d1d9759ae9cb1f15ded11649", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/876004da02e70ed4d1d9759ae9cb1f15ded11649"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/82b287a8c890100678563112e49f7b0533b09c5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/82b287a8c890100678563112e49f7b0533b09c5d", "html_url": "https://github.com/rust-lang/rust/commit/82b287a8c890100678563112e49f7b0533b09c5d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/82b287a8c890100678563112e49f7b0533b09c5d/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2c248efea07ec8b48386845fad9e5b6f46dc644", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2c248efea07ec8b48386845fad9e5b6f46dc644", "html_url": "https://github.com/rust-lang/rust/commit/b2c248efea07ec8b48386845fad9e5b6f46dc644"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "8f34278e1457aebd27d3ba3e5161fec76174e1c5", "filename": "src/librustc_mir/dataflow/drop_flag_effects.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/82b287a8c890100678563112e49f7b0533b09c5d/src%2Flibrustc_mir%2Fdataflow%2Fdrop_flag_effects.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82b287a8c890100678563112e49f7b0533b09c5d/src%2Flibrustc_mir%2Fdataflow%2Fdrop_flag_effects.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fdrop_flag_effects.rs?ref=82b287a8c890100678563112e49f7b0533b09c5d", "patch": "@@ -151,7 +151,9 @@ pub(crate) fn on_all_drop_children_bits<'a, 'tcx, F>(\n         let ty = lvalue.ty(mir, tcx).to_ty(tcx);\n         debug!(\"on_all_drop_children_bits({:?}, {:?} : {:?})\", path, lvalue, ty);\n \n-        if ty.needs_drop(tcx, ctxt.param_env) {\n+        let gcx = tcx.global_tcx();\n+        let erased_ty = gcx.lift(&tcx.erase_regions(&ty)).unwrap();\n+        if erased_ty.needs_drop(gcx, ctxt.param_env) {\n             each_child(child);\n         } else {\n             debug!(\"on_all_drop_children_bits - skipping\")\n@@ -196,7 +198,9 @@ pub(crate) fn drop_flag_effects_for_location<'a, 'tcx, F>(\n         // don't move out of non-Copy things\n         let lvalue = &move_data.move_paths[path].lvalue;\n         let ty = lvalue.ty(mir, tcx).to_ty(tcx);\n-        if !ty.moves_by_default(tcx, param_env, DUMMY_SP) {\n+        let gcx = tcx.global_tcx();\n+        let erased_ty = gcx.lift(&tcx.erase_regions(&ty)).unwrap();\n+        if !erased_ty.moves_by_default(gcx, param_env, DUMMY_SP) {\n             continue;\n         }\n "}, {"sha": "147a620c40e4ef26fbfcb10e4ccae2a21369e6bb", "filename": "src/librustc_mir/dataflow/move_paths/builder.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/82b287a8c890100678563112e49f7b0533b09c5d/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82b287a8c890100678563112e49f7b0533b09c5d/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fbuilder.rs?ref=82b287a8c890100678563112e49f7b0533b09c5d", "patch": "@@ -352,8 +352,10 @@ impl<'b, 'a, 'tcx> Gatherer<'b, 'a, 'tcx> {\n         debug!(\"gather_move({:?}, {:?})\", self.loc, lval);\n \n         let tcx = self.builder.tcx;\n+        let gcx = tcx.global_tcx();\n         let lv_ty = lval.ty(self.builder.mir, tcx).to_ty(tcx);\n-        if !lv_ty.moves_by_default(tcx, self.builder.param_env, DUMMY_SP) {\n+        let erased_ty = gcx.lift(&tcx.erase_regions(&lv_ty)).unwrap();\n+        if !erased_ty.moves_by_default(gcx, self.builder.param_env, DUMMY_SP) {\n             debug!(\"gather_move({:?}, {:?}) - {:?} is Copy. skipping\", self.loc, lval, lv_ty);\n             return\n         }"}]}