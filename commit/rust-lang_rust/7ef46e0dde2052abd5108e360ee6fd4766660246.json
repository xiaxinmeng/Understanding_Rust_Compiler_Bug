{"sha": "7ef46e0dde2052abd5108e360ee6fd4766660246", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlZjQ2ZTBkZGUyMDUyYWJkNTEwOGUzNjBlZTZmZDQ3NjY2NjAyNDY=", "commit": {"author": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2015-05-07T22:14:00Z"}, "committer": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2015-05-07T22:14:00Z"}, "message": "doc: the prevailing convention is to use assert_eq! when 2 values are compared", "tree": {"sha": "6b38ffb91e6df309639524f377236463eb48c571", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b38ffb91e6df309639524f377236463eb48c571"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ef46e0dde2052abd5108e360ee6fd4766660246", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ef46e0dde2052abd5108e360ee6fd4766660246", "html_url": "https://github.com/rust-lang/rust/commit/7ef46e0dde2052abd5108e360ee6fd4766660246", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ef46e0dde2052abd5108e360ee6fd4766660246/comments", "author": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a39d4fc68472ed7a512a7de93f422d7697d92e06", "url": "https://api.github.com/repos/rust-lang/rust/commits/a39d4fc68472ed7a512a7de93f422d7697d92e06", "html_url": "https://github.com/rust-lang/rust/commit/a39d4fc68472ed7a512a7de93f422d7697d92e06"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "de962b51e059080b678f83b83ce71228ee372538", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/7ef46e0dde2052abd5108e360ee6fd4766660246/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ef46e0dde2052abd5108e360ee6fd4766660246/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=7ef46e0dde2052abd5108e360ee6fd4766660246", "patch": "@@ -137,7 +137,7 @@ pub trait Iterator {\n     ///\n     /// ```\n     /// let a = [1, 2, 3, 4, 5];\n-    /// assert!(a.iter().last().unwrap() == &5);\n+    /// assert_eq!(a.iter().last().unwrap(), &5);\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -155,8 +155,8 @@ pub trait Iterator {\n     /// ```\n     /// let a = [1, 2, 3, 4, 5];\n     /// let mut it = a.iter();\n-    /// assert!(it.nth(2).unwrap() == &3);\n-    /// assert!(it.nth(2) == None);\n+    /// assert_eq!(it.nth(2).unwrap(), &3);\n+    /// assert_eq!(it.nth(2), None);\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -545,8 +545,8 @@ pub trait Iterator {\n     /// let mut it = 0..10;\n     /// // sum the first five values\n     /// let partial_sum = it.by_ref().take(5).fold(0, |a, b| a + b);\n-    /// assert!(partial_sum == 10);\n-    /// assert!(it.next() == Some(5));\n+    /// assert_eq!(partial_sum, 10);\n+    /// assert_eq!(it.next(), Some(5));\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn by_ref(&mut self) -> &mut Self where Self: Sized { self }\n@@ -608,7 +608,7 @@ pub trait Iterator {\n     ///\n     /// ```\n     /// let a = [1, 2, 3, 4, 5];\n-    /// assert!(a.iter().fold(0, |acc, &item| acc + item) == 15);\n+    /// assert_eq!(a.iter().fold(0, |acc, &item| acc + item), 15);\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -773,7 +773,7 @@ pub trait Iterator {\n     ///\n     /// ```\n     /// let a = [1, 2, 3, 4, 5];\n-    /// assert!(a.iter().max().unwrap() == &5);\n+    /// assert_eq!(a.iter().max().unwrap(), &5);\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -796,7 +796,7 @@ pub trait Iterator {\n     ///\n     /// ```\n     /// let a = [1, 2, 3, 4, 5];\n-    /// assert!(a.iter().min().unwrap() == &1);\n+    /// assert_eq!(a.iter().min().unwrap(), &1);\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -834,13 +834,13 @@ pub trait Iterator {\n     /// assert_eq!(a.iter().min_max(), NoElements);\n     ///\n     /// let a = [1];\n-    /// assert!(a.iter().min_max() == OneElement(&1));\n+    /// assert_eq!(a.iter().min_max(), OneElement(&1));\n     ///\n     /// let a = [1, 2, 3, 4, 5];\n-    /// assert!(a.iter().min_max() == MinMax(&1, &5));\n+    /// assert_eq!(a.iter().min_max(), MinMax(&1, &5));\n     ///\n     /// let a = [1, 1, 1, 1];\n-    /// assert!(a.iter().min_max() == MinMax(&1, &1));\n+    /// assert_eq!(a.iter().min_max(), MinMax(&1, &1));\n     /// ```\n     #[unstable(feature = \"core\", reason = \"return type may change\")]\n     fn min_max(mut self) -> MinMaxResult<Self::Item> where Self: Sized, Self::Item: Ord\n@@ -1058,7 +1058,7 @@ pub trait Iterator {\n     ///\n     /// let a = [1, 2, 3, 4, 5];\n     /// let mut it = a.iter().cloned();\n-    /// assert!(it.sum::<i32>() == 15);\n+    /// assert_eq!(it.sum::<i32>(), 15);\n     /// ```\n     #[unstable(feature=\"core\")]\n     fn sum<S=<Self as Iterator>::Item>(self) -> S where\n@@ -1078,9 +1078,9 @@ pub trait Iterator {\n     /// fn factorial(n: u32) -> u32 {\n     ///     (1..).take_while(|&i| i <= n).product()\n     /// }\n-    /// assert!(factorial(0) == 1);\n-    /// assert!(factorial(1) == 1);\n-    /// assert!(factorial(5) == 120);\n+    /// assert_eq!(factorial(0), 1);\n+    /// assert_eq!(factorial(1), 1);\n+    /// assert_eq!(factorial(5), 120);\n     /// ```\n     #[unstable(feature=\"core\")]\n     fn product<P=<Self as Iterator>::Item>(self) -> P where"}]}