{"sha": "b7f23968cc44763b4d2c357ca0f45d33e56d2a2a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3ZjIzOTY4Y2M0NDc2M2I0ZDJjMzU3Y2EwZjQ1ZDMzZTU2ZDJhMmE=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-06-18T21:01:25Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-06-18T21:01:25Z"}, "message": "Perform obligation deduplication to avoid buggy `ExistentialMismatch`\n\nFix #59326.", "tree": {"sha": "fab220880b8d54a1ade931127dfbf734f2eeab77", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fab220880b8d54a1ade931127dfbf734f2eeab77"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7f23968cc44763b4d2c357ca0f45d33e56d2a2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7f23968cc44763b4d2c357ca0f45d33e56d2a2a", "html_url": "https://github.com/rust-lang/rust/commit/b7f23968cc44763b4d2c357ca0f45d33e56d2a2a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7f23968cc44763b4d2c357ca0f45d33e56d2a2a/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff4a2533a0720f9cdd86e02eafa3725f07aa7752", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff4a2533a0720f9cdd86e02eafa3725f07aa7752", "html_url": "https://github.com/rust-lang/rust/commit/ff4a2533a0720f9cdd86e02eafa3725f07aa7752"}], "stats": {"total": 42, "additions": 39, "deletions": 3}, "files": [{"sha": "94f9e262865eb2837a5fe8f72f875d41e6444e40", "filename": "src/librustc_middle/ty/relate.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b7f23968cc44763b4d2c357ca0f45d33e56d2a2a/src%2Flibrustc_middle%2Fty%2Frelate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7f23968cc44763b4d2c357ca0f45d33e56d2a2a/src%2Flibrustc_middle%2Fty%2Frelate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Frelate.rs?ref=b7f23968cc44763b4d2c357ca0f45d33e56d2a2a", "patch": "@@ -617,12 +617,22 @@ impl<'tcx> Relate<'tcx> for &'tcx ty::List<ty::ExistentialPredicate<'tcx>> {\n         a: &Self,\n         b: &Self,\n     ) -> RelateResult<'tcx, Self> {\n-        if a.len() != b.len() {\n+        let tcx = relation.tcx();\n+\n+        // FIXME: this is wasteful, but want to do a perf run to see how slow it is.\n+        // We need to perform this deduplication as we sometimes generate duplicate projections\n+        // in `a`.\n+        let mut a_v: Vec<_> = a.into_iter().collect();\n+        let mut b_v: Vec<_> = b.into_iter().collect();\n+        a_v.sort_by(|a, b| a.stable_cmp(tcx, b));\n+        a_v.dedup();\n+        b_v.sort_by(|a, b| a.stable_cmp(tcx, b));\n+        b_v.dedup();\n+        if a_v.len() != b_v.len() {\n             return Err(TypeError::ExistentialMismatch(expected_found(relation, a, b)));\n         }\n \n-        let tcx = relation.tcx();\n-        let v = a.iter().zip(b.iter()).map(|(ep_a, ep_b)| {\n+        let v = a_v.into_iter().zip(b_v.into_iter()).map(|(ep_a, ep_b)| {\n             use crate::ty::ExistentialPredicate::*;\n             match (ep_a, ep_b) {\n                 (Trait(ref a), Trait(ref b)) => Ok(Trait(relation.relate(a, b)?)),"}, {"sha": "c0e8837749eb4ca93677ce4de379ba37354a8fd3", "filename": "src/test/ui/issues/issue-59326.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/b7f23968cc44763b4d2c357ca0f45d33e56d2a2a/src%2Ftest%2Fui%2Fissues%2Fissue-59326.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7f23968cc44763b4d2c357ca0f45d33e56d2a2a/src%2Ftest%2Fui%2Fissues%2Fissue-59326.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-59326.rs?ref=b7f23968cc44763b4d2c357ca0f45d33e56d2a2a", "patch": "@@ -0,0 +1,26 @@\n+// check-pass\n+trait Service {\n+    type S;\n+}\n+\n+trait Framing {\n+    type F;\n+}\n+\n+impl Framing for () {\n+    type F = ();\n+}\n+\n+trait HttpService<F: Framing>: Service<S = F::F> {}\n+\n+type BoxService = Box<dyn HttpService<(), S = ()>>;\n+\n+fn build_server<F: FnOnce() -> BoxService>(_: F) {}\n+\n+fn make_server<F: Framing>() -> Box<dyn HttpService<F, S = F::F>> {\n+    unimplemented!()\n+}\n+\n+fn main() {\n+    build_server(|| make_server())\n+}"}]}