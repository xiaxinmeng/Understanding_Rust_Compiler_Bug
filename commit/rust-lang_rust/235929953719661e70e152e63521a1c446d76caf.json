{"sha": "235929953719661e70e152e63521a1c446d76caf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzNTkyOTk1MzcxOTY2MWU3MGUxNTJlNjM1MjFhMWM0NDZkNzZjYWY=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-05-24T00:57:21Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-05-24T02:15:23Z"}, "message": "Clear MIR local type annotations after borrowck", "tree": {"sha": "0d2470f973474d3deba96bdfe43a117019a1689f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d2470f973474d3deba96bdfe43a117019a1689f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/235929953719661e70e152e63521a1c446d76caf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/235929953719661e70e152e63521a1c446d76caf", "html_url": "https://github.com/rust-lang/rust/commit/235929953719661e70e152e63521a1c446d76caf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/235929953719661e70e152e63521a1c446d76caf/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4774f9b523c942cb5c0236542b5bcac76f6b6b9a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4774f9b523c942cb5c0236542b5bcac76f6b6b9a", "html_url": "https://github.com/rust-lang/rust/commit/4774f9b523c942cb5c0236542b5bcac76f6b6b9a"}], "stats": {"total": 38, "additions": 21, "deletions": 17}, "files": [{"sha": "3f3d247a8294f55afee2d959722062a7e17195b8", "filename": "src/librustc_mir/transform/cleanup_post_borrowck.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/235929953719661e70e152e63521a1c446d76caf/src%2Flibrustc_mir%2Ftransform%2Fcleanup_post_borrowck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/235929953719661e70e152e63521a1c446d76caf/src%2Flibrustc_mir%2Ftransform%2Fcleanup_post_borrowck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcleanup_post_borrowck.rs?ref=235929953719661e70e152e63521a1c446d76caf", "patch": "@@ -35,6 +35,10 @@ impl<'tcx> MirPass<'tcx> for CleanupNonCodegenStatements {\n         let mut delete = DeleteNonCodegenStatements { tcx };\n         delete.visit_body(body);\n         body.user_type_annotations.raw.clear();\n+\n+        for decl in &mut body.local_decls {\n+            decl.user_ty = None;\n+        }\n     }\n }\n "}, {"sha": "846bfc6d0e4dbb3e64b1efbddf429246a4f997ba", "filename": "src/test/incremental/hashes/let_expressions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fincremental%2Fhashes%2Flet_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fincremental%2Fhashes%2Flet_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Flet_expressions.rs?ref=235929953719661e70e152e63521a1c446d76caf", "patch": "@@ -38,7 +38,7 @@ pub fn add_type() {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"hir_owner_nodes,typeck_tables_of,mir_built,optimized_mir\")]\n+    except=\"hir_owner_nodes,typeck_tables_of,mir_built\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_type() {\n     let _x: u32 = 2u32;"}, {"sha": "d39b9b8a3b4447bc14b14c822b90d82c99c89f09", "filename": "src/test/mir-opt/array-index-is-temporary/32bit/rustc.main.SimplifyCfg-elaborate-drops.after.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fmir-opt%2Farray-index-is-temporary%2F32bit%2Frustc.main.SimplifyCfg-elaborate-drops.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fmir-opt%2Farray-index-is-temporary%2F32bit%2Frustc.main.SimplifyCfg-elaborate-drops.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Farray-index-is-temporary%2F32bit%2Frustc.main.SimplifyCfg-elaborate-drops.after.mir?ref=235929953719661e70e152e63521a1c446d76caf", "patch": "@@ -14,7 +14,7 @@ fn main() -> () {\n         let mut _2: usize;               // in scope 1 at $DIR/array-index-is-temporary.rs:14:9: 14:14\n         scope 2 {\n             debug y => _2;               // in scope 2 at $DIR/array-index-is-temporary.rs:14:9: 14:14\n-            let _3: *mut usize as UserTypeProjection { base: UserType(0), projs: [] }; // in scope 2 at $DIR/array-index-is-temporary.rs:15:9: 15:10\n+            let _3: *mut usize;          // in scope 2 at $DIR/array-index-is-temporary.rs:15:9: 15:10\n             scope 3 {\n                 debug z => _3;           // in scope 3 at $DIR/array-index-is-temporary.rs:15:9: 15:10\n                 scope 4 {"}, {"sha": "381c1ca6f22efc163563e3e052d1bf004ce9ad1e", "filename": "src/test/mir-opt/array-index-is-temporary/64bit/rustc.main.SimplifyCfg-elaborate-drops.after.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fmir-opt%2Farray-index-is-temporary%2F64bit%2Frustc.main.SimplifyCfg-elaborate-drops.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fmir-opt%2Farray-index-is-temporary%2F64bit%2Frustc.main.SimplifyCfg-elaborate-drops.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Farray-index-is-temporary%2F64bit%2Frustc.main.SimplifyCfg-elaborate-drops.after.mir?ref=235929953719661e70e152e63521a1c446d76caf", "patch": "@@ -14,7 +14,7 @@ fn main() -> () {\n         let mut _2: usize;               // in scope 1 at $DIR/array-index-is-temporary.rs:14:9: 14:14\n         scope 2 {\n             debug y => _2;               // in scope 2 at $DIR/array-index-is-temporary.rs:14:9: 14:14\n-            let _3: *mut usize as UserTypeProjection { base: UserType(0), projs: [] }; // in scope 2 at $DIR/array-index-is-temporary.rs:15:9: 15:10\n+            let _3: *mut usize;          // in scope 2 at $DIR/array-index-is-temporary.rs:15:9: 15:10\n             scope 3 {\n                 debug z => _3;           // in scope 3 at $DIR/array-index-is-temporary.rs:15:9: 15:10\n                 scope 4 {"}, {"sha": "d02906132e296a9259dd15a6b36e27e308722f95", "filename": "src/test/mir-opt/const_prop/array_index/32bit/rustc.main.ConstProp.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fmir-opt%2Fconst_prop%2Farray_index%2F32bit%2Frustc.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fmir-opt%2Fconst_prop%2Farray_index%2F32bit%2Frustc.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Farray_index%2F32bit%2Frustc.main.ConstProp.diff?ref=235929953719661e70e152e63521a1c446d76caf", "patch": "@@ -3,7 +3,7 @@\n   \n   fn main() -> () {\n       let mut _0: ();                      // return place in scope 0 at $DIR/array_index.rs:4:11: 4:11\n-      let _1: u32 as UserTypeProjection { base: UserType(0), projs: [] }; // in scope 0 at $DIR/array_index.rs:5:9: 5:10\n+      let _1: u32;                         // in scope 0 at $DIR/array_index.rs:5:9: 5:10\n       let mut _2: [u32; 4];                // in scope 0 at $DIR/array_index.rs:5:18: 5:30\n       let _3: usize;                       // in scope 0 at $DIR/array_index.rs:5:31: 5:32\n       let mut _4: usize;                   // in scope 0 at $DIR/array_index.rs:5:18: 5:33"}, {"sha": "4fe3f08955894cb2046d41d1a4260801b94e4292", "filename": "src/test/mir-opt/const_prop/array_index/64bit/rustc.main.ConstProp.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fmir-opt%2Fconst_prop%2Farray_index%2F64bit%2Frustc.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fmir-opt%2Fconst_prop%2Farray_index%2F64bit%2Frustc.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Farray_index%2F64bit%2Frustc.main.ConstProp.diff?ref=235929953719661e70e152e63521a1c446d76caf", "patch": "@@ -3,7 +3,7 @@\n   \n   fn main() -> () {\n       let mut _0: ();                      // return place in scope 0 at $DIR/array_index.rs:4:11: 4:11\n-      let _1: u32 as UserTypeProjection { base: UserType(0), projs: [] }; // in scope 0 at $DIR/array_index.rs:5:9: 5:10\n+      let _1: u32;                         // in scope 0 at $DIR/array_index.rs:5:9: 5:10\n       let mut _2: [u32; 4];                // in scope 0 at $DIR/array_index.rs:5:18: 5:30\n       let _3: usize;                       // in scope 0 at $DIR/array_index.rs:5:31: 5:32\n       let mut _4: usize;                   // in scope 0 at $DIR/array_index.rs:5:18: 5:33"}, {"sha": "7071f31dbf104d60324aee2279332ba9825053a7", "filename": "src/test/mir-opt/const_prop/bad_op_unsafe_oob_for_slices/32bit/rustc.main.ConstProp.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fbad_op_unsafe_oob_for_slices%2F32bit%2Frustc.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fbad_op_unsafe_oob_for_slices%2F32bit%2Frustc.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fbad_op_unsafe_oob_for_slices%2F32bit%2Frustc.main.ConstProp.diff?ref=235929953719661e70e152e63521a1c446d76caf", "patch": "@@ -3,7 +3,7 @@\n   \n   fn main() -> () {\n       let mut _0: ();                      // return place in scope 0 at $DIR/bad_op_unsafe_oob_for_slices.rs:4:11: 4:11\n-      let _1: *const [i32] as UserTypeProjection { base: UserType(0), projs: [] }; // in scope 0 at $DIR/bad_op_unsafe_oob_for_slices.rs:5:9: 5:10\n+      let _1: *const [i32];                // in scope 0 at $DIR/bad_op_unsafe_oob_for_slices.rs:5:9: 5:10\n       let mut _2: *const [i32; 3];         // in scope 0 at $DIR/bad_op_unsafe_oob_for_slices.rs:5:25: 5:35\n       let _3: &[i32; 3];                   // in scope 0 at $DIR/bad_op_unsafe_oob_for_slices.rs:5:25: 5:35\n       let _4: [i32; 3];                    // in scope 0 at $DIR/bad_op_unsafe_oob_for_slices.rs:5:26: 5:35"}, {"sha": "15995ab070019842123a9424033798a69999a48d", "filename": "src/test/mir-opt/const_prop/bad_op_unsafe_oob_for_slices/64bit/rustc.main.ConstProp.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fbad_op_unsafe_oob_for_slices%2F64bit%2Frustc.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fbad_op_unsafe_oob_for_slices%2F64bit%2Frustc.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fbad_op_unsafe_oob_for_slices%2F64bit%2Frustc.main.ConstProp.diff?ref=235929953719661e70e152e63521a1c446d76caf", "patch": "@@ -3,7 +3,7 @@\n   \n   fn main() -> () {\n       let mut _0: ();                      // return place in scope 0 at $DIR/bad_op_unsafe_oob_for_slices.rs:4:11: 4:11\n-      let _1: *const [i32] as UserTypeProjection { base: UserType(0), projs: [] }; // in scope 0 at $DIR/bad_op_unsafe_oob_for_slices.rs:5:9: 5:10\n+      let _1: *const [i32];                // in scope 0 at $DIR/bad_op_unsafe_oob_for_slices.rs:5:9: 5:10\n       let mut _2: *const [i32; 3];         // in scope 0 at $DIR/bad_op_unsafe_oob_for_slices.rs:5:25: 5:35\n       let _3: &[i32; 3];                   // in scope 0 at $DIR/bad_op_unsafe_oob_for_slices.rs:5:25: 5:35\n       let _4: [i32; 3];                    // in scope 0 at $DIR/bad_op_unsafe_oob_for_slices.rs:5:26: 5:35"}, {"sha": "f9f7d543d21f514153cc1836b7abb1b1d7f8798e", "filename": "src/test/mir-opt/const_prop/checked_add/rustc.main.ConstProp.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fchecked_add%2Frustc.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fchecked_add%2Frustc.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fchecked_add%2Frustc.main.ConstProp.diff?ref=235929953719661e70e152e63521a1c446d76caf", "patch": "@@ -3,7 +3,7 @@\n   \n   fn main() -> () {\n       let mut _0: ();                      // return place in scope 0 at $DIR/checked_add.rs:4:11: 4:11\n-      let _1: u32 as UserTypeProjection { base: UserType(0), projs: [] }; // in scope 0 at $DIR/checked_add.rs:5:9: 5:10\n+      let _1: u32;                         // in scope 0 at $DIR/checked_add.rs:5:9: 5:10\n       let mut _2: (u32, bool);             // in scope 0 at $DIR/checked_add.rs:5:18: 5:23\n       scope 1 {\n           debug x => _1;                   // in scope 1 at $DIR/checked_add.rs:5:9: 5:10"}, {"sha": "f6bb72baea41990c92a25876c9566b2b5074bab1", "filename": "src/test/mir-opt/const_prop/mutable_variable_aggregate_partial_read/rustc.main.ConstProp.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_aggregate_partial_read%2Frustc.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_aggregate_partial_read%2Frustc.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_aggregate_partial_read%2Frustc.main.ConstProp.diff?ref=235929953719661e70e152e63521a1c446d76caf", "patch": "@@ -3,7 +3,7 @@\n   \n   fn main() -> () {\n       let mut _0: ();                      // return place in scope 0 at $DIR/mutable_variable_aggregate_partial_read.rs:4:11: 4:11\n-      let mut _1: (i32, i32) as UserTypeProjection { base: UserType(0), projs: [] }; // in scope 0 at $DIR/mutable_variable_aggregate_partial_read.rs:5:9: 5:14\n+      let mut _1: (i32, i32);              // in scope 0 at $DIR/mutable_variable_aggregate_partial_read.rs:5:9: 5:14\n       scope 1 {\n           debug x => _1;                   // in scope 1 at $DIR/mutable_variable_aggregate_partial_read.rs:5:9: 5:14\n           let _2: i32;                     // in scope 1 at $DIR/mutable_variable_aggregate_partial_read.rs:8:9: 8:10"}, {"sha": "e0b9fbe04c387465bb1d8788040237df30c20eba", "filename": "src/test/mir-opt/const_prop/mutable_variable_unprop_assign/rustc.main.ConstProp.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_unprop_assign%2Frustc.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_unprop_assign%2Frustc.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_unprop_assign%2Frustc.main.ConstProp.diff?ref=235929953719661e70e152e63521a1c446d76caf", "patch": "@@ -7,7 +7,7 @@\n       let mut _3: i32;                     // in scope 0 at $DIR/mutable_variable_unprop_assign.rs:7:11: 7:12\n       scope 1 {\n           debug a => _1;                   // in scope 1 at $DIR/mutable_variable_unprop_assign.rs:5:9: 5:10\n-          let mut _2: (i32, i32) as UserTypeProjection { base: UserType(0), projs: [] }; // in scope 1 at $DIR/mutable_variable_unprop_assign.rs:6:9: 6:14\n+          let mut _2: (i32, i32);          // in scope 1 at $DIR/mutable_variable_unprop_assign.rs:6:9: 6:14\n           scope 2 {\n               debug x => _2;               // in scope 2 at $DIR/mutable_variable_unprop_assign.rs:6:9: 6:14\n               let _4: i32;                 // in scope 2 at $DIR/mutable_variable_unprop_assign.rs:8:9: 8:10"}, {"sha": "b1c9e22913935d2fae793db7b9e56c5fb3fe3aa8", "filename": "src/test/mir-opt/const_prop/repeat/32bit/rustc.main.ConstProp.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fmir-opt%2Fconst_prop%2Frepeat%2F32bit%2Frustc.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fmir-opt%2Fconst_prop%2Frepeat%2F32bit%2Frustc.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Frepeat%2F32bit%2Frustc.main.ConstProp.diff?ref=235929953719661e70e152e63521a1c446d76caf", "patch": "@@ -3,7 +3,7 @@\n   \n   fn main() -> () {\n       let mut _0: ();                      // return place in scope 0 at $DIR/repeat.rs:5:11: 5:11\n-      let _1: u32 as UserTypeProjection { base: UserType(0), projs: [] }; // in scope 0 at $DIR/repeat.rs:6:9: 6:10\n+      let _1: u32;                         // in scope 0 at $DIR/repeat.rs:6:9: 6:10\n       let mut _2: u32;                     // in scope 0 at $DIR/repeat.rs:6:18: 6:28\n       let mut _3: [u32; 8];                // in scope 0 at $DIR/repeat.rs:6:18: 6:25\n       let _4: usize;                       // in scope 0 at $DIR/repeat.rs:6:26: 6:27"}, {"sha": "29555b03a8b8e031a94f744df6fcf790168753da", "filename": "src/test/mir-opt/const_prop/repeat/64bit/rustc.main.ConstProp.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fmir-opt%2Fconst_prop%2Frepeat%2F64bit%2Frustc.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fmir-opt%2Fconst_prop%2Frepeat%2F64bit%2Frustc.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Frepeat%2F64bit%2Frustc.main.ConstProp.diff?ref=235929953719661e70e152e63521a1c446d76caf", "patch": "@@ -3,7 +3,7 @@\n   \n   fn main() -> () {\n       let mut _0: ();                      // return place in scope 0 at $DIR/repeat.rs:5:11: 5:11\n-      let _1: u32 as UserTypeProjection { base: UserType(0), projs: [] }; // in scope 0 at $DIR/repeat.rs:6:9: 6:10\n+      let _1: u32;                         // in scope 0 at $DIR/repeat.rs:6:9: 6:10\n       let mut _2: u32;                     // in scope 0 at $DIR/repeat.rs:6:18: 6:28\n       let mut _3: [u32; 8];                // in scope 0 at $DIR/repeat.rs:6:18: 6:25\n       let _4: usize;                       // in scope 0 at $DIR/repeat.rs:6:26: 6:27"}, {"sha": "f31d5fae9ed379ea1ca68e328300b0f4b0ff419d", "filename": "src/test/mir-opt/inline/inline-into-box-place/32bit/rustc.main.Inline.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fmir-opt%2Finline%2Finline-into-box-place%2F32bit%2Frustc.main.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fmir-opt%2Finline%2Finline-into-box-place%2F32bit%2Frustc.main.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline-into-box-place%2F32bit%2Frustc.main.Inline.diff?ref=235929953719661e70e152e63521a1c446d76caf", "patch": "@@ -3,7 +3,7 @@\n   \n   fn main() -> () {\n       let mut _0: ();                      // return place in scope 0 at $DIR/inline-into-box-place.rs:7:11: 7:11\n-      let _1: std::boxed::Box<std::vec::Vec<u32>> as UserTypeProjection { base: UserType(0), projs: [] }; // in scope 0 at $DIR/inline-into-box-place.rs:8:9: 8:11\n+      let _1: std::boxed::Box<std::vec::Vec<u32>>; // in scope 0 at $DIR/inline-into-box-place.rs:8:9: 8:11\n       let mut _2: std::boxed::Box<std::vec::Vec<u32>>; // in scope 0 at $DIR/inline-into-box-place.rs:8:29: 8:43\n       let mut _3: ();                      // in scope 0 at $DIR/inline-into-box-place.rs:8:42: 8:43\n +     let mut _4: &mut std::vec::Vec<u32>; // in scope 0 at $DIR/inline-into-box-place.rs:8:33: 8:43"}, {"sha": "324ec2d7c5bcd34cf712295e932e297ca24fa0f7", "filename": "src/test/mir-opt/inline/inline-into-box-place/64bit/rustc.main.Inline.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fmir-opt%2Finline%2Finline-into-box-place%2F64bit%2Frustc.main.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fmir-opt%2Finline%2Finline-into-box-place%2F64bit%2Frustc.main.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline-into-box-place%2F64bit%2Frustc.main.Inline.diff?ref=235929953719661e70e152e63521a1c446d76caf", "patch": "@@ -3,7 +3,7 @@\n   \n   fn main() -> () {\n       let mut _0: ();                      // return place in scope 0 at $DIR/inline-into-box-place.rs:7:11: 7:11\n-      let _1: std::boxed::Box<std::vec::Vec<u32>> as UserTypeProjection { base: UserType(0), projs: [] }; // in scope 0 at $DIR/inline-into-box-place.rs:8:9: 8:11\n+      let _1: std::boxed::Box<std::vec::Vec<u32>>; // in scope 0 at $DIR/inline-into-box-place.rs:8:9: 8:11\n       let mut _2: std::boxed::Box<std::vec::Vec<u32>>; // in scope 0 at $DIR/inline-into-box-place.rs:8:29: 8:43\n       let mut _3: ();                      // in scope 0 at $DIR/inline-into-box-place.rs:8:42: 8:43\n +     let mut _4: &mut std::vec::Vec<u32>; // in scope 0 at $DIR/inline-into-box-place.rs:8:33: 8:43"}, {"sha": "459c6b7a70a3633b525d13e8ae8c63c5bcec3be3", "filename": "src/test/mir-opt/retag/rustc.main.SimplifyCfg-elaborate-drops.after.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fmir-opt%2Fretag%2Frustc.main.SimplifyCfg-elaborate-drops.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fmir-opt%2Fretag%2Frustc.main.SimplifyCfg-elaborate-drops.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fretag%2Frustc.main.SimplifyCfg-elaborate-drops.after.mir?ref=235929953719661e70e152e63521a1c446d76caf", "patch": "@@ -24,7 +24,7 @@ fn main() -> () {\n     scope 1 {\n         debug x => _1;                   // in scope 1 at $DIR/retag.rs:30:9: 30:14\n         let _3: &mut i32;                // in scope 1 at $DIR/retag.rs:32:13: 32:14\n-        let _13: for<'r> fn(&'r i32) -> &'r i32 as UserTypeProjection { base: UserType(1), projs: [] }; // in scope 1 at $DIR/retag.rs:40:9: 40:10\n+        let _13: for<'r> fn(&'r i32) -> &'r i32; // in scope 1 at $DIR/retag.rs:40:9: 40:10\n         scope 2 {\n             debug v => _3;               // in scope 2 at $DIR/retag.rs:32:13: 32:14\n             let _8: &mut i32;            // in scope 2 at $DIR/retag.rs:33:13: 33:14"}, {"sha": "dfd6d6f0f2ecd270b614f4ddfad3a17c47f5cc8e", "filename": "src/test/mir-opt/simplify-arm-identity/32bit/rustc.main.SimplifyArmIdentity.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fmir-opt%2Fsimplify-arm-identity%2F32bit%2Frustc.main.SimplifyArmIdentity.diff", "raw_url": "https://github.com/rust-lang/rust/raw/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fmir-opt%2Fsimplify-arm-identity%2F32bit%2Frustc.main.SimplifyArmIdentity.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify-arm-identity%2F32bit%2Frustc.main.SimplifyArmIdentity.diff?ref=235929953719661e70e152e63521a1c446d76caf", "patch": "@@ -3,7 +3,7 @@\n   \n   fn main() -> () {\n       let mut _0: ();                      // return place in scope 0 at $DIR/simplify-arm-identity.rs:17:11: 17:11\n-      let _1: Src as UserTypeProjection { base: UserType(0), projs: [] }; // in scope 0 at $DIR/simplify-arm-identity.rs:18:9: 18:10\n+      let _1: Src;                         // in scope 0 at $DIR/simplify-arm-identity.rs:18:9: 18:10\n       let mut _2: Dst;                     // in scope 0 at $DIR/simplify-arm-identity.rs:19:18: 22:6\n       let mut _3: isize;                   // in scope 0 at $DIR/simplify-arm-identity.rs:20:9: 20:20\n       let mut _5: u8;                      // in scope 0 at $DIR/simplify-arm-identity.rs:20:33: 20:34"}, {"sha": "f2bbd195869931ae0d53989d03c705461ae8e5ee", "filename": "src/test/mir-opt/simplify-arm-identity/64bit/rustc.main.SimplifyArmIdentity.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fmir-opt%2Fsimplify-arm-identity%2F64bit%2Frustc.main.SimplifyArmIdentity.diff", "raw_url": "https://github.com/rust-lang/rust/raw/235929953719661e70e152e63521a1c446d76caf/src%2Ftest%2Fmir-opt%2Fsimplify-arm-identity%2F64bit%2Frustc.main.SimplifyArmIdentity.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify-arm-identity%2F64bit%2Frustc.main.SimplifyArmIdentity.diff?ref=235929953719661e70e152e63521a1c446d76caf", "patch": "@@ -3,7 +3,7 @@\n   \n   fn main() -> () {\n       let mut _0: ();                      // return place in scope 0 at $DIR/simplify-arm-identity.rs:17:11: 17:11\n-      let _1: Src as UserTypeProjection { base: UserType(0), projs: [] }; // in scope 0 at $DIR/simplify-arm-identity.rs:18:9: 18:10\n+      let _1: Src;                         // in scope 0 at $DIR/simplify-arm-identity.rs:18:9: 18:10\n       let mut _2: Dst;                     // in scope 0 at $DIR/simplify-arm-identity.rs:19:18: 22:6\n       let mut _3: isize;                   // in scope 0 at $DIR/simplify-arm-identity.rs:20:9: 20:20\n       let mut _5: u8;                      // in scope 0 at $DIR/simplify-arm-identity.rs:20:33: 20:34"}]}