{"sha": "5a5c9282e04711df07beb883eb463a136f91fbf9", "node_id": "C_kwDOAAsO6NoAKDVhNWM5MjgyZTA0NzExZGYwN2JlYjg4M2ViNDYzYTEzNmY5MWZiZjk", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-01T09:48:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-01T09:48:53Z"}, "message": "Rollup merge of #88310 - worldeva:bootstrap-locking, r=Mark-Simulacrum\n\nLock bootstrap (x.py) build directory\n\nCloses #76661,  closes #80849,\n`x.py` creates a lock file at `project_root/lock.db`\n\nr? `@jyn514` , because he was one that told me about this~", "tree": {"sha": "f18e5d3a827380c153bce988fefd472118816904", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f18e5d3a827380c153bce988fefd472118816904"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a5c9282e04711df07beb883eb463a136f91fbf9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh0COFCRBK7hj4Ov3rIwAAN6YIAEpn6Se47HEbXD96xS/dfb9C\ncah0cVk4YCNYXUj2+crBxvdGweM40LI/hG6Pks1XgLHU8F+6rOuaonRkTPcavFGO\nztgoJVxl0PV3S8Ulis/UmjSkFa0bxgToVpfYUVO6VJcQu6m1qZ6b09sWnyXRXgi7\nvjTHecs2KhV8aW9m6UutKSTwWl4BUX4buvv13C7qdQs7apTbCbXVzpLkrCRDFOs0\n88yt5Npejtl9R3fYqiS8q/dKaOidE9UGwtsgk7KuHa68UtzxzkeMjmIxU6geZVd6\nZnx78eQ8GOL/oqtK4wDsH7Nu9df/mMwXvtqaRzNt9g2FtPJmmSYWTlFeWFS9Tak=\n=bSvv\n-----END PGP SIGNATURE-----\n", "payload": "tree f18e5d3a827380c153bce988fefd472118816904\nparent ad0d4190facd509a5c79dce427bb7deb2824046e\nparent 1326bd6484725ed78552cd4b7ed7b5ddb5b5eec9\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1641030533 +0100\ncommitter GitHub <noreply@github.com> 1641030533 +0100\n\nRollup merge of #88310 - worldeva:bootstrap-locking, r=Mark-Simulacrum\n\nLock bootstrap (x.py) build directory\n\nCloses #76661,  closes #80849,\n`x.py` creates a lock file at `project_root/lock.db`\n\nr? `@jyn514` , because he was one that told me about this~\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a5c9282e04711df07beb883eb463a136f91fbf9", "html_url": "https://github.com/rust-lang/rust/commit/5a5c9282e04711df07beb883eb463a136f91fbf9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a5c9282e04711df07beb883eb463a136f91fbf9/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad0d4190facd509a5c79dce427bb7deb2824046e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad0d4190facd509a5c79dce427bb7deb2824046e", "html_url": "https://github.com/rust-lang/rust/commit/ad0d4190facd509a5c79dce427bb7deb2824046e"}, {"sha": "1326bd6484725ed78552cd4b7ed7b5ddb5b5eec9", "url": "https://api.github.com/repos/rust-lang/rust/commits/1326bd6484725ed78552cd4b7ed7b5ddb5b5eec9", "html_url": "https://github.com/rust-lang/rust/commit/1326bd6484725ed78552cd4b7ed7b5ddb5b5eec9"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "5a33073e6b022a7159e8109ac74d76e1cdf6ac62", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/5a5c9282e04711df07beb883eb463a136f91fbf9/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/5a5c9282e04711df07beb883eb463a136f91fbf9/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=5a5c9282e04711df07beb883eb463a136f91fbf9", "patch": "@@ -15,6 +15,42 @@\n \n from time import time\n \n+# Acquire a lock on the build directory to make sure that\n+# we don't cause a race condition while building\n+# Lock is created in `build_dir/lock.db`\n+def acquire_lock(build_dir):\n+    try:\n+        import sqlite3\n+\n+        path = os.path.join(build_dir, \"lock.db\")\n+        try:\n+            con = sqlite3.Connection(path, timeout=0)\n+            curs = con.cursor()\n+            curs.execute(\"BEGIN EXCLUSIVE\")\n+            # The lock is released when the cursor is dropped\n+            return curs\n+        # If the database is busy then lock has already been acquired\n+        # so we wait for the lock.\n+        # We retry every quarter second so that execution is passed back to python\n+        # so that it can handle signals\n+        except sqlite3.OperationalError:\n+            del con\n+            del curs\n+            print(\"Waiting for lock on build directory\")\n+            con = sqlite3.Connection(path, timeout=0.25)\n+            curs = con.cursor()\n+            while True:\n+                try:\n+                    curs.execute(\"BEGIN EXCLUSIVE\")\n+                except sqlite3.OperationalError:\n+                    pass\n+            return curs\n+    except ImportError:\n+        print(\"warning: sqlite3 not available in python, skipping build directory lock\")\n+        print(\"please file an issue on rust-lang/rust\")\n+        print(\"this is not a problem for non-concurrent x.py invocations\")\n+        return None\n+\n def support_xz():\n     try:\n         with tempfile.NamedTemporaryFile(delete=False) as temp_file:\n@@ -1228,6 +1264,12 @@ def bootstrap(help_triggered):\n     build.set_dist_environment(data[\"dist_server\"])\n \n     build.build = args.build or build.build_triple()\n+\n+    # Acquire the lock before doing any build actions\n+    # The lock is released when `lock` is dropped\n+    if not os.path.exists(build.build_dir):\n+        os.makedirs(build.build_dir)\n+    lock = acquire_lock(build.build_dir)\n     build.update_submodules()\n \n     # Fetch/build the bootstrap"}]}