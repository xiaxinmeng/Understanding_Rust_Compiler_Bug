{"sha": "0f6399b166d8432650de848f854a82a9abe88e25", "node_id": "C_kwDOAAsO6NoAKDBmNjM5OWIxNjZkODQzMjY1MGRlODQ4Zjg1NGE4MmE5YWJlODhlMjU", "commit": {"author": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2022-06-22T00:50:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-22T00:50:11Z"}, "message": "Merge pull request #284 from programmerjake/fix_splat\n\nChange `Simd::splat` to not generate a loop", "tree": {"sha": "f2bdf6bbbe81bb9ae4959a73e817858dffca63df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2bdf6bbbe81bb9ae4959a73e817858dffca63df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f6399b166d8432650de848f854a82a9abe88e25", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJismdDCRBK7hj4Ov3rIwAA28MIAD2eb56dx1Y2CQ+Xg03yQUoh\nAXUJPthDoNtISlR/h8KPtMseuSNQROyp6PEe0szGxr2Hm+1eN2fFLfDx3j9FQN6i\nuL2XGQXhAHmxL0cbOeVVVZt5vWJIxNgRP8CdfeR9GtbtWTwhvaFNviwnAivvVck3\neTfGzVGsp0y++ConiqGxUcLFWQAYdovA8h3oiu67ETv205QopERGwIzFpAG/o1oV\nseTpIj7dmjO4GQLtZEMREKrmK7hj+uTRAPbcUZQccKQ1S9JoE04Jdudxq9FUy27k\nxdoJ4OjPiEzri6VLfXhmbsc72kclOuL8IW0iYC065ZftfEa8IqWYIGaY4zWhJhw=\n=rkXR\n-----END PGP SIGNATURE-----\n", "payload": "tree f2bdf6bbbe81bb9ae4959a73e817858dffca63df\nparent 3e7a2ed7201ea62f567f31516548ed2ebb4de63c\nparent f7412ad7b918578864f4d9a0fc24279f7fbebc31\nauthor Caleb Zulawski <caleb.zulawski@gmail.com> 1655859011 -0400\ncommitter GitHub <noreply@github.com> 1655859011 -0400\n\nMerge pull request #284 from programmerjake/fix_splat\n\nChange `Simd::splat` to not generate a loop"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f6399b166d8432650de848f854a82a9abe88e25", "html_url": "https://github.com/rust-lang/rust/commit/0f6399b166d8432650de848f854a82a9abe88e25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f6399b166d8432650de848f854a82a9abe88e25/comments", "author": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e7a2ed7201ea62f567f31516548ed2ebb4de63c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e7a2ed7201ea62f567f31516548ed2ebb4de63c", "html_url": "https://github.com/rust-lang/rust/commit/3e7a2ed7201ea62f567f31516548ed2ebb4de63c"}, {"sha": "f7412ad7b918578864f4d9a0fc24279f7fbebc31", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7412ad7b918578864f4d9a0fc24279f7fbebc31", "html_url": "https://github.com/rust-lang/rust/commit/f7412ad7b918578864f4d9a0fc24279f7fbebc31"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "c6f588672b4cbd0c8ec54b9ebde891948c9bba96", "filename": "crates/core_simd/src/vector.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0f6399b166d8432650de848f854a82a9abe88e25/crates%2Fcore_simd%2Fsrc%2Fvector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f6399b166d8432650de848f854a82a9abe88e25/crates%2Fcore_simd%2Fsrc%2Fvector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvector.rs?ref=0f6399b166d8432650de848f854a82a9abe88e25", "patch": "@@ -9,8 +9,9 @@ pub use uint::*;\n // Vectors of pointers are not for public use at the current time.\n pub(crate) mod ptr;\n \n-use crate::simd::intrinsics;\n-use crate::simd::{LaneCount, Mask, MaskElement, SimdPartialOrd, SupportedLaneCount};\n+use crate::simd::{\n+    intrinsics, LaneCount, Mask, MaskElement, SimdPartialOrd, SupportedLaneCount, Swizzle,\n+};\n \n /// A SIMD vector of `LANES` elements of type `T`. `Simd<T, N>` has the same shape as [`[T; N]`](array), but operates like `T`.\n ///\n@@ -123,8 +124,14 @@ where\n     /// let v = u32x4::splat(8);\n     /// assert_eq!(v.as_array(), &[8, 8, 8, 8]);\n     /// ```\n-    pub const fn splat(value: T) -> Self {\n-        Self([value; LANES])\n+    pub fn splat(value: T) -> Self {\n+        // This is a workaround for `[value; LANES]` generating a loop:\n+        // https://github.com/rust-lang/rust/issues/97804\n+        struct Splat;\n+        impl<const LANES: usize> Swizzle<1, LANES> for Splat {\n+            const INDEX: [usize; LANES] = [0; LANES];\n+        }\n+        Splat::swizzle(Simd::<T, 1>::from([value]))\n     }\n \n     /// Returns an array reference containing the entire SIMD vector."}]}