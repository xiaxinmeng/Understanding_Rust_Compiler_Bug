{"sha": "9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliNmM3ZmZhMDYwMTY0M2FhMTcyNGQ2NTUyYjI3NmE3ZjQ0OTZhYTA=", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-06-18T23:02:40Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-06-21T16:40:47Z"}, "message": "Updated tests to reflect specified types in E0121", "tree": {"sha": "c2906122773130fde5259e766085b3e10350c6c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2906122773130fde5259e766085b3e10350c6c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEjbeLZzPb62/vY3smZSV3NIU3bZIFAmDQwQ8ACgkQZSV3NIU3\nbZKABw/8C1hpKVPXpk9DiNuFrySvFldmhNmNHD0UZ8qZT6dVSRYSyHPNv3n6wcin\ntUEGuqxqWYUxYScVusD/YLk58IUc/CPbcR9EKbJJvMKlIHGtTDC0CmkOTyDkH4bY\n8EWIDgIK87NjUrraJPFgi5OT0A+TebDu91+dnDuvkEJOV4fycq+nLXl5pwYs+CmJ\noBTdBgD02zD2mBi/axxAAMSABOAznZSrlmoSvXBayZLknektLSwVREwVu0s9vKgN\nLN087bFOOU0i5Xx0fLpxu4DsfecqEM7IjLZ1hWBjgz950jwapYBuJ6HanjJ598O9\nNBjXnKRNeZ0OSuTWA6QGs+VVF4vswStvfhEUU7BIz/eLb0j3Ypek8RsCaYUa1QCB\nfVaA9u3LdPsdsISRuHseQzWLF11IkefS0E8BP9mXU7InUBA66pbUquuqUda+2nJl\n7lD3iVDZofv4aQ96jgNeHWMs1wy3qVBgJkVsxzzw+w0zYB8y8JbX+Mg0haHW/MfK\nIIl+paxXh4FdEhXwmIBzhZdbul39CRF/7ghzYn4L/LcCxojcALNQadgS2b+pOueE\nv43JTzf66kjbsfp/tLSkIyY6+4UevZk7fgxIhwWTGFhCX8A2kwk5CD27ZADuiZVM\nC73+I47bGM5tf1PGCViYnF5IlA+Ilyq9xLPfP2Pyg72cveRxOBk=\n=0kuR\n-----END PGP SIGNATURE-----", "payload": "tree c2906122773130fde5259e766085b3e10350c6c4\nparent 200fdaac777b8c0a4d5cf2be86f639c61358d518\nauthor Deadbeef <ent3rm4n@gmail.com> 1624057360 +0800\ncommitter Deadbeef <ent3rm4n@gmail.com> 1624293647 +0800\n\nUpdated tests to reflect specified types in E0121\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "html_url": "https://github.com/rust-lang/rust/commit/9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "200fdaac777b8c0a4d5cf2be86f639c61358d518", "url": "https://api.github.com/repos/rust-lang/rust/commits/200fdaac777b8c0a4d5cf2be86f639c61358d518", "html_url": "https://github.com/rust-lang/rust/commit/200fdaac777b8c0a4d5cf2be86f639c61358d518"}], "stats": {"total": 729, "additions": 363, "deletions": 366}, "files": [{"sha": "1b6bcfbb9fcdedf5ad0a39935a092193cffcd9cc", "filename": "src/test/ui/did_you_mean/bad-assoc-ty.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Fdid_you_mean%2Fbad-assoc-ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Fdid_you_mean%2Fbad-assoc-ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fbad-assoc-ty.rs?ref=9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "patch": "@@ -16,7 +16,7 @@ type D = (u8, u8)::AssocTy;\n \n type E = _::AssocTy;\n //~^ ERROR missing angle brackets in associated item path\n-//~| ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~| ERROR the type placeholder `_` is not allowed within types on item signatures for type aliases\n \n type F = &'static (u8)::AssocTy;\n //~^ ERROR missing angle brackets in associated item path\n@@ -47,37 +47,37 @@ type I = ty!()::AssocTy;\n \n trait K<A, B> {}\n fn foo<X: K<_, _>>(x: X) {}\n-//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures for functions\n \n fn bar<F>(_: F) where F: Fn() -> _ {}\n-//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures for functions\n \n fn baz<F: Fn() -> _>(_: F) {}\n-//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures for functions\n \n struct L<F>(F) where F: Fn() -> _;\n-//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures for structs\n struct M<F> where F: Fn() -> _ {\n-//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures for structs\n     a: F,\n }\n enum N<F> where F: Fn() -> _ {\n-//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures for enums\n     Foo(F),\n }\n \n union O<F> where F: Fn() -> _ {\n-//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures for unions\n     foo: F,\n }\n \n trait P<F> where F: Fn() -> _ {\n-//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures for traits\n }\n \n trait Q {\n     fn foo<F>(_: F) where F: Fn() -> _ {}\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for functions\n }\n \n fn main() {}"}, {"sha": "8db9652b1eadeb6a686c956e64c95006b5908289", "filename": "src/test/ui/did_you_mean/bad-assoc-ty.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Fdid_you_mean%2Fbad-assoc-ty.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Fdid_you_mean%2Fbad-assoc-ty.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fbad-assoc-ty.stderr?ref=9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "patch": "@@ -81,7 +81,7 @@ error[E0223]: ambiguous associated type\n LL | type D = (u8, u8)::AssocTy;\n    |          ^^^^^^^^^^^^^^^^^ help: use fully-qualified syntax: `<(u8, u8) as Trait>::AssocTy`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for type aliases\n   --> $DIR/bad-assoc-ty.rs:17:10\n    |\n LL | type E = _::AssocTy;\n@@ -122,7 +122,7 @@ error[E0223]: ambiguous associated type\n LL | type I = ty!()::AssocTy;\n    |          ^^^^^^^^^^^^^^ help: use fully-qualified syntax: `<u8 as Trait>::AssocTy`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n   --> $DIR/bad-assoc-ty.rs:49:13\n    |\n LL | fn foo<X: K<_, _>>(x: X) {}\n@@ -135,7 +135,7 @@ help: use type parameters instead\n LL | fn foo<X: K<T, T>, T>(x: X) {}\n    |             ^  ^ ^^^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n   --> $DIR/bad-assoc-ty.rs:52:34\n    |\n LL | fn bar<F>(_: F) where F: Fn() -> _ {}\n@@ -146,7 +146,7 @@ help: use type parameters instead\n LL | fn bar<F, T>(_: F) where F: Fn() -> T {}\n    |         ^^^                         ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n   --> $DIR/bad-assoc-ty.rs:55:19\n    |\n LL | fn baz<F: Fn() -> _>(_: F) {}\n@@ -157,7 +157,7 @@ help: use type parameters instead\n LL | fn baz<F: Fn() -> T, T>(_: F) {}\n    |                   ^^^^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for structs\n   --> $DIR/bad-assoc-ty.rs:58:33\n    |\n LL | struct L<F>(F) where F: Fn() -> _;\n@@ -168,7 +168,7 @@ help: use type parameters instead\n LL | struct L<F, T>(F) where F: Fn() -> T;\n    |           ^^^                      ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for structs\n   --> $DIR/bad-assoc-ty.rs:60:30\n    |\n LL | struct M<F> where F: Fn() -> _ {\n@@ -179,7 +179,7 @@ help: use type parameters instead\n LL | struct M<F, T> where F: Fn() -> T {\n    |           ^^^                   ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for enums\n   --> $DIR/bad-assoc-ty.rs:64:28\n    |\n LL | enum N<F> where F: Fn() -> _ {\n@@ -190,7 +190,7 @@ help: use type parameters instead\n LL | enum N<F, T> where F: Fn() -> T {\n    |         ^^^                   ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for unions\n   --> $DIR/bad-assoc-ty.rs:69:29\n    |\n LL | union O<F> where F: Fn() -> _ {\n@@ -201,7 +201,7 @@ help: use type parameters instead\n LL | union O<F, T> where F: Fn() -> T {\n    |          ^^^                   ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for traits\n   --> $DIR/bad-assoc-ty.rs:74:29\n    |\n LL | trait P<F> where F: Fn() -> _ {\n@@ -212,7 +212,7 @@ help: use type parameters instead\n LL | trait P<F, T> where F: Fn() -> T {\n    |          ^^^                   ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n   --> $DIR/bad-assoc-ty.rs:79:38\n    |\n LL |     fn foo<F>(_: F) where F: Fn() -> _ {}"}, {"sha": "cc0c2df72ea7ccbf3c90fb041c9c033950861951", "filename": "src/test/ui/error-codes/E0121.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ferror-codes%2FE0121.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ferror-codes%2FE0121.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0121.stderr?ref=9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "patch": "@@ -1,4 +1,4 @@\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n   --> $DIR/E0121.rs:1:13\n    |\n LL | fn foo() -> _ { 5 }\n@@ -7,7 +7,7 @@ LL | fn foo() -> _ { 5 }\n    |             not allowed in type signatures\n    |             help: replace with the correct return type: `i32`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for static variables\n   --> $DIR/E0121.rs:3:13\n    |\n LL | static BAR: _ = \"test\";"}, {"sha": "550974bf7788157aa72a0a3d3197e43c4ef100bd", "filename": "src/test/ui/fn/issue-80179.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ffn%2Fissue-80179.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ffn%2Fissue-80179.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffn%2Fissue-80179.rs?ref=9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "patch": "@@ -8,15 +8,15 @@ fn returns_i32() -> i32 {\n }\n \n fn returns_fn_ptr() -> _ {\n-//~^ ERROR the type placeholder `_` is not allowed within types on item signatures [E0121]\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures for return types [E0121]\n //~| NOTE not allowed in type signatures\n //~| HELP replace with the correct return type\n //~| SUGGESTION fn() -> i32\n     returns_i32\n }\n \n fn returns_closure() -> _ {\n-//~^ ERROR the type placeholder `_` is not allowed within types on item signatures [E0121]\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures for return types [E0121]\n //~| NOTE not allowed in type signatures\n //~| HELP consider using an `Fn`, `FnMut`, or `FnOnce` trait bound\n //~| NOTE for more information on `Fn` traits and closure types, see"}, {"sha": "96d0f02b01af4478c4c88ac656f0b7aefb2cee65", "filename": "src/test/ui/fn/issue-80179.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ffn%2Fissue-80179.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ffn%2Fissue-80179.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffn%2Fissue-80179.stderr?ref=9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "patch": "@@ -1,4 +1,4 @@\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n   --> $DIR/issue-80179.rs:10:24\n    |\n LL | fn returns_fn_ptr() -> _ {\n@@ -7,7 +7,7 @@ LL | fn returns_fn_ptr() -> _ {\n    |                        not allowed in type signatures\n    |                        help: replace with the correct return type: `fn() -> i32`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n   --> $DIR/issue-80179.rs:18:25\n    |\n LL | fn returns_closure() -> _ {"}, {"sha": "6880e1a46293f99a204fcccada17fa1ff91ffd10", "filename": "src/test/ui/issues/issue-69396-const-no-type-in-macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Fissues%2Fissue-69396-const-no-type-in-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Fissues%2Fissue-69396-const-no-type-in-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-69396-const-no-type-in-macro.rs?ref=9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "patch": "@@ -4,7 +4,7 @@ macro_rules! suite {\n             const A = \"A\".$fn();\n             //~^ ERROR the name `A` is defined multiple times\n             //~| ERROR missing type for `const` item\n-            //~| ERROR the type placeholder `_` is not allowed within types\n+            //~| ERROR the type placeholder `_` is not allowed within types on item signatures for constants\n         )*\n     }\n }"}, {"sha": "34c2073db0485f05a44b956f35609ad5c345816f", "filename": "src/test/ui/issues/issue-69396-const-no-type-in-macro.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Fissues%2Fissue-69396-const-no-type-in-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Fissues%2Fissue-69396-const-no-type-in-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-69396-const-no-type-in-macro.stderr?ref=9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "patch": "@@ -20,7 +20,7 @@ error: missing type for `const` item\n   --> $DIR/issue-69396-const-no-type-in-macro.rs:4:19\n    |\n LL |               const A = \"A\".$fn();\n-   |                     ^ help: provide a type for the item: `A: usize`\n+   |                     ^ help: provide a type for the constant: `A: usize`\n ...\n LL | / suite! {\n LL | |     len;\n@@ -30,7 +30,7 @@ LL | | }\n    |\n    = note: this error originates in the macro `suite` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for constants\n   --> $DIR/issue-69396-const-no-type-in-macro.rs:4:19\n    |\n LL |               const A = \"A\".$fn();"}, {"sha": "cc17d8f8e3962e59f2d3782367c7eb6f63603132", "filename": "src/test/ui/self/self-infer.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Fself%2Fself-infer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Fself%2Fself-infer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Fself-infer.rs?ref=9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "patch": "@@ -1,8 +1,8 @@\n struct S;\n \n impl S {\n-    fn f(self: _) {} //~ERROR the type placeholder `_` is not allowed within types on item sig\n-    fn g(self: &_) {} //~ERROR the type placeholder `_` is not allowed within types on item sig\n+    fn f(self: _) {} //~ERROR the type placeholder `_` is not allowed within types on item signatures for functions\n+    fn g(self: &_) {} //~ERROR the type placeholder `_` is not allowed within types on item signatures for functions\n }\n \n fn main() {}"}, {"sha": "8d70c6287e55ac65cac1d3a2454ee913020d640c", "filename": "src/test/ui/self/self-infer.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Fself%2Fself-infer.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Fself%2Fself-infer.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Fself-infer.stderr?ref=9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "patch": "@@ -1,4 +1,4 @@\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n   --> $DIR/self-infer.rs:4:16\n    |\n LL |     fn f(self: _) {}\n@@ -9,7 +9,7 @@ help: use type parameters instead\n LL |     fn f<T>(self: T) {}\n    |         ^^^       ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n   --> $DIR/self-infer.rs:5:17\n    |\n LL |     fn g(self: &_) {}"}, {"sha": "6f46cfdf02467ffa934dc6d46aaedea1f2534ed2", "filename": "src/test/ui/suggestions/const-no-type.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Fsuggestions%2Fconst-no-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Fsuggestions%2Fconst-no-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconst-no-type.rs?ref=9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "patch": "@@ -32,20 +32,20 @@ static mut SM2 = \"abc\";\n \n const C = 42;\n //~^ ERROR missing type for `const` item\n-//~| HELP provide a type for the item\n+//~| HELP provide a type for the constant\n //~| SUGGESTION C: i32\n \n const D = &&42;\n //~^ ERROR missing type for `const` item\n-//~| HELP provide a type for the item\n+//~| HELP provide a type for the constant\n //~| SUGGESTION D: &&i32\n \n static S = Vec::<String>::new();\n //~^ ERROR missing type for `static` item\n-//~| HELP provide a type for the item\n+//~| HELP provide a type for the static variable\n //~| SUGGESTION S: Vec<String>\n \n static mut SM = \"abc\";\n //~^ ERROR missing type for `static mut` item\n-//~| HELP provide a type for the item\n+//~| HELP provide a type for the static variable\n //~| SUGGESTION &str"}, {"sha": "3b0fd6337f1f15df902909f9493cc36f5b4306f9", "filename": "src/test/ui/suggestions/const-no-type.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Fsuggestions%2Fconst-no-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Fsuggestions%2Fconst-no-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconst-no-type.stderr?ref=9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "patch": "@@ -2,25 +2,25 @@ error: missing type for `const` item\n   --> $DIR/const-no-type.rs:33:7\n    |\n LL | const C = 42;\n-   |       ^ help: provide a type for the item: `C: i32`\n+   |       ^ help: provide a type for the constant: `C: i32`\n \n error: missing type for `const` item\n   --> $DIR/const-no-type.rs:38:7\n    |\n LL | const D = &&42;\n-   |       ^ help: provide a type for the item: `D: &&i32`\n+   |       ^ help: provide a type for the constant: `D: &&i32`\n \n error: missing type for `static` item\n   --> $DIR/const-no-type.rs:43:8\n    |\n LL | static S = Vec::<String>::new();\n-   |        ^ help: provide a type for the item: `S: Vec<String>`\n+   |        ^ help: provide a type for the static variable: `S: Vec<String>`\n \n error: missing type for `static mut` item\n   --> $DIR/const-no-type.rs:48:12\n    |\n LL | static mut SM = \"abc\";\n-   |            ^^ help: provide a type for the item: `SM: &str`\n+   |            ^^ help: provide a type for the static variable: `SM: &str`\n \n error: missing type for `const` item\n   --> $DIR/const-no-type.rs:14:7"}, {"sha": "483f9bbb48cc6d69656b7ef7923d2ac30bee03d6", "filename": "src/test/ui/suggestions/unnamable-types.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Fsuggestions%2Funnamable-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Fsuggestions%2Funnamable-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Funnamable-types.rs?ref=9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "patch": "@@ -5,17 +5,17 @@\n \n const A = 5;\n //~^ ERROR: missing type for `const` item\n-//~| HELP: provide a type for the item\n+//~| HELP: provide a type for the constant\n \n static B: _ = \"abc\";\n-//~^ ERROR: the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR: the type placeholder `_` is not allowed within types on item signatures for static variables\n //~| NOTE: not allowed in type signatures\n //~| HELP: replace with the correct type\n \n \n // FIXME: this should also suggest a function pointer, as the closure is non-capturing\n const C: _ = || 42;\n-//~^ ERROR: the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR: the type placeholder `_` is not allowed within types on item signatures for constants\n //~| NOTE: not allowed in type signatures\n //~| NOTE: however, the inferred type\n \n@@ -28,10 +28,10 @@ const D = S { t: { let i = 0; move || -> i32 { i } } };\n fn foo() -> i32 { 42 }\n const E = foo;\n //~^ ERROR: missing type for `const` item\n-//~| HELP: provide a type for the item\n+//~| HELP: provide a type for the constant\n const F = S { t: foo };\n //~^ ERROR: missing type for `const` item\n-//~| HELP: provide a type for the item\n+//~| HELP: provide a type for the constant\n \n \n const G = || -> i32 { yield 0; return 1; };"}, {"sha": "3a489a6e9431323d94f045c3199b0ccb0f85f822", "filename": "src/test/ui/suggestions/unnamable-types.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Fsuggestions%2Funnamable-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Fsuggestions%2Funnamable-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Funnamable-types.stderr?ref=9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "patch": "@@ -2,9 +2,9 @@ error: missing type for `const` item\n   --> $DIR/unnamable-types.rs:6:7\n    |\n LL | const A = 5;\n-   |       ^ help: provide a type for the item: `A: i32`\n+   |       ^ help: provide a type for the constant: `A: i32`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for static variables\n   --> $DIR/unnamable-types.rs:10:11\n    |\n LL | static B: _ = \"abc\";\n@@ -13,7 +13,7 @@ LL | static B: _ = \"abc\";\n    |           not allowed in type signatures\n    |           help: replace with the correct type: `&str`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for constants\n   --> $DIR/unnamable-types.rs:17:10\n    |\n LL | const C: _ = || 42;\n@@ -41,13 +41,13 @@ error: missing type for `const` item\n   --> $DIR/unnamable-types.rs:29:7\n    |\n LL | const E = foo;\n-   |       ^ help: provide a type for the item: `E: fn() -> i32`\n+   |       ^ help: provide a type for the constant: `E: fn() -> i32`\n \n error: missing type for `const` item\n   --> $DIR/unnamable-types.rs:32:7\n    |\n LL | const F = S { t: foo };\n-   |       ^ help: provide a type for the item: `F: S<fn() -> i32>`\n+   |       ^ help: provide a type for the constant: `F: S<fn() -> i32>`\n \n error: missing type for `const` item\n   --> $DIR/unnamable-types.rs:37:7"}, {"sha": "1de9cd8007cff290d12e1cc2877d0f797a5231aa", "filename": "src/test/ui/typeck/issue-74086.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ftypeck%2Fissue-74086.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ftypeck%2Fissue-74086.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-74086.rs?ref=9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "patch": "@@ -1,4 +1,4 @@\n fn main() {\n     static BUG: fn(_) -> u8 = |_| 8;\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures [E0121]\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for functions [E0121]\n }"}, {"sha": "ac1752e17dfb96211c12dfdcbe7064e8e3ff9ffd", "filename": "src/test/ui/typeck/issue-74086.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ftypeck%2Fissue-74086.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ftypeck%2Fissue-74086.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-74086.stderr?ref=9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "patch": "@@ -1,4 +1,4 @@\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n   --> $DIR/issue-74086.rs:2:20\n    |\n LL |     static BUG: fn(_) -> u8 = |_| 8;"}, {"sha": "0d1534df091fa42ce494c035a02877e7bae7618e", "filename": "src/test/ui/typeck/issue-75883.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ftypeck%2Fissue-75883.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ftypeck%2Fissue-75883.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-75883.rs?ref=9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "patch": "@@ -5,7 +5,7 @@ pub struct UI {}\n impl UI {\n     pub fn run() -> Result<_> {\n         //~^ ERROR: this enum takes 2 generic arguments but 1 generic argument was supplied\n-        //~| ERROR: the type placeholder `_` is not allowed within types on item signatures\n+        //~| ERROR: the type placeholder `_` is not allowed within types on item signatures for return types\n         let mut ui = UI {};\n         ui.interact();\n \n@@ -14,7 +14,7 @@ impl UI {\n \n     pub fn interact(&mut self) -> Result<_> {\n         //~^ ERROR: this enum takes 2 generic arguments but 1 generic argument was supplied\n-        //~| ERROR: the type placeholder `_` is not allowed within types on item signatures\n+        //~| ERROR: the type placeholder `_` is not allowed within types on item signatures for return types\n         unimplemented!();\n     }\n }"}, {"sha": "a722c4b5e3ea6b79dfa9df772558898fb68c8581", "filename": "src/test/ui/typeck/issue-75883.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ftypeck%2Fissue-75883.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ftypeck%2Fissue-75883.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-75883.stderr?ref=9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "patch": "@@ -34,13 +34,13 @@ help: add missing generic argument\n LL |     pub fn interact(&mut self) -> Result<_, E> {\n    |                                           ^^^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n   --> $DIR/issue-75883.rs:15:42\n    |\n LL |     pub fn interact(&mut self) -> Result<_> {\n    |                                          ^ not allowed in type signatures\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n   --> $DIR/issue-75883.rs:6:28\n    |\n LL |     pub fn run() -> Result<_> {"}, {"sha": "99a93b1863d6ed804d2194f26b56f8560b66abe4", "filename": "src/test/ui/typeck/issue-80779.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ftypeck%2Fissue-80779.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ftypeck%2Fissue-80779.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-80779.rs?ref=9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "patch": "@@ -3,11 +3,11 @@\n pub struct T<'a>(&'a str);\n \n pub fn f<'a>(val: T<'a>) -> _ {\n-    //~^ ERROR: the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR: the type placeholder `_` is not allowed within types on item signatures for return types\n     g(val)\n }\n \n pub fn g(_: T<'static>) -> _ {}\n-//~^ ERROR: the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR: the type placeholder `_` is not allowed within types on item signatures for return types\n \n fn main() {}"}, {"sha": "5a695fecc29dc7f4e4fbcb136988070be8c69b67", "filename": "src/test/ui/typeck/issue-80779.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ftypeck%2Fissue-80779.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ftypeck%2Fissue-80779.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-80779.stderr?ref=9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "patch": "@@ -1,4 +1,4 @@\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n   --> $DIR/issue-80779.rs:10:28\n    |\n LL | pub fn g(_: T<'static>) -> _ {}\n@@ -7,7 +7,7 @@ LL | pub fn g(_: T<'static>) -> _ {}\n    |                            not allowed in type signatures\n    |                            help: replace with the correct return type: `()`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n   --> $DIR/issue-80779.rs:5:29\n    |\n LL | pub fn f<'a>(val: T<'a>) -> _ {"}, {"sha": "5117f250fe5ea0b8ed05f344d2c39e3cf4fb321a", "filename": "src/test/ui/typeck/issue-81885.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ftypeck%2Fissue-81885.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ftypeck%2Fissue-81885.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-81885.rs?ref=9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "patch": "@@ -1,10 +1,8 @@\n const TEST4: fn() -> _ = 42;\n-                  //~^ ERROR the type placeholder `_` is not allowed within types on item\n-                  //signatures\n+                  //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for functions\n \n fn main() {\n     const TEST5: fn() -> _ = 42;\n-                      //~^ ERROR the type placeholder `_` is not allowed within types on item\n-                      //signatures\n+                      //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for functions\n \n }"}, {"sha": "8206156a6180a08097aa905b7db3e70498bc62a2", "filename": "src/test/ui/typeck/issue-81885.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ftypeck%2Fissue-81885.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ftypeck%2Fissue-81885.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-81885.stderr?ref=9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "patch": "@@ -1,11 +1,11 @@\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n   --> $DIR/issue-81885.rs:1:22\n    |\n LL | const TEST4: fn() -> _ = 42;\n    |                      ^ not allowed in type signatures\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/issue-81885.rs:6:26\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n+  --> $DIR/issue-81885.rs:5:26\n    |\n LL |     const TEST5: fn() -> _ = 42;\n    |                          ^ not allowed in type signatures"}, {"sha": "7c5cf1082be0925cadb8517a02825d3a4e0801dd", "filename": "src/test/ui/typeck/issue-83621-placeholder-static-in-extern.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ftypeck%2Fissue-83621-placeholder-static-in-extern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ftypeck%2Fissue-83621-placeholder-static-in-extern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-83621-placeholder-static-in-extern.stderr?ref=9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "patch": "@@ -1,4 +1,4 @@\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for static variables\n   --> $DIR/issue-83621-placeholder-static-in-extern.rs:4:15\n    |\n LL |     static x: _;"}, {"sha": "f657bea164872d9a96777e427d37d6cb8c6054d7", "filename": "src/test/ui/typeck/type-placeholder-fn-in-const.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ftypeck%2Ftype-placeholder-fn-in-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ftypeck%2Ftype-placeholder-fn-in-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Ftype-placeholder-fn-in-const.rs?ref=9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "patch": "@@ -2,13 +2,13 @@ struct MyStruct;\n \n trait Test {\n     const TEST: fn() -> _;\n-    //~^ ERROR: the type placeholder `_` is not allowed within types on item signatures [E0121]\n-    //~| ERROR: the type placeholder `_` is not allowed within types on item signatures [E0121]\n+    //~^ ERROR: the type placeholder `_` is not allowed within types on item signatures for functions [E0121]\n+    //~| ERROR: the type placeholder `_` is not allowed within types on item signatures for constants [E0121]\n }\n \n impl Test for MyStruct {\n     const TEST: fn() -> _ = 42;\n-    //~^ ERROR: the type placeholder `_` is not allowed within types on item signatures [E0121]\n+    //~^ ERROR: the type placeholder `_` is not allowed within types on item signatures for functions [E0121]\n }\n \n fn main() {}"}, {"sha": "62f4db8638f3c14004f2d895580f86a09fc58a9e", "filename": "src/test/ui/typeck/type-placeholder-fn-in-const.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ftypeck%2Ftype-placeholder-fn-in-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ftypeck%2Ftype-placeholder-fn-in-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Ftype-placeholder-fn-in-const.stderr?ref=9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "patch": "@@ -1,16 +1,16 @@\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n   --> $DIR/type-placeholder-fn-in-const.rs:4:25\n    |\n LL |     const TEST: fn() -> _;\n    |                         ^ not allowed in type signatures\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for constants\n   --> $DIR/type-placeholder-fn-in-const.rs:4:25\n    |\n LL |     const TEST: fn() -> _;\n    |                         ^ not allowed in type signatures\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n   --> $DIR/type-placeholder-fn-in-const.rs:10:25\n    |\n LL |     const TEST: fn() -> _ = 42;"}, {"sha": "b6aea9586b8794027fc1e2ada3fa8a149b0724df", "filename": "src/test/ui/typeck/typeck_type_placeholder_item.full_tait.stderr", "status": "modified", "additions": 109, "deletions": 109, "changes": 218, "blob_url": "https://github.com/rust-lang/rust/blob/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.full_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.full_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.full_tait.stderr?ref=9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "patch": "@@ -1,43 +1,43 @@\n error: expected identifier, found reserved identifier `_`\n-  --> $DIR/typeck_type_placeholder_item.rs:158:18\n+  --> $DIR/typeck_type_placeholder_item.rs:157:18\n    |\n LL | struct BadStruct<_>(_);\n    |                  ^ expected identifier, found reserved identifier\n \n error: expected identifier, found reserved identifier `_`\n-  --> $DIR/typeck_type_placeholder_item.rs:161:16\n+  --> $DIR/typeck_type_placeholder_item.rs:160:16\n    |\n LL | trait BadTrait<_> {}\n    |                ^ expected identifier, found reserved identifier\n \n error: expected identifier, found reserved identifier `_`\n-  --> $DIR/typeck_type_placeholder_item.rs:171:19\n+  --> $DIR/typeck_type_placeholder_item.rs:170:19\n    |\n LL | struct BadStruct1<_, _>(_);\n    |                   ^ expected identifier, found reserved identifier\n \n error: expected identifier, found reserved identifier `_`\n-  --> $DIR/typeck_type_placeholder_item.rs:171:22\n+  --> $DIR/typeck_type_placeholder_item.rs:170:22\n    |\n LL | struct BadStruct1<_, _>(_);\n    |                      ^ expected identifier, found reserved identifier\n \n error: expected identifier, found reserved identifier `_`\n-  --> $DIR/typeck_type_placeholder_item.rs:176:19\n+  --> $DIR/typeck_type_placeholder_item.rs:175:19\n    |\n LL | struct BadStruct2<_, T>(_, T);\n    |                   ^ expected identifier, found reserved identifier\n \n error: associated constant in `impl` without body\n-  --> $DIR/typeck_type_placeholder_item.rs:209:5\n+  --> $DIR/typeck_type_placeholder_item.rs:208:5\n    |\n LL |     const C: _;\n    |     ^^^^^^^^^^-\n    |               |\n    |               help: provide a definition for the constant: `= <expr>;`\n \n error[E0403]: the name `_` is already used for a generic parameter in this item's generic parameters\n-  --> $DIR/typeck_type_placeholder_item.rs:171:22\n+  --> $DIR/typeck_type_placeholder_item.rs:170:22\n    |\n LL | struct BadStruct1<_, _>(_);\n    |                   -  ^ already used\n@@ -53,7 +53,7 @@ LL | #![cfg_attr(full_tait, feature(type_alias_impl_trait))]\n    = note: `#[warn(incomplete_features)]` on by default\n    = note: see issue #63063 <https://github.com/rust-lang/rust/issues/63063> for more information\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n   --> $DIR/typeck_type_placeholder_item.rs:10:14\n    |\n LL | fn test() -> _ { 5 }\n@@ -62,7 +62,7 @@ LL | fn test() -> _ { 5 }\n    |              not allowed in type signatures\n    |              help: replace with the correct return type: `i32`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n   --> $DIR/typeck_type_placeholder_item.rs:13:16\n    |\n LL | fn test2() -> (_, _) { (5, 5) }\n@@ -72,7 +72,7 @@ LL | fn test2() -> (_, _) { (5, 5) }\n    |               |not allowed in type signatures\n    |               help: replace with the correct return type: `(i32, i32)`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for static variables\n   --> $DIR/typeck_type_placeholder_item.rs:16:15\n    |\n LL | static TEST3: _ = \"test\";\n@@ -81,7 +81,7 @@ LL | static TEST3: _ = \"test\";\n    |               not allowed in type signatures\n    |               help: replace with the correct type: `&str`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for static variables\n   --> $DIR/typeck_type_placeholder_item.rs:19:15\n    |\n LL | static TEST4: _ = 145;\n@@ -90,13 +90,13 @@ LL | static TEST4: _ = 145;\n    |               not allowed in type signatures\n    |               help: replace with the correct type: `i32`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for static variables\n   --> $DIR/typeck_type_placeholder_item.rs:22:15\n    |\n LL | static TEST5: (_, _) = (1, 2);\n    |               ^^^^^^ not allowed in type signatures\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n   --> $DIR/typeck_type_placeholder_item.rs:25:13\n    |\n LL | fn test6(_: _) { }\n@@ -107,7 +107,7 @@ help: use type parameters instead\n LL | fn test6<T>(_: T) { }\n    |         ^^^    ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n   --> $DIR/typeck_type_placeholder_item.rs:28:18\n    |\n LL | fn test6_b<T>(_: _, _: T) { }\n@@ -118,7 +118,7 @@ help: use type parameters instead\n LL | fn test6_b<T, U>(_: U, _: T) { }\n    |             ^^^     ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n   --> $DIR/typeck_type_placeholder_item.rs:31:30\n    |\n LL | fn test6_c<T, K, L, A, B>(_: _, _: (T, K, L, A, B)) { }\n@@ -129,7 +129,7 @@ help: use type parameters instead\n LL | fn test6_c<T, K, L, A, B, U>(_: U, _: (T, K, L, A, B)) { }\n    |                         ^^^     ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n   --> $DIR/typeck_type_placeholder_item.rs:34:13\n    |\n LL | fn test7(x: _) { let _x: usize = x; }\n@@ -140,7 +140,7 @@ help: use type parameters instead\n LL | fn test7<T>(x: T) { let _x: usize = x; }\n    |         ^^^    ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n   --> $DIR/typeck_type_placeholder_item.rs:37:22\n    |\n LL | fn test8(_f: fn() -> _) { }\n@@ -149,7 +149,7 @@ LL | fn test8(_f: fn() -> _) { }\n    |                      not allowed in type signatures\n    |                      help: use type parameters instead: `T`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n   --> $DIR/typeck_type_placeholder_item.rs:37:22\n    |\n LL | fn test8(_f: fn() -> _) { }\n@@ -160,7 +160,7 @@ help: use type parameters instead\n LL | fn test8<T>(_f: fn() -> T) { }\n    |         ^^^             ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n   --> $DIR/typeck_type_placeholder_item.rs:51:26\n    |\n LL | fn test11(x: &usize) -> &_ {\n@@ -169,7 +169,7 @@ LL | fn test11(x: &usize) -> &_ {\n    |                         |not allowed in type signatures\n    |                         help: replace with the correct return type: `&'static &'static usize`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n   --> $DIR/typeck_type_placeholder_item.rs:56:52\n    |\n LL | unsafe fn test12(x: *const usize) -> *const *const _ {\n@@ -178,7 +178,7 @@ LL | unsafe fn test12(x: *const usize) -> *const *const _ {\n    |                                      |             not allowed in type signatures\n    |                                      help: replace with the correct return type: `*const *const usize`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for structs\n   --> $DIR/typeck_type_placeholder_item.rs:70:8\n    |\n LL |     a: _,\n@@ -201,9 +201,9 @@ error: missing type for `static` item\n   --> $DIR/typeck_type_placeholder_item.rs:76:12\n    |\n LL |     static A = 42;\n-   |            ^ help: provide a type for the item: `A: i32`\n+   |            ^ help: provide a type for the static variable: `A: i32`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for static variables\n   --> $DIR/typeck_type_placeholder_item.rs:78:15\n    |\n LL |     static B: _ = 42;\n@@ -212,23 +212,23 @@ LL |     static B: _ = 42;\n    |               not allowed in type signatures\n    |               help: replace with the correct type: `i32`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for static variables\n   --> $DIR/typeck_type_placeholder_item.rs:80:15\n    |\n LL |     static C: Option<_> = Some(42);\n    |               ^^^^^^^^^ not allowed in type signatures\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:83:21\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n+  --> $DIR/typeck_type_placeholder_item.rs:82:21\n    |\n LL |     fn fn_test() -> _ { 5 }\n    |                     ^\n    |                     |\n    |                     not allowed in type signatures\n    |                     help: replace with the correct return type: `i32`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:86:23\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n+  --> $DIR/typeck_type_placeholder_item.rs:85:23\n    |\n LL |     fn fn_test2() -> (_, _) { (5, 5) }\n    |                      -^--^-\n@@ -237,32 +237,32 @@ LL |     fn fn_test2() -> (_, _) { (5, 5) }\n    |                      |not allowed in type signatures\n    |                      help: replace with the correct return type: `(i32, i32)`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:89:22\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for static variables\n+  --> $DIR/typeck_type_placeholder_item.rs:88:22\n    |\n LL |     static FN_TEST3: _ = \"test\";\n    |                      ^\n    |                      |\n    |                      not allowed in type signatures\n    |                      help: replace with the correct type: `&str`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:92:22\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for static variables\n+  --> $DIR/typeck_type_placeholder_item.rs:91:22\n    |\n LL |     static FN_TEST4: _ = 145;\n    |                      ^\n    |                      |\n    |                      not allowed in type signatures\n    |                      help: replace with the correct type: `i32`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:95:22\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for static variables\n+  --> $DIR/typeck_type_placeholder_item.rs:94:22\n    |\n LL |     static FN_TEST5: (_, _) = (1, 2);\n    |                      ^^^^^^ not allowed in type signatures\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:98:20\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n+  --> $DIR/typeck_type_placeholder_item.rs:97:20\n    |\n LL |     fn fn_test6(_: _) { }\n    |                    ^ not allowed in type signatures\n@@ -272,8 +272,8 @@ help: use type parameters instead\n LL |     fn fn_test6<T>(_: T) { }\n    |                ^^^    ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:101:20\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n+  --> $DIR/typeck_type_placeholder_item.rs:100:20\n    |\n LL |     fn fn_test7(x: _) { let _x: usize = x; }\n    |                    ^ not allowed in type signatures\n@@ -283,17 +283,17 @@ help: use type parameters instead\n LL |     fn fn_test7<T>(x: T) { let _x: usize = x; }\n    |                ^^^    ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:104:29\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n+  --> $DIR/typeck_type_placeholder_item.rs:103:29\n    |\n LL |     fn fn_test8(_f: fn() -> _) { }\n    |                             ^\n    |                             |\n    |                             not allowed in type signatures\n    |                             help: use type parameters instead: `T`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:104:29\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n+  --> $DIR/typeck_type_placeholder_item.rs:103:29\n    |\n LL |     fn fn_test8(_f: fn() -> _) { }\n    |                             ^ not allowed in type signatures\n@@ -303,8 +303,8 @@ help: use type parameters instead\n LL |     fn fn_test8<T>(_f: fn() -> T) { }\n    |                ^^^             ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:127:12\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for structs\n+  --> $DIR/typeck_type_placeholder_item.rs:126:12\n    |\n LL |         a: _,\n    |            ^ not allowed in type signatures\n@@ -323,21 +323,21 @@ LL |         b: (T, T),\n    |\n \n error[E0282]: type annotations needed\n-  --> $DIR/typeck_type_placeholder_item.rs:132:18\n+  --> $DIR/typeck_type_placeholder_item.rs:131:18\n    |\n LL |     fn fn_test11(_: _) -> (_, _) { panic!() }\n    |                  ^ cannot infer type\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:132:28\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n+  --> $DIR/typeck_type_placeholder_item.rs:131:28\n    |\n LL |     fn fn_test11(_: _) -> (_, _) { panic!() }\n    |                            ^  ^ not allowed in type signatures\n    |                            |\n    |                            not allowed in type signatures\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:136:30\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n+  --> $DIR/typeck_type_placeholder_item.rs:135:30\n    |\n LL |     fn fn_test12(x: i32) -> (_, _) { (x, x) }\n    |                             -^--^-\n@@ -346,17 +346,17 @@ LL |     fn fn_test12(x: i32) -> (_, _) { (x, x) }\n    |                             |not allowed in type signatures\n    |                             help: replace with the correct return type: `(i32, i32)`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:139:33\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n+  --> $DIR/typeck_type_placeholder_item.rs:138:33\n    |\n LL |     fn fn_test13(x: _) -> (i32, _) { (x, x) }\n    |                           ------^-\n    |                           |     |\n    |                           |     not allowed in type signatures\n    |                           help: replace with the correct return type: `(i32, i32)`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:158:21\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for structs\n+  --> $DIR/typeck_type_placeholder_item.rs:157:21\n    |\n LL | struct BadStruct<_>(_);\n    |                     ^ not allowed in type signatures\n@@ -366,8 +366,8 @@ help: use type parameters instead\n LL | struct BadStruct<T>(T);\n    |                  ^  ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:163:15\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for implementations\n+  --> $DIR/typeck_type_placeholder_item.rs:162:15\n    |\n LL | impl BadTrait<_> for BadStruct<_> {}\n    |               ^                ^ not allowed in type signatures\n@@ -379,14 +379,14 @@ help: use type parameters instead\n LL | impl<T> BadTrait<T> for BadStruct<T> {}\n    |     ^^^          ^                ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:166:34\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for opaque types\n+  --> $DIR/typeck_type_placeholder_item.rs:165:34\n    |\n LL | fn impl_trait() -> impl BadTrait<_> {\n    |                                  ^ not allowed in type signatures\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:171:25\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for structs\n+  --> $DIR/typeck_type_placeholder_item.rs:170:25\n    |\n LL | struct BadStruct1<_, _>(_);\n    |                         ^ not allowed in type signatures\n@@ -396,8 +396,8 @@ help: use type parameters instead\n LL | struct BadStruct1<T, _>(T);\n    |                   ^     ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:176:25\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for structs\n+  --> $DIR/typeck_type_placeholder_item.rs:175:25\n    |\n LL | struct BadStruct2<_, T>(_, T);\n    |                         ^ not allowed in type signatures\n@@ -407,38 +407,38 @@ help: use type parameters instead\n LL | struct BadStruct2<U, T>(U, T);\n    |                   ^     ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:180:14\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for type aliases\n+  --> $DIR/typeck_type_placeholder_item.rs:179:14\n    |\n LL | type X = Box<_>;\n    |              ^ not allowed in type signatures\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:186:21\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for opaque types\n+  --> $DIR/typeck_type_placeholder_item.rs:185:21\n    |\n LL | type Y = impl Trait<_>;\n    |                     ^ not allowed in type signatures\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:220:31\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n+  --> $DIR/typeck_type_placeholder_item.rs:219:31\n    |\n LL | fn value() -> Option<&'static _> {\n    |               ----------------^-\n    |               |               |\n    |               |               not allowed in type signatures\n    |               help: replace with the correct return type: `Option<&'static u8>`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:225:10\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for constants\n+  --> $DIR/typeck_type_placeholder_item.rs:224:10\n    |\n LL | const _: Option<_> = map(value);\n    |          ^^^^^^^^^\n    |          |\n    |          not allowed in type signatures\n    |          help: replace with the correct type: `Option<u8>`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:144:31\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n+  --> $DIR/typeck_type_placeholder_item.rs:143:31\n    |\n LL |     fn method_test1(&self, x: _);\n    |                               ^ not allowed in type signatures\n@@ -448,8 +448,8 @@ help: use type parameters instead\n LL |     fn method_test1<T>(&self, x: T);\n    |                    ^^^           ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:146:31\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n+  --> $DIR/typeck_type_placeholder_item.rs:145:31\n    |\n LL |     fn method_test2(&self, x: _) -> _;\n    |                               ^     ^ not allowed in type signatures\n@@ -461,8 +461,8 @@ help: use type parameters instead\n LL |     fn method_test2<T>(&self, x: T) -> T;\n    |                    ^^^           ^     ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:148:31\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n+  --> $DIR/typeck_type_placeholder_item.rs:147:31\n    |\n LL |     fn method_test3(&self) -> _;\n    |                               ^ not allowed in type signatures\n@@ -472,8 +472,8 @@ help: use type parameters instead\n LL |     fn method_test3<T>(&self) -> T;\n    |                    ^^^           ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:150:26\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n+  --> $DIR/typeck_type_placeholder_item.rs:149:26\n    |\n LL |     fn assoc_fn_test1(x: _);\n    |                          ^ not allowed in type signatures\n@@ -483,8 +483,8 @@ help: use type parameters instead\n LL |     fn assoc_fn_test1<T>(x: T);\n    |                      ^^^    ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:152:26\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n+  --> $DIR/typeck_type_placeholder_item.rs:151:26\n    |\n LL |     fn assoc_fn_test2(x: _) -> _;\n    |                          ^     ^ not allowed in type signatures\n@@ -496,8 +496,8 @@ help: use type parameters instead\n LL |     fn assoc_fn_test2<T>(x: T) -> T;\n    |                      ^^^    ^     ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:154:28\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n+  --> $DIR/typeck_type_placeholder_item.rs:153:28\n    |\n LL |     fn assoc_fn_test3() -> _;\n    |                            ^ not allowed in type signatures\n@@ -507,34 +507,34 @@ help: use type parameters instead\n LL |     fn assoc_fn_test3<T>() -> T;\n    |                      ^^^      ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:194:14\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for associated types\n+  --> $DIR/typeck_type_placeholder_item.rs:193:14\n    |\n LL |     type B = _;\n    |              ^ not allowed in type signatures\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:196:14\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for constants\n+  --> $DIR/typeck_type_placeholder_item.rs:195:14\n    |\n LL |     const C: _;\n    |              ^ not allowed in type signatures\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:198:14\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for constants\n+  --> $DIR/typeck_type_placeholder_item.rs:197:14\n    |\n LL |     const D: _ = 42;\n    |              ^\n    |              |\n    |              not allowed in type signatures\n    |              help: replace with the correct type: `i32`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:201:26\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for associated types\n+  --> $DIR/typeck_type_placeholder_item.rs:200:26\n    |\n LL |     type F: std::ops::Fn(_);\n    |                          ^ not allowed in type signatures\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n   --> $DIR/typeck_type_placeholder_item.rs:44:24\n    |\n LL |     fn test9(&self) -> _ { () }\n@@ -543,7 +543,7 @@ LL |     fn test9(&self) -> _ { () }\n    |                        not allowed in type signatures\n    |                        help: replace with the correct return type: `()`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n   --> $DIR/typeck_type_placeholder_item.rs:47:27\n    |\n LL |     fn test10(&self, _x : _) { }\n@@ -554,7 +554,7 @@ help: use type parameters instead\n LL |     fn test10<T>(&self, _x : T) { }\n    |              ^^^             ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n   --> $DIR/typeck_type_placeholder_item.rs:62:24\n    |\n LL |     fn clone(&self) -> _ { Test9 }\n@@ -563,7 +563,7 @@ LL |     fn clone(&self) -> _ { Test9 }\n    |                        not allowed in type signatures\n    |                        help: replace with the correct return type: `Test9`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n   --> $DIR/typeck_type_placeholder_item.rs:65:37\n    |\n LL |     fn clone_from(&mut self, other: _) { *self = Test9; }\n@@ -574,17 +574,17 @@ help: use type parameters instead\n LL |     fn clone_from<T>(&mut self, other: T) { *self = Test9; }\n    |                  ^^^                   ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:111:31\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n+  --> $DIR/typeck_type_placeholder_item.rs:110:31\n    |\n LL |         fn fn_test9(&self) -> _ { () }\n    |                               ^\n    |                               |\n    |                               not allowed in type signatures\n    |                               help: replace with the correct return type: `()`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:114:34\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n+  --> $DIR/typeck_type_placeholder_item.rs:113:34\n    |\n LL |         fn fn_test10(&self, _x : _) { }\n    |                                  ^ not allowed in type signatures\n@@ -594,17 +594,17 @@ help: use type parameters instead\n LL |         fn fn_test10<T>(&self, _x : T) { }\n    |                     ^^^             ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:119:28\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n+  --> $DIR/typeck_type_placeholder_item.rs:118:28\n    |\n LL |         fn clone(&self) -> _ { FnTest9 }\n    |                            ^\n    |                            |\n    |                            not allowed in type signatures\n    |                            help: replace with the correct return type: `FnTest9`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:122:41\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n+  --> $DIR/typeck_type_placeholder_item.rs:121:41\n    |\n LL |         fn clone_from(&mut self, other: _) { *self = FnTest9; }\n    |                                         ^ not allowed in type signatures\n@@ -614,26 +614,26 @@ help: use type parameters instead\n LL |         fn clone_from<T>(&mut self, other: T) { *self = FnTest9; }\n    |                      ^^^                   ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:205:14\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for associated types\n+  --> $DIR/typeck_type_placeholder_item.rs:204:14\n    |\n LL |     type A = _;\n    |              ^ not allowed in type signatures\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:207:14\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for associated types\n+  --> $DIR/typeck_type_placeholder_item.rs:206:14\n    |\n LL |     type B = _;\n    |              ^ not allowed in type signatures\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:209:14\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for constants\n+  --> $DIR/typeck_type_placeholder_item.rs:208:14\n    |\n LL |     const C: _;\n    |              ^ not allowed in type signatures\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:212:14\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for constants\n+  --> $DIR/typeck_type_placeholder_item.rs:211:14\n    |\n LL |     const D: _ = 42;\n    |              ^"}, {"sha": "88cc3bfc7f8c3a29d016fdd4c8f4eb07f63de4e1", "filename": "src/test/ui/typeck/typeck_type_placeholder_item.min_tait.stderr", "status": "modified", "additions": 109, "deletions": 109, "changes": 218, "blob_url": "https://github.com/rust-lang/rust/blob/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.min_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.min_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.min_tait.stderr?ref=9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "patch": "@@ -1,50 +1,50 @@\n error: expected identifier, found reserved identifier `_`\n-  --> $DIR/typeck_type_placeholder_item.rs:158:18\n+  --> $DIR/typeck_type_placeholder_item.rs:157:18\n    |\n LL | struct BadStruct<_>(_);\n    |                  ^ expected identifier, found reserved identifier\n \n error: expected identifier, found reserved identifier `_`\n-  --> $DIR/typeck_type_placeholder_item.rs:161:16\n+  --> $DIR/typeck_type_placeholder_item.rs:160:16\n    |\n LL | trait BadTrait<_> {}\n    |                ^ expected identifier, found reserved identifier\n \n error: expected identifier, found reserved identifier `_`\n-  --> $DIR/typeck_type_placeholder_item.rs:171:19\n+  --> $DIR/typeck_type_placeholder_item.rs:170:19\n    |\n LL | struct BadStruct1<_, _>(_);\n    |                   ^ expected identifier, found reserved identifier\n \n error: expected identifier, found reserved identifier `_`\n-  --> $DIR/typeck_type_placeholder_item.rs:171:22\n+  --> $DIR/typeck_type_placeholder_item.rs:170:22\n    |\n LL | struct BadStruct1<_, _>(_);\n    |                      ^ expected identifier, found reserved identifier\n \n error: expected identifier, found reserved identifier `_`\n-  --> $DIR/typeck_type_placeholder_item.rs:176:19\n+  --> $DIR/typeck_type_placeholder_item.rs:175:19\n    |\n LL | struct BadStruct2<_, T>(_, T);\n    |                   ^ expected identifier, found reserved identifier\n \n error: associated constant in `impl` without body\n-  --> $DIR/typeck_type_placeholder_item.rs:209:5\n+  --> $DIR/typeck_type_placeholder_item.rs:208:5\n    |\n LL |     const C: _;\n    |     ^^^^^^^^^^-\n    |               |\n    |               help: provide a definition for the constant: `= <expr>;`\n \n error[E0403]: the name `_` is already used for a generic parameter in this item's generic parameters\n-  --> $DIR/typeck_type_placeholder_item.rs:171:22\n+  --> $DIR/typeck_type_placeholder_item.rs:170:22\n    |\n LL | struct BadStruct1<_, _>(_);\n    |                   -  ^ already used\n    |                   |\n    |                   first use of `_`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n   --> $DIR/typeck_type_placeholder_item.rs:10:14\n    |\n LL | fn test() -> _ { 5 }\n@@ -53,7 +53,7 @@ LL | fn test() -> _ { 5 }\n    |              not allowed in type signatures\n    |              help: replace with the correct return type: `i32`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n   --> $DIR/typeck_type_placeholder_item.rs:13:16\n    |\n LL | fn test2() -> (_, _) { (5, 5) }\n@@ -63,7 +63,7 @@ LL | fn test2() -> (_, _) { (5, 5) }\n    |               |not allowed in type signatures\n    |               help: replace with the correct return type: `(i32, i32)`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for static variables\n   --> $DIR/typeck_type_placeholder_item.rs:16:15\n    |\n LL | static TEST3: _ = \"test\";\n@@ -72,7 +72,7 @@ LL | static TEST3: _ = \"test\";\n    |               not allowed in type signatures\n    |               help: replace with the correct type: `&str`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for static variables\n   --> $DIR/typeck_type_placeholder_item.rs:19:15\n    |\n LL | static TEST4: _ = 145;\n@@ -81,13 +81,13 @@ LL | static TEST4: _ = 145;\n    |               not allowed in type signatures\n    |               help: replace with the correct type: `i32`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for static variables\n   --> $DIR/typeck_type_placeholder_item.rs:22:15\n    |\n LL | static TEST5: (_, _) = (1, 2);\n    |               ^^^^^^ not allowed in type signatures\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n   --> $DIR/typeck_type_placeholder_item.rs:25:13\n    |\n LL | fn test6(_: _) { }\n@@ -98,7 +98,7 @@ help: use type parameters instead\n LL | fn test6<T>(_: T) { }\n    |         ^^^    ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n   --> $DIR/typeck_type_placeholder_item.rs:28:18\n    |\n LL | fn test6_b<T>(_: _, _: T) { }\n@@ -109,7 +109,7 @@ help: use type parameters instead\n LL | fn test6_b<T, U>(_: U, _: T) { }\n    |             ^^^     ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n   --> $DIR/typeck_type_placeholder_item.rs:31:30\n    |\n LL | fn test6_c<T, K, L, A, B>(_: _, _: (T, K, L, A, B)) { }\n@@ -120,7 +120,7 @@ help: use type parameters instead\n LL | fn test6_c<T, K, L, A, B, U>(_: U, _: (T, K, L, A, B)) { }\n    |                         ^^^     ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n   --> $DIR/typeck_type_placeholder_item.rs:34:13\n    |\n LL | fn test7(x: _) { let _x: usize = x; }\n@@ -131,7 +131,7 @@ help: use type parameters instead\n LL | fn test7<T>(x: T) { let _x: usize = x; }\n    |         ^^^    ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n   --> $DIR/typeck_type_placeholder_item.rs:37:22\n    |\n LL | fn test8(_f: fn() -> _) { }\n@@ -140,7 +140,7 @@ LL | fn test8(_f: fn() -> _) { }\n    |                      not allowed in type signatures\n    |                      help: use type parameters instead: `T`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n   --> $DIR/typeck_type_placeholder_item.rs:37:22\n    |\n LL | fn test8(_f: fn() -> _) { }\n@@ -151,7 +151,7 @@ help: use type parameters instead\n LL | fn test8<T>(_f: fn() -> T) { }\n    |         ^^^             ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n   --> $DIR/typeck_type_placeholder_item.rs:51:26\n    |\n LL | fn test11(x: &usize) -> &_ {\n@@ -160,7 +160,7 @@ LL | fn test11(x: &usize) -> &_ {\n    |                         |not allowed in type signatures\n    |                         help: replace with the correct return type: `&'static &'static usize`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n   --> $DIR/typeck_type_placeholder_item.rs:56:52\n    |\n LL | unsafe fn test12(x: *const usize) -> *const *const _ {\n@@ -169,7 +169,7 @@ LL | unsafe fn test12(x: *const usize) -> *const *const _ {\n    |                                      |             not allowed in type signatures\n    |                                      help: replace with the correct return type: `*const *const usize`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for structs\n   --> $DIR/typeck_type_placeholder_item.rs:70:8\n    |\n LL |     a: _,\n@@ -192,9 +192,9 @@ error: missing type for `static` item\n   --> $DIR/typeck_type_placeholder_item.rs:76:12\n    |\n LL |     static A = 42;\n-   |            ^ help: provide a type for the item: `A: i32`\n+   |            ^ help: provide a type for the static variable: `A: i32`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for static variables\n   --> $DIR/typeck_type_placeholder_item.rs:78:15\n    |\n LL |     static B: _ = 42;\n@@ -203,23 +203,23 @@ LL |     static B: _ = 42;\n    |               not allowed in type signatures\n    |               help: replace with the correct type: `i32`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for static variables\n   --> $DIR/typeck_type_placeholder_item.rs:80:15\n    |\n LL |     static C: Option<_> = Some(42);\n    |               ^^^^^^^^^ not allowed in type signatures\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:83:21\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n+  --> $DIR/typeck_type_placeholder_item.rs:82:21\n    |\n LL |     fn fn_test() -> _ { 5 }\n    |                     ^\n    |                     |\n    |                     not allowed in type signatures\n    |                     help: replace with the correct return type: `i32`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:86:23\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n+  --> $DIR/typeck_type_placeholder_item.rs:85:23\n    |\n LL |     fn fn_test2() -> (_, _) { (5, 5) }\n    |                      -^--^-\n@@ -228,32 +228,32 @@ LL |     fn fn_test2() -> (_, _) { (5, 5) }\n    |                      |not allowed in type signatures\n    |                      help: replace with the correct return type: `(i32, i32)`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:89:22\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for static variables\n+  --> $DIR/typeck_type_placeholder_item.rs:88:22\n    |\n LL |     static FN_TEST3: _ = \"test\";\n    |                      ^\n    |                      |\n    |                      not allowed in type signatures\n    |                      help: replace with the correct type: `&str`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:92:22\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for static variables\n+  --> $DIR/typeck_type_placeholder_item.rs:91:22\n    |\n LL |     static FN_TEST4: _ = 145;\n    |                      ^\n    |                      |\n    |                      not allowed in type signatures\n    |                      help: replace with the correct type: `i32`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:95:22\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for static variables\n+  --> $DIR/typeck_type_placeholder_item.rs:94:22\n    |\n LL |     static FN_TEST5: (_, _) = (1, 2);\n    |                      ^^^^^^ not allowed in type signatures\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:98:20\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n+  --> $DIR/typeck_type_placeholder_item.rs:97:20\n    |\n LL |     fn fn_test6(_: _) { }\n    |                    ^ not allowed in type signatures\n@@ -263,8 +263,8 @@ help: use type parameters instead\n LL |     fn fn_test6<T>(_: T) { }\n    |                ^^^    ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:101:20\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n+  --> $DIR/typeck_type_placeholder_item.rs:100:20\n    |\n LL |     fn fn_test7(x: _) { let _x: usize = x; }\n    |                    ^ not allowed in type signatures\n@@ -274,17 +274,17 @@ help: use type parameters instead\n LL |     fn fn_test7<T>(x: T) { let _x: usize = x; }\n    |                ^^^    ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:104:29\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n+  --> $DIR/typeck_type_placeholder_item.rs:103:29\n    |\n LL |     fn fn_test8(_f: fn() -> _) { }\n    |                             ^\n    |                             |\n    |                             not allowed in type signatures\n    |                             help: use type parameters instead: `T`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:104:29\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n+  --> $DIR/typeck_type_placeholder_item.rs:103:29\n    |\n LL |     fn fn_test8(_f: fn() -> _) { }\n    |                             ^ not allowed in type signatures\n@@ -294,8 +294,8 @@ help: use type parameters instead\n LL |     fn fn_test8<T>(_f: fn() -> T) { }\n    |                ^^^             ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:127:12\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for structs\n+  --> $DIR/typeck_type_placeholder_item.rs:126:12\n    |\n LL |         a: _,\n    |            ^ not allowed in type signatures\n@@ -314,21 +314,21 @@ LL |         b: (T, T),\n    |\n \n error[E0282]: type annotations needed\n-  --> $DIR/typeck_type_placeholder_item.rs:132:18\n+  --> $DIR/typeck_type_placeholder_item.rs:131:18\n    |\n LL |     fn fn_test11(_: _) -> (_, _) { panic!() }\n    |                  ^ cannot infer type\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:132:28\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n+  --> $DIR/typeck_type_placeholder_item.rs:131:28\n    |\n LL |     fn fn_test11(_: _) -> (_, _) { panic!() }\n    |                            ^  ^ not allowed in type signatures\n    |                            |\n    |                            not allowed in type signatures\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:136:30\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n+  --> $DIR/typeck_type_placeholder_item.rs:135:30\n    |\n LL |     fn fn_test12(x: i32) -> (_, _) { (x, x) }\n    |                             -^--^-\n@@ -337,17 +337,17 @@ LL |     fn fn_test12(x: i32) -> (_, _) { (x, x) }\n    |                             |not allowed in type signatures\n    |                             help: replace with the correct return type: `(i32, i32)`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:139:33\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n+  --> $DIR/typeck_type_placeholder_item.rs:138:33\n    |\n LL |     fn fn_test13(x: _) -> (i32, _) { (x, x) }\n    |                           ------^-\n    |                           |     |\n    |                           |     not allowed in type signatures\n    |                           help: replace with the correct return type: `(i32, i32)`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:158:21\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for structs\n+  --> $DIR/typeck_type_placeholder_item.rs:157:21\n    |\n LL | struct BadStruct<_>(_);\n    |                     ^ not allowed in type signatures\n@@ -357,8 +357,8 @@ help: use type parameters instead\n LL | struct BadStruct<T>(T);\n    |                  ^  ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:163:15\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for implementations\n+  --> $DIR/typeck_type_placeholder_item.rs:162:15\n    |\n LL | impl BadTrait<_> for BadStruct<_> {}\n    |               ^                ^ not allowed in type signatures\n@@ -370,14 +370,14 @@ help: use type parameters instead\n LL | impl<T> BadTrait<T> for BadStruct<T> {}\n    |     ^^^          ^                ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:166:34\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for opaque types\n+  --> $DIR/typeck_type_placeholder_item.rs:165:34\n    |\n LL | fn impl_trait() -> impl BadTrait<_> {\n    |                                  ^ not allowed in type signatures\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:171:25\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for structs\n+  --> $DIR/typeck_type_placeholder_item.rs:170:25\n    |\n LL | struct BadStruct1<_, _>(_);\n    |                         ^ not allowed in type signatures\n@@ -387,8 +387,8 @@ help: use type parameters instead\n LL | struct BadStruct1<T, _>(T);\n    |                   ^     ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:176:25\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for structs\n+  --> $DIR/typeck_type_placeholder_item.rs:175:25\n    |\n LL | struct BadStruct2<_, T>(_, T);\n    |                         ^ not allowed in type signatures\n@@ -398,38 +398,38 @@ help: use type parameters instead\n LL | struct BadStruct2<U, T>(U, T);\n    |                   ^     ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:180:14\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for type aliases\n+  --> $DIR/typeck_type_placeholder_item.rs:179:14\n    |\n LL | type X = Box<_>;\n    |              ^ not allowed in type signatures\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:186:21\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for opaque types\n+  --> $DIR/typeck_type_placeholder_item.rs:185:21\n    |\n LL | type Y = impl Trait<_>;\n    |                     ^ not allowed in type signatures\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:220:31\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n+  --> $DIR/typeck_type_placeholder_item.rs:219:31\n    |\n LL | fn value() -> Option<&'static _> {\n    |               ----------------^-\n    |               |               |\n    |               |               not allowed in type signatures\n    |               help: replace with the correct return type: `Option<&'static u8>`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:225:10\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for constants\n+  --> $DIR/typeck_type_placeholder_item.rs:224:10\n    |\n LL | const _: Option<_> = map(value);\n    |          ^^^^^^^^^\n    |          |\n    |          not allowed in type signatures\n    |          help: replace with the correct type: `Option<u8>`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:144:31\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n+  --> $DIR/typeck_type_placeholder_item.rs:143:31\n    |\n LL |     fn method_test1(&self, x: _);\n    |                               ^ not allowed in type signatures\n@@ -439,8 +439,8 @@ help: use type parameters instead\n LL |     fn method_test1<T>(&self, x: T);\n    |                    ^^^           ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:146:31\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n+  --> $DIR/typeck_type_placeholder_item.rs:145:31\n    |\n LL |     fn method_test2(&self, x: _) -> _;\n    |                               ^     ^ not allowed in type signatures\n@@ -452,8 +452,8 @@ help: use type parameters instead\n LL |     fn method_test2<T>(&self, x: T) -> T;\n    |                    ^^^           ^     ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:148:31\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n+  --> $DIR/typeck_type_placeholder_item.rs:147:31\n    |\n LL |     fn method_test3(&self) -> _;\n    |                               ^ not allowed in type signatures\n@@ -463,8 +463,8 @@ help: use type parameters instead\n LL |     fn method_test3<T>(&self) -> T;\n    |                    ^^^           ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:150:26\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n+  --> $DIR/typeck_type_placeholder_item.rs:149:26\n    |\n LL |     fn assoc_fn_test1(x: _);\n    |                          ^ not allowed in type signatures\n@@ -474,8 +474,8 @@ help: use type parameters instead\n LL |     fn assoc_fn_test1<T>(x: T);\n    |                      ^^^    ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:152:26\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n+  --> $DIR/typeck_type_placeholder_item.rs:151:26\n    |\n LL |     fn assoc_fn_test2(x: _) -> _;\n    |                          ^     ^ not allowed in type signatures\n@@ -487,8 +487,8 @@ help: use type parameters instead\n LL |     fn assoc_fn_test2<T>(x: T) -> T;\n    |                      ^^^    ^     ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:154:28\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n+  --> $DIR/typeck_type_placeholder_item.rs:153:28\n    |\n LL |     fn assoc_fn_test3() -> _;\n    |                            ^ not allowed in type signatures\n@@ -498,34 +498,34 @@ help: use type parameters instead\n LL |     fn assoc_fn_test3<T>() -> T;\n    |                      ^^^      ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:194:14\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for associated types\n+  --> $DIR/typeck_type_placeholder_item.rs:193:14\n    |\n LL |     type B = _;\n    |              ^ not allowed in type signatures\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:196:14\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for constants\n+  --> $DIR/typeck_type_placeholder_item.rs:195:14\n    |\n LL |     const C: _;\n    |              ^ not allowed in type signatures\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:198:14\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for constants\n+  --> $DIR/typeck_type_placeholder_item.rs:197:14\n    |\n LL |     const D: _ = 42;\n    |              ^\n    |              |\n    |              not allowed in type signatures\n    |              help: replace with the correct type: `i32`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:201:26\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for associated types\n+  --> $DIR/typeck_type_placeholder_item.rs:200:26\n    |\n LL |     type F: std::ops::Fn(_);\n    |                          ^ not allowed in type signatures\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n   --> $DIR/typeck_type_placeholder_item.rs:44:24\n    |\n LL |     fn test9(&self) -> _ { () }\n@@ -534,7 +534,7 @@ LL |     fn test9(&self) -> _ { () }\n    |                        not allowed in type signatures\n    |                        help: replace with the correct return type: `()`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n   --> $DIR/typeck_type_placeholder_item.rs:47:27\n    |\n LL |     fn test10(&self, _x : _) { }\n@@ -545,7 +545,7 @@ help: use type parameters instead\n LL |     fn test10<T>(&self, _x : T) { }\n    |              ^^^             ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n   --> $DIR/typeck_type_placeholder_item.rs:62:24\n    |\n LL |     fn clone(&self) -> _ { Test9 }\n@@ -554,7 +554,7 @@ LL |     fn clone(&self) -> _ { Test9 }\n    |                        not allowed in type signatures\n    |                        help: replace with the correct return type: `Test9`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n   --> $DIR/typeck_type_placeholder_item.rs:65:37\n    |\n LL |     fn clone_from(&mut self, other: _) { *self = Test9; }\n@@ -565,17 +565,17 @@ help: use type parameters instead\n LL |     fn clone_from<T>(&mut self, other: T) { *self = Test9; }\n    |                  ^^^                   ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:111:31\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n+  --> $DIR/typeck_type_placeholder_item.rs:110:31\n    |\n LL |         fn fn_test9(&self) -> _ { () }\n    |                               ^\n    |                               |\n    |                               not allowed in type signatures\n    |                               help: replace with the correct return type: `()`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:114:34\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n+  --> $DIR/typeck_type_placeholder_item.rs:113:34\n    |\n LL |         fn fn_test10(&self, _x : _) { }\n    |                                  ^ not allowed in type signatures\n@@ -585,17 +585,17 @@ help: use type parameters instead\n LL |         fn fn_test10<T>(&self, _x : T) { }\n    |                     ^^^             ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:119:28\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n+  --> $DIR/typeck_type_placeholder_item.rs:118:28\n    |\n LL |         fn clone(&self) -> _ { FnTest9 }\n    |                            ^\n    |                            |\n    |                            not allowed in type signatures\n    |                            help: replace with the correct return type: `FnTest9`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:122:41\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n+  --> $DIR/typeck_type_placeholder_item.rs:121:41\n    |\n LL |         fn clone_from(&mut self, other: _) { *self = FnTest9; }\n    |                                         ^ not allowed in type signatures\n@@ -605,26 +605,26 @@ help: use type parameters instead\n LL |         fn clone_from<T>(&mut self, other: T) { *self = FnTest9; }\n    |                      ^^^                   ^\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:205:14\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for associated types\n+  --> $DIR/typeck_type_placeholder_item.rs:204:14\n    |\n LL |     type A = _;\n    |              ^ not allowed in type signatures\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:207:14\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for associated types\n+  --> $DIR/typeck_type_placeholder_item.rs:206:14\n    |\n LL |     type B = _;\n    |              ^ not allowed in type signatures\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:209:14\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for constants\n+  --> $DIR/typeck_type_placeholder_item.rs:208:14\n    |\n LL |     const C: _;\n    |              ^ not allowed in type signatures\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n-  --> $DIR/typeck_type_placeholder_item.rs:212:14\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for constants\n+  --> $DIR/typeck_type_placeholder_item.rs:211:14\n    |\n LL |     const D: _ = 42;\n    |              ^"}, {"sha": "55f5d44d46b37c27dadfc6ef0014c352087d5e0f", "filename": "src/test/ui/typeck/typeck_type_placeholder_item.rs", "status": "modified", "additions": 60, "deletions": 61, "changes": 121, "blob_url": "https://github.com/rust-lang/rust/blob/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.rs?ref=9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "patch": "@@ -8,219 +8,218 @@\n // inference by using the `_` type placeholder.\n \n fn test() -> _ { 5 }\n-//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures for return types\n \n fn test2() -> (_, _) { (5, 5) }\n-//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures for return types\n \n static TEST3: _ = \"test\";\n-//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures for static variables\n \n static TEST4: _ = 145;\n-//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures for static variables\n \n static TEST5: (_, _) = (1, 2);\n-//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures for static variables\n \n fn test6(_: _) { }\n-//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures for functions\n \n fn test6_b<T>(_: _, _: T) { }\n-//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures for functions\n \n fn test6_c<T, K, L, A, B>(_: _, _: (T, K, L, A, B)) { }\n-//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures for functions\n \n fn test7(x: _) { let _x: usize = x; }\n-//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures for functions\n \n fn test8(_f: fn() -> _) { }\n-//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n-//~^^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures for functions\n+//~^^ ERROR the type placeholder `_` is not allowed within types on item signatures for functions\n \n struct Test9;\n \n impl Test9 {\n     fn test9(&self) -> _ { () }\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for return types\n \n     fn test10(&self, _x : _) { }\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for functions\n }\n \n fn test11(x: &usize) -> &_ {\n-//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures for return types\n     &x\n }\n \n unsafe fn test12(x: *const usize) -> *const *const _ {\n-//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures for return types\n     &x\n }\n \n impl Clone for Test9 {\n     fn clone(&self) -> _ { Test9 }\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for return types\n \n     fn clone_from(&mut self, other: _) { *self = Test9; }\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for functions\n }\n \n struct Test10 {\n     a: _,\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for structs\n     b: (_, _),\n }\n \n pub fn main() {\n     static A = 42;\n     //~^ ERROR missing type for `static` item\n     static B: _ = 42;\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for static variables\n     static C: Option<_> = Some(42);\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n-\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for static variables\n     fn fn_test() -> _ { 5 }\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for return types\n \n     fn fn_test2() -> (_, _) { (5, 5) }\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for return types\n \n     static FN_TEST3: _ = \"test\";\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for static variables\n \n     static FN_TEST4: _ = 145;\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for static variables\n \n     static FN_TEST5: (_, _) = (1, 2);\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for static variables\n \n     fn fn_test6(_: _) { }\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for functions\n \n     fn fn_test7(x: _) { let _x: usize = x; }\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for functions\n \n     fn fn_test8(_f: fn() -> _) { }\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n-    //~^^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for functions\n+    //~^^ ERROR the type placeholder `_` is not allowed within types on item signatures for functions\n \n     struct FnTest9;\n \n     impl FnTest9 {\n         fn fn_test9(&self) -> _ { () }\n-        //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+        //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for return types\n \n         fn fn_test10(&self, _x : _) { }\n-        //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+        //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for functions\n     }\n \n     impl Clone for FnTest9 {\n         fn clone(&self) -> _ { FnTest9 }\n-        //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+        //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for return types\n \n         fn clone_from(&mut self, other: _) { *self = FnTest9; }\n-        //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+        //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for functions\n     }\n \n     struct FnTest10 {\n         a: _,\n-        //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+        //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for structs\n         b: (_, _),\n     }\n \n     fn fn_test11(_: _) -> (_, _) { panic!() }\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for return types\n     //~| ERROR type annotations needed\n \n     fn fn_test12(x: i32) -> (_, _) { (x, x) }\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for return types\n \n     fn fn_test13(x: _) -> (i32, _) { (x, x) }\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for return types\n }\n \n trait T {\n     fn method_test1(&self, x: _);\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for functions\n     fn method_test2(&self, x: _) -> _;\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for functions\n     fn method_test3(&self) -> _;\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for functions\n     fn assoc_fn_test1(x: _);\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for functions\n     fn assoc_fn_test2(x: _) -> _;\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for functions\n     fn assoc_fn_test3() -> _;\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for functions\n }\n \n struct BadStruct<_>(_);\n //~^ ERROR expected identifier, found reserved identifier `_`\n-//~| ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~| ERROR the type placeholder `_` is not allowed within types on item signatures for structs\n trait BadTrait<_> {}\n //~^ ERROR expected identifier, found reserved identifier `_`\n impl BadTrait<_> for BadStruct<_> {}\n-//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures for implementations\n \n fn impl_trait() -> impl BadTrait<_> {\n-//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures for opaque types\n     unimplemented!()\n }\n \n struct BadStruct1<_, _>(_);\n //~^ ERROR expected identifier, found reserved identifier `_`\n //~| ERROR expected identifier, found reserved identifier `_`\n //~| ERROR the name `_` is already used\n-//~| ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~| ERROR the type placeholder `_` is not allowed within types on item signatures for structs\n struct BadStruct2<_, T>(_, T);\n //~^ ERROR expected identifier, found reserved identifier `_`\n-//~| ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~| ERROR the type placeholder `_` is not allowed within types on item signatures for structs\n \n type X = Box<_>;\n-//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures for type aliases\n \n struct Struct;\n trait Trait<T> {}\n impl Trait<usize> for Struct {}\n type Y = impl Trait<_>;\n-//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures for opaque types\n fn foo() -> Y {\n     Struct\n }\n \n trait Qux {\n     type A;\n     type B = _;\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for associated types\n     const C: _;\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for constants\n     const D: _ = 42;\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for constants\n     // type E: _; // FIXME: make the parser propagate the existence of `B`\n     type F: std::ops::Fn(_);\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for associated types\n }\n impl Qux for Struct {\n     type A = _;\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for associated types\n     type B = _;\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for associated types\n     const C: _;\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for constants\n     //~| ERROR associated constant in `impl` without body\n     const D: _ = 42;\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for constants\n }\n \n fn map<T>(_: fn() -> Option<&'static T>) -> Option<T> {\n     None\n }\n \n fn value() -> Option<&'static _> {\n-//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures for return types\n     Option::<&'static u8>::None\n }\n \n const _: Option<_> = map(value);\n-//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures for constants"}, {"sha": "3af5cf926abf0a4eb2c076d56eb7c854b0fd6f83", "filename": "src/test/ui/typeck/typeck_type_placeholder_item_help.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item_help.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item_help.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item_help.rs?ref=9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "patch": "@@ -2,27 +2,27 @@\n // using the `_` type placeholder.\n \n fn test1() -> _ { Some(42) }\n-//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures for return types\n \n const TEST2: _ = 42u32;\n-//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures for constants\n \n const TEST3: _ = Some(42);\n-//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures for constants\n \n const TEST4: fn() -> _ = 42;\n-//~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+//~^ ERROR the type placeholder `_` is not allowed within types on item signatures for functions\n \n trait Test5 {\n     const TEST5: _ = 42;\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for constants\n }\n \n struct Test6;\n \n impl Test6 {\n     const TEST6: _ = 13;\n-    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures\n+    //~^ ERROR the type placeholder `_` is not allowed within types on item signatures for constants\n }\n \n pub fn main() {"}, {"sha": "1b56b1033a8c1f23d5a81460848452d290f83b5a", "filename": "src/test/ui/typeck/typeck_type_placeholder_item_help.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item_help.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b6c7ffa0601643aa1724d6552b276a7f4496aa0/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item_help.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item_help.stderr?ref=9b6c7ffa0601643aa1724d6552b276a7f4496aa0", "patch": "@@ -1,4 +1,4 @@\n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for return types\n   --> $DIR/typeck_type_placeholder_item_help.rs:4:15\n    |\n LL | fn test1() -> _ { Some(42) }\n@@ -7,7 +7,7 @@ LL | fn test1() -> _ { Some(42) }\n    |               not allowed in type signatures\n    |               help: replace with the correct return type: `Option<i32>`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for constants\n   --> $DIR/typeck_type_placeholder_item_help.rs:7:14\n    |\n LL | const TEST2: _ = 42u32;\n@@ -16,7 +16,7 @@ LL | const TEST2: _ = 42u32;\n    |              not allowed in type signatures\n    |              help: replace with the correct type: `u32`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for constants\n   --> $DIR/typeck_type_placeholder_item_help.rs:10:14\n    |\n LL | const TEST3: _ = Some(42);\n@@ -25,13 +25,13 @@ LL | const TEST3: _ = Some(42);\n    |              not allowed in type signatures\n    |              help: replace with the correct type: `Option<i32>`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for functions\n   --> $DIR/typeck_type_placeholder_item_help.rs:13:22\n    |\n LL | const TEST4: fn() -> _ = 42;\n    |                      ^ not allowed in type signatures\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for constants\n   --> $DIR/typeck_type_placeholder_item_help.rs:17:18\n    |\n LL |     const TEST5: _ = 42;\n@@ -40,7 +40,7 @@ LL |     const TEST5: _ = 42;\n    |                  not allowed in type signatures\n    |                  help: replace with the correct type: `i32`\n \n-error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n+error[E0121]: the type placeholder `_` is not allowed within types on item signatures for constants\n   --> $DIR/typeck_type_placeholder_item_help.rs:24:18\n    |\n LL |     const TEST6: _ = 13;"}]}