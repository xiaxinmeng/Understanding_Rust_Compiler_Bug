{"sha": "ed0f0377e2620ed3c70a42890ca420c1472eb788", "node_id": "C_kwDOAAsO6NoAKGVkMGYwMzc3ZTI2MjBlZDNjNzBhNDI4OTBjYTQyMGMxNDcyZWI3ODg", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2022-09-08T23:08:53Z"}, "committer": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2022-09-08T23:08:53Z"}, "message": "Fix ICE report flags display.", "tree": {"sha": "06f77b80b5855a849f185ac541314589b17ea019", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06f77b80b5855a849f185ac541314589b17ea019"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed0f0377e2620ed3c70a42890ca420c1472eb788", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed0f0377e2620ed3c70a42890ca420c1472eb788", "html_url": "https://github.com/rust-lang/rust/commit/ed0f0377e2620ed3c70a42890ca420c1472eb788", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed0f0377e2620ed3c70a42890ca420c1472eb788/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1120c5e01df508de64fe6642f22fadeb574afd6d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1120c5e01df508de64fe6642f22fadeb574afd6d", "html_url": "https://github.com/rust-lang/rust/commit/1120c5e01df508de64fe6642f22fadeb574afd6d"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "d6f51d7eee1afca590f30d6fd3205bc51d2953de", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ed0f0377e2620ed3c70a42890ca420c1472eb788/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed0f0377e2620ed3c70a42890ca420c1472eb788/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=ed0f0377e2620ed3c70a42890ca420c1472eb788", "patch": "@@ -1119,22 +1119,25 @@ fn extra_compiler_flags() -> Option<(Vec<String>, bool)> {\n     while let Some(arg) = args.next() {\n         if let Some(a) = ICE_REPORT_COMPILER_FLAGS.iter().find(|a| arg.starts_with(*a)) {\n             let content = if arg.len() == a.len() {\n+                // A space-separated option, like `-C incremental=foo` or `--crate-type rlib`\n                 match args.next() {\n                     Some(arg) => arg.to_string(),\n                     None => continue,\n                 }\n             } else if arg.get(a.len()..a.len() + 1) == Some(\"=\") {\n+                // An equals option, like `--crate-type=rlib`\n                 arg[a.len() + 1..].to_string()\n             } else {\n+                // A non-space option, like `-Cincremental=foo`\n                 arg[a.len()..].to_string()\n             };\n-            if ICE_REPORT_COMPILER_FLAGS_EXCLUDE.iter().any(|exc| content.starts_with(exc)) {\n+            let option = content.split_once('=').map(|s| s.0).unwrap_or(&content);\n+            if ICE_REPORT_COMPILER_FLAGS_EXCLUDE.iter().any(|exc| option == *exc) {\n                 excluded_cargo_defaults = true;\n             } else {\n                 result.push(a.to_string());\n-                match ICE_REPORT_COMPILER_FLAGS_STRIP_VALUE.iter().find(|s| content.starts_with(*s))\n-                {\n-                    Some(s) => result.push(s.to_string()),\n+                match ICE_REPORT_COMPILER_FLAGS_STRIP_VALUE.iter().find(|s| option == **s) {\n+                    Some(s) => result.push(format!(\"{}=[REDACTED]\", s)),\n                     None => result.push(content),\n                 }\n             }"}]}