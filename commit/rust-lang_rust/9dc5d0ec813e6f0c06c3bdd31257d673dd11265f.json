{"sha": "9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkYzVkMGVjODEzZTZmMGMwNmMzYmRkMzEyNTdkNjczZGQxMTI2NWY=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-11-08T04:42:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-08T04:42:16Z"}, "message": "Rollup merge of #66049 - RalfJung:missing-spans, r=alexcrichton\n\nconsistent handling of missing sysroot spans\n\nDue to https://github.com/rust-lang/rust/issues/53081, sysroot spans (pointing to code in libcore/libstd/...) fails to print on some x86 runners. This consolidates the ignore directives for that and references the relevant issue.\n\nI also did that for the generated derive-error-span tests -- but there the script and the tests were not entirely in sync any more since https://github.com/rust-lang/rust/pull/64151. Cc @estebank @varkor", "tree": {"sha": "9b1cca503e175d4bfe96002201cae02af8fc4198", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b1cca503e175d4bfe96002201cae02af8fc4198"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdxPIoCRBK7hj4Ov3rIwAAdHIIAAkMd8K4M5acJhDSzu+uPTpC\n3GgVqquJ2l77qKElm4BZ4BdWDugv7ctilD39YAk2cTMo/+zK+N+Z55LGFBa3IyDV\nMbUB812w85rF4uWSUDO7XFdCul+EGZRwl0OX9yk/hbt//XBOj+MzMe01R7YOD0i8\nU43BtoihowRyHvhNWpt9eiE8fPQaHOq+a9pBJb2m1tm8nz1JLMo2mPB7HGwXGXv4\ntxWQ/i1EkvTBghMvk/Wm7qFKZdYP8y11owYgF1jYZw7ZnBoIgYTPfqhn7gXNL18f\nmvv8fSAu9z6zIVCLDrBoGH4NOQk+uFd1tfzr3Jus1WCTDYZs2UO0Y/5yjuOwRNo=\n=emnc\n-----END PGP SIGNATURE-----\n", "payload": "tree 9b1cca503e175d4bfe96002201cae02af8fc4198\nparent a00c777b75f67812207e5737f3093cd3d7cdf7de\nparent 18089689c0d06264f82b1d373e98a3d3a31c409a\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1573188136 +0900\ncommitter GitHub <noreply@github.com> 1573188136 +0900\n\nRollup merge of #66049 - RalfJung:missing-spans, r=alexcrichton\n\nconsistent handling of missing sysroot spans\n\nDue to https://github.com/rust-lang/rust/issues/53081, sysroot spans (pointing to code in libcore/libstd/...) fails to print on some x86 runners. This consolidates the ignore directives for that and references the relevant issue.\n\nI also did that for the generated derive-error-span tests -- but there the script and the tests were not entirely in sync any more since https://github.com/rust-lang/rust/pull/64151. Cc @estebank @varkor\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "html_url": "https://github.com/rust-lang/rust/commit/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a00c777b75f67812207e5737f3093cd3d7cdf7de", "url": "https://api.github.com/repos/rust-lang/rust/commits/a00c777b75f67812207e5737f3093cd3d7cdf7de", "html_url": "https://github.com/rust-lang/rust/commit/a00c777b75f67812207e5737f3093cd3d7cdf7de"}, {"sha": "18089689c0d06264f82b1d373e98a3d3a31c409a", "url": "https://api.github.com/repos/rust-lang/rust/commits/18089689c0d06264f82b1d373e98a3d3a31c409a", "html_url": "https://github.com/rust-lang/rust/commit/18089689c0d06264f82b1d373e98a3d3a31c409a"}], "stats": {"total": 220, "additions": 114, "deletions": 106}, "files": [{"sha": "39c24fb10e590d7dc00b3663d33c5ea270909d8d", "filename": "src/etc/generate-deriving-span-tests.py", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Fetc%2Fgenerate-deriving-span-tests.py", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Fetc%2Fgenerate-deriving-span-tests.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgenerate-deriving-span-tests.py?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -14,8 +14,7 @@\n     os.path.join(os.path.dirname(__file__), '../test/ui/derives/'))\n \n TEMPLATE = \"\"\"\\\n-// ignore-x86\n-// ^ due to stderr output differences\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n {error_deriving}"}, {"sha": "e95f7df388c45bd52802ed5ba7e23a81acd8c9f6", "filename": "src/test/ui/async-await/issues/issue-62009-1.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-1.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,6 +1,5 @@\n // edition:2018\n-// ignore-x86\n-// ^ due to stderr output differences\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n \n async fn print_dur() {}\n "}, {"sha": "6c8e0d0a5c4037cd1a5815efbcfd556c3858082a", "filename": "src/test/ui/async-await/issues/issue-62009-1.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-1.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,13 +1,13 @@\n error[E0728]: `await` is only allowed inside `async` functions and blocks\n-  --> $DIR/issue-62009-1.rs:8:5\n+  --> $DIR/issue-62009-1.rs:7:5\n    |\n LL | fn main() {\n    |    ---- this is not `async`\n LL |     async { let (); }.await;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ only allowed inside `async` functions and blocks\n \n error[E0728]: `await` is only allowed inside `async` functions and blocks\n-  --> $DIR/issue-62009-1.rs:10:5\n+  --> $DIR/issue-62009-1.rs:9:5\n    |\n LL |   fn main() {\n    |      ---- this is not `async`\n@@ -19,19 +19,19 @@ LL | |     }.await;\n    | |___________^ only allowed inside `async` functions and blocks\n \n error[E0728]: `await` is only allowed inside `async` functions and blocks\n-  --> $DIR/issue-62009-1.rs:14:5\n+  --> $DIR/issue-62009-1.rs:13:5\n    |\n LL | fn main() {\n    |    ---- this is not `async`\n ...\n LL |     (|_| 2333).await;\n    |     ^^^^^^^^^^^^^^^^ only allowed inside `async` functions and blocks\n \n-error[E0277]: the trait bound `[closure@$DIR/issue-62009-1.rs:14:5: 14:15]: std::future::Future` is not satisfied\n-  --> $DIR/issue-62009-1.rs:14:5\n+error[E0277]: the trait bound `[closure@$DIR/issue-62009-1.rs:13:5: 13:15]: std::future::Future` is not satisfied\n+  --> $DIR/issue-62009-1.rs:13:5\n    |\n LL |     (|_| 2333).await;\n-   |     ^^^^^^^^^^^^^^^^ the trait `std::future::Future` is not implemented for `[closure@$DIR/issue-62009-1.rs:14:5: 14:15]`\n+   |     ^^^^^^^^^^^^^^^^ the trait `std::future::Future` is not implemented for `[closure@$DIR/issue-62009-1.rs:13:5: 13:15]`\n    | \n   ::: $SRC_DIR/libstd/future.rs:LL:COL\n    |"}, {"sha": "2f1e6c81ae5a8ef4eca2b2c04c6e6b5120a6c941", "filename": "src/test/ui/closures/closure-move-sync.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fclosures%2Fclosure-move-sync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fclosures%2Fclosure-move-sync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fclosure-move-sync.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,4 @@\n-// ignore-x86\n-// ^ due to stderr output differences\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n use std::thread;\n use std::sync::mpsc::channel;\n "}, {"sha": "ac5e3ccb42187d660992b4e9c25feec26da46e2c", "filename": "src/test/ui/closures/closure-move-sync.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fclosures%2Fclosure-move-sync.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fclosures%2Fclosure-move-sync.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fclosure-move-sync.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: `std::sync::mpsc::Receiver<()>` cannot be shared between threads safely\n-  --> $DIR/closure-move-sync.rs:8:13\n+  --> $DIR/closure-move-sync.rs:7:13\n    |\n LL |     let t = thread::spawn(|| {\n    |             ^^^^^^^^^^^^^ `std::sync::mpsc::Receiver<()>` cannot be shared between threads safely\n@@ -11,10 +11,10 @@ LL |     F: FnOnce() -> T, F: Send + 'static, T: Send + 'static\n    |\n    = help: the trait `std::marker::Sync` is not implemented for `std::sync::mpsc::Receiver<()>`\n    = note: required because of the requirements on the impl of `std::marker::Send` for `&std::sync::mpsc::Receiver<()>`\n-   = note: required because it appears within the type `[closure@$DIR/closure-move-sync.rs:8:27: 11:6 recv:&std::sync::mpsc::Receiver<()>]`\n+   = note: required because it appears within the type `[closure@$DIR/closure-move-sync.rs:7:27: 10:6 recv:&std::sync::mpsc::Receiver<()>]`\n \n error[E0277]: `std::sync::mpsc::Sender<()>` cannot be shared between threads safely\n-  --> $DIR/closure-move-sync.rs:20:5\n+  --> $DIR/closure-move-sync.rs:19:5\n    |\n LL |     thread::spawn(|| tx.send(()).unwrap());\n    |     ^^^^^^^^^^^^^ `std::sync::mpsc::Sender<()>` cannot be shared between threads safely\n@@ -26,7 +26,7 @@ LL |     F: FnOnce() -> T, F: Send + 'static, T: Send + 'static\n    |\n    = help: the trait `std::marker::Sync` is not implemented for `std::sync::mpsc::Sender<()>`\n    = note: required because of the requirements on the impl of `std::marker::Send` for `&std::sync::mpsc::Sender<()>`\n-   = note: required because it appears within the type `[closure@$DIR/closure-move-sync.rs:20:19: 20:42 tx:&std::sync::mpsc::Sender<()>]`\n+   = note: required because it appears within the type `[closure@$DIR/closure-move-sync.rs:19:19: 19:42 tx:&std::sync::mpsc::Sender<()>]`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "6c35b9212c6cb605e0d1202de37de1959fbdc404", "filename": "src/test/ui/consts/const-size_of-cycle.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fconsts%2Fconst-size_of-cycle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fconsts%2Fconst-size_of-cycle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-size_of-cycle.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,4 @@\n-// ignore-musl\n-// ignore-x86\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // error-pattern: cycle detected\n \n struct Foo {"}, {"sha": "5b06ade44c5cbdb0be9197a357660063c4f44aaa", "filename": "src/test/ui/consts/const-size_of-cycle.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fconsts%2Fconst-size_of-cycle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fconsts%2Fconst-size_of-cycle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-size_of-cycle.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,11 +1,11 @@\n error[E0391]: cycle detected when const-evaluating + checking `Foo::bytes::{{constant}}#0`\n-  --> $DIR/const-size_of-cycle.rs:6:17\n+  --> $DIR/const-size_of-cycle.rs:5:17\n    |\n LL |     bytes: [u8; std::mem::size_of::<Foo>()]\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: ...which requires const-evaluating + checking `Foo::bytes::{{constant}}#0`...\n-  --> $DIR/const-size_of-cycle.rs:6:17\n+  --> $DIR/const-size_of-cycle.rs:5:17\n    |\n LL |     bytes: [u8; std::mem::size_of::<Foo>()]\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -23,7 +23,7 @@ LL |     pub fn size_of<T>() -> usize;\n    = note: ...which requires normalizing `ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: All, def_id: None }, value: [u8; _] }`...\n    = note: ...which again requires const-evaluating + checking `Foo::bytes::{{constant}}#0`, completing the cycle\n note: cycle used when processing `Foo`\n-  --> $DIR/const-size_of-cycle.rs:5:1\n+  --> $DIR/const-size_of-cycle.rs:4:1\n    |\n LL | struct Foo {\n    | ^^^^^^^^^^"}, {"sha": "da00f81b96eadd144da1e55fe5d2f55a888d2976", "filename": "src/test/ui/derives/derives-span-Clone-enum-struct-variant.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-enum-struct-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-enum-struct-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-enum-struct-variant.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,3 +1,4 @@\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "796e6a2b744f7d9cc5114dcc2354023a66059d5d", "filename": "src/test/ui/derives/derives-span-Clone-enum-struct-variant.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-enum-struct-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-enum-struct-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-enum-struct-variant.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::clone::Clone` is not satisfied\n-  --> $DIR/derives-span-Clone-enum-struct-variant.rs:9:6\n+  --> $DIR/derives-span-Clone-enum-struct-variant.rs:10:6\n    |\n LL |      x: Error\n    |      ^^^^^^^^ the trait `std::clone::Clone` is not implemented for `Error`"}, {"sha": "98ae1b2c5b8a268663f336c2d3c0aaaa6d841a30", "filename": "src/test/ui/derives/derives-span-Clone-enum.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-enum.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,3 +1,4 @@\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "3e94bb551ea97b9e0586f4566b8d748bf94c4c77", "filename": "src/test/ui/derives/derives-span-Clone-enum.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-enum.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::clone::Clone` is not satisfied\n-  --> $DIR/derives-span-Clone-enum.rs:9:6\n+  --> $DIR/derives-span-Clone-enum.rs:10:6\n    |\n LL |      Error\n    |      ^^^^^ the trait `std::clone::Clone` is not implemented for `Error`"}, {"sha": "db677e26f50492cafee59de4d538bf3d721a9d98", "filename": "src/test/ui/derives/derives-span-Clone-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-struct.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,3 +1,4 @@\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "0674d64fe9dfe2604cd9f211a83ebecae0ad8a86", "filename": "src/test/ui/derives/derives-span-Clone-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-struct.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::clone::Clone` is not satisfied\n-  --> $DIR/derives-span-Clone-struct.rs:8:5\n+  --> $DIR/derives-span-Clone-struct.rs:9:5\n    |\n LL |     x: Error\n    |     ^^^^^^^^ the trait `std::clone::Clone` is not implemented for `Error`"}, {"sha": "d716b6fe900cadb693571af2c08c2cb23f086c4f", "filename": "src/test/ui/derives/derives-span-Clone-tuple-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-tuple-struct.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,3 +1,4 @@\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "f6b4006014a3a877842cfcde415eb37a63d9e5d3", "filename": "src/test/ui/derives/derives-span-Clone-tuple-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-tuple-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-tuple-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-tuple-struct.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::clone::Clone` is not satisfied\n-  --> $DIR/derives-span-Clone-tuple-struct.rs:8:5\n+  --> $DIR/derives-span-Clone-tuple-struct.rs:9:5\n    |\n LL |     Error\n    |     ^^^^^ the trait `std::clone::Clone` is not implemented for `Error`"}, {"sha": "10deccb8ad7c1900640f7658c96ab6ca231f14e3", "filename": "src/test/ui/derives/derives-span-Debug-enum-struct-variant.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-enum-struct-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-enum-struct-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-enum-struct-variant.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,3 +1,4 @@\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "6a0e382b9e545f91041278ff45ec1b0729622ecb", "filename": "src/test/ui/derives/derives-span-Debug-enum-struct-variant.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-enum-struct-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-enum-struct-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-enum-struct-variant.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: `Error` doesn't implement `std::fmt::Debug`\n-  --> $DIR/derives-span-Debug-enum-struct-variant.rs:9:6\n+  --> $DIR/derives-span-Debug-enum-struct-variant.rs:10:6\n    |\n LL |      x: Error\n    |      ^^^^^^^^ `Error` cannot be formatted using `{:?}`"}, {"sha": "b8bed0eab552e53d3ead5f1338a6a26fe515e5c5", "filename": "src/test/ui/derives/derives-span-Debug-enum.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-enum.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,3 +1,4 @@\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "f27499ba441a08a43ae005eb3095838bb3b4e321", "filename": "src/test/ui/derives/derives-span-Debug-enum.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-enum.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: `Error` doesn't implement `std::fmt::Debug`\n-  --> $DIR/derives-span-Debug-enum.rs:9:6\n+  --> $DIR/derives-span-Debug-enum.rs:10:6\n    |\n LL |      Error\n    |      ^^^^^ `Error` cannot be formatted using `{:?}`"}, {"sha": "22f037ee36f245c8ca70cdd2623f275d267a7603", "filename": "src/test/ui/derives/derives-span-Debug-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-struct.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,3 +1,4 @@\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "09d62f12b0449d125bf420d3c220cd4374584f52", "filename": "src/test/ui/derives/derives-span-Debug-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-struct.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: `Error` doesn't implement `std::fmt::Debug`\n-  --> $DIR/derives-span-Debug-struct.rs:8:5\n+  --> $DIR/derives-span-Debug-struct.rs:9:5\n    |\n LL |     x: Error\n    |     ^^^^^^^^ `Error` cannot be formatted using `{:?}`"}, {"sha": "c693facfeaa92678641321635df71c5274b28ea0", "filename": "src/test/ui/derives/derives-span-Debug-tuple-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-tuple-struct.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,3 +1,4 @@\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "f100cf32fdf859851c7ac87932852f118d93df11", "filename": "src/test/ui/derives/derives-span-Debug-tuple-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-tuple-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-tuple-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-tuple-struct.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: `Error` doesn't implement `std::fmt::Debug`\n-  --> $DIR/derives-span-Debug-tuple-struct.rs:8:5\n+  --> $DIR/derives-span-Debug-tuple-struct.rs:9:5\n    |\n LL |     Error\n    |     ^^^^^ `Error` cannot be formatted using `{:?}`"}, {"sha": "1654883998def04e7f60347d817ec9174aa18259", "filename": "src/test/ui/derives/derives-span-Default-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Default-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Default-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Default-struct.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,3 +1,4 @@\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "11664d400ee715c31ee2bf52610eb8699eebc00f", "filename": "src/test/ui/derives/derives-span-Default-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Default-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Default-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Default-struct.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::default::Default` is not satisfied\n-  --> $DIR/derives-span-Default-struct.rs:8:5\n+  --> $DIR/derives-span-Default-struct.rs:9:5\n    |\n LL |     x: Error\n    |     ^^^^^^^^ the trait `std::default::Default` is not implemented for `Error`"}, {"sha": "f1390c8b6f6b5c01591e65bbb3e11f4fd444d04b", "filename": "src/test/ui/derives/derives-span-Default-tuple-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Default-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Default-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Default-tuple-struct.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,3 +1,4 @@\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "c79f093942fdda364916dead04bf17f144f278a2", "filename": "src/test/ui/derives/derives-span-Default-tuple-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Default-tuple-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Default-tuple-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Default-tuple-struct.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::default::Default` is not satisfied\n-  --> $DIR/derives-span-Default-tuple-struct.rs:8:5\n+  --> $DIR/derives-span-Default-tuple-struct.rs:9:5\n    |\n LL |     Error\n    |     ^^^^^ the trait `std::default::Default` is not implemented for `Error`"}, {"sha": "77c386d7f909494a70d63f543eec5a566bf5d560", "filename": "src/test/ui/derives/derives-span-Eq-enum-struct-variant.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-enum-struct-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-enum-struct-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-enum-struct-variant.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,3 +1,4 @@\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n #[derive(PartialEq)]"}, {"sha": "87c0313ca1fc69aaad6b2a0f25300941bbc8e2c0", "filename": "src/test/ui/derives/derives-span-Eq-enum-struct-variant.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-enum-struct-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-enum-struct-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-enum-struct-variant.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::cmp::Eq` is not satisfied\n-  --> $DIR/derives-span-Eq-enum-struct-variant.rs:9:6\n+  --> $DIR/derives-span-Eq-enum-struct-variant.rs:10:6\n    |\n LL |      x: Error\n    |      ^^^^^^^^ the trait `std::cmp::Eq` is not implemented for `Error`"}, {"sha": "c7fe37813325d273991834b05c96900889b359be", "filename": "src/test/ui/derives/derives-span-Eq-enum.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-enum.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,3 +1,4 @@\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n #[derive(PartialEq)]"}, {"sha": "c8db6d3ff2f7bcdda6d42d03becbc44aba319bca", "filename": "src/test/ui/derives/derives-span-Eq-enum.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-enum.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::cmp::Eq` is not satisfied\n-  --> $DIR/derives-span-Eq-enum.rs:9:6\n+  --> $DIR/derives-span-Eq-enum.rs:10:6\n    |\n LL |      Error\n    |      ^^^^^ the trait `std::cmp::Eq` is not implemented for `Error`"}, {"sha": "8674cadb3092d756102384cc50af17513bf52bbe", "filename": "src/test/ui/derives/derives-span-Eq-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-struct.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,3 +1,4 @@\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n #[derive(PartialEq)]"}, {"sha": "df4ea5b1d4144436531d998b548551551b8c9c82", "filename": "src/test/ui/derives/derives-span-Eq-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-struct.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::cmp::Eq` is not satisfied\n-  --> $DIR/derives-span-Eq-struct.rs:8:5\n+  --> $DIR/derives-span-Eq-struct.rs:9:5\n    |\n LL |     x: Error\n    |     ^^^^^^^^ the trait `std::cmp::Eq` is not implemented for `Error`"}, {"sha": "99cc9582b5b607cd56c9021707be428fe2b8a8b0", "filename": "src/test/ui/derives/derives-span-Eq-tuple-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-tuple-struct.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,3 +1,4 @@\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n #[derive(PartialEq)]"}, {"sha": "def06d710867f57f1b3e8153de002d7d927604c4", "filename": "src/test/ui/derives/derives-span-Eq-tuple-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-tuple-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-tuple-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-tuple-struct.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::cmp::Eq` is not satisfied\n-  --> $DIR/derives-span-Eq-tuple-struct.rs:8:5\n+  --> $DIR/derives-span-Eq-tuple-struct.rs:9:5\n    |\n LL |     Error\n    |     ^^^^^ the trait `std::cmp::Eq` is not implemented for `Error`"}, {"sha": "604b0842fa93c9233a760b8eb9f32ac196399472", "filename": "src/test/ui/derives/derives-span-Hash-enum-struct-variant.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-enum-struct-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-enum-struct-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-enum-struct-variant.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,4 @@\n-// ignore-x86\n-// ^ due to stderr output differences\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "cc1caf78041864c39195416c54c4e4264aa185a2", "filename": "src/test/ui/derives/derives-span-Hash-enum-struct-variant.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-enum-struct-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-enum-struct-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-enum-struct-variant.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::hash::Hash` is not satisfied\n-  --> $DIR/derives-span-Hash-enum-struct-variant.rs:11:6\n+  --> $DIR/derives-span-Hash-enum-struct-variant.rs:10:6\n    |\n LL |      x: Error\n    |      ^^^^^^^^ the trait `std::hash::Hash` is not implemented for `Error`"}, {"sha": "bf3033a232c0c2c050272b71ef35103c8326c526", "filename": "src/test/ui/derives/derives-span-Hash-enum.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-enum.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,4 @@\n-// ignore-x86\n-// ^ due to stderr output differences\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "246d821ed2bf632584b673beaa7623e7c3dd5f83", "filename": "src/test/ui/derives/derives-span-Hash-enum.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-enum.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::hash::Hash` is not satisfied\n-  --> $DIR/derives-span-Hash-enum.rs:11:6\n+  --> $DIR/derives-span-Hash-enum.rs:10:6\n    |\n LL |      Error\n    |      ^^^^^ the trait `std::hash::Hash` is not implemented for `Error`"}, {"sha": "b6abb9d229e134cf1712f4db7a37d8b252e86be6", "filename": "src/test/ui/derives/derives-span-Hash-struct.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-struct.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,4 @@\n-// ignore-x86\n-// ^ due to stderr output differences\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "720c127635e624b8ba3aa96b432f3a23805ac72d", "filename": "src/test/ui/derives/derives-span-Hash-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-struct.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::hash::Hash` is not satisfied\n-  --> $DIR/derives-span-Hash-struct.rs:10:5\n+  --> $DIR/derives-span-Hash-struct.rs:9:5\n    |\n LL |     x: Error\n    |     ^^^^^^^^ the trait `std::hash::Hash` is not implemented for `Error`"}, {"sha": "e01351fe8a6bac5f386f98429630cd3702992686", "filename": "src/test/ui/derives/derives-span-Hash-tuple-struct.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-tuple-struct.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,4 @@\n-// ignore-x86\n-// ^ due to stderr output differences\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "1fd1e601eca013ebc1b6a05274c59b9c4ff8aac1", "filename": "src/test/ui/derives/derives-span-Hash-tuple-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-tuple-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-tuple-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-tuple-struct.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::hash::Hash` is not satisfied\n-  --> $DIR/derives-span-Hash-tuple-struct.rs:10:5\n+  --> $DIR/derives-span-Hash-tuple-struct.rs:9:5\n    |\n LL |     Error\n    |     ^^^^^ the trait `std::hash::Hash` is not implemented for `Error`"}, {"sha": "6d516d4b0adc32644edb3db941f576b103f8891c", "filename": "src/test/ui/derives/derives-span-Ord-enum-struct-variant.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-enum-struct-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-enum-struct-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-enum-struct-variant.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,3 +1,4 @@\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n #[derive(Eq,PartialOrd,PartialEq)]"}, {"sha": "f0d7e4465a79bb65448032c2978b190858aa77b2", "filename": "src/test/ui/derives/derives-span-Ord-enum-struct-variant.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-enum-struct-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-enum-struct-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-enum-struct-variant.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::cmp::Ord` is not satisfied\n-  --> $DIR/derives-span-Ord-enum-struct-variant.rs:9:6\n+  --> $DIR/derives-span-Ord-enum-struct-variant.rs:10:6\n    |\n LL |      x: Error\n    |      ^^^^^^^^ the trait `std::cmp::Ord` is not implemented for `Error`"}, {"sha": "51b5d7f0ed1d2922ff9eead96e4da8de9bfbe443", "filename": "src/test/ui/derives/derives-span-Ord-enum.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-enum.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,3 +1,4 @@\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n #[derive(Eq,PartialOrd,PartialEq)]"}, {"sha": "37eca92e77e6328d4ed2068b0ca9356c55c26380", "filename": "src/test/ui/derives/derives-span-Ord-enum.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-enum.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::cmp::Ord` is not satisfied\n-  --> $DIR/derives-span-Ord-enum.rs:9:6\n+  --> $DIR/derives-span-Ord-enum.rs:10:6\n    |\n LL |      Error\n    |      ^^^^^ the trait `std::cmp::Ord` is not implemented for `Error`"}, {"sha": "c924ecaa315fc886921956d48527ad8f5224e222", "filename": "src/test/ui/derives/derives-span-Ord-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-struct.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,3 +1,4 @@\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n #[derive(Eq,PartialOrd,PartialEq)]"}, {"sha": "72c1fe4803c4d35f6ebbf9ef054919c8ab9e32a0", "filename": "src/test/ui/derives/derives-span-Ord-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-struct.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::cmp::Ord` is not satisfied\n-  --> $DIR/derives-span-Ord-struct.rs:8:5\n+  --> $DIR/derives-span-Ord-struct.rs:9:5\n    |\n LL |     x: Error\n    |     ^^^^^^^^ the trait `std::cmp::Ord` is not implemented for `Error`"}, {"sha": "80546634690c39c2f49c5619ff0b175c6e736e2d", "filename": "src/test/ui/derives/derives-span-Ord-tuple-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-tuple-struct.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,3 +1,4 @@\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n #[derive(Eq,PartialOrd,PartialEq)]"}, {"sha": "642c8579b514c71be7bc1d39b9bb1d0a9f43a700", "filename": "src/test/ui/derives/derives-span-Ord-tuple-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-tuple-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-tuple-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-tuple-struct.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::cmp::Ord` is not satisfied\n-  --> $DIR/derives-span-Ord-tuple-struct.rs:8:5\n+  --> $DIR/derives-span-Ord-tuple-struct.rs:9:5\n    |\n LL |     Error\n    |     ^^^^^ the trait `std::cmp::Ord` is not implemented for `Error`"}, {"sha": "b13798686c001b5927ec3d8c7056d09b2391bfa7", "filename": "src/test/ui/derives/derives-span-PartialEq-enum-struct-variant.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-enum-struct-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-enum-struct-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-enum-struct-variant.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,3 +1,4 @@\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "d6a565256018767ce8b625d837225bd168559197", "filename": "src/test/ui/derives/derives-span-PartialEq-enum-struct-variant.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-enum-struct-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-enum-struct-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-enum-struct-variant.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,13 +1,13 @@\n error[E0369]: binary operation `==` cannot be applied to type `Error`\n-  --> $DIR/derives-span-PartialEq-enum-struct-variant.rs:9:6\n+  --> $DIR/derives-span-PartialEq-enum-struct-variant.rs:10:6\n    |\n LL |      x: Error\n    |      ^^^^^^^^\n    |\n    = note: an implementation of `std::cmp::PartialEq` might be missing for `Error`\n \n error[E0369]: binary operation `!=` cannot be applied to type `Error`\n-  --> $DIR/derives-span-PartialEq-enum-struct-variant.rs:9:6\n+  --> $DIR/derives-span-PartialEq-enum-struct-variant.rs:10:6\n    |\n LL |      x: Error\n    |      ^^^^^^^^"}, {"sha": "5f8f05ad94b4784bdaa1c3d3500652de3b691e78", "filename": "src/test/ui/derives/derives-span-PartialEq-enum.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-enum.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,3 +1,4 @@\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "1f5ad42a3aa33e5cf97bace9350151444ba73249", "filename": "src/test/ui/derives/derives-span-PartialEq-enum.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-enum.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,13 +1,13 @@\n error[E0369]: binary operation `==` cannot be applied to type `Error`\n-  --> $DIR/derives-span-PartialEq-enum.rs:9:6\n+  --> $DIR/derives-span-PartialEq-enum.rs:10:6\n    |\n LL |      Error\n    |      ^^^^^\n    |\n    = note: an implementation of `std::cmp::PartialEq` might be missing for `Error`\n \n error[E0369]: binary operation `!=` cannot be applied to type `Error`\n-  --> $DIR/derives-span-PartialEq-enum.rs:9:6\n+  --> $DIR/derives-span-PartialEq-enum.rs:10:6\n    |\n LL |      Error\n    |      ^^^^^"}, {"sha": "560bf582e8da282452387e2bc27ebd07280809e0", "filename": "src/test/ui/derives/derives-span-PartialEq-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-struct.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,3 +1,4 @@\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "4e0b2fa4e6f2698390e1c61c84d71b80406dfa56", "filename": "src/test/ui/derives/derives-span-PartialEq-struct.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-struct.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,13 +1,13 @@\n error[E0369]: binary operation `==` cannot be applied to type `Error`\n-  --> $DIR/derives-span-PartialEq-struct.rs:8:5\n+  --> $DIR/derives-span-PartialEq-struct.rs:9:5\n    |\n LL |     x: Error\n    |     ^^^^^^^^\n    |\n    = note: an implementation of `std::cmp::PartialEq` might be missing for `Error`\n \n error[E0369]: binary operation `!=` cannot be applied to type `Error`\n-  --> $DIR/derives-span-PartialEq-struct.rs:8:5\n+  --> $DIR/derives-span-PartialEq-struct.rs:9:5\n    |\n LL |     x: Error\n    |     ^^^^^^^^"}, {"sha": "09a3249f0593fa079225ab4a88e7222a26a75db9", "filename": "src/test/ui/derives/derives-span-PartialEq-tuple-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-tuple-struct.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,3 +1,4 @@\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "78e215534e0da396ee59ad92f064287a425aec3e", "filename": "src/test/ui/derives/derives-span-PartialEq-tuple-struct.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-tuple-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-tuple-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-tuple-struct.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,13 +1,13 @@\n error[E0369]: binary operation `==` cannot be applied to type `Error`\n-  --> $DIR/derives-span-PartialEq-tuple-struct.rs:8:5\n+  --> $DIR/derives-span-PartialEq-tuple-struct.rs:9:5\n    |\n LL |     Error\n    |     ^^^^^\n    |\n    = note: an implementation of `std::cmp::PartialEq` might be missing for `Error`\n \n error[E0369]: binary operation `!=` cannot be applied to type `Error`\n-  --> $DIR/derives-span-PartialEq-tuple-struct.rs:8:5\n+  --> $DIR/derives-span-PartialEq-tuple-struct.rs:9:5\n    |\n LL |     Error\n    |     ^^^^^"}, {"sha": "0d18bdc113aee2baabd8a8f4fc7b731b770e581f", "filename": "src/test/ui/derives/derives-span-PartialOrd-enum-struct-variant.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-enum-struct-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-enum-struct-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-enum-struct-variant.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,3 +1,4 @@\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n #[derive(PartialEq)]"}, {"sha": "a6f0c873e2fd03a022bfce840204194454d984b2", "filename": "src/test/ui/derives/derives-span-PartialOrd-enum-struct-variant.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-enum-struct-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-enum-struct-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-enum-struct-variant.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: can't compare `Error` with `Error`\n-  --> $DIR/derives-span-PartialOrd-enum-struct-variant.rs:9:6\n+  --> $DIR/derives-span-PartialOrd-enum-struct-variant.rs:10:6\n    |\n LL |      x: Error\n    |      ^^^^^^^^ no implementation for `Error < Error` and `Error > Error`"}, {"sha": "78e4babb976cdb65741541ddb8110b20de0b7e14", "filename": "src/test/ui/derives/derives-span-PartialOrd-enum.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-enum.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,3 +1,4 @@\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n #[derive(PartialEq)]"}, {"sha": "838126111c35e7c84294625e17a3258e01b4d85d", "filename": "src/test/ui/derives/derives-span-PartialOrd-enum.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-enum.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: can't compare `Error` with `Error`\n-  --> $DIR/derives-span-PartialOrd-enum.rs:9:6\n+  --> $DIR/derives-span-PartialOrd-enum.rs:10:6\n    |\n LL |      Error\n    |      ^^^^^ no implementation for `Error < Error` and `Error > Error`"}, {"sha": "728ec75b6c40a944228698aa49fe1ad2d795d1b0", "filename": "src/test/ui/derives/derives-span-PartialOrd-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-struct.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,3 +1,4 @@\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n #[derive(PartialEq)]"}, {"sha": "2df64d915a94d94d43a5db0eef1c364ec80f6847", "filename": "src/test/ui/derives/derives-span-PartialOrd-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-struct.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: can't compare `Error` with `Error`\n-  --> $DIR/derives-span-PartialOrd-struct.rs:8:5\n+  --> $DIR/derives-span-PartialOrd-struct.rs:9:5\n    |\n LL |     x: Error\n    |     ^^^^^^^^ no implementation for `Error < Error` and `Error > Error`"}, {"sha": "c92b47e9297bef9f24c394ed20150b5959430ca0", "filename": "src/test/ui/derives/derives-span-PartialOrd-tuple-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-tuple-struct.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,3 +1,4 @@\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n #[derive(PartialEq)]"}, {"sha": "63aebe32ed2980df05a44dfa1cd611712b988358", "filename": "src/test/ui/derives/derives-span-PartialOrd-tuple-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-tuple-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-tuple-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-tuple-struct.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: can't compare `Error` with `Error`\n-  --> $DIR/derives-span-PartialOrd-tuple-struct.rs:8:5\n+  --> $DIR/derives-span-PartialOrd-tuple-struct.rs:9:5\n    |\n LL |     Error\n    |     ^^^^^ no implementation for `Error < Error` and `Error > Error`"}, {"sha": "5597df4ba499b8123c0c793444fdf1f433ddbd37", "filename": "src/test/ui/impl-trait/impl-generic-mismatch.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fimpl-trait%2Fimpl-generic-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fimpl-trait%2Fimpl-generic-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fimpl-generic-mismatch.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,4 @@\n-// ignore-musl\n-// ignore-x86\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n \n use std::fmt::Debug;\n "}, {"sha": "2278519e95ad18389fe4709835f1e913724a1df4", "filename": "src/test/ui/impl-trait/impl-generic-mismatch.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fimpl-trait%2Fimpl-generic-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fimpl-trait%2Fimpl-generic-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fimpl-generic-mismatch.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0643]: method `foo` has incompatible signature for trait\n-  --> $DIR/impl-generic-mismatch.rs:11:12\n+  --> $DIR/impl-generic-mismatch.rs:10:12\n    |\n LL |     fn foo(&self, _: &impl Debug);\n    |                       ---------- declaration in trait here\n@@ -13,7 +13,7 @@ LL |     fn foo(&self, _: &impl Debug) { }\n    |          --           ^^^^^^^^^^\n \n error[E0643]: method `bar` has incompatible signature for trait\n-  --> $DIR/impl-generic-mismatch.rs:20:23\n+  --> $DIR/impl-generic-mismatch.rs:19:23\n    |\n LL |     fn bar<U: Debug>(&self, _: &U);\n    |            - declaration in trait here\n@@ -27,7 +27,7 @@ LL |     fn bar<U: Debug>(&self, _: &U) { }\n    |           ^^^^^^^^^^            ^\n \n error[E0643]: method `hash` has incompatible signature for trait\n-  --> $DIR/impl-generic-mismatch.rs:31:33\n+  --> $DIR/impl-generic-mismatch.rs:30:33\n    |\n LL |     fn hash(&self, hasher: &mut impl Hasher) {}\n    |                                 ^^^^^^^^^^^ expected generic parameter, found `impl Trait`"}, {"sha": "abcc92ce34d175fac4adb1975e09c04d8768a24d", "filename": "src/test/ui/imports/extern-prelude-extern-crate-restricted-shadowing.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-restricted-shadowing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-restricted-shadowing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-restricted-shadowing.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,4 @@\n-// ignore-x86\n-// ^ due to stderr output differences\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // aux-build:two_macros.rs\n \n macro_rules! define_vec {"}, {"sha": "7a55abe42556c7e963d43507b8c445421f4f0e29", "filename": "src/test/ui/imports/extern-prelude-extern-crate-restricted-shadowing.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-restricted-shadowing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-restricted-shadowing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-restricted-shadowing.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error: macro-expanded `extern crate` items cannot shadow names passed with `--extern`\n-  --> $DIR/extern-prelude-extern-crate-restricted-shadowing.rs:21:9\n+  --> $DIR/extern-prelude-extern-crate-restricted-shadowing.rs:20:9\n    |\n LL |         extern crate std as core;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -8,13 +8,13 @@ LL | define_other_core!();\n    | --------------------- in this macro invocation\n \n error[E0659]: `Vec` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n-  --> $DIR/extern-prelude-extern-crate-restricted-shadowing.rs:15:9\n+  --> $DIR/extern-prelude-extern-crate-restricted-shadowing.rs:14:9\n    |\n LL |         Vec::panic!();\n    |         ^^^ ambiguous name\n    |\n note: `Vec` could refer to the crate imported here\n-  --> $DIR/extern-prelude-extern-crate-restricted-shadowing.rs:7:9\n+  --> $DIR/extern-prelude-extern-crate-restricted-shadowing.rs:6:9\n    |\n LL |         extern crate std as Vec;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "369de0400702232204e04e82c453caab6be5f371", "filename": "src/test/ui/in-band-lifetimes/mismatched_trait_impl-2.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched_trait_impl-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched_trait_impl-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched_trait_impl-2.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,4 @@\n-// ignore-x86\n-// ^ due to stderr output differences\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n use std::ops::Deref;\n trait Trait {}\n "}, {"sha": "8086d3f1fbc646c23d0914e4d70e85bb814ea2c6", "filename": "src/test/ui/in-band-lifetimes/mismatched_trait_impl-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched_trait_impl-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched_trait_impl-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched_trait_impl-2.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error: `impl` item signature doesn't match `trait` item signature\n-  --> $DIR/mismatched_trait_impl-2.rs:10:5\n+  --> $DIR/mismatched_trait_impl-2.rs:9:5\n    |\n LL |     fn deref(&self) -> &dyn Trait {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ found fn(&Struct) -> &dyn Trait"}, {"sha": "60633fdd393ee76f9ffc3a55a0ca4104f6acf270", "filename": "src/test/ui/interior-mutability/interior-mutability.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Finterior-mutability%2Finterior-mutability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Finterior-mutability%2Finterior-mutability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finterior-mutability%2Finterior-mutability.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,4 @@\n-// ignore-x86\n-// ^ due to stderr output differences\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n use std::cell::Cell;\n use std::panic::catch_unwind;\n fn main() {"}, {"sha": "5c129524f51b4aae7f4575b77fd20cc9cd0deb0d", "filename": "src/test/ui/interior-mutability/interior-mutability.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Finterior-mutability%2Finterior-mutability.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Finterior-mutability%2Finterior-mutability.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finterior-mutability%2Finterior-mutability.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the type `std::cell::UnsafeCell<i32>` may contain interior mutability and a reference may not be safely transferrable across a catch_unwind boundary\n-  --> $DIR/interior-mutability.rs:7:5\n+  --> $DIR/interior-mutability.rs:6:5\n    |\n LL |     catch_unwind(|| { x.set(23); });\n    |     ^^^^^^^^^^^^ `std::cell::UnsafeCell<i32>` may contain interior mutability and a reference may not be safely transferrable across a catch_unwind boundary\n@@ -12,7 +12,7 @@ LL | pub fn catch_unwind<F: FnOnce() -> R + UnwindSafe, R>(f: F) -> Result<R> {\n    = help: within `std::cell::Cell<i32>`, the trait `std::panic::RefUnwindSafe` is not implemented for `std::cell::UnsafeCell<i32>`\n    = note: required because it appears within the type `std::cell::Cell<i32>`\n    = note: required because of the requirements on the impl of `std::panic::UnwindSafe` for `&std::cell::Cell<i32>`\n-   = note: required because it appears within the type `[closure@$DIR/interior-mutability.rs:7:18: 7:35 x:&std::cell::Cell<i32>]`\n+   = note: required because it appears within the type `[closure@$DIR/interior-mutability.rs:6:18: 6:35 x:&std::cell::Cell<i32>]`\n \n error: aborting due to previous error\n "}, {"sha": "0199abbd8f04ad688a67866680f8683a1c17298f", "filename": "src/test/ui/issues/issue-21160.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fissues%2Fissue-21160.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fissues%2Fissue-21160.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-21160.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,4 @@\n-// ignore-x86\n-// ^ due to stderr output differences\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n struct Bar;\n \n impl Bar {"}, {"sha": "65ba64b49d06d8bb8f32de4a18442a0469731d32", "filename": "src/test/ui/issues/issue-21160.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fissues%2Fissue-21160.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fissues%2Fissue-21160.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-21160.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Bar: std::hash::Hash` is not satisfied\n-  --> $DIR/issue-21160.rs:10:12\n+  --> $DIR/issue-21160.rs:9:12\n    |\n LL | struct Foo(Bar);\n    |            ^^^ the trait `std::hash::Hash` is not implemented for `Bar`"}, {"sha": "7120dee6339f19bc8bdcd3cd713a8eed42534561", "filename": "src/test/ui/issues/issue-27033.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fissues%2Fissue-27033.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fissues%2Fissue-27033.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-27033.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,4 @@\n-// ignore-x86\n-// ^ due to stderr output differences\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n fn main() {\n     match Some(1) {\n         None @ _ => {} //~ ERROR match bindings cannot shadow unit variants"}, {"sha": "2d6d2ef41bd740deba7af1bd35d8aa431509c4aa", "filename": "src/test/ui/issues/issue-27033.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fissues%2Fissue-27033.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fissues%2Fissue-27033.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-27033.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0530]: match bindings cannot shadow unit variants\n-  --> $DIR/issue-27033.rs:5:9\n+  --> $DIR/issue-27033.rs:4:9\n    |\n LL |         None @ _ => {}\n    |         ^^^^ cannot be named the same as a unit variant\n@@ -10,7 +10,7 @@ LL | pub use crate::option::Option::{self, Some, None};\n    |                                             ---- the unit variant `None` is defined here\n \n error[E0530]: match bindings cannot shadow constants\n-  --> $DIR/issue-27033.rs:9:9\n+  --> $DIR/issue-27033.rs:8:9\n    |\n LL |     const C: u8 = 1;\n    |     ---------------- the constant `C` is defined here"}, {"sha": "85d812dd61904b737f3443423e68d735c8aa27de", "filename": "src/test/ui/no-send-res-ports.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fno-send-res-ports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fno-send-res-ports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fno-send-res-ports.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,4 @@\n-// ignore-x86\n-// ^ due to stderr output differences\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n use std::thread;\n use std::rc::Rc;\n "}, {"sha": "f23a3bf832ab6c9336d053f1c85c586fafe66c43", "filename": "src/test/ui/no-send-res-ports.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fno-send-res-ports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Fno-send-res-ports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fno-send-res-ports.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: `std::rc::Rc<()>` cannot be sent between threads safely\n-  --> $DIR/no-send-res-ports.rs:27:5\n+  --> $DIR/no-send-res-ports.rs:26:5\n    |\n LL |     thread::spawn(move|| {\n    |     ^^^^^^^^^^^^^ `std::rc::Rc<()>` cannot be sent between threads safely\n@@ -9,10 +9,10 @@ LL |     thread::spawn(move|| {\n LL |     F: FnOnce() -> T, F: Send + 'static, T: Send + 'static\n    |                          ---- required by this bound in `std::thread::spawn`\n    |\n-   = help: within `[closure@$DIR/no-send-res-ports.rs:27:19: 31:6 x:main::Foo]`, the trait `std::marker::Send` is not implemented for `std::rc::Rc<()>`\n+   = help: within `[closure@$DIR/no-send-res-ports.rs:26:19: 30:6 x:main::Foo]`, the trait `std::marker::Send` is not implemented for `std::rc::Rc<()>`\n    = note: required because it appears within the type `Port<()>`\n    = note: required because it appears within the type `main::Foo`\n-   = note: required because it appears within the type `[closure@$DIR/no-send-res-ports.rs:27:19: 31:6 x:main::Foo]`\n+   = note: required because it appears within the type `[closure@$DIR/no-send-res-ports.rs:26:19: 30:6 x:main::Foo]`\n \n error: aborting due to previous error\n "}, {"sha": "a028247ec5c112a836d1098d5450634bc4a88b67", "filename": "src/test/ui/rfc-1937-termination-trait/termination-trait-test-wrong-type.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-test-wrong-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-test-wrong-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-test-wrong-type.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,6 +1,5 @@\n // compile-flags: --test\n-// ignore-x86\n-// ^ due to stderr output differences\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n \n use std::num::ParseFloatError;\n "}, {"sha": "9cefef58bf53ae18fe877f337af9f934d1e6cbca", "filename": "src/test/ui/rfc-1937-termination-trait/termination-trait-test-wrong-type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-test-wrong-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-test-wrong-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-test-wrong-type.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: `main` has invalid return type `std::result::Result<f32, std::num::ParseFloatError>`\n-  --> $DIR/termination-trait-test-wrong-type.rs:8:1\n+  --> $DIR/termination-trait-test-wrong-type.rs:7:1\n    |\n LL | / fn can_parse_zero_as_f32() -> Result<f32, ParseFloatError> {\n LL | |     \"0\".parse()"}, {"sha": "5d3464d20f30dc245d77ad1b4b4beae6eea5d360", "filename": "src/test/ui/traits/trait-suggest-where-clause.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Ftraits%2Ftrait-suggest-where-clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Ftraits%2Ftrait-suggest-where-clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-suggest-where-clause.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,4 @@\n-// ignore-x86\n-// ^ due to stderr output differences\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n use std::mem;\n \n struct Misc<T:?Sized>(T);"}, {"sha": "2bb7defdac710c22fb0ec0cc24d1caa1ded3761a", "filename": "src/test/ui/traits/trait-suggest-where-clause.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Ftraits%2Ftrait-suggest-where-clause.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Ftraits%2Ftrait-suggest-where-clause.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-suggest-where-clause.stderr?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the size for values of type `U` cannot be known at compilation time\n-  --> $DIR/trait-suggest-where-clause.rs:9:20\n+  --> $DIR/trait-suggest-where-clause.rs:8:20\n    |\n LL | fn check<T: Iterator, U: ?Sized>() {\n    |                       -- help: consider further restricting this bound: `U: std::marker::Sized +`\n@@ -16,7 +16,7 @@ LL | pub const fn size_of<T>() -> usize {\n    = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\n \n error[E0277]: the size for values of type `U` cannot be known at compilation time\n-  --> $DIR/trait-suggest-where-clause.rs:12:5\n+  --> $DIR/trait-suggest-where-clause.rs:11:5\n    |\n LL | fn check<T: Iterator, U: ?Sized>() {\n    |                       -- help: consider further restricting this bound: `U: std::marker::Sized +`\n@@ -34,31 +34,31 @@ LL | pub const fn size_of<T>() -> usize {\n    = note: required because it appears within the type `Misc<U>`\n \n error[E0277]: the trait bound `u64: std::convert::From<T>` is not satisfied\n-  --> $DIR/trait-suggest-where-clause.rs:17:5\n+  --> $DIR/trait-suggest-where-clause.rs:16:5\n    |\n LL |     <u64 as From<T>>::from;\n    |     ^^^^^^^^^^^^^^^^^^^^^^ the trait `std::convert::From<T>` is not implemented for `u64`\n    |\n    = note: required by `std::convert::From::from`\n \n error[E0277]: the trait bound `u64: std::convert::From<<T as std::iter::Iterator>::Item>` is not satisfied\n-  --> $DIR/trait-suggest-where-clause.rs:20:5\n+  --> $DIR/trait-suggest-where-clause.rs:19:5\n    |\n LL |     <u64 as From<<T as Iterator>::Item>>::from;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::convert::From<<T as std::iter::Iterator>::Item>` is not implemented for `u64`\n    |\n    = note: required by `std::convert::From::from`\n \n error[E0277]: the trait bound `Misc<_>: std::convert::From<T>` is not satisfied\n-  --> $DIR/trait-suggest-where-clause.rs:25:5\n+  --> $DIR/trait-suggest-where-clause.rs:24:5\n    |\n LL |     <Misc<_> as From<T>>::from;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::convert::From<T>` is not implemented for `Misc<_>`\n    |\n    = note: required by `std::convert::From::from`\n \n error[E0277]: the size for values of type `[T]` cannot be known at compilation time\n-  --> $DIR/trait-suggest-where-clause.rs:30:20\n+  --> $DIR/trait-suggest-where-clause.rs:29:20\n    |\n LL |     mem::size_of::<[T]>();\n    |                    ^^^ doesn't have a size known at compile-time\n@@ -72,7 +72,7 @@ LL | pub const fn size_of<T>() -> usize {\n    = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\n \n error[E0277]: the size for values of type `[&U]` cannot be known at compilation time\n-  --> $DIR/trait-suggest-where-clause.rs:33:5\n+  --> $DIR/trait-suggest-where-clause.rs:32:5\n    |\n LL |     mem::size_of::<[&U]>();\n    |     ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time"}, {"sha": "926f12911c52a521c9f1e070a787942a7f462797", "filename": "src/test/ui/type_length_limit.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Ftype_length_limit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc5d0ec813e6f0c06c3bdd31257d673dd11265f/src%2Ftest%2Fui%2Ftype_length_limit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype_length_limit.rs?ref=9dc5d0ec813e6f0c06c3bdd31257d673dd11265f", "patch": "@@ -1,5 +1,4 @@\n-// ignore-musl\n-// ignore-x86\n+// ignore-x86 FIXME: missing sysroot spans (#53081)\n // error-pattern: reached the type-length limit while instantiating\n \n // Test that the type length limit can be changed."}]}