{"sha": "fc9e1d0f55f721461b73628f12cf64de31be55af", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjOWUxZDBmNTVmNzIxNDYxYjczNjI4ZjEyY2Y2NGRlMzFiZTU1YWY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-18T18:30:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-18T18:30:30Z"}, "message": "Auto merge of #32309 - aturon:overlap-warning, r=nikomatsakis\n\nChange inherent overlap error to a warning for now, to ease the breakage\n\nCloses #32247\n\nr? @nikomatsakis", "tree": {"sha": "9dc700ca2043cfd2bf1bd9f0fac018755acb3d4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9dc700ca2043cfd2bf1bd9f0fac018755acb3d4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc9e1d0f55f721461b73628f12cf64de31be55af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc9e1d0f55f721461b73628f12cf64de31be55af", "html_url": "https://github.com/rust-lang/rust/commit/fc9e1d0f55f721461b73628f12cf64de31be55af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc9e1d0f55f721461b73628f12cf64de31be55af/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24bb607e7d65ebfc487eba62e053ac049f140efc", "url": "https://api.github.com/repos/rust-lang/rust/commits/24bb607e7d65ebfc487eba62e053ac049f140efc", "html_url": "https://github.com/rust-lang/rust/commit/24bb607e7d65ebfc487eba62e053ac049f140efc"}, {"sha": "e477703bbfa47bb03eb0f983164fea4ecaf73cf7", "url": "https://api.github.com/repos/rust-lang/rust/commits/e477703bbfa47bb03eb0f983164fea4ecaf73cf7", "html_url": "https://github.com/rust-lang/rust/commit/e477703bbfa47bb03eb0f983164fea4ecaf73cf7"}], "stats": {"total": 46, "additions": 30, "deletions": 16}, "files": [{"sha": "d99d6afd81285a2aeeec21d7ea33acf1f48435cc", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/fc9e1d0f55f721461b73628f12cf64de31be55af/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc9e1d0f55f721461b73628f12cf64de31be55af/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=fc9e1d0f55f721461b73628f12cf64de31be55af", "patch": "@@ -154,6 +154,12 @@ declare_lint! {\n     \"transmute from function item type to pointer-sized type erroneously allowed\"\n }\n \n+declare_lint! {\n+    pub OVERLAPPING_INHERENT_IMPLS,\n+    Warn,\n+    \"two overlapping inherent impls define an item with the same name were erroneously allowed\"\n+}\n+\n /// Does nothing as a lint pass, but registers some `Lint`s\n /// which are used by other parts of the compiler.\n #[derive(Copy, Clone)]\n@@ -184,7 +190,8 @@ impl LintPass for HardwiredLints {\n             MATCH_OF_UNIT_VARIANT_VIA_PAREN_DOTDOT,\n             CONST_ERR,\n             RAW_POINTER_DERIVE,\n-            TRANSMUTE_FROM_FN_ITEM_TYPES\n+            TRANSMUTE_FROM_FN_ITEM_TYPES,\n+            OVERLAPPING_INHERENT_IMPLS\n         )\n     }\n }"}, {"sha": "4288f6258ae0dd294edba10a108f8b73c9a4479b", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fc9e1d0f55f721461b73628f12cf64de31be55af/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc9e1d0f55f721461b73628f12cf64de31be55af/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=fc9e1d0f55f721461b73628f12cf64de31be55af", "patch": "@@ -175,6 +175,10 @@ pub fn register_builtins(store: &mut lint::LintStore, sess: Option<&Session>) {\n             id: LintId::of(TRANSMUTE_FROM_FN_ITEM_TYPES),\n             reference: \"issue #19925 <https://github.com/rust-lang/rust/issues/19925>\",\n         },\n+        FutureIncompatibleInfo {\n+            id: LintId::of(OVERLAPPING_INHERENT_IMPLS),\n+            reference: \"issue #22889 <https://github.com/rust-lang/rust/issues/22889>\",\n+        },\n         ]);\n \n     // We have one lint pass defined specially"}, {"sha": "78ae8fa65f840b3fe15048d34e30324fb662fa02", "filename": "src/librustc_typeck/coherence/overlap.rs", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/fc9e1d0f55f721461b73628f12cf64de31be55af/src%2Flibrustc_typeck%2Fcoherence%2Foverlap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc9e1d0f55f721461b73628f12cf64de31be55af/src%2Flibrustc_typeck%2Fcoherence%2Foverlap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Foverlap.rs?ref=fc9e1d0f55f721461b73628f12cf64de31be55af", "patch": "@@ -18,11 +18,11 @@ use middle::traits::{self, ProjectionMode};\n use middle::infer;\n use middle::ty::{self, TyCtxt};\n use syntax::ast;\n-use syntax::codemap::Span;\n use rustc::dep_graph::DepNode;\n use rustc_front::hir;\n use rustc_front::intravisit;\n use util::nodemap::DefIdMap;\n+use lint;\n \n pub fn check(tcx: &TyCtxt) {\n     let mut overlap = OverlapChecker { tcx: tcx,\n@@ -41,11 +41,6 @@ struct OverlapChecker<'cx, 'tcx:'cx> {\n }\n \n impl<'cx, 'tcx> OverlapChecker<'cx, 'tcx> {\n-    fn span_of_def_id(&self, did: DefId) -> Span {\n-        let node_id = self.tcx.map.as_local_node_id(did).unwrap();\n-        self.tcx.map.span(node_id)\n-    }\n-\n     fn check_for_common_items_in_impls(&self, impl1: DefId, impl2: DefId) {\n         #[derive(Copy, Clone, PartialEq)]\n         enum Namespace { Type, Value }\n@@ -68,11 +63,12 @@ impl<'cx, 'tcx> OverlapChecker<'cx, 'tcx> {\n \n             for item2 in &impl_items[&impl2] {\n                 if (name, namespace) == name_and_namespace(&self.tcx, item2) {\n-                    let mut err = super::report_duplicate_item(\n-                        &self.tcx, self.span_of_def_id(item1.def_id()), name);\n-                    span_note!(&mut err, self.span_of_def_id(item2.def_id()),\n-                               \"conflicting definition is here:\");\n-                    err.emit();\n+                    let msg = format!(\"duplicate definitions with name `{}`\", name);\n+                    let node_id = self.tcx.map.as_local_node_id(item1.def_id()).unwrap();\n+                    self.tcx.sess.add_lint(lint::builtin::OVERLAPPING_INHERENT_IMPLS,\n+                                           node_id,\n+                                           self.tcx.span_of_impl(item1.def_id()).unwrap(),\n+                                           msg);\n                 }\n             }\n         }"}, {"sha": "333a4ee04b27becd0319463b9a1a9a745939ba34", "filename": "src/test/compile-fail/inherent-overlap.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fc9e1d0f55f721461b73628f12cf64de31be55af/src%2Ftest%2Fcompile-fail%2Finherent-overlap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc9e1d0f55f721461b73628f12cf64de31be55af/src%2Ftest%2Fcompile-fail%2Finherent-overlap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Finherent-overlap.rs?ref=fc9e1d0f55f721461b73628f12cf64de31be55af", "patch": "@@ -11,10 +11,14 @@\n // Test that you cannot define items with the same name in overlapping inherent\n // impl blocks.\n \n+#![feature(rustc_attrs)]\n+#![allow(dead_code)]\n+\n struct Foo;\n \n impl Foo {\n-    fn id() {} //~ ERROR E0201\n+    fn id() {} //~ WARN duplicate definitions\n+    //~^ WARN previously accepted\n }\n \n impl Foo {\n@@ -24,7 +28,8 @@ impl Foo {\n struct Bar<T>(T);\n \n impl<T> Bar<T> {\n-    fn bar(&self) {} //~ ERROR E0201\n+    fn bar(&self) {} //~ WARN duplicate definitions\n+    //~^ WARN previously accepted\n }\n \n impl Bar<u32> {\n@@ -34,11 +39,13 @@ impl Bar<u32> {\n struct Baz<T>(T);\n \n impl<T: Copy> Baz<T> {\n-    fn baz(&self) {} //~ ERROR E0201\n+    fn baz(&self) {} //~ WARN duplicate definitions\n+    //~^ WARN previously accepted\n }\n \n impl<T> Baz<Vec<T>> {\n     fn baz(&self) {}\n }\n \n-fn main() {}\n+#[rustc_error]\n+fn main() {} //~ ERROR compilation successful"}]}