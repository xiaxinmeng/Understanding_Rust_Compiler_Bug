{"sha": "348997a05f169908c3555396dd0d8f383be3a7d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0ODk5N2EwNWYxNjk5MDhjMzU1NTM5NmRkMGQ4ZjM4M2JlM2E3ZDk=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-01-19T09:27:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-19T09:27:56Z"}, "message": "Rollup merge of #81147 - estebank:drop-suggestion, r=varkor\n\nFix structured suggestion for explicit `drop` call", "tree": {"sha": "00a50fd6ce61e539ff97aef742d2c45a00c3a036", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00a50fd6ce61e539ff97aef742d2c45a00c3a036"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/348997a05f169908c3555396dd0d8f383be3a7d9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgBqYdCRBK7hj4Ov3rIwAAdHIIACb/jJtq8uB1fypm+eqaQSSc\nKWjKduSfjFruoaSIc98bFgFF1aRai8sc5nwKjTILxNs/iGgSFvnH97pPRxvtMMdz\n2RIx/JzWZWZKJGB7K4XvX1dma/lfNDMMyvWWgwQA61NdghCv5LNFExqFk+tv3/ru\nbDuOB09vlH3OO6eaaWHh7phMoDMeKSYB/4sduByN8tYmnzbWu+D36d0HBlAVdc+8\nvJpQyqciXW9vJ1+oIGlVPipL3M4+3MLpJyZJN6em2ynVE1wNOUYpZVbQWwE7A+n0\n4f8XC+QTUnTTHzC1L/bqSscpK6BWF53lXNnqHYTyiX6BCI6WZeeqngy3vnoEHGU=\n=MGnu\n-----END PGP SIGNATURE-----\n", "payload": "tree 00a50fd6ce61e539ff97aef742d2c45a00c3a036\nparent 6af6c40a12e42e9a21c98df4d8d5ba052e2e4b69\nparent 70a43e07f6887dd1de62a9bbbc77b4a0c6e8d0d8\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1611048476 +0100\ncommitter GitHub <noreply@github.com> 1611048476 +0100\n\nRollup merge of #81147 - estebank:drop-suggestion, r=varkor\n\nFix structured suggestion for explicit `drop` call\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/348997a05f169908c3555396dd0d8f383be3a7d9", "html_url": "https://github.com/rust-lang/rust/commit/348997a05f169908c3555396dd0d8f383be3a7d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/348997a05f169908c3555396dd0d8f383be3a7d9/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6af6c40a12e42e9a21c98df4d8d5ba052e2e4b69", "url": "https://api.github.com/repos/rust-lang/rust/commits/6af6c40a12e42e9a21c98df4d8d5ba052e2e4b69", "html_url": "https://github.com/rust-lang/rust/commit/6af6c40a12e42e9a21c98df4d8d5ba052e2e4b69"}, {"sha": "70a43e07f6887dd1de62a9bbbc77b4a0c6e8d0d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/70a43e07f6887dd1de62a9bbbc77b4a0c6e8d0d8", "html_url": "https://github.com/rust-lang/rust/commit/70a43e07f6887dd1de62a9bbbc77b4a0c6e8d0d8"}], "stats": {"total": 134, "additions": 107, "deletions": 27}, "files": [{"sha": "4836418b3c2100ad76b5ed23bd5509c3e4f52498", "filename": "compiler/rustc_typeck/src/check/callee.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/348997a05f169908c3555396dd0d8f383be3a7d9/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/348997a05f169908c3555396dd0d8f383be3a7d9/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcallee.rs?ref=348997a05f169908c3555396dd0d8f383be3a7d9", "patch": "@@ -25,24 +25,24 @@ pub fn check_legal_trait_for_method_call(\n     tcx: TyCtxt<'_>,\n     span: Span,\n     receiver: Option<Span>,\n+    expr_span: Span,\n     trait_id: DefId,\n ) {\n     if tcx.lang_items().drop_trait() == Some(trait_id) {\n         let mut err = struct_span_err!(tcx.sess, span, E0040, \"explicit use of destructor method\");\n         err.span_label(span, \"explicit destructor calls not allowed\");\n \n-        let snippet = receiver\n+        let (sp, suggestion) = receiver\n             .and_then(|s| tcx.sess.source_map().span_to_snippet(s).ok())\n-            .unwrap_or_default();\n-\n-        let suggestion =\n-            if snippet.is_empty() { \"drop\".to_string() } else { format!(\"drop({})\", snippet) };\n+            .filter(|snippet| !snippet.is_empty())\n+            .map(|snippet| (expr_span, format!(\"drop({})\", snippet)))\n+            .unwrap_or_else(|| (span, \"drop\".to_string()));\n \n         err.span_suggestion(\n-            span,\n-            &format!(\"consider using `drop` function: `{}`\", suggestion),\n-            String::new(),\n-            Applicability::Unspecified,\n+            sp,\n+            \"consider using `drop` function\",\n+            suggestion,\n+            Applicability::MaybeIncorrect,\n         );\n \n         err.emit();"}, {"sha": "ed48a0bc801cfeaa159f942625aadf6c1bd67b78", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/348997a05f169908c3555396dd0d8f383be3a7d9/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2F_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/348997a05f169908c3555396dd0d8f383be3a7d9/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2F_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2F_impl.rs?ref=348997a05f169908c3555396dd0d8f383be3a7d9", "patch": "@@ -1163,7 +1163,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 debug!(\"instantiate_value_path: def_id={:?} container={:?}\", def_id, container);\n                 match container {\n                     ty::TraitContainer(trait_did) => {\n-                        callee::check_legal_trait_for_method_call(tcx, span, None, trait_did)\n+                        callee::check_legal_trait_for_method_call(tcx, span, None, span, trait_did)\n                     }\n                     ty::ImplContainer(impl_def_id) => {\n                         if segments.len() == 1 {"}, {"sha": "e5f19281b0773293e1c361f7940f35341940411e", "filename": "compiler/rustc_typeck/src/check/method/confirm.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/348997a05f169908c3555396dd0d8f383be3a7d9/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fconfirm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/348997a05f169908c3555396dd0d8f383be3a7d9/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fconfirm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fconfirm.rs?ref=348997a05f169908c3555396dd0d8f383be3a7d9", "patch": "@@ -508,6 +508,7 @@ impl<'a, 'tcx> ConfirmContext<'a, 'tcx> {\n                 self.tcx,\n                 self.span,\n                 Some(self.self_expr.span),\n+                self.call_expr.span,\n                 trait_def_id,\n             ),\n             ty::ImplContainer(..) => {}"}, {"sha": "139dc8f94964f527809fabd935f4e01047eb2b4d", "filename": "src/test/ui/error-codes/E0040.fixed", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/348997a05f169908c3555396dd0d8f383be3a7d9/src%2Ftest%2Fui%2Ferror-codes%2FE0040.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/348997a05f169908c3555396dd0d8f383be3a7d9/src%2Ftest%2Fui%2Ferror-codes%2FE0040.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0040.fixed?ref=348997a05f169908c3555396dd0d8f383be3a7d9", "patch": "@@ -0,0 +1,18 @@\n+// run-rustfix\n+struct Foo {\n+    x: i32,\n+}\n+\n+impl Drop for Foo {\n+    fn drop(&mut self) {\n+        println!(\"kaboom\");\n+    }\n+}\n+\n+fn main() {\n+    let mut x = Foo { x: -7 };\n+    x.x = 0;\n+    println!(\"{}\", x.x);\n+    drop(x);\n+    //~^ ERROR E0040\n+}"}, {"sha": "9ffc42d0c78048b5a52e9d040aa7d422cef11fcc", "filename": "src/test/ui/error-codes/E0040.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/348997a05f169908c3555396dd0d8f383be3a7d9/src%2Ftest%2Fui%2Ferror-codes%2FE0040.rs", "raw_url": "https://github.com/rust-lang/rust/raw/348997a05f169908c3555396dd0d8f383be3a7d9/src%2Ftest%2Fui%2Ferror-codes%2FE0040.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0040.rs?ref=348997a05f169908c3555396dd0d8f383be3a7d9", "patch": "@@ -1,3 +1,4 @@\n+// run-rustfix\n struct Foo {\n     x: i32,\n }\n@@ -10,6 +11,8 @@ impl Drop for Foo {\n \n fn main() {\n     let mut x = Foo { x: -7 };\n+    x.x = 0;\n+    println!(\"{}\", x.x);\n     x.drop();\n     //~^ ERROR E0040\n }"}, {"sha": "9fcda1a9385d2b7e80c86b548efaf7e6a7eff718", "filename": "src/test/ui/error-codes/E0040.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/348997a05f169908c3555396dd0d8f383be3a7d9/src%2Ftest%2Fui%2Ferror-codes%2FE0040.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/348997a05f169908c3555396dd0d8f383be3a7d9/src%2Ftest%2Fui%2Ferror-codes%2FE0040.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0040.stderr?ref=348997a05f169908c3555396dd0d8f383be3a7d9", "patch": "@@ -1,11 +1,11 @@\n error[E0040]: explicit use of destructor method\n-  --> $DIR/E0040.rs:13:7\n+  --> $DIR/E0040.rs:16:7\n    |\n LL |     x.drop();\n-   |       ^^^^\n-   |       |\n-   |       explicit destructor calls not allowed\n-   |       help: consider using `drop` function: `drop(x)`\n+   |     --^^^^--\n+   |     | |\n+   |     | explicit destructor calls not allowed\n+   |     help: consider using `drop` function: `drop(x)`\n \n error: aborting due to previous error\n "}, {"sha": "91a4ca608da4ea1396d25ffed856a4a95aac6afb", "filename": "src/test/ui/explicit/explicit-call-to-dtor.fixed", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/348997a05f169908c3555396dd0d8f383be3a7d9/src%2Ftest%2Fui%2Fexplicit%2Fexplicit-call-to-dtor.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/348997a05f169908c3555396dd0d8f383be3a7d9/src%2Ftest%2Fui%2Fexplicit%2Fexplicit-call-to-dtor.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexplicit%2Fexplicit-call-to-dtor.fixed?ref=348997a05f169908c3555396dd0d8f383be3a7d9", "patch": "@@ -0,0 +1,16 @@\n+// run-rustfix\n+struct Foo {\n+    x: isize\n+}\n+\n+impl Drop for Foo {\n+    fn drop(&mut self) {\n+        println!(\"kaboom\");\n+    }\n+}\n+\n+fn main() {\n+    let x = Foo { x: 3 };\n+    println!(\"{}\", x.x);\n+    drop(x);   //~ ERROR explicit use of destructor method\n+}"}, {"sha": "0656871eb1b34c058906ed24a99ef2f16186b4d2", "filename": "src/test/ui/explicit/explicit-call-to-dtor.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/348997a05f169908c3555396dd0d8f383be3a7d9/src%2Ftest%2Fui%2Fexplicit%2Fexplicit-call-to-dtor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/348997a05f169908c3555396dd0d8f383be3a7d9/src%2Ftest%2Fui%2Fexplicit%2Fexplicit-call-to-dtor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexplicit%2Fexplicit-call-to-dtor.rs?ref=348997a05f169908c3555396dd0d8f383be3a7d9", "patch": "@@ -1,3 +1,4 @@\n+// run-rustfix\n struct Foo {\n     x: isize\n }\n@@ -10,5 +11,6 @@ impl Drop for Foo {\n \n fn main() {\n     let x = Foo { x: 3 };\n+    println!(\"{}\", x.x);\n     x.drop();   //~ ERROR explicit use of destructor method\n }"}, {"sha": "f3c9bf6cccdd3f14bee0b8096dbc0963c7ea3bf5", "filename": "src/test/ui/explicit/explicit-call-to-dtor.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/348997a05f169908c3555396dd0d8f383be3a7d9/src%2Ftest%2Fui%2Fexplicit%2Fexplicit-call-to-dtor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/348997a05f169908c3555396dd0d8f383be3a7d9/src%2Ftest%2Fui%2Fexplicit%2Fexplicit-call-to-dtor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexplicit%2Fexplicit-call-to-dtor.stderr?ref=348997a05f169908c3555396dd0d8f383be3a7d9", "patch": "@@ -1,11 +1,11 @@\n error[E0040]: explicit use of destructor method\n-  --> $DIR/explicit-call-to-dtor.rs:13:7\n+  --> $DIR/explicit-call-to-dtor.rs:15:7\n    |\n LL |     x.drop();\n-   |       ^^^^\n-   |       |\n-   |       explicit destructor calls not allowed\n-   |       help: consider using `drop` function: `drop(x)`\n+   |     --^^^^--\n+   |     | |\n+   |     | explicit destructor calls not allowed\n+   |     help: consider using `drop` function: `drop(x)`\n \n error: aborting due to previous error\n "}, {"sha": "47c4c9f67b69250057a48eb238519a98064fbce0", "filename": "src/test/ui/explicit/explicit-call-to-supertrait-dtor.fixed", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/348997a05f169908c3555396dd0d8f383be3a7d9/src%2Ftest%2Fui%2Fexplicit%2Fexplicit-call-to-supertrait-dtor.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/348997a05f169908c3555396dd0d8f383be3a7d9/src%2Ftest%2Fui%2Fexplicit%2Fexplicit-call-to-supertrait-dtor.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexplicit%2Fexplicit-call-to-supertrait-dtor.fixed?ref=348997a05f169908c3555396dd0d8f383be3a7d9", "patch": "@@ -0,0 +1,26 @@\n+// run-rustfix\n+struct Foo {\n+    x: isize\n+}\n+\n+#[allow(drop_bounds)]\n+trait Bar: Drop {\n+    fn blah(&self);\n+}\n+\n+impl Drop for Foo {\n+    fn drop(&mut self) {\n+        println!(\"kaboom\");\n+    }\n+}\n+\n+impl Bar for Foo {\n+    fn blah(&self) {\n+        drop(self);    //~ ERROR explicit use of destructor method\n+    }\n+}\n+\n+fn main() {\n+    let x = Foo { x: 3 };\n+    println!(\"{}\", x.x);\n+}"}, {"sha": "c698de50c75b83c3a243dd1154279773633035fc", "filename": "src/test/ui/explicit/explicit-call-to-supertrait-dtor.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/348997a05f169908c3555396dd0d8f383be3a7d9/src%2Ftest%2Fui%2Fexplicit%2Fexplicit-call-to-supertrait-dtor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/348997a05f169908c3555396dd0d8f383be3a7d9/src%2Ftest%2Fui%2Fexplicit%2Fexplicit-call-to-supertrait-dtor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexplicit%2Fexplicit-call-to-supertrait-dtor.rs?ref=348997a05f169908c3555396dd0d8f383be3a7d9", "patch": "@@ -1,8 +1,10 @@\n+// run-rustfix\n struct Foo {\n     x: isize\n }\n \n-trait Bar : Drop {\n+#[allow(drop_bounds)]\n+trait Bar: Drop {\n     fn blah(&self);\n }\n \n@@ -20,4 +22,5 @@ impl Bar for Foo {\n \n fn main() {\n     let x = Foo { x: 3 };\n+    println!(\"{}\", x.x);\n }"}, {"sha": "7f5106eb57e54ac96caba72f3c9b364201dd87f0", "filename": "src/test/ui/explicit/explicit-call-to-supertrait-dtor.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/348997a05f169908c3555396dd0d8f383be3a7d9/src%2Ftest%2Fui%2Fexplicit%2Fexplicit-call-to-supertrait-dtor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/348997a05f169908c3555396dd0d8f383be3a7d9/src%2Ftest%2Fui%2Fexplicit%2Fexplicit-call-to-supertrait-dtor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexplicit%2Fexplicit-call-to-supertrait-dtor.stderr?ref=348997a05f169908c3555396dd0d8f383be3a7d9", "patch": "@@ -1,11 +1,11 @@\n error[E0040]: explicit use of destructor method\n-  --> $DIR/explicit-call-to-supertrait-dtor.rs:17:14\n+  --> $DIR/explicit-call-to-supertrait-dtor.rs:19:14\n    |\n LL |         self.drop();\n-   |              ^^^^\n-   |              |\n-   |              explicit destructor calls not allowed\n-   |              help: consider using `drop` function: `drop(self)`\n+   |         -----^^^^--\n+   |         |    |\n+   |         |    explicit destructor calls not allowed\n+   |         help: consider using `drop` function: `drop(self)`\n \n error: aborting due to previous error\n "}, {"sha": "d73b391be06219a872336b2481b816ab295b294b", "filename": "src/test/ui/illegal-ufcs-drop.fixed", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/348997a05f169908c3555396dd0d8f383be3a7d9/src%2Ftest%2Fui%2Fillegal-ufcs-drop.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/348997a05f169908c3555396dd0d8f383be3a7d9/src%2Ftest%2Fui%2Fillegal-ufcs-drop.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fillegal-ufcs-drop.fixed?ref=348997a05f169908c3555396dd0d8f383be3a7d9", "patch": "@@ -0,0 +1,10 @@\n+// run-rustfix\n+struct Foo;\n+\n+impl Drop for Foo {\n+    fn drop(&mut self) {}\n+}\n+\n+fn main() {\n+    drop(&mut Foo) //~ ERROR explicit use of destructor method\n+}"}, {"sha": "11411f55494c592d037e1db0131cdcdc97b0b758", "filename": "src/test/ui/illegal-ufcs-drop.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/348997a05f169908c3555396dd0d8f383be3a7d9/src%2Ftest%2Fui%2Fillegal-ufcs-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/348997a05f169908c3555396dd0d8f383be3a7d9/src%2Ftest%2Fui%2Fillegal-ufcs-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fillegal-ufcs-drop.rs?ref=348997a05f169908c3555396dd0d8f383be3a7d9", "patch": "@@ -1,3 +1,4 @@\n+// run-rustfix\n struct Foo;\n \n impl Drop for Foo {"}, {"sha": "91f47d5e456d38871b95ae66d621925338c6035e", "filename": "src/test/ui/illegal-ufcs-drop.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/348997a05f169908c3555396dd0d8f383be3a7d9/src%2Ftest%2Fui%2Fillegal-ufcs-drop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/348997a05f169908c3555396dd0d8f383be3a7d9/src%2Ftest%2Fui%2Fillegal-ufcs-drop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fillegal-ufcs-drop.stderr?ref=348997a05f169908c3555396dd0d8f383be3a7d9", "patch": "@@ -1,5 +1,5 @@\n error[E0040]: explicit use of destructor method\n-  --> $DIR/illegal-ufcs-drop.rs:8:5\n+  --> $DIR/illegal-ufcs-drop.rs:9:5\n    |\n LL |     Drop::drop(&mut Foo)\n    |     ^^^^^^^^^^"}]}