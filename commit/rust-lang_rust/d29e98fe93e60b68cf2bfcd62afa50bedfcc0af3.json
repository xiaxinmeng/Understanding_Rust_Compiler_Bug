{"sha": "d29e98fe93e60b68cf2bfcd62afa50bedfcc0af3", "node_id": "C_kwDOAAsO6NoAKGQyOWU5OGZlOTNlNjBiNjhjZjJiZmNkNjJhZmE1MGJlZGZjYzBhZjM", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-10-21T05:11:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-21T05:11:05Z"}, "message": "Rollup merge of #90010 - rusticstuff:vecdeque_with_capacity_in_overflow, r=m-ou-se\n\nAvoid overflow in `VecDeque::with_capacity_in()`.\n\nThe overflow only happens if alloc is compiled with overflow checks enabled and the passed capacity is greater or equal 2^(usize::BITS-1). The overflow shadows the expected \"capacity overflow\" panic leading to a test failure if overflow checks are enabled for std in the CI.\n\nUnblocks [CI: Enable overflow checks for test (non-dist) builds #89776](https://github.com/rust-lang/rust/pull/89776).\n\nFor some reason the overflow is only observable with optimization turned off, but that is a separate issue.", "tree": {"sha": "dbae6539d2b86a5fa5f3534ee94ebfecd34a97e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dbae6539d2b86a5fa5f3534ee94ebfecd34a97e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d29e98fe93e60b68cf2bfcd62afa50bedfcc0af3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhcPZpCRBK7hj4Ov3rIwAAYTAIACxEN1NLbP30FaI3zdvyMQxI\nnrWnE/GkE31+Z9Ff0x+C+Md8vAiRQGf9e8iVI0csV7LdTs05fb5Jtn5ogbiyCEIb\nj0+w2qjQm+454LEAl5zKB48BfkPeCLrtO6MA+kycy4JEdEPcuI/5c+ez9rWd389t\nodvbfqgur+FtFqSgABalmY+rbhTeh6sKx0LRppDTxht1HNiqwkAM9WA6CSsq/Iwb\n1tldEH8s/mXia3AuCphTGymNaYTCXw26UDD6/52uTQ8v/zsaRwCS76nZzXPgSW1i\nYw/lpuN578Ia/DM0VJD8xG5mRAWnnDxkQS87XvGc9LROfAy7clvKjLyw/MSnNeA=\n=Xij/\n-----END PGP SIGNATURE-----\n", "payload": "tree dbae6539d2b86a5fa5f3534ee94ebfecd34a97e7\nparent 20687bb4f151859041aea57029042c0ca6f87d40\nparent 4a37b9cbffdc9ba66e9e4b7a17cb0de157a647f8\nauthor Yuki Okushi <jtitor@2k36.org> 1634793065 +0900\ncommitter GitHub <noreply@github.com> 1634793065 +0900\n\nRollup merge of #90010 - rusticstuff:vecdeque_with_capacity_in_overflow, r=m-ou-se\n\nAvoid overflow in `VecDeque::with_capacity_in()`.\n\nThe overflow only happens if alloc is compiled with overflow checks enabled and the passed capacity is greater or equal 2^(usize::BITS-1). The overflow shadows the expected \"capacity overflow\" panic leading to a test failure if overflow checks are enabled for std in the CI.\n\nUnblocks [CI: Enable overflow checks for test (non-dist) builds #89776](https://github.com/rust-lang/rust/pull/89776).\n\nFor some reason the overflow is only observable with optimization turned off, but that is a separate issue.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d29e98fe93e60b68cf2bfcd62afa50bedfcc0af3", "html_url": "https://github.com/rust-lang/rust/commit/d29e98fe93e60b68cf2bfcd62afa50bedfcc0af3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d29e98fe93e60b68cf2bfcd62afa50bedfcc0af3/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20687bb4f151859041aea57029042c0ca6f87d40", "url": "https://api.github.com/repos/rust-lang/rust/commits/20687bb4f151859041aea57029042c0ca6f87d40", "html_url": "https://github.com/rust-lang/rust/commit/20687bb4f151859041aea57029042c0ca6f87d40"}, {"sha": "4a37b9cbffdc9ba66e9e4b7a17cb0de157a647f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a37b9cbffdc9ba66e9e4b7a17cb0de157a647f8", "html_url": "https://github.com/rust-lang/rust/commit/4a37b9cbffdc9ba66e9e4b7a17cb0de157a647f8"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "de607c8fdab31dd098a5ee88c1f76dd81f41ac85", "filename": "library/alloc/src/collections/vec_deque/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d29e98fe93e60b68cf2bfcd62afa50bedfcc0af3/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d29e98fe93e60b68cf2bfcd62afa50bedfcc0af3/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs?ref=d29e98fe93e60b68cf2bfcd62afa50bedfcc0af3", "patch": "@@ -543,9 +543,9 @@ impl<T, A: Allocator> VecDeque<T, A> {\n     /// ```\n     #[unstable(feature = \"allocator_api\", issue = \"32838\")]\n     pub fn with_capacity_in(capacity: usize, alloc: A) -> VecDeque<T, A> {\n+        assert!(capacity < 1_usize << usize::BITS - 1, \"capacity overflow\");\n         // +1 since the ringbuffer always leaves one space empty\n         let cap = cmp::max(capacity + 1, MINIMUM_CAPACITY + 1).next_power_of_two();\n-        assert!(cap > capacity, \"capacity overflow\");\n \n         VecDeque { tail: 0, head: 0, buf: RawVec::with_capacity_in(cap, alloc) }\n     }"}]}