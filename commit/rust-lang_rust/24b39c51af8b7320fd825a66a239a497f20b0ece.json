{"sha": "24b39c51af8b7320fd825a66a239a497f20b0ece", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0YjM5YzUxYWY4YjczMjBmZDgyNWE2NmEyMzlhNDk3ZjIwYjBlY2U=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2017-03-01T22:01:09Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2017-03-02T16:45:50Z"}, "message": "Remove std_unicode::str::is_utf16\n\nIt was only accessible through the `#[unstable]` crate std_unicode.\n\nIt has never been used in the compiler or standard library\nsince 47e7a05a28c9662159af2d2e0f2b7efc13fa09cb added it in 2012\n\u201cfor OS API interop\u201d.\nIt can be replaced with a one-liner:\n\n```rust\nfn is_utf16(slice: &[u16]) -> bool {\n    std::char::decode_utf16(s.iter().cloned()).all(|r| r.is_ok())\n}\n```", "tree": {"sha": "2d085a13de1541bb72d186096e7dc695bc21bda5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d085a13de1541bb72d186096e7dc695bc21bda5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24b39c51af8b7320fd825a66a239a497f20b0ece", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24b39c51af8b7320fd825a66a239a497f20b0ece", "html_url": "https://github.com/rust-lang/rust/commit/24b39c51af8b7320fd825a66a239a497f20b0ece", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24b39c51af8b7320fd825a66a239a497f20b0ece/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "031f9b15df3df5da19b64a1f824463053898d021", "url": "https://api.github.com/repos/rust-lang/rust/commits/031f9b15df3df5da19b64a1f824463053898d021", "html_url": "https://github.com/rust-lang/rust/commit/031f9b15df3df5da19b64a1f824463053898d021"}], "stats": {"total": 90, "additions": 1, "deletions": 89}, "files": [{"sha": "8071c7e8c20d58688534d4e94e571034c9c28b45", "filename": "src/libcollectionstest/str.rs", "status": "modified", "additions": 0, "deletions": 65, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/24b39c51af8b7320fd825a66a239a497f20b0ece/src%2Flibcollectionstest%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24b39c51af8b7320fd825a66a239a497f20b0ece/src%2Flibcollectionstest%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fstr.rs?ref=24b39c51af8b7320fd825a66a239a497f20b0ece", "patch": "@@ -540,71 +540,6 @@ fn from_utf8_mostly_ascii() {\n     }\n }\n \n-#[test]\n-fn test_is_utf16() {\n-    use std_unicode::str::is_utf16;\n-\n-    macro_rules! pos {\n-        ($($e:expr),*) => { { $(assert!(is_utf16($e));)* } }\n-    }\n-\n-    // non-surrogates\n-    pos!(&[0x0000],\n-         &[0x0001, 0x0002],\n-         &[0xD7FF],\n-         &[0xE000]);\n-\n-    // surrogate pairs (randomly generated with Python 3's\n-    // .encode('utf-16be'))\n-    pos!(&[0xdb54, 0xdf16, 0xd880, 0xdee0, 0xdb6a, 0xdd45],\n-         &[0xd91f, 0xdeb1, 0xdb31, 0xdd84, 0xd8e2, 0xde14],\n-         &[0xdb9f, 0xdc26, 0xdb6f, 0xde58, 0xd850, 0xdfae]);\n-\n-    // mixtures (also random)\n-    pos!(&[0xd921, 0xdcc2, 0x002d, 0x004d, 0xdb32, 0xdf65],\n-         &[0xdb45, 0xdd2d, 0x006a, 0xdacd, 0xddfe, 0x0006],\n-         &[0x0067, 0xd8ff, 0xddb7, 0x000f, 0xd900, 0xdc80]);\n-\n-    // negative tests\n-    macro_rules! neg {\n-        ($($e:expr),*) => { { $(assert!(!is_utf16($e));)* } }\n-    }\n-\n-    neg!(\n-        // surrogate + regular unit\n-        &[0xdb45, 0x0000],\n-        // surrogate + lead surrogate\n-        &[0xd900, 0xd900],\n-        // unterminated surrogate\n-        &[0xd8ff],\n-        // trail surrogate without a lead\n-        &[0xddb7]);\n-\n-    // random byte sequences that Python 3's .decode('utf-16be')\n-    // failed on\n-    neg!(&[0x5b3d, 0x0141, 0xde9e, 0x8fdc, 0xc6e7],\n-         &[0xdf5a, 0x82a5, 0x62b9, 0xb447, 0x92f3],\n-         &[0xda4e, 0x42bc, 0x4462, 0xee98, 0xc2ca],\n-         &[0xbe00, 0xb04a, 0x6ecb, 0xdd89, 0xe278],\n-         &[0x0465, 0xab56, 0xdbb6, 0xa893, 0x665e],\n-         &[0x6b7f, 0x0a19, 0x40f4, 0xa657, 0xdcc5],\n-         &[0x9b50, 0xda5e, 0x24ec, 0x03ad, 0x6dee],\n-         &[0x8d17, 0xcaa7, 0xf4ae, 0xdf6e, 0xbed7],\n-         &[0xdaee, 0x2584, 0x7d30, 0xa626, 0x121a],\n-         &[0xd956, 0x4b43, 0x7570, 0xccd6, 0x4f4a],\n-         &[0x9dcf, 0x1b49, 0x4ba5, 0xfce9, 0xdffe],\n-         &[0x6572, 0xce53, 0xb05a, 0xf6af, 0xdacf],\n-         &[0x1b90, 0x728c, 0x9906, 0xdb68, 0xf46e],\n-         &[0x1606, 0xbeca, 0xbe76, 0x860f, 0xdfa5],\n-         &[0x8b4f, 0xde7a, 0xd220, 0x9fac, 0x2b6f],\n-         &[0xb8fe, 0xebbe, 0xda32, 0x1a5f, 0x8b8b],\n-         &[0x934b, 0x8956, 0xc434, 0x1881, 0xddf7],\n-         &[0x5a95, 0x13fc, 0xf116, 0xd89b, 0x93f9],\n-         &[0xd640, 0x71f1, 0xdd7d, 0x77eb, 0x1cd8],\n-         &[0x348b, 0xaef0, 0xdb2c, 0xebf1, 0x1282],\n-         &[0x50d7, 0xd824, 0x5010, 0xb369, 0x22ea]);\n-}\n-\n #[test]\n fn test_as_bytes() {\n     // no null"}, {"sha": "2f021b9935d6abc9b74daea6fdba81de54e9e765", "filename": "src/libcollectionstest/string.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24b39c51af8b7320fd825a66a239a497f20b0ece/src%2Flibcollectionstest%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24b39c51af8b7320fd825a66a239a497f20b0ece/src%2Flibcollectionstest%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fstring.rs?ref=24b39c51af8b7320fd825a66a239a497f20b0ece", "patch": "@@ -129,7 +129,7 @@ fn test_from_utf16() {\n         let s_as_utf16 = s.encode_utf16().collect::<Vec<u16>>();\n         let u_as_string = String::from_utf16(&u).unwrap();\n \n-        assert!(::std_unicode::str::is_utf16(&u));\n+        assert!(::std_unicode::char::decode_utf16(u.iter().cloned()).all(|r| r.is_ok()));\n         assert_eq!(s_as_utf16, u);\n \n         assert_eq!(u_as_string, s);"}, {"sha": "7e5ab1a54ab3afa16ed4bc5da100d8c8631092b2", "filename": "src/libstd_unicode/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/24b39c51af8b7320fd825a66a239a497f20b0ece/src%2Flibstd_unicode%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24b39c51af8b7320fd825a66a239a497f20b0ece/src%2Flibstd_unicode%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd_unicode%2Flib.rs?ref=24b39c51af8b7320fd825a66a239a497f20b0ece", "patch": "@@ -47,7 +47,6 @@ pub mod char;\n #[allow(deprecated)]\n pub mod str {\n     pub use u_str::{SplitWhitespace, UnicodeStr};\n-    pub use u_str::is_utf16;\n     pub use u_str::Utf16Encoder;\n }\n "}, {"sha": "3c02ea82d2a1147f54d9789a238cedb8678d9b6f", "filename": "src/libstd_unicode/u_str.rs", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/24b39c51af8b7320fd825a66a239a497f20b0ece/src%2Flibstd_unicode%2Fu_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24b39c51af8b7320fd825a66a239a497f20b0ece/src%2Flibstd_unicode%2Fu_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd_unicode%2Fu_str.rs?ref=24b39c51af8b7320fd825a66a239a497f20b0ece", "patch": "@@ -77,28 +77,6 @@ impl UnicodeStr for str {\n     }\n }\n \n-/// Determines if a vector of `u16` contains valid UTF-16\n-pub fn is_utf16(v: &[u16]) -> bool {\n-    let mut it = v.iter();\n-    macro_rules! next { ($ret:expr) => {\n-            match it.next() { Some(u) => *u, None => return $ret }\n-        }\n-    }\n-    loop {\n-        let u = next!(true);\n-\n-        match char::from_u32(u as u32) {\n-            Some(_) => {}\n-            None => {\n-                let u2 = next!(false);\n-                if u < 0xD7FF || u > 0xDBFF || u2 < 0xDC00 || u2 > 0xDFFF {\n-                    return false;\n-                }\n-            }\n-        }\n-    }\n-}\n-\n /// Iterator adaptor for encoding `char`s to UTF-16.\n #[derive(Clone)]\n pub struct Utf16Encoder<I> {"}]}