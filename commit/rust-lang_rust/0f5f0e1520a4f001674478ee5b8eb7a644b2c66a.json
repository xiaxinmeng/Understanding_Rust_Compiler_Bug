{"sha": "0f5f0e1520a4f001674478ee5b8eb7a644b2c66a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmNWYwZTE1MjBhNGYwMDE2NzQ0NzhlZTViOGViN2E2NDRiMmM2NmE=", "commit": {"author": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-04-06T01:55:39Z"}, "committer": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-04-06T01:55:39Z"}, "message": "Fix spelling typo", "tree": {"sha": "e3c1d8122941523a8a36e94c2121b2a8bc24242e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3c1d8122941523a8a36e94c2121b2a8bc24242e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f5f0e1520a4f001674478ee5b8eb7a644b2c66a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f5f0e1520a4f001674478ee5b8eb7a644b2c66a", "html_url": "https://github.com/rust-lang/rust/commit/0f5f0e1520a4f001674478ee5b8eb7a644b2c66a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f5f0e1520a4f001674478ee5b8eb7a644b2c66a/comments", "author": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "committer": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc54c7628dbcccc8d727abea591e9ac14ea2fed2", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc54c7628dbcccc8d727abea591e9ac14ea2fed2", "html_url": "https://github.com/rust-lang/rust/commit/bc54c7628dbcccc8d727abea591e9ac14ea2fed2"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "16c6c002b69c570cfbc0ea7c6addbade74be91ff", "filename": "src/shims/foreign_items/posix/linux.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f5f0e1520a4f001674478ee5b8eb7a644b2c66a/src%2Fshims%2Fforeign_items%2Fposix%2Flinux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f5f0e1520a4f001674478ee5b8eb7a644b2c66a/src%2Fshims%2Fforeign_items%2Fposix%2Flinux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items%2Fposix%2Flinux.rs?ref=0f5f0e1520a4f001674478ee5b8eb7a644b2c66a", "patch": "@@ -113,7 +113,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 this.write_scalar(Scalar::from_i32(-1), dest)?;\n             }\n \n-            // Incomplete shims that we \"stub out\" just to get pre-main initialziation code to work.\n+            // Incomplete shims that we \"stub out\" just to get pre-main initialization code to work.\n             // These shims are enabled only when the caller is in the standard library.\n             \"pthread_getattr_np\" if this.frame().instance.to_string().starts_with(\"std::sys::unix::\") => {\n                 this.write_null(dest)?;"}, {"sha": "9810a77ffde18066e6e66304a827f6fa8ee6d790", "filename": "src/shims/foreign_items/posix/macos.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f5f0e1520a4f001674478ee5b8eb7a644b2c66a/src%2Fshims%2Fforeign_items%2Fposix%2Fmacos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f5f0e1520a4f001674478ee5b8eb7a644b2c66a/src%2Fshims%2Fforeign_items%2Fposix%2Fmacos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items%2Fposix%2Fmacos.rs?ref=0f5f0e1520a4f001674478ee5b8eb7a644b2c66a", "patch": "@@ -88,7 +88,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 this.write_scalar(stack_size, dest)?;\n             }\n \n-            // Incomplete shims that we \"stub out\" just to get pre-main initialziation code to work.\n+            // Incomplete shims that we \"stub out\" just to get pre-main initialization code to work.\n             // These shims are enabled only when the caller is in the standard library.\n             \"mmap\" if this.frame().instance.to_string().starts_with(\"std::sys::unix::\") => {\n                 // This is a horrible hack, but since the guard page mechanism calls mmap and expects a particular return value, we just give it that value."}, {"sha": "1d17cbcefdeec7357cc2b378d741904940088204", "filename": "src/shims/foreign_items/windows.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f5f0e1520a4f001674478ee5b8eb7a644b2c66a/src%2Fshims%2Fforeign_items%2Fwindows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f5f0e1520a4f001674478ee5b8eb7a644b2c66a/src%2Fshims%2Fforeign_items%2Fwindows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items%2Fwindows.rs?ref=0f5f0e1520a4f001674478ee5b8eb7a644b2c66a", "patch": "@@ -207,7 +207,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 throw_unsup_format!(\"Miri does not support threading\");\n             }\n \n-            // Incomplete shims that we \"stub out\" just to get pre-main initialziation code to work.\n+            // Incomplete shims that we \"stub out\" just to get pre-main initialization code to work.\n             // These shims are enabled only when the caller is in the standard library.\n             \"GetProcessHeap\" if this.frame().instance.to_string().starts_with(\"std::sys::windows::\") => {\n                 // Just fake a HANDLE"}]}