{"sha": "acc874fbcda98bb5ec95399bea76b9f83227b758", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjYzg3NGZiY2RhOThiYjVlYzk1Mzk5YmVhNzZiOWY4MzIyN2I3NTg=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-05-13T14:45:20Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-05-17T17:37:22Z"}, "message": "Revert \"bootstrap.py: respect crt-static\"\n\nThis reverts commit 5ecf29df052c7eca10fccc96f4179d338fe0014e.", "tree": {"sha": "bbb31066d0b7a6b89ea016ee66f034a0c3d1a102", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbb31066d0b7a6b89ea016ee66f034a0c3d1a102"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acc874fbcda98bb5ec95399bea76b9f83227b758", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acc874fbcda98bb5ec95399bea76b9f83227b758", "html_url": "https://github.com/rust-lang/rust/commit/acc874fbcda98bb5ec95399bea76b9f83227b758", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acc874fbcda98bb5ec95399bea76b9f83227b758/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4796871fb7ce4ffbefc2ea5cb138cd4741e09216", "url": "https://api.github.com/repos/rust-lang/rust/commits/4796871fb7ce4ffbefc2ea5cb138cd4741e09216", "html_url": "https://github.com/rust-lang/rust/commit/4796871fb7ce4ffbefc2ea5cb138cd4741e09216"}], "stats": {"total": 33, "additions": 3, "deletions": 30}, "files": [{"sha": "487440becf630de7471c0228bab09c014e33d2ac", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 3, "deletions": 30, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/acc874fbcda98bb5ec95399bea76b9f83227b758/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/acc874fbcda98bb5ec95399bea76b9f83227b758/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=acc874fbcda98bb5ec95399bea76b9f83227b758", "patch": "@@ -489,7 +489,7 @@ def bin_root(self):\n         \"\"\"\n         return os.path.join(self.build_dir, self.build, \"stage0\")\n \n-    def get_toml(self, key, section=None):\n+    def get_toml(self, key):\n         \"\"\"Returns the value of the given key in config.toml, otherwise returns None\n \n         >>> rb = RustBuild()\n@@ -501,29 +501,12 @@ def get_toml(self, key, section=None):\n \n         >>> rb.get_toml(\"key3\") is None\n         True\n-\n-        Optionally also matches the section the key appears in\n-\n-        >>> rb.config_toml = '[a]\\\\nkey = \"value1\"\\\\n[b]\\\\nkey = \"value2\"'\n-        >>> rb.get_toml('key', 'a')\n-        'value1'\n-        >>> rb.get_toml('key', 'b')\n-        'value2'\n-        >>> rb.get_toml('key', 'c') is None\n-        True\n         \"\"\"\n-\n-        cur_section = None\n         for line in self.config_toml.splitlines():\n-            section_match = re.match(r'^\\s*\\[(.*)\\]\\s*$', line)\n-            if section_match is not None:\n-                cur_section = section_match.group(1)\n-\n             match = re.match(r'^{}\\s*=(.*)$'.format(key), line)\n             if match is not None:\n                 value = match.group(1)\n-                if section is None or section == cur_section:\n-                    return self.get_string(value) or value.strip()\n+                return self.get_string(value) or value.strip()\n         return None\n \n     def cargo(self):\n@@ -606,17 +589,7 @@ def build_bootstrap(self):\n         env[\"LIBRARY_PATH\"] = os.path.join(self.bin_root(), \"lib\") + \\\n             (os.pathsep + env[\"LIBRARY_PATH\"]) \\\n             if \"LIBRARY_PATH\" in env else \"\"\n-        env[\"RUSTFLAGS\"] = \"-Cdebuginfo=2 \"\n-\n-        build_section = \"target.{}\".format(self.build_triple())\n-        target_features = []\n-        if self.get_toml(\"crt-static\", build_section) == \"true\":\n-            target_features += [\"+crt-static\"]\n-        elif self.get_toml(\"crt-static\", build_section) == \"false\":\n-            target_features += [\"-crt-static\"]\n-        if target_features:\n-            env[\"RUSTFLAGS\"] += \"-C target-feature=\" + (\",\".join(target_features)) + \" \"\n-\n+        env[\"RUSTFLAGS\"] = \"-Cdebuginfo=2\"\n         env[\"PATH\"] = os.path.join(self.bin_root(), \"bin\") + \\\n             os.pathsep + env[\"PATH\"]\n         if not os.path.isfile(self.cargo()):"}]}