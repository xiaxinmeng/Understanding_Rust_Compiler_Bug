{"sha": "f69877426a6a65fceccaedf9a1e82fa5f05de9d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2OTg3NzQyNmE2YTY1ZmNlY2NhZWRmOWExZTgyZmE1ZjA1ZGU5ZDI=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-06-30T18:52:00Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-06-30T18:56:49Z"}, "message": "Update comments.", "tree": {"sha": "6d189d535b7b79226cb465669d49846f14e6933f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d189d535b7b79226cb465669d49846f14e6933f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f69877426a6a65fceccaedf9a1e82fa5f05de9d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f69877426a6a65fceccaedf9a1e82fa5f05de9d2", "html_url": "https://github.com/rust-lang/rust/commit/f69877426a6a65fceccaedf9a1e82fa5f05de9d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f69877426a6a65fceccaedf9a1e82fa5f05de9d2/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa1bc5874eb43868151b1c2f667086547af65726", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa1bc5874eb43868151b1c2f667086547af65726", "html_url": "https://github.com/rust-lang/rust/commit/aa1bc5874eb43868151b1c2f667086547af65726"}], "stats": {"total": 17, "additions": 5, "deletions": 12}, "files": [{"sha": "9ea1f88b43f79a48e72e68ccaa5c2a8322472109", "filename": "compiler/rustc_interface/src/passes.rs", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f69877426a6a65fceccaedf9a1e82fa5f05de9d2/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f69877426a6a65fceccaedf9a1e82fa5f05de9d2/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs?ref=f69877426a6a65fceccaedf9a1e82fa5f05de9d2", "patch": "@@ -100,7 +100,7 @@ mod boxed_resolver {\n     }\n \n     // Note: Drop order is important to prevent dangling references. Resolver must be dropped first,\n-    // then resolver_arenas and finally session.\n+    // then resolver_arenas and session.\n     impl Drop for BoxedResolverInner {\n         fn drop(&mut self) {\n             self.resolver.take();\n@@ -109,10 +109,10 @@ mod boxed_resolver {\n     }\n \n     impl BoxedResolver {\n-        pub(super) fn new<F>(session: Lrc<Session>, make_resolver: F) -> Self\n-        where\n-            F: for<'a> FnOnce(&'a Session, &'a ResolverArenas<'a>) -> Resolver<'a>,\n-        {\n+        pub(super) fn new(\n+            session: Lrc<Session>,\n+            make_resolver: impl for<'a> FnOnce(&'a Session, &'a ResolverArenas<'a>) -> Resolver<'a>,\n+        ) -> BoxedResolver {\n             let mut boxed_resolver = Box::new(BoxedResolverInner {\n                 session,\n                 resolver_arenas: Some(Resolver::arenas()),\n@@ -168,11 +168,6 @@ pub fn create_resolver(\n     crate_name: &str,\n ) -> BoxedResolver {\n     tracing::trace!(\"create_resolver\");\n-    // Currently, we ignore the name resolution data structures for the purposes of dependency\n-    // tracking. Instead we will run name resolution and include its output in the hash of each\n-    // item, much like we do for macro expansion. In other words, the hash reflects not just\n-    // its contents but the results of name resolution on those contents. Hopefully we'll push\n-    // this back at some point.\n     BoxedResolver::new(sess, move |sess, resolver_arenas| {\n         Resolver::new(sess, &krate, &crate_name, metadata_loader, &resolver_arenas)\n     })\n@@ -263,8 +258,6 @@ fn pre_expansion_lint(\n /// syntax expansion, secondary `cfg` expansion, synthesis of a test\n /// harness if one is to be provided, injection of a dependency on the\n /// standard library and prelude, and name resolution.\n-///\n-/// Returns [`None`] if we're aborting after handling -W help.\n pub fn configure_and_expand(\n     sess: &Session,\n     lint_store: &LintStore,"}]}