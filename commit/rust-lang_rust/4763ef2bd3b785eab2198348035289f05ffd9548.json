{"sha": "4763ef2bd3b785eab2198348035289f05ffd9548", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3NjNlZjJiZDNiNzg1ZWFiMjE5ODM0ODAzNTI4OWYwNWZmZDk1NDg=", "commit": {"author": {"name": "Elichai Turkel", "email": "elichai.turkel@gmail.com", "date": "2021-08-06T15:59:02Z"}, "committer": {"name": "Elichai Turkel", "email": "elichai.turkel@gmail.com", "date": "2021-08-06T17:27:09Z"}, "message": "Replace read_to_string with read_line in Stdin example", "tree": {"sha": "c51d606c51e88bb4a64610446549c3d6f45580ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c51d606c51e88bb4a64610446549c3d6f45580ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4763ef2bd3b785eab2198348035289f05ffd9548", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJNBAABCAA3FiEEC5PUstyhDoo+NyfXk4PN6ejman8FAmENcPkZHGVsaWNoYWku\ndHVya2VsQGdtYWlsLmNvbQAKCRCTg83p6OZqfyFAD/oDTefol8fTEl86WwVAIePM\n/IPdHMTpjckWKjbSGgLh0B2wL+T3Tde7+AgLlelAujMrWqy8/78baXXFuEq0nDRx\nDOfMHqVnWCcImQnfQl9gy8wH+0AEm0uxtO29Vr9lMEKd1T2vezoyWaCqT/CtTmbF\no36+dxiG2D/n4PpLcFDgWywYtKZiisycppANVg/ZliVf31H8I5NBHbrPrTrfvqDI\n31W7az9nLCUcH+xXqEkiOVz+SkSbu6B7XQ7zPncnyZln2C82Hc/a7DaU7y8omSn/\nc/PxUdsAT7ksFywJeiSXKh/7cHHpCHARYSVcjT0Re2kj5HcMiRmGsNIPsJsno9vC\nfBA2pct30347HzH3s+HCCulEFCemDSqZIo3eM1YUcD1uDXWVmuPCmilegJjC9UMY\n1GKsRLxaTyt5hLqDB13+jEBvf8ySitkoI3d6PupWvZ1UXtOeH9jIjCbM2hkk5dkH\nmdCEH6xCebvy6dTDuoCNpM2qgTjgvyFCK1j6KIFcCr1ycTG1wSYypLhKYYJ7uHxA\nlsWEbX/PhmHhMJlbJRUTnX2Pg+ZGNgQthJt2Tro0hpBSoBnw7D0gth7oSntaA2ru\nilpmBIaof5ghaaY1pPZx51seCyjuNQto1NyvRmed2JnxzXQBwR1T1o082MgKwhaN\nROYfxB15B0tTjdt7qZxmHQ==\n=kutG\n-----END PGP SIGNATURE-----", "payload": "tree c51d606c51e88bb4a64610446549c3d6f45580ad\nparent 4c29cc8fd09889880880cb6081174c79744ab1b6\nauthor Elichai Turkel <elichai.turkel@gmail.com> 1628265542 +0300\ncommitter Elichai Turkel <elichai.turkel@gmail.com> 1628270829 +0300\n\nReplace read_to_string with read_line in Stdin example\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4763ef2bd3b785eab2198348035289f05ffd9548", "html_url": "https://github.com/rust-lang/rust/commit/4763ef2bd3b785eab2198348035289f05ffd9548", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4763ef2bd3b785eab2198348035289f05ffd9548/comments", "author": {"login": "elichai", "id": 2167860, "node_id": "MDQ6VXNlcjIxNjc4NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elichai", "html_url": "https://github.com/elichai", "followers_url": "https://api.github.com/users/elichai/followers", "following_url": "https://api.github.com/users/elichai/following{/other_user}", "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}", "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elichai/subscriptions", "organizations_url": "https://api.github.com/users/elichai/orgs", "repos_url": "https://api.github.com/users/elichai/repos", "events_url": "https://api.github.com/users/elichai/events{/privacy}", "received_events_url": "https://api.github.com/users/elichai/received_events", "type": "User", "site_admin": false}, "committer": {"login": "elichai", "id": 2167860, "node_id": "MDQ6VXNlcjIxNjc4NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elichai", "html_url": "https://github.com/elichai", "followers_url": "https://api.github.com/users/elichai/followers", "following_url": "https://api.github.com/users/elichai/following{/other_user}", "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}", "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elichai/subscriptions", "organizations_url": "https://api.github.com/users/elichai/orgs", "repos_url": "https://api.github.com/users/elichai/repos", "events_url": "https://api.github.com/users/elichai/events{/privacy}", "received_events_url": "https://api.github.com/users/elichai/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c29cc8fd09889880880cb6081174c79744ab1b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c29cc8fd09889880880cb6081174c79744ab1b6", "html_url": "https://github.com/rust-lang/rust/commit/4c29cc8fd09889880880cb6081174c79744ab1b6"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "14a63303711fc44e84781c837555e35315ffb63d", "filename": "library/std/src/io/stdio.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/4763ef2bd3b785eab2198348035289f05ffd9548/library%2Fstd%2Fsrc%2Fio%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4763ef2bd3b785eab2198348035289f05ffd9548/library%2Fstd%2Fsrc%2Fio%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fstdio.rs?ref=4763ef2bd3b785eab2198348035289f05ffd9548", "patch": "@@ -216,12 +216,12 @@ fn handle_ebadf<T>(r: io::Result<T>, default: T) -> io::Result<T> {\n /// # Examples\n ///\n /// ```no_run\n-/// use std::io::{self, Read};\n+/// use std::io;\n ///\n /// fn main() -> io::Result<()> {\n ///     let mut buffer = String::new();\n ///     let mut stdin = io::stdin(); // We get `Stdin` here.\n-///     stdin.read_to_string(&mut buffer)?;\n+///     stdin.read_line(&mut buffer)?;\n ///     Ok(())\n /// }\n /// ```\n@@ -244,14 +244,14 @@ pub struct Stdin {\n /// # Examples\n ///\n /// ```no_run\n-/// use std::io::{self, Read};\n+/// use std::io::{self, BufRead};\n ///\n /// fn main() -> io::Result<()> {\n ///     let mut buffer = String::new();\n ///     let stdin = io::stdin(); // We get `Stdin` here.\n ///     {\n ///         let mut handle = stdin.lock(); // We get `StdinLock` here.\n-///         handle.read_to_string(&mut buffer)?;\n+///         handle.read_line(&mut buffer)?;\n ///     } // `StdinLock` is dropped here.\n ///     Ok(())\n /// }\n@@ -277,26 +277,26 @@ pub struct StdinLock<'a> {\n /// Using implicit synchronization:\n ///\n /// ```no_run\n-/// use std::io::{self, Read};\n+/// use std::io;\n ///\n /// fn main() -> io::Result<()> {\n ///     let mut buffer = String::new();\n-///     io::stdin().read_to_string(&mut buffer)?;\n+///     io::stdin().read_line(&mut buffer)?;\n ///     Ok(())\n /// }\n /// ```\n ///\n /// Using explicit synchronization:\n ///\n /// ```no_run\n-/// use std::io::{self, Read};\n+/// use std::io::{self, BufRead};\n ///\n /// fn main() -> io::Result<()> {\n ///     let mut buffer = String::new();\n ///     let stdin = io::stdin();\n ///     let mut handle = stdin.lock();\n ///\n-///     handle.read_to_string(&mut buffer)?;\n+///     handle.read_line(&mut buffer)?;\n ///     Ok(())\n /// }\n /// ```\n@@ -337,13 +337,13 @@ pub fn stdin() -> Stdin {\n ///\n /// ```no_run\n /// #![feature(stdio_locked)]\n-/// use std::io::{self, Read};\n+/// use std::io::{self, BufRead};\n ///\n /// fn main() -> io::Result<()> {\n ///     let mut buffer = String::new();\n ///     let mut handle = io::stdin_locked();\n ///\n-///     handle.read_to_string(&mut buffer)?;\n+///     handle.read_line(&mut buffer)?;\n ///     Ok(())\n /// }\n /// ```\n@@ -363,14 +363,14 @@ impl Stdin {\n     /// # Examples\n     ///\n     /// ```no_run\n-    /// use std::io::{self, Read};\n+    /// use std::io::{self, BufRead};\n     ///\n     /// fn main() -> io::Result<()> {\n     ///     let mut buffer = String::new();\n     ///     let stdin = io::stdin();\n     ///     let mut handle = stdin.lock();\n     ///\n-    ///     handle.read_to_string(&mut buffer)?;\n+    ///     handle.read_line(&mut buffer)?;\n     ///     Ok(())\n     /// }\n     /// ```\n@@ -432,13 +432,13 @@ impl Stdin {\n     ///\n     /// ```no_run\n     /// #![feature(stdio_locked)]\n-    /// use std::io::{self, Read};\n+    /// use std::io::{self, BufRead};\n     ///\n     /// fn main() -> io::Result<()> {\n     ///     let mut buffer = String::new();\n     ///     let mut handle = io::stdin().into_locked();\n     ///\n-    ///     handle.read_to_string(&mut buffer)?;\n+    ///     handle.read_line(&mut buffer)?;\n     ///     Ok(())\n     /// }\n     /// ```"}]}