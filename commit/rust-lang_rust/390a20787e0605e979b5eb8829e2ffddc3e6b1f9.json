{"sha": "390a20787e0605e979b5eb8829e2ffddc3e6b1f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5MGEyMDc4N2UwNjA1ZTk3OWI1ZWI4ODI5ZTJmZmRkYzNlNmIxZjk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-26T12:19:24Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-26T13:28:04Z"}, "message": "consolidate error handling", "tree": {"sha": "9bdb9eb0b4fb751d2bf8da3ffd7929fad6bdcfec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9bdb9eb0b4fb751d2bf8da3ffd7929fad6bdcfec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/390a20787e0605e979b5eb8829e2ffddc3e6b1f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/390a20787e0605e979b5eb8829e2ffddc3e6b1f9", "html_url": "https://github.com/rust-lang/rust/commit/390a20787e0605e979b5eb8829e2ffddc3e6b1f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/390a20787e0605e979b5eb8829e2ffddc3e6b1f9/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20d7a431fd6e3e363e698a2e464160640868597b", "url": "https://api.github.com/repos/rust-lang/rust/commits/20d7a431fd6e3e363e698a2e464160640868597b", "html_url": "https://github.com/rust-lang/rust/commit/20d7a431fd6e3e363e698a2e464160640868597b"}], "stats": {"total": 31, "additions": 17, "deletions": 14}, "files": [{"sha": "84ccdb394df5ebf2236e985aa913f8a1f9ca7dc7", "filename": "crates/ra_vfs/src/io.rs", "status": "modified", "additions": 17, "deletions": 14, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/390a20787e0605e979b5eb8829e2ffddc3e6b1f9/crates%2Fra_vfs%2Fsrc%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/390a20787e0605e979b5eb8829e2ffddc3e6b1f9/crates%2Fra_vfs%2Fsrc%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_vfs%2Fsrc%2Fio.rs?ref=390a20787e0605e979b5eb8829e2ffddc3e6b1f9", "patch": "@@ -123,9 +123,7 @@ fn watch_root(\n         .into_iter()\n         .filter_map(|path| {\n             let abs_path = path.to_path(&config.root);\n-            let text = fs::read_to_string(abs_path)\n-                .map_err(|e| log::warn!(\"watcher error: {}\", e))\n-                .ok()?;\n+            let text = read_to_string(&abs_path)?;\n             Some((path, text))\n         })\n         .collect();\n@@ -194,24 +192,23 @@ impl WatcherCtx {\n                     .into_iter()\n                     .filter_map(|rel_path| {\n                         let abs_path = rel_path.to_path(&config.root);\n-                        let text = fs::read_to_string(&abs_path)\n-                            .map_err(|e| log::warn!(\"watcher failed {}\", e))\n-                            .ok()?;\n+                        let text = read_to_string(&abs_path)?;\n                         Some((rel_path, text))\n                     })\n                     .try_for_each(|(path, text)| {\n                         self.sender\n                             .send(TaskResult::AddSingleFile { root, path, text })\n                     })?\n             }\n-            ChangeKind::Write => match fs::read_to_string(&path) {\n-                Err(e) => log::warn!(\"watcher failed {}\", e),\n-                Ok(text) => self.sender.send(TaskResult::ChangeSingleFile {\n-                    root,\n-                    path: rel_path,\n-                    text,\n-                })?,\n-            },\n+            ChangeKind::Write => {\n+                if let Some(text) = read_to_string(&path) {\n+                    self.sender.send(TaskResult::ChangeSingleFile {\n+                        root,\n+                        path: rel_path,\n+                        text,\n+                    })?;\n+                }\n+            }\n             ChangeKind::Remove => self.sender.send(TaskResult::RemoveSingleFile {\n                 root,\n                 path: rel_path,\n@@ -250,3 +247,9 @@ fn watch_one(watcher: &mut RecommendedWatcher, dir: &Path) {\n         Err(e) => log::warn!(\"could not watch \\\"{}\\\": {}\", dir.display(), e),\n     }\n }\n+\n+fn read_to_string(path: &Path) -> Option<String> {\n+    fs::read_to_string(&path)\n+        .map_err(|e| log::warn!(\"failed to read file {}\", e))\n+        .ok()\n+}"}]}