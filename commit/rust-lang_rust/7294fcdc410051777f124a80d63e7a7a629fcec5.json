{"sha": "7294fcdc410051777f124a80d63e7a7a629fcec5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyOTRmY2RjNDEwMDUxNzc3ZjEyNGE4MGQ2M2U3YTdhNjI5ZmNlYzU=", "commit": {"author": {"name": "Jorge Aparicio", "email": "jorge@japaric.io", "date": "2018-08-23T14:36:51Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-09-30T15:27:06Z"}, "message": "improve panic message", "tree": {"sha": "da2ad9496947d845e8f7d6fd6715a7f47f8f1535", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da2ad9496947d845e8f7d6fd6715a7f47f8f1535"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7294fcdc410051777f124a80d63e7a7a629fcec5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7294fcdc410051777f124a80d63e7a7a629fcec5", "html_url": "https://github.com/rust-lang/rust/commit/7294fcdc410051777f124a80d63e7a7a629fcec5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7294fcdc410051777f124a80d63e7a7a629fcec5/comments", "author": {"login": "japaric", "id": 5018213, "node_id": "MDQ6VXNlcjUwMTgyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5018213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japaric", "html_url": "https://github.com/japaric", "followers_url": "https://api.github.com/users/japaric/followers", "following_url": "https://api.github.com/users/japaric/following{/other_user}", "gists_url": "https://api.github.com/users/japaric/gists{/gist_id}", "starred_url": "https://api.github.com/users/japaric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japaric/subscriptions", "organizations_url": "https://api.github.com/users/japaric/orgs", "repos_url": "https://api.github.com/users/japaric/repos", "events_url": "https://api.github.com/users/japaric/events{/privacy}", "received_events_url": "https://api.github.com/users/japaric/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd3c7812cbadf875ebcc79d65a1f65c29dea0c8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd3c7812cbadf875ebcc79d65a1f65c29dea0c8c", "html_url": "https://github.com/rust-lang/rust/commit/bd3c7812cbadf875ebcc79d65a1f65c29dea0c8c"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "c8515a4b6fffa7d2a885f74e7c6f51ce855fff1b", "filename": "src/librustc_codegen_llvm/mir/block.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7294fcdc410051777f124a80d63e7a7a629fcec5/src%2Flibrustc_codegen_llvm%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7294fcdc410051777f124a80d63e7a7a629fcec5/src%2Flibrustc_codegen_llvm%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fmir%2Fblock.rs?ref=7294fcdc410051777f124a80d63e7a7a629fcec5", "patch": "@@ -475,14 +475,12 @@ impl FunctionCx<'a, 'll, 'tcx> {\n                         .max(tcx.data_layout.i32_align)\n                         .max(tcx.data_layout.pointer_align);\n \n-                    let str = if intrinsic == Some(\"init\") {\n-                        \"Attempted to instantiate an uninhabited type (e.g. `!`) \\\n-                         using mem::zeroed()\"\n-                    } else {\n-                        \"Attempted to instantiate an uninhabited type (e.g. `!`) \\\n-                         using mem::uninitialized()\"\n-                    };\n-                    let msg_str = Symbol::intern(str).as_str();\n+                    let str = format!(\n+                        \"Attempted to instantiate uninhabited type {} using mem::{}\",\n+                        sig.output(),\n+                        if intrinsic == Some(\"init\") { \"zeroed\" } else { \"uninitialized\" }\n+                    );\n+                    let msg_str = Symbol::intern(&str).as_str();\n                     let msg_str = C_str_slice(bx.cx, msg_str);\n                     let msg_file_line_col = C_struct(bx.cx,\n                                                     &[msg_str, filename, line, col],"}]}