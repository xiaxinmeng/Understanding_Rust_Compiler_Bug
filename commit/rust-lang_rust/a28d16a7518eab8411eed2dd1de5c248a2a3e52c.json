{"sha": "a28d16a7518eab8411eed2dd1de5c248a2a3e52c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyOGQxNmE3NTE4ZWFiODQxMWVlZDJkZDFkZTVjMjQ4YTJhM2U1MmM=", "commit": {"author": {"name": "Akos Kiss", "email": "akiss@inf.u-szeged.hu", "date": "2014-12-12T22:41:14Z"}, "committer": {"name": "Akos Kiss", "email": "akiss@inf.u-szeged.hu", "date": "2014-12-12T22:41:14Z"}, "message": "libc::c_char is not necessarily i8", "tree": {"sha": "b40f1d585862d9254a54db220f9144549f8f0e21", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b40f1d585862d9254a54db220f9144549f8f0e21"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a28d16a7518eab8411eed2dd1de5c248a2a3e52c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a28d16a7518eab8411eed2dd1de5c248a2a3e52c", "html_url": "https://github.com/rust-lang/rust/commit/a28d16a7518eab8411eed2dd1de5c248a2a3e52c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a28d16a7518eab8411eed2dd1de5c248a2a3e52c/comments", "author": {"login": "akosthekiss", "id": 9976482, "node_id": "MDQ6VXNlcjk5NzY0ODI=", "avatar_url": "https://avatars.githubusercontent.com/u/9976482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akosthekiss", "html_url": "https://github.com/akosthekiss", "followers_url": "https://api.github.com/users/akosthekiss/followers", "following_url": "https://api.github.com/users/akosthekiss/following{/other_user}", "gists_url": "https://api.github.com/users/akosthekiss/gists{/gist_id}", "starred_url": "https://api.github.com/users/akosthekiss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akosthekiss/subscriptions", "organizations_url": "https://api.github.com/users/akosthekiss/orgs", "repos_url": "https://api.github.com/users/akosthekiss/repos", "events_url": "https://api.github.com/users/akosthekiss/events{/privacy}", "received_events_url": "https://api.github.com/users/akosthekiss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "akosthekiss", "id": 9976482, "node_id": "MDQ6VXNlcjk5NzY0ODI=", "avatar_url": "https://avatars.githubusercontent.com/u/9976482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akosthekiss", "html_url": "https://github.com/akosthekiss", "followers_url": "https://api.github.com/users/akosthekiss/followers", "following_url": "https://api.github.com/users/akosthekiss/following{/other_user}", "gists_url": "https://api.github.com/users/akosthekiss/gists{/gist_id}", "starred_url": "https://api.github.com/users/akosthekiss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akosthekiss/subscriptions", "organizations_url": "https://api.github.com/users/akosthekiss/orgs", "repos_url": "https://api.github.com/users/akosthekiss/repos", "events_url": "https://api.github.com/users/akosthekiss/events{/privacy}", "received_events_url": "https://api.github.com/users/akosthekiss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9146a919b616e39e528e4d7100d16eef52f1f852", "url": "https://api.github.com/repos/rust-lang/rust/commits/9146a919b616e39e528e4d7100d16eef52f1f852", "html_url": "https://github.com/rust-lang/rust/commit/9146a919b616e39e528e4d7100d16eef52f1f852"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "1980e1a3ff0062e63a5ef72e99d4669ce296ecba", "filename": "src/librustc_trans/back/lto.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a28d16a7518eab8411eed2dd1de5c248a2a3e52c/src%2Flibrustc_trans%2Fback%2Flto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a28d16a7518eab8411eed2dd1de5c248a2a3e52c/src%2Flibrustc_trans%2Fback%2Flto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flto.rs?ref=a28d16a7518eab8411eed2dd1de5c248a2a3e52c", "patch": "@@ -144,7 +144,7 @@ pub fn run(sess: &session::Session, llmod: ModuleRef,\n     // Internalize everything but the reachable symbols of the current module\n     let cstrs: Vec<::std::c_str::CString> =\n         reachable.iter().map(|s| s.to_c_str()).collect();\n-    let arr: Vec<*const i8> = cstrs.iter().map(|c| c.as_ptr()).collect();\n+    let arr: Vec<*const libc::c_char> = cstrs.iter().map(|c| c.as_ptr()).collect();\n     let ptr = arr.as_ptr();\n     unsafe {\n         llvm::LLVMRustRunRestrictionPass(llmod,"}, {"sha": "6d6ea5f6c54fba638c377eb6892d6c82f9139800", "filename": "src/librustrt/c_str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a28d16a7518eab8411eed2dd1de5c248a2a3e52c/src%2Flibrustrt%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a28d16a7518eab8411eed2dd1de5c248a2a3e52c/src%2Flibrustrt%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustrt%2Fc_str.rs?ref=a28d16a7518eab8411eed2dd1de5c248a2a3e52c", "patch": "@@ -578,7 +578,7 @@ mod tests {\n             assert_eq!(*buf.offset(0), 'f' as libc::c_char);\n             assert_eq!(*buf.offset(1), 'o' as libc::c_char);\n             assert_eq!(*buf.offset(2), 'o' as libc::c_char);\n-            assert_eq!(*buf.offset(3), 0xffu8 as i8);\n+            assert_eq!(*buf.offset(3), 0xffu8 as libc::c_char);\n             assert_eq!(*buf.offset(4), 0);\n         }\n     }"}, {"sha": "871ef5d6fd54c8a18f650408503c37c063708155", "filename": "src/libstd/os.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a28d16a7518eab8411eed2dd1de5c248a2a3e52c/src%2Flibstd%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a28d16a7518eab8411eed2dd1de5c248a2a3e52c/src%2Flibstd%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos.rs?ref=a28d16a7518eab8411eed2dd1de5c248a2a3e52c", "patch": "@@ -374,7 +374,7 @@ pub fn getenv_as_bytes(n: &str) -> Option<Vec<u8>> {\n             if s.is_null() {\n                 None\n             } else {\n-                Some(CString::new(s as *const i8, false).as_bytes_no_nul().to_vec())\n+                Some(CString::new(s as *const libc::c_char, false).as_bytes_no_nul().to_vec())\n             }\n         })\n     }"}, {"sha": "aa71de2123c7d596c9ef32d629350ed6e06903ae", "filename": "src/test/run-pass/variadic-ffi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a28d16a7518eab8411eed2dd1de5c248a2a3e52c/src%2Ftest%2Frun-pass%2Fvariadic-ffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a28d16a7518eab8411eed2dd1de5c248a2a3e52c/src%2Ftest%2Frun-pass%2Fvariadic-ffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvariadic-ffi.rs?ref=a28d16a7518eab8411eed2dd1de5c248a2a3e52c", "patch": "@@ -19,7 +19,7 @@ extern {\n }\n \n unsafe fn check<T>(expected: &str, f: |*mut c_char| -> T) {\n-    let mut x = [0i8, ..50];\n+    let mut x = [0 as c_char, ..50];\n     f(&mut x[0] as *mut c_char);\n     let res = CString::new(&x[0], false);\n     assert_eq!(expected, res.as_str().unwrap());"}]}