{"sha": "2762d62990364fd43180984d39de7e4f35957094", "node_id": "C_kwDOAAsO6NoAKDI3NjJkNjI5OTAzNjRmZDQzMTgwOTg0ZDM5ZGU3ZTRmMzU5NTcwOTQ", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-06-20T00:54:19Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-06-20T01:08:29Z"}, "message": "Be more specific for what lifetimes are not allowed on", "tree": {"sha": "8ac52e71ac7563a276fe2de4bdc8273324b9c46f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ac52e71ac7563a276fe2de4bdc8273324b9c46f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2762d62990364fd43180984d39de7e4f35957094", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2762d62990364fd43180984d39de7e4f35957094", "html_url": "https://github.com/rust-lang/rust/commit/2762d62990364fd43180984d39de7e4f35957094", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2762d62990364fd43180984d39de7e4f35957094/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b646bd533e8a20c06a71d0b7837e15eb4c79fa8", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b646bd533e8a20c06a71d0b7837e15eb4c79fa8", "html_url": "https://github.com/rust-lang/rust/commit/2b646bd533e8a20c06a71d0b7837e15eb4c79fa8"}], "stats": {"total": 134, "additions": 67, "deletions": 67}, "files": [{"sha": "4641b36aad1d7e992c436b3b8fe856ab8807ef70", "filename": "compiler/rustc_typeck/src/astconv/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2762d62990364fd43180984d39de7e4f35957094/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2762d62990364fd43180984d39de7e4f35957094/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs?ref=2762d62990364fd43180984d39de7e4f35957094", "patch": "@@ -2195,8 +2195,8 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                 \"{kind} arguments are not allowed on {this_type}\",\n             );\n             err.span_label(last_span, format!(\"{kind} argument{s} not allowed\"));\n-            for (_, span) in types_and_spans {\n-                err.span_label(span, \"not allowed on this\");\n+            for (what, span) in types_and_spans {\n+                err.span_label(span, format!(\"not allowed on {what}\"));\n             }\n             extend(&mut err);\n             err.emit();"}, {"sha": "e83bbb5b60d7e9d239a31092c413ab24cb7270b7", "filename": "src/test/ui/derives/issue-97343.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2762d62990364fd43180984d39de7e4f35957094/src%2Ftest%2Fui%2Fderives%2Fissue-97343.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2762d62990364fd43180984d39de7e4f35957094/src%2Ftest%2Fui%2Fderives%2Fissue-97343.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fissue-97343.stderr?ref=2762d62990364fd43180984d39de7e4f35957094", "patch": "@@ -4,7 +4,7 @@ error[E0109]: type arguments are not allowed on type parameter `Irrelevant`\n LL | #[derive(Debug)]\n    |          -----\n    |          |\n-   |          not allowed on this\n+   |          not allowed on type parameter `Irrelevant`\n    |          in this derive macro expansion\n LL | pub struct Irrelevant<Irrelevant> {\n    |                       ^^^^^^^^^^ type argument not allowed"}, {"sha": "da00fdde6bd0af5126a8305d4399a779b026c293", "filename": "src/test/ui/error-codes/E0109.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2762d62990364fd43180984d39de7e4f35957094/src%2Ftest%2Fui%2Ferror-codes%2FE0109.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2762d62990364fd43180984d39de7e4f35957094/src%2Ftest%2Fui%2Ferror-codes%2FE0109.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0109.stderr?ref=2762d62990364fd43180984d39de7e4f35957094", "patch": "@@ -4,7 +4,7 @@ error[E0109]: type arguments are not allowed on this type\n LL | type X = u32<i32>;\n    |          --- ^^^ type argument not allowed\n    |          |\n-   |          not allowed on this\n+   |          not allowed on this type\n    |\n help: primitive type `u32` doesn't have generic parameters\n    |"}, {"sha": "5babb5c2961b756397ca746089664a38885ba29b", "filename": "src/test/ui/error-codes/E0110.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2762d62990364fd43180984d39de7e4f35957094/src%2Ftest%2Fui%2Ferror-codes%2FE0110.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2762d62990364fd43180984d39de7e4f35957094/src%2Ftest%2Fui%2Ferror-codes%2FE0110.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0110.stderr?ref=2762d62990364fd43180984d39de7e4f35957094", "patch": "@@ -4,7 +4,7 @@ error[E0109]: lifetime arguments are not allowed on this type\n LL | type X = u32<'static>;\n    |          --- ^^^^^^^ lifetime argument not allowed\n    |          |\n-   |          not allowed on this\n+   |          not allowed on this type\n    |\n help: primitive type `u32` doesn't have generic parameters\n    |"}, {"sha": "5366a36b1a689f4eb82a24be8d2c2c4c2228f5da", "filename": "src/test/ui/issues/issue-22706.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2762d62990364fd43180984d39de7e4f35957094/src%2Ftest%2Fui%2Fissues%2Fissue-22706.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2762d62990364fd43180984d39de7e4f35957094/src%2Ftest%2Fui%2Fissues%2Fissue-22706.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-22706.stderr?ref=2762d62990364fd43180984d39de7e4f35957094", "patch": "@@ -4,7 +4,7 @@ error[E0109]: type arguments are not allowed on module `marker`\n LL | fn is_copy<T: ::std::marker<i32>::Copy>() {}\n    |                      ------ ^^^ type argument not allowed\n    |                      |\n-   |                      not allowed on this\n+   |                      not allowed on module `marker`\n \n error: aborting due to previous error\n "}, {"sha": "0323a4dfb8ad3b0c09d4aefd23d19d8312635ed7", "filename": "src/test/ui/issues/issue-57924.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2762d62990364fd43180984d39de7e4f35957094/src%2Ftest%2Fui%2Fissues%2Fissue-57924.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2762d62990364fd43180984d39de7e4f35957094/src%2Ftest%2Fui%2Fissues%2Fissue-57924.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-57924.stderr?ref=2762d62990364fd43180984d39de7e4f35957094", "patch": "@@ -4,7 +4,7 @@ error[E0109]: type arguments are not allowed on self constructor\n LL |         Self::<E>(e)\n    |         ----   ^ type argument not allowed\n    |         |\n-   |         not allowed on this\n+   |         not allowed on self constructor\n \n error: aborting due to previous error\n "}, {"sha": "e0236567b2fa609bb33d8934ef1cd41e87575ebd", "filename": "src/test/ui/issues/issue-60989.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2762d62990364fd43180984d39de7e4f35957094/src%2Ftest%2Fui%2Fissues%2Fissue-60989.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2762d62990364fd43180984d39de7e4f35957094/src%2Ftest%2Fui%2Fissues%2Fissue-60989.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-60989.stderr?ref=2762d62990364fd43180984d39de7e4f35957094", "patch": "@@ -4,15 +4,15 @@ error[E0109]: type arguments are not allowed on local variable\n LL |     c1::<()>;\n    |     --   ^^ type argument not allowed\n    |     |\n-   |     not allowed on this\n+   |     not allowed on local variable\n \n error[E0109]: type arguments are not allowed on local variable\n   --> $DIR/issue-60989.rs:16:10\n    |\n LL |     c1::<dyn Into<B>>;\n    |     --   ^^^^^^^^^^^ type argument not allowed\n    |     |\n-   |     not allowed on this\n+   |     not allowed on local variable\n \n error: aborting due to 2 previous errors\n "}, {"sha": "cf61e94bd86cb4fbf37639168a884bf9c4788888", "filename": "src/test/ui/mod-subitem-as-enum-variant.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2762d62990364fd43180984d39de7e4f35957094/src%2Ftest%2Fui%2Fmod-subitem-as-enum-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2762d62990364fd43180984d39de7e4f35957094/src%2Ftest%2Fui%2Fmod-subitem-as-enum-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmod-subitem-as-enum-variant.stderr?ref=2762d62990364fd43180984d39de7e4f35957094", "patch": "@@ -4,7 +4,7 @@ error[E0109]: type arguments are not allowed on module `Mod`\n LL |     Mod::<i32>::FakeVariant(0);\n    |     ---   ^^^ type argument not allowed\n    |     |\n-   |     not allowed on this\n+   |     not allowed on module `Mod`\n \n error: aborting due to previous error\n "}, {"sha": "bdce0e1b331b89a851e086b6db39ffa1bf918cdf", "filename": "src/test/ui/structs/struct-path-associated-type.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2762d62990364fd43180984d39de7e4f35957094/src%2Ftest%2Fui%2Fstructs%2Fstruct-path-associated-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2762d62990364fd43180984d39de7e4f35957094/src%2Ftest%2Fui%2Fstructs%2Fstruct-path-associated-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Fstruct-path-associated-type.stderr?ref=2762d62990364fd43180984d39de7e4f35957094", "patch": "@@ -10,7 +10,7 @@ error[E0109]: type arguments are not allowed on this type\n LL |     let z = T::A::<u8> {};\n    |                -   ^^ type argument not allowed\n    |                |\n-   |                not allowed on this\n+   |                not allowed on this type\n \n error[E0071]: expected struct, variant or union type, found associated type\n   --> $DIR/struct-path-associated-type.rs:14:13\n@@ -30,7 +30,7 @@ error[E0109]: type arguments are not allowed on this type\n LL |     let z = T::A::<u8> {};\n    |                -   ^^ type argument not allowed\n    |                |\n-   |                not allowed on this\n+   |                not allowed on this type\n \n error[E0223]: ambiguous associated type\n   --> $DIR/struct-path-associated-type.rs:32:13"}, {"sha": "c2a8623f9b4108d3a5768c7229cc83d9c25029b1", "filename": "src/test/ui/structs/struct-path-self.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2762d62990364fd43180984d39de7e4f35957094/src%2Ftest%2Fui%2Fstructs%2Fstruct-path-self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2762d62990364fd43180984d39de7e4f35957094/src%2Ftest%2Fui%2Fstructs%2Fstruct-path-self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Fstruct-path-self.stderr?ref=2762d62990364fd43180984d39de7e4f35957094", "patch": "@@ -10,7 +10,7 @@ error[E0109]: type arguments are not allowed on self type\n LL |         let z = Self::<u8> {};\n    |                 ----   ^^ type argument not allowed\n    |                 |\n-   |                 not allowed on this\n+   |                 not allowed on self type\n    |\n help: the `Self` type doesn't accept type parameters\n    |\n@@ -36,7 +36,7 @@ error[E0109]: type arguments are not allowed on self type\n LL |         let z = Self::<u8> {};\n    |                 ----   ^^ type argument not allowed\n    |                 |\n-   |                 not allowed on this\n+   |                 not allowed on self type\n    |\n note: `Self` is of type `S`\n   --> $DIR/struct-path-self.rs:1:8\n@@ -58,7 +58,7 @@ error[E0109]: type arguments are not allowed on self type\n LL |         let z = Self::<u8> {};\n    |                 ----   ^^ type argument not allowed\n    |                 |\n-   |                 not allowed on this\n+   |                 not allowed on self type\n    |\n note: `Self` is of type `S`\n   --> $DIR/struct-path-self.rs:1:8"}, {"sha": "9601bdce4c503768795871fdebc71120aa183dfb", "filename": "src/test/ui/type-alias-enum-variants/enum-variant-generic-args.stderr", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/2762d62990364fd43180984d39de7e4f35957094/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fenum-variant-generic-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2762d62990364fd43180984d39de7e4f35957094/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fenum-variant-generic-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fenum-variant-generic-args.stderr?ref=2762d62990364fd43180984d39de7e4f35957094", "patch": "@@ -23,15 +23,15 @@ error[E0109]: type arguments are not allowed on this type\n LL |         Self::TSVariant::<()>(());\n    |               ---------   ^^ type argument not allowed\n    |               |\n-   |               not allowed on this\n+   |               not allowed on this type\n \n error[E0109]: type arguments are not allowed on self type\n   --> $DIR/enum-variant-generic-args.rs:17:16\n    |\n LL |         Self::<()>::TSVariant(());\n    |         ----   ^^ type argument not allowed\n    |         |\n-   |         not allowed on this\n+   |         not allowed on self type\n    |\n note: `Self` is of type `Enum<T>`\n   --> $DIR/enum-variant-generic-args.rs:7:6\n@@ -71,7 +71,7 @@ error[E0109]: type arguments are not allowed on self type\n LL |         Self::<()>::TSVariant::<()>(());\n    |         ----   ^^ type argument not allowed\n    |         |\n-   |         not allowed on this\n+   |         not allowed on self type\n    |\n note: `Self` is of type `Enum<T>`\n   --> $DIR/enum-variant-generic-args.rs:7:6\n@@ -92,7 +92,7 @@ error[E0109]: type arguments are not allowed on this type\n LL |         Self::<()>::TSVariant::<()>(());\n    |                     ---------   ^^ type argument not allowed\n    |                     |\n-   |                     not allowed on this\n+   |                     not allowed on this type\n \n error[E0308]: mismatched types\n   --> $DIR/enum-variant-generic-args.rs:26:29\n@@ -112,7 +112,7 @@ error[E0109]: type arguments are not allowed on this type\n LL |         Self::SVariant::<()> { v: () };\n    |               --------   ^^ type argument not allowed\n    |               |\n-   |               not allowed on this\n+   |               not allowed on this type\n    |\n    = note: enum variants can't have type parameters\n help: you might have meant to specity type parameters on enum `Enum`\n@@ -139,7 +139,7 @@ error[E0109]: type arguments are not allowed on self type\n LL |         Self::<()>::SVariant { v: () };\n    |         ----   ^^ type argument not allowed\n    |         |\n-   |         not allowed on this\n+   |         not allowed on self type\n    |\n note: `Self` is of type `Enum<T>`\n   --> $DIR/enum-variant-generic-args.rs:7:6\n@@ -172,7 +172,7 @@ error[E0109]: type arguments are not allowed on self type\n LL |         Self::<()>::SVariant::<()> { v: () };\n    |         ----   ^^ type argument not allowed\n    |         |\n-   |         not allowed on this\n+   |         not allowed on self type\n    |\n note: `Self` is of type `Enum<T>`\n   --> $DIR/enum-variant-generic-args.rs:7:6\n@@ -193,7 +193,7 @@ error[E0109]: type arguments are not allowed on this type\n LL |         Self::<()>::SVariant::<()> { v: () };\n    |                     --------   ^^ type argument not allowed\n    |                     |\n-   |                     not allowed on this\n+   |                     not allowed on this type\n    |\n    = note: enum variants can't have type parameters\n help: you might have meant to specity type parameters on enum `Enum`\n@@ -220,15 +220,15 @@ error[E0109]: type arguments are not allowed on this type\n LL |         Self::UVariant::<()>;\n    |               --------   ^^ type argument not allowed\n    |               |\n-   |               not allowed on this\n+   |               not allowed on this type\n \n error[E0109]: type arguments are not allowed on self type\n   --> $DIR/enum-variant-generic-args.rs:43:16\n    |\n LL |         Self::<()>::UVariant;\n    |         ----   ^^ type argument not allowed\n    |         |\n-   |         not allowed on this\n+   |         not allowed on self type\n    |\n note: `Self` is of type `Enum<T>`\n   --> $DIR/enum-variant-generic-args.rs:7:6\n@@ -249,7 +249,7 @@ error[E0109]: type arguments are not allowed on self type\n LL |         Self::<()>::UVariant::<()>;\n    |         ----   ^^ type argument not allowed\n    |         |\n-   |         not allowed on this\n+   |         not allowed on self type\n    |\n note: `Self` is of type `Enum<T>`\n   --> $DIR/enum-variant-generic-args.rs:7:6\n@@ -270,39 +270,39 @@ error[E0109]: type arguments are not allowed on this type\n LL |         Self::<()>::UVariant::<()>;\n    |                     --------   ^^ type argument not allowed\n    |                     |\n-   |                     not allowed on this\n+   |                     not allowed on this type\n \n error[E0109]: type arguments are not allowed on this type\n   --> $DIR/enum-variant-generic-args.rs:54:29\n    |\n LL |     Enum::<()>::TSVariant::<()>(());\n    |                 ---------   ^^ type argument not allowed\n    |                 |\n-   |                 not allowed on this\n+   |                 not allowed on this type\n \n error[E0109]: type arguments are not allowed on this type\n   --> $DIR/enum-variant-generic-args.rs:57:24\n    |\n LL |     Alias::TSVariant::<()>(());\n    |            ---------   ^^ type argument not allowed\n    |            |\n-   |            not allowed on this\n+   |            not allowed on this type\n \n error[E0109]: type arguments are not allowed on this type\n   --> $DIR/enum-variant-generic-args.rs:59:30\n    |\n LL |     Alias::<()>::TSVariant::<()>(());\n    |                  ---------   ^^ type argument not allowed\n    |                  |\n-   |                  not allowed on this\n+   |                  not allowed on this type\n \n error[E0109]: type arguments are not allowed on this type\n   --> $DIR/enum-variant-generic-args.rs:62:29\n    |\n LL |     AliasFixed::TSVariant::<()>(());\n    |                 ---------   ^^ type argument not allowed\n    |                 |\n-   |                 not allowed on this\n+   |                 not allowed on this type\n \n error[E0107]: this type alias takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/enum-variant-generic-args.rs:64:5\n@@ -338,15 +338,15 @@ error[E0109]: type arguments are not allowed on this type\n LL |     AliasFixed::<()>::TSVariant::<()>(());\n    |                       ---------   ^^ type argument not allowed\n    |                       |\n-   |                       not allowed on this\n+   |                       not allowed on this type\n \n error[E0109]: type arguments are not allowed on this type\n   --> $DIR/enum-variant-generic-args.rs:72:28\n    |\n LL |     Enum::<()>::SVariant::<()> { v: () };\n    |                 --------   ^^ type argument not allowed\n    |                 |\n-   |                 not allowed on this\n+   |                 not allowed on this type\n    |\n    = note: enum variants can't have type parameters\n \n@@ -356,7 +356,7 @@ error[E0109]: type arguments are not allowed on this type\n LL |     Alias::SVariant::<()> { v: () };\n    |            --------   ^^ type argument not allowed\n    |            |\n-   |            not allowed on this\n+   |            not allowed on this type\n    |\n    = note: enum variants can't have type parameters\n help: you might have meant to specity type parameters on enum `Enum`\n@@ -371,7 +371,7 @@ error[E0109]: type arguments are not allowed on this type\n LL |     Alias::<()>::SVariant::<()> { v: () };\n    |                  --------   ^^ type argument not allowed\n    |                  |\n-   |                  not allowed on this\n+   |                  not allowed on this type\n    |\n    = note: enum variants can't have type parameters\n help: you might have meant to specity type parameters on enum `Enum`\n@@ -386,7 +386,7 @@ error[E0109]: type arguments are not allowed on this type\n LL |     AliasFixed::SVariant::<()> { v: () };\n    |                 --------   ^^ type argument not allowed\n    |                 |\n-   |                 not allowed on this\n+   |                 not allowed on this type\n    |\n    = note: enum variants can't have type parameters\n help: you might have meant to specity type parameters on enum `Enum`\n@@ -429,7 +429,7 @@ error[E0109]: type arguments are not allowed on this type\n LL |     AliasFixed::<()>::SVariant::<()> { v: () };\n    |                       --------   ^^ type argument not allowed\n    |                       |\n-   |                       not allowed on this\n+   |                       not allowed on this type\n    |\n    = note: enum variants can't have type parameters\n help: you might have meant to specity type parameters on enum `Enum`\n@@ -444,31 +444,31 @@ error[E0109]: type arguments are not allowed on this type\n LL |     Enum::<()>::UVariant::<()>;\n    |                 --------   ^^ type argument not allowed\n    |                 |\n-   |                 not allowed on this\n+   |                 not allowed on this type\n \n error[E0109]: type arguments are not allowed on this type\n   --> $DIR/enum-variant-generic-args.rs:93:23\n    |\n LL |     Alias::UVariant::<()>;\n    |            --------   ^^ type argument not allowed\n    |            |\n-   |            not allowed on this\n+   |            not allowed on this type\n \n error[E0109]: type arguments are not allowed on this type\n   --> $DIR/enum-variant-generic-args.rs:95:29\n    |\n LL |     Alias::<()>::UVariant::<()>;\n    |                  --------   ^^ type argument not allowed\n    |                  |\n-   |                  not allowed on this\n+   |                  not allowed on this type\n \n error[E0109]: type arguments are not allowed on this type\n   --> $DIR/enum-variant-generic-args.rs:98:28\n    |\n LL |     AliasFixed::UVariant::<()>;\n    |                 --------   ^^ type argument not allowed\n    |                 |\n-   |                 not allowed on this\n+   |                 not allowed on this type\n \n error[E0107]: this type alias takes 0 generic arguments but 1 generic argument was supplied\n   --> $DIR/enum-variant-generic-args.rs:100:5\n@@ -504,7 +504,7 @@ error[E0109]: type arguments are not allowed on this type\n LL |     AliasFixed::<()>::UVariant::<()>;\n    |                       --------   ^^ type argument not allowed\n    |                       |\n-   |                       not allowed on this\n+   |                       not allowed on this type\n \n error: aborting due to 39 previous errors\n "}, {"sha": "51b1c8a1068a9e6cae8768b6da1909a1ee449be7", "filename": "src/test/ui/type-alias-enum-variants/no-type-application-on-aliased-enum-variant.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2762d62990364fd43180984d39de7e4f35957094/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fno-type-application-on-aliased-enum-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2762d62990364fd43180984d39de7e4f35957094/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fno-type-application-on-aliased-enum-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fno-type-application-on-aliased-enum-variant.stderr?ref=2762d62990364fd43180984d39de7e4f35957094", "patch": "@@ -4,7 +4,7 @@ error[E0109]: type arguments are not allowed on this type\n LL |     let _ = Alias::None::<u8>;\n    |                    ----   ^^ type argument not allowed\n    |                    |\n-   |                    not allowed on this\n+   |                    not allowed on this type\n \n error: aborting due to previous error\n "}, {"sha": "e426f450b11bbb1134aad7fa628275c19f3e7d40", "filename": "src/test/ui/type/issue-91268.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2762d62990364fd43180984d39de7e4f35957094/src%2Ftest%2Fui%2Ftype%2Fissue-91268.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2762d62990364fd43180984d39de7e4f35957094/src%2Ftest%2Fui%2Ftype%2Fissue-91268.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Fissue-91268.stderr?ref=2762d62990364fd43180984d39de7e4f35957094", "patch": "@@ -41,7 +41,7 @@ error[E0109]: type arguments are not allowed on this type\n LL |     0: u8(\u0163\n    |        -- ^ type argument not allowed\n    |        |\n-   |        not allowed on this\n+   |        not allowed on this type\n    |\n help: primitive type `u8` doesn't have generic parameters\n    |"}, {"sha": "c45fd00bae9a544b238d04d5bad9435dcc9c8c84", "filename": "src/test/ui/typeck/prim-with-args.stderr", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/2762d62990364fd43180984d39de7e4f35957094/src%2Ftest%2Fui%2Ftypeck%2Fprim-with-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2762d62990364fd43180984d39de7e4f35957094/src%2Ftest%2Fui%2Ftypeck%2Fprim-with-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fprim-with-args.stderr?ref=2762d62990364fd43180984d39de7e4f35957094", "patch": "@@ -4,7 +4,7 @@ error[E0109]: type arguments are not allowed on this type\n LL | let _x: isize<isize>;\n    |         ----- ^^^^^ type argument not allowed\n    |         |\n-   |         not allowed on this\n+   |         not allowed on this type\n    |\n help: primitive type `isize` doesn't have generic parameters\n    |\n@@ -18,7 +18,7 @@ error[E0109]: type arguments are not allowed on this type\n LL | let _x: i8<isize>;\n    |         -- ^^^^^ type argument not allowed\n    |         |\n-   |         not allowed on this\n+   |         not allowed on this type\n    |\n help: primitive type `i8` doesn't have generic parameters\n    |\n@@ -32,7 +32,7 @@ error[E0109]: type arguments are not allowed on this type\n LL | let _x: i16<isize>;\n    |         --- ^^^^^ type argument not allowed\n    |         |\n-   |         not allowed on this\n+   |         not allowed on this type\n    |\n help: primitive type `i16` doesn't have generic parameters\n    |\n@@ -46,7 +46,7 @@ error[E0109]: type arguments are not allowed on this type\n LL | let _x: i32<isize>;\n    |         --- ^^^^^ type argument not allowed\n    |         |\n-   |         not allowed on this\n+   |         not allowed on this type\n    |\n help: primitive type `i32` doesn't have generic parameters\n    |\n@@ -60,7 +60,7 @@ error[E0109]: type arguments are not allowed on this type\n LL | let _x: i64<isize>;\n    |         --- ^^^^^ type argument not allowed\n    |         |\n-   |         not allowed on this\n+   |         not allowed on this type\n    |\n help: primitive type `i64` doesn't have generic parameters\n    |\n@@ -74,7 +74,7 @@ error[E0109]: type arguments are not allowed on this type\n LL | let _x: usize<isize>;\n    |         ----- ^^^^^ type argument not allowed\n    |         |\n-   |         not allowed on this\n+   |         not allowed on this type\n    |\n help: primitive type `usize` doesn't have generic parameters\n    |\n@@ -88,7 +88,7 @@ error[E0109]: type arguments are not allowed on this type\n LL | let _x: u8<isize>;\n    |         -- ^^^^^ type argument not allowed\n    |         |\n-   |         not allowed on this\n+   |         not allowed on this type\n    |\n help: primitive type `u8` doesn't have generic parameters\n    |\n@@ -102,7 +102,7 @@ error[E0109]: type arguments are not allowed on this type\n LL | let _x: u16<isize>;\n    |         --- ^^^^^ type argument not allowed\n    |         |\n-   |         not allowed on this\n+   |         not allowed on this type\n    |\n help: primitive type `u16` doesn't have generic parameters\n    |\n@@ -116,7 +116,7 @@ error[E0109]: type arguments are not allowed on this type\n LL | let _x: u32<isize>;\n    |         --- ^^^^^ type argument not allowed\n    |         |\n-   |         not allowed on this\n+   |         not allowed on this type\n    |\n help: primitive type `u32` doesn't have generic parameters\n    |\n@@ -130,7 +130,7 @@ error[E0109]: type arguments are not allowed on this type\n LL | let _x: u64<isize>;\n    |         --- ^^^^^ type argument not allowed\n    |         |\n-   |         not allowed on this\n+   |         not allowed on this type\n    |\n help: primitive type `u64` doesn't have generic parameters\n    |\n@@ -144,7 +144,7 @@ error[E0109]: type arguments are not allowed on this type\n LL | let _x: char<isize>;\n    |         ---- ^^^^^ type argument not allowed\n    |         |\n-   |         not allowed on this\n+   |         not allowed on this type\n    |\n help: primitive type `char` doesn't have generic parameters\n    |\n@@ -158,7 +158,7 @@ error[E0109]: lifetime arguments are not allowed on this type\n LL | let _x: isize<'static>;\n    |         ----- ^^^^^^^ lifetime argument not allowed\n    |         |\n-   |         not allowed on this\n+   |         not allowed on this type\n    |\n help: primitive type `isize` doesn't have generic parameters\n    |\n@@ -172,7 +172,7 @@ error[E0109]: lifetime arguments are not allowed on this type\n LL | let _x: i8<'static>;\n    |         -- ^^^^^^^ lifetime argument not allowed\n    |         |\n-   |         not allowed on this\n+   |         not allowed on this type\n    |\n help: primitive type `i8` doesn't have generic parameters\n    |\n@@ -186,7 +186,7 @@ error[E0109]: lifetime arguments are not allowed on this type\n LL | let _x: i16<'static>;\n    |         --- ^^^^^^^ lifetime argument not allowed\n    |         |\n-   |         not allowed on this\n+   |         not allowed on this type\n    |\n help: primitive type `i16` doesn't have generic parameters\n    |\n@@ -200,7 +200,7 @@ error[E0109]: lifetime arguments are not allowed on this type\n LL | let _x: i32<'static>;\n    |         --- ^^^^^^^ lifetime argument not allowed\n    |         |\n-   |         not allowed on this\n+   |         not allowed on this type\n    |\n help: primitive type `i32` doesn't have generic parameters\n    |\n@@ -214,7 +214,7 @@ error[E0109]: lifetime arguments are not allowed on this type\n LL | let _x: i64<'static>;\n    |         --- ^^^^^^^ lifetime argument not allowed\n    |         |\n-   |         not allowed on this\n+   |         not allowed on this type\n    |\n help: primitive type `i64` doesn't have generic parameters\n    |\n@@ -228,7 +228,7 @@ error[E0109]: lifetime arguments are not allowed on this type\n LL | let _x: usize<'static>;\n    |         ----- ^^^^^^^ lifetime argument not allowed\n    |         |\n-   |         not allowed on this\n+   |         not allowed on this type\n    |\n help: primitive type `usize` doesn't have generic parameters\n    |\n@@ -242,7 +242,7 @@ error[E0109]: lifetime arguments are not allowed on this type\n LL | let _x: u8<'static>;\n    |         -- ^^^^^^^ lifetime argument not allowed\n    |         |\n-   |         not allowed on this\n+   |         not allowed on this type\n    |\n help: primitive type `u8` doesn't have generic parameters\n    |\n@@ -256,7 +256,7 @@ error[E0109]: lifetime arguments are not allowed on this type\n LL | let _x: u16<'static>;\n    |         --- ^^^^^^^ lifetime argument not allowed\n    |         |\n-   |         not allowed on this\n+   |         not allowed on this type\n    |\n help: primitive type `u16` doesn't have generic parameters\n    |\n@@ -270,7 +270,7 @@ error[E0109]: lifetime arguments are not allowed on this type\n LL | let _x: u32<'static>;\n    |         --- ^^^^^^^ lifetime argument not allowed\n    |         |\n-   |         not allowed on this\n+   |         not allowed on this type\n    |\n help: primitive type `u32` doesn't have generic parameters\n    |\n@@ -284,7 +284,7 @@ error[E0109]: lifetime arguments are not allowed on this type\n LL | let _x: u64<'static>;\n    |         --- ^^^^^^^ lifetime argument not allowed\n    |         |\n-   |         not allowed on this\n+   |         not allowed on this type\n    |\n help: primitive type `u64` doesn't have generic parameters\n    |\n@@ -298,7 +298,7 @@ error[E0109]: lifetime arguments are not allowed on this type\n LL | let _x: char<'static>;\n    |         ---- ^^^^^^^ lifetime argument not allowed\n    |         |\n-   |         not allowed on this\n+   |         not allowed on this type\n    |\n help: primitive type `char` doesn't have generic parameters\n    |"}, {"sha": "abe8c09b739f72a9d63119608458d64d0bda55fa", "filename": "src/test/ui/usize-generic-argument-parent.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2762d62990364fd43180984d39de7e4f35957094/src%2Ftest%2Fui%2Fusize-generic-argument-parent.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2762d62990364fd43180984d39de7e4f35957094/src%2Ftest%2Fui%2Fusize-generic-argument-parent.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fusize-generic-argument-parent.stderr?ref=2762d62990364fd43180984d39de7e4f35957094", "patch": "@@ -4,7 +4,7 @@ error[E0109]: const arguments are not allowed on this type\n LL |     let x: usize<foo>;\n    |            ----- ^^^ const argument not allowed\n    |            |\n-   |            not allowed on this\n+   |            not allowed on this type\n    |\n help: primitive type `usize` doesn't have generic parameters\n    |"}]}