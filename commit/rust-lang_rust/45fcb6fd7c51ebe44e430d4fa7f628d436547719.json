{"sha": "45fcb6fd7c51ebe44e430d4fa7f628d436547719", "node_id": "C_kwDOAAsO6NoAKDQ1ZmNiNmZkN2M1MWViZTQ0ZTQzMGQ0ZmE3ZjYyOGQ0MzY1NDc3MTk", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2023-03-31T20:32:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-31T20:32:49Z"}, "message": "Rollup merge of #109680 - clubby789:array-subslice-2229, r=davidtwco\n\nFix subslice capture in closure\n\nFixes #109298 by refining captures in the same way for Subslices and Indexes. The comment `// we never capture this` seems to have been inaccurate, as changing it to an assert causes many test failures\n\n`@rustbot` label +A-closures", "tree": {"sha": "8e49680979ccf4ee5558cdd2aace769fd833b119", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e49680979ccf4ee5558cdd2aace769fd833b119"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45fcb6fd7c51ebe44e430d4fa7f628d436547719", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkJ0NxCRBK7hj4Ov3rIwAASZUIAJg5fxgF7xxJG7JNuiaRSgJD\nDYa64csyiXJUPi9QeI/aD1MiXqEq3KgdQKFVgyMmRybhEiCeEI+lXcnxWMOLLdW5\nbzjuru1XzSLBVrQTW8hWNLl169qVClcfXwVZTZejns2Hb5wN91dfTkkWfFUQFlF8\nBU4eSsPbDMGNfxu8oPrnm5RN6ofcQK/ir8lBLTX6WEDJo+QkTRcj2ZI+nKMU2+p2\n4mZaIZ2MYH6Ekhwrnxh3fmaRLA+uzyvTtjRK2Xsiqs2qg7vy6w30NahTxFw0WxyU\nHHo67yo5N6r9GqENvoWEfyKJFhAQo1RVqk8NhMjdVqCNH2PtZ1YX2Gyzo4givYQ=\n=9d4J\n-----END PGP SIGNATURE-----\n", "payload": "tree 8e49680979ccf4ee5558cdd2aace769fd833b119\nparent 6c93c63771be17303b795e51cf3d1fa8d8cb6726\nparent f995003ec5053c85efca895d0506392d3be88286\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1680294769 +0200\ncommitter GitHub <noreply@github.com> 1680294769 +0200\n\nRollup merge of #109680 - clubby789:array-subslice-2229, r=davidtwco\n\nFix subslice capture in closure\n\nFixes #109298 by refining captures in the same way for Subslices and Indexes. The comment `// we never capture this` seems to have been inaccurate, as changing it to an assert causes many test failures\n\n`@rustbot` label +A-closures\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45fcb6fd7c51ebe44e430d4fa7f628d436547719", "html_url": "https://github.com/rust-lang/rust/commit/45fcb6fd7c51ebe44e430d4fa7f628d436547719", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45fcb6fd7c51ebe44e430d4fa7f628d436547719/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c93c63771be17303b795e51cf3d1fa8d8cb6726", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c93c63771be17303b795e51cf3d1fa8d8cb6726", "html_url": "https://github.com/rust-lang/rust/commit/6c93c63771be17303b795e51cf3d1fa8d8cb6726"}, {"sha": "f995003ec5053c85efca895d0506392d3be88286", "url": "https://api.github.com/repos/rust-lang/rust/commits/f995003ec5053c85efca895d0506392d3be88286", "html_url": "https://github.com/rust-lang/rust/commit/f995003ec5053c85efca895d0506392d3be88286"}], "stats": {"total": 44, "additions": 41, "deletions": 3}, "files": [{"sha": "41a6ad80b65a3ed857fc6120211f97b3ff370ba8", "filename": "compiler/rustc_hir_typeck/src/upvar.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/45fcb6fd7c51ebe44e430d4fa7f628d436547719/compiler%2Frustc_hir_typeck%2Fsrc%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45fcb6fd7c51ebe44e430d4fa7f628d436547719/compiler%2Frustc_hir_typeck%2Fsrc%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fupvar.rs?ref=45fcb6fd7c51ebe44e430d4fa7f628d436547719", "patch": "@@ -1893,14 +1893,13 @@ fn restrict_capture_precision(\n \n     for (i, proj) in place.projections.iter().enumerate() {\n         match proj.kind {\n-            ProjectionKind::Index => {\n-                // Arrays are completely captured, so we drop Index projections\n+            ProjectionKind::Index | ProjectionKind::Subslice => {\n+                // Arrays are completely captured, so we drop Index and Subslice projections\n                 truncate_place_to_len_and_update_capture_kind(&mut place, &mut curr_mode, i);\n                 return (place, curr_mode);\n             }\n             ProjectionKind::Deref => {}\n             ProjectionKind::Field(..) => {} // ignore\n-            ProjectionKind::Subslice => {}  // We never capture this\n         }\n     }\n "}, {"sha": "5f244ea89365d4bac763af777c9a2c72ec07f136", "filename": "tests/ui/closures/2229_closure_analysis/array_subslice.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/45fcb6fd7c51ebe44e430d4fa7f628d436547719/tests%2Fui%2Fclosures%2F2229_closure_analysis%2Farray_subslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45fcb6fd7c51ebe44e430d4fa7f628d436547719/tests%2Fui%2Fclosures%2F2229_closure_analysis%2Farray_subslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fclosures%2F2229_closure_analysis%2Farray_subslice.rs?ref=45fcb6fd7c51ebe44e430d4fa7f628d436547719", "patch": "@@ -0,0 +1,13 @@\n+// regression test for #109298\n+// edition: 2021\n+\n+pub fn subslice_array(x: [u8; 3]) {\n+    let f = || {\n+        let [_x @ ..] = x;\n+        let [ref y, ref mut z @ ..] = x; //~ ERROR cannot borrow `x[..]` as mutable\n+    };\n+\n+    f(); //~ ERROR cannot borrow `f` as mutable\n+}\n+\n+fn main() {}"}, {"sha": "888c60d5e91fb4149fb909c4901b6af3b5496729", "filename": "tests/ui/closures/2229_closure_analysis/array_subslice.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/45fcb6fd7c51ebe44e430d4fa7f628d436547719/tests%2Fui%2Fclosures%2F2229_closure_analysis%2Farray_subslice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45fcb6fd7c51ebe44e430d4fa7f628d436547719/tests%2Fui%2Fclosures%2F2229_closure_analysis%2Farray_subslice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fclosures%2F2229_closure_analysis%2Farray_subslice.stderr?ref=45fcb6fd7c51ebe44e430d4fa7f628d436547719", "patch": "@@ -0,0 +1,26 @@\n+error[E0596]: cannot borrow `x[..]` as mutable, as `x` is not declared as mutable\n+  --> $DIR/array_subslice.rs:7:21\n+   |\n+LL | pub fn subslice_array(x: [u8; 3]) {\n+   |                       - help: consider changing this to be mutable: `mut x`\n+...\n+LL |         let [ref y, ref mut z @ ..] = x;\n+   |                     ^^^^^^^^^ cannot borrow as mutable\n+\n+error[E0596]: cannot borrow `f` as mutable, as it is not declared as mutable\n+  --> $DIR/array_subslice.rs:10:5\n+   |\n+LL |         let [ref y, ref mut z @ ..] = x;\n+   |                                       - calling `f` requires mutable binding due to mutable borrow of `x`\n+...\n+LL |     f();\n+   |     ^ cannot borrow as mutable\n+   |\n+help: consider changing this to be mutable\n+   |\n+LL |     let mut f = || {\n+   |         +++\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0596`."}]}