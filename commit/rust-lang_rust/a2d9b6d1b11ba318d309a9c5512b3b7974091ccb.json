{"sha": "a2d9b6d1b11ba318d309a9c5512b3b7974091ccb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyZDliNmQxYjExYmEzMThkMzA5YTljNTUxMmIzYjc5NzQwOTFjY2I=", "commit": {"author": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2019-03-29T07:59:50Z"}, "committer": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2019-03-29T10:06:32Z"}, "message": "Remove redundant scopes", "tree": {"sha": "d721394938c49d4753fda33dd67ef7cb10a71bd5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d721394938c49d4753fda33dd67ef7cb10a71bd5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2d9b6d1b11ba318d309a9c5512b3b7974091ccb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2d9b6d1b11ba318d309a9c5512b3b7974091ccb", "html_url": "https://github.com/rust-lang/rust/commit/a2d9b6d1b11ba318d309a9c5512b3b7974091ccb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2d9b6d1b11ba318d309a9c5512b3b7974091ccb/comments", "author": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3a4a036574da637367a7f99e6de0edc1b93c764", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3a4a036574da637367a7f99e6de0edc1b93c764", "html_url": "https://github.com/rust-lang/rust/commit/e3a4a036574da637367a7f99e6de0edc1b93c764"}], "stats": {"total": 46, "additions": 19, "deletions": 27}, "files": [{"sha": "67d2355c93844233e88f6a75cbb730bb25a606d8", "filename": "src/config/file_lines.rs", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a2d9b6d1b11ba318d309a9c5512b3b7974091ccb/src%2Fconfig%2Ffile_lines.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2d9b6d1b11ba318d309a9c5512b3b7974091ccb/src%2Fconfig%2Ffile_lines.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Ffile_lines.rs?ref=a2d9b6d1b11ba318d309a9c5512b3b7974091ccb", "patch": "@@ -156,20 +156,18 @@ fn normalize_ranges(ranges: &mut HashMap<FileName, Vec<Range>>) {\n     for ranges in ranges.values_mut() {\n         ranges.sort();\n         let mut result = vec![];\n-        {\n-            let mut iter = ranges.iter_mut().peekable();\n-            while let Some(next) = iter.next() {\n-                let mut next = *next;\n-                while let Some(&&mut peek) = iter.peek() {\n-                    if let Some(merged) = next.merge(peek) {\n-                        iter.next().unwrap();\n-                        next = merged;\n-                    } else {\n-                        break;\n-                    }\n+        let mut iter = ranges.iter_mut().peekable();\n+        while let Some(next) = iter.next() {\n+            let mut next = *next;\n+            while let Some(&&mut peek) = iter.peek() {\n+                if let Some(merged) = next.merge(peek) {\n+                    iter.next().unwrap();\n+                    next = merged;\n+                } else {\n+                    break;\n                 }\n-                result.push(next)\n             }\n+            result.push(next)\n         }\n         *ranges = result;\n     }"}, {"sha": "4a4647a56635889677df75894fcfc259438ffec0", "filename": "src/config/mod.rs", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a2d9b6d1b11ba318d309a9c5512b3b7974091ccb/src%2Fconfig%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2d9b6d1b11ba318d309a9c5512b3b7974091ccb/src%2Fconfig%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Fmod.rs?ref=a2d9b6d1b11ba318d309a9c5512b3b7974091ccb", "patch": "@@ -257,16 +257,14 @@ impl Config {\n         let parsed: ::toml::Value = toml\n             .parse()\n             .map_err(|e| format!(\"Could not parse TOML: {}\", e))?;\n-        let mut err: String = String::new();\n-        {\n-            let table = parsed\n-                .as_table()\n-                .ok_or(String::from(\"Parsed config was not table\"))?;\n-            for key in table.keys() {\n-                if !Config::is_valid_name(key) {\n-                    let msg = &format!(\"Warning: Unknown configuration option `{}`\\n\", key);\n-                    err.push_str(msg)\n-                }\n+        let mut err = String::new();\n+        let table = parsed\n+            .as_table()\n+            .ok_or(String::from(\"Parsed config was not table\"))?;\n+        for key in table.keys() {\n+            if !Config::is_valid_name(key) {\n+                let msg = &format!(\"Warning: Unknown configuration option `{}`\\n\", key);\n+                err.push_str(msg)\n             }\n         }\n         match parsed.try_into() {"}, {"sha": "ccf60b242be30ec66a202fb3452973de2e12f05b", "filename": "src/formatting.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a2d9b6d1b11ba318d309a9c5512b3b7974091ccb/src%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2d9b6d1b11ba318d309a9c5512b3b7974091ccb/src%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fformatting.rs?ref=a2d9b6d1b11ba318d309a9c5512b3b7974091ccb", "patch": "@@ -48,11 +48,7 @@ impl<'b, T: Write + 'b> Session<'b, T> {\n             let format_result = format_project(input, config, self);\n \n             format_result.map(|report| {\n-                {\n-                    let new_errors = &report.internal.borrow().1;\n-\n-                    self.errors.add(new_errors);\n-                }\n+                self.errors.add(&report.internal.borrow().1);\n                 report\n             })\n         })"}]}