{"sha": "cc4583dcd3c3206eda0a71a71730ff0c5501c64c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjNDU4M2RjZDNjMzIwNmVkYTBhNzFhNzE3MzBmZjBjNTUwMWM2NGM=", "commit": {"author": {"name": "Nadrieril", "email": "nadrieril@gmail.com", "date": "2019-09-23T17:09:30Z"}, "committer": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2019-11-01T17:23:03Z"}, "message": "Wording", "tree": {"sha": "eb0e8fa2791646e3c3d1e927a95ebad7e30dda8c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb0e8fa2791646e3c3d1e927a95ebad7e30dda8c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc4583dcd3c3206eda0a71a71730ff0c5501c64c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc4583dcd3c3206eda0a71a71730ff0c5501c64c", "html_url": "https://github.com/rust-lang/rust/commit/cc4583dcd3c3206eda0a71a71730ff0c5501c64c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc4583dcd3c3206eda0a71a71730ff0c5501c64c/comments", "author": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d663c276da262f4b3b7f67ac45257f0b451ab070", "url": "https://api.github.com/repos/rust-lang/rust/commits/d663c276da262f4b3b7f67ac45257f0b451ab070", "html_url": "https://github.com/rust-lang/rust/commit/d663c276da262f4b3b7f67ac45257f0b451ab070"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "2e46cb9f8c915dd6e351e60cdf1e7dd83bb7e589", "filename": "src/librustc_mir/hair/pattern/_match.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cc4583dcd3c3206eda0a71a71730ff0c5501c64c/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc4583dcd3c3206eda0a71a71730ff0c5501c64c/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs?ref=cc4583dcd3c3206eda0a71a71730ff0c5501c64c", "patch": "@@ -1509,7 +1509,7 @@ pub fn is_useful<'p, 'a, 'tcx>(\n                     // 1) If the user is matching against a non-exhaustive\n                     // enum, there is no point in enumerating all possible\n                     // variants, because the user can't actually match\n-                    // against them himself, e.g., in an example like:\n+                    // against them themselves, e.g., in an example like:\n                     // ```\n                     //     let err: io::ErrorKind = ...;\n                     //     match err {\n@@ -1885,9 +1885,9 @@ fn split_grouped_constructors<'p, 'tcx>(\n \n                 lint_overlapping_patterns(tcx, hir_id, ctor_range, ty, overlaps);\n \n-                // We're going to iterate through every pair of borders, making sure that each\n-                // represents an interval of nonnegative length, and convert each such interval\n-                // into a constructor.\n+                // We're going to iterate through every adjacent pair of borders, making sure that\n+                // each represents an interval of nonnegative length, and convert each such\n+                // interval into a constructor.\n                 for IntRange { range, .. } in\n                     borders.windows(2).filter_map(|window| match (window[0], window[1]) {\n                         (Border::JustBefore(n), Border::JustBefore(m)) => {"}]}