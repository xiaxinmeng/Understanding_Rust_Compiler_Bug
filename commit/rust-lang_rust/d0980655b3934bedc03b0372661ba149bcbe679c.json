{"sha": "d0980655b3934bedc03b0372661ba149bcbe679c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwOTgwNjU1YjM5MzRiZWRjMDNiMDM3MjY2MWJhMTQ5YmNiZTY3OWM=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-05-22T22:22:30Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-05-22T22:22:30Z"}, "message": "Add tests for #2704.", "tree": {"sha": "06b969996376a70bb3cb100b7698573a4a1a80ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06b969996376a70bb3cb100b7698573a4a1a80ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0980655b3934bedc03b0372661ba149bcbe679c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0980655b3934bedc03b0372661ba149bcbe679c", "html_url": "https://github.com/rust-lang/rust/commit/d0980655b3934bedc03b0372661ba149bcbe679c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0980655b3934bedc03b0372661ba149bcbe679c/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b3257df8b9ff6ecddb2bd24bffa0e1de24c8fde", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b3257df8b9ff6ecddb2bd24bffa0e1de24c8fde", "html_url": "https://github.com/rust-lang/rust/commit/1b3257df8b9ff6ecddb2bd24bffa0e1de24c8fde"}], "stats": {"total": 90, "additions": 89, "deletions": 1}, "files": [{"sha": "80e46c235f47d46e43a8f424b3658690e9990b11", "filename": "tests/source/expr.rs", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/d0980655b3934bedc03b0372661ba149bcbe679c/tests%2Fsource%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0980655b3934bedc03b0372661ba149bcbe679c/tests%2Fsource%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fexpr.rs?ref=d0980655b3934bedc03b0372661ba149bcbe679c", "patch": "@@ -398,3 +398,41 @@ fn foo() {\n     let my_var =\n         Mutex::new(RpcClientType::connect(server_iddd).chain_err(|| \"Unable to create RPC client\")?);\n }\n+\n+// #2704\n+// Method call with prefix and suffix.\n+fn issue2704() {\n+    // We should not combine the callee with a multi-lined method call.\n+    let requires = requires.set(&requires0\n+                                .concat(&requires1)\n+                                .concat(&requires2)\n+                                .distinct_total());\n+    let requires = requires.set(box requires0\n+                                .concat(&requires1)\n+                                .concat(&requires2)\n+                                .distinct_total());\n+    let requires = requires.set(requires0\n+                                .concat(&requires1)\n+                                .concat(&requires2)\n+                                .distinct_total() as u32);\n+    let requires = requires.set(requires0\n+                                .concat(&requires1)\n+                                .concat(&requires2)\n+                                .distinct_total()?);\n+    let requires = requires.set(!requires0\n+                                .concat(&requires1)\n+                                .concat(&requires2)\n+                                .distinct_total());\n+    // We should combine a small callee with an argument.\n+    bar(vec![22]\n+        .into_iter()\n+        .map(|x| x * 2)\n+        .filter(|_| true)\n+        .collect());\n+    // But we should not combine a long callee with an argument.\n+    barrrr(vec![22]\n+        .into_iter()\n+        .map(|x| x * 2)\n+        .filter(|_| true)\n+        .collect());\n+}"}, {"sha": "45ac1f5caada844d93c802bfbdad646129abda16", "filename": "tests/target/expr.rs", "status": "modified", "additions": 51, "deletions": 1, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/d0980655b3934bedc03b0372661ba149bcbe679c/tests%2Ftarget%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0980655b3934bedc03b0372661ba149bcbe679c/tests%2Ftarget%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr.rs?ref=d0980655b3934bedc03b0372661ba149bcbe679c", "patch": "@@ -424,6 +424,56 @@ fn dots() {\n // A function call with a large single argument.\n fn foo() {\n     let my_var = Mutex::new(\n-        RpcClientType::connect(server_iddd).chain_err(|| \"Unable to create RPC client\")?\n+        RpcClientType::connect(server_iddd).chain_err(|| \"Unable to create RPC client\")?,\n+    );\n+}\n+\n+// #2704\n+// Method call with prefix and suffix.\n+fn issue2704() {\n+    // We should not combine the callee with a multi-lined method call.\n+    let requires = requires.set(\n+        &requires0\n+            .concat(&requires1)\n+            .concat(&requires2)\n+            .distinct_total(),\n+    );\n+    let requires = requires.set(\n+        box requires0\n+            .concat(&requires1)\n+            .concat(&requires2)\n+            .distinct_total(),\n+    );\n+    let requires = requires.set(\n+        requires0\n+            .concat(&requires1)\n+            .concat(&requires2)\n+            .distinct_total() as u32,\n+    );\n+    let requires = requires.set(\n+        requires0\n+            .concat(&requires1)\n+            .concat(&requires2)\n+            .distinct_total()?,\n+    );\n+    let requires = requires.set(\n+        !requires0\n+            .concat(&requires1)\n+            .concat(&requires2)\n+            .distinct_total(),\n+    );\n+    // We should combine a small callee with an argument.\n+    bar(vec![22]\n+        .into_iter()\n+        .map(|x| x * 2)\n+        .filter(|_| true)\n+        .collect());\n+    // But we should not combine a long callee with an argument.\n+    barrrr(\n+        vec![22]\n+            .into_iter()\n+            .map(|x| x * 2)\n+            .filter(|_| true)\n+            .collect(),\n     );\n }"}]}