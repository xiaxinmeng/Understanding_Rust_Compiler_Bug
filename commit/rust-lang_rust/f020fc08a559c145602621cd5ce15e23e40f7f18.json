{"sha": "f020fc08a559c145602621cd5ce15e23e40f7f18", "node_id": "C_kwDOAAsO6NoAKGYwMjBmYzA4YTU1OWMxNDU2MDI2MjFjZDVjZTE1ZTIzZTQwZjdmMTg", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-05-29T11:26:09Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-05-29T11:29:36Z"}, "message": "clarify how Rust atomics correspond to C++ atomics", "tree": {"sha": "f23607353b58f790980a6aa2cc64768fe49a61b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f23607353b58f790980a6aa2cc64768fe49a61b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f020fc08a559c145602621cd5ce15e23e40f7f18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f020fc08a559c145602621cd5ce15e23e40f7f18", "html_url": "https://github.com/rust-lang/rust/commit/f020fc08a559c145602621cd5ce15e23e40f7f18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f020fc08a559c145602621cd5ce15e23e40f7f18/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "303d916867040e269b54adf3cfc7f5c903dc26ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/303d916867040e269b54adf3cfc7f5c903dc26ff", "html_url": "https://github.com/rust-lang/rust/commit/303d916867040e269b54adf3cfc7f5c903dc26ff"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "9f4829e37ddd2239c39715237fc4a37c4c8b7d9b", "filename": "library/core/src/sync/atomic.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f020fc08a559c145602621cd5ce15e23e40f7f18/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f020fc08a559c145602621cd5ce15e23e40f7f18/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs?ref=f020fc08a559c145602621cd5ce15e23e40f7f18", "patch": "@@ -4,6 +4,12 @@\n //! threads, and are the building blocks of other concurrent\n //! types.\n //!\n+//! Rust atomics follow the same rules as [C++20 atomics][cpp], specifically `atomic_ref`.\n+//! Basically, creating a *shared reference* to one of the Rust atomic types corresponds to creating\n+//! an `atomic_ref` in C++; the `atomic_ref` is destroyed when the lifetime of the shared reference\n+//! ends. (A Rust atomic type that is exclusively owned or behind a mutable reference does *not*\n+//! correspond to an \"atomic object\" in C++, since it can be accessed via non-atomic operations.)\n+//!\n //! This module defines atomic versions of a select number of primitive\n //! types, including [`AtomicBool`], [`AtomicIsize`], [`AtomicUsize`],\n //! [`AtomicI8`], [`AtomicU16`], etc.\n@@ -14,6 +20,7 @@\n //! the memory barrier for that operation. These orderings are the\n //! same as the [C++20 atomic orderings][1]. For more information see the [nomicon][2].\n //!\n+//! [cpp]: https://en.cppreference.com/w/cpp/atomic\n //! [1]: https://en.cppreference.com/w/cpp/atomic/memory_order\n //! [2]: ../../../nomicon/atomics.html\n //!"}]}