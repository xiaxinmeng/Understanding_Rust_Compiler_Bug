{"sha": "7227a386a55a2239c46c7eb655f240934e25dd26", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyMjdhMzg2YTU1YTIyMzljNDZjN2ViNjU1ZjI0MDkzNGUyNWRkMjY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-14T23:36:09Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-14T23:36:09Z"}, "message": "typeck/expr.rs: extract out check_expr_box.", "tree": {"sha": "153a22e8a2f94ccd7a9983ca902b70aa2822e8ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/153a22e8a2f94ccd7a9983ca902b70aa2822e8ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7227a386a55a2239c46c7eb655f240934e25dd26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7227a386a55a2239c46c7eb655f240934e25dd26", "html_url": "https://github.com/rust-lang/rust/commit/7227a386a55a2239c46c7eb655f240934e25dd26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7227a386a55a2239c46c7eb655f240934e25dd26/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6cf4b3ac106a998bc76ec3dd09275092789da335", "url": "https://api.github.com/repos/rust-lang/rust/commits/6cf4b3ac106a998bc76ec3dd09275092789da335", "html_url": "https://github.com/rust-lang/rust/commit/6cf4b3ac106a998bc76ec3dd09275092789da335"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "15a09c0cc673153966e05f69211658ffaac2f8dd", "filename": "src/librustc_typeck/check/expr.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/7227a386a55a2239c46c7eb655f240934e25dd26/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7227a386a55a2239c46c7eb655f240934e25dd26/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs?ref=7227a386a55a2239c46c7eb655f240934e25dd26", "patch": "@@ -50,17 +50,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         let id = expr.hir_id;\n         match expr.node {\n             ExprKind::Box(ref subexpr) => {\n-                let expected_inner = expected.to_option(self).map_or(NoExpectation, |ty| {\n-                    match ty.sty {\n-                        ty::Adt(def, _) if def.is_box()\n-                            => Expectation::rvalue_hint(self, ty.boxed_ty()),\n-                        _ => NoExpectation\n-                    }\n-                });\n-                let referent_ty = self.check_expr_with_expectation(subexpr, expected_inner);\n-                tcx.mk_box(referent_ty)\n+                self.check_expr_box(subexpr, expected)\n             }\n-\n             ExprKind::Lit(ref lit) => {\n                 self.check_lit(&lit, expected)\n             }\n@@ -703,4 +694,16 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             }\n         }\n     }\n+\n+    fn check_expr_box(&self, expr: &'tcx hir::Expr, expected: Expectation<'tcx>) -> Ty<'tcx> {\n+        let expected_inner = expected.to_option(self).map_or(NoExpectation, |ty| {\n+            match ty.sty {\n+                ty::Adt(def, _) if def.is_box()\n+                    => Expectation::rvalue_hint(self, ty.boxed_ty()),\n+                _ => NoExpectation\n+            }\n+        });\n+        let referent_ty = self.check_expr_with_expectation(expr, expected_inner);\n+        self.tcx.mk_box(referent_ty)\n+    }\n }"}]}