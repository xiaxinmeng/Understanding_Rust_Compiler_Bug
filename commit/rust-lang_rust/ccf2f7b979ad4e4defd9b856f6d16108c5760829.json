{"sha": "ccf2f7b979ad4e4defd9b856f6d16108c5760829", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjZjJmN2I5NzlhZDRlNGRlZmQ5Yjg1NmY2ZDE2MTA4YzU3NjA4Mjk=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-05-04T18:29:08Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-05-04T18:29:08Z"}, "message": "make asm_comments something that you opt in to", "tree": {"sha": "531ca2350b7bff31c531464170648acf51ccfb97", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/531ca2350b7bff31c531464170648acf51ccfb97"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ccf2f7b979ad4e4defd9b856f6d16108c5760829", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ccf2f7b979ad4e4defd9b856f6d16108c5760829", "html_url": "https://github.com/rust-lang/rust/commit/ccf2f7b979ad4e4defd9b856f6d16108c5760829", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ccf2f7b979ad4e4defd9b856f6d16108c5760829/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf2d3c71e37d3b7aabe57a3d9ea3fada449715c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf2d3c71e37d3b7aabe57a3d9ea3fada449715c1", "html_url": "https://github.com/rust-lang/rust/commit/bf2d3c71e37d3b7aabe57a3d9ea3fada449715c1"}], "stats": {"total": 22, "additions": 8, "deletions": 14}, "files": [{"sha": "6ce62a1382d3dea39d5e4a92ee3d6423f5af875c", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ccf2f7b979ad4e4defd9b856f6d16108c5760829/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccf2f7b979ad4e4defd9b856f6d16108c5760829/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=ccf2f7b979ad4e4defd9b856f6d16108c5760829", "patch": "@@ -600,11 +600,6 @@ pub fn build_session_options(binary: @~str,\n     let target_opt = getopts::opt_maybe_str(matches, ~\"target\");\n     let target_feature_opt = getopts::opt_maybe_str(matches, ~\"target-feature\");\n     let save_temps = getopts::opt_present(matches, ~\"save-temps\");\n-    match output_type {\n-      // unless we're emitting huamn-readable assembly, omit comments.\n-      link::output_type_llvm_assembly | link::output_type_assembly => (),\n-      _ => debugging_opts |= session::no_asm_comments\n-    }\n     let opt_level = {\n         if (debugging_opts & session::no_opt) != 0 {\n             No"}, {"sha": "15067b785d9ca50201f6a1bea000383877dc08b5", "filename": "src/librustc/driver/session.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ccf2f7b979ad4e4defd9b856f6d16108c5760829/src%2Flibrustc%2Fdriver%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccf2f7b979ad4e4defd9b856f6d16108c5760829/src%2Flibrustc%2Fdriver%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fsession.rs?ref=ccf2f7b979ad4e4defd9b856f6d16108c5760829", "patch": "@@ -45,7 +45,7 @@ pub static time_passes: uint = 1 << 1;\n pub static count_llvm_insns: uint = 1 << 2;\n pub static time_llvm_passes: uint = 1 << 3;\n pub static trans_stats: uint = 1 << 4;\n-pub static no_asm_comments: uint = 1 << 5;\n+pub static asm_comments: uint = 1 << 5;\n pub static no_verify: uint = 1 << 6;\n pub static trace: uint = 1 << 7;\n pub static coherence: uint = 1 << 8;\n@@ -72,7 +72,7 @@ pub fn debugging_opts_map() -> ~[(~str, ~str, uint)] {\n      (~\"time-llvm-passes\", ~\"measure time of each LLVM pass\",\n       time_llvm_passes),\n      (~\"trans-stats\", ~\"gather trans statistics\", trans_stats),\n-     (~\"no-asm-comments\", ~\"omit comments when using -S\", no_asm_comments),\n+     (~\"asm-comments\", ~\"generate comments into the assembly (may change behavior)\", asm_comments),\n      (~\"no-verify\", ~\"skip LLVM verification\", no_verify),\n      (~\"trace\", ~\"emit trace logs\", trace),\n      (~\"coherence\", ~\"perform coherence checking\", coherence),\n@@ -267,7 +267,7 @@ pub impl Session_ {\n     }\n     fn trans_stats(@self) -> bool { self.debugging_opt(trans_stats) }\n     fn meta_stats(@self) -> bool { self.debugging_opt(meta_stats) }\n-    fn no_asm_comments(@self) -> bool { self.debugging_opt(no_asm_comments) }\n+    fn asm_comments(@self) -> bool { self.debugging_opt(asm_comments) }\n     fn no_verify(@self) -> bool { self.debugging_opt(no_verify) }\n     fn trace(@self) -> bool { self.debugging_opt(trace) }\n     fn coherence(@self) -> bool { self.debugging_opt(coherence) }"}, {"sha": "25d57662c6e073cda4733627faa25a2b1f2cad47", "filename": "src/librustc/middle/borrowck/check_loans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ccf2f7b979ad4e4defd9b856f6d16108c5760829/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccf2f7b979ad4e4defd9b856f6d16108c5760829/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs?ref=ccf2f7b979ad4e4defd9b856f6d16108c5760829", "patch": "@@ -374,7 +374,7 @@ pub impl<'self> CheckLoanCtxt<'self> {\n                     }\n                 }\n \n-                mc::cat_deref(base, deref_count, mc::gc_ptr(ast::m_mutbl)) => {\n+                mc::cat_deref(_, deref_count, mc::gc_ptr(ast::m_mutbl)) => {\n                     // Dynamically check writes to `@mut`\n \n                     let key = root_map_key {"}, {"sha": "2e5e53654a455adf4cfc513657f2cd73d4168d66", "filename": "src/librustc/middle/mem_categorization.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ccf2f7b979ad4e4defd9b856f6d16108c5760829/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccf2f7b979ad4e4defd9b856f6d16108c5760829/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs?ref=ccf2f7b979ad4e4defd9b856f6d16108c5760829", "patch": "@@ -378,7 +378,6 @@ pub impl mem_categorization_ctxt {\n         debug!(\"cat_expr: id=%d expr=%s\",\n                expr.id, pprust::expr_to_str(expr, self.tcx.sess.intr()));\n \n-        let tcx = self.tcx;\n         let expr_ty = self.expr_ty(expr);\n         match expr.node {\n           ast::expr_unary(ast::deref, e_base) => {"}, {"sha": "47363aa9263f21a634bcc82730f25c1eb36c58a5", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ccf2f7b979ad4e4defd9b856f6d16108c5760829/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccf2f7b979ad4e4defd9b856f6d16108c5760829/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=ccf2f7b979ad4e4defd9b856f6d16108c5760829", "patch": "@@ -1133,7 +1133,7 @@ pub fn trans_stmt(cx: block, s: &ast::stmt) -> block {\n     let _icx = cx.insn_ctxt(\"trans_stmt\");\n     debug!(\"trans_stmt(%s)\", stmt_to_str(s, cx.tcx().sess.intr()));\n \n-    if !cx.sess().no_asm_comments() {\n+    if cx.sess().asm_comments() {\n         add_span_comment(cx, s.span, stmt_to_str(s, cx.ccx().sess.intr()));\n     }\n "}, {"sha": "a9ed80d1eaaf765d8c575fd6d992ec1a76dc03ab", "filename": "src/librustc/middle/trans/build.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ccf2f7b979ad4e4defd9b856f6d16108c5760829/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccf2f7b979ad4e4defd9b856f6d16108c5760829/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuild.rs?ref=ccf2f7b979ad4e4defd9b856f6d16108c5760829", "patch": "@@ -846,7 +846,7 @@ pub fn _UndefReturn(cx: block, Fn: ValueRef) -> ValueRef {\n \n pub fn add_span_comment(bcx: block, sp: span, text: &str) {\n     let ccx = bcx.ccx();\n-    if !ccx.sess.no_asm_comments() {\n+    if ccx.sess.asm_comments() {\n         let s = fmt!(\"%s (%s)\", text, ccx.sess.codemap.span_to_str(sp));\n         debug!(\"%s\", copy s);\n         add_comment(bcx, s);\n@@ -856,7 +856,7 @@ pub fn add_span_comment(bcx: block, sp: span, text: &str) {\n pub fn add_comment(bcx: block, text: &str) {\n     unsafe {\n         let ccx = bcx.ccx();\n-        if !ccx.sess.no_asm_comments() {\n+        if ccx.sess.asm_comments() {\n             let sanitized = str::replace(text, ~\"$\", ~\"\");\n             let comment_text = ~\"# \" +\n                 str::replace(sanitized, ~\"\\n\", ~\"\\n\\t# \");"}, {"sha": "acd52907b9f73adb056b12e17a65e370176e3ff1", "filename": "src/librustc/middle/trans/closure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ccf2f7b979ad4e4defd9b856f6d16108c5760829/src%2Flibrustc%2Fmiddle%2Ftrans%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccf2f7b979ad4e4defd9b856f6d16108c5760829/src%2Flibrustc%2Fmiddle%2Ftrans%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fclosure.rs?ref=ccf2f7b979ad4e4defd9b856f6d16108c5760829", "patch": "@@ -224,7 +224,7 @@ pub fn store_environment(bcx: block,\n     for vec::eachi(bound_values) |i, bv| {\n         debug!(\"Copy %s into closure\", bv.to_str(ccx));\n \n-        if !ccx.sess.no_asm_comments() {\n+        if ccx.sess.asm_comments() {\n             add_comment(bcx, fmt!(\"Copy %s into closure\",\n                                   bv.to_str(ccx)));\n         }"}]}