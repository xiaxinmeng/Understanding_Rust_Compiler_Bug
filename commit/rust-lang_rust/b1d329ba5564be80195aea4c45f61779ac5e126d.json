{"sha": "b1d329ba5564be80195aea4c45f61779ac5e126d", "node_id": "C_kwDOAAsO6NoAKGIxZDMyOWJhNTU2NGJlODAxOTVhZWE0YzQ1ZjYxNzc5YWM1ZTEyNmQ", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2021-12-03T02:06:36Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2021-12-08T23:01:29Z"}, "message": "Remove redundant [..]s", "tree": {"sha": "274ffdbd4f5dc244dd64e7772fa29c2d2223a691", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/274ffdbd4f5dc244dd64e7772fa29c2d2223a691"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1d329ba5564be80195aea4c45f61779ac5e126d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1d329ba5564be80195aea4c45f61779ac5e126d", "html_url": "https://github.com/rust-lang/rust/commit/b1d329ba5564be80195aea4c45f61779ac5e126d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1d329ba5564be80195aea4c45f61779ac5e126d/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e7bc96321b26faf8f4dcf6a54fa590f7b9402d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e7bc96321b26faf8f4dcf6a54fa590f7b9402d1", "html_url": "https://github.com/rust-lang/rust/commit/2e7bc96321b26faf8f4dcf6a54fa590f7b9402d1"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "4962d0161525631d28dc2adb19655c3e24ae8725", "filename": "src/back/write.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b1d329ba5564be80195aea4c45f61779ac5e126d/src%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1d329ba5564be80195aea4c45f61779ac5e126d/src%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fback%2Fwrite.rs?ref=b1d329ba5564be80195aea4c45f61779ac5e126d", "patch": "@@ -32,7 +32,7 @@ pub(crate) unsafe fn codegen(cgcx: &CodegenContext<GccCodegenBackend>, _diag_han\n         if config.emit_asm {\n             let _timer = cgcx\n                 .prof\n-                .generic_activity_with_arg(\"LLVM_module_codegen_emit_asm\", &module.name[..]);\n+                .generic_activity_with_arg(\"LLVM_module_codegen_emit_asm\", &*module.name);\n             let path = cgcx.output_filenames.temp_path(OutputType::Assembly, module_name);\n             context.compile_to_file(OutputKind::Assembler, path.to_str().expect(\"path to str\"));\n         }\n@@ -41,7 +41,7 @@ pub(crate) unsafe fn codegen(cgcx: &CodegenContext<GccCodegenBackend>, _diag_han\n             EmitObj::ObjectCode(_) => {\n                 let _timer = cgcx\n                     .prof\n-                    .generic_activity_with_arg(\"LLVM_module_codegen_emit_obj\", &module.name[..]);\n+                    .generic_activity_with_arg(\"LLVM_module_codegen_emit_obj\", &*module.name);\n                 match &*module.name {\n                     \"std_example.7rcbfp3g-cgu.15\" => {\n                         println!(\"Dumping reproducer {}\", module.name);"}]}