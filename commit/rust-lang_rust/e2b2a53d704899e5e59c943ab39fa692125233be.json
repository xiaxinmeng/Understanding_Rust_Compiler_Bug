{"sha": "e2b2a53d704899e5e59c943ab39fa692125233be", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyYjJhNTNkNzA0ODk5ZTVlNTljOTQzYWIzOWZhNjkyMTI1MjMzYmU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-03-30T08:56:24Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-03-30T13:05:59Z"}, "message": "Fallout in tests: largely changes to error messages.", "tree": {"sha": "6b0ba0d42e2ab739c2369d3c572ae0c9c64a7e27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b0ba0d42e2ab739c2369d3c572ae0c9c64a7e27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2b2a53d704899e5e59c943ab39fa692125233be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2b2a53d704899e5e59c943ab39fa692125233be", "html_url": "https://github.com/rust-lang/rust/commit/e2b2a53d704899e5e59c943ab39fa692125233be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2b2a53d704899e5e59c943ab39fa692125233be/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c92bdcb232da3973a8a548e6b2044b610e286210", "url": "https://api.github.com/repos/rust-lang/rust/commits/c92bdcb232da3973a8a548e6b2044b610e286210", "html_url": "https://github.com/rust-lang/rust/commit/c92bdcb232da3973a8a548e6b2044b610e286210"}], "stats": {"total": 88, "additions": 37, "deletions": 51}, "files": [{"sha": "72dfc75f41b969747eba45465ab47b37a773825d", "filename": "src/test/auxiliary/lang-item-public.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e2b2a53d704899e5e59c943ab39fa692125233be/src%2Ftest%2Fauxiliary%2Flang-item-public.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2b2a53d704899e5e59c943ab39fa692125233be/src%2Ftest%2Fauxiliary%2Flang-item-public.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Flang-item-public.rs?ref=e2b2a53d704899e5e59c943ab39fa692125233be", "patch": "@@ -35,18 +35,19 @@ pub trait Copy : PhantomFn<Self> {\n \n #[lang=\"rem\"]\n pub trait Rem<RHS=Self> {\n-    /// The resulting type after applying the `%` operator\n-    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     type Output = Self;\n-\n-    /// The method for the `%` operator\n-    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn rem(self, rhs: RHS) -> Self::Output;\n }\n \n-impl Rem for i32 {\n-    type Output = i32;\n+impl Rem for isize {\n+    type Output = isize;\n \n     #[inline]\n-    fn rem(self, other: i32) -> i32 { self % other }\n+    fn rem(self, other: isize) -> isize {\n+        // if you use `self % other` here, as one would expect, you\n+        // get back an error because of potential failure/overflow,\n+        // which tries to invoke error fns that don't have the\n+        // appropriate signatures anymore. So...just return 0.\n+        0\n+    }\n }"}, {"sha": "fef27af59571b186748d84cc7aed01b6d41b5d48", "filename": "src/test/compile-fail/assignment-operator-unimplemented.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e2b2a53d704899e5e59c943ab39fa692125233be/src%2Ftest%2Fcompile-fail%2Fassignment-operator-unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2b2a53d704899e5e59c943ab39fa692125233be/src%2Ftest%2Fcompile-fail%2Fassignment-operator-unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fassignment-operator-unimplemented.rs?ref=e2b2a53d704899e5e59c943ab39fa692125233be", "patch": "@@ -13,5 +13,5 @@ struct Foo;\n fn main() {\n   let mut a = Foo;\n   let ref b = Foo;\n-  a += *b; //~ Error: binary assignment operation `+=` cannot be applied to type `Foo`\n+  a += *b; //~ Error: binary assignment operation `+=` cannot be applied to types `Foo` and `Foo`\n }"}, {"sha": "04170779ed2f6b05ae583cbdd7019c1bfa8acd6a", "filename": "src/test/compile-fail/associated-types-ICE-when-projecting-out-of-err.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e2b2a53d704899e5e59c943ab39fa692125233be/src%2Ftest%2Fcompile-fail%2Fassociated-types-ICE-when-projecting-out-of-err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2b2a53d704899e5e59c943ab39fa692125233be/src%2Ftest%2Fcompile-fail%2Fassociated-types-ICE-when-projecting-out-of-err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fassociated-types-ICE-when-projecting-out-of-err.rs?ref=e2b2a53d704899e5e59c943ab39fa692125233be", "patch": "@@ -35,5 +35,6 @@ trait Add<RHS=Self> {\n fn ice<A>(a: A) {\n     let r = loop {};\n     r = r + a;\n-    //~^ ERROR binary operation `+` cannot be applied to type `A`\n+    //~^ ERROR not implemented\n+    //~| ERROR not implemented\n }"}, {"sha": "f3fb5a08c854189ecbd74d5e1302c33e1dae045e", "filename": "src/test/compile-fail/binop-logic-float.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e2b2a53d704899e5e59c943ab39fa692125233be/src%2Ftest%2Fcompile-fail%2Fbinop-logic-float.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2b2a53d704899e5e59c943ab39fa692125233be/src%2Ftest%2Fcompile-fail%2Fbinop-logic-float.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbinop-logic-float.rs?ref=e2b2a53d704899e5e59c943ab39fa692125233be", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:`||` cannot be applied to type `f32`\n-\n fn main() { let x = 1.0_f32 || 2.0_f32; }\n+//~^ ERROR mismatched types\n+//~| ERROR mismatched types\n+"}, {"sha": "f5e53f84c16e6472dc4b39c3aca8a084cba288e7", "filename": "src/test/compile-fail/binop-logic-int.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2b2a53d704899e5e59c943ab39fa692125233be/src%2Ftest%2Fcompile-fail%2Fbinop-logic-int.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2b2a53d704899e5e59c943ab39fa692125233be/src%2Ftest%2Fcompile-fail%2Fbinop-logic-int.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbinop-logic-int.rs?ref=e2b2a53d704899e5e59c943ab39fa692125233be", "patch": "@@ -8,6 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:`&&` cannot be applied to type `_`\n-\n fn main() { let x = 1 && 2; }\n+//~^ ERROR mismatched types\n+//~| ERROR mismatched types"}, {"sha": "27be1ada445505dbd4c54d5aad0996cf178135ea", "filename": "src/test/compile-fail/fn-compare-mismatch.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e2b2a53d704899e5e59c943ab39fa692125233be/src%2Ftest%2Fcompile-fail%2Ffn-compare-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2b2a53d704899e5e59c943ab39fa692125233be/src%2Ftest%2Fcompile-fail%2Ffn-compare-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffn-compare-mismatch.rs?ref=e2b2a53d704899e5e59c943ab39fa692125233be", "patch": "@@ -13,4 +13,5 @@ fn main() {\n     fn g() { }\n     let x = f == g;\n     //~^ ERROR binary operation `==` cannot be applied\n+    //~| ERROR mismatched types\n }"}, {"sha": "40fc6b1ed6aaacebf6a682e43b67d369b5dff5ab", "filename": "src/test/compile-fail/issue-11771.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e2b2a53d704899e5e59c943ab39fa692125233be/src%2Ftest%2Fcompile-fail%2Fissue-11771.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2b2a53d704899e5e59c943ab39fa692125233be/src%2Ftest%2Fcompile-fail%2Fissue-11771.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-11771.rs?ref=e2b2a53d704899e5e59c943ab39fa692125233be", "patch": "@@ -11,19 +11,13 @@\n fn main() {\n     let x = ();\n     1 +\n-    x //~  ERROR mismatched types\n-      //~| expected `_`\n-      //~| found `()`\n-      //~| expected integral variable\n-      //~| found ()\n+    x //~^ ERROR E0277\n+      //~| ERROR E0277\n     ;\n \n     let x: () = ();\n     1 +\n-    x //~  ERROR mismatched types\n-      //~| expected `_`\n-      //~| found `()`\n-      //~| expected integral variable\n-      //~| found ()\n+    x //~^ ERROR E0277\n+      //~| ERROR E0277\n     ;\n }"}, {"sha": "ea305c96af4a1efa39f788effa5df7a31b99aad8", "filename": "src/test/compile-fail/issue-2149.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e2b2a53d704899e5e59c943ab39fa692125233be/src%2Ftest%2Fcompile-fail%2Fissue-2149.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2b2a53d704899e5e59c943ab39fa692125233be/src%2Ftest%2Fcompile-fail%2Fissue-2149.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2149.rs?ref=e2b2a53d704899e5e59c943ab39fa692125233be", "patch": "@@ -16,7 +16,8 @@ impl<A> vec_monad<A> for Vec<A> {\n     fn bind<B, F>(&self, mut f: F) where F: FnMut(A) -> Vec<B> {\n         let mut r = panic!();\n         for elt in self { r = r + f(*elt); }\n-        //~^ ERROR binary operation `+` cannot be applied to type `collections::vec::Vec<B>`\n+        //~^ ERROR E0277\n+        //~| ERROR E0277\n    }\n }\n fn main() {"}, {"sha": "1ebef06008ffa4f3c6b345dee1cd6110d7d62132", "filename": "src/test/compile-fail/issue-5239-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e2b2a53d704899e5e59c943ab39fa692125233be/src%2Ftest%2Fcompile-fail%2Fissue-5239-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2b2a53d704899e5e59c943ab39fa692125233be/src%2Ftest%2Fcompile-fail%2Fissue-5239-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-5239-1.rs?ref=e2b2a53d704899e5e59c943ab39fa692125233be", "patch": "@@ -12,5 +12,5 @@\n \n fn main() {\n     let x = |ref x: isize| -> isize { x += 1; };\n-    //~^ ERROR binary assignment operation `+=` cannot be applied to type `&isize`\n+    //~^ ERROR E0368\n }"}, {"sha": "24b66213b39bd410cdffb9d011bd6b38caa63ab4", "filename": "src/test/compile-fail/shift-various-bad-types.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e2b2a53d704899e5e59c943ab39fa692125233be/src%2Ftest%2Fcompile-fail%2Fshift-various-bad-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2b2a53d704899e5e59c943ab39fa692125233be/src%2Ftest%2Fcompile-fail%2Fshift-various-bad-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fshift-various-bad-types.rs?ref=e2b2a53d704899e5e59c943ab39fa692125233be", "patch": "@@ -17,19 +17,19 @@ struct Panolpy {\n \n fn foo(p: &Panolpy) {\n     22 >> p.char;\n-    //~^ ERROR right-hand-side of a shift operation must have integral type\n+    //~^ ERROR E0277\n+    //~| ERROR E0277\n \n     22 >> p.str;\n-    //~^ ERROR right-hand-side of a shift operation must have integral type\n+    //~^ ERROR E0277\n+    //~| ERROR E0277\n \n     22 >> p;\n-    //~^ ERROR right-hand-side of a shift operation must have integral type\n+    //~^ ERROR E0277\n+    //~| ERROR E0277\n \n-    // We could be more accepting in the case of a type not yet inferred, but not\n-    // known to be an integer, but meh.\n     let x;\n-    22 >> x;\n-    //~^ ERROR the type of this value must be known in this context\n+    22 >> x; // ambiguity error winds up being suppressed\n \n     22 >> 1;\n     // Integer literal types are OK"}, {"sha": "feffe5c0b06c8e09fc10dcd75c68c9cec4ff21f6", "filename": "src/test/compile-fail/simd-binop.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e2b2a53d704899e5e59c943ab39fa692125233be/src%2Ftest%2Fcompile-fail%2Fsimd-binop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2b2a53d704899e5e59c943ab39fa692125233be/src%2Ftest%2Fcompile-fail%2Fsimd-binop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsimd-binop.rs?ref=e2b2a53d704899e5e59c943ab39fa692125233be", "patch": "@@ -10,6 +10,7 @@\n \n // ignore-tidy-linelength\n \n+#![feature(core)]\n \n use std::simd::f32x4;\n "}, {"sha": "75a6b919342bf81b4f447bb6fba66eb3b1827610", "filename": "src/test/pretty/issue-929.rs", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c92bdcb232da3973a8a548e6b2044b610e286210/src%2Ftest%2Fpretty%2Fissue-929.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c92bdcb232da3973a8a548e6b2044b610e286210/src%2Ftest%2Fpretty%2Fissue-929.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fissue-929.rs?ref=c92bdcb232da3973a8a548e6b2044b610e286210", "patch": "@@ -1,13 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-fn f() { if (1 == panic!()) { } else { } }\n-\n-fn main() { }"}, {"sha": "8cabd3b326296aa34362aeedaa51285fb63bd50b", "filename": "src/test/run-fail/binop-fail-3.rs", "status": "renamed", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e2b2a53d704899e5e59c943ab39fa692125233be/src%2Ftest%2Frun-fail%2Fbinop-fail-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2b2a53d704899e5e59c943ab39fa692125233be/src%2Ftest%2Frun-fail%2Fbinop-fail-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fbinop-fail-3.rs?ref=e2b2a53d704899e5e59c943ab39fa692125233be", "patch": "@@ -8,9 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// error-pattern:quux\n fn foo() -> ! { panic!(\"quux\"); }\n fn main() {\n-    foo() //~ ERROR the type of this value must be known in this context\n-    ==\n-    foo();\n+    foo() == foo(); // these types wind up being defaulted to ()\n }", "previous_filename": "src/test/compile-fail/binop-fail-3.rs"}, {"sha": "4d502cb2106b116eaa6eb28e8cedfcfcd72449be", "filename": "src/test/run-fail/bounds-check-no-overflow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e2b2a53d704899e5e59c943ab39fa692125233be/src%2Ftest%2Frun-fail%2Fbounds-check-no-overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2b2a53d704899e5e59c943ab39fa692125233be/src%2Ftest%2Frun-fail%2Fbounds-check-no-overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fbounds-check-no-overflow.rs?ref=e2b2a53d704899e5e59c943ab39fa692125233be", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:index out of bounds: the len is 3 but the index is\n+// error-pattern:assertion failed: index < self.len()\n \n use std::usize;\n use std::mem::size_of;"}, {"sha": "f5b9bd4fbaa69b800f332b2e333afe0975358c90", "filename": "src/test/run-pass/lang-item-public.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e2b2a53d704899e5e59c943ab39fa692125233be/src%2Ftest%2Frun-pass%2Flang-item-public.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2b2a53d704899e5e59c943ab39fa692125233be/src%2Ftest%2Frun-pass%2Flang-item-public.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flang-item-public.rs?ref=e2b2a53d704899e5e59c943ab39fa692125233be", "patch": "@@ -46,5 +46,5 @@ extern {}\n \n #[start]\n fn main(_: isize, _: *const *const u8) -> isize {\n-    1 % 1\n+    1_isize % 1_isize\n }"}]}