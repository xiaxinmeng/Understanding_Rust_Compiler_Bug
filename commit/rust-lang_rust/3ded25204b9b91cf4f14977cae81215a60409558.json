{"sha": "3ded25204b9b91cf4f14977cae81215a60409558", "node_id": "C_kwDOAAsO6NoAKDNkZWQyNTIwNGI5YjkxY2Y0ZjE0OTc3Y2FlODEyMTVhNjA0MDk1NTg", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-03-09T14:13:04Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-03-09T14:13:04Z"}, "message": "implement `SnapshotParser` struct", "tree": {"sha": "312f1406768f11a1d478b1eb9f2a8f1017a9a1e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/312f1406768f11a1d478b1eb9f2a8f1017a9a1e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ded25204b9b91cf4f14977cae81215a60409558", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ded25204b9b91cf4f14977cae81215a60409558", "html_url": "https://github.com/rust-lang/rust/commit/3ded25204b9b91cf4f14977cae81215a60409558", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ded25204b9b91cf4f14977cae81215a60409558/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "192acb4b98bb027cb09eaeb8906dbc94a76b9b66", "url": "https://api.github.com/repos/rust-lang/rust/commits/192acb4b98bb027cb09eaeb8906dbc94a76b9b66", "html_url": "https://github.com/rust-lang/rust/commit/192acb4b98bb027cb09eaeb8906dbc94a76b9b66"}], "stats": {"total": 39, "additions": 33, "deletions": 6}, "files": [{"sha": "4360399d4470c8520dc72b35623f0ede87b9c9bc", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/3ded25204b9b91cf4f14977cae81215a60409558/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ded25204b9b91cf4f14977cae81215a60409558/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=3ded25204b9b91cf4f14977cae81215a60409558", "patch": "@@ -5,6 +5,7 @@ use super::{\n     SemiColonMode, SeqSep, TokenExpectType, TokenType,\n };\n \n+use crate::lexer::UnmatchedBrace;\n use rustc_ast as ast;\n use rustc_ast::ptr::P;\n use rustc_ast::token::{self, Lit, LitKind, TokenKind};\n@@ -21,6 +22,7 @@ use rustc_errors::{Applicability, DiagnosticBuilder, Handler, PResult};\n use rustc_span::source_map::Spanned;\n use rustc_span::symbol::{kw, Ident};\n use rustc_span::{MultiSpan, Span, SpanSnippetError, DUMMY_SP};\n+use std::ops::{Deref, DerefMut};\n \n use std::mem::take;\n \n@@ -154,6 +156,25 @@ impl AttemptLocalParseRecovery {\n     }\n }\n \n+pub(super) struct SnapshotParser<'a> {\n+    parser: Parser<'a>,\n+    unclosed_delims: Vec<UnmatchedBrace>,\n+}\n+\n+impl<'a> Deref for SnapshotParser<'a> {\n+    type Target = Parser<'a>;\n+\n+    fn deref(&self) -> &Self::Target {\n+        &self.parser\n+    }\n+}\n+\n+impl<'a> DerefMut for SnapshotParser<'a> {\n+    fn deref_mut(&mut self) -> &mut Self::Target {\n+        &mut self.parser\n+    }\n+}\n+\n impl<'a> Parser<'a> {\n     pub(super) fn span_err<S: Into<MultiSpan>>(\n         &self,\n@@ -179,11 +200,17 @@ impl<'a> Parser<'a> {\n         &self.sess.span_diagnostic\n     }\n \n-    pub(super) fn diagnostic_snapshot(&self) -> Self {\n+    pub(super) fn restore(&mut self, snapshot: SnapshotParser<'a>) {\n+        *self = snapshot.parser;\n+        self.unclosed_delims.extend(snapshot.unclosed_delims.clone());\n+    }\n+\n+    pub(super) fn diagnostic_snapshot(&self) -> SnapshotParser<'a> {\n         let mut snapshot = self.clone();\n+        let unclosed_delims = self.unclosed_delims.clone();\n         // initialize unclosed_delims to avoid duplicate errors.\n-        snapshot.unclosed_delims = vec![];\n-        snapshot\n+        snapshot.unclosed_delims.clear();\n+        SnapshotParser { parser: snapshot, unclosed_delims }\n     }\n \n     pub(super) fn span_to_snippet(&self, span: Span) -> Result<String, SpanSnippetError> {"}, {"sha": "12d50fdba10a69bc60aa2d8fcaf9dd661e4c637e", "filename": "compiler/rustc_parse/src/parser/path.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3ded25204b9b91cf4f14977cae81215a60409558/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ded25204b9b91cf4f14977cae81215a60409558/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpath.rs?ref=3ded25204b9b91cf4f14977cae81215a60409558", "patch": "@@ -630,9 +630,9 @@ impl<'a> Parser<'a> {\n                 Ok(ty) => GenericArg::Type(ty),\n                 Err(err) => {\n                     if is_const_fn {\n-                        if let Ok(expr) = snapshot.parse_expr_res(Restrictions::CONST_EXPR, None) {\n-                            snapshot.unclosed_delims.extend(self.unclosed_delims.clone());\n-                            *self = snapshot;\n+                        if let Ok(expr) = (*snapshot).parse_expr_res(Restrictions::CONST_EXPR, None)\n+                        {\n+                            self.restore(snapshot);\n                             return Ok(Some(self.dummy_const_arg_needs_braces(err, expr.span)));\n                         }\n                     }"}]}