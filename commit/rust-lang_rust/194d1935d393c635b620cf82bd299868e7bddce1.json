{"sha": "194d1935d393c635b620cf82bd299868e7bddce1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5NGQxOTM1ZDM5M2M2MzViNjIwY2Y4MmJkMjk5ODY4ZTdiZGRjZTE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-20T23:39:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-20T23:39:11Z"}, "message": "Rollup merge of #65314 - tmiasko:rustdoc-z, r=ollie27\n\nrustdoc: forward -Z options to rustc\n\nCurrently rustdoc does not forward `-Z` options to rustc when building\ntest executables. This makes impossible to use rustdoc to run test\nsamples when crate under test is instrumented with one of sanitizers\n`-Zsanitizer=...`, since the final linking step will not include\nsanitizer runtime library.\n\nForward `-Z` options to rustc to solve the issue.\n\nHelps with #43031.", "tree": {"sha": "1a0e38a4f2ca0422d0622b6b8759ce2bafd79e0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a0e38a4f2ca0422d0622b6b8759ce2bafd79e0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/194d1935d393c635b620cf82bd299868e7bddce1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdrPAgCRBK7hj4Ov3rIwAAdHIIAH+zsxIqpCS/di7ogpM2ihH5\nX/D00j4EEYjn+e4OJ9OkVU7k9BrgDGfKPeQm5pgbiUT/Plgqhm741QLs8WRBn6k0\nYWHlKiOlvTdzUzbAqaSN+BR+1ejGorDsGrr9czyTeTKPmcHFMrd5AUnrdVAcY40P\nvgxg128SB460lBFg6vWIy1f6JtLqeF0sr1qhb46nfGhZapvFtSjYNE6QJAEb4FAB\nKer+ocpF56fWR5gTNXpaa/55VVlqMDfSlY3ZUjsXTi3Hu8QhNqZvxGS6eh+/rUQT\nyi4BR+uPk/ZudL02kKIHzm/4mqCq/Xej8wbOLczQZqG/rCvqyczWvcHcfmX/O1U=\n=QiQc\n-----END PGP SIGNATURE-----\n", "payload": "tree 1a0e38a4f2ca0422d0622b6b8759ce2bafd79e0b\nparent 7979016aff545f7b41cc517031026020b340989d\nparent 5db17335a15e5e290bd7505cc37b2177c86b51c1\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1571614751 +0200\ncommitter GitHub <noreply@github.com> 1571614751 +0200\n\nRollup merge of #65314 - tmiasko:rustdoc-z, r=ollie27\n\nrustdoc: forward -Z options to rustc\n\nCurrently rustdoc does not forward `-Z` options to rustc when building\ntest executables. This makes impossible to use rustdoc to run test\nsamples when crate under test is instrumented with one of sanitizers\n`-Zsanitizer=...`, since the final linking step will not include\nsanitizer runtime library.\n\nForward `-Z` options to rustc to solve the issue.\n\nHelps with #43031.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/194d1935d393c635b620cf82bd299868e7bddce1", "html_url": "https://github.com/rust-lang/rust/commit/194d1935d393c635b620cf82bd299868e7bddce1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/194d1935d393c635b620cf82bd299868e7bddce1/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7979016aff545f7b41cc517031026020b340989d", "url": "https://api.github.com/repos/rust-lang/rust/commits/7979016aff545f7b41cc517031026020b340989d", "html_url": "https://github.com/rust-lang/rust/commit/7979016aff545f7b41cc517031026020b340989d"}, {"sha": "5db17335a15e5e290bd7505cc37b2177c86b51c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/5db17335a15e5e290bd7505cc37b2177c86b51c1", "html_url": "https://github.com/rust-lang/rust/commit/5db17335a15e5e290bd7505cc37b2177c86b51c1"}], "stats": {"total": 54, "additions": 39, "deletions": 15}, "files": [{"sha": "0b8d4d6c302f19bc8986c43dafb5d8374fe090c7", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/194d1935d393c635b620cf82bd299868e7bddce1/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/194d1935d393c635b620cf82bd299868e7bddce1/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=194d1935d393c635b620cf82bd299868e7bddce1", "patch": "@@ -53,6 +53,8 @@ pub struct Options {\n     pub codegen_options_strs: Vec<String>,\n     /// Debugging (`-Z`) options to pass to the compiler.\n     pub debugging_options: DebuggingOptions,\n+    /// Debugging (`-Z`) options strings to pass to the compiler.\n+    pub debugging_options_strs: Vec<String>,\n     /// The target used to compile the crate against.\n     pub target: TargetTriple,\n     /// Edition used when reading the crate. Defaults to \"2015\". Also used by default when\n@@ -478,6 +480,7 @@ impl Options {\n         let generate_redirect_pages = matches.opt_present(\"generate-redirect-pages\");\n         let test_builder = matches.opt_str(\"test-builder\").map(PathBuf::from);\n         let codegen_options_strs = matches.opt_strs(\"C\");\n+        let debugging_options_strs = matches.opt_strs(\"Z\");\n         let lib_strs = matches.opt_strs(\"L\");\n         let extern_strs = matches.opt_strs(\"extern\");\n         let runtool = matches.opt_str(\"runtool\");\n@@ -499,6 +502,7 @@ impl Options {\n             codegen_options,\n             codegen_options_strs,\n             debugging_options,\n+            debugging_options_strs,\n             target,\n             edition,\n             maybe_sysroot,"}, {"sha": "8afc50f83bfaf67d0e434b7e1a871addbe6aa171", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/194d1935d393c635b620cf82bd299868e7bddce1/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/194d1935d393c635b620cf82bd299868e7bddce1/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=194d1935d393c635b620cf82bd299868e7bddce1", "patch": "@@ -280,6 +280,9 @@ fn run_test(\n     for codegen_options_str in &options.codegen_options_strs {\n         compiler.arg(\"-C\").arg(&codegen_options_str);\n     }\n+    for debugging_option_str in &options.debugging_options_strs {\n+        compiler.arg(\"-Z\").arg(&debugging_option_str);\n+    }\n     if no_run {\n         compiler.arg(\"--emit=metadata\");\n     }"}, {"sha": "a8753d14de22f958f656fe431c3c80b279b84de6", "filename": "src/test/rustdoc-ui/failed-doctest-missing-codes.stdout", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/194d1935d393c635b620cf82bd299868e7bddce1/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-missing-codes.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/194d1935d393c635b620cf82bd299868e7bddce1/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-missing-codes.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-missing-codes.stdout?ref=194d1935d393c635b620cf82bd299868e7bddce1", "patch": "@@ -6,13 +6,13 @@ failures:\n \n ---- $DIR/failed-doctest-missing-codes.rs - Foo (line 8) stdout ----\n error[E0308]: mismatched types\n- --> $DIR/failed-doctest-missing-codes.rs:9:13\n-  |\n-3 | let x: () = 5i32;\n-  |             ^^^^ expected (), found i32\n-  |\n-  = note: expected type `()`\n-             found type `i32`\n+  --> $DIR/failed-doctest-missing-codes.rs:9:13\n+   |\n+LL | let x: () = 5i32;\n+   |             ^^^^ expected (), found i32\n+   |\n+   = note: expected type `()`\n+              found type `i32`\n \n error: aborting due to previous error\n "}, {"sha": "9887d07a3eb6e9bbd8d4681513089087c4908cc2", "filename": "src/test/rustdoc-ui/failed-doctest-output.stdout", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/194d1935d393c635b620cf82bd299868e7bddce1/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-output.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/194d1935d393c635b620cf82bd299868e7bddce1/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-output.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-output.stdout?ref=194d1935d393c635b620cf82bd299868e7bddce1", "patch": "@@ -7,10 +7,10 @@ failures:\n \n ---- $DIR/failed-doctest-output.rs - OtherStruct (line 21) stdout ----\n error[E0425]: cannot find value `no` in this scope\n- --> $DIR/failed-doctest-output.rs:22:1\n-  |\n-3 | no\n-  | ^^ not found in this scope\n+  --> $DIR/failed-doctest-output.rs:22:1\n+   |\n+LL | no\n+   | ^^ not found in this scope\n \n error: aborting due to previous error\n "}, {"sha": "4ea6455d3aa4cf864a788503d48a83890ba93371", "filename": "src/test/rustdoc-ui/unparseable-doc-test.stdout", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/194d1935d393c635b620cf82bd299868e7bddce1/src%2Ftest%2Frustdoc-ui%2Funparseable-doc-test.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/194d1935d393c635b620cf82bd299868e7bddce1/src%2Ftest%2Frustdoc-ui%2Funparseable-doc-test.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Funparseable-doc-test.stdout?ref=194d1935d393c635b620cf82bd299868e7bddce1", "patch": "@@ -6,10 +6,10 @@ failures:\n \n ---- $DIR/unparseable-doc-test.rs - foo (line 6) stdout ----\n error: unterminated double quote string\n- --> $DIR/unparseable-doc-test.rs:8:1\n-  |\n-2 | \"unterminated\n-  | ^^^^^^^^^^^^^\n+  --> $DIR/unparseable-doc-test.rs:8:1\n+   |\n+LL | \"unterminated\n+   | ^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "6af9ed3e33f661e44c0105494b858ec88c3e717a", "filename": "src/test/rustdoc/sanitizer-option.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/194d1935d393c635b620cf82bd299868e7bddce1/src%2Ftest%2Frustdoc%2Fsanitizer-option.rs", "raw_url": "https://github.com/rust-lang/rust/raw/194d1935d393c635b620cf82bd299868e7bddce1/src%2Ftest%2Frustdoc%2Fsanitizer-option.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsanitizer-option.rs?ref=194d1935d393c635b620cf82bd299868e7bddce1", "patch": "@@ -0,0 +1,17 @@\n+// needs-sanitizer-support\n+// compile-flags: --test -Z sanitizer=address\n+//\n+// #43031: Verify that rustdoc passes `-Z` options to rustc. Use an extern\n+// function that is provided by the sanitizer runtime, if flag is not passed\n+// correctly, then linking will fail.\n+\n+/// ```\n+/// extern {\n+///     fn __sanitizer_print_stack_trace();\n+/// }\n+///\n+/// fn main() {\n+///     unsafe { __sanitizer_print_stack_trace() };\n+/// }\n+/// ```\n+pub fn z_flag_is_passed_to_rustc() {}"}]}