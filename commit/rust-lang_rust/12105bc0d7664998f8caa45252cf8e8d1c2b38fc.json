{"sha": "12105bc0d7664998f8caa45252cf8e8d1c2b38fc", "node_id": "C_kwDOAAsO6NoAKDEyMTA1YmMwZDc2NjQ5OThmOGNhYTQ1MjUyY2Y4ZThkMWMyYjM4ZmM", "commit": {"author": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2022-09-30T21:45:31Z"}, "committer": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2022-09-30T22:23:37Z"}, "message": "Fix pointer comparison", "tree": {"sha": "5b9280dbc69744dbde15c735f5082f1312cdf030", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b9280dbc69744dbde15c735f5082f1312cdf030"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12105bc0d7664998f8caa45252cf8e8d1c2b38fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12105bc0d7664998f8caa45252cf8e8d1c2b38fc", "html_url": "https://github.com/rust-lang/rust/commit/12105bc0d7664998f8caa45252cf8e8d1c2b38fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12105bc0d7664998f8caa45252cf8e8d1c2b38fc/comments", "author": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af28dec7d151de3e0e00928ce66d51d8aaa3fbdb", "url": "https://api.github.com/repos/rust-lang/rust/commits/af28dec7d151de3e0e00928ce66d51d8aaa3fbdb", "html_url": "https://github.com/rust-lang/rust/commit/af28dec7d151de3e0e00928ce66d51d8aaa3fbdb"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "0cf1204791d336c75afe591660e994e7e94fb36a", "filename": "src/int.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/12105bc0d7664998f8caa45252cf8e8d1c2b38fc/src%2Fint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12105bc0d7664998f8caa45252cf8e8d1c2b38fc/src%2Fint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fint.rs?ref=12105bc0d7664998f8caa45252cf8e8d1c2b38fc", "patch": "@@ -389,18 +389,22 @@ impl<'a, 'gcc, 'tcx> Builder<'a, 'gcc, 'tcx> {\n                 };\n             self.context.new_comparison(None, op, cmp, self.context.new_rvalue_from_int(self.int_type, limit))\n         }\n+        else if a_type.get_pointee().is_some() && b_type.get_pointee().is_some() {\n+            // NOTE: gcc cannot compare pointers to different objects, but rustc does that, so cast them to usize.\n+            lhs = self.context.new_bitcast(None, lhs, self.usize_type);\n+            rhs = self.context.new_bitcast(None, rhs, self.usize_type);\n+            self.context.new_comparison(None, op.to_gcc_comparison(), lhs, rhs)\n+        }\n         else {\n-            let left_type = lhs.get_type();\n-            let right_type = rhs.get_type();\n-            if left_type != right_type {\n+            if a_type != b_type {\n                 // NOTE: because libgccjit cannot compare function pointers.\n-                if left_type.dyncast_function_ptr_type().is_some() && right_type.dyncast_function_ptr_type().is_some() {\n+                if a_type.dyncast_function_ptr_type().is_some() && b_type.dyncast_function_ptr_type().is_some() {\n                     lhs = self.context.new_cast(None, lhs, self.usize_type.make_pointer());\n                     rhs = self.context.new_cast(None, rhs, self.usize_type.make_pointer());\n                 }\n                 // NOTE: hack because we try to cast a vector type to the same vector type.\n-                else if format!(\"{:?}\", left_type) != format!(\"{:?}\", right_type) {\n-                    rhs = self.context.new_cast(None, rhs, left_type);\n+                else if format!(\"{:?}\", a_type) != format!(\"{:?}\", b_type) {\n+                    rhs = self.context.new_cast(None, rhs, a_type);\n                 }\n             }\n             self.context.new_comparison(None, op.to_gcc_comparison(), lhs, rhs)"}]}