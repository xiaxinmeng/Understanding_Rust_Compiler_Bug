{"sha": "6c7f30114515111c53224e2de1434a324f73c0e8", "node_id": "C_kwDOAAsO6NoAKDZjN2YzMDExNDUxNTExMWM1MzIyNGUyZGUxNDM0YTMyNGY3M2MwZTg", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2022-07-31T21:45:15Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2022-08-20T13:47:59Z"}, "message": "Enable downloading prebuilt LLVM in test builders\n\nSee comment added for details on the test builder restriction. This is primarily\nintended for macOS CI, but is likely to be a slight win on other builders too.", "tree": {"sha": "08f19bc37043beac017217fde70a2bf7cfa20d30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08f19bc37043beac017217fde70a2bf7cfa20d30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c7f30114515111c53224e2de1434a324f73c0e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c7f30114515111c53224e2de1434a324f73c0e8", "html_url": "https://github.com/rust-lang/rust/commit/6c7f30114515111c53224e2de1434a324f73c0e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c7f30114515111c53224e2de1434a324f73c0e8/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ca14aa7ff9d0c4adde9c9058acbb2edf59bb05f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ca14aa7ff9d0c4adde9c9058acbb2edf59bb05f", "html_url": "https://github.com/rust-lang/rust/commit/8ca14aa7ff9d0c4adde9c9058acbb2edf59bb05f"}], "stats": {"total": 92, "additions": 88, "deletions": 4}, "files": [{"sha": "11b115cb2ff245bbd11209790c5e4f91b0ca8621", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6c7f30114515111c53224e2de1434a324f73c0e8/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/6c7f30114515111c53224e2de1434a324f73c0e8/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=6c7f30114515111c53224e2de1434a324f73c0e8", "patch": "@@ -391,24 +391,28 @@ jobs:\n             env:\n               RUST_CONFIGURE_ARGS: \"--build=i686-pc-windows-gnu --set llvm.allow-old-toolchain\"\n               SCRIPT: make ci-mingw-subset-1\n+              NO_DOWNLOAD_CI_LLVM: 1\n               CUSTOM_MINGW: 1\n             os: windows-latest-xl\n           - name: i686-mingw-2\n             env:\n               RUST_CONFIGURE_ARGS: \"--build=i686-pc-windows-gnu --set llvm.allow-old-toolchain\"\n               SCRIPT: make ci-mingw-subset-2\n+              NO_DOWNLOAD_CI_LLVM: 1\n               CUSTOM_MINGW: 1\n             os: windows-latest-xl\n           - name: x86_64-mingw-1\n             env:\n               SCRIPT: make ci-mingw-subset-1\n               RUST_CONFIGURE_ARGS: \"--build=x86_64-pc-windows-gnu --enable-profiler --set llvm.allow-old-toolchain\"\n+              NO_DOWNLOAD_CI_LLVM: 1\n               CUSTOM_MINGW: 1\n             os: windows-latest-xl\n           - name: x86_64-mingw-2\n             env:\n               SCRIPT: make ci-mingw-subset-2\n               RUST_CONFIGURE_ARGS: \"--build=x86_64-pc-windows-gnu --enable-profiler --set llvm.allow-old-toolchain\"\n+              NO_DOWNLOAD_CI_LLVM: 1\n               CUSTOM_MINGW: 1\n             os: windows-latest-xl\n           - name: dist-x86_64-msvc\n@@ -433,6 +437,7 @@ jobs:\n           - name: dist-i686-mingw\n             env:\n               RUST_CONFIGURE_ARGS: \"--build=i686-pc-windows-gnu --enable-full-tools --enable-profiler --set llvm.allow-old-toolchain\"\n+              NO_DOWNLOAD_CI_LLVM: 1\n               SCRIPT: python x.py dist\n               CUSTOM_MINGW: 1\n               DIST_REQUIRE_ALL_TOOLS: 1\n@@ -441,6 +446,7 @@ jobs:\n             env:\n               SCRIPT: python x.py dist\n               RUST_CONFIGURE_ARGS: \"--build=x86_64-pc-windows-gnu --enable-full-tools --enable-profiler --set llvm.allow-old-toolchain\"\n+              NO_DOWNLOAD_CI_LLVM: 1\n               CUSTOM_MINGW: 1\n               DIST_REQUIRE_ALL_TOOLS: 1\n             os: windows-latest-xl"}, {"sha": "13e3049f2c81ff001a9bfbbce5efb075c676772c", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c7f30114515111c53224e2de1434a324f73c0e8/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c7f30114515111c53224e2de1434a324f73c0e8/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=6c7f30114515111c53224e2de1434a324f73c0e8", "patch": "@@ -990,7 +990,7 @@ impl Config {\n             config.llvm_from_ci = match llvm.download_ci_llvm {\n                 Some(StringOrBool::String(s)) => {\n                     assert!(s == \"if-available\", \"unknown option `{}` for download-ci-llvm\", s);\n-                    crate::native::is_ci_llvm_available(&config)\n+                    crate::native::is_ci_llvm_available(&config, llvm_assertions.unwrap_or(false))\n                 }\n                 Some(StringOrBool::Bool(b)) => b,\n                 None => false,"}, {"sha": "7ecf74d3068d0a54e1b1278449af6bf33ceddd2b", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6c7f30114515111c53224e2de1434a324f73c0e8/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c7f30114515111c53224e2de1434a324f73c0e8/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=6c7f30114515111c53224e2de1434a324f73c0e8", "patch": "@@ -148,7 +148,7 @@ pub(crate) fn detect_llvm_sha(config: &crate::config::Config) -> String {\n /// This checks both the build triple platform to confirm we're usable at all,\n /// and then verifies if the current HEAD matches the detected LLVM SHA head,\n /// in which case LLVM is indicated as not available.\n-pub(crate) fn is_ci_llvm_available(config: &crate::config::Config) -> bool {\n+pub(crate) fn is_ci_llvm_available(config: &crate::config::Config, asserts: bool) -> bool {\n     // This is currently all tier 1 targets and tier 2 targets with host tools\n     // (since others may not have CI artifacts)\n     // https://doc.rust-lang.org/rustc/platform-support.html#tier-1\n@@ -187,6 +187,12 @@ pub(crate) fn is_ci_llvm_available(config: &crate::config::Config) -> bool {\n         return false;\n     }\n \n+    let triple = &*config.build.triple;\n+    if (triple == \"aarch64-unknown-linux-gnu\" || triple.contains(\"i686\")) && asserts {\n+        // No alt builder for aarch64-unknown-linux-gnu today.\n+        return false;\n+    }\n+\n     if crate::util::CiEnv::is_ci() {\n         let llvm_sha = detect_llvm_sha(config);\n         let head_sha = output(config.git().arg(\"rev-parse\").arg(\"HEAD\"));"}, {"sha": "d0d367b39b493850cfce53e8095f2f05f7127905", "filename": "src/ci/docker/host-x86_64/arm-android/Dockerfile", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6c7f30114515111c53224e2de1434a324f73c0e8/src%2Fci%2Fdocker%2Fhost-x86_64%2Farm-android%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/6c7f30114515111c53224e2de1434a324f73c0e8/src%2Fci%2Fdocker%2Fhost-x86_64%2Farm-android%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Farm-android%2FDockerfile?ref=6c7f30114515111c53224e2de1434a324f73c0e8", "patch": "@@ -29,6 +29,10 @@ ENV PATH=$PATH:/android/sdk/platform-tools\n \n ENV TARGETS=arm-linux-androideabi\n \n+# We are intentionally allowing an old toolchain on this builder (and that's\n+# incompatible with LLVM downloads today).\n+ENV NO_DOWNLOAD_CI_LLVM 1\n+\n ENV RUST_CONFIGURE_ARGS --arm-linux-androideabi-ndk=/android/ndk/arm-14 \\\n     --set llvm.allow-old-toolchain\n "}, {"sha": "71ea13071bd1f1345d0841f3208fa92f131b77a5", "filename": "src/ci/docker/host-x86_64/i686-gnu-nopt/Dockerfile", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6c7f30114515111c53224e2de1434a324f73c0e8/src%2Fci%2Fdocker%2Fhost-x86_64%2Fi686-gnu-nopt%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/6c7f30114515111c53224e2de1434a324f73c0e8/src%2Fci%2Fdocker%2Fhost-x86_64%2Fi686-gnu-nopt%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fi686-gnu-nopt%2FDockerfile?ref=6c7f30114515111c53224e2de1434a324f73c0e8", "patch": "@@ -27,6 +27,10 @@ RUN mkdir -p /config\n RUN echo \"[rust]\" > /config/nopt-std-config.toml\n RUN echo \"optimize = false\" >> /config/nopt-std-config.toml\n \n+# We are intentionally allowing an old toolchain on this builder (and that's\n+# incompatible with LLVM downloads today).\n+ENV NO_DOWNLOAD_CI_LLVM 1\n+\n ENV RUST_CONFIGURE_ARGS --build=i686-unknown-linux-gnu --disable-optimize-tests \\\n     --set llvm.allow-old-toolchain\n ENV SCRIPT python3 ../x.py test --stage 0 --config /config/nopt-std-config.toml library/std \\"}, {"sha": "ebeab3dbdb79913c87a55877c553e80e15dca62a", "filename": "src/ci/docker/host-x86_64/i686-gnu/Dockerfile", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6c7f30114515111c53224e2de1434a324f73c0e8/src%2Fci%2Fdocker%2Fhost-x86_64%2Fi686-gnu%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/6c7f30114515111c53224e2de1434a324f73c0e8/src%2Fci%2Fdocker%2Fhost-x86_64%2Fi686-gnu%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fi686-gnu%2FDockerfile?ref=6c7f30114515111c53224e2de1434a324f73c0e8", "patch": "@@ -23,6 +23,9 @@ RUN sh /scripts/sccache.sh\n COPY scripts/cmake.sh /scripts/\n RUN /scripts/cmake.sh\n \n+# We are intentionally allowing an old toolchain on this builder (and that's\n+# incompatible with LLVM downloads today).\n+ENV NO_DOWNLOAD_CI_LLVM 1\n ENV RUST_CONFIGURE_ARGS --build=i686-unknown-linux-gnu \\\n     --set llvm.allow-old-toolchain\n # Exclude some tests that are unlikely to be platform specific, to speed up"}, {"sha": "b75e2f085cd3b73f2f66ea7323bea08fc8edb6eb", "filename": "src/ci/docker/host-x86_64/test-various/Dockerfile", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6c7f30114515111c53224e2de1434a324f73c0e8/src%2Fci%2Fdocker%2Fhost-x86_64%2Ftest-various%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/6c7f30114515111c53224e2de1434a324f73c0e8/src%2Fci%2Fdocker%2Fhost-x86_64%2Ftest-various%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Ftest-various%2FDockerfile?ref=6c7f30114515111c53224e2de1434a324f73c0e8", "patch": "@@ -30,6 +30,10 @@ WORKDIR /\n COPY scripts/sccache.sh /scripts/\n RUN sh /scripts/sccache.sh\n \n+# We are disabling CI LLVM since this builder needs to build LLD, which is\n+# currently unsupported when downloading pre-built LLVM.\n+ENV NO_DOWNLOAD_CI_LLVM 1\n+\n ENV RUST_CONFIGURE_ARGS \\\n   --musl-root-x86_64=/usr/local/x86_64-linux-musl \\\n   --set build.nodejs=/node-v15.14.0-linux-x64/bin/node \\"}, {"sha": "321b3d6ace486d84f5cc9bbe0cd6df052a96e7e0", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-aux/Dockerfile", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6c7f30114515111c53224e2de1434a324f73c0e8/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-aux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/6c7f30114515111c53224e2de1434a324f73c0e8/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-aux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-aux%2FDockerfile?ref=6c7f30114515111c53224e2de1434a324f73c0e8", "patch": "@@ -26,6 +26,10 @@ RUN sh /scripts/sccache.sh\n COPY scripts/cmake.sh /scripts/\n RUN /scripts/cmake.sh\n \n+# We are intentionally allowing an old toolchain on this builder (and that's\n+# incompatible with LLVM downloads today).\n+ENV NO_DOWNLOAD_CI_LLVM 1\n+\n ENV RUST_CONFIGURE_ARGS --build=x86_64-unknown-linux-gnu \\\n     --set llvm.allow-old-toolchain\n ENV RUST_CHECK_TARGET check-aux"}, {"sha": "739045248fea205d7c0ef0ec80fffc6f71fc6af3", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-debug/Dockerfile", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6c7f30114515111c53224e2de1434a324f73c0e8/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-debug%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/6c7f30114515111c53224e2de1434a324f73c0e8/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-debug%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-debug%2FDockerfile?ref=6c7f30114515111c53224e2de1434a324f73c0e8", "patch": "@@ -31,6 +31,9 @@ RUN sh /scripts/sccache.sh\n ENV RUSTBUILD_FORCE_CLANG_BASED_TESTS 1\n ENV RUN_CHECK_WITH_PARALLEL_QUERIES 1\n \n+# llvm.use-linker conflicts with downloading CI LLVM\n+ENV NO_DOWNLOAD_CI_LLVM 1\n+\n ENV RUST_CONFIGURE_ARGS \\\n       --build=x86_64-unknown-linux-gnu \\\n       --enable-debug \\"}, {"sha": "be4def85f14c4735c41b63da42f00a317273d438", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-distcheck/Dockerfile", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6c7f30114515111c53224e2de1434a324f73c0e8/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-distcheck%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/6c7f30114515111c53224e2de1434a324f73c0e8/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-distcheck%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-distcheck%2FDockerfile?ref=6c7f30114515111c53224e2de1434a324f73c0e8", "patch": "@@ -22,6 +22,10 @@ RUN sh /scripts/sccache.sh\n COPY scripts/cmake.sh /scripts/\n RUN /scripts/cmake.sh\n \n+# We are intentionally allowing an old toolchain on this builder (and that's\n+# incompatible with LLVM downloads today).\n+ENV NO_DOWNLOAD_CI_LLVM 1\n+\n ENV RUST_CONFIGURE_ARGS --build=x86_64-unknown-linux-gnu --set rust.ignore-git=false \\\n     --set llvm.allow-old-toolchain\n ENV SCRIPT python3 ../x.py --stage 2 test distcheck"}, {"sha": "23f2215c2d93cfbe85e3e06028f00793c96af05d", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-llvm-13-stage1/Dockerfile", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6c7f30114515111c53224e2de1434a324f73c0e8/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-llvm-13-stage1%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/6c7f30114515111c53224e2de1434a324f73c0e8/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-llvm-13-stage1%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-llvm-13-stage1%2FDockerfile?ref=6c7f30114515111c53224e2de1434a324f73c0e8", "patch": "@@ -26,7 +26,11 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n COPY scripts/sccache.sh /scripts/\n RUN sh /scripts/sccache.sh\n \n-# using llvm-link-shared due to libffi issues -- see #34486\n+# We are disabling CI LLVM since this builder is intentionally using a host\n+# LLVM, rather than the typical src/llvm-project LLVM.\n+ENV NO_DOWNLOAD_CI_LLVM 1\n+\n+# Using llvm-link-shared due to libffi issues -- see #34486\n ENV RUST_CONFIGURE_ARGS \\\n     --build=x86_64-unknown-linux-gnu \\\n     --llvm-root=/usr/lib/llvm-13 \\"}, {"sha": "8f6831bc54e63e6b693c031ab6d7cda8f701d7e8", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-llvm-13/Dockerfile", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6c7f30114515111c53224e2de1434a324f73c0e8/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-llvm-13%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/6c7f30114515111c53224e2de1434a324f73c0e8/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-llvm-13%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-llvm-13%2FDockerfile?ref=6c7f30114515111c53224e2de1434a324f73c0e8", "patch": "@@ -37,7 +37,11 @@ RUN apt-get update && \\\n COPY scripts/sccache.sh /scripts/\n RUN sh /scripts/sccache.sh\n \n-# using llvm-link-shared due to libffi issues -- see #34486\n+# We are disabling CI LLVM since this builder is intentionally using a host\n+# LLVM, rather than the typical src/llvm-project LLVM.\n+ENV NO_DOWNLOAD_CI_LLVM 1\n+\n+# Using llvm-link-shared due to libffi issues -- see #34486\n ENV RUST_CONFIGURE_ARGS \\\n       --build=x86_64-unknown-linux-gnu \\\n       --llvm-root=/usr/lib/llvm-13 \\"}, {"sha": "e2ec4f275001b53d24fececc91607eaa810e1a75", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-tools/Dockerfile", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6c7f30114515111c53224e2de1434a324f73c0e8/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/6c7f30114515111c53224e2de1434a324f73c0e8/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2FDockerfile?ref=6c7f30114515111c53224e2de1434a324f73c0e8", "patch": "@@ -80,6 +80,10 @@ COPY host-x86_64/x86_64-gnu-tools/browser-ui-test.version /tmp/\n # the local version of the package is different than the one used by the CI.\n RUN npm install -g browser-ui-test@$(head -n 1 /tmp/browser-ui-test.version) --unsafe-perm=true\n \n+# We are intentionally allowing an old toolchain on this builder (and that's\n+# incompatible with LLVM downloads today).\n+ENV NO_DOWNLOAD_CI_LLVM 1\n+\n ENV RUST_CONFIGURE_ARGS \\\n   --set llvm.allow-old-toolchain \\\n   --build=x86_64-unknown-linux-gnu \\"}, {"sha": "a6bdd9f3186b1fc8e3f9eea3a21945e48381d9ee", "filename": "src/ci/github-actions/ci.yml", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6c7f30114515111c53224e2de1434a324f73c0e8/src%2Fci%2Fgithub-actions%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/6c7f30114515111c53224e2de1434a324f73c0e8/src%2Fci%2Fgithub-actions%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fgithub-actions%2Fci.yml?ref=6c7f30114515111c53224e2de1434a324f73c0e8", "patch": "@@ -600,6 +600,9 @@ jobs:\n                 --build=i686-pc-windows-gnu\n                 --set llvm.allow-old-toolchain\n               SCRIPT: make ci-mingw-subset-1\n+              # We are intentionally allowing an old toolchain on this builder (and that's\n+              # incompatible with LLVM downloads today).\n+              NO_DOWNLOAD_CI_LLVM: 1\n               CUSTOM_MINGW: 1\n             <<: *job-windows-xl\n \n@@ -609,6 +612,9 @@ jobs:\n                 --build=i686-pc-windows-gnu\n                 --set llvm.allow-old-toolchain\n               SCRIPT: make ci-mingw-subset-2\n+              # We are intentionally allowing an old toolchain on this builder (and that's\n+              # incompatible with LLVM downloads today).\n+              NO_DOWNLOAD_CI_LLVM: 1\n               CUSTOM_MINGW: 1\n             <<: *job-windows-xl\n \n@@ -619,6 +625,9 @@ jobs:\n                 --build=x86_64-pc-windows-gnu\n                 --enable-profiler\n                 --set llvm.allow-old-toolchain\n+              # We are intentionally allowing an old toolchain on this builder (and that's\n+              # incompatible with LLVM downloads today).\n+              NO_DOWNLOAD_CI_LLVM: 1\n               CUSTOM_MINGW: 1\n             <<: *job-windows-xl\n \n@@ -629,6 +638,9 @@ jobs:\n                 --build=x86_64-pc-windows-gnu\n                 --enable-profiler\n                 --set llvm.allow-old-toolchain\n+              # We are intentionally allowing an old toolchain on this builder (and that's\n+              # incompatible with LLVM downloads today).\n+              NO_DOWNLOAD_CI_LLVM: 1\n               CUSTOM_MINGW: 1\n             <<: *job-windows-xl\n \n@@ -678,6 +690,9 @@ jobs:\n                 --enable-full-tools\n                 --enable-profiler\n                 --set llvm.allow-old-toolchain\n+              # We are intentionally allowing an old toolchain on this builder (and that's\n+              # incompatible with LLVM downloads today).\n+              NO_DOWNLOAD_CI_LLVM: 1\n               SCRIPT: python x.py dist\n               CUSTOM_MINGW: 1\n               DIST_REQUIRE_ALL_TOOLS: 1\n@@ -691,6 +706,9 @@ jobs:\n                 --enable-full-tools\n                 --enable-profiler\n                 --set llvm.allow-old-toolchain\n+              # We are intentionally allowing an old toolchain on this builder (and that's\n+              # incompatible with LLVM downloads today).\n+              NO_DOWNLOAD_CI_LLVM: 1\n               CUSTOM_MINGW: 1\n               DIST_REQUIRE_ALL_TOOLS: 1\n             <<: *job-windows-xl"}, {"sha": "091ccf58e2b81cdebd075dac134fda52357e88c7", "filename": "src/ci/run.sh", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6c7f30114515111c53224e2de1434a324f73c0e8/src%2Fci%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/6c7f30114515111c53224e2de1434a324f73c0e8/src%2Fci%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Frun.sh?ref=6c7f30114515111c53224e2de1434a324f73c0e8", "patch": "@@ -102,6 +102,18 @@ else\n   fi\n \n   RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --set rust.verify-llvm-ir\"\n+\n+  # We enable this for non-dist builders, since those aren't trying to produce\n+  # fresh binaries. We currently don't entirely support distributing a fresh\n+  # copy of the compiler (including llvm tools, etc.) if we haven't actually\n+  # built LLVM, since not everything necessary is copied into the\n+  # local-usage-only LLVM artifacts. If that changes, this could maybe be made\n+  # true for all builds. In practice it's probably a good idea to keep building\n+  # LLVM continuously on at least some builders to ensure it works, though.\n+  # (And PGO is its own can of worms).\n+  if [ \"$NO_DOWNLOAD_CI_LLVM\" = \"\" ]; then\n+    RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --set llvm.download-ci-llvm=if-available\"\n+  fi\n fi\n \n if [ \"$RUST_RELEASE_CHANNEL\" = \"nightly\" ] || [ \"$DIST_REQUIRE_ALL_TOOLS\" = \"\" ]; then"}, {"sha": "02b72625d6eb578bb1c889646ea65dbd2f754a89", "filename": "src/ci/scripts/install-clang.sh", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6c7f30114515111c53224e2de1434a324f73c0e8/src%2Fci%2Fscripts%2Finstall-clang.sh", "raw_url": "https://github.com/rust-lang/rust/raw/6c7f30114515111c53224e2de1434a324f73c0e8/src%2Fci%2Fscripts%2Finstall-clang.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fscripts%2Finstall-clang.sh?ref=6c7f30114515111c53224e2de1434a324f73c0e8", "patch": "@@ -61,6 +61,10 @@ elif isWindows && [[ ${CUSTOM_MINGW-0} -ne 1 ]]; then\n     7z x -oclang-rust/ \"LLVM-${LLVM_VERSION}-win64.exe\"\n     ciCommandSetEnv RUST_CONFIGURE_ARGS \\\n         \"${RUST_CONFIGURE_ARGS} --set llvm.clang-cl=$(pwd)/clang-rust/bin/clang-cl.exe\"\n+\n+    # Disable downloading CI LLVM on this builder;\n+    # setting up clang-cl just above conflicts with the default if-available option.\n+    ciCommandSetEnv NO_DOWNLOAD_CI_LLVM 1\n fi\n \n if isWindows; then"}]}