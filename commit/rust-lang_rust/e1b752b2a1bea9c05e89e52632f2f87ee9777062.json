{"sha": "e1b752b2a1bea9c05e89e52632f2f87ee9777062", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxYjc1MmIyYTFiZWE5YzA1ZTg5ZTUyNjMyZjJmODdlZTk3NzcwNjI=", "commit": {"author": {"name": "Theodore DeRego", "email": "tedsta@google.com", "date": "2016-12-01T20:01:07Z"}, "committer": {"name": "Theodore DeRego", "email": "tedsta@google.com", "date": "2016-12-01T20:01:07Z"}, "message": "std::process fuchsia support cleanup", "tree": {"sha": "92a44d262716efb72afa488edcdba6bb2f0baa58", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92a44d262716efb72afa488edcdba6bb2f0baa58"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1b752b2a1bea9c05e89e52632f2f87ee9777062", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1b752b2a1bea9c05e89e52632f2f87ee9777062", "html_url": "https://github.com/rust-lang/rust/commit/e1b752b2a1bea9c05e89e52632f2f87ee9777062", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1b752b2a1bea9c05e89e52632f2f87ee9777062/comments", "author": {"login": "tedsta", "id": 1218723, "node_id": "MDQ6VXNlcjEyMTg3MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/1218723?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tedsta", "html_url": "https://github.com/tedsta", "followers_url": "https://api.github.com/users/tedsta/followers", "following_url": "https://api.github.com/users/tedsta/following{/other_user}", "gists_url": "https://api.github.com/users/tedsta/gists{/gist_id}", "starred_url": "https://api.github.com/users/tedsta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tedsta/subscriptions", "organizations_url": "https://api.github.com/users/tedsta/orgs", "repos_url": "https://api.github.com/users/tedsta/repos", "events_url": "https://api.github.com/users/tedsta/events{/privacy}", "received_events_url": "https://api.github.com/users/tedsta/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tedsta", "id": 1218723, "node_id": "MDQ6VXNlcjEyMTg3MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/1218723?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tedsta", "html_url": "https://github.com/tedsta", "followers_url": "https://api.github.com/users/tedsta/followers", "following_url": "https://api.github.com/users/tedsta/following{/other_user}", "gists_url": "https://api.github.com/users/tedsta/gists{/gist_id}", "starred_url": "https://api.github.com/users/tedsta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tedsta/subscriptions", "organizations_url": "https://api.github.com/users/tedsta/orgs", "repos_url": "https://api.github.com/users/tedsta/repos", "events_url": "https://api.github.com/users/tedsta/events{/privacy}", "received_events_url": "https://api.github.com/users/tedsta/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d9d07a1ca25d003b57b08f5930ae3e9a27cd37c", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d9d07a1ca25d003b57b08f5930ae3e9a27cd37c", "html_url": "https://github.com/rust-lang/rust/commit/8d9d07a1ca25d003b57b08f5930ae3e9a27cd37c"}], "stats": {"total": 60, "additions": 26, "deletions": 34}, "files": [{"sha": "fd7dc17cccd8cbf36d3a24684215adebeb41326f", "filename": "src/libstd/sys/unix/mod.rs", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e1b752b2a1bea9c05e89e52632f2f87ee9777062/src%2Flibstd%2Fsys%2Funix%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1b752b2a1bea9c05e89e52632f2f87ee9777062/src%2Flibstd%2Fsys%2Funix%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fmod.rs?ref=e1b752b2a1bea9c05e89e52632f2f87ee9777062", "patch": "@@ -13,11 +13,6 @@\n use io::{self, ErrorKind};\n use libc;\n \n-#[cfg(target_os = \"fuchsia\")]\n-use convert::TryInto;\n-#[cfg(target_os = \"fuchsia\")]\n-pub use self::magenta::mx_status_t;\n-\n #[cfg(target_os = \"android\")]   pub use os::android as platform;\n #[cfg(target_os = \"bitrig\")]    pub use os::bitrig as platform;\n #[cfg(target_os = \"dragonfly\")] pub use os::dragonfly as platform;\n@@ -46,8 +41,6 @@ pub mod ext;\n pub mod fast_thread_local;\n pub mod fd;\n pub mod fs;\n-#[cfg(target_os = \"fuchsia\")]\n-pub mod magenta;\n pub mod memchr;\n pub mod mutex;\n pub mod net;\n@@ -171,19 +164,6 @@ pub fn cvt_r<T, F>(mut f: F) -> io::Result<T>\n     }\n }\n \n-#[cfg(target_os = \"fuchsia\")]\n-pub fn mx_cvt<T>(t: T) -> io::Result<T> where T: TryInto<mx_status_t>+Copy {\n-    if let Ok(status) = TryInto::try_into(t) {\n-        if status < 0 {\n-            Err(io::Error::from_raw_os_error(status))\n-        } else {\n-            Ok(t)\n-        }\n-    } else {\n-        Err(io::Error::last_os_error())\n-    }\n-}\n-\n // On Unix-like platforms, libc::abort will unregister signal handlers\n // including the SIGABRT handler, preventing the abort from being blocked, and\n // fclose streams, with the side effect of flushing them so libc bufferred"}, {"sha": "319fbce35cd7b26da6110c2c9eb9cb5b257f66c0", "filename": "src/libstd/sys/unix/process/magenta.rs", "status": "renamed", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e1b752b2a1bea9c05e89e52632f2f87ee9777062/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fmagenta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1b752b2a1bea9c05e89e52632f2f87ee9777062/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fmagenta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fmagenta.rs?ref=e1b752b2a1bea9c05e89e52632f2f87ee9777062", "patch": "@@ -10,6 +10,8 @@\n \n #![allow(non_camel_case_types)]\n \n+use convert::TryInto;\n+use io;\n use os::raw::c_char;\n use u64;\n \n@@ -42,6 +44,18 @@ pub const MX_INFO_PROCESS         : mx_object_info_topic_t = 3;\n \n pub const MX_HND_TYPE_JOB: u32 = 6;\n \n+pub fn mx_cvt<T>(t: T) -> io::Result<T> where T: TryInto<mx_status_t>+Copy {\n+    if let Ok(status) = TryInto::try_into(t) {\n+        if status < 0 {\n+            Err(io::Error::from_raw_os_error(status))\n+        } else {\n+            Ok(t)\n+        }\n+    } else {\n+        Err(io::Error::last_os_error())\n+    }\n+}\n+\n // Safe wrapper around mx_handle_t\n pub struct Handle {\n     raw: mx_handle_t,\n@@ -61,7 +75,6 @@ impl Handle {\n \n impl Drop for Handle {\n     fn drop(&mut self) {\n-        use sys::mx_cvt;\n         unsafe { mx_cvt(mx_handle_close(self.raw)).expect(\"Failed to close mx_handle_t\"); }\n     }\n }", "previous_filename": "src/libstd/sys/unix/magenta.rs"}, {"sha": "b50384d8eee331fb697c82fa2a4336032374cd1b", "filename": "src/libstd/sys/unix/process/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e1b752b2a1bea9c05e89e52632f2f87ee9777062/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1b752b2a1bea9c05e89e52632f2f87ee9777062/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fmod.rs?ref=e1b752b2a1bea9c05e89e52632f2f87ee9777062", "patch": "@@ -18,3 +18,5 @@ mod process_inner;\n #[cfg(target_os = \"fuchsia\")]\n #[path = \"process_fuchsia.rs\"]\n mod process_inner;\n+#[cfg(target_os = \"fuchsia\")]\n+mod magenta;"}, {"sha": "3497b266340e4c0f9dfc62cb3c39bb0f01c96b68", "filename": "src/libstd/sys/unix/process/process_common.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e1b752b2a1bea9c05e89e52632f2f87ee9777062/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_common.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1b752b2a1bea9c05e89e52632f2f87ee9777062/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_common.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_common.rs?ref=e1b752b2a1bea9c05e89e52632f2f87ee9777062", "patch": "@@ -203,15 +203,15 @@ impl Command {\n         &self.argv\n     }\n \n-    #[cfg(not(target_os=\"fuchsia\"))]\n+    #[allow(dead_code)]\n     pub fn get_cwd(&self) -> &Option<CString> {\n         &self.cwd\n     }\n-    #[cfg(not(target_os=\"fuchsia\"))]\n+    #[allow(dead_code)]\n     pub fn get_uid(&self) -> Option<uid_t> {\n         self.uid\n     }\n-    #[cfg(not(target_os=\"fuchsia\"))]\n+    #[allow(dead_code)]\n     pub fn get_gid(&self) -> Option<gid_t> {\n         self.gid\n     }"}, {"sha": "f0a42b127998c241881d007bd40a7041bdab9c73", "filename": "src/libstd/sys/unix/process/process_fuchsia.rs", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e1b752b2a1bea9c05e89e52632f2f87ee9777062/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_fuchsia.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1b752b2a1bea9c05e89e52632f2f87ee9777062/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_fuchsia.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_fuchsia.rs?ref=e1b752b2a1bea9c05e89e52632f2f87ee9777062", "patch": "@@ -13,8 +13,7 @@ use libc;\n use mem;\n use ptr;\n \n-use sys::mx_cvt;\n-use sys::magenta::{Handle, launchpad_t, mx_handle_t};\n+use sys::process::magenta::{Handle, launchpad_t, mx_handle_t};\n use sys::process::process_common::*;\n \n ////////////////////////////////////////////////////////////////////////////////\n@@ -53,7 +52,7 @@ impl Command {\n \n     unsafe fn do_exec(&mut self, stdio: ChildPipes)\n                       -> io::Result<(*mut launchpad_t, mx_handle_t)> {\n-        use sys::magenta::*;\n+        use sys::process::magenta::*;\n \n         let job_handle = mxio_get_startup_handle(mx_hnd_info(MX_HND_TYPE_JOB, 0));\n         let envp = match *self.get_envp() {\n@@ -72,11 +71,9 @@ impl Command {\n \n         // Duplicate the job handle\n         let mut job_copy: mx_handle_t = MX_HANDLE_INVALID;\n-        mx_cvt(mx_handle_duplicate(job_handle, MX_RIGHT_SAME_RIGHTS,\n-                                   &mut job_copy as *mut mx_handle_t))?;\n+        mx_cvt(mx_handle_duplicate(job_handle, MX_RIGHT_SAME_RIGHTS, &mut job_copy))?;\n         // Create a launchpad\n-        mx_cvt(launchpad_create(job_copy, self.get_argv()[0],\n-                                &mut launchpad as *mut *mut launchpad_t))?;\n+        mx_cvt(launchpad_create(job_copy, self.get_argv()[0], &mut launchpad))?;\n         // Set the process argv\n         mx_cvt(launchpad_arguments(launchpad, self.get_argv().len() as i32 - 1,\n                                    self.get_argv().as_ptr()))?;\n@@ -138,7 +135,7 @@ impl Process {\n     }\n \n     pub fn kill(&mut self) -> io::Result<()> {\n-        use sys::magenta::*;\n+        use sys::process::magenta::*;\n \n         unsafe { mx_cvt(mx_task_kill(self.handle.raw()))?; }\n \n@@ -147,7 +144,7 @@ impl Process {\n \n     pub fn wait(&mut self) -> io::Result<ExitStatus> {\n         use default::Default;\n-        use sys::magenta::*;\n+        use sys::process::magenta::*;\n \n         let mut proc_info: mx_info_process_t = Default::default();\n         let mut actual: mx_size_t = 0;\n@@ -171,7 +168,7 @@ impl Process {\n \n impl Drop for Process {\n     fn drop(&mut self) {\n-        use sys::magenta::launchpad_destroy;\n+        use sys::process::magenta::launchpad_destroy;\n         unsafe { launchpad_destroy(self.launchpad); }\n     }\n }"}]}