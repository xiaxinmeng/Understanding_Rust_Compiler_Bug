{"sha": "49b677346fe0e2ac2554555ce16499f0315ba934", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5YjY3NzM0NmZlMGUyYWMyNTU0NTU1Y2UxNjQ5OWYwMzE1YmE5MzQ=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-04-11T23:34:49Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-04-18T09:44:47Z"}, "message": "Correct the timestamp for CodegenBackend check", "tree": {"sha": "593f52ae3ddaee521edf5830807bf315638c54ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/593f52ae3ddaee521edf5830807bf315638c54ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49b677346fe0e2ac2554555ce16499f0315ba934", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49b677346fe0e2ac2554555ce16499f0315ba934", "html_url": "https://github.com/rust-lang/rust/commit/49b677346fe0e2ac2554555ce16499f0315ba934", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49b677346fe0e2ac2554555ce16499f0315ba934/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b53468f500e079cef07ed53245c3aa99daf32fcc", "url": "https://api.github.com/repos/rust-lang/rust/commits/b53468f500e079cef07ed53245c3aa99daf32fcc", "html_url": "https://github.com/rust-lang/rust/commit/b53468f500e079cef07ed53245c3aa99daf32fcc"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "487f8d700338bf408eeaf209695fd95766de66ad", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/49b677346fe0e2ac2554555ce16499f0315ba934/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49b677346fe0e2ac2554555ce16499f0315ba934/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=49b677346fe0e2ac2554555ce16499f0315ba934", "patch": "@@ -186,13 +186,10 @@ impl Step for CodegenBackend {\n             _ => panic!(\"unknown backend: {}\", self.backend),\n         }\n \n-        let tmp_stamp = build.cargo_out(compiler, Mode::Librustc, target)\n-            .join(\".tmp.stamp\");\n-\n         let _folder = build.fold_output(|| format!(\"stage{}-rustc_trans\", compiler.stage));\n         run_cargo(build,\n                   cargo.arg(\"--features\").arg(features),\n-                  &tmp_stamp,\n+                  &codegen_backend_stamp(build, compiler, target, self.backend),\n                   true);\n     }\n }\n@@ -254,3 +251,13 @@ pub fn libtest_stamp(builder: &Builder, compiler: Compiler, target: Interned<Str\n pub fn librustc_stamp(builder: &Builder, compiler: Compiler, target: Interned<String>) -> PathBuf {\n     builder.cargo_out(compiler, Mode::Librustc, target).join(\".librustc-check.stamp\")\n }\n+\n+/// Cargo's output path for librustc_trans in a given stage, compiled by a particular\n+/// compiler for the specified target and backend.\n+fn codegen_backend_stamp(build: &Build,\n+                         compiler: Compiler,\n+                         target: Interned<String>,\n+                         backend: Interned<String>) -> PathBuf {\n+    build.cargo_out(compiler, Mode::Librustc, target)\n+         .join(format!(\".librustc_trans-{}-check.stamp\", backend))\n+}"}, {"sha": "f180f971fdc7773bbdd0340692f6489712849f87", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49b677346fe0e2ac2554555ce16499f0315ba934/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49b677346fe0e2ac2554555ce16499f0315ba934/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=49b677346fe0e2ac2554555ce16499f0315ba934", "patch": "@@ -795,6 +795,8 @@ pub fn librustc_stamp(builder: &Builder, compiler: Compiler, target: Interned<St\n     builder.cargo_out(compiler, Mode::Librustc, target).join(\".librustc.stamp\")\n }\n \n+/// Cargo's output path for librustc_trans in a given stage, compiled by a particular\n+/// compiler for the specified target and backend.\n fn codegen_backend_stamp(builder: &Builder,\n                          compiler: Compiler,\n                          target: Interned<String>,"}]}