{"sha": "23501703fb444a083155e8aa0b280d36be84c676", "node_id": "C_kwDOAAsO6NoAKDIzNTAxNzAzZmI0NDRhMDgzMTU1ZThhYTBiMjgwZDM2YmU4NGM2NzY", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2023-01-05T08:04:59Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2023-01-14T21:28:30Z"}, "message": "Document guarantees about BinaryHeap invariant", "tree": {"sha": "710a6c48219354a7ea65caeea662283f975bdefd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/710a6c48219354a7ea65caeea662283f975bdefd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23501703fb444a083155e8aa0b280d36be84c676", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmPDHn4ACgkQ+boUO5X/\nbYI1lBAAxpDLJC2+gOqbY9JcpBT5aj5SSVM9XFkzN9FsRB7xzAU41xQUnEx+Dosd\nDH5X3em+05+iUXENbTNWfxgHXC/RCbfOpKtjs6dj4Q08B4UL27CDxmu+F0ybq3NY\nmH5DFB0uNh/5qgSp/3chgkG9zT8Zkyv+MjWk46S1t9f7zMdepOZYuP+M7vHW4wdn\nIdCrPf0Opsc1Xt0lfZozAggqaC1svzK4XmwN9XhNAoB/6dwE46cFhOHrpOcHcXBC\nvt2XUls9wU3yGS9Dd7sgAmTm3uZCQ++KpQQ7FvfVe8jVcg5iAUu2ICJjTKYdVpxL\nKkPLpDc5DXH0FhS14DBpN+OcldLfDWBSAeRBiTfdwKsfpSEomt/5fPvAmy9DYyDc\nC1F7M5LnELF5ychK8xVZc4Du72nUY3692/1KLuDt91Q3TROIR5VLtacem6zPUEEq\nmFnvsBtaosSRpop+sNkQixDCH7xNwFelrih8rk+QNWLwBTZIqCQkZsoUGijSsW/t\nj1/RHPO93/jucTiKR12ao+4+yTvZlgleoTxHC17BQxXAmRFYujtWpYjUW/uLQ0p6\nmnY8W0OW9SEoLQURUl96VwNEIRZYP13Yq/xYwzHiUGTICmJAOE4WbGPjoOr5earB\nenZMjwamKYKy3ZOuhVGLArtcWAnWY2i7rOV46MdddPAr75ymLpg=\n=/gbZ\n-----END PGP SIGNATURE-----", "payload": "tree 710a6c48219354a7ea65caeea662283f975bdefd\nparent aedb756020dffd4be1b4e055e989e8761103f93f\nauthor David Tolnay <dtolnay@gmail.com> 1672905899 -0800\ncommitter David Tolnay <dtolnay@gmail.com> 1673731710 -0800\n\nDocument guarantees about BinaryHeap invariant\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23501703fb444a083155e8aa0b280d36be84c676", "html_url": "https://github.com/rust-lang/rust/commit/23501703fb444a083155e8aa0b280d36be84c676", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23501703fb444a083155e8aa0b280d36be84c676/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aedb756020dffd4be1b4e055e989e8761103f93f", "url": "https://api.github.com/repos/rust-lang/rust/commits/aedb756020dffd4be1b4e055e989e8761103f93f", "html_url": "https://github.com/rust-lang/rust/commit/aedb756020dffd4be1b4e055e989e8761103f93f"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "0b73b1af4eb35abad64b5d6c812293d1a6ad18b1", "filename": "library/alloc/src/collections/binary_heap/mod.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/23501703fb444a083155e8aa0b280d36be84c676/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23501703fb444a083155e8aa0b280d36be84c676/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap%2Fmod.rs?ref=23501703fb444a083155e8aa0b280d36be84c676", "patch": "@@ -166,12 +166,20 @@ mod tests;\n /// It is a logic error for an item to be modified in such a way that the\n /// item's ordering relative to any other item, as determined by the [`Ord`]\n /// trait, changes while it is in the heap. This is normally only possible\n-/// through [`Cell`], [`RefCell`], global state, I/O, or unsafe code. The\n+/// through interior mutability, global state, I/O, or unsafe code. The\n /// behavior resulting from such a logic error is not specified, but will\n /// be encapsulated to the `BinaryHeap` that observed the logic error and not\n /// result in undefined behavior. This could include panics, incorrect results,\n /// aborts, memory leaks, and non-termination.\n ///\n+/// As long as no elements change their relative order while being in the heap\n+/// as described above, the API of `BinaryHeap` guarantees that the heap\n+/// invariant remains intact i.e. its methods all behave as documented. For\n+/// example if a method is documented as iterating in sorted order, that's\n+/// guaranteed to work as long as elements in the heap have not changed order,\n+/// even in the presence of closures getting unwinded out of, iterators getting\n+/// leaked, and similar foolishness.\n+///\n /// # Examples\n ///\n /// ```"}]}