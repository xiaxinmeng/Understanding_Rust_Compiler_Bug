{"sha": "5903fdb28184d465c01cd6247d0e8ce0c4128211", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5MDNmZGIyODE4NGQ0NjVjMDFjZDYyNDdkMGU4Y2UwYzQxMjgyMTE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-09T20:02:15Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-28T10:33:33Z"}, "message": "always print backtrace when CTFE_BACKTRACE is set\n\nNo point in making the user also enable RUST_LOG", "tree": {"sha": "c11cd88405d5e868eb5fd9e96177b0645dbe41b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c11cd88405d5e868eb5fd9e96177b0645dbe41b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5903fdb28184d465c01cd6247d0e8ce0c4128211", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5903fdb28184d465c01cd6247d0e8ce0c4128211", "html_url": "https://github.com/rust-lang/rust/commit/5903fdb28184d465c01cd6247d0e8ce0c4128211", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5903fdb28184d465c01cd6247d0e8ce0c4128211/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aaa505af02bd7f449690e3febce342e96cc192a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/aaa505af02bd7f449690e3febce342e96cc192a8", "html_url": "https://github.com/rust-lang/rust/commit/aaa505af02bd7f449690e3febce342e96cc192a8"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "8e025f0d029b72f41237e1b1a5f6a6133c3fbd54", "filename": "src/librustc/mir/interpret/error.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5903fdb28184d465c01cd6247d0e8ce0c4128211/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5903fdb28184d465c01cd6247d0e8ce0c4128211/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs?ref=5903fdb28184d465c01cd6247d0e8ce0c4128211", "patch": "@@ -158,7 +158,7 @@ pub struct EvalError<'tcx> {\n impl<'tcx> EvalError<'tcx> {\n     pub fn print_backtrace(&mut self) {\n         if let Some(ref mut backtrace) = self.backtrace {\n-            error!(\"{}\", print_backtrace(&mut *backtrace));\n+            eprintln!(\"{}\", print_backtrace(&mut *backtrace));\n         }\n     }\n }\n@@ -206,7 +206,7 @@ impl<'tcx> From<EvalErrorKind<'tcx, u64>> for EvalError<'tcx> {\n \n                 if val == \"immediate\" {\n                     // Print it now\n-                    error!(\"{}\", print_backtrace(&mut backtrace));\n+                    eprintln!(\"{}\", print_backtrace(&mut backtrace));\n                     None\n                 } else {\n                     Some(Box::new(backtrace))"}]}