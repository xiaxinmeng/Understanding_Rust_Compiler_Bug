{"sha": "db8d9ddcbb9741570a2724c227c824f5eda13ad1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiOGQ5ZGRjYmI5NzQxNTcwYTI3MjRjMjI3YzgyNGY1ZWRhMTNhZDE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-07-03T19:20:15Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-07-03T19:20:15Z"}, "message": "rustc: Record the main function in the session in resolve3", "tree": {"sha": "0b3574b5474bd36afcdd6738fe707aa66166b303", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b3574b5474bd36afcdd6738fe707aa66166b303"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db8d9ddcbb9741570a2724c227c824f5eda13ad1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db8d9ddcbb9741570a2724c227c824f5eda13ad1", "html_url": "https://github.com/rust-lang/rust/commit/db8d9ddcbb9741570a2724c227c824f5eda13ad1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db8d9ddcbb9741570a2724c227c824f5eda13ad1/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c2843c8adb670570c6a18a06a5d1473b17afffb", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c2843c8adb670570c6a18a06a5d1473b17afffb", "html_url": "https://github.com/rust-lang/rust/commit/1c2843c8adb670570c6a18a06a5d1473b17afffb"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "ea2a56a0013e9016f9cee1f2071fd0691aaef65e", "filename": "src/rustc/middle/resolve3.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/db8d9ddcbb9741570a2724c227c824f5eda13ad1/src%2Frustc%2Fmiddle%2Fresolve3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db8d9ddcbb9741570a2724c227c824f5eda13ad1/src%2Frustc%2Fmiddle%2Fresolve3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fresolve3.rs?ref=db8d9ddcbb9741570a2724c227c824f5eda13ad1", "patch": "@@ -380,6 +380,17 @@ class Module {\n     }\n }\n \n+pure fn is_crate_root(module: @Module) -> bool {\n+    alt module.def_id {\n+        none => {\n+            ret false;\n+        }\n+        some(def_id) => {\n+            ret def_id.crate == 0 && def_id.node == 0;\n+        }\n+    }\n+}\n+\n // XXX: This is a workaround due to is_none in the standard library mistakenly\n // requiring a T:copy.\n \n@@ -2802,6 +2813,20 @@ class Resolver {\n             }\n \n             item_fn(fn_decl, ty_params, block) {\n+                // If this is the main function, we must record it in the\n+                // session.\n+                //\n+                // For speed, we put the string comparison last in this chain\n+                // of conditionals.\n+\n+                if !self.session.building_library &&\n+                        is_none(self.session.main_fn) &&\n+                        is_crate_root(self.current_module) &&\n+                        str::eq(*item.ident, \"main\") {\n+\n+                    self.session.main_fn = some((item.id, item.span));\n+                }\n+\n                 self.resolve_function(NormalRibKind,\n                                       some(@fn_decl),\n                                       HasTypeParameters(&ty_params,"}]}