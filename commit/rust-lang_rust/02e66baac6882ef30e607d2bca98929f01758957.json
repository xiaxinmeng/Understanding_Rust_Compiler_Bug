{"sha": "02e66baac6882ef30e607d2bca98929f01758957", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyZTY2YmFhYzY4ODJlZjMwZTYwN2QyYmNhOTg5MjlmMDE3NTg5NTc=", "commit": {"author": {"name": "Philipp Gesang", "email": "phg@phi-gamma.net", "date": "2020-01-21T20:51:13Z"}, "committer": {"name": "Philipp Gesang", "email": "phg@phi-gamma.net", "date": "2020-01-21T17:56:56Z"}, "message": "Test try diagnostics for impl and trait methods\n\nSigned-off-by: Philipp Gesang <phg@phi-gamma.net>", "tree": {"sha": "e9f63b4a2306dbe3095832a08ee8d31605e626ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9f63b4a2306dbe3095832a08ee8d31605e626ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02e66baac6882ef30e607d2bca98929f01758957", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEMVlAWeTE6+fgRVjnE2DsCzzD1m0FAl4nO2gACgkQE2DsCzzD\n1m16+RAA3KKC7fHJOkUoxHy0AtTbNEym7TVo2TyFTWkE/sxjp2/L2+AgXgJ0pGq/\nqm9AB/PzW75FQWW1lpGonlZOVh+3mDeesVr88PKXhGx5Cb5VCEU18ofaFCShxyNg\nBERmMar7IG8970WVxRc65mTaXvij/zIQO9i2gu/3FUCPsms0GuP8LfV+Aqi/LnlN\nLvHQ635mHcyMC3W8RGZxS08v/4t32aId9zCLNJ9EjmopbhHQDVCD/S+oweLn5Jmn\ntna7YsRgDkHVT6SiPy9HtuHXDX6yFzGIcRjrgZB7EfokUdbmqMRBV2wQYX/FwEE8\nz/5RW4n+23nSbvo+qf6Z8WODB0bs9L+k6ukH9NQ2wNZXdV/i2Fgp4GvB0vAPnlOe\nlGH5dJqynxMgQt9IR9kvVs3FnXE9jiKLXUaKDlHTr/5/CIU0ZQqiHHvc1z4dM1rm\nVG9yQn5hQRFGtgZR7+4gTpYuS+LK1HsiPh9a/pKNyJTp9bV5B1rNTu0rcAOV1sD/\noKOagdxolRxlsJiQYET6uDZKA228W7+INc1tP4RdbabwGzZzucdngqyLjJL6QbqN\ny48RB8EedhlapKBKUCvDbPVFzOmIUWwC+ksDXa1R9+3lh8tOWpjgPVRVMtBGZkxA\nY5H4B/U9EOy6GyxmSZGaET8ByQMD1FmQ8MYY9nHlalaxLl5veCI=\n=+Em+\n-----END PGP SIGNATURE-----", "payload": "tree e9f63b4a2306dbe3095832a08ee8d31605e626ef\nparent 5dee7dddf24a022184a743b714b5062e83516a87\nauthor Philipp Gesang <phg@phi-gamma.net> 1579639873 +0100\ncommitter Philipp Gesang <phg@phi-gamma.net> 1579629416 +0100\n\nTest try diagnostics for impl and trait methods\n\nSigned-off-by: Philipp Gesang <phg@phi-gamma.net>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02e66baac6882ef30e607d2bca98929f01758957", "html_url": "https://github.com/rust-lang/rust/commit/02e66baac6882ef30e607d2bca98929f01758957", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02e66baac6882ef30e607d2bca98929f01758957/comments", "author": {"login": "phi-gamma", "id": 1437713, "node_id": "MDQ6VXNlcjE0Mzc3MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1437713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phi-gamma", "html_url": "https://github.com/phi-gamma", "followers_url": "https://api.github.com/users/phi-gamma/followers", "following_url": "https://api.github.com/users/phi-gamma/following{/other_user}", "gists_url": "https://api.github.com/users/phi-gamma/gists{/gist_id}", "starred_url": "https://api.github.com/users/phi-gamma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phi-gamma/subscriptions", "organizations_url": "https://api.github.com/users/phi-gamma/orgs", "repos_url": "https://api.github.com/users/phi-gamma/repos", "events_url": "https://api.github.com/users/phi-gamma/events{/privacy}", "received_events_url": "https://api.github.com/users/phi-gamma/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phi-gamma", "id": 1437713, "node_id": "MDQ6VXNlcjE0Mzc3MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1437713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phi-gamma", "html_url": "https://github.com/phi-gamma", "followers_url": "https://api.github.com/users/phi-gamma/followers", "following_url": "https://api.github.com/users/phi-gamma/following{/other_user}", "gists_url": "https://api.github.com/users/phi-gamma/gists{/gist_id}", "starred_url": "https://api.github.com/users/phi-gamma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phi-gamma/subscriptions", "organizations_url": "https://api.github.com/users/phi-gamma/orgs", "repos_url": "https://api.github.com/users/phi-gamma/repos", "events_url": "https://api.github.com/users/phi-gamma/events{/privacy}", "received_events_url": "https://api.github.com/users/phi-gamma/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5dee7dddf24a022184a743b714b5062e83516a87", "url": "https://api.github.com/repos/rust-lang/rust/commits/5dee7dddf24a022184a743b714b5062e83516a87", "html_url": "https://github.com/rust-lang/rust/commit/5dee7dddf24a022184a743b714b5062e83516a87"}], "stats": {"total": 57, "additions": 56, "deletions": 1}, "files": [{"sha": "63d17414c313bab96f509f4f12ed99b2dbf61a54", "filename": "src/test/ui/try-on-option-diagnostics.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/02e66baac6882ef30e607d2bca98929f01758957/src%2Ftest%2Fui%2Ftry-on-option-diagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02e66baac6882ef30e607d2bca98929f01758957/src%2Ftest%2Fui%2Ftry-on-option-diagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-on-option-diagnostics.rs?ref=02e66baac6882ef30e607d2bca98929f01758957", "patch": "@@ -16,3 +16,32 @@ fn a_closure() -> u32 {\n     };\n     a_closure()\n }\n+\n+fn a_method() -> u32 {\n+    struct S;\n+\n+    impl S {\n+        fn a_method() {\n+            let x: Option<u32> = None;\n+            x?; //~ ERROR the `?` operator\n+        }\n+    }\n+\n+    S::a_method();\n+    22\n+}\n+\n+fn a_trait_method() -> u32 {\n+    struct S;\n+    trait T {\n+        fn a_trait_method() {\n+            let x: Option<u32> = None;\n+            x?; //~ ERROR the `?` operator\n+        }\n+    }\n+\n+    impl T for S { }\n+\n+    S::a_trait_method();\n+    22\n+}"}, {"sha": "c9dc3f1b87969841b90c14d9a5c348fe8f0f7e91", "filename": "src/test/ui/try-on-option-diagnostics.stderr", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/02e66baac6882ef30e607d2bca98929f01758957/src%2Ftest%2Fui%2Ftry-on-option-diagnostics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/02e66baac6882ef30e607d2bca98929f01758957/src%2Ftest%2Fui%2Ftry-on-option-diagnostics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-on-option-diagnostics.stderr?ref=02e66baac6882ef30e607d2bca98929f01758957", "patch": "@@ -27,6 +27,32 @@ LL | |     };\n    = help: the trait `std::ops::Try` is not implemented for `{integer}`\n    = note: required by `std::ops::Try::from_error`\n \n-error: aborting due to 2 previous errors\n+error[E0277]: the `?` operator can only be used in a method that returns `Result` or `Option` (or another type that implements `std::ops::Try`)\n+  --> $DIR/try-on-option-diagnostics.rs:26:13\n+   |\n+LL | /         fn a_method() {\n+LL | |             let x: Option<u32> = None;\n+LL | |             x?;\n+   | |             ^^ cannot use the `?` operator in a method that returns `()`\n+LL | |         }\n+   | |_________- this function should return `Result` or `Option` to accept `?`\n+   |\n+   = help: the trait `std::ops::Try` is not implemented for `()`\n+   = note: required by `std::ops::Try::from_error`\n+\n+error[E0277]: the `?` operator can only be used in a trait method that returns `Result` or `Option` (or another type that implements `std::ops::Try`)\n+  --> $DIR/try-on-option-diagnostics.rs:39:13\n+   |\n+LL | /         fn a_trait_method() {\n+LL | |             let x: Option<u32> = None;\n+LL | |             x?;\n+   | |             ^^ cannot use the `?` operator in a trait method that returns `()`\n+LL | |         }\n+   | |_________- this function should return `Result` or `Option` to accept `?`\n+   |\n+   = help: the trait `std::ops::Try` is not implemented for `()`\n+   = note: required by `std::ops::Try::from_error`\n+\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0277`."}]}