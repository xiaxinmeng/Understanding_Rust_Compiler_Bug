{"sha": "198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5OGNhYTg3Y2Q4NzBmOGZkNTJiZjBiZDVmZTQ3MWNmNDM5YzEyZjA=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-03-02T00:33:24Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-03-12T00:31:43Z"}, "message": "Update users for the std::rand -> librand move.", "tree": {"sha": "3429f047229c85a48cc7214e8db9954c02be97a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3429f047229c85a48cc7214e8db9954c02be97a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "html_url": "https://github.com/rust-lang/rust/commit/198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15e289846219cc3ad8b0225712bf2309f2c02439", "url": "https://api.github.com/repos/rust-lang/rust/commits/15e289846219cc3ad8b0225712bf2309f2c02439", "html_url": "https://github.com/rust-lang/rust/commit/15e289846219cc3ad8b0225712bf2309f2c02439"}], "stats": {"total": 195, "additions": 131, "deletions": 64}, "files": [{"sha": "e20baa32c1a9a9ce21ebc3551abc6248ef489bf5", "filename": "src/doc/guide-tasks.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Fdoc%2Fguide-tasks.md", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Fdoc%2Fguide-tasks.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide-tasks.md?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -50,13 +50,13 @@ concurrency at this writing:\n * [`sync::DuplexStream`] - An extension of `pipes::stream` that allows both sending and receiving,\n * [`sync::SyncChan`] - An extension of `pipes::stream` that provides synchronous message sending,\n * [`sync::SyncPort`] - An extension of `pipes::stream` that acknowledges each message received,\n-* [`sync::rendezvous`] - Creates a stream whose channel, upon sending a message, blocks until the \n+* [`sync::rendezvous`] - Creates a stream whose channel, upon sending a message, blocks until the\n     message is received.\n * [`sync::Arc`] - The Arc (atomically reference counted) type, for safely sharing immutable data,\n * [`sync::RWArc`] - A dual-mode Arc protected by a reader-writer lock,\n * [`sync::MutexArc`] - An Arc with mutable data protected by a blocking mutex,\n * [`sync::Semaphore`] - A counting, blocking, bounded-waiting semaphore,\n-* [`sync::Mutex`] - A blocking, bounded-waiting, mutual exclusion lock with an associated \n+* [`sync::Mutex`] - A blocking, bounded-waiting, mutual exclusion lock with an associated\n     FIFO condition variable,\n * [`sync::RWLock`] - A blocking, no-starvation, reader-writer lock with an associated condvar,\n * [`sync::Barrier`] - A barrier enables multiple tasks to synchronize the beginning\n@@ -343,8 +343,8 @@ a single large vector of floats. Each task needs the full vector to perform its\n \n ~~~\n # extern crate sync;\n+ extern crate rand;\n # use std::vec;\n-# use std::rand;\n use sync::Arc;\n \n fn pnorm(nums: &~[f64], p: uint) -> f64 {\n@@ -376,9 +376,9 @@ created by the line\n \n ~~~\n # extern crate sync;\n+# extern crate rand;\n # use sync::Arc;\n # use std::vec;\n-# use std::rand;\n # fn main() {\n # let numbers = vec::from_fn(1000000, |_| rand::random::<f64>());\n let numbers_arc=Arc::new(numbers);\n@@ -389,9 +389,9 @@ and a clone of it is sent to each task\n \n ~~~\n # extern crate sync;\n+# extern crate rand;\n # use sync::Arc;\n # use std::vec;\n-# use std::rand;\n # fn main() {\n # let numbers=vec::from_fn(1000000, |_| rand::random::<f64>());\n # let numbers_arc = Arc::new(numbers);\n@@ -406,9 +406,9 @@ Each task recovers the underlying data by\n \n ~~~\n # extern crate sync;\n+# extern crate rand;\n # use sync::Arc;\n # use std::vec;\n-# use std::rand;\n # fn main() {\n # let numbers=vec::from_fn(1000000, |_| rand::random::<f64>());\n # let numbers_arc=Arc::new(numbers);"}, {"sha": "8f37aecfc34c2edd8227e5d1a14dd86a4a267b7d", "filename": "src/doc/tutorial.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Fdoc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Fdoc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftutorial.md?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -2529,7 +2529,7 @@ of type `ABC` can be randomly generated and converted to a string:\n #[deriving(Eq)]\n struct Circle { radius: f64 }\n \n-#[deriving(Rand, Show)]\n+#[deriving(Clone, Show)]\n enum ABC { A, B, C }\n ~~~\n "}, {"sha": "260c1c8912475f7f7a850ae177c182100e5b73ea", "filename": "src/etc/generate-deriving-span-tests.py", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Fetc%2Fgenerate-deriving-span-tests.py", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Fetc%2Fgenerate-deriving-span-tests.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgenerate-deriving-span-tests.py?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -39,6 +39,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n {error_deriving}\n struct Error;"}, {"sha": "87e9c3f238ad50d4cf6452dd2abe265471a7e8e7", "filename": "src/libcollections/bitv.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibcollections%2Fbitv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibcollections%2Fbitv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbitv.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -947,8 +947,8 @@ mod tests {\n \n     use std::uint;\n     use std::vec;\n-    use std::rand;\n-    use std::rand::Rng;\n+    use rand;\n+    use rand::Rng;\n \n     static BENCH_BITS : uint = 1 << 14;\n "}, {"sha": "f84354f9b009db98c058eff36b574919349f2291", "filename": "src/libcollections/deque.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibcollections%2Fdeque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibcollections%2Fdeque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fdeque.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -44,8 +44,9 @@ pub mod bench {\n     extern crate test;\n     use self::test::BenchHarness;\n     use std::container::MutableMap;\n-    use std::{vec, rand};\n-    use std::rand::Rng;\n+    use std::vec;\n+    use rand;\n+    use rand::Rng;\n \n     pub fn insert_rand_n<M:MutableMap<uint,uint>>(n: uint,\n                                                   map: &mut M,"}, {"sha": "a3b65609b0a37a67e2337a6b05143101777ed9ba", "filename": "src/libcollections/dlist.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibcollections%2Fdlist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibcollections%2Fdlist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fdlist.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -633,7 +633,7 @@ mod tests {\n     extern crate test;\n     use self::test::BenchHarness;\n     use deque::Deque;\n-    use std::rand;\n+    use rand;\n     use super::{DList, Node, ListInsertion};\n \n     pub fn check_links<T>(list: &DList<T>) {"}, {"sha": "4a9f95dcb724de8c75d254742d1d494b288828f2", "filename": "src/libcollections/hashmap.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibcollections%2Fhashmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibcollections%2Fhashmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fhashmap.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -61,8 +61,8 @@ use std::iter::{FilterMap, Chain, Repeat, Zip};\n use std::iter;\n use std::mem::replace;\n use std::num;\n-use std::rand::Rng;\n-use std::rand;\n+use rand::Rng;\n+use rand;\n use std::vec::{Items, MutItems};\n use std::vec_ng::Vec;\n use std::vec_ng;"}, {"sha": "a087180d9a50277f4729c550e34f83b220f6d1d5", "filename": "src/libcollections/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibcollections%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibcollections%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flib.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -23,6 +23,8 @@\n #[allow(unrecognized_lint)];\n #[allow(default_type_param_usage)];\n \n+extern crate rand;\n+\n #[cfg(test)] extern crate test;\n \n pub use bitv::Bitv;"}, {"sha": "5965417bac71b952f6d4481be4dbc2e53e5f7ddc", "filename": "src/libcollections/treemap.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibcollections%2Ftreemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibcollections%2Ftreemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Ftreemap.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -1009,8 +1009,8 @@ mod test_treemap {\n \n     use super::{TreeMap, TreeNode};\n \n-    use std::rand::Rng;\n-    use std::rand;\n+    use rand::Rng;\n+    use rand;\n \n     #[test]\n     fn find_empty() {"}, {"sha": "2232af98eb311971d9ec4d3e26effd43a6745f2b", "filename": "src/libcollections/trie.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibcollections%2Ftrie.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibcollections%2Ftrie.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Ftrie.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -898,7 +898,7 @@ mod test_map {\n mod bench_map {\n     extern crate test;\n     use super::TrieMap;\n-    use std::rand::{weak_rng, Rng};\n+    use rand::{weak_rng, Rng};\n     use self::test::BenchHarness;\n \n     #[bench]"}, {"sha": "673eb7e76de492e50fe4ba5ac24a7711f1e3889d", "filename": "src/libextra/lib.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibextra%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibextra%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Flib.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -34,9 +34,10 @@ Rust extras are part of the standard Rust distribution.\n #[deny(non_camel_case_types)];\n #[deny(missing_doc)];\n \n-extern crate sync;\n-extern crate serialize;\n extern crate collections;\n+extern crate rand;\n+extern crate serialize;\n+extern crate sync;\n extern crate time;\n \n // Utility modules"}, {"sha": "4e4d80ae292cfb57bcce3cbb718f2ee51f5af3d1", "filename": "src/libextra/tempfile.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibextra%2Ftempfile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibextra%2Ftempfile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ftempfile.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,8 +12,8 @@\n \n \n use std::os;\n-use std::rand::Rng;\n-use std::rand;\n+use rand::Rng;\n+use rand;\n use std::io;\n use std::io::fs;\n "}, {"sha": "17c96f1c5aba9a16acb2dd557e0646e6694ecacc", "filename": "src/libflate/lib.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibflate%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibflate%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibflate%2Flib.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -90,9 +90,10 @@ pub fn inflate_bytes_zlib(bytes: &[u8]) -> CVec<u8> {\n \n #[cfg(test)]\n mod tests {\n+    extern crate rand;\n+\n     use super::{inflate_bytes, deflate_bytes};\n-    use std::rand;\n-    use std::rand::Rng;\n+    use self::rand::Rng;\n \n     #[test]\n     fn test_flate_round_trip() {"}, {"sha": "22dd4c74936b451db698aea49696e30e0eef0aaf", "filename": "src/libgreen/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibgreen%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibgreen%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgreen%2Flib.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -175,6 +175,8 @@\n #[feature(macro_rules)];\n #[allow(visible_private_types)];\n \n+extern crate rand;\n+\n use std::mem::replace;\n use std::os;\n use std::rt::crate_map;"}, {"sha": "aae0034263e373b8e99b5e7a55ec6d79836368b2", "filename": "src/libgreen/sched.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibgreen%2Fsched.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibgreen%2Fsched.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgreen%2Fsched.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n use std::cast;\n-use std::rand::{XorShiftRng, Rng, Rand};\n use std::rt::local::Local;\n use std::rt::rtio::{RemoteCallback, PausableIdleCallback, Callback, EventLoop};\n use std::rt::task::BlockedTask;\n@@ -18,6 +17,8 @@ use std::sync::deque;\n use std::unstable::mutex::NativeMutex;\n use std::raw;\n \n+use rand::{XorShiftRng, Rng, Rand};\n+\n use TaskState;\n use context::Context;\n use coroutine::Coroutine;\n@@ -957,7 +958,7 @@ fn new_sched_rng() -> XorShiftRng {\n fn new_sched_rng() -> XorShiftRng {\n     use std::libc;\n     use std::mem;\n-    use std::rand::SeedableRng;\n+    use rand::SeedableRng;\n \n     let fd = \"/dev/urandom\".with_c_str(|name| {\n         unsafe { libc::open(name, libc::O_RDONLY, 0) }"}, {"sha": "c6203b3f234c98fbffa0a0273cbe83c65f4d170b", "filename": "src/libnum/bigint.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibnum%2Fbigint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibnum%2Fbigint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnum%2Fbigint.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -24,7 +24,7 @@ use std::from_str::FromStr;\n use std::num::CheckedDiv;\n use std::num::{Bitwise, ToPrimitive, FromPrimitive};\n use std::num::{Zero, One, ToStrRadix, FromStrRadix};\n-use std::rand::Rng;\n+use rand::Rng;\n use std::str;\n use std::uint;\n use std::vec;\n@@ -1470,7 +1470,7 @@ mod biguint_tests {\n     use std::num::{Zero, One, FromStrRadix, ToStrRadix};\n     use std::num::{ToPrimitive, FromPrimitive};\n     use std::num::CheckedDiv;\n-    use std::rand::{task_rng};\n+    use rand::{task_rng};\n     use std::str;\n     use std::u64;\n     use std::vec;\n@@ -2205,7 +2205,7 @@ mod bigint_tests {\n     use std::num::CheckedDiv;\n     use std::num::{Zero, One, FromStrRadix, ToStrRadix};\n     use std::num::{ToPrimitive, FromPrimitive};\n-    use std::rand::{task_rng};\n+    use rand::{task_rng};\n     use std::u64;\n \n     #[test]"}, {"sha": "8ff042ba3621ca94e3850d23349fc1f5805f9913", "filename": "src/libnum/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibnum%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibnum%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnum%2Flib.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -15,6 +15,8 @@\n #[crate_type = \"dylib\"];\n #[license = \"MIT/ASL2\"];\n \n+extern crate rand;\n+\n pub mod bigint;\n pub mod rational;\n pub mod complex;"}, {"sha": "5dbebbb4db1719e1f119c882d6f0e7f51dad39e7", "filename": "src/librustc/util/sha2.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibrustc%2Futil%2Fsha2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibrustc%2Futil%2Fsha2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fsha2.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -524,12 +524,14 @@ static H256: [u32, ..8] = [\n \n #[cfg(test)]\n mod tests {\n+    extern crate rand;\n+\n     use super::{Digest, Sha256, FixedBuffer};\n     use std::num::Bounded;\n     use std::vec;\n     use std::vec_ng::Vec;\n-    use std::rand::isaac::IsaacRng;\n-    use std::rand::Rng;\n+    use self::rand::isaac::IsaacRng;\n+    use self::rand::Rng;\n     use serialize::hex::FromHex;\n \n     // A normal addition - no overflow occurs"}, {"sha": "a09b03ec58a2edb8547b1ff48063cec2909eb4b9", "filename": "src/libserialize/base64.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibserialize%2Fbase64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibserialize%2Fbase64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fbase64.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -263,6 +263,7 @@ impl<'a> FromBase64 for &'a str {\n #[cfg(test)]\n mod tests {\n     extern crate test;\n+    extern crate rand;\n     use self::test::BenchHarness;\n     use base64::{Config, FromBase64, ToBase64, STANDARD, URL_SAFE};\n \n@@ -335,7 +336,7 @@ mod tests {\n \n     #[test]\n     fn test_base64_random() {\n-        use std::rand::{task_rng, random, Rng};\n+        use self::rand::{task_rng, random, Rng};\n         use std::vec;\n \n         for _ in range(0, 1000) {"}, {"sha": "b50d527e3f596c8f0e7ec16c3f28257ff743f4d8", "filename": "src/libsync/arc.rs", "status": "modified", "additions": 16, "deletions": 12, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibsync%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibsync%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsync%2Farc.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -18,23 +18,27 @@\n  * With simple pipes, without Arc, a copy would have to be made for each task.\n  *\n  * ```rust\n+ * extern crate sync;\n+ * extern crate rand;\n  * use sync::Arc;\n- * use std::{rand, vec};\n+ * use std::vec;\n  *\n- * let numbers = vec::from_fn(100, |i| (i as f32) * rand::random());\n- * let shared_numbers = Arc::new(numbers);\n+ * fn main() {\n+ *     let numbers = vec::from_fn(100, |i| (i as f32) * rand::random());\n+ *     let shared_numbers = Arc::new(numbers);\n  *\n- *   for _ in range(0, 10) {\n- *       let (port, chan) = Chan::new();\n- *       chan.send(shared_numbers.clone());\n+ *     for _ in range(0, 10) {\n+ *         let (port, chan) = Chan::new();\n+ *         chan.send(shared_numbers.clone());\n  *\n- *       spawn(proc() {\n- *           let shared_numbers = port.recv();\n- *           let local_numbers = shared_numbers.get();\n+ *         spawn(proc() {\n+ *             let shared_numbers = port.recv();\n+ *             let local_numbers = shared_numbers.get();\n  *\n- *           // Work with the local numbers\n- *       });\n- *   }\n+ *             // Work with the local numbers\n+ *         });\n+ *     }\n+ * }\n  * ```\n  */\n "}, {"sha": "bc314bc204bec9e08046890ac68722bda271af2f", "filename": "src/libsyntax/ext/deriving/generic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -216,7 +216,7 @@ pub struct TraitDef<'a> {\n pub struct MethodDef<'a> {\n     /// name of the method\n     name: &'a str,\n-    /// List of generics, e.g. `R: std::rand::Rng`\n+    /// List of generics, e.g. `R: rand::Rng`\n     generics: LifetimeBounds<'a>,\n \n     /// Whether there is a self argument (outer Option) i.e. whether"}, {"sha": "407da784b68b3bc1aa27fb2070ef2d6e17369149", "filename": "src/libuuid/lib.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibuuid%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Flibuuid%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibuuid%2Flib.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -62,6 +62,8 @@ Examples of string representations:\n // test harness access\n #[cfg(test)]\n extern crate test;\n+\n+extern crate rand;\n extern crate serialize;\n \n use std::cast::{transmute,transmute_copy};\n@@ -71,11 +73,11 @@ use std::fmt;\n use std::from_str::FromStr;\n use std::hash::{Hash, sip};\n use std::num::FromStrRadix;\n-use std::rand::Rng;\n-use std::rand;\n use std::str;\n use std::vec;\n \n+use rand::Rng;\n+\n use serialize::{Encoder, Encodable, Decoder, Decodable};\n \n /// A 128-bit (16 byte) buffer containing the ID\n@@ -519,12 +521,12 @@ impl rand::Rand for Uuid {\n #[cfg(test)]\n mod test {\n     extern crate collections;\n+    extern crate rand;\n \n     use super::{Uuid, VariantMicrosoft, VariantNCS, VariantRFC4122,\n                 Version1Mac, Version2Dce, Version3Md5, Version4Random,\n                 Version5Sha1};\n     use std::str;\n-    use std::rand;\n     use std::io::MemWriter;\n \n     #[test]"}, {"sha": "fcea5222e108b9bb4a717d0b7ec16d262cc1189a", "filename": "src/test/bench/core-map.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fbench%2Fcore-map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fbench%2Fcore-map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fcore-map.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -9,11 +9,12 @@\n // except according to those terms.\n \n extern crate collections;\n+extern crate rand;\n extern crate time;\n \n use collections::{TrieMap, TreeMap, HashMap, HashSet};\n use std::os;\n-use std::rand::{Rng, IsaacRng, SeedableRng};\n+use rand::{Rng, IsaacRng, SeedableRng};\n use std::uint;\n use std::vec;\n "}, {"sha": "96f3c6814ab931f6170e1a4b77fb29cd606c8723", "filename": "src/test/bench/core-set.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fbench%2Fcore-set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fbench%2Fcore-set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fcore-set.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -11,13 +11,13 @@\n // except according to those terms.\n \n extern crate collections;\n+extern crate rand;\n extern crate time;\n \n use collections::bitv::BitvSet;\n use collections::TreeSet;\n use collections::HashSet;\n use std::os;\n-use std::rand;\n use std::uint;\n \n struct Results {"}, {"sha": "2700b72ae9819928c93467fd0752476edf2570bc", "filename": "src/test/bench/core-std.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fbench%2Fcore-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fbench%2Fcore-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fcore-std.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,13 +12,13 @@\n \n #[feature(macro_rules)];\n \n+extern crate rand;\n extern crate time;\n \n use time::precise_time_s;\n+use rand::Rng;\n use std::mem::swap;\n use std::os;\n-use std::rand::Rng;\n-use std::rand;\n use std::str;\n use std::vec;\n use std::io::File;"}, {"sha": "4954f083b36949f494b961d5c5c75e1b2b391203", "filename": "src/test/bench/noise.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fbench%2Fnoise.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fbench%2Fnoise.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fnoise.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -11,8 +11,10 @@\n // Multi-language Perlin noise benchmark.\n // See https://github.com/nsf/pnoise for timings and alternative implementations.\n \n+extern crate rand;\n+\n use std::f32::consts::PI;\n-use std::rand::{Rng, StdRng};\n+use rand::{Rng, StdRng};\n \n struct Vec2 {\n     x: f32,"}, {"sha": "1ec5dfa2da9f20a77268dea5abd45565ebfde283", "filename": "src/test/compile-fail/box-static-bound.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fbox-static-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fbox-static-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbox-static-bound.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -19,4 +19,3 @@ fn g<T:'static>(x: T) -> @T {\n }\n \n fn main() {}\n-"}, {"sha": "6f3ce6abe1a765c332a167f3d8633baf961fbedc", "filename": "src/test/compile-fail/deriving-span-Clone-enum-struct-variant.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Clone-enum-struct-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Clone-enum-struct-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Clone-enum-struct-variant.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,6 +12,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n \n struct Error;"}, {"sha": "c138c259a0f123b79a578e7bbd8809d85d4b07ad", "filename": "src/test/compile-fail/deriving-span-Clone-enum.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Clone-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Clone-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Clone-enum.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,6 +12,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n \n struct Error;"}, {"sha": "9226c4a79603bc3d09dd5f1fad8fb54af2742414", "filename": "src/test/compile-fail/deriving-span-Clone-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Clone-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Clone-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Clone-struct.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,6 +12,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n \n struct Error;"}, {"sha": "e49bd45f4d0751f622f29a388069c784aba872ad", "filename": "src/test/compile-fail/deriving-span-Clone-tuple-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Clone-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Clone-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Clone-tuple-struct.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,6 +12,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n \n struct Error;"}, {"sha": "5da4ae5ca4242d3be630df4f68031680ff6682ef", "filename": "src/test/compile-fail/deriving-span-Default-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Default-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Default-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Default-struct.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,6 +12,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n \n struct Error;"}, {"sha": "3f44ea926b5c94a78ccd01c00362f0627a3e9468", "filename": "src/test/compile-fail/deriving-span-Default-tuple-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Default-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Default-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Default-tuple-struct.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,6 +12,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n \n struct Error;"}, {"sha": "482954b39f7f2f72496f20b32e1d41f52f51b5cb", "filename": "src/test/compile-fail/deriving-span-Eq-enum-struct-variant.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Eq-enum-struct-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Eq-enum-struct-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Eq-enum-struct-variant.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,6 +12,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n \n struct Error;"}, {"sha": "5221869a2850323416c60f8153deababd8710560", "filename": "src/test/compile-fail/deriving-span-Eq-enum.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Eq-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Eq-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Eq-enum.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,6 +12,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n \n struct Error;"}, {"sha": "a063628993e5ace4e3507ce41a552c500b376d19", "filename": "src/test/compile-fail/deriving-span-Eq-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Eq-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Eq-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Eq-struct.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,6 +12,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n \n struct Error;"}, {"sha": "efa92c0a29a14c08b21276e8934ff7f4fb007893", "filename": "src/test/compile-fail/deriving-span-Eq-tuple-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Eq-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Eq-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Eq-tuple-struct.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,6 +12,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n \n struct Error;"}, {"sha": "b08f7305cfc48205f9b324deed5f2dc80328ea80", "filename": "src/test/compile-fail/deriving-span-Hash-enum-struct-variant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Hash-enum-struct-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Hash-enum-struct-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Hash-enum-struct-variant.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,8 +12,8 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n-use std::hash::Hash;\n \n struct Error;\n "}, {"sha": "6fe0094c8d21090f5db7754c3c6c44e425d42f2c", "filename": "src/test/compile-fail/deriving-span-Hash-enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Hash-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Hash-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Hash-enum.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,8 +12,8 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n-use std::hash::Hash;\n \n struct Error;\n "}, {"sha": "0ae28d084ec04f2ca0e9cd57d71d92bf2f157885", "filename": "src/test/compile-fail/deriving-span-Hash-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Hash-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Hash-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Hash-struct.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,8 +12,8 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n-use std::hash::Hash;\n \n struct Error;\n "}, {"sha": "1b69abb3e16e7cf01fe28023d3aa8ec1ffc52cb8", "filename": "src/test/compile-fail/deriving-span-Hash-tuple-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Hash-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Hash-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Hash-tuple-struct.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,8 +12,8 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n-use std::hash::Hash;\n \n struct Error;\n "}, {"sha": "edfc949970f2ed92f551cb918f958b17c741c7d5", "filename": "src/test/compile-fail/deriving-span-Ord-enum-struct-variant.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Ord-enum-struct-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Ord-enum-struct-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Ord-enum-struct-variant.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,6 +12,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n #[deriving(Eq)]\n struct Error;"}, {"sha": "13da4454c3e276170b0370a278190b574c10a5be", "filename": "src/test/compile-fail/deriving-span-Ord-enum.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Ord-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Ord-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Ord-enum.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,6 +12,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n #[deriving(Eq)]\n struct Error;"}, {"sha": "bab38983dfb1916ebd440eb77d484adc2549461b", "filename": "src/test/compile-fail/deriving-span-Ord-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Ord-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Ord-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Ord-struct.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,6 +12,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n #[deriving(Eq)]\n struct Error;"}, {"sha": "bb211d7781e425171f385f06a1301f22280a3239", "filename": "src/test/compile-fail/deriving-span-Ord-tuple-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Ord-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Ord-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Ord-tuple-struct.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,6 +12,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n #[deriving(Eq)]\n struct Error;"}, {"sha": "9338e23fbb475c1f1cc1339ec8e8a5bd3ab6b6e4", "filename": "src/test/compile-fail/deriving-span-Rand-enum-struct-variant.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Rand-enum-struct-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Rand-enum-struct-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Rand-enum-struct-variant.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,6 +12,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n \n struct Error;"}, {"sha": "1a978176d7983967547282ae325f3118b062415b", "filename": "src/test/compile-fail/deriving-span-Rand-enum.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Rand-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Rand-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Rand-enum.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,6 +12,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n \n struct Error;"}, {"sha": "7f62850398071527df391711cacd4d23f91b2cca", "filename": "src/test/compile-fail/deriving-span-Rand-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Rand-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Rand-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Rand-struct.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,6 +12,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n \n struct Error;"}, {"sha": "9b11c02784654c4db82d00699675d0901cf9f1da", "filename": "src/test/compile-fail/deriving-span-Rand-tuple-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Rand-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Rand-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Rand-tuple-struct.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,6 +12,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n \n struct Error;"}, {"sha": "972f60bf2c9ab363d8dcbf81fb38c0a6ad0d1bfb", "filename": "src/test/compile-fail/deriving-span-Show-enum-struct-variant.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Show-enum-struct-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Show-enum-struct-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Show-enum-struct-variant.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,6 +12,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n \n struct Error;"}, {"sha": "ba3fd1766b2f8841471d8cd5ccfc47269bacd1e5", "filename": "src/test/compile-fail/deriving-span-Show-enum.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Show-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Show-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Show-enum.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,6 +12,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n \n struct Error;"}, {"sha": "1e38c9dda5bd7a56fae2b26f0ce50de58c2bd7f0", "filename": "src/test/compile-fail/deriving-span-Show-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Show-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Show-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Show-struct.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,6 +12,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n \n struct Error;"}, {"sha": "7347b324a235b61992cb382ecf4c707620e7cba1", "filename": "src/test/compile-fail/deriving-span-Show-tuple-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Show-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Show-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Show-tuple-struct.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,6 +12,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n \n struct Error;"}, {"sha": "4d362678283d3590bd344e7e734b4d05d97d8df9", "filename": "src/test/compile-fail/deriving-span-TotalEq-enum-struct-variant.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-TotalEq-enum-struct-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-TotalEq-enum-struct-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-TotalEq-enum-struct-variant.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,6 +12,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n #[deriving(Eq)]\n struct Error;"}, {"sha": "66f84612f81150d674c4a13c80d1c963c7a900f3", "filename": "src/test/compile-fail/deriving-span-TotalEq-enum.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-TotalEq-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-TotalEq-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-TotalEq-enum.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,6 +12,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n #[deriving(Eq)]\n struct Error;"}, {"sha": "ba29180e5e68ba4add28c36f729950fdaeb7d39a", "filename": "src/test/compile-fail/deriving-span-TotalEq-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-TotalEq-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-TotalEq-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-TotalEq-struct.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,6 +12,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n #[deriving(Eq)]\n struct Error;"}, {"sha": "6dbd1e3cee94645d20a23db10b8510a3e33b257e", "filename": "src/test/compile-fail/deriving-span-TotalEq-tuple-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-TotalEq-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-TotalEq-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-TotalEq-tuple-struct.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,6 +12,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n #[deriving(Eq)]\n struct Error;"}, {"sha": "54f7667be30a73e2a39878587ae3cbb6641902ec", "filename": "src/test/compile-fail/deriving-span-TotalOrd-enum-struct-variant.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-TotalOrd-enum-struct-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-TotalOrd-enum-struct-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-TotalOrd-enum-struct-variant.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,6 +12,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n #[deriving(Eq, Ord, TotalEq)]\n struct Error;"}, {"sha": "6f51522d1a60f69627a1c0c0cd5d5f87bf1fe0a3", "filename": "src/test/compile-fail/deriving-span-TotalOrd-enum.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-TotalOrd-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-TotalOrd-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-TotalOrd-enum.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,6 +12,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n #[deriving(Eq, Ord, TotalEq)]\n struct Error;"}, {"sha": "b659e4cee220110e33f387e9c5c420a4e6a2ccd0", "filename": "src/test/compile-fail/deriving-span-TotalOrd-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-TotalOrd-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-TotalOrd-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-TotalOrd-struct.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,6 +12,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n #[deriving(Eq, Ord, TotalEq)]\n struct Error;"}, {"sha": "d4f30946d8ec8ce35bbccfa219bafcfb158d5a5a", "filename": "src/test/compile-fail/deriving-span-TotalOrd-tuple-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-TotalOrd-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-TotalOrd-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-TotalOrd-tuple-struct.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,6 +12,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n #[deriving(Eq, Ord, TotalEq)]\n struct Error;"}, {"sha": "2e00c92f469e6a65c651cdd91c9c5b0c1841632a", "filename": "src/test/compile-fail/deriving-span-Zero-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Zero-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Zero-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Zero-struct.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,6 +12,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n \n struct Error;"}, {"sha": "9487c6ced629fb6fe9c689d241c80ea7c17dc913", "filename": "src/test/compile-fail/deriving-span-Zero-tuple-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Zero-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Fcompile-fail%2Fderiving-span-Zero-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-span-Zero-tuple-struct.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -12,6 +12,7 @@\n \n #[feature(struct_variant)];\n extern crate extra;\n+extern crate rand;\n \n \n struct Error;"}, {"sha": "45bb29f617fdb9b432ebe06fc1de4973f92a7d8b", "filename": "src/test/run-make/unicode-input/multiple_files.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Frun-make%2Funicode-input%2Fmultiple_files.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Frun-make%2Funicode-input%2Fmultiple_files.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Funicode-input%2Fmultiple_files.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -8,8 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+extern crate rand;\n+use rand::{task_rng, Rng};\n+\n use std::{char, os, str};\n-use std::rand::{task_rng, Rng};\n use std::io::{File, Process};\n \n // creates unicode_input_multiple_files_{main,chars}.rs, where the"}, {"sha": "1ae6838be5bccc38c1831c28ab7be75756e32880", "filename": "src/test/run-make/unicode-input/span_length.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Frun-make%2Funicode-input%2Fspan_length.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Frun-make%2Funicode-input%2Fspan_length.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Funicode-input%2Fspan_length.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -8,8 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+extern crate rand;\n+use rand::{task_rng, Rng};\n+\n use std::{char, os, str};\n-use std::rand::{task_rng, Rng};\n use std::io::{File, Process};\n \n // creates a file with `fn main() { <random ident> }` and checks the"}, {"sha": "75567efa4703d5f768d04d2d8cb8f95d6aa2a689", "filename": "src/test/run-pass/deriving-encodable-decodable.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Frun-pass%2Fderiving-encodable-decodable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Frun-pass%2Fderiving-encodable-decodable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-encodable-decodable.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -16,10 +16,11 @@\n \n #[feature(struct_variant, managed_boxes)];\n \n+extern crate rand;\n extern crate serialize;\n \n use std::io::MemWriter;\n-use std::rand::{random, Rand};\n+use rand::{random, Rand};\n use serialize::{Encodable, Decodable};\n use serialize::ebml;\n use serialize::ebml::writer::Encoder;"}, {"sha": "a174b2c7ab1a448bf1ad41229f41bdcc8a83bab5", "filename": "src/test/run-pass/deriving-global.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Frun-pass%2Fderiving-global.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Frun-pass%2Fderiving-global.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-global.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -22,6 +22,8 @@\n // except according to those terms.\n \n extern crate serialize; // {En,De}codable\n+extern crate rand; // Rand\n+\n mod submod {\n     // if any of these are implemented without global calls for any\n     // function calls, then being in a submodule will (correctly)"}, {"sha": "c43d8a26fd9c4bbf5a7b01adf5ea3637ca181991", "filename": "src/test/run-pass/deriving-rand.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Frun-pass%2Fderiving-rand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Frun-pass%2Fderiving-rand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-rand.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -9,9 +9,11 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-fast #7103 `extern crate` does not work on check-fast\n+\n #[feature(struct_variant)];\n \n-use std::rand;\n+extern crate rand;\n \n #[deriving(Rand)]\n struct A;"}, {"sha": "349b1ff7b449ef44ab81f1c0a3ac89f375d08755", "filename": "src/test/run-pass/morestack6.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Frun-pass%2Fmorestack6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Frun-pass%2Fmorestack6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmorestack6.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -13,7 +13,8 @@\n // This test attempts to force the dynamic linker to resolve\n // external symbols as close to the red zone as possible.\n \n-use std::rand;\n+extern crate rand;\n+\n use std::task;\n \n mod rustrt {\n@@ -59,7 +60,7 @@ fn runtest2(f: extern fn(), frame_backoff: u32, last_stk: *u8) -> u32 {\n }\n \n pub fn main() {\n-    use std::rand::Rng;\n+    use rand::Rng;\n     let fns = ~[\n         calllink01,\n         calllink02,"}, {"sha": "e307ae36f96c1da6781cf399a3c9e276d37572f5", "filename": "src/test/run-pass/vector-sort-failure-safe.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Frun-pass%2Fvector-sort-failure-safe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/198caa87cd870f8fd52bf0bd5fe471cf439c12f0/src%2Ftest%2Frun-pass%2Fvector-sort-failure-safe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvector-sort-failure-safe.rs?ref=198caa87cd870f8fd52bf0bd5fe471cf439c12f0", "patch": "@@ -8,8 +8,11 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-fast #7103 `extern crate` does not work on check-fast\n+extern crate rand;\n+\n use std::task;\n-use std::rand::{task_rng, Rng};\n+use rand::{task_rng, Rng};\n \n static MAX_LEN: uint = 20;\n static mut drop_counts: [uint, .. MAX_LEN] = [0, .. MAX_LEN];"}]}