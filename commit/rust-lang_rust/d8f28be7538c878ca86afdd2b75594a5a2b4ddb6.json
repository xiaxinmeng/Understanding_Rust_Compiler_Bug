{"sha": "d8f28be7538c878ca86afdd2b75594a5a2b4ddb6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4ZjI4YmU3NTM4Yzg3OGNhODZhZmRkMmI3NTU5NGE1YTJiNGRkYjY=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-05-03T17:10:12Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-05-03T19:38:45Z"}, "message": "Check early on in typeck that types being implemented are actually iface types\n\nCloses #2330.", "tree": {"sha": "a267a1f57074ed5f8d93e7a91b3268fd7f987bb7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a267a1f57074ed5f8d93e7a91b3268fd7f987bb7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8f28be7538c878ca86afdd2b75594a5a2b4ddb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8f28be7538c878ca86afdd2b75594a5a2b4ddb6", "html_url": "https://github.com/rust-lang/rust/commit/d8f28be7538c878ca86afdd2b75594a5a2b4ddb6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8f28be7538c878ca86afdd2b75594a5a2b4ddb6/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74096a79d85c72b088c4fbf14020ac88bee64abc", "url": "https://api.github.com/repos/rust-lang/rust/commits/74096a79d85c72b088c4fbf14020ac88bee64abc", "html_url": "https://github.com/rust-lang/rust/commit/74096a79d85c72b088c4fbf14020ac88bee64abc"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "d8db45d89196133de9d9acf7654e9628dea43509", "filename": "src/rustc/middle/typeck.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/d8f28be7538c878ca86afdd2b75594a5a2b4ddb6/src%2Frustc%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8f28be7538c878ca86afdd2b75594a5a2b4ddb6/src%2Frustc%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck.rs?ref=d8f28be7538c878ca86afdd2b75594a5a2b4ddb6", "patch": "@@ -559,20 +559,27 @@ fn ast_path_to_ty<AC: ast_conv, RS: region_scope copy>(\n /*\n   Instantiates the path for the given iface reference, assuming that\n   it's bound to a valid iface type. Returns the def_id for the defining\n-  iface\n+  iface. Fails if the type is a type other than an iface type.\n  */\n fn instantiate_iface_ref(ccx: @crate_ctxt, t: @ast::iface_ref,\n                          rp: ast::region_param)\n     -> (ast::def_id, ty_param_substs_and_ty) {\n \n+    let sp = t.path.span, err = \"can only implement interface types\",\n+        sess = ccx.tcx.sess;\n+\n     alt lookup_def_tcx(ccx.tcx, t.path.span, t.id) {\n       ast::def_ty(t_id) {\n-        (t_id, ast_path_to_ty(ccx, type_rscope(rp), t_id, t.path, t.id))\n+        let tpt = ast_path_to_ty(ccx, type_rscope(rp), t_id, t.path, t.id);\n+        alt ty::get(tpt.ty).struct {\n+           ty::ty_iface(*) {\n+              (t_id, tpt)\n+           }\n+           _ { sess.span_fatal(sp, err); }\n+        }\n       }\n       _ {\n-        ccx.tcx.sess.span_fatal(\n-            t.path.span,\n-            \"can only implement interface types\");\n+          sess.span_fatal(sp, err);\n       }\n     }\n }"}, {"sha": "355b90bb2aacfe9df92154f5880d3f5a770893b8", "filename": "src/test/compile-fail/issue-2330.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d8f28be7538c878ca86afdd2b75594a5a2b4ddb6/src%2Ftest%2Fcompile-fail%2Fissue-2330.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8f28be7538c878ca86afdd2b75594a5a2b4ddb6/src%2Ftest%2Fcompile-fail%2Fissue-2330.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2330.rs?ref=d8f28be7538c878ca86afdd2b75594a5a2b4ddb6", "patch": "@@ -0,0 +1,13 @@\n+enum chan { }\n+\n+iface channel<T> {\n+    fn send(v: T);\n+}\n+\n+// `chan` is not an iface, it's an enum\n+impl of chan for int { //! ERROR can only implement interface types\n+    fn send(v: int) { fail }\n+}\n+\n+fn main() {\n+}"}]}