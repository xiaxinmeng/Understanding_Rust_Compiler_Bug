{"sha": "b8dd148444d47ba75e635c34025fc0662ca69db0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4ZGQxNDg0NDRkNDdiYTc1ZTYzNWMzNDAyNWZjMDY2MmNhNjlkYjA=", "commit": {"author": {"name": "Haitao Li", "email": "lihaitao@gmail.com", "date": "2011-11-14T16:32:31Z"}, "committer": {"name": "Haitao Li", "email": "lihaitao@gmail.com", "date": "2011-11-14T16:33:29Z"}, "message": "rustllvm: Add a GetOrInsertFunction wrapper\n\nFixes issue #1161\n\nTest-case-by: Brian Anderson <banderson@mozilla.com>\nSigned-off-by: Haitao Li <lihaitao@gmail.com>", "tree": {"sha": "7f0a719838d1c5f6ddf82a87eb9bb9fd42183aa0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f0a719838d1c5f6ddf82a87eb9bb9fd42183aa0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8dd148444d47ba75e635c34025fc0662ca69db0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8dd148444d47ba75e635c34025fc0662ca69db0", "html_url": "https://github.com/rust-lang/rust/commit/b8dd148444d47ba75e635c34025fc0662ca69db0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8dd148444d47ba75e635c34025fc0662ca69db0/comments", "author": {"login": "lht", "id": 19508, "node_id": "MDQ6VXNlcjE5NTA4", "avatar_url": "https://avatars.githubusercontent.com/u/19508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lht", "html_url": "https://github.com/lht", "followers_url": "https://api.github.com/users/lht/followers", "following_url": "https://api.github.com/users/lht/following{/other_user}", "gists_url": "https://api.github.com/users/lht/gists{/gist_id}", "starred_url": "https://api.github.com/users/lht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lht/subscriptions", "organizations_url": "https://api.github.com/users/lht/orgs", "repos_url": "https://api.github.com/users/lht/repos", "events_url": "https://api.github.com/users/lht/events{/privacy}", "received_events_url": "https://api.github.com/users/lht/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lht", "id": 19508, "node_id": "MDQ6VXNlcjE5NTA4", "avatar_url": "https://avatars.githubusercontent.com/u/19508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lht", "html_url": "https://github.com/lht", "followers_url": "https://api.github.com/users/lht/followers", "following_url": "https://api.github.com/users/lht/following{/other_user}", "gists_url": "https://api.github.com/users/lht/gists{/gist_id}", "starred_url": "https://api.github.com/users/lht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lht/subscriptions", "organizations_url": "https://api.github.com/users/lht/orgs", "repos_url": "https://api.github.com/users/lht/repos", "events_url": "https://api.github.com/users/lht/events{/privacy}", "received_events_url": "https://api.github.com/users/lht/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "453168d91742777ee051ab4f8fe6f00c230190df", "url": "https://api.github.com/repos/rust-lang/rust/commits/453168d91742777ee051ab4f8fe6f00c230190df", "html_url": "https://github.com/rust-lang/rust/commit/453168d91742777ee051ab4f8fe6f00c230190df"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "83edf143f335140fdaadb28f8599ab77d760e2f5", "filename": "src/comp/lib/llvm.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b8dd148444d47ba75e635c34025fc0662ca69db0/src%2Fcomp%2Flib%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8dd148444d47ba75e635c34025fc0662ca69db0/src%2Fcomp%2Flib%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Flib%2Fllvm.rs?ref=b8dd148444d47ba75e635c34025fc0662ca69db0", "patch": "@@ -448,6 +448,8 @@ native \"cdecl\" mod llvm = \"rustllvm\" {\n     fn LLVMGetNextFunction(Fn: ValueRef) -> ValueRef;\n     fn LLVMGetPreviousFunction(Fn: ValueRef) -> ValueRef;\n     fn LLVMDeleteFunction(Fn: ValueRef);\n+    fn LLVMGetOrInsertFunction(M: ModuleRef, Name: sbuf, FunctionTy: TypeRef)\n+       -> ValueRef;\n     fn LLVMGetIntrinsicID(Fn: ValueRef) -> uint;\n     fn LLVMGetFunctionCallConv(Fn: ValueRef) -> uint;\n     fn LLVMSetFunctionCallConv(Fn: ValueRef, CC: uint);"}, {"sha": "36393213fb3103128cbf63e80118b858ec25adc0", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b8dd148444d47ba75e635c34025fc0662ca69db0/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8dd148444d47ba75e635c34025fc0662ca69db0/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=b8dd148444d47ba75e635c34025fc0662ca69db0", "patch": "@@ -301,7 +301,8 @@ fn log_fn_time(ccx: @crate_ctxt, name: str, start: time::timeval,\n \n fn decl_fn(llmod: ModuleRef, name: str, cc: uint, llty: TypeRef) -> ValueRef {\n     let llfn: ValueRef =\n-        str::as_buf(name, {|buf| llvm::LLVMAddFunction(llmod, buf, llty) });\n+        str::as_buf(name, {|buf|\n+            llvm::LLVMGetOrInsertFunction(llmod, buf, llty) });\n     llvm::LLVMSetFunctionCallConv(llfn, cc);\n     ret llfn;\n }"}, {"sha": "c0553b3c1d9ffaf82573a6eb8b874e86605ff69b", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b8dd148444d47ba75e635c34025fc0662ca69db0/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/b8dd148444d47ba75e635c34025fc0662ca69db0/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=b8dd148444d47ba75e635c34025fc0662ca69db0", "patch": "@@ -141,3 +141,9 @@ extern \"C\" void LLVMRustEnableSegmentedStacks() {\n   EnableSegmentedStacks = true;\n }\n \n+extern \"C\" LLVMValueRef LLVMGetOrInsertFunction(LLVMModuleRef M,\n+                                                const char* Name,\n+                                                LLVMTypeRef FunctionTy) {\n+  return wrap(unwrap(M)->getOrInsertFunction(Name,\n+                                             unwrap<FunctionType>(FunctionTy)));\n+}"}, {"sha": "9712ea60371226a3e4d3de407f3eae242f49a566", "filename": "src/rustllvm/rustllvm.def.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b8dd148444d47ba75e635c34025fc0662ca69db0/src%2Frustllvm%2Frustllvm.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/b8dd148444d47ba75e635c34025fc0662ca69db0/src%2Frustllvm%2Frustllvm.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2Frustllvm.def.in?ref=b8dd148444d47ba75e635c34025fc0662ca69db0", "patch": "@@ -364,6 +364,7 @@ LLVMGetNextParam\n LLVMGetNextUse\n LLVMGetNumOperands\n LLVMGetOperand\n+LLVMGetOrInsertFunction\n LLVMGetParam\n LLVMGetParamParent\n LLVMGetParamTypes"}, {"sha": "717db32434839de44d401886218189e9392196b5", "filename": "src/test/run-pass/native-dupe.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b8dd148444d47ba75e635c34025fc0662ca69db0/src%2Ftest%2Frun-pass%2Fnative-dupe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8dd148444d47ba75e635c34025fc0662ca69db0/src%2Ftest%2Frun-pass%2Fnative-dupe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnative-dupe.rs?ref=b8dd148444d47ba75e635c34025fc0662ca69db0", "patch": "@@ -0,0 +1,12 @@\n+native \"cdecl\" mod rustrt1 = \"rustrt\" {\n+    fn pin_task();\n+}\n+\n+native \"cdecl\" mod rustrt2 = \"rustrt\" {\n+    fn pin_task();\n+}\n+\n+fn main() {\n+    rustrt1::pin_task();\n+    rustrt2::pin_task();\n+}"}]}