{"sha": "aaffe12453bd98268fda8b5397eff7998ef2ea55", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhZmZlMTI0NTNiZDk4MjY4ZmRhOGI1Mzk3ZWZmNzk5OGVmMmVhNTU=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-23T16:13:25Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-26T21:50:18Z"}, "message": "Use the targetted const eval functions", "tree": {"sha": "7fd8801eebeddebce546d4d0b1f2fb54daeab35b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7fd8801eebeddebce546d4d0b1f2fb54daeab35b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aaffe12453bd98268fda8b5397eff7998ef2ea55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aaffe12453bd98268fda8b5397eff7998ef2ea55", "html_url": "https://github.com/rust-lang/rust/commit/aaffe12453bd98268fda8b5397eff7998ef2ea55", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aaffe12453bd98268fda8b5397eff7998ef2ea55/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b476344ccc877cd0a2bdb5673928f51fd80b4a79", "url": "https://api.github.com/repos/rust-lang/rust/commits/b476344ccc877cd0a2bdb5673928f51fd80b4a79", "html_url": "https://github.com/rust-lang/rust/commit/b476344ccc877cd0a2bdb5673928f51fd80b4a79"}], "stats": {"total": 14, "additions": 5, "deletions": 9}, "files": [{"sha": "766ef6ab6feac7627858ae0c60c3cd5b17aef69f", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/aaffe12453bd98268fda8b5397eff7998ef2ea55/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aaffe12453bd98268fda8b5397eff7998ef2ea55/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=aaffe12453bd98268fda8b5397eff7998ef2ea55", "patch": "@@ -758,17 +758,13 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         &self,\n         gid: GlobalId<'tcx>,\n     ) -> InterpResult<'tcx, OpTy<'tcx, M::PointerTag>> {\n-        // For statics we pick `ParamEnv::reveal_all`, because statics don't have generics\n-        // and thus don't care about the parameter environment. While we could just use\n-        // `self.param_env`, that would mean we invoke the query to evaluate the static\n-        // with different parameter environments, thus causing the static to be evaluated\n-        // multiple times.\n-        let param_env = if self.tcx.is_static(gid.instance.def_id()) {\n-            ty::ParamEnv::reveal_all()\n+        let val = if self.tcx.is_static(gid.instance.def_id()) {\n+            self.tcx.const_eval_poly(gid.instance.def_id())?\n+        } else if let Some(promoted) = gid.promoted {\n+            self.tcx.const_eval_promoted(gid.instance, promoted)?\n         } else {\n-            self.param_env\n+            self.tcx.const_eval_instance(self.param_env, gid.instance, Some(self.tcx.span))?\n         };\n-        let val = self.tcx.const_eval(param_env.and(gid))?;\n         // Even though `ecx.const_eval` is called from `eval_const_to_op` we can never have a\n         // recursion deeper than one level, because the `tcx.const_eval` above is guaranteed to not\n         // return `ConstValue::Unevaluated`, which is the only way that `eval_const_to_op` will call"}]}