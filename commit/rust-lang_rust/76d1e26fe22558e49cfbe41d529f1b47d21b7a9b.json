{"sha": "76d1e26fe22558e49cfbe41d529f1b47d21b7a9b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2ZDFlMjZmZTIyNTU4ZTQ5Y2ZiZTQxZDUyOWYxYjQ3ZDIxYjdhOWI=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2018-04-02T15:05:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-04-02T15:05:11Z"}, "message": "Merge pull request #2612 from phansch/document_how_to_use_the_author_lint\n\nDocument the author lint", "tree": {"sha": "05282398c45394824eccb10f8280a955d4c242f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05282398c45394824eccb10f8280a955d4c242f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76d1e26fe22558e49cfbe41d529f1b47d21b7a9b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJawkanCRBK7hj4Ov3rIwAAdHIIAKI+SqwEhDaVB4CboSoKJEcG\nb1RQnUtSh9ULPPn5uChWgR13cizv1o7RIQDT5LDvPpKU0P+A+ID++KI8QjInChnT\nlMLXM7VYc42UsJx+3I+yvk0a7QGBVjRDGntsTGyPGjJKNFeN+GWhHH4RxSG/EwrB\nLi5P7pQqg6FySOBkENPvrgypv1IBiNIsqcG5rRvYHuLU56lo82GQnD3lYWF89Fa3\nEYa22ZYTLdRJkQwvRjaQuH3BR8iOfoiOPPMM2I2GIBSJYKGbVZWFBfc0mg5KCJ+e\nciLgG1/n5t6sNiqrkM6RTQTX9Enk1P+ou162V2rKbxAldMK96wWpM4J/fmfwnCs=\n=jaDL\n-----END PGP SIGNATURE-----\n", "payload": "tree 05282398c45394824eccb10f8280a955d4c242f4\nparent fef7fb347315857d1ee78912ef8045a12c148097\nparent b1b0b36cc0385bd43c2b56d45eb00272f72cda23\nauthor Oliver Schneider <oli-obk@users.noreply.github.com> 1522681511 +0200\ncommitter GitHub <noreply@github.com> 1522681511 +0200\n\nMerge pull request #2612 from phansch/document_how_to_use_the_author_lint\n\nDocument the author lint"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76d1e26fe22558e49cfbe41d529f1b47d21b7a9b", "html_url": "https://github.com/rust-lang/rust/commit/76d1e26fe22558e49cfbe41d529f1b47d21b7a9b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76d1e26fe22558e49cfbe41d529f1b47d21b7a9b/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fef7fb347315857d1ee78912ef8045a12c148097", "url": "https://api.github.com/repos/rust-lang/rust/commits/fef7fb347315857d1ee78912ef8045a12c148097", "html_url": "https://github.com/rust-lang/rust/commit/fef7fb347315857d1ee78912ef8045a12c148097"}, {"sha": "b1b0b36cc0385bd43c2b56d45eb00272f72cda23", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1b0b36cc0385bd43c2b56d45eb00272f72cda23", "html_url": "https://github.com/rust-lang/rust/commit/b1b0b36cc0385bd43c2b56d45eb00272f72cda23"}], "stats": {"total": 47, "additions": 45, "deletions": 2}, "files": [{"sha": "c9f760209c09c7add832af572cc25fad5699153a", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/76d1e26fe22558e49cfbe41d529f1b47d21b7a9b/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/76d1e26fe22558e49cfbe41d529f1b47d21b7a9b/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=76d1e26fe22558e49cfbe41d529f1b47d21b7a9b", "patch": "@@ -51,6 +51,44 @@ to lint-writing, though it does get into advanced stuff. Most lints consist of a\n `LintPass` with one or more of its default methods overridden. See the existing lints for examples\n of this.\n \n+\n+#### Author lint\n+\n+There is also the internal `author` lint to generate clippy code that detects the offending pattern. It does not work for all of the Rust syntax, but can give a good starting point.\n+\n+Create a new UI test with the pattern you want to match:\n+\n+```rust\n+// ./tests/ui/my_lint.rs\n+\n+// The custom_attribute needs to be enabled for the author lint to work\n+#![feature(plugin, custom_attribute)]\n+\n+fn main() {\n+    #[clippy(author)]\n+    let arr: [i32; 1] = [7]; // Replace line with the code you want to match\n+}\n+```\n+\n+Now you run `TESTNAME=ui/my_lint cargo test --test compile-test` to produce\n+the file with the generated code:\n+\n+```rust\n+// ./tests/ui/my_lint.stdout\n+\n+if_chain! {\n+    if let Expr_::ExprArray(ref elements) = stmt.node;\n+    if elements.len() == 1;\n+    if let Expr_::ExprLit(ref lit) = elements[0].node;\n+    if let LitKind::Int(7, _) = lit.node;\n+    then {\n+        // report your lint here\n+    }\n+}\n+```\n+\n+#### Documentation\n+\n Please document your lint with a doc comment akin to the following:\n \n ```rust\n@@ -71,6 +109,8 @@ Please document your lint with a doc comment akin to the following:\n /// ```\n ```\n \n+Once your lint is merged it will show up in the [lint list](https://rust-lang-nursery.github.io/rust-clippy/master/index.html)\n+\n ### Running test suite\n \n Clippy uses UI tests. UI tests check that the output of the compiler is exactly as expected."}, {"sha": "9d708d637c3c93db8f9b0db61f4169769ddb2a7e", "filename": "clippy_lints/src/utils/author.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/76d1e26fe22558e49cfbe41d529f1b47d21b7a9b/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d1e26fe22558e49cfbe41d529f1b47d21b7a9b/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fauthor.rs?ref=76d1e26fe22558e49cfbe41d529f1b47d21b7a9b", "patch": "@@ -14,6 +14,7 @@ use std::collections::HashMap;\n ///\n /// **Example:**\n /// ```rust\n+/// // ./tests/ui/my_lint.rs\n /// fn foo() {\n ///     // detect the following pattern\n ///     #[clippy(author)]\n@@ -24,9 +25,11 @@ use std::collections::HashMap;\n /// }\n /// ```\n ///\n-/// prints\n+/// Running `TESTNAME=ui/my_lint cargo test --test compile-test` will produce\n+/// a `./tests/ui/new_lint.stdout` file with the generated code:\n ///\n-/// ```\n+/// ```rust\n+/// // ./tests/ui/new_lint.stdout\n /// if_chain!{\n ///     if let Expr_::ExprIf(ref cond, ref then, None) = item.node,\n ///     if let Expr_::ExprBinary(BinOp::Eq, ref left, ref right) = cond.node,"}]}