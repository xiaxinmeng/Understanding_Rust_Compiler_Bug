{"sha": "ad5a8514a03980bd944b36a0917fb80e72d3b3e1", "node_id": "C_kwDOAAsO6NoAKGFkNWE4NTE0YTAzOTgwYmQ5NDRiMzZhMDkxN2ZiODBlNzJkM2IzZTE", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2022-07-06T15:36:42Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2022-07-06T15:42:15Z"}, "message": "Code: use different schemes for the custom views", "tree": {"sha": "5ea342970e341aaee1814f42ec81ddcec5b5550e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ea342970e341aaee1814f42ec81ddcec5b5550e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad5a8514a03980bd944b36a0917fb80e72d3b3e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad5a8514a03980bd944b36a0917fb80e72d3b3e1", "html_url": "https://github.com/rust-lang/rust/commit/ad5a8514a03980bd944b36a0917fb80e72d3b3e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad5a8514a03980bd944b36a0917fb80e72d3b3e1/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fee5555cfabed4b8abbd40983fc4442df4007e49", "url": "https://api.github.com/repos/rust-lang/rust/commits/fee5555cfabed4b8abbd40983fc4442df4007e49", "html_url": "https://github.com/rust-lang/rust/commit/fee5555cfabed4b8abbd40983fc4442df4007e49"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "bf55329ca1f5591a75aebb1bd423fed98eda93a2", "filename": "editors/code/src/commands.ts", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/ad5a8514a03980bd944b36a0917fb80e72d3b3e1/editors%2Fcode%2Fsrc%2Fcommands.ts", "raw_url": "https://github.com/rust-lang/rust/raw/ad5a8514a03980bd944b36a0917fb80e72d3b3e1/editors%2Fcode%2Fsrc%2Fcommands.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands.ts?ref=ad5a8514a03980bd944b36a0917fb80e72d3b3e1", "patch": "@@ -336,7 +336,7 @@ export function toggleInlayHints(_ctx: Ctx): Cmd {\n // The contents of the file come from the `TextDocumentContentProvider`\n export function syntaxTree(ctx: Ctx): Cmd {\n     const tdcp = new (class implements vscode.TextDocumentContentProvider {\n-        readonly uri = vscode.Uri.parse(\"rust-analyzer://syntaxtree/tree.rast\");\n+        readonly uri = vscode.Uri.parse(\"rust-analyzer-syntax-tree://syntaxtree/tree.rast\");\n         readonly eventEmitter = new vscode.EventEmitter<vscode.Uri>();\n         constructor() {\n             vscode.workspace.onDidChangeTextDocument(\n@@ -388,7 +388,9 @@ export function syntaxTree(ctx: Ctx): Cmd {\n \n     void new AstInspector(ctx);\n \n-    ctx.pushCleanup(vscode.workspace.registerTextDocumentContentProvider(\"rust-analyzer\", tdcp));\n+    ctx.pushCleanup(\n+        vscode.workspace.registerTextDocumentContentProvider(\"rust-analyzer-syntax-tree\", tdcp)\n+    );\n     ctx.pushCleanup(\n         vscode.languages.setLanguageConfiguration(\"ra_syntax_tree\", {\n             brackets: [[\"[\", \")\"]],\n@@ -417,7 +419,7 @@ export function syntaxTree(ctx: Ctx): Cmd {\n // The contents of the file come from the `TextDocumentContentProvider`\n export function viewHir(ctx: Ctx): Cmd {\n     const tdcp = new (class implements vscode.TextDocumentContentProvider {\n-        readonly uri = vscode.Uri.parse(\"rust-analyzer://viewHir/hir.txt\");\n+        readonly uri = vscode.Uri.parse(\"rust-analyzer-hir://viewHir/hir.txt\");\n         readonly eventEmitter = new vscode.EventEmitter<vscode.Uri>();\n         constructor() {\n             vscode.workspace.onDidChangeTextDocument(\n@@ -467,7 +469,9 @@ export function viewHir(ctx: Ctx): Cmd {\n         }\n     })();\n \n-    ctx.pushCleanup(vscode.workspace.registerTextDocumentContentProvider(\"rust-analyzer\", tdcp));\n+    ctx.pushCleanup(\n+        vscode.workspace.registerTextDocumentContentProvider(\"rust-analyzer-hir\", tdcp)\n+    );\n \n     return async () => {\n         const document = await vscode.workspace.openTextDocument(tdcp.uri);\n@@ -481,7 +485,7 @@ export function viewHir(ctx: Ctx): Cmd {\n \n export function viewFileText(ctx: Ctx): Cmd {\n     const tdcp = new (class implements vscode.TextDocumentContentProvider {\n-        readonly uri = vscode.Uri.parse(\"rust-analyzer://viewFileText/file.rs\");\n+        readonly uri = vscode.Uri.parse(\"rust-analyzer-file-text://viewFileText/file.rs\");\n         readonly eventEmitter = new vscode.EventEmitter<vscode.Uri>();\n         constructor() {\n             vscode.workspace.onDidChangeTextDocument(\n@@ -528,7 +532,9 @@ export function viewFileText(ctx: Ctx): Cmd {\n         }\n     })();\n \n-    ctx.pushCleanup(vscode.workspace.registerTextDocumentContentProvider(\"rust-analyzer\", tdcp));\n+    ctx.pushCleanup(\n+        vscode.workspace.registerTextDocumentContentProvider(\"rust-analyzer-file-text\", tdcp)\n+    );\n \n     return async () => {\n         const document = await vscode.workspace.openTextDocument(tdcp.uri);\n@@ -542,7 +548,7 @@ export function viewFileText(ctx: Ctx): Cmd {\n \n export function viewItemTree(ctx: Ctx): Cmd {\n     const tdcp = new (class implements vscode.TextDocumentContentProvider {\n-        readonly uri = vscode.Uri.parse(\"rust-analyzer://viewItemTree/itemtree.rs\");\n+        readonly uri = vscode.Uri.parse(\"rust-analyzer-item-tree://viewItemTree/itemtree.rs\");\n         readonly eventEmitter = new vscode.EventEmitter<vscode.Uri>();\n         constructor() {\n             vscode.workspace.onDidChangeTextDocument(\n@@ -591,7 +597,9 @@ export function viewItemTree(ctx: Ctx): Cmd {\n         }\n     })();\n \n-    ctx.pushCleanup(vscode.workspace.registerTextDocumentContentProvider(\"rust-analyzer\", tdcp));\n+    ctx.pushCleanup(\n+        vscode.workspace.registerTextDocumentContentProvider(\"rust-analyzer-item-tree\", tdcp)\n+    );\n \n     return async () => {\n         const document = await vscode.workspace.openTextDocument(tdcp.uri);\n@@ -688,7 +696,7 @@ export function expandMacro(ctx: Ctx): Cmd {\n     }\n \n     const tdcp = new (class implements vscode.TextDocumentContentProvider {\n-        uri = vscode.Uri.parse(\"rust-analyzer://expandMacro/[EXPANSION].rs\");\n+        uri = vscode.Uri.parse(\"rust-analyzer-expand-macro://expandMacro/[EXPANSION].rs\");\n         eventEmitter = new vscode.EventEmitter<vscode.Uri>();\n         async provideTextDocumentContent(_uri: vscode.Uri): Promise<string> {\n             const editor = vscode.window.activeTextEditor;\n@@ -714,7 +722,9 @@ export function expandMacro(ctx: Ctx): Cmd {\n         }\n     })();\n \n-    ctx.pushCleanup(vscode.workspace.registerTextDocumentContentProvider(\"rust-analyzer\", tdcp));\n+    ctx.pushCleanup(\n+        vscode.workspace.registerTextDocumentContentProvider(\"rust-analyzer-expand-macro\", tdcp)\n+    );\n \n     return async () => {\n         const document = await vscode.workspace.openTextDocument(tdcp.uri);"}]}