{"sha": "5bac3617769cec8080e304f2781971cf9113e188", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViYWMzNjE3NzY5Y2VjODA4MGUzMDRmMjc4MTk3MWNmOTExM2UxODg=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-10-23T08:14:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-23T08:14:42Z"}, "message": "Rollup merge of #65686 - yjhmelody:yjhmelody-patch-1, r=Centril\n\nrefactor and move `maybe_append`", "tree": {"sha": "7b79f562fff3508a64fc842fe46c97c4d05df907", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b79f562fff3508a64fc842fe46c97c4d05df907"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5bac3617769cec8080e304f2781971cf9113e188", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdsAvyCRBK7hj4Ov3rIwAAdHIIAKCCwvh89CqZFkxc1FoGZxTp\ndORUm7VQfJYIXsIBat7T2XSwW/cAHocgJ9qDCAn92s/NDsMpY5hntEiYShLm/8Nj\n1QteDC5SLUTB9kABo1uTHJp1AQf0pKzsJBx20+IsXuSi18Ivpw1v81T9czwoOAur\njcJ/hSFuTWTwfwpflP4NnHyFvHhoKSjKSmXWc0XT9XnDc92Uq8OOASXK1j4Yr6bh\nZKf4INIhA0eMrwPxQvmMg3O3ciHDRhvWxw7rtCCHAtk0GRrBVLEGC87vLSBq6Pmy\nyNWUmxyw3SdVOgogfEkj0jun6EKSfntcFU64764r2yGgPux/M23h1XThMYlxo+Q=\n=6Xp3\n-----END PGP SIGNATURE-----\n", "payload": "tree 7b79f562fff3508a64fc842fe46c97c4d05df907\nparent 7fc6ce9db2bd69738acc7fece8c9f6b9b1ae505e\nparent 40f92b3b0595984f40aafd70ec4a5b9a3bdde47a\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1571818482 +0900\ncommitter GitHub <noreply@github.com> 1571818482 +0900\n\nRollup merge of #65686 - yjhmelody:yjhmelody-patch-1, r=Centril\n\nrefactor and move `maybe_append`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5bac3617769cec8080e304f2781971cf9113e188", "html_url": "https://github.com/rust-lang/rust/commit/5bac3617769cec8080e304f2781971cf9113e188", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5bac3617769cec8080e304f2781971cf9113e188/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7fc6ce9db2bd69738acc7fece8c9f6b9b1ae505e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7fc6ce9db2bd69738acc7fece8c9f6b9b1ae505e", "html_url": "https://github.com/rust-lang/rust/commit/7fc6ce9db2bd69738acc7fece8c9f6b9b1ae505e"}, {"sha": "40f92b3b0595984f40aafd70ec4a5b9a3bdde47a", "url": "https://api.github.com/repos/rust-lang/rust/commits/40f92b3b0595984f40aafd70ec4a5b9a3bdde47a", "html_url": "https://github.com/rust-lang/rust/commit/40f92b3b0595984f40aafd70ec4a5b9a3bdde47a"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "2ce0046ca276c1ab4286754afc9385e8b571538b", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5bac3617769cec8080e304f2781971cf9113e188/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bac3617769cec8080e304f2781971cf9113e188/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=5bac3617769cec8080e304f2781971cf9113e188", "patch": "@@ -86,13 +86,6 @@ macro_rules! maybe_recover_from_interpolated_ty_qpath {\n     }\n }\n \n-fn maybe_append(mut lhs: Vec<Attribute>, mut rhs: Option<Vec<Attribute>>) -> Vec<Attribute> {\n-    if let Some(ref mut rhs) = rhs {\n-        lhs.append(rhs);\n-    }\n-    lhs\n-}\n-\n #[derive(Debug, Clone, Copy, PartialEq)]\n enum PrevTokenKind {\n     DocComment,"}, {"sha": "73bd80e2a21f7b9e5a4fccbcd3ac13da53176a07", "filename": "src/libsyntax/parse/parser/item.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5bac3617769cec8080e304f2781971cf9113e188/src%2Flibsyntax%2Fparse%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bac3617769cec8080e304f2781971cf9113e188/src%2Flibsyntax%2Fparse%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fitem.rs?ref=5bac3617769cec8080e304f2781971cf9113e188", "patch": "@@ -10,7 +10,6 @@ use crate::ast::{Visibility, VisibilityKind, Mutability, FnHeader, ForeignItem,\n use crate::ast::{Ty, TyKind, Generics, GenericBounds, TraitRef, EnumDef, VariantData, StructField};\n use crate::ast::{Mac, MacDelimiter, Block, BindingMode, FnDecl, MethodSig, SelfKind, Param};\n use crate::parse::token;\n-use crate::parse::parser::maybe_append;\n use crate::tokenstream::{TokenTree, TokenStream};\n use crate::symbol::{kw, sym};\n use crate::source_map::{self, respan, Span};\n@@ -416,10 +415,17 @@ impl<'a> Parser<'a> {\n     ) -> PResult<'a, Option<P<Item>>> {\n         let (ident, item, extra_attrs) = info;\n         let span = lo.to(self.prev_span);\n-        let attrs = maybe_append(attrs, extra_attrs);\n+        let attrs = Self::maybe_append(attrs, extra_attrs);\n         Ok(Some(self.mk_item(span, ident, item, vis, attrs)))\n     }\n \n+    fn maybe_append<T>(mut lhs: Vec<T>, mut rhs: Option<Vec<T>>) -> Vec<T> {\n+        if let Some(ref mut rhs) = rhs {\n+            lhs.append(rhs);\n+        }\n+        lhs\n+    }\n+\n     /// This is the fall-through for parsing items.\n     fn parse_macro_use_or_failure(\n         &mut self,"}]}