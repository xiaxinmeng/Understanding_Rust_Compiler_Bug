{"sha": "7492f76f777d2815290d3b8590dc3911df6336de", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0OTJmNzZmNzc3ZDI4MTUyOTBkM2I4NTkwZGMzOTExZGY2MzM2ZGU=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2020-08-21T21:56:23Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2020-09-03T18:59:34Z"}, "message": "please tidy", "tree": {"sha": "980ca9a8a63d1d4eb512498996b02041ec0af6a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/980ca9a8a63d1d4eb512498996b02041ec0af6a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7492f76f777d2815290d3b8590dc3911df6336de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7492f76f777d2815290d3b8590dc3911df6336de", "html_url": "https://github.com/rust-lang/rust/commit/7492f76f777d2815290d3b8590dc3911df6336de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7492f76f777d2815290d3b8590dc3911df6336de/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9aeea0022225ccc11aae031ebf06dc2b125a29f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/9aeea0022225ccc11aae031ebf06dc2b125a29f1", "html_url": "https://github.com/rust-lang/rust/commit/9aeea0022225ccc11aae031ebf06dc2b125a29f1"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "4185453ac5ae331adb51becd0a7ef98a75cda2f7", "filename": "library/core/src/iter/adapters/fuse.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7492f76f777d2815290d3b8590dc3911df6336de/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Ffuse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7492f76f777d2815290d3b8590dc3911df6336de/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Ffuse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Ffuse.rs?ref=7492f76f777d2815290d3b8590dc3911df6336de", "patch": "@@ -1,9 +1,9 @@\n use super::InPlaceIterable;\n use crate::intrinsics;\n use crate::iter::adapters::zip::try_get_unchecked;\n+use crate::iter::adapters::SourceIter;\n use crate::iter::TrustedRandomAccess;\n use crate::iter::{DoubleEndedIterator, ExactSizeIterator, FusedIterator, Iterator};\n-use crate::iter::adapters::SourceIter;\n use crate::ops::Try;\n \n /// An iterator that yields `None` forever after the underlying iterator"}, {"sha": "c3f1269401aa99e43c971db3bde7cdb3709b80e3", "filename": "library/core/src/iter/adapters/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7492f76f777d2815290d3b8590dc3911df6336de/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7492f76f777d2815290d3b8590dc3911df6336de/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fmod.rs?ref=7492f76f777d2815290d3b8590dc3911df6336de", "patch": "@@ -485,7 +485,6 @@ where\n unsafe impl<I> TrustedRandomAccess for Cloned<I>\n where\n     I: TrustedRandomAccess,\n-\n {\n     #[inline]\n     fn may_have_side_effect() -> bool {"}, {"sha": "c1c90ec9a836aa4790bc5b169cdb61a1fd878da0", "filename": "library/core/src/iter/adapters/zip.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7492f76f777d2815290d3b8590dc3911df6336de/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fzip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7492f76f777d2815290d3b8590dc3911df6336de/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fzip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fzip.rs?ref=7492f76f777d2815290d3b8590dc3911df6336de", "patch": "@@ -334,10 +334,10 @@ where\n // it would require negative trait bounds to be able to try both\n #[unstable(issue = \"none\", feature = \"inplace_iteration\")]\n unsafe impl<S, A, B> SourceIter for Zip<A, B>\n-    where\n-        A: SourceIter<Source = S>,\n-        B: Iterator,\n-        S: Iterator,\n+where\n+    A: SourceIter<Source = S>,\n+    B: Iterator,\n+    S: Iterator,\n {\n     type Source = S;\n "}]}