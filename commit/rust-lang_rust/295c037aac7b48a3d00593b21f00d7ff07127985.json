{"sha": "295c037aac7b48a3d00593b21f00d7ff07127985", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5NWMwMzdhYWM3YjQ4YTNkMDA1OTNiMjFmMDBkN2ZmMDcxMjc5ODU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-05-12T21:32:54Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-05-12T21:32:54Z"}, "message": "etc: Update rust.vim with new keywords; color types differently from keywords", "tree": {"sha": "2e03dc49fd9e36774cb7cb6c838ed4a6dbf91777", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e03dc49fd9e36774cb7cb6c838ed4a6dbf91777"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/295c037aac7b48a3d00593b21f00d7ff07127985", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/295c037aac7b48a3d00593b21f00d7ff07127985", "html_url": "https://github.com/rust-lang/rust/commit/295c037aac7b48a3d00593b21f00d7ff07127985", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/295c037aac7b48a3d00593b21f00d7ff07127985/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1fdddede227031b4ea1df98da7eb3e2fcc8c7d87", "url": "https://api.github.com/repos/rust-lang/rust/commits/1fdddede227031b4ea1df98da7eb3e2fcc8c7d87", "html_url": "https://github.com/rust-lang/rust/commit/1fdddede227031b4ea1df98da7eb3e2fcc8c7d87"}], "stats": {"total": 42, "additions": 35, "deletions": 7}, "files": [{"sha": "4ba851240aafacaace3654da0ba577f2efc5dd13", "filename": "src/etc/rust.vim", "status": "modified", "additions": 35, "deletions": 7, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/295c037aac7b48a3d00593b21f00d7ff07127985/src%2Fetc%2Frust.vim", "raw_url": "https://github.com/rust-lang/rust/raw/295c037aac7b48a3d00593b21f00d7ff07127985/src%2Fetc%2Frust.vim", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Frust.vim?ref=295c037aac7b48a3d00593b21f00d7ff07127985", "patch": "@@ -15,21 +15,49 @@ if !exists(\"main_syntax\")\n endif\n \n syn keyword   rustKeyword     use meta syntax mutable native mod import export\n-syn keyword   rustKeyword     let auto io state unsafe auth with bind type true\n-syn keyword   rustKeyword     false any int uint float char bool u8 u16 u32 u64\n-syn keyword   rustKeyword     f32 i8 i16 i32 i64 f64 rec tup tag vec str fn\n-syn keyword   rustKeyword     iter obj as drop task port chan flush spawn if\n-syn keyword   rustKeyword     else alt case in do while break cont fail log\n-syn keyword   rustKeyword     note claim check prove for each ret put be\n+syn keyword   rustKeyword     let auto io state unsafe auth with bind type rec\n+syn keyword   rustKeyword     tup tag vec fn iter obj as drop task chan flush\n+syn keyword   rustKeyword     spawn if else alt case in do while break cont\n+syn keyword   rustKeyword     fail log log_err note claim check prove assert\n+syn keyword   rustKeyword     for each ret put be\n \n-syn region\t  rustString\t\t  start=+L\\=\"+ skip=+\\\\\\\\\\|\\\\\"+ end=+\"+\n+syn keyword   rustType        any int uint float char bool u8 u16 u32 u64 f32\n+syn keyword   rustType        f64 i8 i16 i32 i64 str task\n \n+syn keyword   rustBoolean     true false\n+\n+syn match     rustItemPath    \"\\(\\w\\|::\\)\\+\"\n+\n+syn region\t  rustString      start=+L\\=\"+ skip=+\\\\\\\\\\|\\\\\"+ end=+\"+\n+\n+\"integer number, or floating point number without a dot and with \"f\".\n+syn case ignore\n+syn match\t  rustNumber\t\tdisplay contained \"\\d\\+\\(u\\=l\\{0,2}\\|ll\\=u\\)\\>\"\n+\"hex number\n+syn match\t  rustNumber\t\tdisplay contained \"0x\\x\\+\\(u\\=l\\{0,2}\\|ll\\=u\\)\\>\"\n+syn match\trustFloat\t\tdisplay contained \"\\d\\+f\"\n+\"floating point number, with dot, optional exponent\n+syn match\trustFloat\t\tdisplay contained \"\\d\\+\\.\\d*\\(e[-+]\\=\\d\\+\\)\\=[fl]\\=\"\n+\"floating point number, starting with a dot, optional exponent\n+syn match\trustFloat\t\tdisplay contained \"\\.\\d\\+\\(e[-+]\\=\\d\\+\\)\\=[fl]\\=\\>\"\n+\"floating point number, without dot, with exponent\n+syn match\trustFloat\t\tdisplay contained \"\\d\\+e[-+]\\=\\d\\+[fl]\\=\\>\"\n+\n+syn match   rustCharacter   \"'[^']*'\"\n+\n+syn case match\n syn region    rustComment     start=\"/\\*\" end=\"\\*/\"\n syn region    rustComment     start=\"//\" skip=\"\\\\$\" end=\"$\" keepend\n \n hi def link rustString        String\n+hi def link rustCharacter     Character\n+hi def link rustNumber        Number\n+hi def link rustBoolean       Boolean\n+hi def link rustFloat         Float\n hi def link rustKeyword       Keyword\n hi def link rustComment       Comment\n+hi def link rustMacro         Macro\n+hi def link rustType          Type\n \n let b:current_syntax = \"rust\"\n "}]}