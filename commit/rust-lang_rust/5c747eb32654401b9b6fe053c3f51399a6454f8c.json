{"sha": "5c747eb32654401b9b6fe053c3f51399a6454f8c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjNzQ3ZWIzMjY1NDQwMWI5YjZmZTA1M2MzZjUxMzk5YTY0NTRmOGM=", "commit": {"author": {"name": "Bastian Gruber", "email": "gruberbastian@me.com", "date": "2018-07-26T08:59:46Z"}, "committer": {"name": "Bastian Gruber", "email": "gruberbastian@me.com", "date": "2018-11-21T08:59:01Z"}, "message": "Update style of comments", "tree": {"sha": "0f17affdcbbd8a48ca33301cf2eae00387423a07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f17affdcbbd8a48ca33301cf2eae00387423a07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c747eb32654401b9b6fe053c3f51399a6454f8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c747eb32654401b9b6fe053c3f51399a6454f8c", "html_url": "https://github.com/rust-lang/rust/commit/5c747eb32654401b9b6fe053c3f51399a6454f8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c747eb32654401b9b6fe053c3f51399a6454f8c/comments", "author": null, "committer": null, "parents": [{"sha": "88a708dd6a5bb14f3a19ae98238ddf2d03cb93d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/88a708dd6a5bb14f3a19ae98238ddf2d03cb93d3", "html_url": "https://github.com/rust-lang/rust/commit/88a708dd6a5bb14f3a19ae98238ddf2d03cb93d3"}], "stats": {"total": 40, "additions": 26, "deletions": 14}, "files": [{"sha": "9f6fcad2422928863e3658d5a0d298423b08d2b0", "filename": "src/libstd/path.rs", "status": "modified", "additions": 26, "deletions": 14, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/5c747eb32654401b9b6fe053c3f51399a6454f8c/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c747eb32654401b9b6fe053c3f51399a6454f8c/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=5c747eb32654401b9b6fe053c3f51399a6454f8c", "patch": "@@ -1397,7 +1397,8 @@ impl<'a> From<&'a Path> for Box<Path> {\n \n #[stable(feature = \"path_buf_from_box\", since = \"1.18.0\")]\n impl From<Box<Path>> for PathBuf {\n-    /// Converts a `Box<Path>` into a `PathBuf`.\n+    /// Converts a `Box<Path>` into a `PathBuf`\n+    ///\n     /// This conversion does not allocate memory\n     fn from(boxed: Box<Path>) -> PathBuf {\n         boxed.into_path_buf()\n@@ -1406,7 +1407,8 @@ impl From<Box<Path>> for PathBuf {\n \n #[stable(feature = \"box_from_path_buf\", since = \"1.20.0\")]\n impl From<PathBuf> for Box<Path> {\n-    /// Converts a `PathBuf` into a `Box<Path>`.\n+    /// Converts a `PathBuf` into a `Box<Path>`\n+    ///\n     /// This conversion does not allocate memory\n     fn from(p: PathBuf) -> Box<Path> {\n         p.into_boxed_path()\n@@ -1430,7 +1432,8 @@ impl<'a, T: ?Sized + AsRef<OsStr>> From<&'a T> for PathBuf {\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl From<OsString> for PathBuf {\n-    /// Converts a `OsString` into a `PathBuf`.\n+    /// Converts a `OsString` into a `PathBuf`\n+    ///\n     /// This conversion does not allocate memory\n     fn from(s: OsString) -> PathBuf {\n         PathBuf { inner: s }\n@@ -1439,7 +1442,8 @@ impl From<OsString> for PathBuf {\n \n #[stable(feature = \"from_path_buf_for_os_string\", since = \"1.14.0\")]\n impl From<PathBuf> for OsString {\n-    /// Converts a `PathBuf` into a `OsString`.\n+    /// Converts a `PathBuf` into a `OsString`\n+    ///\n     /// This conversion does not allocate memory\n     fn from(path_buf : PathBuf) -> OsString {\n         path_buf.inner\n@@ -1448,7 +1452,8 @@ impl From<PathBuf> for OsString {\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl From<String> for PathBuf {\n-    /// Converts a `String` into a `PathBuf`.\n+    /// Converts a `String` into a `PathBuf`\n+    ///\n     /// This conversion does not allocate memory\n     fn from(s: String) -> PathBuf {\n         PathBuf::from(OsString::from(s))\n@@ -1546,9 +1551,11 @@ impl<'a> From<Cow<'a, Path>> for PathBuf {\n \n #[stable(feature = \"shared_from_slice2\", since = \"1.24.0\")]\n impl From<PathBuf> for Arc<Path> {\n-    /// Converts a `PathBuf` into a `Arc<Path>`.\n-    /// This conversion happens in place.\n-    /// This conversion does not allocate memory.\n+    /// Converts a `PathBuf` into a `Arc<Path>`\n+    ///\n+    /// This conversion happens in place\n+    ///\n+    /// This conversion does not allocate memory\n     #[inline]\n     fn from(s: PathBuf) -> Arc<Path> {\n         let arc: Arc<OsStr> = Arc::from(s.into_os_string());\n@@ -1558,9 +1565,12 @@ impl From<PathBuf> for Arc<Path> {\n \n #[stable(feature = \"shared_from_slice2\", since = \"1.24.0\")]\n impl<'a> From<&'a Path> for Arc<Path> {\n-    /// Converts a `PathBuf` into a `Arc<Path>`.\n-    /// This conversion happens in place.\n-    /// This conversion does not allocate memory.\n+    /// Converts a `PathBuf` into a `Arc<Path>`\n+    ///\n+    /// This conversion happens in place\n+    ///\n+    /// This conversion does not allocate memory\n+    ///\n     #[inline]\n     fn from(s: &Path) -> Arc<Path> {\n         let arc: Arc<OsStr> = Arc::from(s.as_os_str());\n@@ -1570,9 +1580,11 @@ impl<'a> From<&'a Path> for Arc<Path> {\n \n #[stable(feature = \"shared_from_slice2\", since = \"1.24.0\")]\n impl From<PathBuf> for Rc<Path> {\n-    /// Converts a `PathBuf` into a `Rc<Path>`.\n-    /// This conversion happens in place.\n-    /// This conversion does not allocate memory.\n+    /// Converts a `PathBuf` into a `Rc<Path>`\n+    ///\n+    /// This conversion happens in place\n+    ///\n+    /// This conversion does not allocate memory\n     #[inline]\n     fn from(s: PathBuf) -> Rc<Path> {\n         let rc: Rc<OsStr> = Rc::from(s.into_os_string());"}]}