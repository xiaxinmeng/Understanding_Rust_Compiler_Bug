{"sha": "00e1f5b8df5382a7296ba463a8e53ce55bf4c6a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwZTFmNWI4ZGY1MzgyYTcyOTZiYTQ2M2E4ZTUzY2U1NWJmNGM2YTU=", "commit": {"author": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2018-10-12T19:35:55Z"}, "committer": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2018-10-12T21:29:40Z"}, "message": "exit with status code 101 on fatal LLVM error\n\nFixes #54992.", "tree": {"sha": "2ec2525efd16d091c0d6f3647f6c8c8aa29c5d74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ec2525efd16d091c0d6f3647f6c8c8aa29c5d74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00e1f5b8df5382a7296ba463a8e53ce55bf4c6a5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFKBAABCAA0FiEELriChyEaiMu0yCg7viIhAz7bw3QFAlvBEmIWHGFydXNzZWxs\nMTIzQGdtYWlsLmNvbQAKCRC+IiEDPtvDdPoHCACL73f47mJyBMtkbqnfUOkKfz+T\nvFptfpRyI5cnyiJwRZDX8BjrOZnAZXVIliV52/Y7cA/TL/9yZ746o9yfZyQmiHOH\naoY2dXgIV5P9fPlNkK4Lr+uMWP8HFAU98JCRIbnfAe+Z+eG2QJb3f9ELAcyfbBi2\nKe7CfQOEGJK+QdH7TW8n7uw6Fr/LbWFCwY9NYKGE9aXjc/PUFmYLs4DihBGMgA32\nYKc4vHx4NxpCJ20Hb/+/OZufNOTP+HUpAz5Ulorvk7hfGI12vBmbVAcbZp/J5kdd\nUZllp4V4/9SbpOfgj43MABuDOH4UpSpnlJf5Mz3hqhBr1k1McjnSx9fxpsda\n=sVUx\n-----END PGP SIGNATURE-----", "payload": "tree 2ec2525efd16d091c0d6f3647f6c8c8aa29c5d74\nparent e9e27e6a6258b3adf00a5dd35d2676656224880d\nauthor Andy Russell <arussell123@gmail.com> 1539372955 -0400\ncommitter Andy Russell <arussell123@gmail.com> 1539379780 -0400\n\nexit with status code 101 on fatal LLVM error\n\nFixes #54992.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00e1f5b8df5382a7296ba463a8e53ce55bf4c6a5", "html_url": "https://github.com/rust-lang/rust/commit/00e1f5b8df5382a7296ba463a8e53ce55bf4c6a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00e1f5b8df5382a7296ba463a8e53ce55bf4c6a5/comments", "author": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9e27e6a6258b3adf00a5dd35d2676656224880d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9e27e6a6258b3adf00a5dd35d2676656224880d", "html_url": "https://github.com/rust-lang/rust/commit/e9e27e6a6258b3adf00a5dd35d2676656224880d"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "6108af6c884cbb06358285b0f9b909410e33dff2", "filename": "src/librustc_codegen_llvm/llvm/ffi.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00e1f5b8df5382a7296ba463a8e53ce55bf4c6a5/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e1f5b8df5382a7296ba463a8e53ce55bf4c6a5/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs?ref=00e1f5b8df5382a7296ba463a8e53ce55bf4c6a5", "patch": "@@ -482,6 +482,8 @@ pub mod debuginfo {\n extern { pub type ModuleBuffer; }\n \n extern \"C\" {\n+    pub fn LLVMRustInstallFatalErrorHandler();\n+\n     // Create and destroy contexts.\n     pub fn LLVMRustContextCreate(shouldDiscardNames: bool) -> &'static mut Context;\n     pub fn LLVMContextDispose(C: &'static mut Context);"}, {"sha": "0a80fdddbf9fdb4197d3b0b2f937a47e2c423a18", "filename": "src/librustc_codegen_llvm/llvm_util.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00e1f5b8df5382a7296ba463a8e53ce55bf4c6a5/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00e1f5b8df5382a7296ba463a8e53ce55bf4c6a5/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs?ref=00e1f5b8df5382a7296ba463a8e53ce55bf4c6a5", "patch": "@@ -56,6 +56,8 @@ unsafe fn configure_llvm(sess: &Session) {\n     let mut llvm_c_strs = Vec::with_capacity(n_args + 1);\n     let mut llvm_args = Vec::with_capacity(n_args + 1);\n \n+    llvm::LLVMRustInstallFatalErrorHandler();\n+\n     {\n         let mut add = |arg: &str| {\n             let s = CString::new(arg).unwrap();"}, {"sha": "bf7afa1b6c0684d15f2e19300e114af89c8ce3a4", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/00e1f5b8df5382a7296ba463a8e53ce55bf4c6a5/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/00e1f5b8df5382a7296ba463a8e53ce55bf4c6a5/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=00e1f5b8df5382a7296ba463a8e53ce55bf4c6a5", "patch": "@@ -17,6 +17,7 @@\n #include \"llvm/Object/Archive.h\"\n #include \"llvm/Object/ObjectFile.h\"\n #include \"llvm/Bitcode/BitcodeWriterPass.h\"\n+#include \"llvm/Support/Signals.h\"\n \n #include \"llvm/IR/CallSite.h\"\n \n@@ -26,6 +27,8 @@\n #include <cstdlib>\n #endif\n \n+#include <iostream>\n+\n //===----------------------------------------------------------------------===\n //\n // This file defines alternate interfaces to core functions that are more\n@@ -62,6 +65,27 @@ static AtomicOrdering fromRust(LLVMAtomicOrdering Ordering) {\n \n static LLVM_THREAD_LOCAL char *LastError;\n \n+// Custom error handler for fatal LLVM errors.\n+//\n+// Notably it exits the process with code 101, unlike LLVM's default of 1.\n+static void FatalErrorHandler(void *UserData,\n+                              const std::string& Reason,\n+                              bool GenCrashDiag) {\n+  // Do the same thing that the default error handler does.\n+  std::cerr << \"LLVM ERROR: \" << Reason << std::endl;\n+\n+  // Since this error handler exits the process, we have to run any cleanup that\n+  // LLVM would run after handling the error. This might change with an LLVM\n+  // upgrade.\n+  sys::RunInterruptHandlers();\n+\n+  exit(101);\n+}\n+\n+extern \"C\" void LLVMRustInstallFatalErrorHandler() {\n+  install_fatal_error_handler(FatalErrorHandler);\n+}\n+\n extern \"C\" LLVMMemoryBufferRef\n LLVMRustCreateMemoryBufferWithContentsOfFile(const char *Path) {\n   ErrorOr<std::unique_ptr<MemoryBuffer>> BufOr ="}]}