{"sha": "8a0b9c0542d42ecb495eece68a62feab43e85182", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhMGI5YzA1NDJkNDJlY2I0OTVlZWNlNjhhNjJmZWFiNDNlODUxODI=", "commit": {"author": {"name": "Marcello Seri", "email": "marcello.seri@gmail.com", "date": "2015-10-17T12:16:13Z"}, "committer": {"name": "Marcello Seri", "email": "marcello.seri@gmail.com", "date": "2015-10-17T12:16:13Z"}, "message": "Re-formatted macros by hand with rustfmt style", "tree": {"sha": "8d9b02298e3f376f620e7d02c83e3a6c09b94c7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d9b02298e3f376f620e7d02c83e3a6c09b94c7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a0b9c0542d42ecb495eece68a62feab43e85182", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a0b9c0542d42ecb495eece68a62feab43e85182", "html_url": "https://github.com/rust-lang/rust/commit/8a0b9c0542d42ecb495eece68a62feab43e85182", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a0b9c0542d42ecb495eece68a62feab43e85182/comments", "author": {"login": "mseri", "id": 4040623, "node_id": "MDQ6VXNlcjQwNDA2MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/4040623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mseri", "html_url": "https://github.com/mseri", "followers_url": "https://api.github.com/users/mseri/followers", "following_url": "https://api.github.com/users/mseri/following{/other_user}", "gists_url": "https://api.github.com/users/mseri/gists{/gist_id}", "starred_url": "https://api.github.com/users/mseri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mseri/subscriptions", "organizations_url": "https://api.github.com/users/mseri/orgs", "repos_url": "https://api.github.com/users/mseri/repos", "events_url": "https://api.github.com/users/mseri/events{/privacy}", "received_events_url": "https://api.github.com/users/mseri/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mseri", "id": 4040623, "node_id": "MDQ6VXNlcjQwNDA2MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/4040623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mseri", "html_url": "https://github.com/mseri", "followers_url": "https://api.github.com/users/mseri/followers", "following_url": "https://api.github.com/users/mseri/following{/other_user}", "gists_url": "https://api.github.com/users/mseri/gists{/gist_id}", "starred_url": "https://api.github.com/users/mseri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mseri/subscriptions", "organizations_url": "https://api.github.com/users/mseri/orgs", "repos_url": "https://api.github.com/users/mseri/repos", "events_url": "https://api.github.com/users/mseri/events{/privacy}", "received_events_url": "https://api.github.com/users/mseri/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0bd5e87a2f811e9eff7e0a695086de2cc9a4fa7", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0bd5e87a2f811e9eff7e0a695086de2cc9a4fa7", "html_url": "https://github.com/rust-lang/rust/commit/d0bd5e87a2f811e9eff7e0a695086de2cc9a4fa7"}], "stats": {"total": 48, "additions": 32, "deletions": 16}, "files": [{"sha": "ac2b9b07ffd13ceb4f995ce25ec24f8f1e424f48", "filename": "src/librand/isaac.rs", "status": "modified", "additions": 32, "deletions": 16, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/8a0b9c0542d42ecb495eece68a62feab43e85182/src%2Flibrand%2Fisaac.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a0b9c0542d42ecb495eece68a62feab43e85182/src%2Flibrand%2Fisaac.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrand%2Fisaac.rs?ref=8a0b9c0542d42ecb495eece68a62feab43e85182", "patch": "@@ -97,15 +97,23 @@ impl IsaacRng {\n             macro_rules! memloop {\n                 ($arr:expr) => {{\n                     for i in (0..RAND_SIZE_USIZE).step_by(8) {\n-                        a=a+$arr[i  ]; b=b+$arr[i+1];\n-                        c=c+$arr[i+2]; d=d+$arr[i+3];\n-                        e=e+$arr[i+4]; f=f+$arr[i+5];\n-                        g=g+$arr[i+6]; h=h+$arr[i+7];\n+                        a = a + $arr[i];\n+                        b = b + $arr[i + 1];\n+                        c = c + $arr[i + 2];\n+                        d = d + $arr[i + 3];\n+                        e = e + $arr[i + 4];\n+                        f = f + $arr[i + 5];\n+                        g = g + $arr[i + 6];\n+                        h = h + $arr[i + 7];\n                         mix!();\n-                        self.mem[i  ]=a; self.mem[i+1]=b;\n-                        self.mem[i+2]=c; self.mem[i+3]=d;\n-                        self.mem[i+4]=e; self.mem[i+5]=f;\n-                        self.mem[i+6]=g; self.mem[i+7]=h;\n+                        self.mem[i] = a;\n+                        self.mem[i + 1] = b;\n+                        self.mem[i + 2] = c;\n+                        self.mem[i + 3] = d;\n+                        self.mem[i + 4] = e;\n+                        self.mem[i + 5] = f;\n+                        self.mem[i + 6] = g;\n+                        self.mem[i + 7] = h;\n                     }\n                 }}\n             }\n@@ -349,15 +357,23 @@ impl Isaac64Rng {\n             macro_rules! memloop {\n                 ($arr:expr) => {{\n                     for i in (0..RAND_SIZE_64 / 8).map(|i| i * 8) {\n-                        a=a+$arr[i  ]; b=b+$arr[i+1];\n-                        c=c+$arr[i+2]; d=d+$arr[i+3];\n-                        e=e+$arr[i+4]; f=f+$arr[i+5];\n-                        g=g+$arr[i+6]; h=h+$arr[i+7];\n+                        a = a + $arr[i];\n+                        b = b + $arr[i + 1];\n+                        c = c + $arr[i + 2];\n+                        d = d + $arr[i + 3];\n+                        e = e + $arr[i + 4];\n+                        f = f + $arr[i + 5];\n+                        g = g + $arr[i + 6];\n+                        h = h + $arr[i + 7];\n                         mix!();\n-                        self.mem[i  ]=a; self.mem[i+1]=b;\n-                        self.mem[i+2]=c; self.mem[i+3]=d;\n-                        self.mem[i+4]=e; self.mem[i+5]=f;\n-                        self.mem[i+6]=g; self.mem[i+7]=h;\n+                        self.mem[i] = a;\n+                        self.mem[i + 1] = b;\n+                        self.mem[i + 2] = c;\n+                        self.mem[i + 3] = d;\n+                        self.mem[i + 4] = e;\n+                        self.mem[i + 5] = f;\n+                        self.mem[i + 6] = g;\n+                        self.mem[i + 7] = h;\n                     }\n                 }}\n             }"}]}