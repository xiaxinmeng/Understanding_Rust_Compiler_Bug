{"sha": "b1fa7b91baed3d2d5e46584701c9828d3a1f160d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxZmE3YjkxYmFlZDNkMmQ1ZTQ2NTg0NzAxYzk4MjhkM2ExZjE2MGQ=", "commit": {"author": {"name": "Dale Wijnand", "email": "dale.wijnand@gmail.com", "date": "2018-07-24T06:49:39Z"}, "committer": {"name": "Dale Wijnand", "email": "dale.wijnand@gmail.com", "date": "2018-07-24T09:34:18Z"}, "message": "Delegate utils::in_external_macro to rustc::lint::in_external_macro", "tree": {"sha": "1962977b3285f601a04ce71ad9d906dcf3bd8458", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1962977b3285f601a04ce71ad9d906dcf3bd8458"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1fa7b91baed3d2d5e46584701c9828d3a1f160d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEERGS9JmrgEHKCFADQTyVuPRUd9e8FAltW8poACgkQTyVuPRUd\n9e+18A//W6gRpH7N+N0c0H/+VqMGtd/TSKCdDcpZ0aHKEL05fO9LbhuyM6RFs3ku\n9m47lxsmri+MuIAN2QN+7ZAK/38VrOWm9wN/YjVlvbeqCUXxcsZOoBkm6a24lv/M\n6NDfWK05ntRE6wTbgqV2b21VoiY98jzJfj9OsAJjHjR+tHBizdbnCKejzbn+RT53\nY6dW4NHi2buGHVIO3bLN67sfuWOnjOKY9dCDk3OAi2FrTk0/5/yy1d5EFggo9RvM\nrkyk1c/bgli3bXMno6+2lqhOB5TCBoXDikslhd80J/pnpLIYJe8zi3CTGnBeLklM\najCBr3dtx5siRFPhHnhvd6yKWFQTcUrUpM26yq/cTkGCiq8OszW9ZAVfYKJxkpNw\nqns2fXuWg9Sl6bsqFvlqur9WQKvT6zGRv7bnxWEU2SrdbjAPpVI3/L8EpLoo2Rux\na9PELmCjBDrQKAC5vtzDOANFe7nwsso86j+/3LFBLeBSZzx43yDmQvonBz/rg1cC\nD6i03rlJ9kDuUQGiK5vItNp4MqXswpjpZNxGdBTkIQpJhUhPU/dzq8e9yF91AAaH\nFTwNsukkzTOQ96vACLHQEJd3FhluunjmmOSKrkQe50DTxfSgY+jf/O2zOlGJqHAj\n5k9b2IBtrhZdki76SkhG4PfF3YserHKpEychHZcKg7fYvadIPBU=\n=LNS8\n-----END PGP SIGNATURE-----", "payload": "tree 1962977b3285f601a04ce71ad9d906dcf3bd8458\nparent b02e53de341997d9f3b43a72cb17cd37ae269c3a\nauthor Dale Wijnand <dale.wijnand@gmail.com> 1532414979 +0100\ncommitter Dale Wijnand <dale.wijnand@gmail.com> 1532424858 +0100\n\nDelegate utils::in_external_macro to rustc::lint::in_external_macro\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1fa7b91baed3d2d5e46584701c9828d3a1f160d", "html_url": "https://github.com/rust-lang/rust/commit/b1fa7b91baed3d2d5e46584701c9828d3a1f160d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1fa7b91baed3d2d5e46584701c9828d3a1f160d/comments", "author": {"login": "dwijnand", "id": 344610, "node_id": "MDQ6VXNlcjM0NDYxMA==", "avatar_url": "https://avatars.githubusercontent.com/u/344610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dwijnand", "html_url": "https://github.com/dwijnand", "followers_url": "https://api.github.com/users/dwijnand/followers", "following_url": "https://api.github.com/users/dwijnand/following{/other_user}", "gists_url": "https://api.github.com/users/dwijnand/gists{/gist_id}", "starred_url": "https://api.github.com/users/dwijnand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dwijnand/subscriptions", "organizations_url": "https://api.github.com/users/dwijnand/orgs", "repos_url": "https://api.github.com/users/dwijnand/repos", "events_url": "https://api.github.com/users/dwijnand/events{/privacy}", "received_events_url": "https://api.github.com/users/dwijnand/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dwijnand", "id": 344610, "node_id": "MDQ6VXNlcjM0NDYxMA==", "avatar_url": "https://avatars.githubusercontent.com/u/344610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dwijnand", "html_url": "https://github.com/dwijnand", "followers_url": "https://api.github.com/users/dwijnand/followers", "following_url": "https://api.github.com/users/dwijnand/following{/other_user}", "gists_url": "https://api.github.com/users/dwijnand/gists{/gist_id}", "starred_url": "https://api.github.com/users/dwijnand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dwijnand/subscriptions", "organizations_url": "https://api.github.com/users/dwijnand/orgs", "repos_url": "https://api.github.com/users/dwijnand/repos", "events_url": "https://api.github.com/users/dwijnand/events{/privacy}", "received_events_url": "https://api.github.com/users/dwijnand/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b02e53de341997d9f3b43a72cb17cd37ae269c3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b02e53de341997d9f3b43a72cb17cd37ae269c3a", "html_url": "https://github.com/rust-lang/rust/commit/b02e53de341997d9f3b43a72cb17cd37ae269c3a"}], "stats": {"total": 30, "additions": 3, "deletions": 27}, "files": [{"sha": "91bb73a9bf404a5d65078c368e12fb94403f296b", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 3, "deletions": 27, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/b1fa7b91baed3d2d5e46584701c9828d3a1f160d/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1fa7b91baed3d2d5e46584701c9828d3a1f160d/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=b1fa7b91baed3d2d5e46584701c9828d3a1f160d", "patch": "@@ -19,7 +19,7 @@ use std::str::FromStr;\n use std::rc::Rc;\n use syntax::ast::{self, LitKind};\n use syntax::attr;\n-use syntax::codemap::{CompilerDesugaringKind, ExpnFormat, ExpnInfo, Span, DUMMY_SP};\n+use syntax::codemap::{CompilerDesugaringKind, ExpnFormat, Span, DUMMY_SP};\n use syntax::errors::DiagnosticBuilder;\n use syntax::ptr::P;\n use syntax::symbol::keywords;\n@@ -78,33 +78,9 @@ pub fn is_range_expression(span: Span) -> bool {\n }\n \n /// Returns true if the macro that expanded the crate was outside of the\n-/// current crate or was a\n-/// compiler plugin.\n+/// current crate or was a compiler plugin.\n pub fn in_external_macro<'a, T: LintContext<'a>>(cx: &T, span: Span) -> bool {\n-    /// Invokes `in_macro` with the expansion info of the given span slightly\n-    /// heavy, try to use\n-    /// this after other checks have already happened.\n-    fn in_macro_ext<'a, T: LintContext<'a>>(cx: &T, info: &ExpnInfo) -> bool {\n-        // no ExpnInfo = no macro\n-        if let ExpnFormat::MacroAttribute(..) = info.format {\n-            // these are all plugins\n-            return true;\n-        }\n-        // no span for the callee = external macro\n-        info.def_site.map_or(true, |span| {\n-            // no snippet = external macro or compiler-builtin expansion\n-            cx.sess()\n-                .codemap()\n-                .span_to_snippet(span)\n-                .ok()\n-                .map_or(true, |code| !code.starts_with(\"macro_rules\"))\n-        })\n-    }\n-\n-    span.ctxt()\n-        .outer()\n-        .expn_info()\n-        .map_or(false, |info| in_macro_ext(cx, &info))\n+    ::rustc::lint::in_external_macro(cx.sess(), span)\n }\n \n /// Check if a `DefId`'s path matches the given absolute type path usage."}]}