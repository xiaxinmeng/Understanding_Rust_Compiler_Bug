{"sha": "f7c2f2475a0adc2bf025a7a845fee61ff1468350", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3YzJmMjQ3NWEwYWRjMmJmMDI1YTdhODQ1ZmVlNjFmZjE0NjgzNTA=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-05-03T21:25:22Z"}, "committer": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-05-03T21:25:22Z"}, "message": "Make variant_fields inner an IndexVec", "tree": {"sha": "e9f528d359a34c543c872f6a3aec978480e3db92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9f528d359a34c543c872f6a3aec978480e3db92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7c2f2475a0adc2bf025a7a845fee61ff1468350", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7c2f2475a0adc2bf025a7a845fee61ff1468350", "html_url": "https://github.com/rust-lang/rust/commit/f7c2f2475a0adc2bf025a7a845fee61ff1468350", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7c2f2475a0adc2bf025a7a845fee61ff1468350/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ef2c30a1ae8dc6379e6c3a2e95815be5b192755", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ef2c30a1ae8dc6379e6c3a2e95815be5b192755", "html_url": "https://github.com/rust-lang/rust/commit/9ef2c30a1ae8dc6379e6c3a2e95815be5b192755"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "ca1c30def7afc38afe49c0e2f2190dda5f619f55", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7c2f2475a0adc2bf025a7a845fee61ff1468350/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7c2f2475a0adc2bf025a7a845fee61ff1468350/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=f7c2f2475a0adc2bf025a7a845fee61ff1468350", "patch": "@@ -2997,7 +2997,7 @@ pub struct UnsafetyCheckResult {\n /// The layout of generator state\n #[derive(Clone, Debug, RustcEncodable, RustcDecodable, HashStable)]\n pub struct GeneratorLayout<'tcx> {\n-    pub variant_fields: IndexVec<VariantIdx, Vec<LocalDecl<'tcx>>>,\n+    pub variant_fields: IndexVec<VariantIdx, IndexVec<Field, LocalDecl<'tcx>>>,\n }\n \n #[derive(Clone, Debug, RustcEncodable, RustcDecodable, HashStable)]"}, {"sha": "b09fe827b24bd0c341c2c54fcfb2e6400e2c1bde", "filename": "src/librustc_codegen_llvm/debuginfo/metadata.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7c2f2475a0adc2bf025a7a845fee61ff1468350/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7c2f2475a0adc2bf025a7a845fee61ff1468350/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs?ref=f7c2f2475a0adc2bf025a7a845fee61ff1468350", "patch": "@@ -1598,7 +1598,7 @@ impl<'tcx> VariantInfo<'tcx> {\n                 Some(variant.fields[i].ident.to_string()),\n             VariantInfo::Generator(_, generator_layout, variant_index) => {\n                 let variant_decls = &generator_layout.variant_fields[*variant_index];\n-                variant_decls[i].name.map(|name| name.to_string())\n+                variant_decls[i.into()].name.map(|name| name.to_string())\n             }\n             _ => None,\n         };"}, {"sha": "d9496c8c20a4029ccd4f3acca34a9cde3e2fbdbd", "filename": "src/librustc_mir/transform/generator.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7c2f2475a0adc2bf025a7a845fee61ff1468350/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7c2f2475a0adc2bf025a7a845fee61ff1468350/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs?ref=f7c2f2475a0adc2bf025a7a845fee61ff1468350", "patch": "@@ -58,7 +58,7 @@ use rustc::ty::GeneratorSubsts;\n use rustc::ty::layout::VariantIdx;\n use rustc::ty::subst::SubstsRef;\n use rustc_data_structures::fx::FxHashMap;\n-use rustc_data_structures::indexed_vec::Idx;\n+use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n use rustc_data_structures::bit_set::BitSet;\n use std::borrow::Cow;\n use std::iter;\n@@ -560,7 +560,7 @@ fn compute_layout<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     }).unzip();\n \n     // Put every var in each variant, for now.\n-    let empty_variants = iter::repeat(vec![]).take(3);\n+    let empty_variants = iter::repeat(IndexVec::new()).take(3);\n     let state_variants = iter::repeat(vars).take(suspending_blocks.count());\n     let layout = GeneratorLayout {\n         variant_fields: empty_variants.chain(state_variants).collect()"}]}