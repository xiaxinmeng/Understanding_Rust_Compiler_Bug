{"sha": "beec5193168e7fc71e0e6acded48c4bc3864eb5a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlZWM1MTkzMTY4ZTdmYzcxZTBlNmFjZGVkNDhjNGJjMzg2NGViNWE=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-12-21T05:15:49Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-12-21T05:16:02Z"}, "message": "Switch chain calls to use Option::chain method", "tree": {"sha": "186f194a167f8bbbf0f850e07fbd35d560afca87", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/186f194a167f8bbbf0f850e07fbd35d560afca87"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/beec5193168e7fc71e0e6acded48c4bc3864eb5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/beec5193168e7fc71e0e6acded48c4bc3864eb5a", "html_url": "https://github.com/rust-lang/rust/commit/beec5193168e7fc71e0e6acded48c4bc3864eb5a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/beec5193168e7fc71e0e6acded48c4bc3864eb5a/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e94407a94f8f6a425b86a1521e4758680b20f36", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e94407a94f8f6a425b86a1521e4758680b20f36", "html_url": "https://github.com/rust-lang/rust/commit/5e94407a94f8f6a425b86a1521e4758680b20f36"}], "stats": {"total": 117, "additions": 39, "deletions": 78}, "files": [{"sha": "45d67df912af315fce30e94edb9e676793d11200", "filename": "src/libstd/time.rs", "status": "modified", "additions": 39, "deletions": 78, "changes": 117, "blob_url": "https://github.com/rust-lang/rust/blob/beec5193168e7fc71e0e6acded48c4bc3864eb5a/src%2Flibstd%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beec5193168e7fc71e0e6acded48c4bc3864eb5a/src%2Flibstd%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftime.rs?ref=beec5193168e7fc71e0e6acded48c4bc3864eb5a", "patch": "@@ -385,36 +385,22 @@ priv fn do_strptime(s: &str, format: &str) -> Result<Tm, ~str> {\n             None => Err(~\"Invalid year\")\n           },\n           'c' => {\n-                // FIXME(#3724): cleanup\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                    move parse_type(s, pos, 'a', tm),\n-                    |pos| parse_char(s, pos, ' ')),\n-                    |pos| parse_type(s, pos, 'b', tm)),\n-                    |pos| parse_char(s, pos, ' ')),\n-                    |pos| parse_type(s, pos, 'e', tm)),\n-                    |pos| parse_char(s, pos, ' ')),\n-                    |pos| parse_type(s, pos, 'T', tm)),\n-                    |pos| parse_char(s, pos, ' ')),\n-                    |pos| parse_type(s, pos, 'Y', tm))\n+            parse_type(s, pos, 'a', tm)\n+                .chain(|pos| parse_char(s, pos, ' '))\n+                .chain(|pos| parse_type(s, pos, 'b', tm))\n+                .chain(|pos| parse_char(s, pos, ' '))\n+                .chain(|pos| parse_type(s, pos, 'e', tm))\n+                .chain(|pos| parse_char(s, pos, ' '))\n+                .chain(|pos| parse_type(s, pos, 'T', tm))\n+                .chain(|pos| parse_char(s, pos, ' '))\n+                .chain(|pos| parse_type(s, pos, 'Y', tm))\n           }\n           'D' | 'x' => {\n-                // FIXME(#3724): cleanup\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                    move parse_type(s, pos, 'm', tm),\n-                    |pos| parse_char(s, pos, '/')),\n-                    |pos| parse_type(s, pos, 'd', tm)),\n-                    |pos| parse_char(s, pos, '/')),\n-                    |pos| parse_type(s, pos, 'y', tm))\n+            parse_type(s, pos, 'm', tm)\n+                .chain(|pos| parse_char(s, pos, '/'))\n+                .chain(|pos| parse_type(s, pos, 'd', tm))\n+                .chain(|pos| parse_char(s, pos, '/'))\n+                .chain(|pos| parse_type(s, pos, 'y', tm))\n           }\n           'd' => match match_digits(s, pos, 2u, false) {\n             Some(item) => { let (v, pos) = item; tm.tm_mday = v; Ok(pos) }\n@@ -425,16 +411,11 @@ priv fn do_strptime(s: &str, format: &str) -> Result<Tm, ~str> {\n             None => Err(~\"Invalid day of the month\")\n           },\n           'F' => {\n-                // FIXME(#3724): cleanup\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                    move parse_type(s, pos, 'Y', tm),\n-                    |pos| parse_char(s, pos, '-')),\n-                    |pos| parse_type(s, pos, 'm', tm)),\n-                    |pos| parse_char(s, pos, '-')),\n-                    |pos| parse_type(s, pos, 'd', tm))\n+            parse_type(s, pos, 'Y', tm)\n+                .chain(|pos| parse_char(s, pos, '-'))\n+                .chain(|pos| parse_type(s, pos, 'm', tm))\n+                .chain(|pos| parse_char(s, pos, '-'))\n+                .chain(|pos| parse_type(s, pos, 'd', tm))\n           }\n           'H' => {\n             // FIXME (#2350): range check.\n@@ -515,28 +496,18 @@ priv fn do_strptime(s: &str, format: &str) -> Result<Tm, ~str> {\n             None => Err(~\"Invalid hour\")\n           },\n           'R' => {\n-                // FIXME(#3724): cleanup\n-                result::chain(\n-                result::chain(\n-                    move parse_type(s, pos, 'H', tm),\n-                    |pos| parse_char(s, pos, ':')),\n-                    |pos| parse_type(s, pos, 'M', tm))\n+            parse_type(s, pos, 'H', tm)\n+                .chain(|pos| parse_char(s, pos, ':'))\n+                .chain(|pos| parse_type(s, pos, 'M', tm))\n           }\n           'r' => {\n-                // FIXME(#3724): cleanup\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                    move parse_type(s, pos, 'I', tm),\n-                    |pos| parse_char(s, pos, ':')),\n-                    |pos| parse_type(s, pos, 'M', tm)),\n-                    |pos| parse_char(s, pos, ':')),\n-                    |pos| parse_type(s, pos, 'S', tm)),\n-                    |pos| parse_char(s, pos, ' ')),\n-                    |pos| parse_type(s, pos, 'p', tm))\n+            parse_type(s, pos, 'I', tm)\n+                .chain(|pos| parse_char(s, pos, ':'))\n+                .chain(|pos| parse_type(s, pos, 'M', tm))\n+                .chain(|pos| parse_char(s, pos, ':'))\n+                .chain(|pos| parse_type(s, pos, 'S', tm))\n+                .chain(|pos| parse_char(s, pos, ' '))\n+                .chain(|pos| parse_type(s, pos, 'p', tm))\n           }\n           'S' => {\n             // FIXME (#2350): range check.\n@@ -551,16 +522,11 @@ priv fn do_strptime(s: &str, format: &str) -> Result<Tm, ~str> {\n           }\n           //'s' {}\n           'T' | 'X' => {\n-                // FIXME(#3724): cleanup\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                    move parse_type(s, pos, 'H', tm),\n-                    |pos| parse_char(s, pos, ':')),\n-                    |pos| parse_type(s, pos, 'M', tm)),\n-                    |pos| parse_char(s, pos, ':')),\n-                    |pos| parse_type(s, pos, 'S', tm))\n+            parse_type(s, pos, 'H', tm)\n+                .chain(|pos| parse_char(s, pos, ':'))\n+                .chain(|pos| parse_type(s, pos, 'M', tm))\n+                .chain(|pos| parse_char(s, pos, ':'))\n+                .chain(|pos| parse_type(s, pos, 'S', tm))\n           }\n           't' => parse_char(s, pos, '\\t'),\n           'u' => {\n@@ -575,16 +541,11 @@ priv fn do_strptime(s: &str, format: &str) -> Result<Tm, ~str> {\n             }\n           }\n           'v' => {\n-                // FIXME(#3724): cleanup\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                result::chain(\n-                    move parse_type(s, pos, 'e', tm),\n-                    |pos| parse_char(s, pos, '-')),\n-                    |pos| parse_type(s, pos, 'b', tm)),\n-                    |pos| parse_char(s, pos, '-')),\n-                    |pos| parse_type(s, pos, 'Y', tm))\n+            parse_type(s, pos, 'e', tm)\n+                .chain(|pos|  parse_char(s, pos, '-'))\n+                .chain(|pos| parse_type(s, pos, 'b', tm))\n+                .chain(|pos| parse_char(s, pos, '-'))\n+                .chain(|pos| parse_type(s, pos, 'Y', tm))\n           }\n           //'W' {}\n           'w' => {"}]}