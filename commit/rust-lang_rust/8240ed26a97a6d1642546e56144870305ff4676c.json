{"sha": "8240ed26a97a6d1642546e56144870305ff4676c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyNDBlZDI2YTk3YTZkMTY0MjU0NmU1NjE0NDg3MDMwNWZmNDY3NmM=", "commit": {"author": {"name": "Vytautas Astrauskas", "email": "astrauv@amazon.com", "date": "2020-04-21T00:23:51Z"}, "committer": {"name": "Vytautas Astrauskas", "email": "astrauv@amazon.com", "date": "2020-04-27T21:26:36Z"}, "message": "Change the test not to rely on internals.", "tree": {"sha": "1844f3a36b9c5a2cdd5701cfb02a20ff2fafd03c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1844f3a36b9c5a2cdd5701cfb02a20ff2fafd03c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8240ed26a97a6d1642546e56144870305ff4676c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8240ed26a97a6d1642546e56144870305ff4676c", "html_url": "https://github.com/rust-lang/rust/commit/8240ed26a97a6d1642546e56144870305ff4676c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8240ed26a97a6d1642546e56144870305ff4676c/comments", "author": null, "committer": null, "parents": [{"sha": "90e9a87fa79f541efecadde6daa53299b9350e07", "url": "https://api.github.com/repos/rust-lang/rust/commits/90e9a87fa79f541efecadde6daa53299b9350e07", "html_url": "https://github.com/rust-lang/rust/commit/90e9a87fa79f541efecadde6daa53299b9350e07"}], "stats": {"total": 22, "additions": 3, "deletions": 19}, "files": [{"sha": "0d1808cbe0fa4f5c372408e85862acf318c771cd", "filename": "tests/run-pass/concurrency/tls_lib_drop.rs", "status": "modified", "additions": 3, "deletions": 19, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8240ed26a97a6d1642546e56144870305ff4676c/tests%2Frun-pass%2Fconcurrency%2Ftls_lib_drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8240ed26a97a6d1642546e56144870305ff4676c/tests%2Frun-pass%2Fconcurrency%2Ftls_lib_drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fconcurrency%2Ftls_lib_drop.rs?ref=8240ed26a97a6d1642546e56144870305ff4676c", "patch": "@@ -2,11 +2,6 @@\n \n //! Check that destructors of the library thread locals are executed immediately\n //! after a thread terminates.\n-//!\n-//! FIXME: We should have a similar test for thread-local statics (statics\n-//! annotated with `#[thread_local]`) once they support destructors.\n-\n-#![feature(thread_local_internals)]\n \n use std::cell::RefCell;\n use std::thread;\n@@ -21,20 +16,9 @@ impl Drop for TestCell {\n     }\n }\n \n-static A: std::thread::LocalKey<TestCell> = {\n-    #[inline]\n-    fn __init() -> TestCell {\n-        TestCell { value: RefCell::new(0) }\n-    }\n-\n-    unsafe fn __getit() -> Option<&'static TestCell> {\n-        static __KEY: std::thread::__OsLocalKeyInner<TestCell> =\n-            std::thread::__OsLocalKeyInner::new();\n-        __KEY.get(__init)\n-    }\n-\n-    unsafe { std::thread::LocalKey::new(__getit) }\n-};\n+thread_local! {\n+    static A: TestCell = TestCell { value: RefCell::new(0) };\n+}\n \n fn main() {\n     thread::spawn(|| {"}]}