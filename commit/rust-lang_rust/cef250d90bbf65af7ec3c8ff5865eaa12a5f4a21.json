{"sha": "cef250d90bbf65af7ec3c8ff5865eaa12a5f4a21", "node_id": "C_kwDOAAsO6NoAKGNlZjI1MGQ5MGJiZjY1YWY3ZWMzYzhmZjU4NjVlYWExMmE1ZjRhMjE", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-01-10T20:24:20Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-01-14T20:05:35Z"}, "message": "Make `AVG_PART_LENGTH` a power of 2\n\nI seem to recall that in general, it's best to request an allocation\nwith a size that's a power of 2. The low estimate of 5 was probably a\nlittle too low as well.", "tree": {"sha": "07ddf96ae0eddba69edd12a7b4945684a076db8f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07ddf96ae0eddba69edd12a7b4945684a076db8f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cef250d90bbf65af7ec3c8ff5865eaa12a5f4a21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cef250d90bbf65af7ec3c8ff5865eaa12a5f4a21", "html_url": "https://github.com/rust-lang/rust/commit/cef250d90bbf65af7ec3c8ff5865eaa12a5f4a21", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cef250d90bbf65af7ec3c8ff5865eaa12a5f4a21/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f59eb6da014cb146c1477ab0ddf35729c88e99f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f59eb6da014cb146c1477ab0ddf35729c88e99f", "html_url": "https://github.com/rust-lang/rust/commit/8f59eb6da014cb146c1477ab0ddf35729c88e99f"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "66c879b83925c7d11b3627e391f6252b9debbaa0", "filename": "src/librustdoc/html/url_parts_builder.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/cef250d90bbf65af7ec3c8ff5865eaa12a5f4a21/src%2Flibrustdoc%2Fhtml%2Furl_parts_builder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cef250d90bbf65af7ec3c8ff5865eaa12a5f4a21/src%2Flibrustdoc%2Fhtml%2Furl_parts_builder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Furl_parts_builder.rs?ref=cef250d90bbf65af7ec3c8ff5865eaa12a5f4a21", "patch": "@@ -105,10 +105,17 @@ impl UrlPartsBuilder {\n \n /// This is just a guess at the average length of a URL part,\n /// used for [`String::with_capacity`] calls in the [`FromIterator`]\n-/// and [`Extend`] impls.\n+/// and [`Extend`] impls, and for [estimating item path lengths].\n ///\n-/// This is intentionally on the lower end to avoid overallocating.\n-const AVG_PART_LENGTH: usize = 5;\n+/// The value `8` was chosen for two main reasons:\n+///\n+/// * It seems like a good guess for the average part length.\n+/// * jemalloc's size classes are all multiples of eight,\n+///   which means that the amount of memory it allocates will often match\n+///   the amount requested, avoiding wasted bytes.\n+///\n+/// [estimating item path lengths]: estimate_item_path_byte_length\n+const AVG_PART_LENGTH: usize = 8;\n \n /// Estimate the number of bytes in an item's path, based on how many segments it has.\n ///"}]}