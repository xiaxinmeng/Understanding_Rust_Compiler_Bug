{"sha": "3e70c8ec2ffb17ad55d57032a9d47fe7463f2d6d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlNzBjOGVjMmZmYjE3YWQ1NWQ1NzAzMmE5ZDQ3ZmU3NDYzZjJkNmQ=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-03-05T12:20:04Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-03-05T15:38:48Z"}, "message": "Use simple 'for i in x' loops instead of 'while let Some(x) = x.next()' loops on iterators. (clippy::while_let_on_iterator)", "tree": {"sha": "bec6ba62c01da6b2c522408859fc9fbeeb458b46", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bec6ba62c01da6b2c522408859fc9fbeeb458b46"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e70c8ec2ffb17ad55d57032a9d47fe7463f2d6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e70c8ec2ffb17ad55d57032a9d47fe7463f2d6d", "html_url": "https://github.com/rust-lang/rust/commit/3e70c8ec2ffb17ad55d57032a9d47fe7463f2d6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e70c8ec2ffb17ad55d57032a9d47fe7463f2d6d/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2bbe3349f3c93d63d6408d4df1d190c7890f512", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2bbe3349f3c93d63d6408d4df1d190c7890f512", "html_url": "https://github.com/rust-lang/rust/commit/c2bbe3349f3c93d63d6408d4df1d190c7890f512"}], "stats": {"total": 13, "additions": 4, "deletions": 9}, "files": [{"sha": "ea8378574a3e0cc9613543c2395a969c6f82d65f", "filename": "src/librustc_mir/interpret/terminator.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3e70c8ec2ffb17ad55d57032a9d47fe7463f2d6d/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e70c8ec2ffb17ad55d57032a9d47fe7463f2d6d/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs?ref=3e70c8ec2ffb17ad55d57032a9d47fe7463f2d6d", "patch": "@@ -311,9 +311,8 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                         // taking into account the `spread_arg`.  If we could write\n                         // this is a single iterator (that handles `spread_arg`), then\n                         // `pass_argument` would be the loop body. It takes care to\n-                        // not advance `caller_iter` for ZSTs.\n-                        let mut locals_iter = body.args_iter();\n-                        while let Some(local) = locals_iter.next() {\n+                        // not advance `caller_iter` for ZSTs\n+                        for local in body.args_iter() {\n                             let dest = self.eval_place(&mir::Place::from(local))?;\n                             if Some(local) == body.spread_arg {\n                                 // Must be a tuple"}, {"sha": "805cd9d3e3562f7e10c14c2222b7c5e26154a7d8", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3e70c8ec2ffb17ad55d57032a9d47fe7463f2d6d/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e70c8ec2ffb17ad55d57032a9d47fe7463f2d6d/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=3e70c8ec2ffb17ad55d57032a9d47fe7463f2d6d", "patch": "@@ -869,12 +869,8 @@ pub fn plain_summary_line(md: &str) -> String {\n         }\n     }\n     let mut s = String::with_capacity(md.len() * 3 / 2);\n-    let mut p = ParserWrapper { inner: Parser::new(md), is_in: 0, is_first: true };\n-    while let Some(t) = p.next() {\n-        if !t.is_empty() {\n-            s.push_str(&t);\n-        }\n-    }\n+    let p = ParserWrapper { inner: Parser::new(md), is_in: 0, is_first: true };\n+    p.into_iter().filter(|t| !t.is_empty()).for_each(|i| s.push_str(&i));\n     s\n }\n "}]}