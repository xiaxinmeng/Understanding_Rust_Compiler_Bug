{"sha": "e8703e88fc79929bb9e96e3ac3e1720bfe0c456c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4NzAzZTg4ZmM3OTkyOWJiOWU5NmUzYWMzZTE3MjBiZmUwYzQ1NmM=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-14T14:39:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-14T14:39:13Z"}, "message": "Rollup merge of #74296 - Lynoure:rfind-doc-improvement, r=hanna-kruppe\n\nClarify the description for rfind\n\nChanges the wording in rfind description to be clearer and the example code to illustrate the difference between\nfind and rfind", "tree": {"sha": "951b01823c160e434f1e4a7da36cac243dad7095", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/951b01823c160e434f1e4a7da36cac243dad7095"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8703e88fc79929bb9e96e3ac3e1720bfe0c456c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfDcOSCRBK7hj4Ov3rIwAAdHIIACmOCRJzjSaFxIAdYOVk0aF0\nqDuI6ktfTxUPHnRg0UoxCLK2o9H9sjlpS7kovRYiB0gq+qTocxA6ibjaSR5qDUz9\nhpCZOqDPh8PgYIA/9h7TjaLyB3H0vpCn40LM/mzg9S2GxdxyYLZk6kn+t00hMbuw\n4jcgRQlc4pLp4vUy2SrSXqSFMFqM+WHOee77Q8CFCGRYvbQFogg+GXufw+xqz7BH\nKa9nvL1+R1wtesBXNjWdoeLGeP0XTqBTV67h8Nkny5SQPJltUjiXd+m2WtyLrO6H\nAoyt2XI9QK29WLyFHsHsrYy20BRc+v/Ja3VYDIKzwodHl/FA//t5Aq0pWFCKxEU=\n=QTNP\n-----END PGP SIGNATURE-----\n", "payload": "tree 951b01823c160e434f1e4a7da36cac243dad7095\nparent 1114f2231a186c712ca6fde5d7d2b8d9ae330769\nparent d27e7d04a15e29b093fcad97900269f408879c46\nauthor Manish Goregaokar <manishsmail@gmail.com> 1594737553 -0700\ncommitter GitHub <noreply@github.com> 1594737553 -0700\n\nRollup merge of #74296 - Lynoure:rfind-doc-improvement, r=hanna-kruppe\n\nClarify the description for rfind\n\nChanges the wording in rfind description to be clearer and the example code to illustrate the difference between\nfind and rfind\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8703e88fc79929bb9e96e3ac3e1720bfe0c456c", "html_url": "https://github.com/rust-lang/rust/commit/e8703e88fc79929bb9e96e3ac3e1720bfe0c456c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8703e88fc79929bb9e96e3ac3e1720bfe0c456c/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1114f2231a186c712ca6fde5d7d2b8d9ae330769", "url": "https://api.github.com/repos/rust-lang/rust/commits/1114f2231a186c712ca6fde5d7d2b8d9ae330769", "html_url": "https://github.com/rust-lang/rust/commit/1114f2231a186c712ca6fde5d7d2b8d9ae330769"}, {"sha": "d27e7d04a15e29b093fcad97900269f408879c46", "url": "https://api.github.com/repos/rust-lang/rust/commits/d27e7d04a15e29b093fcad97900269f408879c46", "html_url": "https://github.com/rust-lang/rust/commit/d27e7d04a15e29b093fcad97900269f408879c46"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "393911675c73e8d1e2311beff926924e13611ded", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e8703e88fc79929bb9e96e3ac3e1720bfe0c456c/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8703e88fc79929bb9e96e3ac3e1720bfe0c456c/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=e8703e88fc79929bb9e96e3ac3e1720bfe0c456c", "patch": "@@ -3156,11 +3156,11 @@ impl str {\n     /// Simple patterns:\n     ///\n     /// ```\n-    /// let s = \"L\u00f6we \u8001\u864e L\u00e9opard\";\n+    /// let s = \"L\u00f6we \u8001\u864e L\u00e9opard Gepardi\";\n     ///\n     /// assert_eq!(s.find('L'), Some(0));\n     /// assert_eq!(s.find('\u00e9'), Some(14));\n-    /// assert_eq!(s.find(\"L\u00e9opard\"), Some(13));\n+    /// assert_eq!(s.find(\"pard\"), Some(17));\n     /// ```\n     ///\n     /// More complex patterns using point-free style and closures:\n@@ -3188,8 +3188,8 @@ impl str {\n         pat.into_searcher(self).next_match().map(|(i, _)| i)\n     }\n \n-    /// Returns the byte index of the last character of this string slice that\n-    /// matches the pattern.\n+    /// Returns the byte index for the first character of the rightmost match of the pattern in\n+    /// this string slice.\n     ///\n     /// Returns [`None`] if the pattern doesn't match.\n     ///\n@@ -3205,10 +3205,11 @@ impl str {\n     /// Simple patterns:\n     ///\n     /// ```\n-    /// let s = \"L\u00f6we \u8001\u864e L\u00e9opard\";\n+    /// let s = \"L\u00f6we \u8001\u864e L\u00e9opard Gepardi\";\n     ///\n     /// assert_eq!(s.rfind('L'), Some(13));\n     /// assert_eq!(s.rfind('\u00e9'), Some(14));\n+    /// assert_eq!(s.rfind(\"pard\"), Some(24));\n     /// ```\n     ///\n     /// More complex patterns with closures:"}]}