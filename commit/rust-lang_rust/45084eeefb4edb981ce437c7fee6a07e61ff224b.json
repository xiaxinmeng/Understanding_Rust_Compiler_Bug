{"sha": "45084eeefb4edb981ce437c7fee6a07e61ff224b", "node_id": "C_kwDOAAsO6NoAKDQ1MDg0ZWVlZmI0ZWRiOTgxY2U0MzdjN2ZlZTZhMDdlNjFmZjIyNGI", "commit": {"author": {"name": "tamaron", "email": "tamaron1203@gmail.com", "date": "2022-08-11T03:00:46Z"}, "committer": {"name": "tamaron", "email": "tamaron1203@gmail.com", "date": "2022-08-11T06:07:39Z"}, "message": "give up when gurad has side effects", "tree": {"sha": "407d832b48e0e30ab9087885ca0b80c21d82071f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/407d832b48e0e30ab9087885ca0b80c21d82071f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45084eeefb4edb981ce437c7fee6a07e61ff224b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45084eeefb4edb981ce437c7fee6a07e61ff224b", "html_url": "https://github.com/rust-lang/rust/commit/45084eeefb4edb981ce437c7fee6a07e61ff224b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45084eeefb4edb981ce437c7fee6a07e61ff224b/comments", "author": {"login": "tamaroning", "id": 20992019, "node_id": "MDQ6VXNlcjIwOTkyMDE5", "avatar_url": "https://avatars.githubusercontent.com/u/20992019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamaroning", "html_url": "https://github.com/tamaroning", "followers_url": "https://api.github.com/users/tamaroning/followers", "following_url": "https://api.github.com/users/tamaroning/following{/other_user}", "gists_url": "https://api.github.com/users/tamaroning/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamaroning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamaroning/subscriptions", "organizations_url": "https://api.github.com/users/tamaroning/orgs", "repos_url": "https://api.github.com/users/tamaroning/repos", "events_url": "https://api.github.com/users/tamaroning/events{/privacy}", "received_events_url": "https://api.github.com/users/tamaroning/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tamaroning", "id": 20992019, "node_id": "MDQ6VXNlcjIwOTkyMDE5", "avatar_url": "https://avatars.githubusercontent.com/u/20992019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamaroning", "html_url": "https://github.com/tamaroning", "followers_url": "https://api.github.com/users/tamaroning/followers", "following_url": "https://api.github.com/users/tamaroning/following{/other_user}", "gists_url": "https://api.github.com/users/tamaroning/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamaroning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamaroning/subscriptions", "organizations_url": "https://api.github.com/users/tamaroning/orgs", "repos_url": "https://api.github.com/users/tamaroning/repos", "events_url": "https://api.github.com/users/tamaroning/events{/privacy}", "received_events_url": "https://api.github.com/users/tamaroning/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "459821b1914248180cac691128dd35d945bfde88", "url": "https://api.github.com/repos/rust-lang/rust/commits/459821b1914248180cac691128dd35d945bfde88", "html_url": "https://github.com/rust-lang/rust/commit/459821b1914248180cac691128dd35d945bfde88"}], "stats": {"total": 48, "additions": 45, "deletions": 3}, "files": [{"sha": "6f037339ec75870552a3d2867f447a012364d143", "filename": "clippy_lints/src/matches/needless_match.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/45084eeefb4edb981ce437c7fee6a07e61ff224b/clippy_lints%2Fsrc%2Fmatches%2Fneedless_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45084eeefb4edb981ce437c7fee6a07e61ff224b/clippy_lints%2Fsrc%2Fmatches%2Fneedless_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches%2Fneedless_match.rs?ref=45084eeefb4edb981ce437c7fee6a07e61ff224b", "patch": "@@ -8,7 +8,7 @@ use clippy_utils::{\n };\n use rustc_errors::Applicability;\n use rustc_hir::LangItem::OptionNone;\n-use rustc_hir::{Arm, BindingAnnotation, Expr, ExprKind, FnRetTy, Node, Pat, PatKind, Path, QPath};\n+use rustc_hir::{Arm, BindingAnnotation, Expr, ExprKind, FnRetTy, Guard, Node, Pat, PatKind, Path, QPath};\n use rustc_lint::LateContext;\n use rustc_span::sym;\n use rustc_typeck::hir_ty_to_ty;\n@@ -65,6 +65,22 @@ pub(crate) fn check_if_let<'tcx>(cx: &LateContext<'tcx>, ex: &Expr<'_>, if_let:\n fn check_all_arms(cx: &LateContext<'_>, match_expr: &Expr<'_>, arms: &[Arm<'_>]) -> bool {\n     for arm in arms {\n         let arm_expr = peel_blocks_with_stmt(arm.body);\n+\n+        if let Some(guard_expr) = &arm.guard {\n+            match guard_expr {\n+                // gives up if `pat if expr` can have side effects\n+                Guard::If(if_cond) => {\n+                    if if_cond.can_have_side_effects() {\n+                        return false;\n+                    }\n+                },\n+                // gives up `pat if let ...` arm\n+                Guard::IfLet(_) => {\n+                    return false;\n+                },\n+            };\n+        }\n+\n         if let PatKind::Wild = arm.pat.kind {\n             if !eq_expr_value(cx, match_expr, strip_return(arm_expr)) {\n                 return false;"}, {"sha": "7e47406798cf9b90d96e98893ed8c66c89109406", "filename": "tests/ui/needless_match.fixed", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/45084eeefb4edb981ce437c7fee6a07e61ff224b/tests%2Fui%2Fneedless_match.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/45084eeefb4edb981ce437c7fee6a07e61ff224b/tests%2Fui%2Fneedless_match.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_match.fixed?ref=45084eeefb4edb981ce437c7fee6a07e61ff224b", "patch": "@@ -209,7 +209,7 @@ impl Tr for Result<i32, i32> {\n \n mod issue9084 {\n     fn wildcard_if() {\n-        let some_bool = true;\n+        let mut some_bool = true;\n         let e = Some(1);\n \n         // should lint\n@@ -230,6 +230,19 @@ mod issue9084 {\n             _ if some_bool => e,\n             _ => e,\n         };\n+\n+        // should not lint (guard has side effects)\n+        let _ = match e {\n+            Some(i) => Some(i),\n+            _ if {\n+                some_bool = false;\n+                some_bool\n+            } =>\n+            {\n+                e\n+            },\n+            _ => e,\n+        };\n     }\n }\n "}, {"sha": "809c694bf400464bb4685b115010b04c63ce6147", "filename": "tests/ui/needless_match.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/45084eeefb4edb981ce437c7fee6a07e61ff224b/tests%2Fui%2Fneedless_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45084eeefb4edb981ce437c7fee6a07e61ff224b/tests%2Fui%2Fneedless_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_match.rs?ref=45084eeefb4edb981ce437c7fee6a07e61ff224b", "patch": "@@ -246,7 +246,7 @@ impl Tr for Result<i32, i32> {\n \n mod issue9084 {\n     fn wildcard_if() {\n-        let some_bool = true;\n+        let mut some_bool = true;\n         let e = Some(1);\n \n         // should lint\n@@ -274,6 +274,19 @@ mod issue9084 {\n             _ if some_bool => e,\n             _ => e,\n         };\n+\n+        // should not lint (guard has side effects)\n+        let _ = match e {\n+            Some(i) => Some(i),\n+            _ if {\n+                some_bool = false;\n+                some_bool\n+            } =>\n+            {\n+                e\n+            },\n+            _ => e,\n+        };\n     }\n }\n "}]}