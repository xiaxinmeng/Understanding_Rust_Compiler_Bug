{"sha": "61ab991405fe848c4c3b48b7fece443d84bc893b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxYWI5OTE0MDVmZTg0OGM0YzNiNDhiN2ZlY2U0NDNkODRiYzg5M2I=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2017-08-13T14:50:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-08-13T14:50:17Z"}, "message": "Update driver.rs", "tree": {"sha": "9b3bd834f338234219bdcede45578769937d7ba9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b3bd834f338234219bdcede45578769937d7ba9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61ab991405fe848c4c3b48b7fece443d84bc893b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61ab991405fe848c4c3b48b7fece443d84bc893b", "html_url": "https://github.com/rust-lang/rust/commit/61ab991405fe848c4c3b48b7fece443d84bc893b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61ab991405fe848c4c3b48b7fece443d84bc893b/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c28cf5b68e38d58ad14d0e145746a0e435cfe23", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c28cf5b68e38d58ad14d0e145746a0e435cfe23", "html_url": "https://github.com/rust-lang/rust/commit/1c28cf5b68e38d58ad14d0e145746a0e435cfe23"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "0e08849b1ffbc2ab2de91d4a1c8060d929bc9827", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61ab991405fe848c4c3b48b7fece443d84bc893b/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61ab991405fe848c4c3b48b7fece443d84bc893b/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=61ab991405fe848c4c3b48b7fece443d84bc893b", "patch": "@@ -107,7 +107,7 @@ pub fn compile_input(sess: &Session,\n     // We need nested scopes here, because the intermediate results can keep\n     // large chunks of memory alive and we want to free them as soon as\n     // possible to keep the peak memory usage low\n-    let (outputs, trans): (OutputFilenames, write::OngoingCrateTranslation) = {\n+    let (outputs, trans): (OutputFilenames, OngoingCrateTranslation) = {\n         let krate = match phase_1_parse_input(control, sess, input) {\n             Ok(krate) => krate,\n             Err(mut parse_error) => {"}]}