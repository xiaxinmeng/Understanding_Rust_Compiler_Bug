{"sha": "9e26fc60b1a91e28e799fd3ed33f8b93db13be2a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllMjZmYzYwYjFhOTFlMjhlNzk5ZmQzZWQzM2Y4YjkzZGIxM2JlMmE=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-12-01T22:46:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-01T22:46:13Z"}, "message": "Rollup merge of #79600 - nicokoch:kernel_copy_unixstream, r=m-ou-se\n\nstd::io: Use sendfile for UnixStream\n\n`UnixStream` was forgotten in #75272 .\n\nBenchmark yields the following results.\nBefore:\n`running 1 test\ntest sys::unix::kernel_copy::tests::bench_file_to_uds_copy        ... bench:      54,399 ns/iter (+/- 6,817) = 2409 MB/s`\n\nAfter:\n`running 1 test\ntest sys::unix::kernel_copy::tests::bench_file_to_uds_copy        ... bench:      18,627 ns/iter (+/- 6,007) = 7036 MB/s`", "tree": {"sha": "3fc34123494ce7c195cd6aac55fb7546f5d18c6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3fc34123494ce7c195cd6aac55fb7546f5d18c6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e26fc60b1a91e28e799fd3ed33f8b93db13be2a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfxse1CRBK7hj4Ov3rIwAAdHIIAGxoKdsqAaAg5nP/3QPpITrx\nBe/HJ4R2OTm7NGSCALh4Tsjr2dPG8ALld3XweKKBCCEk4jpOaqDNuQ8JM2o/5+DH\n7gvI5IEvun1LzKr7aCEYwrE5xgRFks/SBTAwfyL9BT/k8Vf2yGseW0XI6FoMrfKn\n0eNikW0ngPdK673g6YVismDS0eTh7GlRA3lPEqHhhlTMn643XJTD9s+Yz6xKRU/l\nifPuXXCqcO7Xp2Aq0nmaLTa7lA2tupyS3NkEVVn/FXnI+W3yBa16ULOXglNC5MdV\nkPMobs0UqLywwm+cJIrPOQ5etVQI+Qk6+oCTa7jDOP1tS0OcgiTX9tNDtw6GXlo=\n=4lCa\n-----END PGP SIGNATURE-----\n", "payload": "tree 3fc34123494ce7c195cd6aac55fb7546f5d18c6f\nparent 3d631b094bf6322ad77296f843275a06be5e743e\nparent 59874516fae2abd97539c2c50601302c6b61ee0f\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1606862773 +0100\ncommitter GitHub <noreply@github.com> 1606862773 +0100\n\nRollup merge of #79600 - nicokoch:kernel_copy_unixstream, r=m-ou-se\n\nstd::io: Use sendfile for UnixStream\n\n`UnixStream` was forgotten in #75272 .\n\nBenchmark yields the following results.\nBefore:\n`running 1 test\ntest sys::unix::kernel_copy::tests::bench_file_to_uds_copy        ... bench:      54,399 ns/iter (+/- 6,817) = 2409 MB/s`\n\nAfter:\n`running 1 test\ntest sys::unix::kernel_copy::tests::bench_file_to_uds_copy        ... bench:      18,627 ns/iter (+/- 6,007) = 7036 MB/s`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e26fc60b1a91e28e799fd3ed33f8b93db13be2a", "html_url": "https://github.com/rust-lang/rust/commit/9e26fc60b1a91e28e799fd3ed33f8b93db13be2a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e26fc60b1a91e28e799fd3ed33f8b93db13be2a/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d631b094bf6322ad77296f843275a06be5e743e", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d631b094bf6322ad77296f843275a06be5e743e", "html_url": "https://github.com/rust-lang/rust/commit/3d631b094bf6322ad77296f843275a06be5e743e"}, {"sha": "59874516fae2abd97539c2c50601302c6b61ee0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/59874516fae2abd97539c2c50601302c6b61ee0f", "html_url": "https://github.com/rust-lang/rust/commit/59874516fae2abd97539c2c50601302c6b61ee0f"}], "stats": {"total": 58, "additions": 58, "deletions": 0}, "files": [{"sha": "f08c828ecfff03419110275a0f0c3927608f0482", "filename": "library/std/src/sys/unix/kernel_copy.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/9e26fc60b1a91e28e799fd3ed33f8b93db13be2a/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fkernel_copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e26fc60b1a91e28e799fd3ed33f8b93db13be2a/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fkernel_copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fkernel_copy.rs?ref=9e26fc60b1a91e28e799fd3ed33f8b93db13be2a", "patch": "@@ -56,6 +56,7 @@ use crate::mem::ManuallyDrop;\n use crate::net::TcpStream;\n use crate::os::unix::fs::FileTypeExt;\n use crate::os::unix::io::{AsRawFd, FromRawFd, RawFd};\n+use crate::os::unix::net::UnixStream;\n use crate::process::{ChildStderr, ChildStdin, ChildStdout};\n use crate::ptr;\n use crate::sync::atomic::{AtomicBool, Ordering};\n@@ -320,6 +321,34 @@ impl CopyWrite for &TcpStream {\n     }\n }\n \n+impl CopyRead for UnixStream {\n+    fn properties(&self) -> CopyParams {\n+        // avoid the stat syscall since we can be fairly sure it's a socket\n+        CopyParams(FdMeta::Socket, Some(self.as_raw_fd()))\n+    }\n+}\n+\n+impl CopyRead for &UnixStream {\n+    fn properties(&self) -> CopyParams {\n+        // avoid the stat syscall since we can be fairly sure it's a socket\n+        CopyParams(FdMeta::Socket, Some(self.as_raw_fd()))\n+    }\n+}\n+\n+impl CopyWrite for UnixStream {\n+    fn properties(&self) -> CopyParams {\n+        // avoid the stat syscall since we can be fairly sure it's a socket\n+        CopyParams(FdMeta::Socket, Some(self.as_raw_fd()))\n+    }\n+}\n+\n+impl CopyWrite for &UnixStream {\n+    fn properties(&self) -> CopyParams {\n+        // avoid the stat syscall since we can be fairly sure it's a socket\n+        CopyParams(FdMeta::Socket, Some(self.as_raw_fd()))\n+    }\n+}\n+\n impl CopyWrite for ChildStdin {\n     fn properties(&self) -> CopyParams {\n         CopyParams(FdMeta::Pipe, Some(self.as_raw_fd()))"}, {"sha": "554ebd94022341dfd08d7f1bc56cc3d8dba17bcb", "filename": "library/std/src/sys/unix/kernel_copy/tests.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/9e26fc60b1a91e28e799fd3ed33f8b93db13be2a/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fkernel_copy%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e26fc60b1a91e28e799fd3ed33f8b93db13be2a/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fkernel_copy%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fkernel_copy%2Ftests.rs?ref=9e26fc60b1a91e28e799fd3ed33f8b93db13be2a", "patch": "@@ -118,6 +118,35 @@ fn bench_file_to_socket_copy(b: &mut test::Bencher) {\n     });\n }\n \n+#[bench]\n+fn bench_file_to_uds_copy(b: &mut test::Bencher) {\n+    const BYTES: usize = 128 * 1024;\n+    let src_path = temp_dir().join(\"uds-copy-bench-src\");\n+    let mut src = OpenOptions::new()\n+        .create(true)\n+        .truncate(true)\n+        .read(true)\n+        .write(true)\n+        .open(src_path)\n+        .unwrap();\n+    src.write(&vec![0u8; BYTES]).unwrap();\n+\n+    let (mut sink, mut sink_drainer) = crate::os::unix::net::UnixStream::pair().unwrap();\n+\n+    crate::thread::spawn(move || {\n+        let mut sink_buf = vec![0u8; 1024 * 1024];\n+        loop {\n+            sink_drainer.read(&mut sink_buf[..]).unwrap();\n+        }\n+    });\n+\n+    b.bytes = BYTES as u64;\n+    b.iter(|| {\n+        src.seek(SeekFrom::Start(0)).unwrap();\n+        assert_eq!(BYTES as u64, io::copy(&mut src, &mut sink).unwrap());\n+    });\n+}\n+\n #[cfg(any(target_os = \"linux\", target_os = \"android\"))]\n #[bench]\n fn bench_socket_pipe_socket_copy(b: &mut test::Bencher) {"}]}