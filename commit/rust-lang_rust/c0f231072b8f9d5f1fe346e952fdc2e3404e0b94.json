{"sha": "c0f231072b8f9d5f1fe346e952fdc2e3404e0b94", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwZjIzMTA3MmI4ZjlkNWYxZmUzNDZlOTUyZmRjMmUzNDA0ZTBiOTQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-26T22:21:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-26T22:21:23Z"}, "message": "auto merge of #15190 : pcwalton/rust/proc-upvars, r=alexcrichton\n\nSince procs do not have lifetime bounds, we must do this to maintain\r\nsafety.\r\n\r\nThis can break code that incorrectly captured references in procedure\r\ntypes. Change such code to not do this, perhaps with a trait object\r\ninstead.\r\n\r\nCloses #14036.\r\n\r\n[breaking-change]\r\n\r\nr? @alexcrichton", "tree": {"sha": "34fb20a79f98280a96ea273a193db9af816e5503", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34fb20a79f98280a96ea273a193db9af816e5503"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0f231072b8f9d5f1fe346e952fdc2e3404e0b94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0f231072b8f9d5f1fe346e952fdc2e3404e0b94", "html_url": "https://github.com/rust-lang/rust/commit/c0f231072b8f9d5f1fe346e952fdc2e3404e0b94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0f231072b8f9d5f1fe346e952fdc2e3404e0b94/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c33a14cc546ddacd5398cebf57aa5ac574cfea7", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c33a14cc546ddacd5398cebf57aa5ac574cfea7", "html_url": "https://github.com/rust-lang/rust/commit/4c33a14cc546ddacd5398cebf57aa5ac574cfea7"}, {"sha": "9a9908405d499e333baa20375bcaadfcca5459de", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a9908405d499e333baa20375bcaadfcca5459de", "html_url": "https://github.com/rust-lang/rust/commit/9a9908405d499e333baa20375bcaadfcca5459de"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "59a075f22b28bebaff33ef2e94ed3ff1ee5f856e", "filename": "src/libnative/io/process.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c0f231072b8f9d5f1fe346e952fdc2e3404e0b94/src%2Flibnative%2Fio%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0f231072b8f9d5f1fe346e952fdc2e3404e0b94/src%2Flibnative%2Fio%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Fprocess.rs?ref=c0f231072b8f9d5f1fe346e952fdc2e3404e0b94", "patch": "@@ -533,6 +533,10 @@ fn spawn_process_os(cfg: ProcessConfig,\n \n     let dirp = cfg.cwd.map(|c| c.with_ref(|p| p)).unwrap_or(ptr::null());\n \n+    let cfg = unsafe {\n+        mem::transmute::<ProcessConfig,ProcessConfig<'static>>(cfg)\n+    };\n+\n     with_envp(cfg.env, proc(envp) {\n         with_argv(cfg.program, cfg.args, proc(argv) unsafe {\n             let (mut input, mut output) = try!(pipe());"}, {"sha": "34754f045ffce8b00ecc1d677d3c2df6b6d536b5", "filename": "src/librustc/middle/kind.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c0f231072b8f9d5f1fe346e952fdc2e3404e0b94/src%2Flibrustc%2Fmiddle%2Fkind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0f231072b8f9d5f1fe346e952fdc2e3404e0b94/src%2Flibrustc%2Fmiddle%2Fkind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fkind.rs?ref=c0f231072b8f9d5f1fe346e952fdc2e3404e0b94", "patch": "@@ -198,8 +198,14 @@ fn with_appropriate_checker(cx: &Context,\n     let fty = ty::node_id_to_type(cx.tcx, id);\n     match ty::get(fty).sty {\n         ty::ty_closure(box ty::ClosureTy {\n-            store: ty::UniqTraitStore, bounds, ..\n-        }) => b(|cx, fv| check_for_uniq(cx, fv, bounds)),\n+            store: ty::UniqTraitStore,\n+            bounds: mut bounds, ..\n+        }) => {\n+            // Procs can't close over non-static references!\n+            bounds.add(ty::BoundStatic);\n+\n+            b(|cx, fv| check_for_uniq(cx, fv, bounds))\n+        }\n \n         ty::ty_closure(box ty::ClosureTy {\n             store: ty::RegionTraitStore(region, _), bounds, .."}, {"sha": "f11ddc0151f96077fd43c344c35b43ae673cddd2", "filename": "src/test/compile-fail/proc-static-bound.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/c0f231072b8f9d5f1fe346e952fdc2e3404e0b94/src%2Ftest%2Fcompile-fail%2Fproc-static-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0f231072b8f9d5f1fe346e952fdc2e3404e0b94/src%2Ftest%2Fcompile-fail%2Fproc-static-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fproc-static-bound.rs?ref=c0f231072b8f9d5f1fe346e952fdc2e3404e0b94", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let mut x = Some(1);\n+    let mut p: proc(&mut Option<int>) = proc(_) {};\n+    match x {\n+        Some(ref y) => {\n+            p = proc(z: &mut Option<int>) {\n+                *z = None;\n+                let _ = y;\n+                //~^ ERROR cannot capture variable of type `&int`, which does not fulfill `'static`\n+            };\n+        }\n+        None => {}\n+    }\n+    p(&mut x);\n+}\n+"}]}