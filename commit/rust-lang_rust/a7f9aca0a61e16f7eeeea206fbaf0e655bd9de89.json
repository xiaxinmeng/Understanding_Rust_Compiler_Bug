{"sha": "a7f9aca0a61e16f7eeeea206fbaf0e655bd9de89", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3ZjlhY2EwYTYxZTE2ZjdlZWVlYTIwNmZiYWYwZTY1NWJkOWRlODk=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-02-27T20:56:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-27T20:56:19Z"}, "message": "Rollup merge of #82534 - nikic:musl-crtend, r=nagisa\n\nLink crtbegin/crtend on musl to terminate .eh_frame\n\nFor some targets, rustc uses a \"CRT fallback\", where it links CRT\nobject files it ships instead of letting the host compiler link\nthem.\n\nOn musl, rustc currently links crt1, crti and crtn (provided by\nlibc), but does not link crtbegin and crtend (provided by libgcc).\nIn particular, crtend is responsible for terminating the .eh_frame\nsection. Lack of terminator may result in segfaults during\nunwinding, as reported in #47551 and encountered by the LLVM 12\nupdate in #81451.\n\nThis patch links crtbegin and crtend for musl as well, following\nthe table at the top of crt_objects.rs.\n\nr? ``@nagisa``", "tree": {"sha": "3e3723c14ca44c92afb45dff36bb27198c74c39e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e3723c14ca44c92afb45dff36bb27198c74c39e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7f9aca0a61e16f7eeeea206fbaf0e655bd9de89", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgOrH0CRBK7hj4Ov3rIwAAdHIIAGuinWCz4oakpZ5pY5/t60Io\n4M+nO0QuPaJc29CJIQnqGwRHy3/s4AA/DgPR7hxvA+UixcRXW/ht9J1daRe5yD5J\n4FLiKULGyNGy4SOTkdnNtOhS+0jD2rd/kT7ZO0cfhokScT4eRK/GVmgq0veT8fkB\nPBTV0cL1aA0/Bot8rZHqxZo39Egwk2nt9JeDuW1ij7OGXrrCeAN42GruDZlyEse8\niRCGkRA+FvHy7bX6Uf3KdwC6pw8QbcmxryBU9atQU2dpV/0UmbsgYtCaI21WBVPB\nVzkwA9w9G4tKU71ZisjBGnYHYDCWiRSk98L1wOEb5egcAYAAUJl9zWoYBdNFaOU=\n=HceO\n-----END PGP SIGNATURE-----\n", "payload": "tree 3e3723c14ca44c92afb45dff36bb27198c74c39e\nparent 13ea3fab5fb4492b61b7b9d7e3ec55bb5a9d7149\nparent c7091f5a07fa665344d0ebafae5480f54337ef88\nauthor Dylan DPC <dylan.dpc@gmail.com> 1614459379 +0100\ncommitter GitHub <noreply@github.com> 1614459379 +0100\n\nRollup merge of #82534 - nikic:musl-crtend, r=nagisa\n\nLink crtbegin/crtend on musl to terminate .eh_frame\n\nFor some targets, rustc uses a \"CRT fallback\", where it links CRT\nobject files it ships instead of letting the host compiler link\nthem.\n\nOn musl, rustc currently links crt1, crti and crtn (provided by\nlibc), but does not link crtbegin and crtend (provided by libgcc).\nIn particular, crtend is responsible for terminating the .eh_frame\nsection. Lack of terminator may result in segfaults during\nunwinding, as reported in #47551 and encountered by the LLVM 12\nupdate in #81451.\n\nThis patch links crtbegin and crtend for musl as well, following\nthe table at the top of crt_objects.rs.\n\nr? ``@nagisa``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7f9aca0a61e16f7eeeea206fbaf0e655bd9de89", "html_url": "https://github.com/rust-lang/rust/commit/a7f9aca0a61e16f7eeeea206fbaf0e655bd9de89", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7f9aca0a61e16f7eeeea206fbaf0e655bd9de89/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13ea3fab5fb4492b61b7b9d7e3ec55bb5a9d7149", "url": "https://api.github.com/repos/rust-lang/rust/commits/13ea3fab5fb4492b61b7b9d7e3ec55bb5a9d7149", "html_url": "https://github.com/rust-lang/rust/commit/13ea3fab5fb4492b61b7b9d7e3ec55bb5a9d7149"}, {"sha": "c7091f5a07fa665344d0ebafae5480f54337ef88", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7091f5a07fa665344d0ebafae5480f54337ef88", "html_url": "https://github.com/rust-lang/rust/commit/c7091f5a07fa665344d0ebafae5480f54337ef88"}], "stats": {"total": 27, "additions": 20, "deletions": 7}, "files": [{"sha": "51a48147e6b629a3631e1172d5f01a453b7571ce", "filename": "compiler/rustc_target/src/spec/crt_objects.rs", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a7f9aca0a61e16f7eeeea206fbaf0e655bd9de89/compiler%2Frustc_target%2Fsrc%2Fspec%2Fcrt_objects.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7f9aca0a61e16f7eeeea206fbaf0e655bd9de89/compiler%2Frustc_target%2Fsrc%2Fspec%2Fcrt_objects.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fcrt_objects.rs?ref=a7f9aca0a61e16f7eeeea206fbaf0e655bd9de89", "patch": "@@ -64,17 +64,24 @@ pub(super) fn all(obj: &str) -> CrtObjects {\n \n pub(super) fn pre_musl_fallback() -> CrtObjects {\n     new(&[\n-        (LinkOutputKind::DynamicNoPicExe, &[\"crt1.o\", \"crti.o\"]),\n-        (LinkOutputKind::DynamicPicExe, &[\"Scrt1.o\", \"crti.o\"]),\n-        (LinkOutputKind::StaticNoPicExe, &[\"crt1.o\", \"crti.o\"]),\n-        (LinkOutputKind::StaticPicExe, &[\"rcrt1.o\", \"crti.o\"]),\n-        (LinkOutputKind::DynamicDylib, &[\"crti.o\"]),\n-        (LinkOutputKind::StaticDylib, &[\"crti.o\"]),\n+        (LinkOutputKind::DynamicNoPicExe, &[\"crt1.o\", \"crti.o\", \"crtbegin.o\"]),\n+        (LinkOutputKind::DynamicPicExe, &[\"Scrt1.o\", \"crti.o\", \"crtbeginS.o\"]),\n+        (LinkOutputKind::StaticNoPicExe, &[\"crt1.o\", \"crti.o\", \"crtbegin.o\"]),\n+        (LinkOutputKind::StaticPicExe, &[\"rcrt1.o\", \"crti.o\", \"crtbeginS.o\"]),\n+        (LinkOutputKind::DynamicDylib, &[\"crti.o\", \"crtbeginS.o\"]),\n+        (LinkOutputKind::StaticDylib, &[\"crti.o\", \"crtbeginS.o\"]),\n     ])\n }\n \n pub(super) fn post_musl_fallback() -> CrtObjects {\n-    all(\"crtn.o\")\n+    new(&[\n+        (LinkOutputKind::DynamicNoPicExe, &[\"crtend.o\", \"crtn.o\"]),\n+        (LinkOutputKind::DynamicPicExe, &[\"crtendS.o\", \"crtn.o\"]),\n+        (LinkOutputKind::StaticNoPicExe, &[\"crtend.o\", \"crtn.o\"]),\n+        (LinkOutputKind::StaticPicExe, &[\"crtendS.o\", \"crtn.o\"]),\n+        (LinkOutputKind::DynamicDylib, &[\"crtendS.o\", \"crtn.o\"]),\n+        (LinkOutputKind::StaticDylib, &[\"crtendS.o\", \"crtn.o\"]),\n+    ])\n }\n \n pub(super) fn pre_mingw_fallback() -> CrtObjects {"}, {"sha": "859e38dc34647d3ab520801351735b2723fbbf69", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a7f9aca0a61e16f7eeeea206fbaf0e655bd9de89/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7f9aca0a61e16f7eeeea206fbaf0e655bd9de89/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=a7f9aca0a61e16f7eeeea206fbaf0e655bd9de89", "patch": "@@ -189,6 +189,12 @@ fn copy_self_contained_objects(\n                 DependencyType::TargetSelfContained,\n             );\n         }\n+        for &obj in &[\"crtbegin.o\", \"crtbeginS.o\", \"crtend.o\", \"crtendS.o\"] {\n+            let src = compiler_file(builder, builder.cc(target), target, obj);\n+            let target = libdir_self_contained.join(obj);\n+            builder.copy(&src, &target);\n+            target_deps.push((target, DependencyType::TargetSelfContained));\n+        }\n     } else if target.ends_with(\"-wasi\") {\n         let srcdir = builder.wasi_root(target).unwrap().join(\"lib/wasm32-wasi\");\n         for &obj in &[\"crt1.o\", \"crt1-reactor.o\"] {"}]}