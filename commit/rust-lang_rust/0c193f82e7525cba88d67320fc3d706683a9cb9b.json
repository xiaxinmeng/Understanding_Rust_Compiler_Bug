{"sha": "0c193f82e7525cba88d67320fc3d706683a9cb9b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjMTkzZjgyZTc1MjVjYmE4OGQ2NzMyMGZjM2Q3MDY2ODNhOWNiOWI=", "commit": {"author": {"name": "Smitty", "email": "me@smitop.com", "date": "2021-04-20T21:31:18Z"}, "committer": {"name": "Smitty", "email": "me@smitop.com", "date": "2021-04-20T21:31:18Z"}, "message": "Write Rustdoc titles like \"x in crate::mod - Rust\"\n\nThis makes Rustdoc titles for items read like\n\"x in cratename::blah::foo - Rust\". Title for modules and other\nnon-items are unchanged, and still read like\n\"doccratenameconst::blah::foo - Rust\". This makes managing several open\nRustdoc tabs easier.\n\nCloses #84371.", "tree": {"sha": "89a4f5fe66226df4f17de99ef6e3eb69e4f99f34", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89a4f5fe66226df4f17de99ef6e3eb69e4f99f34"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c193f82e7525cba88d67320fc3d706683a9cb9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c193f82e7525cba88d67320fc3d706683a9cb9b", "html_url": "https://github.com/rust-lang/rust/commit/0c193f82e7525cba88d67320fc3d706683a9cb9b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c193f82e7525cba88d67320fc3d706683a9cb9b/comments", "author": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6df26f897cffb2d86880544bb451c6b5f8509b2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6df26f897cffb2d86880544bb451c6b5f8509b2d", "html_url": "https://github.com/rust-lang/rust/commit/6df26f897cffb2d86880544bb451c6b5f8509b2d"}], "stats": {"total": 65, "additions": 56, "deletions": 9}, "files": [{"sha": "3fcf972a5b887d73f38192c472fce25a94703170", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0c193f82e7525cba88d67320fc3d706683a9cb9b/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c193f82e7525cba88d67320fc3d706683a9cb9b/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=0c193f82e7525cba88d67320fc3d706683a9cb9b", "patch": "@@ -168,18 +168,17 @@ impl<'tcx> Context<'tcx> {\n     }\n \n     fn render_item(&self, it: &clean::Item, pushname: bool) -> String {\n-        let mut title = if it.is_primitive() || it.is_keyword() {\n-            // No need to include the namespace for primitive types and keywords\n-            String::new()\n-        } else {\n-            self.current.join(\"::\")\n-        };\n+        let mut title = String::new();\n         if pushname {\n-            if !title.is_empty() {\n-                title.push_str(\"::\");\n-            }\n             title.push_str(&it.name.unwrap().as_str());\n         }\n+        if !it.is_primitive() && !it.is_keyword() {\n+            if pushname {\n+                title.push_str(\" in \");\n+            }\n+            // No need to include the namespace for primitive types and keywords\n+            title.push_str(&self.current.join(\"::\"));\n+        };\n         title.push_str(\" - Rust\");\n         let tyname = it.type_();\n         let desc = it.doc_value().as_ref().map(|doc| plain_text_summary(&doc));"}, {"sha": "6f96f98e7074fcd022c184bbc0462d51a39f46b8", "filename": "src/test/rustdoc/crate-title.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0c193f82e7525cba88d67320fc3d706683a9cb9b/src%2Ftest%2Frustdoc%2Fcrate-title.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c193f82e7525cba88d67320fc3d706683a9cb9b/src%2Ftest%2Frustdoc%2Fcrate-title.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fcrate-title.rs?ref=0c193f82e7525cba88d67320fc3d706683a9cb9b", "patch": "@@ -0,0 +1,3 @@\n+#![crate_name = \"foo\"]\n+\n+// @has foo/index.html '//head/title' 'foo - Rust'"}, {"sha": "d0fbdf95ddce16dda1a3b998bb5aecb72e6d2f19", "filename": "src/test/rustdoc/item-title.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/0c193f82e7525cba88d67320fc3d706683a9cb9b/src%2Ftest%2Frustdoc%2Fitem-title.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c193f82e7525cba88d67320fc3d706683a9cb9b/src%2Ftest%2Frustdoc%2Fitem-title.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fitem-title.rs?ref=0c193f82e7525cba88d67320fc3d706683a9cb9b", "patch": "@@ -0,0 +1,33 @@\n+#![crate_name = \"foo\"]\n+#![feature(doc_keyword)]\n+\n+// @has foo/fn.widget_count.html '//head/title' 'widget_count in foo - Rust'\n+/// blah\n+pub fn widget_count() {}\n+\n+// @has foo/struct.Widget.html '//head/title' 'Widget in foo - Rust'\n+pub struct Widget;\n+\n+// @has foo/constant.ANSWER.html '//head/title' 'ANSWER in foo - Rust'\n+pub const ANSWER: u8 = 42;\n+\n+pub mod blah {\n+    // @has foo/blah/struct.Widget.html '//head/title' 'Widget in foo::blah - Rust'\n+    pub struct Widget;\n+\n+    // @has foo/blah/trait.Awesome.html '//head/title' 'Awesome in foo::blah - Rust'\n+    pub trait Awesome {}\n+\n+    // @has foo/blah/fn.make_widget.html '//head/title' 'make_widget in foo::blah - Rust'\n+    pub fn make_widget() {}\n+\n+    // @has foo/macro.cool_macro.html '//head/title' 'cool_macro in foo - Rust'\n+    #[macro_export]\n+    macro_rules! cool_macro {\n+        ($t:tt) => { $t }\n+    }\n+}\n+\n+// @has foo/keyword.continue.html '//head/title' 'continue - Rust'\n+#[doc(keyword = \"continue\")]\n+mod continue_keyword {}"}, {"sha": "6b7f67d17ab3aae3efe15ca4d9fa4f6616d41cd2", "filename": "src/test/rustdoc/mod-title.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0c193f82e7525cba88d67320fc3d706683a9cb9b/src%2Ftest%2Frustdoc%2Fmod-title.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c193f82e7525cba88d67320fc3d706683a9cb9b/src%2Ftest%2Frustdoc%2Fmod-title.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fmod-title.rs?ref=0c193f82e7525cba88d67320fc3d706683a9cb9b", "patch": "@@ -0,0 +1,12 @@\n+#![crate_name = \"foo\"]\n+\n+// @has foo/bar/index.html '//head/title' 'foo::bar - Rust'\n+/// blah\n+pub mod bar {\n+    pub fn a() {}\n+}\n+\n+// @has foo/baz/index.html '//head/title' 'foo::baz - Rust'\n+pub mod baz {\n+    pub fn a() {}\n+}"}]}