{"sha": "94f0e9d956ed3169848ee334df23ffa724001d80", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0ZjBlOWQ5NTZlZDMxNjk4NDhlZTMzNGRmMjNmZmE3MjQwMDFkODA=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-07-08T19:03:48Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-07-08T19:05:32Z"}, "message": "Add just enough logic to the driver so that we can link std statically.", "tree": {"sha": "782602cb20b8ba7b42da6c132cbcb1db25422242", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/782602cb20b8ba7b42da6c132cbcb1db25422242"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94f0e9d956ed3169848ee334df23ffa724001d80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94f0e9d956ed3169848ee334df23ffa724001d80", "html_url": "https://github.com/rust-lang/rust/commit/94f0e9d956ed3169848ee334df23ffa724001d80", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94f0e9d956ed3169848ee334df23ffa724001d80/comments", "author": null, "committer": null, "parents": [{"sha": "0864a22aceab14092cef9b8a99dedcfb16fe1548", "url": "https://api.github.com/repos/rust-lang/rust/commits/0864a22aceab14092cef9b8a99dedcfb16fe1548", "html_url": "https://github.com/rust-lang/rust/commit/0864a22aceab14092cef9b8a99dedcfb16fe1548"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "823560b00821e9d50749d60e732fd6390d4b58d8", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/94f0e9d956ed3169848ee334df23ffa724001d80/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94f0e9d956ed3169848ee334df23ffa724001d80/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=94f0e9d956ed3169848ee334df23ffa724001d80", "patch": "@@ -436,6 +436,10 @@ fn main(vec[str] args) {\n         metadata::creader::list_file_metadata(ifile, std::io::stdout());\n         ret;\n     }\n+\n+    auto stop_after_codegen = sopts.output_type != link::output_type_exe ||\n+        (sopts.static && sopts.library);\n+\n     alt (output_file) {\n         case (none) {\n             let vec[str] parts = str::split(ifile, '.' as u8);\n@@ -460,7 +464,7 @@ fn main(vec[str] args) {\n \n             saved_out_filename = ofile;\n             auto temp_filename;\n-            if (sopts.output_type == link::output_type_exe && !sopts.static) {\n+            if (!stop_after_codegen) {\n                 temp_filename = ofile + \".o\";\n             } else {\n                 temp_filename = ofile;\n@@ -473,7 +477,7 @@ fn main(vec[str] args) {\n     // gcc to link the object file with some libs\n     //\n     // TODO: Factor this out of main.\n-    if (sopts.output_type != link::output_type_exe || sopts.static) {\n+    if (stop_after_codegen) {\n         ret;\n     }\n \n@@ -521,6 +525,10 @@ fn main(vec[str] args) {\n \n     auto cstore = sess.get_cstore();\n     for (str cratepath in cstore::get_used_crate_files(cstore)) {\n+        if (str::ends_with(cratepath, \".rlib\")) {\n+            gcc_args += [cratepath];\n+            cont;\n+        }\n         auto dir = fs::dirname(cratepath);\n         if (dir != \"\") {\n             gcc_args += [\"-L\" + dir];"}, {"sha": "498b44fbfc3e32477f5b4fadd124c9bce575d845", "filename": "src/comp/metadata/creader.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/94f0e9d956ed3169848ee334df23ffa724001d80/src%2Fcomp%2Fmetadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94f0e9d956ed3169848ee334df23ffa724001d80/src%2Fcomp%2Fmetadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fcreader.rs?ref=94f0e9d956ed3169848ee334df23ffa724001d80", "patch": "@@ -124,6 +124,9 @@ fn metadata_matches(&vec[u8] crate_data,\n \n fn default_native_lib_naming(session::session sess) ->\n    rec(str prefix, str suffix) {\n+    if (sess.get_opts().static) {\n+        ret rec(prefix=\"lib\", suffix=\".rlib\");\n+    }\n     alt (sess.get_targ_cfg().os) {\n         case (session::os_win32) { ret rec(prefix=\"\", suffix=\".dll\"); }\n         case (session::os_macos) { ret rec(prefix=\"lib\", suffix=\".dylib\"); }"}, {"sha": "bcdb31fb39d0dd4288e30fd7b21636ac4f895768", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/94f0e9d956ed3169848ee334df23ffa724001d80/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94f0e9d956ed3169848ee334df23ffa724001d80/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=94f0e9d956ed3169848ee334df23ffa724001d80", "patch": "@@ -9263,6 +9263,9 @@ fn create_module_map(&@crate_ctxt ccx) -> ValueRef {\n     auto maptype = T_array(elttype, ccx.module_data.size() + 1u);\n     auto map =\n         llvm::LLVMAddGlobal(ccx.llmod, maptype, str::buf(\"_rust_mod_map\"));\n+    llvm::LLVMSetLinkage(map,\n+                         lib::llvm::LLVMInternalLinkage as\n+                         llvm::Linkage);\n     let ValueRef[] elts = ~[];\n     for each (@tup(str, ValueRef) item in ccx.module_data.items()) {\n         auto elt = C_struct(~[p2i(C_cstr(ccx, item._0)), p2i(item._1)]);"}]}