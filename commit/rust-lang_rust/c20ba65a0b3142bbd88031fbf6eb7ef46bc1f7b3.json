{"sha": "c20ba65a0b3142bbd88031fbf6eb7ef46bc1f7b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyMGJhNjVhMGIzMTQyYmJkODgwMzFmYmY2ZWI3ZWY0NmJjMWY3YjM=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-12-22T14:32:44Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-12-30T13:30:59Z"}, "message": "Guarantee `rustc_dump_user_substs` error order.\n\nThis commit buffers the errors output by the `rustc_dump_user_substs`\nattribute so that they can be output in order of span and would\ntherefore be consistent.", "tree": {"sha": "e81d2c7e6713b8178a1e9a7ba55fc1e408a15399", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e81d2c7e6713b8178a1e9a7ba55fc1e408a15399"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c20ba65a0b3142bbd88031fbf6eb7ef46bc1f7b3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAlwoyJMACgkQAXYLT59T\n8VQEEQ/8CBDSQZm3six734nZ1dn2nmEzwX5Jx4/NCAs9oj/bJL8yEzXF3J1YDwG3\nO/X6dNzFfsSA3q8EUTRbvYzZx1AZ/9Ztv+GEMDSoVUoDCyJ9MCHHGoPBTWTDQ42b\nai3h7IOABdWoimT1oWw5/6tQEUK3bbFklr58eJ3bapB2nxfWhrYhnv7M2fE3DuH2\namP86aAtsWV13JhlN3wV+OioI/OiCHVXsCwR8taqpXLP7UkGtPtC+QHVLnwh26j2\noKMDFPjYgFsPE8v0VOKgxxe63pZkr8AkYtU3lHMUBNMqshVWJTkYGNCkgu0mUnG+\nUYyRXrT8m67sVGV8QRmmNmdGm8KY4BLHJZGEYVUX9FwUsMCDoNZDtdufIMAw1muK\nNfR6HmWU69ZINh/KkIpjKm1JXfjx+ohMozsPYz++VaCCDuSlyaVvqgM+W6ugaqKK\nva5fKT1BLPTH5T1IyWIKAYM5f3ddWvTxLtqy+A2tDti1QQKqWXWesq5oqRS5+P2V\nn8By4UlAIPHWzOBN5bbM+3NyFGuqQ0pyqAr38H0fUwwju6y3ZrbFTzCD3OTAZHkl\nN58Dn5kibRdHuf/nhOQbMiS21m+u84K9Ts1opACV0IOOXfmmgU2iuqwYALgSRUwp\n7Xo4ZdeE7SXIh2Hmpj6sjadOJ0p3rKRgYA/WL+szp/tWH7P2rxU=\n=rHoJ\n-----END PGP SIGNATURE-----", "payload": "tree e81d2c7e6713b8178a1e9a7ba55fc1e408a15399\nparent 0bfe184b1ad14db4b002c3a272adf44e1839822f\nauthor David Wood <david@davidtw.co> 1545489164 +0100\ncommitter David Wood <david@davidtw.co> 1546176659 +0100\n\nGuarantee `rustc_dump_user_substs` error order.\n\nThis commit buffers the errors output by the `rustc_dump_user_substs`\nattribute so that they can be output in order of span and would\ntherefore be consistent.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c20ba65a0b3142bbd88031fbf6eb7ef46bc1f7b3", "html_url": "https://github.com/rust-lang/rust/commit/c20ba65a0b3142bbd88031fbf6eb7ef46bc1f7b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c20ba65a0b3142bbd88031fbf6eb7ef46bc1f7b3/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bfe184b1ad14db4b002c3a272adf44e1839822f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bfe184b1ad14db4b002c3a272adf44e1839822f", "html_url": "https://github.com/rust-lang/rust/commit/0bfe184b1ad14db4b002c3a272adf44e1839822f"}], "stats": {"total": 33, "additions": 24, "deletions": 9}, "files": [{"sha": "38de936a027ff6e2dd4e28ddb2d70812ea138744", "filename": "src/librustc_typeck/check/writeback.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c20ba65a0b3142bbd88031fbf6eb7ef46bc1f7b3/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c20ba65a0b3142bbd88031fbf6eb7ef46bc1f7b3/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs?ref=c20ba65a0b3142bbd88031fbf6eb7ef46bc1f7b3", "patch": "@@ -3,6 +3,7 @@\n // substitutions.\n \n use check::FnCtxt;\n+use errors::DiagnosticBuilder;\n use rustc::hir;\n use rustc::hir::def_id::{DefId, DefIndex};\n use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n@@ -357,6 +358,7 @@ impl<'cx, 'gcx, 'tcx> WritebackCx<'cx, 'gcx, 'tcx> {\n         debug_assert_eq!(fcx_tables.local_id_root, self.tables.local_id_root);\n         let common_local_id_root = fcx_tables.local_id_root.unwrap();\n \n+        let mut errors_buffer = Vec::new();\n         for (&local_id, c_ty) in fcx_tables.user_provided_types().iter() {\n             let hir_id = hir::HirId {\n                 owner: common_local_id_root.index,\n@@ -382,10 +384,23 @@ impl<'cx, 'gcx, 'tcx> WritebackCx<'cx, 'gcx, 'tcx> {\n                     // This is a unit-testing mechanism.\n                     let node_id = self.tcx().hir().hir_to_node_id(hir_id);\n                     let span = self.tcx().hir().span(node_id);\n-                    self.tcx().sess.span_err(span, &format!(\"user substs: {:?}\", user_substs));\n+                    // We need to buffer the errors in order to guarantee a consistent\n+                    // order when emitting them.\n+                    let err = self.tcx().sess.struct_span_err(\n+                        span,\n+                        &format!(\"user substs: {:?}\", user_substs)\n+                    );\n+                    err.buffer(&mut errors_buffer);\n                 }\n             }\n         }\n+\n+        if !errors_buffer.is_empty() {\n+            errors_buffer.sort_by_key(|diag| diag.span.primary_span());\n+            for diag in errors_buffer.drain(..) {\n+                DiagnosticBuilder::new_diagnostic(self.tcx().sess.diagnostic(), diag).emit();\n+            }\n+        }\n     }\n \n     fn visit_user_provided_sigs(&mut self) {"}, {"sha": "a1a4e43e8a3e9484fc08fab35368d9b2ad313b87", "filename": "src/test/ui/nll/user-annotations/dump-fn-method.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c20ba65a0b3142bbd88031fbf6eb7ef46bc1f7b3/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fdump-fn-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c20ba65a0b3142bbd88031fbf6eb7ef46bc1f7b3/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fdump-fn-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fdump-fn-method.stderr?ref=c20ba65a0b3142bbd88031fbf6eb7ef46bc1f7b3", "patch": "@@ -1,8 +1,8 @@\n-error: user substs: UserSubsts { substs: [^0, ^1, u32], user_self_ty: None }\n-  --> $DIR/dump-fn-method.rs:44:5\n+error: user substs: UserSubsts { substs: [u32], user_self_ty: None }\n+  --> $DIR/dump-fn-method.rs:26:13\n    |\n-LL |     y.method::<u32>(44, 66); //~ ERROR [^0, ^1, u32]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     let x = foo::<u32>; //~ ERROR [u32]\n+   |             ^^^^^^^^^^\n \n error: user substs: UserSubsts { substs: [^0, u32, ^1], user_self_ty: None }\n   --> $DIR/dump-fn-method.rs:32:13\n@@ -16,11 +16,11 @@ error: user substs: UserSubsts { substs: [u8, u16, u32], user_self_ty: None }\n LL |     let x = <u8 as Bazoom<u16>>::method::<u32>; //~ ERROR [u8, u16, u32]\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: user substs: UserSubsts { substs: [u32], user_self_ty: None }\n-  --> $DIR/dump-fn-method.rs:26:13\n+error: user substs: UserSubsts { substs: [^0, ^1, u32], user_self_ty: None }\n+  --> $DIR/dump-fn-method.rs:44:5\n    |\n-LL |     let x = foo::<u32>; //~ ERROR [u32]\n-   |             ^^^^^^^^^^\n+LL |     y.method::<u32>(44, 66); //~ ERROR [^0, ^1, u32]\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 4 previous errors\n "}]}