{"sha": "d878ad0559ed1be0d0a0e3cdc2a62a9480e42cb8", "node_id": "C_kwDOAAsO6NoAKGQ4NzhhZDA1NTllZDFiZTBkMGEwZTNjZGMyYTYyYTk0ODBlNDJjYjg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-15T10:28:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-15T10:28:24Z"}, "message": "Rollup merge of #92863 - camelid:read_to_string-rm-mut, r=m-ou-se\n\nRemove `&mut` from `io::read_to_string` signature\n\n``@m-ou-se`` [realized][1] that because `Read` is implemented for `&mut impl\nRead`, there's no need to take `&mut` in `io::read_to_string`.\n\nRemoving the `&mut` from the signature allows users to remove the `&mut`\nfrom their calls (and thus pass an owned reader) if they don't use the\nreader later.\n\nr? `@m-ou-se`\n\n[1]: https://github.com/rust-lang/rust/issues/80218#issuecomment-874322129", "tree": {"sha": "708afb72e4210b26c05b2807662b03c2ced948f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/708afb72e4210b26c05b2807662b03c2ced948f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d878ad0559ed1be0d0a0e3cdc2a62a9480e42cb8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh4qHJCRBK7hj4Ov3rIwAAvnQIAHc7m3K06pAGfudLK4FYjHub\nXRGsc2NhfzPnWwpO7CTpc3VEuU278DWfHjySBSZqyGQsRi7irP7i+pw2213fwQfU\n6vuiBqe8vcji3ODZHREdV+HFFtB9sDjryIupva9gMdy9kMFkuHBZR1X7xHiPAt9f\nIC+5BwY1AJMqtpLxbDI+W+CeptFl3YDmOqddf6j7eIp5701MwFFZ44Atoxm0LCnO\n6H35glKdx17eNkwY0Pvfi8uiprFRiHeltx8wzFduhWCvklcVt/Q97pyjeGeItvDQ\njG6v1eqOGXkhcrqCQ+ATCltQZvUDDngSV48VARYZzNJETX/Vxy9xoDylOZTZQWc=\n=92ed\n-----END PGP SIGNATURE-----\n", "payload": "tree 708afb72e4210b26c05b2807662b03c2ced948f6\nparent 1b241bb70365b06ccb6e0bc98fceb5cf76761d7b\nparent aa0ce4a20ee54eba911f2225644db768f6cad7ec\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1642242504 +0100\ncommitter GitHub <noreply@github.com> 1642242504 +0100\n\nRollup merge of #92863 - camelid:read_to_string-rm-mut, r=m-ou-se\n\nRemove `&mut` from `io::read_to_string` signature\n\n``@m-ou-se`` [realized][1] that because `Read` is implemented for `&mut impl\nRead`, there's no need to take `&mut` in `io::read_to_string`.\n\nRemoving the `&mut` from the signature allows users to remove the `&mut`\nfrom their calls (and thus pass an owned reader) if they don't use the\nreader later.\n\nr? `@m-ou-se`\n\n[1]: https://github.com/rust-lang/rust/issues/80218#issuecomment-874322129\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d878ad0559ed1be0d0a0e3cdc2a62a9480e42cb8", "html_url": "https://github.com/rust-lang/rust/commit/d878ad0559ed1be0d0a0e3cdc2a62a9480e42cb8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d878ad0559ed1be0d0a0e3cdc2a62a9480e42cb8/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b241bb70365b06ccb6e0bc98fceb5cf76761d7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b241bb70365b06ccb6e0bc98fceb5cf76761d7b", "html_url": "https://github.com/rust-lang/rust/commit/1b241bb70365b06ccb6e0bc98fceb5cf76761d7b"}, {"sha": "aa0ce4a20ee54eba911f2225644db768f6cad7ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa0ce4a20ee54eba911f2225644db768f6cad7ec", "html_url": "https://github.com/rust-lang/rust/commit/aa0ce4a20ee54eba911f2225644db768f6cad7ec"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "824938ce38e68b430e5f45cd8ca53b62c2e35f27", "filename": "library/std/src/io/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d878ad0559ed1be0d0a0e3cdc2a62a9480e42cb8/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d878ad0559ed1be0d0a0e3cdc2a62a9480e42cb8/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fmod.rs?ref=d878ad0559ed1be0d0a0e3cdc2a62a9480e42cb8", "patch": "@@ -1031,14 +1031,14 @@ pub trait Read {\n ///\n /// # use std::io;\n /// fn main() -> io::Result<()> {\n-///     let stdin = io::read_to_string(&mut io::stdin())?;\n+///     let stdin = io::read_to_string(io::stdin())?;\n ///     println!(\"Stdin was:\");\n ///     println!(\"{}\", stdin);\n ///     Ok(())\n /// }\n /// ```\n #[unstable(feature = \"io_read_to_string\", issue = \"80218\")]\n-pub fn read_to_string<R: Read>(reader: &mut R) -> Result<String> {\n+pub fn read_to_string<R: Read>(mut reader: R) -> Result<String> {\n     let mut buf = String::new();\n     reader.read_to_string(&mut buf)?;\n     Ok(buf)"}]}