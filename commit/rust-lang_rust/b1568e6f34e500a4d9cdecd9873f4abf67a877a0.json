{"sha": "b1568e6f34e500a4d9cdecd9873f4abf67a877a0", "node_id": "C_kwDOAAsO6NoAKGIxNTY4ZTZmMzRlNTAwYTRkOWNkZWNkOTg3M2Y0YWJmNjdhODc3YTA", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-04T13:05:23Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-04T13:05:23Z"}, "message": "clarify comment", "tree": {"sha": "06abb945c041942f7fa9372ae2e49e7e9617e654", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06abb945c041942f7fa9372ae2e49e7e9617e654"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1568e6f34e500a4d9cdecd9873f4abf67a877a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1568e6f34e500a4d9cdecd9873f4abf67a877a0", "html_url": "https://github.com/rust-lang/rust/commit/b1568e6f34e500a4d9cdecd9873f4abf67a877a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1568e6f34e500a4d9cdecd9873f4abf67a877a0/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8955686e055c27447c2616555f3fce4ea7c6a61d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8955686e055c27447c2616555f3fce4ea7c6a61d", "html_url": "https://github.com/rust-lang/rust/commit/8955686e055c27447c2616555f3fce4ea7c6a61d"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "d48f6521ba2aaaf75d047951318a3c9dc803be11", "filename": "compiler/rustc_const_eval/src/interpret/operand.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b1568e6f34e500a4d9cdecd9873f4abf67a877a0/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1568e6f34e500a4d9cdecd9873f4abf67a877a0/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperand.rs?ref=b1568e6f34e500a4d9cdecd9873f4abf67a877a0", "patch": "@@ -182,7 +182,8 @@ pub struct OpTy<'tcx, Tag: Provenance = AllocId> {\n     /// So we represent this here with a separate field that \"overwrites\" `layout.align`.\n     /// This means `layout.align` should never be used for an `OpTy`!\n     /// `None` means \"alignment does not matter since this is a by-value operand\"\n-    /// (`Operand::Immediate`).\n+    /// (`Operand::Immediate`); this field is only relevant for `Operand::Indirect`.\n+    /// Also CTFE ignores alignment anyway, so this is for Miri only.\n     pub align: Option<Align>,\n }\n "}]}