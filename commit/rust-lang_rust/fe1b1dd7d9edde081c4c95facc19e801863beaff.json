{"sha": "fe1b1dd7d9edde081c4c95facc19e801863beaff", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlMWIxZGQ3ZDllZGRlMDgxYzRjOTVmYWNjMTllODAxODYzYmVhZmY=", "commit": {"author": {"name": "Phil Ellison", "email": "phil.j.ellison@gmail.com", "date": "2019-07-28T18:52:30Z"}, "committer": {"name": "Phil Ellison", "email": "phil.j.ellison@gmail.com", "date": "2019-07-28T18:52:30Z"}, "message": "More direct failing test", "tree": {"sha": "ba2371353dd8a9b20910b67a799682842ccfd983", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba2371353dd8a9b20910b67a799682842ccfd983"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe1b1dd7d9edde081c4c95facc19e801863beaff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe1b1dd7d9edde081c4c95facc19e801863beaff", "html_url": "https://github.com/rust-lang/rust/commit/fe1b1dd7d9edde081c4c95facc19e801863beaff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe1b1dd7d9edde081c4c95facc19e801863beaff/comments", "author": {"login": "theotherphil", "id": 1974256, "node_id": "MDQ6VXNlcjE5NzQyNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1974256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theotherphil", "html_url": "https://github.com/theotherphil", "followers_url": "https://api.github.com/users/theotherphil/followers", "following_url": "https://api.github.com/users/theotherphil/following{/other_user}", "gists_url": "https://api.github.com/users/theotherphil/gists{/gist_id}", "starred_url": "https://api.github.com/users/theotherphil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theotherphil/subscriptions", "organizations_url": "https://api.github.com/users/theotherphil/orgs", "repos_url": "https://api.github.com/users/theotherphil/repos", "events_url": "https://api.github.com/users/theotherphil/events{/privacy}", "received_events_url": "https://api.github.com/users/theotherphil/received_events", "type": "User", "site_admin": false}, "committer": {"login": "theotherphil", "id": 1974256, "node_id": "MDQ6VXNlcjE5NzQyNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1974256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theotherphil", "html_url": "https://github.com/theotherphil", "followers_url": "https://api.github.com/users/theotherphil/followers", "following_url": "https://api.github.com/users/theotherphil/following{/other_user}", "gists_url": "https://api.github.com/users/theotherphil/gists{/gist_id}", "starred_url": "https://api.github.com/users/theotherphil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theotherphil/subscriptions", "organizations_url": "https://api.github.com/users/theotherphil/orgs", "repos_url": "https://api.github.com/users/theotherphil/repos", "events_url": "https://api.github.com/users/theotherphil/events{/privacy}", "received_events_url": "https://api.github.com/users/theotherphil/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e1a14a098b77b1be8888605f852eada029c816a", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e1a14a098b77b1be8888605f852eada029c816a", "html_url": "https://github.com/rust-lang/rust/commit/8e1a14a098b77b1be8888605f852eada029c816a"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "f75e321c3e21e559027dfe64aed053cf60f43088", "filename": "crates/ra_syntax/src/parsing/lexer.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fe1b1dd7d9edde081c4c95facc19e801863beaff/crates%2Fra_syntax%2Fsrc%2Fparsing%2Flexer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe1b1dd7d9edde081c4c95facc19e801863beaff/crates%2Fra_syntax%2Fsrc%2Fparsing%2Flexer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing%2Flexer.rs?ref=fe1b1dd7d9edde081c4c95facc19e801863beaff", "patch": "@@ -145,3 +145,16 @@ pub fn classify_literal(text: &str) -> Option<Token> {\n     };\n     Some(Token { kind, len: TextUnit::from_usize(t.len) })\n }\n+\n+#[cfg(test)]\n+mod tests {\n+    use super::*;\n+\n+    #[test]\n+    fn lex_float_literal() {\n+        assert_eq!(\n+            tokenize(\"42f64\")[0],\n+            Token { kind: FLOAT_NUMBER, len: TextUnit::from_usize(5)}\n+        );\n+    }\n+}\n\\ No newline at end of file"}]}