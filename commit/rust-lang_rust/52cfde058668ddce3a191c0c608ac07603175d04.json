{"sha": "52cfde058668ddce3a191c0c608ac07603175d04", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyY2ZkZTA1ODY2OGRkY2UzYTE5MWMwYzYwOGFjMDc2MDMxNzVkMDQ=", "commit": {"author": {"name": "Takayuki", "email": "takoyaki0316@gmail.com", "date": "2021-05-04T08:28:32Z"}, "committer": {"name": "Takayuki", "email": "takoyaki0316@gmail.com", "date": "2021-05-04T08:28:32Z"}, "message": "move redundant_pattern to its own module", "tree": {"sha": "ddb8fe856d6fd6416ad80bd444a68de82f21cebd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ddb8fe856d6fd6416ad80bd444a68de82f21cebd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52cfde058668ddce3a191c0c608ac07603175d04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52cfde058668ddce3a191c0c608ac07603175d04", "html_url": "https://github.com/rust-lang/rust/commit/52cfde058668ddce3a191c0c608ac07603175d04", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52cfde058668ddce3a191c0c608ac07603175d04/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55af0cee15cf5c85cbb50ef41eafb4498bde24e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/55af0cee15cf5c85cbb50ef41eafb4498bde24e3", "html_url": "https://github.com/rust-lang/rust/commit/55af0cee15cf5c85cbb50ef41eafb4498bde24e3"}], "stats": {"total": 60, "additions": 34, "deletions": 26}, "files": [{"sha": "564afdb7f8d4c48b2f1b0dcb5b54abc4636d8017", "filename": "clippy_lints/src/misc_early/mod.rs", "status": "modified", "additions": 3, "deletions": 26, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/52cfde058668ddce3a191c0c608ac07603175d04/clippy_lints%2Fsrc%2Fmisc_early%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52cfde058668ddce3a191c0c608ac07603175d04/clippy_lints%2Fsrc%2Fmisc_early%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early%2Fmod.rs?ref=52cfde058668ddce3a191c0c608ac07603175d04", "patch": "@@ -1,11 +1,10 @@\n mod builtin_type_shadow;\n mod double_neg;\n+mod redundant_pattern;\n \n use clippy_utils::diagnostics::{span_lint, span_lint_and_help, span_lint_and_sugg, span_lint_and_then};\n use clippy_utils::source::snippet_opt;\n-use rustc_ast::ast::{\n-    BindingMode, Expr, Generics, Lit, LitFloatType, LitIntType, LitKind, Mutability, NodeId, Pat, PatKind,\n-};\n+use rustc_ast::ast::{Expr, Generics, Lit, LitFloatType, LitIntType, LitKind, NodeId, Pat, PatKind};\n use rustc_ast::visit::FnKind;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::Applicability;\n@@ -336,29 +335,7 @@ impl EarlyLintPass for MiscEarlyLints {\n             }\n         }\n \n-        if let PatKind::Ident(left, ident, Some(ref right)) = pat.kind {\n-            let left_binding = match left {\n-                BindingMode::ByRef(Mutability::Mut) => \"ref mut \",\n-                BindingMode::ByRef(Mutability::Not) => \"ref \",\n-                BindingMode::ByValue(..) => \"\",\n-            };\n-\n-            if let PatKind::Wild = right.kind {\n-                span_lint_and_sugg(\n-                    cx,\n-                    REDUNDANT_PATTERN,\n-                    pat.span,\n-                    &format!(\n-                        \"the `{} @ _` pattern can be written as just `{}`\",\n-                        ident.name, ident.name,\n-                    ),\n-                    \"try\",\n-                    format!(\"{}{}\", left_binding, ident.name),\n-                    Applicability::MachineApplicable,\n-                );\n-            }\n-        }\n-\n+        redundant_pattern::check(cx, pat);\n         check_unneeded_wildcard_pattern(cx, pat);\n     }\n "}, {"sha": "525dbf7757c14c3c7e97cbffad764fca4d51a442", "filename": "clippy_lints/src/misc_early/redundant_pattern.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/52cfde058668ddce3a191c0c608ac07603175d04/clippy_lints%2Fsrc%2Fmisc_early%2Fredundant_pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52cfde058668ddce3a191c0c608ac07603175d04/clippy_lints%2Fsrc%2Fmisc_early%2Fredundant_pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early%2Fredundant_pattern.rs?ref=52cfde058668ddce3a191c0c608ac07603175d04", "patch": "@@ -0,0 +1,31 @@\n+use clippy_utils::diagnostics::span_lint_and_sugg;\n+use rustc_ast::ast::{BindingMode, Mutability, Pat, PatKind};\n+use rustc_errors::Applicability;\n+use rustc_lint::EarlyContext;\n+\n+use super::REDUNDANT_PATTERN;\n+\n+pub(super) fn check(cx: &EarlyContext<'_>, pat: &Pat) {\n+    if let PatKind::Ident(left, ident, Some(ref right)) = pat.kind {\n+        let left_binding = match left {\n+            BindingMode::ByRef(Mutability::Mut) => \"ref mut \",\n+            BindingMode::ByRef(Mutability::Not) => \"ref \",\n+            BindingMode::ByValue(..) => \"\",\n+        };\n+\n+        if let PatKind::Wild = right.kind {\n+            span_lint_and_sugg(\n+                cx,\n+                REDUNDANT_PATTERN,\n+                pat.span,\n+                &format!(\n+                    \"the `{} @ _` pattern can be written as just `{}`\",\n+                    ident.name, ident.name,\n+                ),\n+                \"try\",\n+                format!(\"{}{}\", left_binding, ident.name),\n+                Applicability::MachineApplicable,\n+            );\n+        }\n+    }\n+}"}]}