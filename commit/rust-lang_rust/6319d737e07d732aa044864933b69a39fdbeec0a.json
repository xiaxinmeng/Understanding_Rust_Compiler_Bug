{"sha": "6319d737e07d732aa044864933b69a39fdbeec0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzMTlkNzM3ZTA3ZDczMmFhMDQ0ODY0OTMzYjY5YTM5ZmRiZWVjMGE=", "commit": {"author": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2020-12-17T01:25:53Z"}, "committer": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2020-12-18T16:21:39Z"}, "message": "Merge unreachable subpatterns correctly", "tree": {"sha": "ee12811deeaa0991550d3e786c31db501cbdffb5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee12811deeaa0991550d3e786c31db501cbdffb5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6319d737e07d732aa044864933b69a39fdbeec0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6319d737e07d732aa044864933b69a39fdbeec0a", "html_url": "https://github.com/rust-lang/rust/commit/6319d737e07d732aa044864933b69a39fdbeec0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6319d737e07d732aa044864933b69a39fdbeec0a/comments", "author": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d71a0b9b9871966dd1f63b4113eeecc2d6e2f6f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d71a0b9b9871966dd1f63b4113eeecc2d6e2f6f", "html_url": "https://github.com/rust-lang/rust/commit/2d71a0b9b9871966dd1f63b4113eeecc2d6e2f6f"}], "stats": {"total": 55, "additions": 36, "deletions": 19}, "files": [{"sha": "c07d4c9b8f74b003d32ae1b0c53f1986c77783a5", "filename": "compiler/rustc_mir_build/src/thir/pattern/usefulness.rs", "status": "modified", "additions": 28, "deletions": 3, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/6319d737e07d732aa044864933b69a39fdbeec0a/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fusefulness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6319d737e07d732aa044864933b69a39fdbeec0a/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fusefulness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fusefulness.rs?ref=6319d737e07d732aa044864933b69a39fdbeec0a", "patch": "@@ -788,13 +788,32 @@ impl<'tcx> Usefulness<'tcx> {\n     /// When trying several branches and each returns a `Usefulness`, we need to combine the\n     /// results together.\n     fn merge_split_constructors(usefulnesses: impl Iterator<Item = Self>) -> Self {\n+        // If we have detected some unreachable sub-branches, we only want to keep them when they\n+        // were unreachable in _all_ branches. So we take a big intersection.\n+\n+        // Is `None` when no branch was useful. Will often be `Some(Spanset::new())` because the\n+        // sets are only non-empty in the diagnostic path.\n+        let mut unreachables: Option<SpanSet> = None;\n         // Witnesses of usefulness, if any.\n         let mut witnesses = Vec::new();\n \n         for u in usefulnesses {\n             match u {\n-                Useful(..) => {\n-                    return u;\n+                Useful(spans) if spans.is_empty() => {\n+                    // Once we reach the empty set, more intersections won't change the result.\n+                    return Useful(SpanSet::new());\n+                }\n+                Useful(spans) => {\n+                    if let Some(unreachables) = &mut unreachables {\n+                        if !unreachables.is_empty() {\n+                            unreachables.intersection_mut(&spans);\n+                        }\n+                        if unreachables.is_empty() {\n+                            return Useful(SpanSet::new());\n+                        }\n+                    } else {\n+                        unreachables = Some(spans);\n+                    }\n                 }\n                 NotUseful => {}\n                 UsefulWithWitness(wits) => {\n@@ -803,7 +822,13 @@ impl<'tcx> Usefulness<'tcx> {\n             }\n         }\n \n-        if !witnesses.is_empty() { UsefulWithWitness(witnesses) } else { NotUseful }\n+        if !witnesses.is_empty() {\n+            UsefulWithWitness(witnesses)\n+        } else if let Some(unreachables) = unreachables {\n+            Useful(unreachables)\n+        } else {\n+            NotUseful\n+        }\n     }\n \n     fn apply_constructor<'p>("}, {"sha": "184ffa85c40e28b56beade40e73710bc7d598d5d", "filename": "src/test/ui/or-patterns/exhaustiveness-unreachable-pattern.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6319d737e07d732aa044864933b69a39fdbeec0a/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6319d737e07d732aa044864933b69a39fdbeec0a/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.rs?ref=6319d737e07d732aa044864933b69a39fdbeec0a", "patch": "@@ -64,11 +64,9 @@ fn main() {\n             | 2, ..] => {}\n         _ => {}\n     }\n-    // FIXME: incorrect\n     match &[][..] {\n         [true] => {}\n-        [true //~ ERROR unreachable\n-            | false, ..] => {}\n+        [true | false, ..] => {}\n         _ => {}\n     }\n     match &[][..] {"}, {"sha": "8b1003b5514a680b91ed77a1793205c610d9c10d", "filename": "src/test/ui/or-patterns/exhaustiveness-unreachable-pattern.stderr", "status": "modified", "additions": 7, "deletions": 13, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6319d737e07d732aa044864933b69a39fdbeec0a/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6319d737e07d732aa044864933b69a39fdbeec0a/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fexhaustiveness-unreachable-pattern.stderr?ref=6319d737e07d732aa044864933b69a39fdbeec0a", "patch": "@@ -95,46 +95,40 @@ LL |         [1\n    |          ^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:70:10\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:75:10\n    |\n LL |         [true\n    |          ^^^^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:77:10\n-   |\n-LL |         [true\n-   |          ^^^^\n-\n-error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:84:36\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:82:36\n    |\n LL |         (true | false, None | Some(true\n    |                                    ^^^^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:100:14\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:98:14\n    |\n LL |         Some(0\n    |              ^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:119:19\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:117:19\n    |\n LL |                 | false) => {}\n    |                   ^^^^^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:127:15\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:125:15\n    |\n LL |             | true) => {}\n    |               ^^^^\n \n error: unreachable pattern\n-  --> $DIR/exhaustiveness-unreachable-pattern.rs:133:15\n+  --> $DIR/exhaustiveness-unreachable-pattern.rs:131:15\n    |\n LL |             | true,\n    |               ^^^^\n \n-error: aborting due to 22 previous errors\n+error: aborting due to 21 previous errors\n "}]}