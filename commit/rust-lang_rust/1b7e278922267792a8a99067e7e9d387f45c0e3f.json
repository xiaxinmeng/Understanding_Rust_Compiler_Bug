{"sha": "1b7e278922267792a8a99067e7e9d387f45c0e3f", "node_id": "C_kwDOAAsO6NoAKDFiN2UyNzg5MjIyNjc3OTJhOGE5OTA2N2U3ZTlkMzg3ZjQ1YzBlM2Y", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-05-27T11:43:14Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-05-27T11:43:14Z"}, "message": "Reintroduce path filters", "tree": {"sha": "adb3bc0a234422ad58c21a4e4db300a85f722e3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/adb3bc0a234422ad58c21a4e4db300a85f722e3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b7e278922267792a8a99067e7e9d387f45c0e3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b7e278922267792a8a99067e7e9d387f45c0e3f", "html_url": "https://github.com/rust-lang/rust/commit/1b7e278922267792a8a99067e7e9d387f45c0e3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b7e278922267792a8a99067e7e9d387f45c0e3f/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10e06be15a3524e30eb1b8c896b748c0e94b74ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/10e06be15a3524e30eb1b8c896b748c0e94b74ff", "html_url": "https://github.com/rust-lang/rust/commit/10e06be15a3524e30eb1b8c896b748c0e94b74ff"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "9c4eeb527580d2a4e290d5ed3135c5d0b201b2a8", "filename": "miri", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1b7e278922267792a8a99067e7e9d387f45c0e3f/miri", "raw_url": "https://github.com/rust-lang/rust/raw/1b7e278922267792a8a99067e7e9d387f45c0e3f/miri", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri?ref=1b7e278922267792a8a99067e7e9d387f45c0e3f", "patch": "@@ -133,9 +133,9 @@ test|test-debug|bless|bless-debug)\n         ;;\n     esac\n     # Then test, and let caller control flags.\n-    # Only in root project as `cargo-miri` has no tests.\n+    # Only in root project and ui_test as `cargo-miri` has no tests.\n     cargo test $CARGO_BUILD_FLAGS \"$@\"\n-    cargo test --manifest-path ui_test/Cargo.toml\n+    cargo test --manifest-path ui_test/Cargo.toml \"$@\"\n     ;;\n run|run-debug)\n     # Scan for \"--target\" to set the \"MIRI_TEST_TARGET\" env var so"}, {"sha": "4be658e86cba434a3e74734f80e7a9611c5432fa", "filename": "tests/compiletest.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1b7e278922267792a8a99067e7e9d387f45c0e3f/tests%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b7e278922267792a8a99067e7e9d387f45c0e3f/tests%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompiletest.rs?ref=1b7e278922267792a8a99067e7e9d387f45c0e3f", "patch": "@@ -47,13 +47,16 @@ fn run_tests(mode: Mode, path: &str, target: Option<String>) {\n         (true, true) => panic!(\"cannot use MIRI_BLESS and MIRI_SKIP_UI_CHECKS at the same time\"),\n     };\n \n+    let path_filter = std::env::args().skip(1).next();\n+\n     let config = Config {\n         args: flags,\n         target,\n         stderr_filters: STDERR.clone(),\n         stdout_filters: STDOUT.clone(),\n         root_dir: PathBuf::from(path),\n         mode,\n+        path_filter,\n         program: miri_path(),\n         output_conflict_handling,\n     };"}, {"sha": "81560db6dff7691e44bf4a9eb2bad981343421c2", "filename": "ui_test/src/lib.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1b7e278922267792a8a99067e7e9d387f45c0e3f/ui_test%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b7e278922267792a8a99067e7e9d387f45c0e3f/ui_test%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ui_test%2Fsrc%2Flib.rs?ref=1b7e278922267792a8a99067e7e9d387f45c0e3f", "patch": "@@ -30,6 +30,8 @@ pub struct Config {\n     pub mode: Mode,\n     pub program: PathBuf,\n     pub output_conflict_handling: OutputConflictHandling,\n+    /// Only run tests with this string in their path/name\n+    pub path_filter: Option<String>,\n }\n \n #[derive(Debug)]\n@@ -75,6 +77,17 @@ pub fn run_tests(config: Config) {\n                     if !path.extension().map(|ext| ext == \"rs\").unwrap_or(false) {\n                         continue;\n                     }\n+                    if let Some(path_filter) = &config.path_filter {\n+                        if !path.display().to_string().contains(path_filter) {\n+                            ignored.fetch_add(1, Ordering::Relaxed);\n+                            eprintln!(\n+                                \"{} .. {}\",\n+                                path.display(),\n+                                \"ignored (command line filter)\".yellow()\n+                            );\n+                            continue;\n+                        }\n+                    }\n                     let comments = Comments::parse_file(&path);\n                     // Ignore file if only/ignore rules do (not) apply\n                     if ignore_file(&comments, &target) {"}, {"sha": "5485e6b4f26b32c6b39d3f5d111135998a215e2a", "filename": "ui_test/src/tests.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1b7e278922267792a8a99067e7e9d387f45c0e3f/ui_test%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b7e278922267792a8a99067e7e9d387f45c0e3f/ui_test%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ui_test%2Fsrc%2Ftests.rs?ref=1b7e278922267792a8a99067e7e9d387f45c0e3f", "patch": "@@ -10,6 +10,7 @@ fn config() -> Config {\n         stdout_filters: vec![],\n         root_dir: PathBuf::from(\".\"),\n         mode: Mode::Fail,\n+        path_filter: None,\n         program: PathBuf::from(\"cake\"),\n         output_conflict_handling: OutputConflictHandling::Error,\n     }"}]}