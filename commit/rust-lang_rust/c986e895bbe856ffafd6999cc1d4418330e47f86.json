{"sha": "c986e895bbe856ffafd6999cc1d4418330e47f86", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5ODZlODk1YmJlODU2ZmZhZmQ2OTk5Y2MxZDQ0MTgzMzBlNDdmODY=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-03-19T22:35:53Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-03-19T22:35:53Z"}, "message": "Remove FnArgLayoutStyle::BlockAlways", "tree": {"sha": "9f46cf9eab503976af4d3d97556a91654a1cb312", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f46cf9eab503976af4d3d97556a91654a1cb312"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c986e895bbe856ffafd6999cc1d4418330e47f86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c986e895bbe856ffafd6999cc1d4418330e47f86", "html_url": "https://github.com/rust-lang/rust/commit/c986e895bbe856ffafd6999cc1d4418330e47f86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c986e895bbe856ffafd6999cc1d4418330e47f86/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce7b0aacd0d70145d9583e41c1ef65154d790823", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce7b0aacd0d70145d9583e41c1ef65154d790823", "html_url": "https://github.com/rust-lang/rust/commit/ce7b0aacd0d70145d9583e41c1ef65154d790823"}], "stats": {"total": 138, "additions": 17, "deletions": 121}, "files": [{"sha": "317cc9218c7984b7e5e1f91ac50f403f031625be", "filename": "src/config.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c986e895bbe856ffafd6999cc1d4418330e47f86/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c986e895bbe856ffafd6999cc1d4418330e47f86/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=c986e895bbe856ffafd6999cc1d4418330e47f86", "patch": "@@ -78,8 +78,6 @@ configuration_option_enum! { FnArgLayoutStyle:\n     Visual,\n     // Put args on one line if they fit, or start a new line with block indent.\n     Block,\n-    // First line is on a new line and all lines align with block indent.\n-    BlockAlways,\n }\n \n configuration_option_enum! { BlockIndentStyle:"}, {"sha": "3d6ec44b8c81b8d41acc13275f79b938c3c0c4f4", "filename": "src/expr.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c986e895bbe856ffafd6999cc1d4418330e47f86/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c986e895bbe856ffafd6999cc1d4418330e47f86/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=c986e895bbe856ffafd6999cc1d4418330e47f86", "patch": "@@ -331,8 +331,7 @@ pub fn rewrite_array<'a, I>(expr_iter: I,\n     };\n \n     let nested_shape = match context.config.array_layout {\n-        FnArgLayoutStyle::Block |\n-        FnArgLayoutStyle::BlockAlways => shape.block().block_indent(context.config.tab_spaces),\n+        FnArgLayoutStyle::Block => shape.block().block_indent(context.config.tab_spaces),\n         FnArgLayoutStyle::Visual => {\n             try_opt!(shape.visual_indent(bracket_size).sub_width(bracket_size * 2))\n         }\n@@ -369,7 +368,6 @@ pub fn rewrite_array<'a, I>(expr_iter: I,\n                 None => DefinitiveListTactic::Vertical,\n             }\n         }\n-        FnArgLayoutStyle::BlockAlways => DefinitiveListTactic::Vertical,\n         FnArgLayoutStyle::Visual => {\n             if has_long_item || items.iter().any(ListItem::is_multiline) {\n                 definitive_tactic(&items, ListTactic::HorizontalVertical, nested_shape.width)"}, {"sha": "f2650494a8228a4e64503a70f6762c523f4182b6", "filename": "src/items.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c986e895bbe856ffafd6999cc1d4418330e47f86/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c986e895bbe856ffafd6999cc1d4418330e47f86/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=c986e895bbe856ffafd6999cc1d4418330e47f86", "patch": "@@ -1024,8 +1024,7 @@ fn format_tuple_struct(context: &RewriteContext,\n             // 1 = `(`\n             (ListTactic::HorizontalVertical, offset.block_only() + result.len() + 1)\n         }\n-        FnArgLayoutStyle::Block |\n-        FnArgLayoutStyle::BlockAlways => {\n+        FnArgLayoutStyle::Block => {\n             (ListTactic::HorizontalVertical, offset.block_only().block_indent(&context.config))\n         }\n     };\n@@ -1513,8 +1512,7 @@ fn rewrite_fn_base(context: &RewriteContext,\n     let (mut one_line_budget, mut multi_line_budget, mut arg_indent) =\n         try_opt!(compute_budgets_for_args(context, &result, indent, ret_str_len, newline_brace));\n \n-    if context.config.fn_args_layout == FnArgLayoutStyle::Block ||\n-       context.config.fn_args_layout == FnArgLayoutStyle::BlockAlways {\n+    if context.config.fn_args_layout == FnArgLayoutStyle::Block {\n         arg_indent = indent.block_indent(context.config);\n         multi_line_budget = context.config.max_width - arg_indent.width();\n     }\n@@ -1569,7 +1567,6 @@ fn rewrite_fn_base(context: &RewriteContext,\n \n     let put_args_in_block = match context.config.fn_args_layout {\n         FnArgLayoutStyle::Block => multi_line_arg_str || generics_str.contains('\\n'),\n-        FnArgLayoutStyle::BlockAlways => true,\n         _ => false,\n     } && !fd.inputs.is_empty();\n \n@@ -1594,7 +1591,6 @@ fn rewrite_fn_base(context: &RewriteContext,\n         let ret_should_indent = match context.config.fn_args_layout {\n             // If our args are block layout then we surely must have space.\n             FnArgLayoutStyle::Block if put_args_in_block => false,\n-            FnArgLayoutStyle::BlockAlways => false,\n             _ => {\n                 // If we've already gone multi-line, or the return type would push over the max\n                 // width, then put the return type on a new line. With the +1 for the signature\n@@ -1822,7 +1818,6 @@ fn rewrite_args(context: &RewriteContext,\n \n     let (trailing_comma, end_with_newline) = match context.config.fn_args_layout {\n         FnArgLayoutStyle::Block => (SeparatorTactic::Vertical, true),\n-        FnArgLayoutStyle::BlockAlways => (SeparatorTactic::Always, true),\n         _ => (SeparatorTactic::Never, false),\n     };\n "}, {"sha": "f7079a3a9cddd69bd8bae9b475a147051d5430bc", "filename": "tests/source/fn-custom-6.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c986e895bbe856ffafd6999cc1d4418330e47f86/tests%2Fsource%2Ffn-custom-6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c986e895bbe856ffafd6999cc1d4418330e47f86/tests%2Fsource%2Ffn-custom-6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ffn-custom-6.rs?ref=c986e895bbe856ffafd6999cc1d4418330e47f86", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-fn_args_layout: BlockAlways\n+// rustfmt-fn_args_layout: Block\n // rustfmt-where_indent: Tabbed\n // rustfmt-fn_brace_style: PreferSameLine\n // Test different indents."}, {"sha": "febe0c02db28436c67b7860cb69ebf2f3b420753", "filename": "tests/source/fn-custom-7.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c986e895bbe856ffafd6999cc1d4418330e47f86/tests%2Fsource%2Ffn-custom-7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c986e895bbe856ffafd6999cc1d4418330e47f86/tests%2Fsource%2Ffn-custom-7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ffn-custom-7.rs?ref=c986e895bbe856ffafd6999cc1d4418330e47f86", "patch": "@@ -1,5 +1,5 @@\n // rustfmt-normalize_comments: true\n-// rustfmt-fn_args_layout: BlockAlways\n+// rustfmt-fn_args_layout: Block\n // rustfmt-fn_args_density: Vertical\n // rustfmt-fn_arg_indent: Tabbed\n // rustfmt-fn_brace_style: AlwaysNextLine"}, {"sha": "d4bb00b914277ecd8534b57acc9df3179d40f302", "filename": "tests/source/fn_args_layout-blockalways.rs", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/ce7b0aacd0d70145d9583e41c1ef65154d790823/tests%2Fsource%2Ffn_args_layout-blockalways.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce7b0aacd0d70145d9583e41c1ef65154d790823/tests%2Fsource%2Ffn_args_layout-blockalways.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ffn_args_layout-blockalways.rs?ref=ce7b0aacd0d70145d9583e41c1ef65154d790823", "patch": "@@ -1,27 +0,0 @@\n-// rustfmt-fn_args_layout: BlockAlways\n-\n-fn foo() {\n-    foo();\n-}\n-\n-fn foo(a: Aaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbb) {\n-    foo();\n-}\n-\n-fn bar(a: Aaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbb, c: Cccccccccccccccccc, d: Dddddddddddddddd, e: Eeeeeeeeeeeeeee) {\n-    bar();\n-}\n-\n-fn foo(a: Aaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbb) -> String {\n-    foo();\n-}\n-\n-fn bar(a: Aaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbb, c: Cccccccccccccccccc, d: Dddddddddddddddd, e: Eeeeeeeeeeeeeee) -> String {\n-    bar();\n-}\n-\n-trait Test {\n-    fn foo(a: u8) {}\n-\n-    fn bar(a: u8) -> String {}\n-}"}, {"sha": "4340e7ac827e8857f1eb0246d5e5df612e9c0ab5", "filename": "tests/target/fn-custom-6.rs", "status": "modified", "additions": 8, "deletions": 21, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/c986e895bbe856ffafd6999cc1d4418330e47f86/tests%2Ftarget%2Ffn-custom-6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c986e895bbe856ffafd6999cc1d4418330e47f86/tests%2Ftarget%2Ffn-custom-6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn-custom-6.rs?ref=c986e895bbe856ffafd6999cc1d4418330e47f86", "patch": "@@ -1,11 +1,9 @@\n-// rustfmt-fn_args_layout: BlockAlways\n+// rustfmt-fn_args_layout: Block\n // rustfmt-where_indent: Tabbed\n // rustfmt-fn_brace_style: PreferSameLine\n // Test different indents.\n \n-fn foo(\n-    a: Aaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbb,\n-) {\n+fn foo(a: Aaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbb) {\n     foo();\n }\n \n@@ -19,9 +17,7 @@ fn bar(\n     bar();\n }\n \n-fn foo(\n-    a: Aaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbb,\n-) -> String {\n+fn foo(a: Aaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbb) -> String {\n     foo();\n }\n \n@@ -35,9 +31,8 @@ fn bar(\n     bar();\n }\n \n-fn foo(\n-    a: Aaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbb,\n-) where T: UUUUUUUUUUU {\n+fn foo(a: Aaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbb)\n+    where T: UUUUUUUUUUU {\n     foo();\n }\n \n@@ -51,9 +46,7 @@ fn bar(\n     bar();\n }\n \n-fn foo(\n-    a: Aaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbb,\n-) -> String\n+fn foo(a: Aaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbb) -> String\n     where T: UUUUUUUUUUU {\n     foo();\n }\n@@ -70,13 +63,7 @@ fn bar(\n }\n \n trait Test {\n-    fn foo(\n-        a: u8,\n-    ) {\n-    }\n+    fn foo(a: u8) {}\n \n-    fn bar(\n-        a: u8,\n-    ) -> String {\n-    }\n+    fn bar(a: u8) -> String {}\n }"}, {"sha": "faa47a54060df61458756067184651f94736b260", "filename": "tests/target/fn-custom-7.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c986e895bbe856ffafd6999cc1d4418330e47f86/tests%2Ftarget%2Ffn-custom-7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c986e895bbe856ffafd6999cc1d4418330e47f86/tests%2Ftarget%2Ffn-custom-7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn-custom-7.rs?ref=c986e895bbe856ffafd6999cc1d4418330e47f86", "patch": "@@ -1,13 +1,11 @@\n // rustfmt-normalize_comments: true\n-// rustfmt-fn_args_layout: BlockAlways\n+// rustfmt-fn_args_layout: Block\n // rustfmt-fn_args_density: Vertical\n // rustfmt-fn_arg_indent: Tabbed\n // rustfmt-fn_brace_style: AlwaysNextLine\n \n // Case with only one variable.\n-fn foo(\n-    a: u8,\n-) -> u8\n+fn foo(a: u8,) -> u8\n {\n     bar()\n }\n@@ -33,15 +31,11 @@ fn foo(\n }\n \n trait Test {\n-    fn foo(\n-        a: u8,\n-    )\n+    fn foo(a: u8,)\n     {\n     }\n \n-    fn bar(\n-        a: u8,\n-    ) -> String\n+    fn bar(a: u8,) -> String\n     {\n     }\n }"}, {"sha": "eb5caec65201281bc6a6787c16e2bc9e5add7d63", "filename": "tests/target/fn_args_layout-blockalways.rs", "status": "removed", "additions": 0, "deletions": 49, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/ce7b0aacd0d70145d9583e41c1ef65154d790823/tests%2Ftarget%2Ffn_args_layout-blockalways.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce7b0aacd0d70145d9583e41c1ef65154d790823/tests%2Ftarget%2Ffn_args_layout-blockalways.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn_args_layout-blockalways.rs?ref=ce7b0aacd0d70145d9583e41c1ef65154d790823", "patch": "@@ -1,49 +0,0 @@\n-// rustfmt-fn_args_layout: BlockAlways\n-\n-fn foo() {\n-    foo();\n-}\n-\n-fn foo(\n-    a: Aaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbb,\n-) {\n-    foo();\n-}\n-\n-fn bar(\n-    a: Aaaaaaaaaaaaaa,\n-    b: Bbbbbbbbbbbbbb,\n-    c: Cccccccccccccccccc,\n-    d: Dddddddddddddddd,\n-    e: Eeeeeeeeeeeeeee,\n-) {\n-    bar();\n-}\n-\n-fn foo(\n-    a: Aaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbb,\n-) -> String {\n-    foo();\n-}\n-\n-fn bar(\n-    a: Aaaaaaaaaaaaaa,\n-    b: Bbbbbbbbbbbbbb,\n-    c: Cccccccccccccccccc,\n-    d: Dddddddddddddddd,\n-    e: Eeeeeeeeeeeeeee,\n-) -> String {\n-    bar();\n-}\n-\n-trait Test {\n-    fn foo(\n-        a: u8,\n-    ) {\n-    }\n-\n-    fn bar(\n-        a: u8,\n-    ) -> String {\n-    }\n-}"}]}