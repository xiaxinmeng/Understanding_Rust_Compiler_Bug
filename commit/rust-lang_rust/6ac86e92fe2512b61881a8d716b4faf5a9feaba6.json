{"sha": "6ac86e92fe2512b61881a8d716b4faf5a9feaba6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhYzg2ZTkyZmUyNTEyYjYxODgxYThkNzE2YjRmYWY1YTlmZWFiYTY=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-07-29T22:59:27Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-07-30T01:39:15Z"}, "message": "Make uint::iterate pure", "tree": {"sha": "a84180152e75250f592671b763c38f5acb4e3a84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a84180152e75250f592671b763c38f5acb4e3a84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ac86e92fe2512b61881a8d716b4faf5a9feaba6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ac86e92fe2512b61881a8d716b4faf5a9feaba6", "html_url": "https://github.com/rust-lang/rust/commit/6ac86e92fe2512b61881a8d716b4faf5a9feaba6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ac86e92fe2512b61881a8d716b4faf5a9feaba6/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3cb147a71ecb4ca1600fc40db1fa367b1cb05bf2", "url": "https://api.github.com/repos/rust-lang/rust/commits/3cb147a71ecb4ca1600fc40db1fa367b1cb05bf2", "html_url": "https://github.com/rust-lang/rust/commit/3cb147a71ecb4ca1600fc40db1fa367b1cb05bf2"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "10d91d73e756b2e1923d4291d574506529d23e2d", "filename": "src/libcore/uint-template/uint.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ac86e92fe2512b61881a8d716b4faf5a9feaba6/src%2Flibcore%2Fuint-template%2Fuint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac86e92fe2512b61881a8d716b4faf5a9feaba6/src%2Flibcore%2Fuint-template%2Fuint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fuint-template%2Fuint.rs?ref=6ac86e92fe2512b61881a8d716b4faf5a9feaba6", "patch": "@@ -71,7 +71,7 @@ pure fn hash(&&x: uint) -> uint { ret x; }\n  * `true` If execution proceeded correctly, `false` if it was interrupted,\n  * that is if `it` returned `false` at any point.\n  */\n-fn iterate(lo: uint, hi: uint, it: fn(uint) -> bool) -> bool {\n+pure fn iterate(lo: uint, hi: uint, it: fn(uint) -> bool) -> bool {\n     let mut i = lo;\n     while i < hi {\n         if (!it(i)) { ret false; }"}]}