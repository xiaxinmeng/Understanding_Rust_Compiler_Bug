{"sha": "b3f62660feb7419d2064e474e1e06e77c69b2b9d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzZjYyNjYwZmViNzQxOWQyMDY0ZTQ3NGUxZTA2ZTc3YzY5YjJiOWQ=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-03-25T23:16:39Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-04-04T17:50:03Z"}, "message": "Adjust the mutable_borrow_reservation_conflict message\n\nWe aren't sure if this will become an error or not yet.", "tree": {"sha": "3163103bcb80deb41284b24d334809066e59ef95", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3163103bcb80deb41284b24d334809066e59ef95"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3f62660feb7419d2064e474e1e06e77c69b2b9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3f62660feb7419d2064e474e1e06e77c69b2b9d", "html_url": "https://github.com/rust-lang/rust/commit/b3f62660feb7419d2064e474e1e06e77c69b2b9d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3f62660feb7419d2064e474e1e06e77c69b2b9d/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "800be4c07c90856cca8a74efc7075ddff788d66d", "url": "https://api.github.com/repos/rust-lang/rust/commits/800be4c07c90856cca8a74efc7075ddff788d66d", "html_url": "https://github.com/rust-lang/rust/commit/800be4c07c90856cca8a74efc7075ddff788d66d"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "7af4c667ed13935d7b2ab6da411019f92b2e257c", "filename": "src/librustc/lint/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b3f62660feb7419d2064e474e1e06e77c69b2b9d/src%2Flibrustc%2Flint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3f62660feb7419d2064e474e1e06e77c69b2b9d/src%2Flibrustc%2Flint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fmod.rs?ref=b3f62660feb7419d2064e474e1e06e77c69b2b9d", "patch": "@@ -716,6 +716,10 @@ pub fn struct_lint_level<'a>(sess: &'a Session,\n             \"once this method is added to the standard library, \\\n              the ambiguity may cause an error or change in behavior!\"\n                 .to_owned()\n+        } else if lint_id ==  LintId::of(crate::lint::builtin::MUTABLE_BORROW_RESERVATION_CONFLICT) {\n+            \"this borrowing pattern was not meant to be accepted, \\\n+             and may become a hard error in the future\"\n+                .to_owned()\n         } else if let Some(edition) = future_incompatible.edition {\n             format!(\"{} in the {} edition!\", STANDARD_MESSAGE, edition)\n         } else {"}, {"sha": "bb11b2e4f0f3a6fdfe3fa230dbae52c8a1b1c3c5", "filename": "src/test/ui/borrowck/two-phase-reservation-sharing-interference-2.migrate2015.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b3f62660feb7419d2064e474e1e06e77c69b2b9d/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference-2.migrate2015.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b3f62660feb7419d2064e474e1e06e77c69b2b9d/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference-2.migrate2015.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference-2.migrate2015.stderr?ref=b3f62660feb7419d2064e474e1e06e77c69b2b9d", "patch": "@@ -32,7 +32,7 @@ LL |     v.push(shared.len());\n    |     mutable borrow occurs here\n    |\n    = note: #[warn(mutable_borrow_reservation_conflict)] on by default\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = warning: this borrowing pattern was not meant to be accepted, and may become a hard error in the future\n    = note: for more information, see issue #59159 <https://github.com/rust-lang/rust/issues/59159>\n \n error: aborting due to 2 previous errors"}, {"sha": "bb11b2e4f0f3a6fdfe3fa230dbae52c8a1b1c3c5", "filename": "src/test/ui/borrowck/two-phase-reservation-sharing-interference-2.migrate2018.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b3f62660feb7419d2064e474e1e06e77c69b2b9d/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference-2.migrate2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b3f62660feb7419d2064e474e1e06e77c69b2b9d/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference-2.migrate2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference-2.migrate2018.stderr?ref=b3f62660feb7419d2064e474e1e06e77c69b2b9d", "patch": "@@ -32,7 +32,7 @@ LL |     v.push(shared.len());\n    |     mutable borrow occurs here\n    |\n    = note: #[warn(mutable_borrow_reservation_conflict)] on by default\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = warning: this borrowing pattern was not meant to be accepted, and may become a hard error in the future\n    = note: for more information, see issue #59159 <https://github.com/rust-lang/rust/issues/59159>\n \n error: aborting due to 2 previous errors"}, {"sha": "54fad9f66b874d0960ea944553f62a0af64390be", "filename": "src/test/ui/borrowck/two-phase-reservation-sharing-interference-2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b3f62660feb7419d2064e474e1e06e77c69b2b9d/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3f62660feb7419d2064e474e1e06e77c69b2b9d/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference-2.rs?ref=b3f62660feb7419d2064e474e1e06e77c69b2b9d", "patch": "@@ -43,10 +43,10 @@ fn reservation_conflict() {\n     //[nll2015]~^ ERROR cannot borrow `v` as mutable\n     //[nll2018]~^^ ERROR cannot borrow `v` as mutable\n     //[migrate2015]~^^^ WARNING cannot borrow `v` as mutable\n-    //[migrate2015]~| WARNING will become a hard error in a future release\n+    //[migrate2015]~| WARNING may become a hard error in the future\n \n     //[migrate2018]~^^^^^^ WARNING cannot borrow `v` as mutable\n-    //[migrate2018]~| WARNING will become a hard error in a future release\n+    //[migrate2018]~| WARNING may become a hard error in the future\n \n     //[ast]~^^^^^^^^^ ERROR cannot borrow `v` as mutable\n }"}, {"sha": "0e1d77ace3f701820f702bce958cecb9d208a201", "filename": "src/test/ui/borrowck/two-phase-reservation-sharing-interference-future-compat-lint.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b3f62660feb7419d2064e474e1e06e77c69b2b9d/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference-future-compat-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3f62660feb7419d2064e474e1e06e77c69b2b9d/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference-future-compat-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference-future-compat-lint.rs?ref=b3f62660feb7419d2064e474e1e06e77c69b2b9d", "patch": "@@ -23,7 +23,7 @@ mod future_compat_warn {\n \n         v.push(shared.len());\n         //~^ WARNING cannot borrow `v` as mutable\n-        //~| WARNING will become a hard error in a future release\n+        //~| WARNING may become a hard error in the future\n     }\n }\n \n@@ -36,7 +36,7 @@ mod future_compat_deny {\n \n         v.push(shared.len());\n         //~^ ERROR cannot borrow `v` as mutable\n-        //~| WARNING will become a hard error in a future release\n+        //~| WARNING may become a hard error in the future\n     }\n }\n "}, {"sha": "77fbfb37addd0e91497fe83392c795218a8a1e60", "filename": "src/test/ui/borrowck/two-phase-reservation-sharing-interference-future-compat-lint.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b3f62660feb7419d2064e474e1e06e77c69b2b9d/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference-future-compat-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b3f62660feb7419d2064e474e1e06e77c69b2b9d/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference-future-compat-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference-future-compat-lint.stderr?ref=b3f62660feb7419d2064e474e1e06e77c69b2b9d", "patch": "@@ -14,7 +14,7 @@ note: lint level defined here\n    |\n LL |     #![warn(mutable_borrow_reservation_conflict)]\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = warning: this borrowing pattern was not meant to be accepted, and may become a hard error in the future\n    = note: for more information, see issue #59159 <https://github.com/rust-lang/rust/issues/59159>\n \n error: cannot borrow `v` as mutable because it is also borrowed as immutable\n@@ -33,7 +33,7 @@ note: lint level defined here\n    |\n LL |     #![deny(mutable_borrow_reservation_conflict)]\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = warning: this borrowing pattern was not meant to be accepted, and may become a hard error in the future\n    = note: for more information, see issue #59159 <https://github.com/rust-lang/rust/issues/59159>\n \n error: aborting due to previous error"}]}