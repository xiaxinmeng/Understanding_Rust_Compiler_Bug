{"sha": "db319a8fb0126b84e0a0abbac83d4e1adeca6a95", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiMzE5YThmYjAxMjZiODRlMGEwYWJiYWM4M2Q0ZTFhZGVjYTZhOTU=", "commit": {"author": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2020-01-22T16:24:32Z"}, "committer": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2020-01-30T14:00:35Z"}, "message": "suggest adding space in accidental doc comments", "tree": {"sha": "f48f75d7e54f2a3ff40d032d58acd01b05372491", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f48f75d7e54f2a3ff40d032d58acd01b05372491"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db319a8fb0126b84e0a0abbac83d4e1adeca6a95", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFKBAABCAA0FiEELriChyEaiMu0yCg7viIhAz7bw3QFAl4y4YMWHGFydXNzZWxs\nMTIzQGdtYWlsLmNvbQAKCRC+IiEDPtvDdKAqB/0WONJK2SOEd432Y9qYLJLTqxWD\neaezrhyM3qHrs+bBdSYmZRsY0Qqiueas6Vt8ZobrLfRoQpPEqea0iqbMW3LfoyMU\nhegMUtZTfvt/ArpEw9mJGBYQHfEBOmm4J1pe/aZjGYZGyqSm2fG5+pc78qhHJLmK\nQ+S1xBAD8+QDAK6dHpHjGdHUIITdeLZWyqfUbCzyfrCXuux8ZQYlt7dmwAipeuuE\n7QI6vGAX3wyrchb/EmOUzh17wLJ9g10g9qZmE1JLo4lK2ONmum0nd5leXVFshV5X\niEUtyvV0HtFTAts0AMporNFG+yjLkQSh/Ar4sNz2HohNwYbP2TD/nJzURHFt\n=aDir\n-----END PGP SIGNATURE-----", "payload": "tree f48f75d7e54f2a3ff40d032d58acd01b05372491\nparent c4071d09197e22d2fab8334aa8d30659961bb977\nauthor Andy Russell <arussell123@gmail.com> 1579710272 -0500\ncommitter Andy Russell <arussell123@gmail.com> 1580392835 -0500\n\nsuggest adding space in accidental doc comments\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db319a8fb0126b84e0a0abbac83d4e1adeca6a95", "html_url": "https://github.com/rust-lang/rust/commit/db319a8fb0126b84e0a0abbac83d4e1adeca6a95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db319a8fb0126b84e0a0abbac83d4e1adeca6a95/comments", "author": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4071d09197e22d2fab8334aa8d30659961bb977", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4071d09197e22d2fab8334aa8d30659961bb977", "html_url": "https://github.com/rust-lang/rust/commit/c4071d09197e22d2fab8334aa8d30659961bb977"}], "stats": {"total": 91, "additions": 89, "deletions": 2}, "files": [{"sha": "ae8f1e4db1b38519da89f82ba2474bcf0399fd63", "filename": "src/librustc_parse/parser/stmt.rs", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/db319a8fb0126b84e0a0abbac83d4e1adeca6a95/src%2Flibrustc_parse%2Fparser%2Fstmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db319a8fb0126b84e0a0abbac83d4e1adeca6a95/src%2Flibrustc_parse%2Fparser%2Fstmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fstmt.rs?ref=db319a8fb0126b84e0a0abbac83d4e1adeca6a95", "patch": "@@ -7,13 +7,13 @@ use crate::maybe_whole;\n use crate::DirectoryOwnership;\n \n use rustc_errors::{Applicability, PResult};\n-use rustc_span::source_map::{respan, Span};\n+use rustc_span::source_map::{respan, BytePos, Span};\n use rustc_span::symbol::{kw, sym, Symbol};\n use syntax::ast;\n use syntax::ast::{AttrStyle, AttrVec, Attribute, Mac, MacStmtStyle, VisibilityKind};\n use syntax::ast::{Block, BlockCheckMode, Expr, ExprKind, Local, Stmt, StmtKind, DUMMY_NODE_ID};\n use syntax::ptr::P;\n-use syntax::token;\n+use syntax::token::{self, TokenKind};\n use syntax::util::classify;\n \n use std::mem;\n@@ -431,6 +431,23 @@ impl<'a> Parser<'a> {\n                     if let Err(mut e) =\n                         self.expect_one_of(&[], &[token::Semi, token::CloseDelim(token::Brace)])\n                     {\n+                        if let TokenKind::DocComment(..) = self.token.kind {\n+                            if let Ok(snippet) = self.span_to_snippet(self.token.span) {\n+                                let sp = self.token.span;\n+                                let marker = &snippet[..3];\n+                                let (comment_marker, doc_comment_marker) = marker.split_at(2);\n+\n+                                e.span_suggestion(\n+                                    sp.with_hi(sp.lo() + BytePos(marker.len() as u32)),\n+                                    &format!(\n+                                        \"add a space before `{}` to use a regular comment\",\n+                                        doc_comment_marker,\n+                                    ),\n+                                    format!(\"{} {}\", comment_marker, doc_comment_marker),\n+                                    Applicability::MaybeIncorrect,\n+                                );\n+                            }\n+                        }\n                         e.emit();\n                         self.recover_stmt();\n                         // Don't complain about type errors in body tail after parse error (#57383)."}, {"sha": "b02df13213f209a4eb276ad91b1fb9f4b1593242", "filename": "src/test/ui/parser/doc-comment-in-stmt.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/db319a8fb0126b84e0a0abbac83d4e1adeca6a95/src%2Ftest%2Fui%2Fparser%2Fdoc-comment-in-stmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db319a8fb0126b84e0a0abbac83d4e1adeca6a95/src%2Ftest%2Fui%2Fparser%2Fdoc-comment-in-stmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdoc-comment-in-stmt.rs?ref=db319a8fb0126b84e0a0abbac83d4e1adeca6a95", "patch": "@@ -0,0 +1,20 @@\n+fn foo() -> bool {\n+    false\n+    //!self.allow_ty_infer()\n+    //~^ ERROR found doc comment\n+}\n+\n+fn bar() -> bool {\n+    false\n+    /*! bar */ //~ ERROR found doc comment\n+}\n+\n+fn baz() -> i32 {\n+    1 /** baz */ //~ ERROR found doc comment\n+}\n+\n+fn quux() -> i32 {\n+    2 /*! quux */ //~ ERROR found doc comment\n+}\n+\n+fn main() {}"}, {"sha": "5d94d6fe69b59716f7a452ad77ae7b9b8f1c9b28", "filename": "src/test/ui/parser/doc-comment-in-stmt.stderr", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/db319a8fb0126b84e0a0abbac83d4e1adeca6a95/src%2Ftest%2Fui%2Fparser%2Fdoc-comment-in-stmt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/db319a8fb0126b84e0a0abbac83d4e1adeca6a95/src%2Ftest%2Fui%2Fparser%2Fdoc-comment-in-stmt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdoc-comment-in-stmt.stderr?ref=db319a8fb0126b84e0a0abbac83d4e1adeca6a95", "patch": "@@ -0,0 +1,50 @@\n+error: expected one of `.`, `;`, `?`, `}`, or an operator, found doc comment `//!self.allow_ty_infer()`\n+  --> $DIR/doc-comment-in-stmt.rs:3:5\n+   |\n+LL |     false\n+   |          - expected one of `.`, `;`, `?`, `}`, or an operator\n+LL |     //!self.allow_ty_infer()\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^ unexpected token\n+   |\n+help: add a space before `!` to use a regular comment\n+   |\n+LL |     // !self.allow_ty_infer()\n+   |     ^^^^\n+\n+error: expected one of `.`, `;`, `?`, `}`, or an operator, found doc comment `/*! bar */`\n+  --> $DIR/doc-comment-in-stmt.rs:9:5\n+   |\n+LL |     false\n+   |          - expected one of `.`, `;`, `?`, `}`, or an operator\n+LL |     /*! bar */\n+   |     ^^^^^^^^^^ unexpected token\n+   |\n+help: add a space before `!` to use a regular comment\n+   |\n+LL |     /* ! bar */\n+   |     ^^^^\n+\n+error: expected one of `.`, `;`, `?`, `}`, or an operator, found doc comment `/** baz */`\n+  --> $DIR/doc-comment-in-stmt.rs:13:7\n+   |\n+LL |     1 /** baz */\n+   |       ^^^^^^^^^^ expected one of `.`, `;`, `?`, `}`, or an operator\n+   |\n+help: add a space before `*` to use a regular comment\n+   |\n+LL |     1 /* * baz */\n+   |       ^^^^\n+\n+error: expected one of `.`, `;`, `?`, `}`, or an operator, found doc comment `/*! quux */`\n+  --> $DIR/doc-comment-in-stmt.rs:17:7\n+   |\n+LL |     2 /*! quux */\n+   |       ^^^^^^^^^^^ expected one of `.`, `;`, `?`, `}`, or an operator\n+   |\n+help: add a space before `!` to use a regular comment\n+   |\n+LL |     2 /* ! quux */\n+   |       ^^^^\n+\n+error: aborting due to 4 previous errors\n+"}]}