{"sha": "e632940a41fe6d65bd677da85d87046dc5da5022", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2MzI5NDBhNDFmZTZkNjViZDY3N2RhODVkODcwNDZkYzVkYTUwMjI=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-01-09T09:56:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-09T09:56:05Z"}, "message": "Update src/librustc_mir/interpret/place.rs\n\nCo-Authored-By: Ralf Jung <post@ralfj.de>", "tree": {"sha": "b312c893a9036f2d80890f255d9b4e9ff7add8bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b312c893a9036f2d80890f255d9b4e9ff7add8bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e632940a41fe6d65bd677da85d87046dc5da5022", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeFvi1CRBK7hj4Ov3rIwAAdHIIAHryc21LMxSQ1bWw7cgCPojS\nEo6J5TFl5Qv5gDHvhHuWCNtl8hj1+oRZC517DqV5KMGf4hHOYNhiLCorSCDI8Qm1\nulLS9Nl0tv233h9hR1K3vWxOhcevuNuWNXJzTs5ZRz1PwhpQVxyZDFzAU2JosRMy\nyvXYx20HO0+Cdu7LdUT3OU1e0UQRQAqsPWsXNGnGMdVu/40LZnaH9haS25EQLAAF\noIgluLAW+rwEBwD7pm+majyISVr/3VTBt+ogW/8ta8ABwEwjgJbHzdnMQTALrR76\nAdzEoC6GWpLEbGry62q9E8TIPprz4Tt1hQ2gYle3XSS/E+BATuYQfwCx30tjm9E=\n=bHNJ\n-----END PGP SIGNATURE-----\n", "payload": "tree b312c893a9036f2d80890f255d9b4e9ff7add8bc\nparent d0b24e5ee292cc785401c880f21b690f5f3fa1d6\nauthor Oliver Scherer <github35764891676564198441@oli-obk.de> 1578563765 +0100\ncommitter GitHub <noreply@github.com> 1578563765 +0100\n\nUpdate src/librustc_mir/interpret/place.rs\n\nCo-Authored-By: Ralf Jung <post@ralfj.de>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e632940a41fe6d65bd677da85d87046dc5da5022", "html_url": "https://github.com/rust-lang/rust/commit/e632940a41fe6d65bd677da85d87046dc5da5022", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e632940a41fe6d65bd677da85d87046dc5da5022/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0b24e5ee292cc785401c880f21b690f5f3fa1d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0b24e5ee292cc785401c880f21b690f5f3fa1d6", "html_url": "https://github.com/rust-lang/rust/commit/d0b24e5ee292cc785401c880f21b690f5f3fa1d6"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "87bb4c04b73ac398c438e216ff9ddec438351f26", "filename": "src/librustc_mir/interpret/place.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e632940a41fe6d65bd677da85d87046dc5da5022/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e632940a41fe6d65bd677da85d87046dc5da5022/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fplace.rs?ref=e632940a41fe6d65bd677da85d87046dc5da5022", "patch": "@@ -182,6 +182,7 @@ impl<'tcx, Tag> MPlaceTy<'tcx, Tag> {\n     pub fn dangling(layout: TyLayout<'tcx>, cx: &impl HasDataLayout) -> Self {\n         let align = layout.align.abi;\n         let ptr = Scalar::from_uint(align.bytes(), cx.pointer_size());\n+        // `Poison` this to make sure that the pointer value `ptr` is never observable by the program.\n         MPlaceTy { mplace: MemPlace { ptr, align, meta: MemPlaceMeta::Poison }, layout }\n     }\n "}]}