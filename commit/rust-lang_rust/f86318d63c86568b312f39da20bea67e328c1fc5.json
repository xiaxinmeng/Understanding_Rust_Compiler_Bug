{"sha": "f86318d63c86568b312f39da20bea67e328c1fc5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4NjMxOGQ2M2M4NjU2OGIzMTJmMzlkYTIwYmVhNjdlMzI4YzFmYzU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-04-01T23:34:15Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-04-02T00:07:51Z"}, "message": "Test fixes and rebase conflicts, round 2\n\nConflicts:\n\tsrc/libcore/num/mod.rs", "tree": {"sha": "36c7d66caea7d71f389adb2583d1fae252327e49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36c7d66caea7d71f389adb2583d1fae252327e49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f86318d63c86568b312f39da20bea67e328c1fc5", "comment_count": 2, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f86318d63c86568b312f39da20bea67e328c1fc5", "html_url": "https://github.com/rust-lang/rust/commit/f86318d63c86568b312f39da20bea67e328c1fc5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f86318d63c86568b312f39da20bea67e328c1fc5/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07ff8ab8855b4d5ce0d547cfe3b1bf03e5f427eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/07ff8ab8855b4d5ce0d547cfe3b1bf03e5f427eb", "html_url": "https://github.com/rust-lang/rust/commit/07ff8ab8855b4d5ce0d547cfe3b1bf03e5f427eb"}], "stats": {"total": 36, "additions": 19, "deletions": 17}, "files": [{"sha": "dab5da10db4215dc0adcf5fbb388d7674a2d75ae", "filename": "src/libcollectionstest/slice.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f86318d63c86568b312f39da20bea67e328c1fc5/src%2Flibcollectionstest%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f86318d63c86568b312f39da20bea67e328c1fc5/src%2Flibcollectionstest%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fslice.rs?ref=f86318d63c86568b312f39da20bea67e328c1fc5", "patch": "@@ -1088,7 +1088,7 @@ fn test_bytes_set_memory() {\n #[should_panic]\n fn test_overflow_does_not_cause_segfault() {\n     let mut v = vec![];\n-    v.reserve_exact(-1);\n+    v.reserve_exact(!0);\n     v.push(1);\n     v.push(2);\n }\n@@ -1097,7 +1097,7 @@ fn test_overflow_does_not_cause_segfault() {\n #[should_panic]\n fn test_overflow_does_not_cause_segfault_managed() {\n     let mut v = vec![Rc::new(1)];\n-    v.reserve_exact(-1);\n+    v.reserve_exact(!0);\n     v.push(Rc::new(2));\n }\n "}, {"sha": "ba12ff306e9b89dba04c107666553b416f426694", "filename": "src/libcoretest/fmt/num.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f86318d63c86568b312f39da20bea67e328c1fc5/src%2Flibcoretest%2Ffmt%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f86318d63c86568b312f39da20bea67e328c1fc5/src%2Flibcoretest%2Ffmt%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Ffmt%2Fnum.rs?ref=f86318d63c86568b312f39da20bea67e328c1fc5", "patch": "@@ -125,14 +125,14 @@ fn test_format_int_flags() {\n     assert!(format!(\"{:>8x}\", 10) == \"       a\");\n     assert!(format!(\"{:#08x}\", 10) == \"0x00000a\");\n     assert!(format!(\"{:08}\", -10) == \"-0000010\");\n-    assert!(format!(\"{:x}\", -1u8) == \"ff\");\n-    assert!(format!(\"{:X}\", -1u8) == \"FF\");\n-    assert!(format!(\"{:b}\", -1u8) == \"11111111\");\n-    assert!(format!(\"{:o}\", -1u8) == \"377\");\n-    assert!(format!(\"{:#x}\", -1u8) == \"0xff\");\n-    assert!(format!(\"{:#X}\", -1u8) == \"0xFF\");\n-    assert!(format!(\"{:#b}\", -1u8) == \"0b11111111\");\n-    assert!(format!(\"{:#o}\", -1u8) == \"0o377\");\n+    assert!(format!(\"{:x}\", !0u8) == \"ff\");\n+    assert!(format!(\"{:X}\", !0u8) == \"FF\");\n+    assert!(format!(\"{:b}\", !0u8) == \"11111111\");\n+    assert!(format!(\"{:o}\", !0u8) == \"377\");\n+    assert!(format!(\"{:#x}\", !0u8) == \"0xff\");\n+    assert!(format!(\"{:#X}\", !0u8) == \"0xFF\");\n+    assert!(format!(\"{:#b}\", !0u8) == \"0b11111111\");\n+    assert!(format!(\"{:#o}\", !0u8) == \"0o377\");\n }\n \n #[test]"}, {"sha": "bfc657f8784cc3a9c0d9fe9ac91b9ae4806cc0b9", "filename": "src/liblibc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f86318d63c86568b312f39da20bea67e328c1fc5/src%2Fliblibc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f86318d63c86568b312f39da20bea67e328c1fc5/src%2Fliblibc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc%2Flib.rs?ref=f86318d63c86568b312f39da20bea67e328c1fc5", "patch": "@@ -2865,7 +2865,7 @@ pub mod consts {\n             pub const MAP_FIXED : c_int = 0x0010;\n             pub const MAP_ANON : c_int = 0x0020;\n \n-            pub const MAP_FAILED : *mut c_void = -1 as *mut c_void;\n+            pub const MAP_FAILED : *mut c_void = !0 as *mut c_void;\n \n             pub const MCL_CURRENT : c_int = 0x0001;\n             pub const MCL_FUTURE : c_int = 0x0002;"}, {"sha": "432081063c50f7c6e8eba15f781e63c2cc7002e7", "filename": "src/librand/distributions/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f86318d63c86568b312f39da20bea67e328c1fc5/src%2Flibrand%2Fdistributions%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f86318d63c86568b312f39da20bea67e328c1fc5/src%2Flibrand%2Fdistributions%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrand%2Fdistributions%2Fmod.rs?ref=f86318d63c86568b312f39da20bea67e328c1fc5", "patch": "@@ -361,7 +361,7 @@ mod tests {\n     }\n     #[test] #[should_panic]\n     fn test_weighted_choice_weight_overflows() {\n-        let x = (-1) as usize / 2; // x + x + 2 is the overflow\n+        let x = (!0) as usize / 2; // x + x + 2 is the overflow\n         WeightedChoice::new(&mut [Weighted { weight: x, item: 0 },\n                                   Weighted { weight: 1, item: 1 },\n                                   Weighted { weight: x, item: 2 },"}, {"sha": "367bcbbe1d8a972add77a29907999a4cbfaed013", "filename": "src/librustc/middle/const_eval.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f86318d63c86568b312f39da20bea67e328c1fc5/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f86318d63c86568b312f39da20bea67e328c1fc5/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs?ref=f86318d63c86568b312f39da20bea67e328c1fc5", "patch": "@@ -396,7 +396,7 @@ pub fn const_int_checked_neg<'a>(\n pub fn const_uint_checked_neg<'a>(\n     a: u64, _e: &'a Expr, _opt_ety: Option<UintTy>) -> EvalResult {\n     // This always succeeds, and by definition, returns `(!a)+1`.\n-    Ok(const_uint(-a))\n+    Ok(const_uint((!a).wrapping_add(1)))\n }\n \n macro_rules! overflow_checking_body {"}, {"sha": "eabc51beb1285214c0ce5ba6a03395e5d1cd116a", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f86318d63c86568b312f39da20bea67e328c1fc5/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f86318d63c86568b312f39da20bea67e328c1fc5/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=f86318d63c86568b312f39da20bea67e328c1fc5", "patch": "@@ -946,7 +946,7 @@ mod tests {\n             let mut read_stream = check!(File::open(filename));\n             let mut read_buf = [0; 1028];\n             let read_str = match check!(read_stream.read(&mut read_buf)) {\n-                -1|0 => panic!(\"shouldn't happen\"),\n+                0 => panic!(\"shouldn't happen\"),\n                 n => str::from_utf8(&read_buf[..n]).unwrap().to_string()\n             };\n             assert_eq!(read_str, message);"}, {"sha": "509daa46ef3be1b509d54da638c27590b8d2dff5", "filename": "src/libstd/old_io/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f86318d63c86568b312f39da20bea67e328c1fc5/src%2Flibstd%2Fold_io%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f86318d63c86568b312f39da20bea67e328c1fc5/src%2Flibstd%2Fold_io%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fold_io%2Ffs.rs?ref=f86318d63c86568b312f39da20bea67e328c1fc5", "patch": "@@ -970,7 +970,7 @@ mod test {\n             let mut read_stream = File::open_mode(filename, Open, Read);\n             let mut read_buf = [0; 1028];\n             let read_str = match check!(read_stream.read(&mut read_buf)) {\n-                -1|0 => panic!(\"shouldn't happen\"),\n+                0 => panic!(\"shouldn't happen\"),\n                 n => str::from_utf8(&read_buf[..n]).unwrap().to_string()\n             };\n             assert_eq!(read_str, message);"}, {"sha": "3a41b74fb7911825dae0efdb316e9bb25e62716b", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f86318d63c86568b312f39da20bea67e328c1fc5/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f86318d63c86568b312f39da20bea67e328c1fc5/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=f86318d63c86568b312f39da20bea67e328c1fc5", "patch": "@@ -3048,7 +3048,7 @@ mod test {\n     #[test]\n     fn test_signed_int_to_string() {\n         let pos_int = ast::LitInt(42, ast::SignedIntLit(ast::TyI32, ast::Plus));\n-        let neg_int = ast::LitInt((-42) as u64, ast::SignedIntLit(ast::TyI32, ast::Minus));\n+        let neg_int = ast::LitInt((!42 + 1) as u64, ast::SignedIntLit(ast::TyI32, ast::Minus));\n         assert_eq!(format!(\"-{}\", lit_to_string(&codemap::dummy_spanned(pos_int))),\n                    lit_to_string(&codemap::dummy_spanned(neg_int)));\n     }"}, {"sha": "19b5f9b094c13aedda76aea046d1cc1479f7a389", "filename": "src/test/compile-fail/const-eval-overflow.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f86318d63c86568b312f39da20bea67e328c1fc5/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f86318d63c86568b312f39da20bea67e328c1fc5/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow.rs?ref=f86318d63c86568b312f39da20bea67e328c1fc5", "patch": "@@ -11,6 +11,7 @@\n #![feature(negate_unsigned)]\n \n #![allow(unused_imports)]\n+#![feature(negate_unsigned)]\n \n // Note: the relevant lint pass here runs before some of the constant\n // evaluation below (e.g. that performed by trans and llvm), so if you"}, {"sha": "1f70828e411ef1cfc472b6ed1884690939457c71", "filename": "src/test/compile-fail/lint-exceeding-bitshifts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f86318d63c86568b312f39da20bea67e328c1fc5/src%2Ftest%2Fcompile-fail%2Flint-exceeding-bitshifts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f86318d63c86568b312f39da20bea67e328c1fc5/src%2Ftest%2Fcompile-fail%2Flint-exceeding-bitshifts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-exceeding-bitshifts.rs?ref=f86318d63c86568b312f39da20bea67e328c1fc5", "patch": "@@ -12,7 +12,7 @@\n #![deny(exceeding_bitshifts)]\n #![allow(unused_variables)]\n #![allow(dead_code)]\n-#![feature(core)]\n+#![feature(core, negate_unsigned)]\n \n fn main() {\n       let n = 1u8 << 7;"}, {"sha": "798dc112b0af995b6b10a8b8d772b03e707e3190", "filename": "src/test/compile-fail/lint-type-limits.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f86318d63c86568b312f39da20bea67e328c1fc5/src%2Ftest%2Fcompile-fail%2Flint-type-limits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f86318d63c86568b312f39da20bea67e328c1fc5/src%2Ftest%2Fcompile-fail%2Flint-type-limits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-type-limits.rs?ref=f86318d63c86568b312f39da20bea67e328c1fc5", "patch": "@@ -10,6 +10,7 @@\n \n #![feature(negate_unsigned)]\n #![allow(dead_code)]\n+#![feature(negate_unsigned)]\n \n // compile-flags: -D unused-comparisons\n fn main() { }"}]}