{"sha": "5b40ce3f2d30280476bc30c6d9c90c3aa08e1445", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViNDBjZTNmMmQzMDI4MDQ3NmJjMzBjNmQ5YzkwYzNhYTA4ZTE0NDU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-11-24T16:07:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-11-24T16:07:11Z"}, "message": "Auto merge of #6374 - flip1995:rustup, r=flip1995\n\nRustup\n\nr? `@ghost`\n\nchangelog: [`panic`],[`unimplemented`],[`unreachable`],[`todo`] now also handle the `core::` version of those macros correctly.", "tree": {"sha": "bf93aef535ea6bf0136818c177b93181a22ede8f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf93aef535ea6bf0136818c177b93181a22ede8f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b40ce3f2d30280476bc30c6d9c90c3aa08e1445", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b40ce3f2d30280476bc30c6d9c90c3aa08e1445", "html_url": "https://github.com/rust-lang/rust/commit/5b40ce3f2d30280476bc30c6d9c90c3aa08e1445", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b40ce3f2d30280476bc30c6d9c90c3aa08e1445/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "295fe28057fedcfd9671a17880732c79ffa16d00", "url": "https://api.github.com/repos/rust-lang/rust/commits/295fe28057fedcfd9671a17880732c79ffa16d00", "html_url": "https://github.com/rust-lang/rust/commit/295fe28057fedcfd9671a17880732c79ffa16d00"}, {"sha": "c6a577ea116d06f22f44bfb6aa635780fc9ec174", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6a577ea116d06f22f44bfb6aa635780fc9ec174", "html_url": "https://github.com/rust-lang/rust/commit/c6a577ea116d06f22f44bfb6aa635780fc9ec174"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "e9c71e23a670b2c2997dd4e6f2ebbd7760dd157a", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5b40ce3f2d30280476bc30c6d9c90c3aa08e1445/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b40ce3f2d30280476bc30c6d9c90c3aa08e1445/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=5b40ce3f2d30280476bc30c6d9c90c3aa08e1445", "patch": "@@ -365,6 +365,9 @@ pub fn implements_trait<'tcx>(\n         return false;\n     }\n     let ty = cx.tcx.erase_regions(ty);\n+    if ty.has_escaping_bound_vars() {\n+        return false;\n+    }\n     let ty_params = cx.tcx.mk_substs(ty_params.iter());\n     cx.tcx.type_implements_trait((trait_id, ty, ty_params, cx.param_env))\n }"}, {"sha": "4502b0147a83ea785cdcff96c0c232b0f07968b8", "filename": "tests/ui/crashes/implements-trait.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5b40ce3f2d30280476bc30c6d9c90c3aa08e1445/tests%2Fui%2Fcrashes%2Fimplements-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b40ce3f2d30280476bc30c6d9c90c3aa08e1445/tests%2Fui%2Fcrashes%2Fimplements-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fimplements-trait.rs?ref=5b40ce3f2d30280476bc30c6d9c90c3aa08e1445", "patch": "@@ -0,0 +1,5 @@\n+#[allow(clippy::needless_borrowed_reference)]\n+fn main() {\n+    let mut v = Vec::<String>::new();\n+    let _ = v.iter_mut().filter(|&ref a| a.is_empty());\n+}"}, {"sha": "a01c6ef99db921386fb8ea8bdaac007cb804c08a", "filename": "tests/ui/logic_bug.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b40ce3f2d30280476bc30c6d9c90c3aa08e1445/tests%2Fui%2Flogic_bug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b40ce3f2d30280476bc30c6d9c90c3aa08e1445/tests%2Fui%2Flogic_bug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flogic_bug.rs?ref=5b40ce3f2d30280476bc30c6d9c90c3aa08e1445", "patch": "@@ -1,4 +1,4 @@\n-#![allow(unused, clippy::many_single_char_names)]\n+#![allow(unused, clippy::many_single_char_names, clippy::diverging_sub_expression)]\n #![warn(clippy::logic_bug)]\n \n fn main() {"}, {"sha": "971be26278f3c4276e2d8b0b1490cd62f4902d96", "filename": "tests/ui/nonminimal_bool.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b40ce3f2d30280476bc30c6d9c90c3aa08e1445/tests%2Fui%2Fnonminimal_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b40ce3f2d30280476bc30c6d9c90c3aa08e1445/tests%2Fui%2Fnonminimal_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnonminimal_bool.rs?ref=5b40ce3f2d30280476bc30c6d9c90c3aa08e1445", "patch": "@@ -1,4 +1,4 @@\n-#![allow(unused, clippy::many_single_char_names)]\n+#![allow(unused, clippy::many_single_char_names, clippy::diverging_sub_expression)]\n #![warn(clippy::nonminimal_bool)]\n \n fn main() {"}, {"sha": "907587402908a7bf09ec65e1bead808c9426239b", "filename": "tests/ui/nonminimal_bool_methods.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b40ce3f2d30280476bc30c6d9c90c3aa08e1445/tests%2Fui%2Fnonminimal_bool_methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b40ce3f2d30280476bc30c6d9c90c3aa08e1445/tests%2Fui%2Fnonminimal_bool_methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnonminimal_bool_methods.rs?ref=5b40ce3f2d30280476bc30c6d9c90c3aa08e1445", "patch": "@@ -1,4 +1,4 @@\n-#![allow(unused, clippy::many_single_char_names)]\n+#![allow(unused, clippy::many_single_char_names, clippy::diverging_sub_expression)]\n #![warn(clippy::nonminimal_bool)]\n \n fn methods_with_negation() {"}, {"sha": "c266f684a36f94f042c11e9491034efa40296446", "filename": "tests/ui/wildcard_enum_match_arm.fixed", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5b40ce3f2d30280476bc30c6d9c90c3aa08e1445/tests%2Fui%2Fwildcard_enum_match_arm.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/5b40ce3f2d30280476bc30c6d9c90c3aa08e1445/tests%2Fui%2Fwildcard_enum_match_arm.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_enum_match_arm.fixed?ref=5b40ce3f2d30280476bc30c6d9c90c3aa08e1445", "patch": "@@ -7,7 +7,8 @@\n     dead_code,\n     clippy::single_match,\n     clippy::wildcard_in_or_patterns,\n-    clippy::unnested_or_patterns\n+    clippy::unnested_or_patterns,\n+    clippy::diverging_sub_expression\n )]\n \n use std::io::ErrorKind;"}, {"sha": "2dbf726d5d07236801f9fee0441f3c2e6b15b12f", "filename": "tests/ui/wildcard_enum_match_arm.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5b40ce3f2d30280476bc30c6d9c90c3aa08e1445/tests%2Fui%2Fwildcard_enum_match_arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b40ce3f2d30280476bc30c6d9c90c3aa08e1445/tests%2Fui%2Fwildcard_enum_match_arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_enum_match_arm.rs?ref=5b40ce3f2d30280476bc30c6d9c90c3aa08e1445", "patch": "@@ -7,7 +7,8 @@\n     dead_code,\n     clippy::single_match,\n     clippy::wildcard_in_or_patterns,\n-    clippy::unnested_or_patterns\n+    clippy::unnested_or_patterns,\n+    clippy::diverging_sub_expression\n )]\n \n use std::io::ErrorKind;"}, {"sha": "0da2b68ba0b2f80fc6c3885bc6d4b6b5f14abd23", "filename": "tests/ui/wildcard_enum_match_arm.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5b40ce3f2d30280476bc30c6d9c90c3aa08e1445/tests%2Fui%2Fwildcard_enum_match_arm.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5b40ce3f2d30280476bc30c6d9c90c3aa08e1445/tests%2Fui%2Fwildcard_enum_match_arm.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_enum_match_arm.stderr?ref=5b40ce3f2d30280476bc30c6d9c90c3aa08e1445", "patch": "@@ -1,5 +1,5 @@\n error: wildcard match will miss any future added variants\n-  --> $DIR/wildcard_enum_match_arm.rs:38:9\n+  --> $DIR/wildcard_enum_match_arm.rs:39:9\n    |\n LL |         _ => eprintln!(\"Not red\"),\n    |         ^ help: try this: `Color::Green | Color::Blue | Color::Rgb(..) | Color::Cyan`\n@@ -11,25 +11,25 @@ LL | #![deny(clippy::wildcard_enum_match_arm)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: wildcard match will miss any future added variants\n-  --> $DIR/wildcard_enum_match_arm.rs:42:9\n+  --> $DIR/wildcard_enum_match_arm.rs:43:9\n    |\n LL |         _not_red => eprintln!(\"Not red\"),\n    |         ^^^^^^^^ help: try this: `_not_red @ Color::Green | _not_red @ Color::Blue | _not_red @ Color::Rgb(..) | _not_red @ Color::Cyan`\n \n error: wildcard match will miss any future added variants\n-  --> $DIR/wildcard_enum_match_arm.rs:46:9\n+  --> $DIR/wildcard_enum_match_arm.rs:47:9\n    |\n LL |         not_red => format!(\"{:?}\", not_red),\n    |         ^^^^^^^ help: try this: `not_red @ Color::Green | not_red @ Color::Blue | not_red @ Color::Rgb(..) | not_red @ Color::Cyan`\n \n error: wildcard match will miss any future added variants\n-  --> $DIR/wildcard_enum_match_arm.rs:62:9\n+  --> $DIR/wildcard_enum_match_arm.rs:63:9\n    |\n LL |         _ => \"No red\",\n    |         ^ help: try this: `Color::Red | Color::Green | Color::Blue | Color::Rgb(..) | Color::Cyan`\n \n error: match on non-exhaustive enum doesn't explicitly match all known variants\n-  --> $DIR/wildcard_enum_match_arm.rs:79:9\n+  --> $DIR/wildcard_enum_match_arm.rs:80:9\n    |\n LL |         _ => {},\n    |         ^ help: try this: `std::io::ErrorKind::PermissionDenied | std::io::ErrorKind::ConnectionRefused | std::io::ErrorKind::ConnectionReset | std::io::ErrorKind::ConnectionAborted | std::io::ErrorKind::NotConnected | std::io::ErrorKind::AddrInUse | std::io::ErrorKind::AddrNotAvailable | std::io::ErrorKind::BrokenPipe | std::io::ErrorKind::AlreadyExists | std::io::ErrorKind::WouldBlock | std::io::ErrorKind::InvalidInput | std::io::ErrorKind::InvalidData | std::io::ErrorKind::TimedOut | std::io::ErrorKind::WriteZero | std::io::ErrorKind::Interrupted | std::io::ErrorKind::Other | std::io::ErrorKind::UnexpectedEof | _`"}]}