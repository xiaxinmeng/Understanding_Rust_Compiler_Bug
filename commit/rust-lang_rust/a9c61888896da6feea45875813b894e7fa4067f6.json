{"sha": "a9c61888896da6feea45875813b894e7fa4067f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5YzYxODg4ODk2ZGE2ZmVlYTQ1ODc1ODEzYjg5NGU3ZmE0MDY3ZjY=", "commit": {"author": {"name": "Henry Boisdequin", "email": "65845077+henryboisdequin@users.noreply.github.com", "date": "2021-02-20T11:16:05Z"}, "committer": {"name": "Henry Boisdequin", "email": "65845077+henryboisdequin@users.noreply.github.com", "date": "2021-02-20T11:26:08Z"}, "message": "make `super_projection` take a `PlaceRef`", "tree": {"sha": "b32e76cb698bafb89a5605281d707cf4fc12157d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b32e76cb698bafb89a5605281d707cf4fc12157d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9c61888896da6feea45875813b894e7fa4067f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9c61888896da6feea45875813b894e7fa4067f6", "html_url": "https://github.com/rust-lang/rust/commit/a9c61888896da6feea45875813b894e7fa4067f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9c61888896da6feea45875813b894e7fa4067f6/comments", "author": {"login": "henryboisdequin", "id": 65845077, "node_id": "MDQ6VXNlcjY1ODQ1MDc3", "avatar_url": "https://avatars.githubusercontent.com/u/65845077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/henryboisdequin", "html_url": "https://github.com/henryboisdequin", "followers_url": "https://api.github.com/users/henryboisdequin/followers", "following_url": "https://api.github.com/users/henryboisdequin/following{/other_user}", "gists_url": "https://api.github.com/users/henryboisdequin/gists{/gist_id}", "starred_url": "https://api.github.com/users/henryboisdequin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/henryboisdequin/subscriptions", "organizations_url": "https://api.github.com/users/henryboisdequin/orgs", "repos_url": "https://api.github.com/users/henryboisdequin/repos", "events_url": "https://api.github.com/users/henryboisdequin/events{/privacy}", "received_events_url": "https://api.github.com/users/henryboisdequin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "henryboisdequin", "id": 65845077, "node_id": "MDQ6VXNlcjY1ODQ1MDc3", "avatar_url": "https://avatars.githubusercontent.com/u/65845077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/henryboisdequin", "html_url": "https://github.com/henryboisdequin", "followers_url": "https://api.github.com/users/henryboisdequin/followers", "following_url": "https://api.github.com/users/henryboisdequin/following{/other_user}", "gists_url": "https://api.github.com/users/henryboisdequin/gists{/gist_id}", "starred_url": "https://api.github.com/users/henryboisdequin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/henryboisdequin/subscriptions", "organizations_url": "https://api.github.com/users/henryboisdequin/orgs", "repos_url": "https://api.github.com/users/henryboisdequin/repos", "events_url": "https://api.github.com/users/henryboisdequin/events{/privacy}", "received_events_url": "https://api.github.com/users/henryboisdequin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ec4b060a793b7e04e87654b1d96f5d1fca23667", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ec4b060a793b7e04e87654b1d96f5d1fca23667", "html_url": "https://github.com/rust-lang/rust/commit/5ec4b060a793b7e04e87654b1d96f5d1fca23667"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "9530efaedbce44e2b5a1ce2aeec6f8cc00871ddc", "filename": "compiler/rustc_middle/src/mir/visit.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a9c61888896da6feea45875813b894e7fa4067f6/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9c61888896da6feea45875813b894e7fa4067f6/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs?ref=a9c61888896da6feea45875813b894e7fa4067f6", "patch": "@@ -1002,7 +1002,7 @@ macro_rules! visit_place_fns {\n             context: PlaceContext,\n             location: Location,\n         ) {\n-            self.super_projection(place_ref.local, place_ref.projection, context, location);\n+            self.super_projection(place_ref, context, location);\n         }\n \n         fn visit_projection_elem(\n@@ -1037,15 +1037,15 @@ macro_rules! visit_place_fns {\n \n         fn super_projection(\n             &mut self,\n-            local: Local,\n-            projection: &[PlaceElem<'tcx>],\n+            place_ref: PlaceRef<'tcx>,\n             context: PlaceContext,\n             location: Location,\n         ) {\n-            let mut cursor = projection;\n+            // FIXME: Use PlaceRef::iter_projections, once that exists.\n+            let mut cursor = place_ref.projection;\n             while let &[ref proj_base @ .., elem] = cursor {\n                 cursor = proj_base;\n-                self.visit_projection_elem(local, cursor, elem, context, location);\n+                self.visit_projection_elem(place_ref.local, cursor, elem, context, location);\n             }\n         }\n "}, {"sha": "d9abfec85c9e7643e4d68ad0118d05781dfc5b18", "filename": "compiler/rustc_mir/src/transform/simplify.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a9c61888896da6feea45875813b894e7fa4067f6/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fsimplify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9c61888896da6feea45875813b894e7fa4067f6/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fsimplify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fsimplify.rs?ref=a9c61888896da6feea45875813b894e7fa4067f6", "patch": "@@ -414,8 +414,7 @@ impl UsedLocals {\n         } else {\n             // A definition. Although, it still might use other locals for indexing.\n             self.super_projection(\n-                place.local,\n-                &place.projection,\n+                place.as_ref(),\n                 PlaceContext::MutatingUse(MutatingUseContext::Projection),\n                 location,\n             );"}]}