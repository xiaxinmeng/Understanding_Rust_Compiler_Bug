{"sha": "ce3636798bc9481ec712b84b5cad9973b7844425", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlMzYzNjc5OGJjOTQ4MWVjNzEyYjg0YjVjYWQ5OTczYjc4NDQ0MjU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-31T10:40:05Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-31T20:23:30Z"}, "message": "move macros to a separate crate", "tree": {"sha": "0f252e18492e50ce8eff8c0aacb249a763601dd0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f252e18492e50ce8eff8c0aacb249a763601dd0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce3636798bc9481ec712b84b5cad9973b7844425", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce3636798bc9481ec712b84b5cad9973b7844425", "html_url": "https://github.com/rust-lang/rust/commit/ce3636798bc9481ec712b84b5cad9973b7844425", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce3636798bc9481ec712b84b5cad9973b7844425/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a043a163c59dd2625727f7ff5466d586625a423", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a043a163c59dd2625727f7ff5466d586625a423", "html_url": "https://github.com/rust-lang/rust/commit/9a043a163c59dd2625727f7ff5466d586625a423"}], "stats": {"total": 73, "additions": 50, "deletions": 23}, "files": [{"sha": "b6367bf303f611f3a692578e9b88f55b23129198", "filename": "Cargo.lock", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ce3636798bc9481ec712b84b5cad9973b7844425/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/ce3636798bc9481ec712b84b5cad9973b7844425/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=ce3636798bc9481ec712b84b5cad9973b7844425", "patch": "@@ -940,6 +940,7 @@ dependencies = [\n  \"parking_lot 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"ra_arena 0.1.0\",\n  \"ra_db 0.1.0\",\n+ \"ra_macros 0.1.0\",\n  \"ra_syntax 0.1.0\",\n  \"relative-path 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1017,6 +1018,13 @@ dependencies = [\n  \"walkdir 2.2.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"ra_macros\"\n+version = \"0.1.0\"\n+dependencies = [\n+ \"smol_str 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"ra_syntax\"\n version = \"0.1.0\""}, {"sha": "f0988acc8020aed01af55807fdd96a14d34d5b51", "filename": "crates/ra_hir/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ce3636798bc9481ec712b84b5cad9973b7844425/crates%2Fra_hir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ce3636798bc9481ec712b84b5cad9973b7844425/crates%2Fra_hir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2FCargo.toml?ref=ce3636798bc9481ec712b84b5cad9973b7844425", "patch": "@@ -16,6 +16,7 @@ join_to_string = \"0.1.3\"\n ra_syntax = { path = \"../ra_syntax\" }\n ra_arena = { path = \"../ra_arena\" }\n ra_db = { path = \"../ra_db\" }\n+ra_macros = { path = \"../ra_macros\" }\n test_utils = { path = \"../test_utils\" }\n \n [dev-dependencies]"}, {"sha": "7e9aba3f26efc2987e4a1cd71df6eb4e6162a452", "filename": "crates/ra_hir/src/macros.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ce3636798bc9481ec712b84b5cad9973b7844425/crates%2Fra_hir%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce3636798bc9481ec712b84b5cad9973b7844425/crates%2Fra_hir%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmacros.rs?ref=ce3636798bc9481ec712b84b5cad9973b7844425", "patch": "@@ -1,8 +1,3 @@\n-#[allow(unused)]\n-mod tt;\n-#[allow(unused)]\n-mod mbe;\n-\n /// Machinery for macro expansion.\n ///\n /// One of the more complicated things about macros is managing the source code\n@@ -19,6 +14,7 @@ use ra_syntax::{\n     SyntaxKind::*,\n     ast::{self, NameOwner},\n };\n+use ra_macros::{tt, mbe};\n \n use crate::{HirDatabase, MacroCallId};\n "}, {"sha": "b4fdbfd184fae9102187df8495ed9f37c8aa422a", "filename": "crates/ra_macros/Cargo.toml", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ce3636798bc9481ec712b84b5cad9973b7844425/crates%2Fra_macros%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ce3636798bc9481ec712b84b5cad9973b7844425/crates%2Fra_macros%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_macros%2FCargo.toml?ref=ce3636798bc9481ec712b84b5cad9973b7844425", "patch": "@@ -0,0 +1,8 @@\n+[package]\n+edition = \"2018\"\n+name = \"ra_macros\"\n+version = \"0.1.0\"\n+authors = [\"Aleksey Kladov <aleksey.kladov@gmail.com>\"]\n+\n+[dependencies]\n+smol_str = \"0.1.9\""}, {"sha": "6063c06c20fe04ba51f5a9b7326e07307da0204b", "filename": "crates/ra_macros/src/lib.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ce3636798bc9481ec712b84b5cad9973b7844425/crates%2Fra_macros%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce3636798bc9481ec712b84b5cad9973b7844425/crates%2Fra_macros%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_macros%2Fsrc%2Flib.rs?ref=ce3636798bc9481ec712b84b5cad9973b7844425", "patch": "@@ -0,0 +1,14 @@\n+macro_rules! impl_froms {\n+    ($e:ident: $($v:ident), *) => {\n+        $(\n+            impl From<$v> for $e {\n+                fn from(it: $v) -> $e {\n+                    $e::$v(it)\n+                }\n+            }\n+        )*\n+    }\n+}\n+\n+pub mod tt;\n+pub mod mbe;"}, {"sha": "1aa6be736458e4b5028a789aa47e7d9a0fb9a31d", "filename": "crates/ra_macros/src/mbe.rs", "status": "renamed", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ce3636798bc9481ec712b84b5cad9973b7844425/crates%2Fra_macros%2Fsrc%2Fmbe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce3636798bc9481ec712b84b5cad9973b7844425/crates%2Fra_macros%2Fsrc%2Fmbe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_macros%2Fsrc%2Fmbe.rs?ref=ce3636798bc9481ec712b84b5cad9973b7844425", "patch": "@@ -1,9 +1,9 @@\n-use ra_syntax::SmolStr;\n+use smol_str::SmolStr;\n \n-use crate::macros::tt::{self, Delimiter};\n+use crate::tt::{self, Delimiter};\n \n #[derive(Debug)]\n-pub(crate) struct MacroRules {\n+pub struct MacroRules {\n     rules: Vec<Rule>,\n }\n \n@@ -71,7 +71,7 @@ struct Var {\n     kind: Option<SmolStr>,\n }\n \n-pub(crate) fn parse(tt: &tt::Subtree) -> Option<MacroRules> {\n+pub fn parse(tt: &tt::Subtree) -> Option<MacroRules> {\n     let mut parser = RulesParser::new(tt);\n     let mut rules = Vec::new();\n     while !parser.is_eof() {\n@@ -140,7 +140,7 @@ fn parse_var(p: &mut RulesParser) -> Option<Var> {\n fn parse_repeat(p: &mut RulesParser) -> Option<Repeat> {\n     let subtree = p.eat_subtree().unwrap();\n     let subtree = parse_subtree(subtree)?;\n-    let mut sep = p.eat_punct()?;\n+    let sep = p.eat_punct()?;\n     let (separator, rep) = match sep.char {\n         '*' | '+' | '?' => (None, sep.char),\n         char => (Some(Punct { char }), p.eat_punct()?.char),", "previous_filename": "crates/ra_hir/src/macros/mbe.rs"}, {"sha": "364eed9e659d236ae87394fe8722a92699d0708b", "filename": "crates/ra_macros/src/tt.rs", "status": "renamed", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/ce3636798bc9481ec712b84b5cad9973b7844425/crates%2Fra_macros%2Fsrc%2Ftt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce3636798bc9481ec712b84b5cad9973b7844425/crates%2Fra_macros%2Fsrc%2Ftt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_macros%2Fsrc%2Ftt.rs?ref=ce3636798bc9481ec712b84b5cad9973b7844425", "patch": "@@ -1,45 +1,45 @@\n-use ra_syntax::SmolStr;\n+use smol_str::SmolStr;\n \n #[derive(Debug)]\n-pub(crate) enum TokenTree {\n+pub enum TokenTree {\n     Leaf(Leaf),\n     Subtree(Subtree),\n }\n impl_froms!(TokenTree: Leaf, Subtree);\n \n #[derive(Debug)]\n-pub(crate) enum Leaf {\n+pub enum Leaf {\n     Literal(Literal),\n     Punct(Punct),\n     Ident(Ident),\n }\n impl_froms!(Leaf: Literal, Punct, Ident);\n \n #[derive(Debug)]\n-pub(crate) struct Subtree {\n-    pub(crate) delimiter: Delimiter,\n-    pub(crate) token_trees: Vec<TokenTree>,\n+pub struct Subtree {\n+    pub delimiter: Delimiter,\n+    pub token_trees: Vec<TokenTree>,\n }\n \n #[derive(Clone, Copy, Debug)]\n-pub(crate) enum Delimiter {\n+pub enum Delimiter {\n     Parenthesis,\n     Brace,\n     Bracket,\n     None,\n }\n \n #[derive(Debug)]\n-pub(crate) struct Literal {\n-    pub(crate) text: SmolStr,\n+pub struct Literal {\n+    pub text: SmolStr,\n }\n \n #[derive(Debug)]\n-pub(crate) struct Punct {\n-    pub(crate) char: char,\n+pub struct Punct {\n+    pub char: char,\n }\n \n #[derive(Debug)]\n-pub(crate) struct Ident {\n-    pub(crate) text: SmolStr,\n+pub struct Ident {\n+    pub text: SmolStr,\n }", "previous_filename": "crates/ra_hir/src/macros/tt.rs"}]}