{"sha": "8b8e70ba1d47ca76217980f0c4c6f55b60a06e06", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiOGU3MGJhMWQ0N2NhNzYyMTc5ODBmMGM0YzZmNTViNjBhMDZlMDY=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-23T05:02:34Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-25T08:17:34Z"}, "message": "std: Add doc(noinline) to the prelude reexports", "tree": {"sha": "b055e9883b9da440c7485ee5af50d9bccda272fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b055e9883b9da440c7485ee5af50d9bccda272fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b8e70ba1d47ca76217980f0c4c6f55b60a06e06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b8e70ba1d47ca76217980f0c4c6f55b60a06e06", "html_url": "https://github.com/rust-lang/rust/commit/8b8e70ba1d47ca76217980f0c4c6f55b60a06e06", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b8e70ba1d47ca76217980f0c4c6f55b60a06e06/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "712118b9c0030762fa8942c0ad52a652875bee02", "url": "https://api.github.com/repos/rust-lang/rust/commits/712118b9c0030762fa8942c0ad52a652875bee02", "html_url": "https://github.com/rust-lang/rust/commit/712118b9c0030762fa8942c0ad52a652875bee02"}], "stats": {"total": 91, "additions": 49, "deletions": 42}, "files": [{"sha": "ef05f3b167a68144767cc6ba6ee6c6c517b09570", "filename": "src/libstd/prelude.rs", "status": "modified", "additions": 49, "deletions": 42, "changes": 91, "blob_url": "https://github.com/rust-lang/rust/blob/8b8e70ba1d47ca76217980f0c4c6f55b60a06e06/src%2Flibstd%2Fprelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b8e70ba1d47ca76217980f0c4c6f55b60a06e06/src%2Flibstd%2Fprelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprelude.rs?ref=8b8e70ba1d47ca76217980f0c4c6f55b60a06e06", "patch": "@@ -38,55 +38,62 @@\n //! `drop`, `spawn`, and `channel`.\n \n // Reexported core operators\n-pub use kinds::{Copy, Send, Sized, Share};\n-pub use ops::{Add, Sub, Mul, Div, Rem, Neg, Not};\n-pub use ops::{BitAnd, BitOr, BitXor};\n-pub use ops::{Drop, Deref, DerefMut};\n-pub use ops::{Shl, Shr, Index};\n-pub use option::{Option, Some, None};\n-pub use result::{Result, Ok, Err};\n+#[doc(noinline)] pub use kinds::{Copy, Send, Sized, Share};\n+#[doc(noinline)] pub use ops::{Add, Sub, Mul, Div, Rem, Neg, Not};\n+#[doc(noinline)] pub use ops::{BitAnd, BitOr, BitXor};\n+#[doc(noinline)] pub use ops::{Drop, Deref, DerefMut};\n+#[doc(noinline)] pub use ops::{Shl, Shr, Index};\n+#[doc(noinline)] pub use option::{Option, Some, None};\n+#[doc(noinline)] pub use result::{Result, Ok, Err};\n \n // Reexported functions\n-pub use from_str::from_str;\n-pub use iter::range;\n-pub use mem::drop;\n+#[doc(noinline)] pub use from_str::from_str;\n+#[doc(noinline)] pub use iter::range;\n+#[doc(noinline)] pub use mem::drop;\n \n // Reexported types and traits\n \n-pub use ascii::{Ascii, AsciiCast, OwnedAsciiCast, AsciiStr, IntoBytes};\n-pub use c_str::ToCStr;\n-pub use char::Char;\n-pub use clone::Clone;\n-pub use cmp::{Eq, Ord, TotalEq, TotalOrd, Ordering, Less, Equal, Greater, Equiv};\n-pub use container::{Container, Mutable, Map, MutableMap, Set, MutableSet};\n-pub use iter::{FromIterator, Extendable};\n-pub use iter::{Iterator, DoubleEndedIterator, RandomAccessIterator, CloneableIterator};\n-pub use iter::{OrdIterator, MutableDoubleEndedIterator, ExactSize};\n-pub use num::{Num, NumCast, CheckedAdd, CheckedSub, CheckedMul};\n-pub use num::{Signed, Unsigned};\n-pub use num::{Primitive, Int, Float, FloatMath, ToPrimitive, FromPrimitive};\n-pub use option::Expect;\n-pub use owned::Box;\n-pub use path::{GenericPath, Path, PosixPath, WindowsPath};\n-pub use ptr::RawPtr;\n-pub use io::{Buffer, Writer, Reader, Seek};\n-pub use str::{Str, StrVector, StrSlice, OwnedStr, IntoMaybeOwned};\n-pub use str::{StrAllocating};\n-pub use to_str::{ToStr, IntoStr};\n-pub use tuple::{Tuple1, Tuple2, Tuple3, Tuple4};\n-pub use tuple::{Tuple5, Tuple6, Tuple7, Tuple8};\n-pub use tuple::{Tuple9, Tuple10, Tuple11, Tuple12};\n-pub use slice::{CloneableVector, ImmutableCloneableVector, MutableCloneableVector};\n-pub use slice::{ImmutableVector, MutableVector};\n-pub use slice::{ImmutableEqVector, ImmutableTotalOrdVector, MutableTotalOrdVector};\n-pub use slice::{Vector, VectorVector, OwnedVector, MutableVectorAllocating};\n-pub use string::String;\n-pub use vec::Vec;\n+#[doc(noinline)] pub use ascii::{Ascii, AsciiCast, OwnedAsciiCast, AsciiStr};\n+#[doc(noinline)] pub use ascii::IntoBytes;\n+#[doc(noinline)] pub use c_str::ToCStr;\n+#[doc(noinline)] pub use char::Char;\n+#[doc(noinline)] pub use clone::Clone;\n+#[doc(noinline)] pub use cmp::{Eq, Ord, TotalEq, TotalOrd};\n+#[doc(noinline)] pub use cmp::{Ordering, Less, Equal, Greater, Equiv};\n+#[doc(noinline)] pub use container::{Container, Mutable, Map, MutableMap};\n+#[doc(noinline)] pub use container::{Set, MutableSet};\n+#[doc(noinline)] pub use iter::{FromIterator, Extendable, ExactSize};\n+#[doc(noinline)] pub use iter::{Iterator, DoubleEndedIterator};\n+#[doc(noinline)] pub use iter::{RandomAccessIterator, CloneableIterator};\n+#[doc(noinline)] pub use iter::{OrdIterator, MutableDoubleEndedIterator};\n+#[doc(noinline)] pub use num::{Num, NumCast, CheckedAdd, CheckedSub, CheckedMul};\n+#[doc(noinline)] pub use num::{Signed, Unsigned, Primitive, Int, Float};\n+#[doc(noinline)] pub use num::{FloatMath, ToPrimitive, FromPrimitive};\n+#[doc(noinline)] pub use option::Expect;\n+#[doc(noinline)] pub use owned::Box;\n+#[doc(noinline)] pub use path::{GenericPath, Path, PosixPath, WindowsPath};\n+#[doc(noinline)] pub use ptr::RawPtr;\n+#[doc(noinline)] pub use io::{Buffer, Writer, Reader, Seek};\n+#[doc(noinline)] pub use str::{Str, StrVector, StrSlice, OwnedStr};\n+#[doc(noinline)] pub use str::{IntoMaybeOwned, StrAllocating};\n+#[doc(noinline)] pub use to_str::{ToStr, IntoStr};\n+#[doc(noinline)] pub use tuple::{Tuple1, Tuple2, Tuple3, Tuple4};\n+#[doc(noinline)] pub use tuple::{Tuple5, Tuple6, Tuple7, Tuple8};\n+#[doc(noinline)] pub use tuple::{Tuple9, Tuple10, Tuple11, Tuple12};\n+#[doc(noinline)] pub use slice::{CloneableVector, ImmutableCloneableVector};\n+#[doc(noinline)] pub use slice::{MutableCloneableVector, MutableTotalOrdVector};\n+#[doc(noinline)] pub use slice::{ImmutableVector, MutableVector};\n+#[doc(noinline)] pub use slice::{ImmutableEqVector, ImmutableTotalOrdVector};\n+#[doc(noinline)] pub use slice::{Vector, VectorVector, OwnedVector};\n+#[doc(noinline)] pub use slice::MutableVectorAllocating;\n+#[doc(noinline)] pub use string::String;\n+#[doc(noinline)] pub use vec::Vec;\n \n // Reexported runtime types\n-pub use comm::{sync_channel, channel, SyncSender, Sender, Receiver};\n-pub use task::spawn;\n+#[doc(noinline)] pub use comm::{sync_channel, channel};\n+#[doc(noinline)] pub use comm::{SyncSender, Sender, Receiver};\n+#[doc(noinline)] pub use task::spawn;\n \n // Reexported statics\n #[cfg(not(test))]\n-pub use gc::GC;\n+#[doc(noinline)] pub use gc::GC;"}]}