{"sha": "40558c329c5605cf5329399725f68e302538d203", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwNTU4YzMyOWM1NjA1Y2Y1MzI5Mzk5NzI1ZjY4ZTMwMjUzOGQyMDM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-06T06:03:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-06T06:03:11Z"}, "message": "Rollup merge of #66103 - smaeul:patch/thumb-musl, r=nagisa\n\nAdd target thumbv7neon-unknown-linux-musleabihf\n\nThis is a copy of thumbv7neon-unknown-linux-gnueabihf with musl changes\nmerged from armv7-unknown-linux-musleabihf. This appears to have been\nmissed when adding the other ARMv7-A thumb targets.", "tree": {"sha": "28e4574718f4c835fc4b32299264b903312a42d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28e4574718f4c835fc4b32299264b903312a42d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40558c329c5605cf5329399725f68e302538d203", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdwmIfCRBK7hj4Ov3rIwAAdHIIAEnERQJIsLGHoke8uhMBivLb\nqzHpWXMZ1YR8z5GKHZ7BgypZDcxp95jsi/ofOZY2HBevVIWutGJ1ADn/eyeK9wEe\nYKZwS0rsavprCar761U4GmG0BQbZSyUTB2r1+OF+QyHpkqLj3oWwcvRGx9nK/dta\nailjsE5hwRZW2ftFD5AXLhyLI9yxRsx3T3rvAj38xNs6v3pw9YPgH39Cp3xh/HqN\nmMUnKxu12m1kG072+l0+kApJOc9rjGkfGK1KvFBes/C9g74elxtyH8ui0PADW86s\n/YciBxU9avwMJZ4Kqw8K3Llmyaxpgd1fUscvOdKHRTSm6EX+g36oT1/VftQaaYY=\n=P/kg\n-----END PGP SIGNATURE-----\n", "payload": "tree 28e4574718f4c835fc4b32299264b903312a42d8\nparent 828a3eef6605e3ca91835890026382798b14ac6c\nparent d01ebbb34b3f64099174c404b46f1f660bebbb6f\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1573020191 +0100\ncommitter GitHub <noreply@github.com> 1573020191 +0100\n\nRollup merge of #66103 - smaeul:patch/thumb-musl, r=nagisa\n\nAdd target thumbv7neon-unknown-linux-musleabihf\n\nThis is a copy of thumbv7neon-unknown-linux-gnueabihf with musl changes\nmerged from armv7-unknown-linux-musleabihf. This appears to have been\nmissed when adding the other ARMv7-A thumb targets.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40558c329c5605cf5329399725f68e302538d203", "html_url": "https://github.com/rust-lang/rust/commit/40558c329c5605cf5329399725f68e302538d203", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40558c329c5605cf5329399725f68e302538d203/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "828a3eef6605e3ca91835890026382798b14ac6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/828a3eef6605e3ca91835890026382798b14ac6c", "html_url": "https://github.com/rust-lang/rust/commit/828a3eef6605e3ca91835890026382798b14ac6c"}, {"sha": "d01ebbb34b3f64099174c404b46f1f660bebbb6f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d01ebbb34b3f64099174c404b46f1f660bebbb6f", "html_url": "https://github.com/rust-lang/rust/commit/d01ebbb34b3f64099174c404b46f1f660bebbb6f"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "4cd2f13d09cbd3d0d6eff7c7865ce33bfc228a03", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/40558c329c5605cf5329399725f68e302538d203/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40558c329c5605cf5329399725f68e302538d203/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=40558c329c5605cf5329399725f68e302538d203", "patch": "@@ -362,6 +362,7 @@ supported_targets! {\n     (\"armv7-unknown-linux-gnueabi\", armv7_unknown_linux_gnueabi),\n     (\"armv7-unknown-linux-gnueabihf\", armv7_unknown_linux_gnueabihf),\n     (\"thumbv7neon-unknown-linux-gnueabihf\", thumbv7neon_unknown_linux_gnueabihf),\n+    (\"thumbv7neon-unknown-linux-musleabihf\", thumbv7neon_unknown_linux_musleabihf),\n     (\"armv7-unknown-linux-musleabi\", armv7_unknown_linux_musleabi),\n     (\"armv7-unknown-linux-musleabihf\", armv7_unknown_linux_musleabihf),\n     (\"aarch64-unknown-linux-gnu\", aarch64_unknown_linux_gnu),"}, {"sha": "1270f391731b2db1fd1f7426870f3d2f5b37c822", "filename": "src/librustc_target/spec/thumbv7neon_unknown_linux_musleabihf.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/40558c329c5605cf5329399725f68e302538d203/src%2Flibrustc_target%2Fspec%2Fthumbv7neon_unknown_linux_musleabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40558c329c5605cf5329399725f68e302538d203/src%2Flibrustc_target%2Fspec%2Fthumbv7neon_unknown_linux_musleabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fthumbv7neon_unknown_linux_musleabihf.rs?ref=40558c329c5605cf5329399725f68e302538d203", "patch": "@@ -0,0 +1,37 @@\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+\n+// This target is for musl Linux on ARMv7 with thumb mode enabled\n+// (for consistency with Android and Debian-based distributions)\n+// and with NEON unconditionally enabled and, therefore, with 32 FPU\n+// registers enabled as well. See section A2.6.2 on page A2-56 in\n+// https://static.docs.arm.com/ddi0406/cd/DDI0406C_d_armv7ar_arm.pdf\n+\n+pub fn target() -> TargetResult {\n+    let base = super::linux_musl_base::opts();\n+    Ok(Target {\n+        // It's important we use \"gnueabihf\" and not \"musleabihf\" here. LLVM\n+        // uses it to determine the calling convention and float ABI, and LLVM\n+        // doesn't support the \"musleabihf\" value.\n+        llvm_target: \"armv7-unknown-linux-gnueabihf\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"32\".to_string(),\n+        target_c_int_width: \"32\".to_string(),\n+        data_layout: \"e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64\".to_string(),\n+        arch: \"arm\".to_string(),\n+        target_os: \"linux\".to_string(),\n+        target_env: \"musl\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n+        linker_flavor: LinkerFlavor::Gcc,\n+\n+        // Most of these settings are copied from the thumbv7neon_unknown_linux_gnueabihf\n+        // target.\n+        options: TargetOptions {\n+            features: \"+v7,+thumb-mode,+thumb2,+vfp3,+neon\".to_string(),\n+            cpu: \"generic\".to_string(),\n+            max_atomic_width: Some(64),\n+            abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"\\u{1}mcount\".to_string(),\n+            .. base\n+        }\n+    })\n+}"}]}