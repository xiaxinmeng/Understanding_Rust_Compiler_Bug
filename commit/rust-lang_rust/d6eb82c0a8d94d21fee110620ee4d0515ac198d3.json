{"sha": "d6eb82c0a8d94d21fee110620ee4d0515ac198d3", "node_id": "C_kwDOAAsO6NoAKGQ2ZWI4MmMwYThkOTRkMjFmZWUxMTA2MjBlZTRkMDUxNWFjMTk4ZDM", "commit": {"author": {"name": "Samuel E. Moelius III", "email": "sam@moeli.us", "date": "2022-03-30T16:32:07Z"}, "committer": {"name": "Samuel E. Moelius III", "email": "sam@moeli.us", "date": "2022-03-30T16:40:53Z"}, "message": "Move `crate_in_macro_def` to suspicious", "tree": {"sha": "97256d18b6e31d23c59e70f59b62f78b81680aab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97256d18b6e31d23c59e70f59b62f78b81680aab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6eb82c0a8d94d21fee110620ee4d0515ac198d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6eb82c0a8d94d21fee110620ee4d0515ac198d3", "html_url": "https://github.com/rust-lang/rust/commit/d6eb82c0a8d94d21fee110620ee4d0515ac198d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6eb82c0a8d94d21fee110620ee4d0515ac198d3/comments", "author": {"login": "smoelius", "id": 35515885, "node_id": "MDQ6VXNlcjM1NTE1ODg1", "avatar_url": "https://avatars.githubusercontent.com/u/35515885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smoelius", "html_url": "https://github.com/smoelius", "followers_url": "https://api.github.com/users/smoelius/followers", "following_url": "https://api.github.com/users/smoelius/following{/other_user}", "gists_url": "https://api.github.com/users/smoelius/gists{/gist_id}", "starred_url": "https://api.github.com/users/smoelius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smoelius/subscriptions", "organizations_url": "https://api.github.com/users/smoelius/orgs", "repos_url": "https://api.github.com/users/smoelius/repos", "events_url": "https://api.github.com/users/smoelius/events{/privacy}", "received_events_url": "https://api.github.com/users/smoelius/received_events", "type": "User", "site_admin": false}, "committer": {"login": "smoelius", "id": 35515885, "node_id": "MDQ6VXNlcjM1NTE1ODg1", "avatar_url": "https://avatars.githubusercontent.com/u/35515885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smoelius", "html_url": "https://github.com/smoelius", "followers_url": "https://api.github.com/users/smoelius/followers", "following_url": "https://api.github.com/users/smoelius/following{/other_user}", "gists_url": "https://api.github.com/users/smoelius/gists{/gist_id}", "starred_url": "https://api.github.com/users/smoelius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smoelius/subscriptions", "organizations_url": "https://api.github.com/users/smoelius/orgs", "repos_url": "https://api.github.com/users/smoelius/repos", "events_url": "https://api.github.com/users/smoelius/events{/privacy}", "received_events_url": "https://api.github.com/users/smoelius/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75dc406e84122363c94e1faaae37472d23d20c29", "url": "https://api.github.com/repos/rust-lang/rust/commits/75dc406e84122363c94e1faaae37472d23d20c29", "html_url": "https://github.com/rust-lang/rust/commit/75dc406e84122363c94e1faaae37472d23d20c29"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "fc141b4a6e3afcc3874b5c776be3cfb88303bdfc", "filename": "clippy_lints/src/crate_in_macro_def.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d6eb82c0a8d94d21fee110620ee4d0515ac198d3/clippy_lints%2Fsrc%2Fcrate_in_macro_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6eb82c0a8d94d21fee110620ee4d0515ac198d3/clippy_lints%2Fsrc%2Fcrate_in_macro_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcrate_in_macro_def.rs?ref=d6eb82c0a8d94d21fee110620ee4d0515ac198d3", "patch": "@@ -45,7 +45,7 @@ declare_clippy_lint! {\n     /// ```\n     #[clippy::version = \"1.61.0\"]\n     pub CRATE_IN_MACRO_DEF,\n-    correctness,\n+    suspicious,\n     \"using `crate` in a macro definition\"\n }\n declare_lint_pass!(CrateInMacroDef => [CRATE_IN_MACRO_DEF]);"}, {"sha": "df63f84463dba27345e320748c0b8117dff9d840", "filename": "clippy_lints/src/lib.register_correctness.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d6eb82c0a8d94d21fee110620ee4d0515ac198d3/clippy_lints%2Fsrc%2Flib.register_correctness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6eb82c0a8d94d21fee110620ee4d0515ac198d3/clippy_lints%2Fsrc%2Flib.register_correctness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_correctness.rs?ref=d6eb82c0a8d94d21fee110620ee4d0515ac198d3", "patch": "@@ -16,7 +16,6 @@ store.register_group(true, \"clippy::correctness\", Some(\"clippy_correctness\"), ve\n     LintId::of(casts::CAST_SLICE_DIFFERENT_SIZES),\n     LintId::of(copies::IFS_SAME_COND),\n     LintId::of(copies::IF_SAME_THEN_ELSE),\n-    LintId::of(crate_in_macro_def::CRATE_IN_MACRO_DEF),\n     LintId::of(derive::DERIVE_HASH_XOR_EQ),\n     LintId::of(derive::DERIVE_ORD_XOR_PARTIAL_ORD),\n     LintId::of(drop_forget_ref::DROP_COPY),"}, {"sha": "0707e4f8f3d1053c8f19bc9ed249c3539f5bb478", "filename": "clippy_lints/src/lib.register_suspicious.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d6eb82c0a8d94d21fee110620ee4d0515ac198d3/clippy_lints%2Fsrc%2Flib.register_suspicious.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6eb82c0a8d94d21fee110620ee4d0515ac198d3/clippy_lints%2Fsrc%2Flib.register_suspicious.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_suspicious.rs?ref=d6eb82c0a8d94d21fee110620ee4d0515ac198d3", "patch": "@@ -9,6 +9,7 @@ store.register_group(true, \"clippy::suspicious\", Some(\"clippy_suspicious\"), vec!\n     LintId::of(await_holding_invalid::AWAIT_HOLDING_REFCELL_REF),\n     LintId::of(casts::CAST_ENUM_CONSTRUCTOR),\n     LintId::of(casts::CAST_ENUM_TRUNCATION),\n+    LintId::of(crate_in_macro_def::CRATE_IN_MACRO_DEF),\n     LintId::of(eval_order_dependence::EVAL_ORDER_DEPENDENCE),\n     LintId::of(float_equality_without_abs::FLOAT_EQUALITY_WITHOUT_ABS),\n     LintId::of(format_impl::PRINT_IN_FORMAT_IMPL),"}]}