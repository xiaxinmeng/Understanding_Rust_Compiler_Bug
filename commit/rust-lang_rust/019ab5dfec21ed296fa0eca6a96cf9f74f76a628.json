{"sha": "019ab5dfec21ed296fa0eca6a96cf9f74f76a628", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxOWFiNWRmZWMyMWVkMjk2ZmEwZWNhNmE5NmNmOWY3NGY3NmE2Mjg=", "commit": {"author": {"name": "petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2015-05-30T09:15:19Z"}, "committer": {"name": "petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2015-05-30T09:15:19Z"}, "message": "Deprecate UnsafeCell::value", "tree": {"sha": "448ecaa99d3f8198c9afb5123ddbda0516cf3f3c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/448ecaa99d3f8198c9afb5123ddbda0516cf3f3c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/019ab5dfec21ed296fa0eca6a96cf9f74f76a628", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/019ab5dfec21ed296fa0eca6a96cf9f74f76a628", "html_url": "https://github.com/rust-lang/rust/commit/019ab5dfec21ed296fa0eca6a96cf9f74f76a628", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/019ab5dfec21ed296fa0eca6a96cf9f74f76a628/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "efebe45cc0f3265ee8bb6396952e93a2004128c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/efebe45cc0f3265ee8bb6396952e93a2004128c8", "html_url": "https://github.com/rust-lang/rust/commit/efebe45cc0f3265ee8bb6396952e93a2004128c8"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "9c9cf14b3937317c0cec3717b24590cc199ce1bb", "filename": "src/libcore/cell.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/019ab5dfec21ed296fa0eca6a96cf9f74f76a628/src%2Flibcore%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/019ab5dfec21ed296fa0eca6a96cf9f74f76a628/src%2Flibcore%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcell.rs?ref=019ab5dfec21ed296fa0eca6a96cf9f74f76a628", "patch": "@@ -641,6 +641,8 @@ pub struct UnsafeCell<T: ?Sized> {\n     ///\n     /// This field should not be accessed directly, it is made public for static\n     /// initializers.\n+    #[deprecated(since = \"1.2.0\", reason = \"use `get` to access the wrapped \\\n+        value or `new` to initialize `UnsafeCell` in statics\")]\n     #[unstable(feature = \"core\")]\n     pub value: T,\n }\n@@ -664,6 +666,7 @@ impl<T> UnsafeCell<T> {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub const fn new(value: T) -> UnsafeCell<T> {\n+        #![allow(deprecated)]\n         UnsafeCell { value: value }\n     }\n \n@@ -685,7 +688,10 @@ impl<T> UnsafeCell<T> {\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub unsafe fn into_inner(self) -> T { self.value }\n+    pub unsafe fn into_inner(self) -> T {\n+        #![allow(deprecated)]\n+        self.value\n+    }\n }\n \n impl<T: ?Sized> UnsafeCell<T> {\n@@ -705,6 +711,7 @@ impl<T: ?Sized> UnsafeCell<T> {\n     pub fn get(&self) -> *mut T {\n         // FIXME(#23542) Replace with type ascription.\n         #![allow(trivial_casts)]\n+        #![allow(deprecated)]\n         &self.value as *const T as *mut T\n     }\n }"}]}