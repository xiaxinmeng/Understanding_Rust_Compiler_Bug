{"sha": "052651dd134c6016108c5fc50bfe4196012a6a8f", "node_id": "C_kwDOAAsO6NoAKDA1MjY1MWRkMTM0YzYwMTYxMDhjNWZjNTBiZmU0MTk2MDEyYTZhOGY", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-05T20:53:48Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-09T11:27:29Z"}, "message": "fix cranelift and gcc backends", "tree": {"sha": "437f3bc4a29001123c24acf20495ee55fbe1b5d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/437f3bc4a29001123c24acf20495ee55fbe1b5d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/052651dd134c6016108c5fc50bfe4196012a6a8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/052651dd134c6016108c5fc50bfe4196012a6a8f", "html_url": "https://github.com/rust-lang/rust/commit/052651dd134c6016108c5fc50bfe4196012a6a8f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/052651dd134c6016108c5fc50bfe4196012a6a8f/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a422b421597202554a76bee32d07b54a15631681", "url": "https://api.github.com/repos/rust-lang/rust/commits/a422b421597202554a76bee32d07b54a15631681", "html_url": "https://github.com/rust-lang/rust/commit/a422b421597202554a76bee32d07b54a15631681"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "f90ad5349702d6b48a1f94e40d6379aed6bae715", "filename": "compiler/rustc_codegen_cranelift/src/constant.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/052651dd134c6016108c5fc50bfe4196012a6a8f/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/052651dd134c6016108c5fc50bfe4196012a6a8f/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fconstant.rs?ref=052651dd134c6016108c5fc50bfe4196012a6a8f", "patch": "@@ -167,6 +167,7 @@ pub(crate) fn codegen_const_value<'tcx>(\n     }\n \n     match const_val {\n+        ConstValue::ZST => unreachable!(), // we already handles ZST above\n         ConstValue::Scalar(x) => match x {\n             Scalar::Int(int) => {\n                 if fx.clif_type(layout.ty).is_some() {"}, {"sha": "fc391f53f18e7ad9d6d5653fad7d26a944a3f2eb", "filename": "compiler/rustc_codegen_gcc/src/common.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/052651dd134c6016108c5fc50bfe4196012a6a8f/compiler%2Frustc_codegen_gcc%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/052651dd134c6016108c5fc50bfe4196012a6a8f/compiler%2Frustc_codegen_gcc%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_gcc%2Fsrc%2Fcommon.rs?ref=052651dd134c6016108c5fc50bfe4196012a6a8f", "patch": "@@ -9,7 +9,6 @@ use rustc_codegen_ssa::traits::{\n     StaticMethods,\n };\n use rustc_middle::mir::Mutability;\n-use rustc_middle::ty::ScalarInt;\n use rustc_middle::ty::layout::{TyAndLayout, LayoutOf};\n use rustc_middle::mir::interpret::{ConstAllocation, GlobalAlloc, Scalar};\n use rustc_target::abi::{self, HasDataLayout, Pointer, Size};\n@@ -159,13 +158,13 @@ impl<'gcc, 'tcx> ConstMethods<'tcx> for CodegenCx<'gcc, 'tcx> {\n         None\n     }\n \n+    fn zst_to_backend(&self, _ty: Type<'gcc>) -> RValue<'gcc> {\n+        self.const_undef(self.type_ix(0))\n+    }\n+\n     fn scalar_to_backend(&self, cv: Scalar, layout: abi::Scalar, ty: Type<'gcc>) -> RValue<'gcc> {\n         let bitsize = if layout.is_bool() { 1 } else { layout.size(self).bits() };\n         match cv {\n-            Scalar::Int(ScalarInt::ZST) => {\n-                assert_eq!(0, layout.size(self).bytes());\n-                self.const_undef(self.type_ix(0))\n-            }\n             Scalar::Int(int) => {\n                 let data = int.assert_bits(layout.size(self));\n "}]}