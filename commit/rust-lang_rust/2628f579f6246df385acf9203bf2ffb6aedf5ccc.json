{"sha": "2628f579f6246df385acf9203bf2ffb6aedf5ccc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2MjhmNTc5ZjYyNDZkZjM4NWFjZjkyMDNiZjJmZmI2YWVkZjVjY2M=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-08T09:06:45Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-08T09:06:45Z"}, "message": "Auto merge of #63371 - Centril:rollup-k0xtdcz, r=Centril\n\nRollup of 7 pull requests\n\nSuccessful merges:\n\n - #62994 (Add test for #43398)\n - #63259 (Add tests for some issues)\n - #63327 (doc: Reword deprecation message of MetadataExt::as_raw_stat)\n - #63331 (Test conditional initialization validation in async fns)\n - #63334 (Update to rustc-guide that passes toolstate)\n - #63353 (Update books)\n - #63360 (Use consistent capitalization in -C/-Z help)\n\nFailed merges:\n\nr? @ghost", "tree": {"sha": "fd559808122d5b25cf55beb791a95cdadbabfa1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd559808122d5b25cf55beb791a95cdadbabfa1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2628f579f6246df385acf9203bf2ffb6aedf5ccc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2628f579f6246df385acf9203bf2ffb6aedf5ccc", "html_url": "https://github.com/rust-lang/rust/commit/2628f579f6246df385acf9203bf2ffb6aedf5ccc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2628f579f6246df385acf9203bf2ffb6aedf5ccc/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04523404bcae5904fe29a54122040a7101f5c652", "url": "https://api.github.com/repos/rust-lang/rust/commits/04523404bcae5904fe29a54122040a7101f5c652", "html_url": "https://github.com/rust-lang/rust/commit/04523404bcae5904fe29a54122040a7101f5c652"}, {"sha": "83fbf620a009e3fc998bb08098655dcfb7ff809b", "url": "https://api.github.com/repos/rust-lang/rust/commits/83fbf620a009e3fc998bb08098655dcfb7ff809b", "html_url": "https://github.com/rust-lang/rust/commit/83fbf620a009e3fc998bb08098655dcfb7ff809b"}], "stats": {"total": 142, "additions": 127, "deletions": 15}, "files": [{"sha": "e58bc4ca104e890ac56af846877c874c432a64b5", "filename": "src/doc/edition-guide", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fedition-guide?ref=2628f579f6246df385acf9203bf2ffb6aedf5ccc", "patch": "@@ -1 +1 @@\n-Subproject commit f6c8b92d4e63edd28e862be952f33861f35956f8\n+Subproject commit e58bc4ca104e890ac56af846877c874c432a64b5"}, {"sha": "c5da1e11915d3f28266168baaf55822f7e3fe999", "filename": "src/doc/embedded-book", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fembedded-book?ref=2628f579f6246df385acf9203bf2ffb6aedf5ccc", "patch": "@@ -1 +1 @@\n-Subproject commit ff334e74fdb9f197e621efa6d7c3105be892e888\n+Subproject commit c5da1e11915d3f28266168baaf55822f7e3fe999"}, {"sha": "8a7d05615e5bc0a7fb961b4919c44f5221ee54da", "filename": "src/doc/nomicon", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fnomicon?ref=2628f579f6246df385acf9203bf2ffb6aedf5ccc", "patch": "@@ -1 +1 @@\n-Subproject commit b7f0aba2f88a8feade70595efcfa3438e54e96c0\n+Subproject commit 8a7d05615e5bc0a7fb961b4919c44f5221ee54da"}, {"sha": "b4b3536839042a6743fc76f0d9ad2a812020aeaa", "filename": "src/doc/reference", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference?ref=2628f579f6246df385acf9203bf2ffb6aedf5ccc", "patch": "@@ -1 +1 @@\n-Subproject commit 8e7d614303b0dec7492e048e63855fcd3b944ec8\n+Subproject commit b4b3536839042a6743fc76f0d9ad2a812020aeaa"}, {"sha": "f2c15ba5ee89ae9469a2cf60494977749901d764", "filename": "src/doc/rust-by-example", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frust-by-example?ref=2628f579f6246df385acf9203bf2ffb6aedf5ccc", "patch": "@@ -1 +1 @@\n-Subproject commit e3679e214d8db44586aca9b20aa27517007d1923\n+Subproject commit f2c15ba5ee89ae9469a2cf60494977749901d764"}, {"sha": "6f4ba673ff9d4613e98415bc095347a6a0031e9c", "filename": "src/doc/rustc-guide", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc-guide?ref=2628f579f6246df385acf9203bf2ffb6aedf5ccc", "patch": "@@ -1 +1 @@\n-Subproject commit b5a2b9353c661000378415ecfeb757eb7df42d66\n+Subproject commit 6f4ba673ff9d4613e98415bc095347a6a0031e9c"}, {"sha": "3536b2aa8fffe2831ea1dc038af7f6232bf9f8f5", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2628f579f6246df385acf9203bf2ffb6aedf5ccc/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2628f579f6246df385acf9203bf2ffb6aedf5ccc/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=2628f579f6246df385acf9203bf2ffb6aedf5ccc", "patch": "@@ -1155,7 +1155,7 @@ options! {CodegenOptions, CodegenSetter, basic_codegen_options,\n     passes: Vec<String> = (Vec::new(), parse_list, [TRACKED],\n         \"a list of extra LLVM passes to run (space separated)\"),\n     llvm_args: Vec<String> = (Vec::new(), parse_list, [TRACKED],\n-        \"a list of arguments to pass to llvm (space separated)\"),\n+        \"a list of arguments to pass to LLVM (space separated)\"),\n     save_temps: bool = (false, parse_bool, [UNTRACKED],\n         \"save all temporary output files during compilation\"),\n     rpath: bool = (false, parse_bool, [UNTRACKED],\n@@ -1208,7 +1208,7 @@ options! {CodegenOptions, CodegenSetter, basic_codegen_options,\n     default_linker_libraries: Option<bool> = (None, parse_opt_bool, [UNTRACKED],\n         \"allow the linker to link its default libraries\"),\n     linker_flavor: Option<LinkerFlavor> = (None, parse_linker_flavor, [UNTRACKED],\n-                                           \"Linker flavor\"),\n+                                           \"linker flavor\"),\n     linker_plugin_lto: LinkerPluginLto = (LinkerPluginLto::Disabled,\n         parse_linker_plugin_lto, [TRACKED],\n         \"generate build artifacts that are compatible with linker-based LTO.\"),\n@@ -1255,7 +1255,7 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n     print_link_args: bool = (false, parse_bool, [UNTRACKED],\n         \"print the arguments passed to the linker\"),\n     print_llvm_passes: bool = (false, parse_bool, [UNTRACKED],\n-        \"prints the llvm optimization passes being run\"),\n+        \"prints the LLVM optimization passes being run\"),\n     ast_json: bool = (false, parse_bool, [UNTRACKED],\n         \"print the AST as JSON and halt\"),\n     threads: Option<usize> = (None, parse_opt_uint, [UNTRACKED],\n@@ -1375,11 +1375,11 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n     osx_rpath_install_name: bool = (false, parse_bool, [TRACKED],\n         \"pass `-install_name @rpath/...` to the macOS linker\"),\n     sanitizer: Option<Sanitizer> = (None, parse_sanitizer, [TRACKED],\n-                                    \"Use a sanitizer\"),\n+                                    \"use a sanitizer\"),\n     fuel: Option<(String, u64)> = (None, parse_optimization_fuel, [TRACKED],\n         \"set the optimization fuel quota for a crate\"),\n     print_fuel: Option<String> = (None, parse_opt_string, [TRACKED],\n-        \"make Rustc print the total optimization fuel used by a crate\"),\n+        \"make rustc print the total optimization fuel used by a crate\"),\n     force_unstable_if_unmarked: bool = (false, parse_bool, [TRACKED],\n         \"force all crates to be `rustc_private` unstable\"),\n     pre_link_arg: Vec<String> = (vec![], parse_string_push, [UNTRACKED],\n@@ -1417,7 +1417,7 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         \"in dep-info output, omit targets for tracking dependencies of the dep-info files \\\n          themselves\"),\n     unpretty: Option<String> = (None, parse_unpretty, [UNTRACKED],\n-        \"Present the input source, unstable (and less-pretty) variants;\n+        \"present the input source, unstable (and less-pretty) variants;\n         valid types are any of the types for `--pretty`, as well as:\n         `expanded`, `expanded,identified`,\n         `expanded,hygiene` (with internal representations),"}, {"sha": "78321ac3185df9c2acbef3074a3b1ed47d4bf455", "filename": "src/libstd/os/linux/fs.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2628f579f6246df385acf9203bf2ffb6aedf5ccc/src%2Flibstd%2Fos%2Flinux%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2628f579f6246df385acf9203bf2ffb6aedf5ccc/src%2Flibstd%2Fos%2Flinux%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Flinux%2Ffs.rs?ref=2628f579f6246df385acf9203bf2ffb6aedf5ccc", "patch": "@@ -34,9 +34,10 @@ pub trait MetadataExt {\n     /// }\n     /// ```\n     #[stable(feature = \"metadata_ext\", since = \"1.1.0\")]\n-    #[rustc_deprecated(since = \"1.8.0\",\n-                       reason = \"deprecated in favor of the accessor \\\n-                                 methods of this trait\")]\n+    #[rustc_deprecated(\n+        since = \"1.8.0\",\n+        reason = \"other methods of this trait are now prefered\"\n+    )]\n     #[allow(deprecated)]\n     fn as_raw_stat(&self) -> &raw::stat;\n "}, {"sha": "a5947e7f7187025d926a876b36937b1525bd5bd7", "filename": "src/test/ui/async-await/conditional-and-guaranteed-initialization.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/2628f579f6246df385acf9203bf2ffb6aedf5ccc/src%2Ftest%2Fui%2Fasync-await%2Fconditional-and-guaranteed-initialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2628f579f6246df385acf9203bf2ffb6aedf5ccc/src%2Ftest%2Fui%2Fasync-await%2Fconditional-and-guaranteed-initialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fconditional-and-guaranteed-initialization.rs?ref=2628f579f6246df385acf9203bf2ffb6aedf5ccc", "patch": "@@ -0,0 +1,18 @@\n+// check-pass\n+// edition:2018\n+// compile-flags: --crate-type lib\n+\n+#![feature(async_await)]\n+\n+async fn conditional_and_guaranteed_initialization(x: usize) -> usize {\n+    let y;\n+    if x > 5 {\n+        y = echo(10).await;\n+    } else {\n+        y = get_something().await;\n+    }\n+    y\n+}\n+\n+async fn echo(x: usize) -> usize { x }\n+async fn get_something() -> usize { 10 }"}, {"sha": "a916afb6b09b7602d0ae722d310f47dd98422132", "filename": "src/test/ui/async-await/no-non-guaranteed-initialization.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2628f579f6246df385acf9203bf2ffb6aedf5ccc/src%2Ftest%2Fui%2Fasync-await%2Fno-non-guaranteed-initialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2628f579f6246df385acf9203bf2ffb6aedf5ccc/src%2Ftest%2Fui%2Fasync-await%2Fno-non-guaranteed-initialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fno-non-guaranteed-initialization.rs?ref=2628f579f6246df385acf9203bf2ffb6aedf5ccc", "patch": "@@ -0,0 +1,16 @@\n+// compile-fail\n+// edition:2018\n+// compile-flags: --crate-type lib\n+\n+#![feature(async_await)]\n+\n+async fn no_non_guaranteed_initialization(x: usize) -> usize {\n+    let y;\n+    if x > 5 {\n+        y = echo(10).await;\n+    }\n+    y\n+    //~^ use of possibly uninitialized variable: `y`\n+}\n+\n+async fn echo(x: usize) -> usize { x + 1 }"}, {"sha": "fb94522cac08dcce7cfae9104203eca4d9f26dde", "filename": "src/test/ui/async-await/no-non-guaranteed-initialization.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2628f579f6246df385acf9203bf2ffb6aedf5ccc/src%2Ftest%2Fui%2Fasync-await%2Fno-non-guaranteed-initialization.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2628f579f6246df385acf9203bf2ffb6aedf5ccc/src%2Ftest%2Fui%2Fasync-await%2Fno-non-guaranteed-initialization.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fno-non-guaranteed-initialization.stderr?ref=2628f579f6246df385acf9203bf2ffb6aedf5ccc", "patch": "@@ -0,0 +1,9 @@\n+error[E0381]: use of possibly uninitialized variable: `y`\n+  --> $DIR/no-non-guaranteed-initialization.rs:12:5\n+   |\n+LL |     y\n+   |     ^ use of possibly uninitialized `y`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0381`."}, {"sha": "6d26002a2e707597e263216665171e7f3c600b77", "filename": "src/test/ui/issues/auxiliary/issue-29265.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2628f579f6246df385acf9203bf2ffb6aedf5ccc/src%2Ftest%2Fui%2Fissues%2Fauxiliary%2Fissue-29265.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2628f579f6246df385acf9203bf2ffb6aedf5ccc/src%2Ftest%2Fui%2Fissues%2Fauxiliary%2Fissue-29265.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fauxiliary%2Fissue-29265.rs?ref=2628f579f6246df385acf9203bf2ffb6aedf5ccc", "patch": "@@ -0,0 +1,9 @@\n+#![crate_type = \"lib\"]\n+\n+pub struct SomeType {\n+    pub some_member: usize,\n+}\n+\n+pub static SOME_VALUE: SomeType = SomeType {\n+    some_member: 1,\n+};"}, {"sha": "f8b3a3fba1e4a6ce40b4a1d0634c9b239b934357", "filename": "src/test/ui/issues/auxiliary/issue-49544.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2628f579f6246df385acf9203bf2ffb6aedf5ccc/src%2Ftest%2Fui%2Fissues%2Fauxiliary%2Fissue-49544.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2628f579f6246df385acf9203bf2ffb6aedf5ccc/src%2Ftest%2Fui%2Fissues%2Fauxiliary%2Fissue-49544.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fauxiliary%2Fissue-49544.rs?ref=2628f579f6246df385acf9203bf2ffb6aedf5ccc", "patch": "@@ -0,0 +1,7 @@\n+#![crate_type = \"lib\"]\n+\n+pub fn foo() -> Vec<String> {\n+    std::env::args()\n+        .skip(1)\n+        .collect()\n+}"}, {"sha": "f554c4d16c7d1150250afea0fb652314f8a87ed7", "filename": "src/test/ui/issues/issue-29265.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2628f579f6246df385acf9203bf2ffb6aedf5ccc/src%2Ftest%2Fui%2Fissues%2Fissue-29265.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2628f579f6246df385acf9203bf2ffb6aedf5ccc/src%2Ftest%2Fui%2Fissues%2Fissue-29265.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-29265.rs?ref=2628f579f6246df385acf9203bf2ffb6aedf5ccc", "patch": "@@ -0,0 +1,10 @@\n+// aux-build:issue-29265.rs\n+// check-pass\n+\n+extern crate issue_29265 as lib;\n+\n+static _UNUSED: &'static lib::SomeType = &lib::SOME_VALUE;\n+\n+fn main() {\n+    vec![0u8; lib::SOME_VALUE.some_member];\n+}"}, {"sha": "d3663e24e60a2979d9a9d58c9111075d0ff85d86", "filename": "src/test/ui/issues/issue-37433.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2628f579f6246df385acf9203bf2ffb6aedf5ccc/src%2Ftest%2Fui%2Fissues%2Fissue-37433.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2628f579f6246df385acf9203bf2ffb6aedf5ccc/src%2Ftest%2Fui%2Fissues%2Fissue-37433.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-37433.rs?ref=2628f579f6246df385acf9203bf2ffb6aedf5ccc", "patch": "@@ -0,0 +1,10 @@\n+// ignore-emscripten no asm! support\n+\n+#![feature(asm)]\n+\n+fn main() {\n+    unsafe {\n+        asm!(\"\" :: \"r\"(\"\"));\n+        //~^ ERROR: invalid value for constraint in inline assembly\n+    }\n+}"}, {"sha": "eec0446902595431fac6d8fcd5826378c4b1e73b", "filename": "src/test/ui/issues/issue-37433.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2628f579f6246df385acf9203bf2ffb6aedf5ccc/src%2Ftest%2Fui%2Fissues%2Fissue-37433.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2628f579f6246df385acf9203bf2ffb6aedf5ccc/src%2Ftest%2Fui%2Fissues%2Fissue-37433.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-37433.stderr?ref=2628f579f6246df385acf9203bf2ffb6aedf5ccc", "patch": "@@ -0,0 +1,8 @@\n+error[E0669]: invalid value for constraint in inline assembly\n+  --> $DIR/issue-37433.rs:7:24\n+   |\n+LL |         asm!(\"\" :: \"r\"(\"\"));\n+   |                        ^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "ae52e8f3f6b43d1f300bbc0d30dd40bc64013ace", "filename": "src/test/ui/issues/issue-43398.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2628f579f6246df385acf9203bf2ffb6aedf5ccc/src%2Ftest%2Fui%2Fissues%2Fissue-43398.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2628f579f6246df385acf9203bf2ffb6aedf5ccc/src%2Ftest%2Fui%2Fissues%2Fissue-43398.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-43398.rs?ref=2628f579f6246df385acf9203bf2ffb6aedf5ccc", "patch": "@@ -0,0 +1,15 @@\n+// run-pass\n+\n+#![feature(core_intrinsics)]\n+#![feature(repr128)]\n+\n+#[repr(i128)]\n+enum Big { A, B }\n+\n+fn main() {\n+    unsafe {\n+        println!(\"{} {:?}\",\n+            std::intrinsics::discriminant_value(&Big::A),\n+            std::mem::discriminant(&Big::B));\n+    }\n+}"}, {"sha": "ed356275fc135ebbb43fe2aeff7ad8e049b5bf68", "filename": "src/test/ui/issues/issue-49544.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2628f579f6246df385acf9203bf2ffb6aedf5ccc/src%2Ftest%2Fui%2Fissues%2Fissue-49544.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2628f579f6246df385acf9203bf2ffb6aedf5ccc/src%2Ftest%2Fui%2Fissues%2Fissue-49544.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-49544.rs?ref=2628f579f6246df385acf9203bf2ffb6aedf5ccc", "patch": "@@ -0,0 +1,9 @@\n+// aux-build:issue-49544.rs\n+// check-pass\n+\n+extern crate issue_49544;\n+use issue_49544::foo;\n+\n+fn main() {\n+    let _ = foo();\n+}"}]}