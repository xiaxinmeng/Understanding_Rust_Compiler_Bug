{"sha": "099f27b6cbf10e31d41e4a2e6cb55ec39dbb0527", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5OWYyN2I2Y2JmMTBlMzFkNDFlNGEyZTZjYjU1ZWMzOWRiYjA1Mjc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-29T06:56:29Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-29T06:56:29Z"}, "message": "Auto merge of #81440 - tmiasko:always-live-locals, r=matthewjasper\n\nVisit only statements in always live locals\n\nNo functional changes intended.", "tree": {"sha": "1e11c0eb1e08b0ed273f36829fb4dbd784521359", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e11c0eb1e08b0ed273f36829fb4dbd784521359"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/099f27b6cbf10e31d41e4a2e6cb55ec39dbb0527", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/099f27b6cbf10e31d41e4a2e6cb55ec39dbb0527", "html_url": "https://github.com/rust-lang/rust/commit/099f27b6cbf10e31d41e4a2e6cb55ec39dbb0527", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/099f27b6cbf10e31d41e4a2e6cb55ec39dbb0527/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6bc46227ab57a844fc7a9ed3a6c9efb35c725a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6bc46227ab57a844fc7a9ed3a6c9efb35c725a9", "html_url": "https://github.com/rust-lang/rust/commit/c6bc46227ab57a844fc7a9ed3a6c9efb35c725a9"}, {"sha": "56865936a721da731cb5b61512b2d0756df09299", "url": "https://api.github.com/repos/rust-lang/rust/commits/56865936a721da731cb5b61512b2d0756df09299", "html_url": "https://github.com/rust-lang/rust/commit/56865936a721da731cb5b61512b2d0756df09299"}], "stats": {"total": 31, "additions": 12, "deletions": 19}, "files": [{"sha": "4e1696cd716e169893ad37c487031c1771ceef92", "filename": "compiler/rustc_mir/src/util/storage.rs", "status": "modified", "additions": 12, "deletions": 19, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/099f27b6cbf10e31d41e4a2e6cb55ec39dbb0527/compiler%2Frustc_mir%2Fsrc%2Futil%2Fstorage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/099f27b6cbf10e31d41e4a2e6cb55ec39dbb0527/compiler%2Frustc_mir%2Fsrc%2Futil%2Fstorage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Futil%2Fstorage.rs?ref=099f27b6cbf10e31d41e4a2e6cb55ec39dbb0527", "patch": "@@ -1,6 +1,5 @@\n use rustc_index::bit_set::BitSet;\n-use rustc_middle::mir::visit::Visitor;\n-use rustc_middle::mir::{self, Local, Location};\n+use rustc_middle::mir::{self, Local};\n \n /// The set of locals in a MIR body that do not have `StorageLive`/`StorageDead` annotations.\n ///\n@@ -13,12 +12,18 @@ pub struct AlwaysLiveLocals(BitSet<Local>);\n \n impl AlwaysLiveLocals {\n     pub fn new(body: &mir::Body<'tcx>) -> Self {\n-        let mut ret = AlwaysLiveLocals(BitSet::new_filled(body.local_decls.len()));\n-\n-        let mut vis = StorageAnnotationVisitor(&mut ret);\n-        vis.visit_body(body);\n+        let mut always_live_locals = AlwaysLiveLocals(BitSet::new_filled(body.local_decls.len()));\n+\n+        for block in body.basic_blocks() {\n+            for statement in &block.statements {\n+                use mir::StatementKind::{StorageDead, StorageLive};\n+                if let StorageLive(l) | StorageDead(l) = statement.kind {\n+                    always_live_locals.0.remove(l);\n+                }\n+            }\n+        }\n \n-        ret\n+        always_live_locals\n     }\n \n     pub fn into_inner(self) -> BitSet<Local> {\n@@ -33,15 +38,3 @@ impl std::ops::Deref for AlwaysLiveLocals {\n         &self.0\n     }\n }\n-\n-/// Removes locals that have `Storage*` annotations from `AlwaysLiveLocals`.\n-struct StorageAnnotationVisitor<'a>(&'a mut AlwaysLiveLocals);\n-\n-impl Visitor<'tcx> for StorageAnnotationVisitor<'_> {\n-    fn visit_statement(&mut self, statement: &mir::Statement<'tcx>, _location: Location) {\n-        use mir::StatementKind::{StorageDead, StorageLive};\n-        if let StorageLive(l) | StorageDead(l) = statement.kind {\n-            (self.0).0.remove(l);\n-        }\n-    }\n-}"}]}