{"sha": "9e5a4166d5bf0ebad622535a6619e12014fc6470", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllNWE0MTY2ZDViZjBlYmFkNjIyNTM1YTY2MTllMTIwMTRmYzY0NzA=", "commit": {"author": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2013-01-07T19:50:04Z"}, "committer": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2013-01-07T22:22:01Z"}, "message": "fmt: simplify parse_conversion", "tree": {"sha": "9025fb13a8ce06801826ad3a7bb9b46bc970aceb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9025fb13a8ce06801826ad3a7bb9b46bc970aceb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e5a4166d5bf0ebad622535a6619e12014fc6470", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e5a4166d5bf0ebad622535a6619e12014fc6470", "html_url": "https://github.com/rust-lang/rust/commit/9e5a4166d5bf0ebad622535a6619e12014fc6470", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e5a4166d5bf0ebad622535a6619e12014fc6470/comments", "author": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af298deff7141c3b8b95acb94ef2145d2ef9adc0", "url": "https://api.github.com/repos/rust-lang/rust/commits/af298deff7141c3b8b95acb94ef2145d2ef9adc0", "html_url": "https://github.com/rust-lang/rust/commit/af298deff7141c3b8b95acb94ef2145d2ef9adc0"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "2b7783e720e7c31686dd1cd68c6ff034cc839911", "filename": "src/libcore/extfmt.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9e5a4166d5bf0ebad622535a6619e12014fc6470/src%2Flibcore%2Fextfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e5a4166d5bf0ebad622535a6619e12014fc6470/src%2Flibcore%2Fextfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fextfmt.rs?ref=9e5a4166d5bf0ebad622535a6619e12014fc6470", "patch": "@@ -214,17 +214,19 @@ pub mod ct {\n                             err: ErrorFn) ->\n        Parsed<Piece> {\n         let parm = parse_parameter(s, i, lim);\n-        let flags = parse_flags(s, parm.next, lim);\n-        let width = parse_count(s, flags.next, lim);\n+        // avoid copying ~[Flag] by destructuring\n+        let Parsed {val: flags_val, next: flags_next} = parse_flags(s,\n+            parm.next, lim);\n+        let width = parse_count(s, flags_next, lim);\n         let prec = parse_precision(s, width.next, lim);\n         let ty = parse_type(s, prec.next, lim, err);\n-        return Parsed::new(\n+        Parsed::new(\n                  PieceConv(Conv {param: parm.val,\n-                             flags: copy flags.val,\n+                             flags: flags_val,\n                              width: width.val,\n                              precision: prec.val,\n                              ty: ty.val}),\n-             ty.next);\n+             ty.next)\n     }\n     pub fn parse_parameter(s: &str, i: uint, lim: uint) ->\n        Parsed<Option<uint>> {"}]}