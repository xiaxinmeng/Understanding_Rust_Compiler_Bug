{"sha": "10a51c0ac07ee5c5388d075c8209c8bef51069cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwYTUxYzBhYzA3ZWU1YzUzODhkMDc1YzgyMDljOGJlZjUxMDY5Y2Y=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-29T12:03:43Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-29T12:03:43Z"}, "message": "Auto merge of #84189 - jyn514:clippy-dev, r=Mark-Simulacrum\n\nImplement `x.py test src/tools/clippy --bless`\n\n- Add clippy_dev to the rust workspace\n\n  Before, it would give an error that it wasn't either included or\n  excluded from the workspace:\n\n  ```\n  error: current package believes it's in a workspace when it's not:\n  current:   /home/joshua/rustc/src/tools/clippy/clippy_dev/Cargo.toml\n  workspace: /home/joshua/rustc/Cargo.toml\n\n  this may be fixable by adding `src/tools/clippy/clippy_dev` to the `workspace.members` array of the manifest located at: /home/joshua/rustc/Cargo.toml\n  Alternatively, to keep it out of the workspace, add the package to the `workspace.exclude` array, or add an empty `[workspace]` table to the package's manifest.\n  ```\n\n- Change clippy's copy of compiletest not to special-case\n  rust-lang/rust. Using OUT_DIR confused `clippy_dev` and it couldn't find\n  the test outputs. This is one of the reasons why `cargo dev bless` used\n  to silently do nothing (the others were that `CARGO_TARGET_DIR` and\n  `PROFILE` weren't set appropriately).\n\n- Run clippy_dev on test failure\n\nI tested this by removing a couple lines from a stderr file, and they\nwere correctly replaced.\n\n- Fix clippy_dev warnings", "tree": {"sha": "82074dd3ca0a399c03148857ee44cac6891961fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82074dd3ca0a399c03148857ee44cac6891961fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10a51c0ac07ee5c5388d075c8209c8bef51069cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10a51c0ac07ee5c5388d075c8209c8bef51069cf", "html_url": "https://github.com/rust-lang/rust/commit/10a51c0ac07ee5c5388d075c8209c8bef51069cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10a51c0ac07ee5c5388d075c8209c8bef51069cf/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78c963945aa35a76703bf62e024af2d85b2796e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/78c963945aa35a76703bf62e024af2d85b2796e2", "html_url": "https://github.com/rust-lang/rust/commit/78c963945aa35a76703bf62e024af2d85b2796e2"}, {"sha": "8c25e27f1676ac40918731975cbcd47c6acff0a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c25e27f1676ac40918731975cbcd47c6acff0a7", "html_url": "https://github.com/rust-lang/rust/commit/8c25e27f1676ac40918731975cbcd47c6acff0a7"}], "stats": {"total": 52, "additions": 42, "deletions": 10}, "files": [{"sha": "a55ef7b61436ebde1823be9fdfe50f731e827416", "filename": "Cargo.lock", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/10a51c0ac07ee5c5388d075c8209c8bef51069cf/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/10a51c0ac07ee5c5388d075c8209c8bef51069cf/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=10a51c0ac07ee5c5388d075c8209c8bef51069cf", "patch": "@@ -582,6 +582,19 @@ dependencies = [\n name = \"clippy-mini-macro-test\"\n version = \"0.2.0\"\n \n+[[package]]\n+name = \"clippy_dev\"\n+version = \"0.0.1\"\n+dependencies = [\n+ \"bytecount\",\n+ \"clap\",\n+ \"itertools 0.9.0\",\n+ \"opener\",\n+ \"regex\",\n+ \"shell-escape\",\n+ \"walkdir\",\n+]\n+\n [[package]]\n name = \"clippy_lints\"\n version = \"0.1.53\""}, {"sha": "327afe35c2fb96b9107bbf5836c6d6e5ee8b8d44", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/10a51c0ac07ee5c5388d075c8209c8bef51069cf/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/10a51c0ac07ee5c5388d075c8209c8bef51069cf/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=10a51c0ac07ee5c5388d075c8209c8bef51069cf", "patch": "@@ -7,6 +7,7 @@ members = [\n   \"src/rustdoc-json-types\",\n   \"src/tools/cargotest\",\n   \"src/tools/clippy\",\n+  \"src/tools/clippy/clippy_dev\",\n   \"src/tools/compiletest\",\n   \"src/tools/error_index_generator\",\n   \"src/tools/linkchecker\","}, {"sha": "62a3a87eeb850a2b425e18a31fabfddc310cc901", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/10a51c0ac07ee5c5388d075c8209c8bef51069cf/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10a51c0ac07ee5c5388d075c8209c8bef51069cf/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=10a51c0ac07ee5c5388d075c8209c8bef51069cf", "patch": "@@ -1627,6 +1627,11 @@ impl Cargo {\n     pub fn add_rustc_lib_path(&mut self, builder: &Builder<'_>, compiler: Compiler) {\n         builder.add_rustc_lib_path(compiler, &mut self.command);\n     }\n+\n+    pub fn current_dir(&mut self, dir: &Path) -> &mut Cargo {\n+        self.command.current_dir(dir);\n+        self\n+    }\n }\n \n impl From<Cargo> for Command {"}, {"sha": "965d11621450bca4a2aab9839024bcd4fae1f193", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/10a51c0ac07ee5c5388d075c8209c8bef51069cf/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10a51c0ac07ee5c5388d075c8209c8bef51069cf/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=10a51c0ac07ee5c5388d075c8209c8bef51069cf", "patch": "@@ -632,6 +632,26 @@ impl Step for Clippy {\n \n         cargo.add_rustc_lib_path(builder, compiler);\n \n+        if builder.try_run(&mut cargo.into()) {\n+            // The tests succeeded; nothing to do.\n+            return;\n+        }\n+\n+        if !builder.config.cmd.bless() {\n+            std::process::exit(1);\n+        }\n+\n+        let mut cargo = builder.cargo(compiler, Mode::ToolRustc, SourceType::InTree, host, \"run\");\n+        cargo.arg(\"-p\").arg(\"clippy_dev\");\n+        // clippy_dev gets confused if it can't find `clippy/Cargo.toml`\n+        cargo.current_dir(&builder.src.join(\"src\").join(\"tools\").join(\"clippy\"));\n+        if builder.config.rust_optimize {\n+            cargo.env(\"PROFILE\", \"release\");\n+        } else {\n+            cargo.env(\"PROFILE\", \"debug\");\n+        }\n+        cargo.arg(\"--\");\n+        cargo.arg(\"bless\");\n         builder.run(&mut cargo.into());\n     }\n }"}, {"sha": "4676c2affad793e93b6999a1a472a45a388fba6b", "filename": "src/tools/clippy/clippy_dev/src/new_lint.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/10a51c0ac07ee5c5388d075c8209c8bef51069cf/src%2Ftools%2Fclippy%2Fclippy_dev%2Fsrc%2Fnew_lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10a51c0ac07ee5c5388d075c8209c8bef51069cf/src%2Ftools%2Fclippy%2Fclippy_dev%2Fsrc%2Fnew_lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_dev%2Fsrc%2Fnew_lint.rs?ref=10a51c0ac07ee5c5388d075c8209c8bef51069cf", "patch": "@@ -44,7 +44,7 @@ pub fn create(pass: Option<&str>, lint_name: Option<&str>, category: Option<&str\n     create_test(&lint).context(\"Unable to create a test for the new lint\")\n }\n \n-fn create_lint(lint: &LintData) -> io::Result<()> {\n+fn create_lint(lint: &LintData<'_>) -> io::Result<()> {\n     let (pass_type, pass_lifetimes, pass_import, context_import) = match lint.pass {\n         \"early\" => (\"EarlyLintPass\", \"\", \"use rustc_ast::ast::*;\", \"EarlyContext\"),\n         \"late\" => (\"LateLintPass\", \"<'_>\", \"use rustc_hir::*;\", \"LateContext\"),\n@@ -68,7 +68,7 @@ fn create_lint(lint: &LintData) -> io::Result<()> {\n     write_file(lint.project_root.join(&lint_path), lint_contents.as_bytes())\n }\n \n-fn create_test(lint: &LintData) -> io::Result<()> {\n+fn create_test(lint: &LintData<'_>) -> io::Result<()> {\n     fn create_project_layout<P: Into<PathBuf>>(lint_name: &str, location: P, case: &str, hint: &str) -> io::Result<()> {\n         let mut path = location.into().join(case);\n         fs::create_dir(&path)?;"}, {"sha": "e1110721f6ece396b3eef67475f6598b84c13a58", "filename": "src/tools/clippy/tests/compile-test.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/10a51c0ac07ee5c5388d075c8209c8bef51069cf/src%2Ftools%2Fclippy%2Ftests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10a51c0ac07ee5c5388d075c8209c8bef51069cf/src%2Ftools%2Fclippy%2Ftests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fcompile-test.rs?ref=10a51c0ac07ee5c5388d075c8209c8bef51069cf", "patch": "@@ -83,14 +83,7 @@ fn default_config() -> compiletest::Config {\n         third_party_crates(),\n     ));\n \n-    config.build_base = if cargo::is_rustc_test_suite() {\n-        // This make the stderr files go to clippy OUT_DIR on rustc repo build dir\n-        let mut path = PathBuf::from(env!(\"OUT_DIR\"));\n-        path.push(\"test_build_base\");\n-        path\n-    } else {\n-        host_lib().join(\"test_build_base\")\n-    };\n+    config.build_base = host_lib().join(\"test_build_base\");\n     config.rustc_path = clippy_driver_path();\n     config\n }"}]}