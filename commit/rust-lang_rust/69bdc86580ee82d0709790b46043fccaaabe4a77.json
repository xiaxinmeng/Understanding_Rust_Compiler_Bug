{"sha": "69bdc86580ee82d0709790b46043fccaaabe4a77", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5YmRjODY1ODBlZTgyZDA3MDk3OTBiNDYwNDNmY2NhYWFiZTRhNzc=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-07-12T08:41:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-07-12T08:41:21Z"}, "message": "Merge pull request #1779 from topecongiro/issue-1777\n\nDo not count the number of parens inside str or comment", "tree": {"sha": "439afb699fd2e6ce34fc1713d66ed2d71e9c6288", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/439afb699fd2e6ce34fc1713d66ed2d71e9c6288"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69bdc86580ee82d0709790b46043fccaaabe4a77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69bdc86580ee82d0709790b46043fccaaabe4a77", "html_url": "https://github.com/rust-lang/rust/commit/69bdc86580ee82d0709790b46043fccaaabe4a77", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69bdc86580ee82d0709790b46043fccaaabe4a77/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43af9c84b19ad8aad3feda93150e910f9c790788", "url": "https://api.github.com/repos/rust-lang/rust/commits/43af9c84b19ad8aad3feda93150e910f9c790788", "html_url": "https://github.com/rust-lang/rust/commit/43af9c84b19ad8aad3feda93150e910f9c790788"}, {"sha": "51641f167eef95b9d47f3ab61f63fb0aea0a7162", "url": "https://api.github.com/repos/rust-lang/rust/commits/51641f167eef95b9d47f3ab61f63fb0aea0a7162", "html_url": "https://github.com/rust-lang/rust/commit/51641f167eef95b9d47f3ab61f63fb0aea0a7162"}], "stats": {"total": 72, "additions": 69, "deletions": 3}, "files": [{"sha": "6f81496856b47a82222020760843e6eebb53df29", "filename": "src/visitor.rs", "status": "modified", "additions": 43, "deletions": 3, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/69bdc86580ee82d0709790b46043fccaaabe4a77/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69bdc86580ee82d0709790b46043fccaaabe4a77/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=69bdc86580ee82d0709790b46043fccaaabe4a77", "patch": "@@ -729,9 +729,49 @@ impl Rewrite for ast::NestedMetaItem {\n }\n \n fn count_missing_closing_parens(s: &str) -> u32 {\n-    let op_parens = s.chars().filter(|c| *c == '(').count();\n-    let cl_parens = s.chars().filter(|c| *c == ')').count();\n-    op_parens.checked_sub(cl_parens).unwrap_or(0) as u32\n+    let mut op_parens: u32 = 0;\n+    let mut cl_parens: u32 = 0;\n+\n+    #[derive(Eq, PartialEq)]\n+    pub enum SnippetState {\n+        Normal,\n+        InsideStr,\n+        InsideBulletComment,\n+        InsideSingleLineComment,\n+    }\n+\n+    let mut state = SnippetState::Normal;\n+    let mut iter = s.chars().peekable();\n+    let mut prev_char: Option<char> = None;\n+    while let Some(c) = iter.next() {\n+        let next_char = iter.peek();\n+        match c {\n+            '/' if state == SnippetState::Normal => match next_char {\n+                Some(&'*') => state = SnippetState::InsideBulletComment,\n+                Some(&'/') if prev_char.map_or(true, |c| c != '*') => {\n+                    state = SnippetState::InsideSingleLineComment;\n+                }\n+                _ => (),\n+            },\n+            '*' if state == SnippetState::InsideBulletComment &&\n+                next_char.map_or(false, |c| *c == '/') =>\n+            {\n+                state = SnippetState::Normal;\n+            }\n+            '\\n' if state == SnippetState::InsideSingleLineComment => state = SnippetState::Normal,\n+            '\"' if state == SnippetState::InsideStr && prev_char.map_or(false, |c| c != '\\\\') => {\n+                state = SnippetState::Normal;\n+            }\n+            '\"' if state == SnippetState::Normal && prev_char.map_or(false, |c| c != '\\\\') => {\n+                state = SnippetState::InsideStr\n+            }\n+            '(' if state == SnippetState::Normal => op_parens += 1,\n+            ')' if state == SnippetState::Normal => cl_parens += 1,\n+            _ => (),\n+        }\n+        prev_char = Some(c);\n+    }\n+    op_parens.checked_sub(cl_parens).unwrap_or(0)\n }\n \n impl Rewrite for ast::MetaItem {"}, {"sha": "324f0c69fc4cae4391cc379cd3922ba6914ad743", "filename": "tests/source/attrib.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/69bdc86580ee82d0709790b46043fccaaabe4a77/tests%2Fsource%2Fattrib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69bdc86580ee82d0709790b46043fccaaabe4a77/tests%2Fsource%2Fattrib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fattrib.rs?ref=69bdc86580ee82d0709790b46043fccaaabe4a77", "patch": "@@ -68,3 +68,16 @@ fn foo() {\n     #[cfg_attr(not(target_os = \"freertos\"), allow(unused_variables))]\n     let x = 3;\n }\n+\n+// #1777\n+#[test]\n+#[should_panic(expected = \"(\")]\n+#[should_panic(expected = /* ( */ \"(\")]\n+#[should_panic(/* ((((( */expected /* ((((( */= /* ((((( */ \"(\"/* ((((( */)]\n+#[should_panic(\n+    /* (((((((( *//*\n+    (((((((((()(((((((( */\n+    expected = \"(\"\n+    // ((((((((\n+)]\n+fn foo() {}"}, {"sha": "2e08ec5cc34b578c763637d9c78ac239517b74d9", "filename": "tests/target/attrib.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/69bdc86580ee82d0709790b46043fccaaabe4a77/tests%2Ftarget%2Fattrib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69bdc86580ee82d0709790b46043fccaaabe4a77/tests%2Ftarget%2Fattrib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fattrib.rs?ref=69bdc86580ee82d0709790b46043fccaaabe4a77", "patch": "@@ -68,3 +68,16 @@ fn foo() {\n     #[cfg_attr(not(target_os = \"freertos\"), allow(unused_variables))]\n     let x = 3;\n }\n+\n+// #1777\n+#[test]\n+#[should_panic(expected = \"(\")]\n+#[should_panic(expected = /* ( */ \"(\")]\n+#[should_panic(/* ((((( */expected /* ((((( */= /* ((((( */ \"(\"/* ((((( */)]\n+#[should_panic(\n+    /* (((((((( *//*\n+    (((((((((()(((((((( */\n+    expected = \"(\"\n+    // ((((((((\n+)]\n+fn foo() {}"}]}