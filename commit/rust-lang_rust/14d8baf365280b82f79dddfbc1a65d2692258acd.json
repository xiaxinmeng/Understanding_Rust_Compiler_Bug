{"sha": "14d8baf365280b82f79dddfbc1a65d2692258acd", "node_id": "C_kwDOAAsO6NoAKDE0ZDhiYWYzNjUyODBiODJmNzlkZGRmYmMxYTY1ZDI2OTIyNThhY2Q", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-05-31T18:18:51Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-05-31T18:21:55Z"}, "message": "rustdoc: also index raw pointers\n\nCo-authored-by: Noah Lev <camelidcamel@gmail.com>", "tree": {"sha": "d5ac377d5b13e2cd07ef5ac5f0fd624f0865d3ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5ac377d5b13e2cd07ef5ac5f0fd624f0865d3ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14d8baf365280b82f79dddfbc1a65d2692258acd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14d8baf365280b82f79dddfbc1a65d2692258acd", "html_url": "https://github.com/rust-lang/rust/commit/14d8baf365280b82f79dddfbc1a65d2692258acd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14d8baf365280b82f79dddfbc1a65d2692258acd/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59d35d6e90bef49719292884b8f769cf9b111467", "url": "https://api.github.com/repos/rust-lang/rust/commits/59d35d6e90bef49719292884b8f769cf9b111467", "html_url": "https://github.com/rust-lang/rust/commit/59d35d6e90bef49719292884b8f769cf9b111467"}], "stats": {"total": 84, "additions": 82, "deletions": 2}, "files": [{"sha": "9f302cc256659b2a24a2652c84018c62f284ffd6", "filename": "src/librustdoc/html/render/search_index.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/14d8baf365280b82f79dddfbc1a65d2692258acd/src%2Flibrustdoc%2Fhtml%2Frender%2Fsearch_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14d8baf365280b82f79dddfbc1a65d2692258acd/src%2Flibrustdoc%2Fhtml%2Frender%2Fsearch_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fsearch_index.rs?ref=14d8baf365280b82f79dddfbc1a65d2692258acd", "patch": "@@ -228,12 +228,13 @@ fn get_index_type_name(clean_type: &clean::Type) -> Option<Symbol> {\n         // We return an empty name because we don't care about the generic name itself.\n         clean::Generic(_) | clean::ImplTrait(_) => Some(kw::Empty),\n         clean::Primitive(ref p) => Some(p.as_sym()),\n-        clean::BorrowedRef { ref type_, .. } => get_index_type_name(type_),\n+        clean::BorrowedRef { ref type_, .. } | clean::RawPointer(_, ref type_) => {\n+            get_index_type_name(type_)\n+        }\n         clean::BareFunction(_)\n         | clean::Tuple(_)\n         | clean::Slice(_)\n         | clean::Array(_, _)\n-        | clean::RawPointer(_, _)\n         | clean::QPath { .. }\n         | clean::Infer => None,\n     }"}, {"sha": "140b955ea713acfae220d54bbeed6e7ebcce8634", "filename": "src/test/rustdoc-js/raw-pointer.js", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/14d8baf365280b82f79dddfbc1a65d2692258acd/src%2Ftest%2Frustdoc-js%2Fraw-pointer.js", "raw_url": "https://github.com/rust-lang/rust/raw/14d8baf365280b82f79dddfbc1a65d2692258acd/src%2Ftest%2Frustdoc-js%2Fraw-pointer.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js%2Fraw-pointer.js?ref=14d8baf365280b82f79dddfbc1a65d2692258acd", "patch": "@@ -0,0 +1,55 @@\n+// ignore-order\n+\n+const QUERY = [\n+    'Aaaaaaa -> i32',\n+    'Aaaaaaa -> Aaaaaaa',\n+    'Aaaaaaa -> usize',\n+    '-> Aaaaaaa',\n+    'Aaaaaaa',\n+];\n+\n+const EXPECTED = [\n+    {\n+        // Aaaaaaa -> i32\n+        'others': [\n+            { 'path': 'raw_pointer::Ccccccc', 'name': 'eeeeeee' },\n+        ],\n+    },\n+    {\n+        // Aaaaaaa -> Aaaaaaa\n+        'others': [\n+            { 'path': 'raw_pointer::Ccccccc', 'name': 'fffffff' },\n+            { 'path': 'raw_pointer::Ccccccc', 'name': 'ggggggg' },\n+        ],\n+    },\n+    {\n+        // Aaaaaaa -> usize\n+        'others': [],\n+    },\n+    {\n+        // -> Aaaaaaa\n+        'others': [\n+            { 'path': 'raw_pointer::Ccccccc', 'name': 'fffffff' },\n+            { 'path': 'raw_pointer::Ccccccc', 'name': 'ggggggg' },\n+            { 'path': 'raw_pointer::Ccccccc', 'name': 'ddddddd' },\n+            { 'path': 'raw_pointer', 'name': 'bbbbbbb' },\n+        ],\n+    },\n+    {\n+        // Aaaaaaa\n+        'others': [\n+            { 'path': 'raw_pointer', 'name': 'Aaaaaaa' },\n+        ],\n+        'in_args': [\n+            { 'path': 'raw_pointer::Ccccccc', 'name': 'fffffff' },\n+            { 'path': 'raw_pointer::Ccccccc', 'name': 'ggggggg' },\n+            { 'path': 'raw_pointer::Ccccccc', 'name': 'eeeeeee' },\n+        ],\n+        'returned': [\n+            { 'path': 'raw_pointer::Ccccccc', 'name': 'fffffff' },\n+            { 'path': 'raw_pointer::Ccccccc', 'name': 'ggggggg' },\n+            { 'path': 'raw_pointer::Ccccccc', 'name': 'ddddddd' },\n+            { 'path': 'raw_pointer', 'name': 'bbbbbbb' },\n+        ],\n+    },\n+];"}, {"sha": "b8ace2e0b7d77945cdc5e5731df5562c35553549", "filename": "src/test/rustdoc-js/raw-pointer.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/14d8baf365280b82f79dddfbc1a65d2692258acd/src%2Ftest%2Frustdoc-js%2Fraw-pointer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14d8baf365280b82f79dddfbc1a65d2692258acd/src%2Ftest%2Frustdoc-js%2Fraw-pointer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js%2Fraw-pointer.rs?ref=14d8baf365280b82f79dddfbc1a65d2692258acd", "patch": "@@ -0,0 +1,24 @@\n+use std::ptr;\n+\n+pub struct Aaaaaaa {}\n+\n+pub fn bbbbbbb() -> *const Aaaaaaa {\n+    ptr::null()\n+}\n+\n+pub struct Ccccccc {}\n+\n+impl Ccccccc {\n+    pub fn ddddddd(&self) -> *const Aaaaaaa {\n+        ptr::null()\n+    }\n+    pub fn eeeeeee(&self, _x: *const Aaaaaaa) -> i32 {\n+        0\n+    }\n+    pub fn fffffff(&self, x: *const Aaaaaaa) -> *const Aaaaaaa {\n+        x\n+    }\n+    pub fn ggggggg(&self, x: *mut Aaaaaaa) -> *mut Aaaaaaa {\n+        x\n+    }\n+}"}]}