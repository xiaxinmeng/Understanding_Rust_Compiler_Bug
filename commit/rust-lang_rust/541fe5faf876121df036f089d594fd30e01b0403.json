{"sha": "541fe5faf876121df036f089d594fd30e01b0403", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0MWZlNWZhZjg3NjEyMWRmMDM2ZjA4OWQ1OTRmZDMwZTAxYjA0MDM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-05-20T10:47:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-05-20T10:47:44Z"}, "message": "Auto merge of #25610 - mbrubeck:bufread-docs, r=alexcrichton\n\nr? @steveklabnik", "tree": {"sha": "631edc684ae3e2a33a61855ee7a91b966b4936be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/631edc684ae3e2a33a61855ee7a91b966b4936be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/541fe5faf876121df036f089d594fd30e01b0403", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/541fe5faf876121df036f089d594fd30e01b0403", "html_url": "https://github.com/rust-lang/rust/commit/541fe5faf876121df036f089d594fd30e01b0403", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/541fe5faf876121df036f089d594fd30e01b0403/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "749cb1931fbad28ead9c619c3c5f53bbe1824aff", "url": "https://api.github.com/repos/rust-lang/rust/commits/749cb1931fbad28ead9c619c3c5f53bbe1824aff", "html_url": "https://github.com/rust-lang/rust/commit/749cb1931fbad28ead9c619c3c5f53bbe1824aff"}, {"sha": "d776191d4a84dd13080b3efdb449e4c036eb3f7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d776191d4a84dd13080b3efdb449e4c036eb3f7e", "html_url": "https://github.com/rust-lang/rust/commit/d776191d4a84dd13080b3efdb449e4c036eb3f7e"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "c355be9bc78d27786634e051e817d5a11d896635", "filename": "src/libstd/io/buffered.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/541fe5faf876121df036f089d594fd30e01b0403/src%2Flibstd%2Fio%2Fbuffered.rs", "raw_url": "https://github.com/rust-lang/rust/raw/541fe5faf876121df036f089d594fd30e01b0403/src%2Flibstd%2Fio%2Fbuffered.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fbuffered.rs?ref=541fe5faf876121df036f089d594fd30e01b0403", "patch": "@@ -27,6 +27,24 @@ use iter;\n /// For example, every call to `read` on `TcpStream` results in a system call.\n /// A `BufReader` performs large, infrequent reads on the underlying `Read`\n /// and maintains an in-memory buffer of the results.\n+///\n+/// # Examples\n+///\n+/// ```no_run\n+/// use std::io::prelude::*;\n+/// use std::io::BufReader;\n+/// use std::fs::File;\n+///\n+/// # fn foo() -> std::io::Result<()> {\n+/// let mut f = try!(File::open(\"log.txt\"));\n+/// let mut reader = BufReader::new(f);\n+///\n+/// let mut line = String::new();\n+/// let len = try!(reader.read_line(&mut line));\n+/// println!(\"First line is {} bytes long\", len);\n+/// # Ok(())\n+/// # }\n+/// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct BufReader<R> {\n     inner: R,"}, {"sha": "72a3a75d422411028efff5e4cccebea3b3275ac7", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/541fe5faf876121df036f089d594fd30e01b0403/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/541fe5faf876121df036f089d594fd30e01b0403/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=541fe5faf876121df036f089d594fd30e01b0403", "patch": "@@ -506,11 +506,14 @@ fn read_until<R: BufRead + ?Sized>(r: &mut R, delim: u8, buf: &mut Vec<u8>)\n     }\n }\n \n-/// A Buffer is a type of reader which has some form of internal buffering to\n+/// A `BufRead` is a type of reader which has some form of internal buffering to\n /// allow certain kinds of reading operations to be more optimized than others.\n ///\n /// This type extends the `Read` trait with a few methods that are not\n /// possible to reasonably implement with purely a read interface.\n+///\n+/// You can use the [`BufReader` wrapper type](struct.BufReader.html) to turn any\n+/// reader into a buffered reader.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait BufRead: Read {\n     /// Fills the internal buffer of this object, returning the buffer contents."}]}