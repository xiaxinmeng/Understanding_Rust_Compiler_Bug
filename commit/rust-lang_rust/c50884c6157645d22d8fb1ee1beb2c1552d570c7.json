{"sha": "c50884c6157645d22d8fb1ee1beb2c1552d570c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1MDg4NGM2MTU3NjQ1ZDIyZDhmYjFlZTFiZWIyYzE1NTJkNTcwYzc=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-09-07T15:52:49Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-09-17T11:46:50Z"}, "message": "Tests for `feature(bind_by_move_pattern_guards)`.\n\nApparently copyright notices are no longer necessary apparently.\n(See #43498 and #53654.)", "tree": {"sha": "2543826b998ef8efa49247c50562517b565821d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2543826b998ef8efa49247c50562517b565821d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c50884c6157645d22d8fb1ee1beb2c1552d570c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c50884c6157645d22d8fb1ee1beb2c1552d570c7", "html_url": "https://github.com/rust-lang/rust/commit/c50884c6157645d22d8fb1ee1beb2c1552d570c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c50884c6157645d22d8fb1ee1beb2c1552d570c7/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d844e871c2b6d3c86adff53792fc36fdd338eb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d844e871c2b6d3c86adff53792fc36fdd338eb2", "html_url": "https://github.com/rust-lang/rust/commit/7d844e871c2b6d3c86adff53792fc36fdd338eb2"}], "stats": {"total": 219, "additions": 208, "deletions": 11}, "files": [{"sha": "bc9b3a8de4ef5d41416773358b04214960f2989d", "filename": "src/test/ui/bind-by-move/bind-by-move-no-guards.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c50884c6157645d22d8fb1ee1beb2c1552d570c7/src%2Ftest%2Fui%2Fbind-by-move%2Fbind-by-move-no-guards.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c50884c6157645d22d8fb1ee1beb2c1552d570c7/src%2Ftest%2Fui%2Fbind-by-move%2Fbind-by-move-no-guards.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbind-by-move%2Fbind-by-move-no-guards.rs?ref=c50884c6157645d22d8fb1ee1beb2c1552d570c7", "patch": "@@ -1,13 +1,3 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n use std::sync::mpsc::channel;\n \n fn main() {"}, {"sha": "2af2b0d660efa3cf1882e4ae5d56934406a70c12", "filename": "src/test/ui/bind-by-move/bind-by-move-no-guards.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c50884c6157645d22d8fb1ee1beb2c1552d570c7/src%2Ftest%2Fui%2Fbind-by-move%2Fbind-by-move-no-guards.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c50884c6157645d22d8fb1ee1beb2c1552d570c7/src%2Ftest%2Fui%2Fbind-by-move%2Fbind-by-move-no-guards.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbind-by-move%2Fbind-by-move-no-guards.stderr?ref=c50884c6157645d22d8fb1ee1beb2c1552d570c7", "patch": "@@ -1,5 +1,5 @@\n error[E0008]: cannot bind by-move into a pattern guard\n-  --> $DIR/bind-by-move-no-guards.rs:18:14\n+  --> $DIR/bind-by-move-no-guards.rs:8:14\n    |\n LL |         Some(z) if z.recv().unwrap() => { panic!() },\n    |              ^ moves value into pattern guard"}, {"sha": "2f3c094ff3954b8d53e529e48569e0249528c18b", "filename": "src/test/ui/rfc-0107-bind-by-move-pattern-guards/bind-by-move-no-guards.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c50884c6157645d22d8fb1ee1beb2c1552d570c7/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Fbind-by-move-no-guards.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c50884c6157645d22d8fb1ee1beb2c1552d570c7/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Fbind-by-move-no-guards.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Fbind-by-move-no-guards.rs?ref=c50884c6157645d22d8fb1ee1beb2c1552d570c7", "patch": "@@ -0,0 +1,21 @@\n+// Adaptation of existing ui test (from way back in\n+// rust-lang/rust#2329), that starts passing with this feature in\n+// place.\n+\n+// compile-pass\n+\n+#![feature(nll)]\n+#![feature(bind_by_move_pattern_guards)]\n+\n+use std::sync::mpsc::channel;\n+\n+fn main() {\n+    let (tx, rx) = channel();\n+    let x = Some(rx);\n+    tx.send(false);\n+    match x {\n+        Some(z) if z.recv().unwrap() => { panic!() },\n+        Some(z) => { assert!(!z.recv().unwrap()); },\n+        None => panic!()\n+    }\n+}"}, {"sha": "4c17ce23b3768d15964fa7c129cfc20dd86984de", "filename": "src/test/ui/rfc-0107-bind-by-move-pattern-guards/feature-gate.gate_and_2015.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c50884c6157645d22d8fb1ee1beb2c1552d570c7/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Ffeature-gate.gate_and_2015.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c50884c6157645d22d8fb1ee1beb2c1552d570c7/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Ffeature-gate.gate_and_2015.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Ffeature-gate.gate_and_2015.stderr?ref=c50884c6157645d22d8fb1ee1beb2c1552d570c7", "patch": "@@ -0,0 +1,9 @@\n+error[E0008]: cannot bind by-move into a pattern guard\n+  --> $DIR/feature-gate.rs:33:16\n+   |\n+LL |         A { a: v } if *v == 42 => v,\n+   |                ^ moves value into pattern guard\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0008`."}, {"sha": "4bde9b0c8d910127954e69bdac37422d6a97bc50", "filename": "src/test/ui/rfc-0107-bind-by-move-pattern-guards/feature-gate.gate_and_2018.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c50884c6157645d22d8fb1ee1beb2c1552d570c7/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Ffeature-gate.gate_and_2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c50884c6157645d22d8fb1ee1beb2c1552d570c7/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Ffeature-gate.gate_and_2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Ffeature-gate.gate_and_2018.stderr?ref=c50884c6157645d22d8fb1ee1beb2c1552d570c7", "patch": "@@ -0,0 +1,10 @@\n+error: compilation successful\n+  --> $DIR/feature-gate.rs:42:1\n+   |\n+LL | / fn main() {\n+LL | |     foo(107)\n+LL | | }\n+   | |_^\n+\n+error: aborting due to previous error\n+"}, {"sha": "4bde9b0c8d910127954e69bdac37422d6a97bc50", "filename": "src/test/ui/rfc-0107-bind-by-move-pattern-guards/feature-gate.gate_and_feature_nll.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c50884c6157645d22d8fb1ee1beb2c1552d570c7/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Ffeature-gate.gate_and_feature_nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c50884c6157645d22d8fb1ee1beb2c1552d570c7/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Ffeature-gate.gate_and_feature_nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Ffeature-gate.gate_and_feature_nll.stderr?ref=c50884c6157645d22d8fb1ee1beb2c1552d570c7", "patch": "@@ -0,0 +1,10 @@\n+error: compilation successful\n+  --> $DIR/feature-gate.rs:42:1\n+   |\n+LL | / fn main() {\n+LL | |     foo(107)\n+LL | | }\n+   | |_^\n+\n+error: aborting due to previous error\n+"}, {"sha": "4bde9b0c8d910127954e69bdac37422d6a97bc50", "filename": "src/test/ui/rfc-0107-bind-by-move-pattern-guards/feature-gate.gate_and_znll.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c50884c6157645d22d8fb1ee1beb2c1552d570c7/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Ffeature-gate.gate_and_znll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c50884c6157645d22d8fb1ee1beb2c1552d570c7/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Ffeature-gate.gate_and_znll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Ffeature-gate.gate_and_znll.stderr?ref=c50884c6157645d22d8fb1ee1beb2c1552d570c7", "patch": "@@ -0,0 +1,10 @@\n+error: compilation successful\n+  --> $DIR/feature-gate.rs:42:1\n+   |\n+LL | / fn main() {\n+LL | |     foo(107)\n+LL | | }\n+   | |_^\n+\n+error: aborting due to previous error\n+"}, {"sha": "4c17ce23b3768d15964fa7c129cfc20dd86984de", "filename": "src/test/ui/rfc-0107-bind-by-move-pattern-guards/feature-gate.no_gate.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c50884c6157645d22d8fb1ee1beb2c1552d570c7/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Ffeature-gate.no_gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c50884c6157645d22d8fb1ee1beb2c1552d570c7/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Ffeature-gate.no_gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Ffeature-gate.no_gate.stderr?ref=c50884c6157645d22d8fb1ee1beb2c1552d570c7", "patch": "@@ -0,0 +1,9 @@\n+error[E0008]: cannot bind by-move into a pattern guard\n+  --> $DIR/feature-gate.rs:33:16\n+   |\n+LL |         A { a: v } if *v == 42 => v,\n+   |                ^ moves value into pattern guard\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0008`."}, {"sha": "f6df4d07baad0c9a472141d2a9852666d01c0160", "filename": "src/test/ui/rfc-0107-bind-by-move-pattern-guards/feature-gate.rs", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/c50884c6157645d22d8fb1ee1beb2c1552d570c7/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Ffeature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c50884c6157645d22d8fb1ee1beb2c1552d570c7/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Ffeature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Ffeature-gate.rs?ref=c50884c6157645d22d8fb1ee1beb2c1552d570c7", "patch": "@@ -0,0 +1,47 @@\n+// Check that pattern-guards with move-bound variables is only allowed\n+// with the appropriate set of feature gates. (Note that we require\n+// the code to opt into MIR-borrowck in *some* way before the feature\n+// will work; we use the revision system here to enumerate a number of\n+// ways that opt-in could occur.)\n+\n+// gate-test-bind_by_move_pattern_guards\n+\n+// revisions: no_gate gate_and_2015 gate_and_2018 gate_and_znll gate_and_feature_nll\n+\n+// (We're already testing NLL behavior quite explicitly, no need for compare-mode=nll.)\n+// ignore-compare-mode-nll\n+\n+#![feature(rustc_attrs)]\n+\n+#![cfg_attr(gate_and_2015, feature(bind_by_move_pattern_guards))]\n+#![cfg_attr(gate_and_2018, feature(bind_by_move_pattern_guards))]\n+#![cfg_attr(gate_and_znll, feature(bind_by_move_pattern_guards))]\n+#![cfg_attr(gate_and_feature_nll, feature(bind_by_move_pattern_guards))]\n+\n+#![cfg_attr(gate_and_feature_nll, feature(nll))]\n+\n+//[gate_and_2015] edition:2015\n+//[gate_and_2018] edition:2018\n+//[gate_and_znll] compile-flags: -Z borrowck=mir\n+\n+struct A { a: Box<i32> }\n+\n+fn foo(n: i32) {\n+    let x = A { a: Box::new(n) };\n+    let _y = match x {\n+\n+        A { a: v } if *v == 42 => v,\n+        //[no_gate]~^ ERROR cannot bind by-move into a pattern guard\n+        //[gate_and_2015]~^^ ERROR cannot bind by-move into a pattern guard\n+\n+        _ => Box::new(0)\n+    };\n+}\n+\n+#[rustc_error]\n+fn main() {\n+    foo(107)\n+}\n+//[gate_and_2018]~^^^ ERROR compilation successful\n+//[gate_and_znll]~^^^^ ERROR compilation successful\n+//[gate_and_feature_nll]~^^^^^ ERROR compilation successful"}, {"sha": "9a9d11ce1b13ed37d893361ee6ffb9eb9ad74db4", "filename": "src/test/ui/rfc-0107-bind-by-move-pattern-guards/rfc-basic-examples.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/c50884c6157645d22d8fb1ee1beb2c1552d570c7/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Frfc-basic-examples.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c50884c6157645d22d8fb1ee1beb2c1552d570c7/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Frfc-basic-examples.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Frfc-basic-examples.rs?ref=c50884c6157645d22d8fb1ee1beb2c1552d570c7", "patch": "@@ -0,0 +1,40 @@\n+#![feature(nll)]\n+#![feature(bind_by_move_pattern_guards)]\n+\n+// compile-pass\n+\n+struct A { a: Box<i32> }\n+\n+impl A {\n+    fn get(&self) -> i32 { *self.a }\n+}\n+\n+fn foo(n: i32) {\n+    let x = A { a: Box::new(n) };\n+    let y = match x {\n+        A { a: v } if *v == 42 => v,\n+        _ => Box::new(0),\n+    };\n+}\n+\n+fn bar(n: i32) {\n+    let x = A { a: Box::new(n) };\n+    let y = match x {\n+        A { a: v } if x.get() == 42 => v,\n+        _ => Box::new(0),\n+    };\n+}\n+\n+fn baz(n: i32) {\n+    let x = A { a: Box::new(n) };\n+    let y = match x {\n+        A { a: v } if *v.clone() == 42 => v,\n+        _ => Box::new(0),\n+    };\n+}\n+\n+fn main() {\n+    foo(107);\n+    bar(107);\n+    baz(107);\n+}"}, {"sha": "0fec6b273d3bccdb949a918184ef8edba8d48631", "filename": "src/test/ui/rfc-0107-bind-by-move-pattern-guards/rfc-reject-double-move-across-arms.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c50884c6157645d22d8fb1ee1beb2c1552d570c7/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Frfc-reject-double-move-across-arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c50884c6157645d22d8fb1ee1beb2c1552d570c7/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Frfc-reject-double-move-across-arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Frfc-reject-double-move-across-arms.rs?ref=c50884c6157645d22d8fb1ee1beb2c1552d570c7", "patch": "@@ -0,0 +1,16 @@\n+#![feature(nll)]\n+#![feature(bind_by_move_pattern_guards)]\n+\n+enum VecWrapper { A(Vec<i32>) }\n+\n+fn foo(x: VecWrapper) -> usize {\n+    match x {\n+        VecWrapper::A(v) if { drop(v); false } => 1,\n+        //~^ ERROR cannot move out of borrowed content\n+        VecWrapper::A(v) => v.len()\n+    }\n+}\n+\n+fn main() {\n+    foo(VecWrapper::A(vec![107]));\n+}"}, {"sha": "502006e1b3f909965bfa5c167bb06911e3668811", "filename": "src/test/ui/rfc-0107-bind-by-move-pattern-guards/rfc-reject-double-move-across-arms.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c50884c6157645d22d8fb1ee1beb2c1552d570c7/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Frfc-reject-double-move-across-arms.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c50884c6157645d22d8fb1ee1beb2c1552d570c7/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Frfc-reject-double-move-across-arms.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Frfc-reject-double-move-across-arms.stderr?ref=c50884c6157645d22d8fb1ee1beb2c1552d570c7", "patch": "@@ -0,0 +1,9 @@\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/rfc-reject-double-move-across-arms.rs:8:36\n+   |\n+LL |         VecWrapper::A(v) if { drop(v); false } => 1,\n+   |                                    ^ cannot move out of borrowed content\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0507`."}, {"sha": "396bfc1c9319945d55b9d7f9095fffaf1889131e", "filename": "src/test/ui/rfc-0107-bind-by-move-pattern-guards/rfc-reject-double-move-in-first-arm.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c50884c6157645d22d8fb1ee1beb2c1552d570c7/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Frfc-reject-double-move-in-first-arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c50884c6157645d22d8fb1ee1beb2c1552d570c7/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Frfc-reject-double-move-in-first-arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Frfc-reject-double-move-in-first-arm.rs?ref=c50884c6157645d22d8fb1ee1beb2c1552d570c7", "patch": "@@ -0,0 +1,17 @@\n+#![feature(nll)]\n+#![feature(bind_by_move_pattern_guards)]\n+\n+struct A { a: Box<i32> }\n+\n+fn foo(n: i32) {\n+    let x = A { a: Box::new(n) };\n+    let _y = match x {\n+        A { a: v } if { drop(v); true } => v,\n+        //~^ ERROR cannot move out of borrowed content\n+        _ => Box::new(0),\n+    };\n+}\n+\n+fn main() {\n+    foo(107);\n+}"}, {"sha": "dd8f42f74970992880f266e1c7288cec6d7b4489", "filename": "src/test/ui/rfc-0107-bind-by-move-pattern-guards/rfc-reject-double-move-in-first-arm.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c50884c6157645d22d8fb1ee1beb2c1552d570c7/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Frfc-reject-double-move-in-first-arm.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c50884c6157645d22d8fb1ee1beb2c1552d570c7/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Frfc-reject-double-move-in-first-arm.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-0107-bind-by-move-pattern-guards%2Frfc-reject-double-move-in-first-arm.stderr?ref=c50884c6157645d22d8fb1ee1beb2c1552d570c7", "patch": "@@ -0,0 +1,9 @@\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/rfc-reject-double-move-in-first-arm.rs:9:30\n+   |\n+LL |         A { a: v } if { drop(v); true } => v,\n+   |                              ^ cannot move out of borrowed content\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0507`."}]}