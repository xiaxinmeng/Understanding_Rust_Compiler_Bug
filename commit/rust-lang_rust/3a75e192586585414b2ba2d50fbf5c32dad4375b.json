{"sha": "3a75e192586585414b2ba2d50fbf5c32dad4375b", "node_id": "C_kwDOAAsO6NoAKDNhNzVlMTkyNTg2NTg1NDE0YjJiYTJkNTBmYmY1YzMyZGFkNDM3NWI", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2023-04-30T20:35:29Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2023-04-30T20:35:29Z"}, "message": "Merge from rustc", "tree": {"sha": "c897e0f87d0a8c240de2a83bbdfe54879daa4f35", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c897e0f87d0a8c240de2a83bbdfe54879daa4f35"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a75e192586585414b2ba2d50fbf5c32dad4375b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a75e192586585414b2ba2d50fbf5c32dad4375b", "html_url": "https://github.com/rust-lang/rust/commit/3a75e192586585414b2ba2d50fbf5c32dad4375b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a75e192586585414b2ba2d50fbf5c32dad4375b/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77cdbe653ef18abe453475fc911d04e526f9386e", "url": "https://api.github.com/repos/rust-lang/rust/commits/77cdbe653ef18abe453475fc911d04e526f9386e", "html_url": "https://github.com/rust-lang/rust/commit/77cdbe653ef18abe453475fc911d04e526f9386e"}, {"sha": "e99a9904aa071f76856b4f71229ebacf56f13d36", "url": "https://api.github.com/repos/rust-lang/rust/commits/e99a9904aa071f76856b4f71229ebacf56f13d36", "html_url": "https://github.com/rust-lang/rust/commit/e99a9904aa071f76856b4f71229ebacf56f13d36"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "5fbd1789b3a9a9a13520f0072d1cc3fff583a530", "filename": "crates/hir-def/src/macro_expansion_tests/builtin_fn_macro.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3a75e192586585414b2ba2d50fbf5c32dad4375b/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fbuiltin_fn_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a75e192586585414b2ba2d50fbf5c32dad4375b/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fbuiltin_fn_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fbuiltin_fn_macro.rs?ref=3a75e192586585414b2ba2d50fbf5c32dad4375b", "patch": "@@ -201,7 +201,7 @@ macro_rules! format_args {\n }\n \n fn main() {\n-    $crate::fmt::Arguments::new_v1(&[], &[$crate::fmt::ArgumentV1::new(&(arg1(a, b, c)), $crate::fmt::Display::fmt), $crate::fmt::ArgumentV1::new(&(arg2), $crate::fmt::Display::fmt), ]);\n+    $crate::fmt::Arguments::new_v1(&[], &[$crate::fmt::Argument::new(&(arg1(a, b, c)), $crate::fmt::Display::fmt), $crate::fmt::Argument::new(&(arg2), $crate::fmt::Display::fmt), ]);\n }\n \"#]],\n     );\n@@ -229,7 +229,7 @@ macro_rules! format_args {\n }\n \n fn main() {\n-    $crate::fmt::Arguments::new_v1(&[], &[$crate::fmt::ArgumentV1::new(&(a::<A, B>()), $crate::fmt::Display::fmt), $crate::fmt::ArgumentV1::new(&(b), $crate::fmt::Display::fmt), ]);\n+    $crate::fmt::Arguments::new_v1(&[], &[$crate::fmt::Argument::new(&(a::<A, B>()), $crate::fmt::Display::fmt), $crate::fmt::Argument::new(&(b), $crate::fmt::Display::fmt), ]);\n }\n \"#]],\n     );\n@@ -260,7 +260,7 @@ macro_rules! format_args {\n fn main() {\n     let _ =\n         /* parse error: expected field name or number */\n-$crate::fmt::Arguments::new_v1(&[], &[$crate::fmt::ArgumentV1::new(&(a.), $crate::fmt::Display::fmt), ]);\n+$crate::fmt::Arguments::new_v1(&[], &[$crate::fmt::Argument::new(&(a.), $crate::fmt::Display::fmt), ]);\n }\n \"#]],\n     );"}, {"sha": "a9c5e1488aac0b77deba020d3bb9e6e73191c510", "filename": "crates/hir-expand/src/builtin_fn_macro.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3a75e192586585414b2ba2d50fbf5c32dad4375b/crates%2Fhir-expand%2Fsrc%2Fbuiltin_fn_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a75e192586585414b2ba2d50fbf5c32dad4375b/crates%2Fhir-expand%2Fsrc%2Fbuiltin_fn_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-expand%2Fsrc%2Fbuiltin_fn_macro.rs?ref=3a75e192586585414b2ba2d50fbf5c32dad4375b", "patch": "@@ -241,8 +241,8 @@ fn format_args_expand(\n     // We expand `format_args!(\"\", a1, a2)` to\n     // ```\n     // $crate::fmt::Arguments::new_v1(&[], &[\n-    //   $crate::fmt::ArgumentV1::new(&arg1,$crate::fmt::Display::fmt),\n-    //   $crate::fmt::ArgumentV1::new(&arg2,$crate::fmt::Display::fmt),\n+    //   $crate::fmt::Argument::new(&arg1,$crate::fmt::Display::fmt),\n+    //   $crate::fmt::Argument::new(&arg2,$crate::fmt::Display::fmt),\n     // ])\n     // ```,\n     // which is still not really correct, but close enough for now\n@@ -267,7 +267,7 @@ fn format_args_expand(\n     }\n     let _format_string = args.remove(0);\n     let arg_tts = args.into_iter().flat_map(|arg| {\n-        quote! { #DOLLAR_CRATE::fmt::ArgumentV1::new(&(#arg), #DOLLAR_CRATE::fmt::Display::fmt), }\n+        quote! { #DOLLAR_CRATE::fmt::Argument::new(&(#arg), #DOLLAR_CRATE::fmt::Display::fmt), }\n     }.token_trees);\n     let expanded = quote! {\n         #DOLLAR_CRATE::fmt::Arguments::new_v1(&[], &[##arg_tts])"}, {"sha": "a9cd8e705a4cf27701038086dc524d5d4bb30c93", "filename": "crates/proc-macro-srv/src/abis/abi_sysroot/ra_server.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3a75e192586585414b2ba2d50fbf5c32dad4375b/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_sysroot%2Fra_server.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a75e192586585414b2ba2d50fbf5c32dad4375b/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_sysroot%2Fra_server.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_sysroot%2Fra_server.rs?ref=3a75e192586585414b2ba2d50fbf5c32dad4375b", "patch": "@@ -20,7 +20,7 @@ use token_stream::TokenStreamBuilder;\n mod symbol;\n pub use symbol::*;\n \n-use std::ops::Bound;\n+use std::ops::{Bound, Range};\n \n use crate::tt;\n \n@@ -298,6 +298,10 @@ impl server::Span for RustAnalyzer {\n         // FIXME handle span\n         span\n     }\n+    fn byte_range(&mut self, _span: Self::Span) -> Range<usize> {\n+        // FIXME handle span\n+        Range { start: 0, end: 0 }\n+    }\n     fn start(&mut self, _span: Self::Span) -> LineColumn {\n         // FIXME handle span\n         LineColumn { line: 0, column: 0 }"}]}