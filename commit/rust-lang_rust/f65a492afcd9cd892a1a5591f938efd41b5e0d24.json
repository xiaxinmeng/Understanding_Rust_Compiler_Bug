{"sha": "f65a492afcd9cd892a1a5591f938efd41b5e0d24", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2NWE0OTJhZmNkOWNkODkyYTFhNTU5MWY5MzhlZmQ0MWI1ZTBkMjQ=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-10-18T03:26:21Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-10-18T03:26:21Z"}, "message": "Point at enclosing function without `self` receiver", "tree": {"sha": "546101f39f5a3ea68986c042d91f86e3f8fc1eb4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/546101f39f5a3ea68986c042d91f86e3f8fc1eb4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f65a492afcd9cd892a1a5591f938efd41b5e0d24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f65a492afcd9cd892a1a5591f938efd41b5e0d24", "html_url": "https://github.com/rust-lang/rust/commit/f65a492afcd9cd892a1a5591f938efd41b5e0d24", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f65a492afcd9cd892a1a5591f938efd41b5e0d24/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11011013f2b609b6cf58c96555b9e31dfd19d7ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/11011013f2b609b6cf58c96555b9e31dfd19d7ee", "html_url": "https://github.com/rust-lang/rust/commit/11011013f2b609b6cf58c96555b9e31dfd19d7ee"}], "stats": {"total": 43, "additions": 34, "deletions": 9}, "files": [{"sha": "73a282b1a0ec1e9e159133b675d85d3f2bdbcb66", "filename": "src/librustc_resolve/late.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f65a492afcd9cd892a1a5591f938efd41b5e0d24/src%2Flibrustc_resolve%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f65a492afcd9cd892a1a5591f938efd41b5e0d24/src%2Flibrustc_resolve%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate.rs?ref=f65a492afcd9cd892a1a5591f938efd41b5e0d24", "patch": "@@ -345,6 +345,9 @@ struct LateResolutionVisitor<'a, 'b> {\n     /// The current self item if inside an ADT (used for better errors).\n     current_self_item: Option<NodeId>,\n \n+    /// The current enclosing funciton (used for better errors).\n+    current_function: Option<Span>,\n+\n     /// A list of labels as of yet unused. Labels will be removed from this map when\n     /// they are used (in a `break` or `continue` statement)\n     unused_labels: FxHashMap<NodeId, Span>,\n@@ -415,7 +418,8 @@ impl<'a, 'tcx> Visitor<'tcx> for LateResolutionVisitor<'a, '_> {\n             }\n         }\n     }\n-    fn visit_fn(&mut self, fn_kind: FnKind<'tcx>, declaration: &'tcx FnDecl, _: Span, _: NodeId) {\n+    fn visit_fn(&mut self, fn_kind: FnKind<'tcx>, declaration: &'tcx FnDecl, sp: Span, _: NodeId) {\n+        let previous_value = replace(&mut self.current_function, Some(sp));\n         debug!(\"(resolving function) entering function\");\n         let rib_kind = match fn_kind {\n             FnKind::ItemFn(..) => FnItemRibKind,\n@@ -441,6 +445,7 @@ impl<'a, 'tcx> Visitor<'tcx> for LateResolutionVisitor<'a, '_> {\n                 debug!(\"(resolving function) leaving function\");\n             })\n         });\n+        self.current_function = previous_value;\n     }\n \n     fn visit_generics(&mut self, generics: &'tcx Generics) {\n@@ -546,6 +551,7 @@ impl<'a, 'b> LateResolutionVisitor<'a, '_> {\n             current_trait_assoc_types: Vec::new(),\n             current_self_type: None,\n             current_self_item: None,\n+            current_function: None,\n             unused_labels: Default::default(),\n             current_type_ascription: Vec::new(),\n         }"}, {"sha": "2721df4c687636d7b10924e0acae6e328a6664db", "filename": "src/librustc_resolve/late/diagnostics.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f65a492afcd9cd892a1a5591f938efd41b5e0d24/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f65a492afcd9cd892a1a5591f938efd41b5e0d24/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs?ref=f65a492afcd9cd892a1a5591f938efd41b5e0d24", "patch": "@@ -134,6 +134,9 @@ impl<'a> LateResolutionVisitor<'a, '_> {\n                     \"`self` value is a keyword only available in methods with a `self` parameter\",\n                 ),\n             });\n+            if let Some(span) = &self.current_function {\n+                err.span_label(*span, \"this function doesn't have a `self` parameter\");\n+            }\n             return (err, Vec::new());\n         }\n "}, {"sha": "567d1b3cc75f4c44447645e60e8c5fb3ee59240d", "filename": "src/test/ui/error-codes/E0424.stderr", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f65a492afcd9cd892a1a5591f938efd41b5e0d24/src%2Ftest%2Fui%2Ferror-codes%2FE0424.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f65a492afcd9cd892a1a5591f938efd41b5e0d24/src%2Ftest%2Fui%2Ferror-codes%2FE0424.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0424.stderr?ref=f65a492afcd9cd892a1a5591f938efd41b5e0d24", "patch": "@@ -1,14 +1,20 @@\n error[E0424]: expected value, found module `self`\n   --> $DIR/E0424.rs:7:9\n    |\n-LL |         self.bar();\n-   |         ^^^^ `self` value is a keyword only available in methods with a `self` parameter\n+LL | /     fn foo() {\n+LL | |         self.bar();\n+   | |         ^^^^ `self` value is a keyword only available in methods with a `self` parameter\n+LL | |     }\n+   | |_____- this function doesn't have a `self` parameter\n \n error[E0424]: expected unit struct/variant or constant, found module `self`\n   --> $DIR/E0424.rs:12:9\n    |\n-LL |     let self = \"self\";\n-   |         ^^^^ `self` value is a keyword and may not be bound to variables or shadowed\n+LL | / fn main () {\n+LL | |     let self = \"self\";\n+   | |         ^^^^ `self` value is a keyword and may not be bound to variables or shadowed\n+LL | | }\n+   | |_- this function doesn't have a `self` parameter\n \n error: aborting due to 2 previous errors\n "}, {"sha": "329543114a610af024f2e64af610188782df3b2b", "filename": "src/test/ui/resolve/issue-2356.stderr", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f65a492afcd9cd892a1a5591f938efd41b5e0d24/src%2Ftest%2Fui%2Fresolve%2Fissue-2356.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f65a492afcd9cd892a1a5591f938efd41b5e0d24/src%2Ftest%2Fui%2Fresolve%2Fissue-2356.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-2356.stderr?ref=f65a492afcd9cd892a1a5591f938efd41b5e0d24", "patch": "@@ -61,8 +61,14 @@ LL |         purr();\n error[E0424]: expected value, found module `self`\n   --> $DIR/issue-2356.rs:65:8\n    |\n-LL |     if self.whiskers > 3 {\n-   |        ^^^^ `self` value is a keyword only available in methods with a `self` parameter\n+LL | /   fn meow() {\n+LL | |     if self.whiskers > 3 {\n+   | |        ^^^^ `self` value is a keyword only available in methods with a `self` parameter\n+LL | |\n+LL | |         println!(\"MEOW\");\n+LL | |     }\n+LL | |   }\n+   | |___- this function doesn't have a `self` parameter\n \n error[E0425]: cannot find function `grow_older` in this scope\n   --> $DIR/issue-2356.rs:72:5\n@@ -97,8 +103,12 @@ LL |     purr_louder();\n error[E0424]: expected value, found module `self`\n   --> $DIR/issue-2356.rs:92:5\n    |\n-LL |     self += 1;\n-   |     ^^^^ `self` value is a keyword only available in methods with a `self` parameter\n+LL | / fn main() {\n+LL | |     self += 1;\n+   | |     ^^^^ `self` value is a keyword only available in methods with a `self` parameter\n+LL | |\n+LL | | }\n+   | |_- this function doesn't have a `self` parameter\n \n error: aborting due to 17 previous errors\n "}]}