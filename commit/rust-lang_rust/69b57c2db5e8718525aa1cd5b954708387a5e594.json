{"sha": "69b57c2db5e8718525aa1cd5b954708387a5e594", "node_id": "C_kwDOAAsO6NoAKDY5YjU3YzJkYjVlODcxODUyNWFhMWNkNWI5NTQ3MDgzODdhNWU1OTQ", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2023-03-29T06:32:25Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2023-03-30T16:23:40Z"}, "message": "Update `ty::VariantDef` to use `IndexVec<FieldIdx, FieldDef>`\n\nAnd while doing the updates for that, also uses `FieldIdx` in `ProjectionKind::Field` and `TypeckResults::field_indices`.\n\nThere's more places that could use it (like `rustc_const_eval` and `LayoutS`), but I tried to keep this PR from exploding to *even more* places.\n\nPart 2/? of https://github.com/rust-lang/compiler-team/issues/606", "tree": {"sha": "55819351082c80a5161db5a20651126a4fe8e824", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55819351082c80a5161db5a20651126a4fe8e824"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69b57c2db5e8718525aa1cd5b954708387a5e594", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69b57c2db5e8718525aa1cd5b954708387a5e594", "html_url": "https://github.com/rust-lang/rust/commit/69b57c2db5e8718525aa1cd5b954708387a5e594", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69b57c2db5e8718525aa1cd5b954708387a5e594/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e88c4052c3aa2438d840a24420eaa64d40c9cae8", "url": "https://api.github.com/repos/rust-lang/rust/commits/e88c4052c3aa2438d840a24420eaa64d40c9cae8", "html_url": "https://github.com/rust-lang/rust/commit/e88c4052c3aa2438d840a24420eaa64d40c9cae8"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "1b69862ce2ca1642c81eb71a7b04f6d64733ecf1", "filename": "src/value_and_place.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/69b57c2db5e8718525aa1cd5b954708387a5e594/src%2Fvalue_and_place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69b57c2db5e8718525aa1cd5b954708387a5e594/src%2Fvalue_and_place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvalue_and_place.rs?ref=69b57c2db5e8718525aa1cd5b954708387a5e594", "patch": "@@ -701,7 +701,8 @@ impl<'tcx> CPlace<'tcx> {\n                     };\n                 }\n                 ty::Adt(adt_def, substs) if layout.ty.is_simd() => {\n-                    let f0_ty = adt_def.non_enum_variant().fields[0].ty(fx.tcx, substs);\n+                    let f0 = &adt_def.non_enum_variant().fields[FieldIdx::from_u32(0)];\n+                    let f0_ty = f0.ty(fx.tcx, substs);\n \n                     match f0_ty.kind() {\n                         ty::Array(_, _) => {"}]}