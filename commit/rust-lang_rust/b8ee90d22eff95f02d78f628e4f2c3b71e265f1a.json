{"sha": "b8ee90d22eff95f02d78f628e4f2c3b71e265f1a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4ZWU5MGQyMmVmZjk1ZjAyZDc4ZjYyOGU0ZjJjM2I3MWUyNjVmMWE=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-10-09T15:56:47Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-10-11T16:38:24Z"}, "message": "Throw error instead of panicking for unfittable bits", "tree": {"sha": "584a5f8f7833e6fbb7740192de2d9e31d7bf4599", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/584a5f8f7833e6fbb7740192de2d9e31d7bf4599"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8ee90d22eff95f02d78f628e4f2c3b71e265f1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8ee90d22eff95f02d78f628e4f2c3b71e265f1a", "html_url": "https://github.com/rust-lang/rust/commit/b8ee90d22eff95f02d78f628e4f2c3b71e265f1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8ee90d22eff95f02d78f628e4f2c3b71e265f1a/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f24c126249990f337f7e940b586a1424081d9c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f24c126249990f337f7e940b586a1424081d9c6", "html_url": "https://github.com/rust-lang/rust/commit/9f24c126249990f337f7e940b586a1424081d9c6"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "fea2307dcca5d8c5392b77999bf4336423635d83", "filename": "src/helpers.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b8ee90d22eff95f02d78f628e4f2c3b71e265f1a/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8ee90d22eff95f02d78f628e4f2c3b71e265f1a/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=b8ee90d22eff95f02d78f628e4f2c3b71e265f1a", "patch": "@@ -4,7 +4,7 @@ use rustc::hir::def_id::{DefId, CRATE_DEF_INDEX};\n use rustc::mir;\n use rustc::ty::{\n     self,\n-    layout::{self, Align, Size, LayoutOf},\n+    layout::{self, Align, LayoutOf, Size},\n };\n \n use rand::RngCore;\n@@ -328,11 +328,22 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         let allocation = this.memory_mut().get_mut(ptr.alloc_id)?;\n         let mut offset = Size::from_bytes(0);\n \n-        for (value, size) in bits.iter().zip(sizes) {\n+        for (&value, size) in bits.iter().zip(sizes) {\n+            // If `value` does not fit in `size` bits, we error instead of letting\n+            // `Scalar::from_int` panic.\n+            let truncated = truncate(value as u128, size);\n+            if sign_extend(truncated, size) as i128 != value {\n+                throw_unsup_format!(\n+                    \"Signed value {:#x} does not fit in {} bits\",\n+                    value,\n+                    size.bits()\n+                )\n+            }\n+\n             allocation.write_scalar(\n                 tcx,\n                 ptr.offset(offset, tcx)?,\n-                Scalar::from_int(*value, size).into(),\n+                Scalar::from_int(value, size).into(),\n                 size,\n             )?;\n             offset += size;"}]}