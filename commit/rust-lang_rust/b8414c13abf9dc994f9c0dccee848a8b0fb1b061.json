{"sha": "b8414c13abf9dc994f9c0dccee848a8b0fb1b061", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4NDE0YzEzYWJmOWRjOTk0ZjljMGRjY2VlODQ4YThiMGZiMWIwNjE=", "commit": {"author": {"name": "Adam Perry", "email": "adam.n.perry@gmail.com", "date": "2019-10-09T13:20:23Z"}, "committer": {"name": "Adam Perry", "email": "adam.n.perry@gmail.com", "date": "2019-10-10T03:19:09Z"}, "message": "Return ReifyShim from Instance::resolve_for_fn_ptr when track_caller present.\n\nThis ICEs in MIR currently, which I think is to be expected since none of the MIR plumbing is set up. I added a test which confirms that the shim is being used for reifying a track_caller function.", "tree": {"sha": "c3cd04665d799959a41cc43d3763fa66347b37ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3cd04665d799959a41cc43d3763fa66347b37ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8414c13abf9dc994f9c0dccee848a8b0fb1b061", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8414c13abf9dc994f9c0dccee848a8b0fb1b061", "html_url": "https://github.com/rust-lang/rust/commit/b8414c13abf9dc994f9c0dccee848a8b0fb1b061", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8414c13abf9dc994f9c0dccee848a8b0fb1b061/comments", "author": {"login": "anp", "id": 6812281, "node_id": "MDQ6VXNlcjY4MTIyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6812281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anp", "html_url": "https://github.com/anp", "followers_url": "https://api.github.com/users/anp/followers", "following_url": "https://api.github.com/users/anp/following{/other_user}", "gists_url": "https://api.github.com/users/anp/gists{/gist_id}", "starred_url": "https://api.github.com/users/anp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anp/subscriptions", "organizations_url": "https://api.github.com/users/anp/orgs", "repos_url": "https://api.github.com/users/anp/repos", "events_url": "https://api.github.com/users/anp/events{/privacy}", "received_events_url": "https://api.github.com/users/anp/received_events", "type": "User", "site_admin": false}, "committer": {"login": "anp", "id": 6812281, "node_id": "MDQ6VXNlcjY4MTIyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6812281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anp", "html_url": "https://github.com/anp", "followers_url": "https://api.github.com/users/anp/followers", "following_url": "https://api.github.com/users/anp/following{/other_user}", "gists_url": "https://api.github.com/users/anp/gists{/gist_id}", "starred_url": "https://api.github.com/users/anp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anp/subscriptions", "organizations_url": "https://api.github.com/users/anp/orgs", "repos_url": "https://api.github.com/users/anp/repos", "events_url": "https://api.github.com/users/anp/events{/privacy}", "received_events_url": "https://api.github.com/users/anp/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01327384370b81e3a155dc70a2533935c4495db8", "url": "https://api.github.com/repos/rust-lang/rust/commits/01327384370b81e3a155dc70a2533935c4495db8", "html_url": "https://github.com/rust-lang/rust/commit/01327384370b81e3a155dc70a2533935c4495db8"}], "stats": {"total": 41, "additions": 39, "deletions": 2}, "files": [{"sha": "18b625984e1a256254cb8e4281ad74c5ead975b1", "filename": "src/librustc/ty/instance.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b8414c13abf9dc994f9c0dccee848a8b0fb1b061/src%2Flibrustc%2Fty%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8414c13abf9dc994f9c0dccee848a8b0fb1b061/src%2Flibrustc%2Fty%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Finstance.rs?ref=b8414c13abf9dc994f9c0dccee848a8b0fb1b061", "patch": "@@ -1,4 +1,4 @@\n-// use crate::hir::CodegenFnAttrFlags;\n+use crate::hir::CodegenFnAttrFlags;\n use crate::hir::Unsafety;\n use crate::hir::def::Namespace;\n use crate::hir::def_id::DefId;\n@@ -305,7 +305,7 @@ impl<'tcx> Instance<'tcx> {\n         substs: SubstsRef<'tcx>,\n     ) -> Option<Instance<'tcx>> {\n         debug!(\"resolve(def_id={:?}, substs={:?})\", def_id, substs);\n-        if false {\n+        if tcx.codegen_fn_attrs(def_id).flags.contains(CodegenFnAttrFlags::TRACK_CALLER) {\n             debug!(\" => fn pointer created for function with #[track_caller]\");\n             Some(Instance {\n                 def: InstanceDef::ReifyShim(def_id),"}, {"sha": "df3893f2a6a19c80eec848ed8fdd6fa2a3609c31", "filename": "src/test/ui/rfc-2091-track-caller/taking-fn-pointer.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b8414c13abf9dc994f9c0dccee848a8b0fb1b061/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftaking-fn-pointer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8414c13abf9dc994f9c0dccee848a8b0fb1b061/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftaking-fn-pointer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftaking-fn-pointer.rs?ref=b8414c13abf9dc994f9c0dccee848a8b0fb1b061", "patch": "@@ -0,0 +1,16 @@\n+// failure-status: 101\n+// normalize-stderr-test \"note: rustc 1.* running on .*\" -> \"note: rustc VERSION running on TARGET\"\n+// normalize-stderr-test \"note: compiler flags: .*\" -> \"note: compiler flags: FLAGS\"\n+\n+#![feature(track_caller)] //~ WARN the feature `track_caller` is incomplete\n+\n+#[track_caller]\n+fn f() {}\n+\n+fn call_it(x: fn()) {\n+    x();\n+}\n+\n+fn main() {\n+    call_it(f);\n+}\n\\ No newline at end of file"}, {"sha": "fb625ae116e7cc75085c2ff8887829eca357ad33", "filename": "src/test/ui/rfc-2091-track-caller/taking-fn-pointer.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/b8414c13abf9dc994f9c0dccee848a8b0fb1b061/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftaking-fn-pointer.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b8414c13abf9dc994f9c0dccee848a8b0fb1b061/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftaking-fn-pointer.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftaking-fn-pointer.stderr?ref=b8414c13abf9dc994f9c0dccee848a8b0fb1b061", "patch": "@@ -0,0 +1,21 @@\n+warning: the feature `track_caller` is incomplete and may cause the compiler to crash\n+  --> $DIR/taking-fn-pointer.rs:5:12\n+   |\n+LL | #![feature(track_caller)]\n+   |            ^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n+thread 'rustc' panicked at 'index out of bounds: the len is 1 but the index is 1', $SRC_DIR/libcore/slice/mod.rs:LL:COL\n+note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n+\n+error: internal compiler error: unexpected panic\n+\n+note: the compiler unexpectedly panicked. this is a bug.\n+\n+note: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n+\n+note: rustc VERSION running on TARGET\n+\n+note: compiler flags: FLAGS\n+"}]}