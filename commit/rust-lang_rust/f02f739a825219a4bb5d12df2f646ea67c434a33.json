{"sha": "f02f739a825219a4bb5d12df2f646ea67c434a33", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwMmY3MzlhODI1MjE5YTRiYjVkMTJkZjJmNjQ2ZWE2N2M0MzRhMzM=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-06-02T07:09:44Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-06-02T16:18:32Z"}, "message": "rustdoc: Correctly inline required/provided methods\n\nApparently relying on provided_source in ty::Method is unreliable!\n\nCloses #14594", "tree": {"sha": "7e4684eda4df06f1aeb1cc26aa77ccff3f628328", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e4684eda4df06f1aeb1cc26aa77ccff3f628328"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f02f739a825219a4bb5d12df2f646ea67c434a33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f02f739a825219a4bb5d12df2f646ea67c434a33", "html_url": "https://github.com/rust-lang/rust/commit/f02f739a825219a4bb5d12df2f646ea67c434a33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f02f739a825219a4bb5d12df2f646ea67c434a33/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "287af7fa1a2230b25d2ffe98c5cc623ad34c6287", "url": "https://api.github.com/repos/rust-lang/rust/commits/287af7fa1a2230b25d2ffe98c5cc623ad34c6287", "html_url": "https://github.com/rust-lang/rust/commit/287af7fa1a2230b25d2ffe98c5cc623ad34c6287"}], "stats": {"total": 28, "additions": 16, "deletions": 12}, "files": [{"sha": "575dd057867fb24b7e7df3d5ce3058c5aa7ba5f2", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f02f739a825219a4bb5d12df2f646ea67c434a33/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f02f739a825219a4bb5d12df2f646ea67c434a33/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=f02f739a825219a4bb5d12df2f646ea67c434a33", "patch": "@@ -129,7 +129,7 @@ pub fn record_extern_fqn(cx: &core::DocContext,\n     match cx.maybe_typed {\n         core::Typed(ref tcx) => {\n             let fqn = csearch::get_item_path(tcx, did);\n-            let fqn = fqn.move_iter().map(|i| i.to_str().to_string()).collect();\n+            let fqn = fqn.move_iter().map(|i| i.to_str()).collect();\n             cx.external_paths.borrow_mut().get_mut_ref().insert(did, (fqn, kind));\n         }\n         core::NotTyped(..) => {}\n@@ -138,10 +138,18 @@ pub fn record_extern_fqn(cx: &core::DocContext,\n \n pub fn build_external_trait(tcx: &ty::ctxt, did: ast::DefId) -> clean::Trait {\n     let def = ty::lookup_trait_def(tcx, did);\n-    let methods = ty::trait_methods(tcx, did);\n+    let methods = ty::trait_methods(tcx, did).clean();\n+    let provided = ty::provided_trait_methods(tcx, did);\n+    let mut methods = methods.move_iter().map(|meth| {\n+        if provided.iter().any(|a| a.def_id == meth.def_id) {\n+            clean::Provided(meth)\n+        } else {\n+            clean::Required(meth)\n+        }\n+    });\n     clean::Trait {\n         generics: def.generics.clean(),\n-        methods: methods.iter().map(|i| i.clean()).collect(),\n+        methods: methods.collect(),\n         parents: Vec::new(), // FIXME: this is likely wrong\n     }\n }\n@@ -263,10 +271,7 @@ fn build_impl(cx: &core::DocContext,\n         if method.vis != ast::Public && associated_trait.is_none() {\n             return None\n         }\n-        let mut item = match ty::method(tcx, *did).clean() {\n-            clean::Provided(item) => item,\n-            clean::Required(item) => item,\n-        };\n+        let mut item = ty::method(tcx, *did).clean();\n         item.inner = match item.inner.clone() {\n             clean::TyMethodItem(clean::TyMethod {\n                 fn_style, decl, self_, generics"}, {"sha": "a289d767f95ece2e241363ac88dd7b8bac30d3e4", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f02f739a825219a4bb5d12df2f646ea67c434a33/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f02f739a825219a4bb5d12df2f646ea67c434a33/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=f02f739a825219a4bb5d12df2f646ea67c434a33", "patch": "@@ -942,9 +942,8 @@ impl Clean<TraitMethod> for ast::TraitMethod {\n     }\n }\n \n-impl Clean<TraitMethod> for ty::Method {\n-    fn clean(&self) -> TraitMethod {\n-        let m = if self.provided_source.is_some() {Provided} else {Required};\n+impl Clean<Item> for ty::Method {\n+    fn clean(&self) -> Item {\n         let cx = super::ctxtkey.get().unwrap();\n         let tcx = match cx.maybe_typed {\n             core::Typed(ref tcx) => tcx,\n@@ -972,7 +971,7 @@ impl Clean<TraitMethod> for ty::Method {\n             }\n         };\n \n-        m(Item {\n+        Item {\n             name: Some(self.ident.clean()),\n             visibility: Some(ast::Inherited),\n             def_id: self.def_id,\n@@ -984,7 +983,7 @@ impl Clean<TraitMethod> for ty::Method {\n                 self_: self_,\n                 decl: (self.def_id, &sig).clean(),\n             })\n-        })\n+        }\n     }\n }\n "}]}