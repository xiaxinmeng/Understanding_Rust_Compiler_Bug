{"sha": "14d2cd0b0af2490415d776694f10f581bed5a065", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0ZDJjZDBiMGFmMjQ5MDQxNWQ3NzY2OTRmMTBmNTgxYmVkNWEwNjU=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-08-18T11:07:47Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-08-19T15:27:24Z"}, "message": "`unused_import` is a valid lint to be changed on `use` statements", "tree": {"sha": "e376cc80f593737734eeffbe3967e39d3c0203b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e376cc80f593737734eeffbe3967e39d3c0203b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14d2cd0b0af2490415d776694f10f581bed5a065", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXtyVcAAoJEFbW7qD8Z6xGcacP/2l4wYBxVnFNuZWAue/7Z5yM\nWjnG1UcS8G2KczTG6zagq36o6krZZ+9fS79DTaI7vykAWYwZreVeKX6Y31VDop9B\n/DiTBMtU9Tc8rSjSusWYiol5CILOsnkv7es7+V8oh3KX/tybrkzMQTF8Qa3TVsly\nhIyUz/ICuhiXo9u8sDqgpVaGBdJGdfxFsFsZAX/UFS+LOI+vZD8G0HUUAiG6TZ7j\nQwGfBqF5FlE3UIA0yeSjbWQgHLmdF6+AULpzDGK6plzW3PBgW2x++pkjEpt+ejwj\nEyXW6JO26oq1SbQNyxv4aRR24coQ9WafAVXMyULsD+9Dn2F63woR29vzQJpqOzgr\nTA9MdoNTujFVq3BNiqWGN3YK2fZht07VFAYrf4f8D5C2GJhJq5Ji6jCWtAVuyEwJ\nAL5USIqo+zZ5lMhYkzwbDWrRJRjrZnXB8C35hCwehnkHFfVmg/r/bQsTf7phqm0Q\nyCxkeexpsX1T4l5TsY0QHAxTYlEq20Ld+zWx62yiuJilv2zKEFUXiceaFPyMSL+/\nQcmlXIqKoZvp76xEkdSWerQLwXejyuLgKm8ZSxb2DXU1CtQkQR1Ptz7vfIqIAFf2\ngit1pvaZvgwKQNcODNaGHOh8eY1grYfuyhnfsL83L7jq4zYvzOdzKy1hlsc7jb6q\nhTNCNwiC6E/VJ7QY9bSL\n=lHbq\n-----END PGP SIGNATURE-----", "payload": "tree e376cc80f593737734eeffbe3967e39d3c0203b8\nparent 2d57902a27d09f327670e9ae3001e1d27aba5352\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1471518467 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1471620444 +0200\n\n`unused_import` is a valid lint to be changed on `use` statements"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14d2cd0b0af2490415d776694f10f581bed5a065", "html_url": "https://github.com/rust-lang/rust/commit/14d2cd0b0af2490415d776694f10f581bed5a065", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14d2cd0b0af2490415d776694f10f581bed5a065/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d57902a27d09f327670e9ae3001e1d27aba5352", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d57902a27d09f327670e9ae3001e1d27aba5352", "html_url": "https://github.com/rust-lang/rust/commit/2d57902a27d09f327670e9ae3001e1d27aba5352"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "086716c1f46466db593c2fdc6fffeab2d4f22e58", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/14d2cd0b0af2490415d776694f10f581bed5a065/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14d2cd0b0af2490415d776694f10f581bed5a065/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=14d2cd0b0af2490415d776694f10f581bed5a065", "patch": "@@ -106,9 +106,19 @@ impl LateLintPass for AttrPass {\n             ItemExternCrate(_) |\n             ItemUse(_) => {\n                 for attr in &item.attrs {\n-                    if let MetaItemKind::List(ref name, _) = attr.node.value.node {\n+                    if let MetaItemKind::List(ref name, ref lint_list) = attr.node.value.node {\n                         match &**name {\n                             \"allow\" | \"warn\" | \"deny\" | \"forbid\" => {\n+                                // whitelist `unused_imports`\n+                                for lint in lint_list {\n+                                    if let MetaItemKind::Word(ref word) = lint.node {\n+                                        if word == \"unused_imports\" {\n+                                            if let ItemUse(_) = item.node {\n+                                                return;\n+                                            }\n+                                        }\n+                                    }\n+                                }\n                                 if let Some(mut sugg) = snippet_opt(cx, attr.span) {\n                                     if sugg.len() > 1 {\n                                         span_lint_and_then(cx, USELESS_ATTRIBUTE, attr.span,"}]}