{"sha": "ceb94ece2aa6a1b54063c582663fff4c1937d989", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlYjk0ZWNlMmFhNmExYjU0MDYzYzU4MjY2M2ZmZjRjMTkzN2Q5ODk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-02-11T08:19:54Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-02-11T08:19:54Z"}, "message": "G: pointer types", "tree": {"sha": "7095bf13e1465663f92db09b9a3e1207122645bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7095bf13e1465663f92db09b9a3e1207122645bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ceb94ece2aa6a1b54063c582663fff4c1937d989", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ceb94ece2aa6a1b54063c582663fff4c1937d989", "html_url": "https://github.com/rust-lang/rust/commit/ceb94ece2aa6a1b54063c582663fff4c1937d989", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ceb94ece2aa6a1b54063c582663fff4c1937d989/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2389cf96dd07d8c94da349b10f6f2b750707dfd9", "url": "https://api.github.com/repos/rust-lang/rust/commits/2389cf96dd07d8c94da349b10f6f2b750707dfd9", "html_url": "https://github.com/rust-lang/rust/commit/2389cf96dd07d8c94da349b10f6f2b750707dfd9"}], "stats": {"total": 102, "additions": 94, "deletions": 8}, "files": [{"sha": "b43b58f02adc4c88cc33a0e3c8d6e24486ced038", "filename": "grammar.ron", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ceb94ece2aa6a1b54063c582663fff4c1937d989/grammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/ceb94ece2aa6a1b54063c582663fff4c1937d989/grammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/grammar.ron?ref=ceb94ece2aa6a1b54063c582663fff4c1937d989", "patch": "@@ -105,6 +105,7 @@ Grammar(\n         \"TUPLE_TYPE\",\n         \"NEVER_TYPE\",\n         \"PATH_TYPE\",\n+        \"POINTER_TYPE\",\n \n         \"EXTERN_BLOCK\",\n         \"ENUM_VARIANT\","}, {"sha": "ceadf5f96a742e4e49e58ab283355d8a826db92c", "filename": "src/parser/grammar/types.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/ceb94ece2aa6a1b54063c582663fff4c1937d989/src%2Fparser%2Fgrammar%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ceb94ece2aa6a1b54063c582663fff4c1937d989/src%2Fparser%2Fgrammar%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fgrammar%2Ftypes.rs?ref=ceb94ece2aa6a1b54063c582663fff4c1937d989", "patch": "@@ -4,13 +4,18 @@ pub(super) fn type_(p: &mut Parser) {\n     match p.current() {\n         L_PAREN => paren_or_tuple_type(p),\n         EXCL => never_type(p),\n+        STAR => pointer_type(p),\n         IDENT => path_type(p),\n         _ => {\n             p.error(\"expected type\");\n         }\n     }\n }\n \n+fn type_no_plus(p: &mut Parser) {\n+    type_(p);\n+}\n+\n fn paren_or_tuple_type(p: &mut Parser) {\n     assert!(p.at(L_PAREN));\n     let m = p.start();\n@@ -53,6 +58,30 @@ fn never_type(p: &mut Parser) {\n     m.complete(p, NEVER_TYPE);\n }\n \n+fn pointer_type(p: &mut Parser) {\n+    assert!(p.at(STAR));\n+    let m = p.start();\n+    p.bump();\n+\n+    match p.current() {\n+        // test pointer_type_mut\n+        // type M = *mut ();\n+        // type C = *mut ();\n+        MUT_KW | CONST_KW => p.bump(),\n+        _ => {\n+            // test pointer_type_no_mutability\n+            // type T = *();\n+            p.error(\n+                \"expected mut or const in raw pointer type \\\n+                (use `*mut T` or `*const T` as appropriate)\"\n+            );\n+        }\n+    };\n+\n+    type_no_plus(p);\n+    m.complete(p, POINTER_TYPE);\n+}\n+\n fn path_type(p: &mut Parser) {\n     assert!(p.at(IDENT));\n     let m = p.start();"}, {"sha": "181dcc63b8ed6152d67e50a23d0a04e528c272d9", "filename": "src/syntax_kinds.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ceb94ece2aa6a1b54063c582663fff4c1937d989/src%2Fsyntax_kinds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ceb94ece2aa6a1b54063c582663fff4c1937d989/src%2Fsyntax_kinds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsyntax_kinds.rs?ref=ceb94ece2aa6a1b54063c582663fff4c1937d989", "patch": "@@ -103,6 +103,7 @@ pub enum SyntaxKind {\n     TUPLE_TYPE,\n     NEVER_TYPE,\n     PATH_TYPE,\n+    POINTER_TYPE,\n     EXTERN_BLOCK,\n     ENUM_VARIANT,\n     NAMED_FIELD,\n@@ -232,6 +233,7 @@ impl SyntaxKind {\n             TUPLE_TYPE => &SyntaxInfo { name: \"TUPLE_TYPE\" },\n             NEVER_TYPE => &SyntaxInfo { name: \"NEVER_TYPE\" },\n             PATH_TYPE => &SyntaxInfo { name: \"PATH_TYPE\" },\n+            POINTER_TYPE => &SyntaxInfo { name: \"POINTER_TYPE\" },\n             EXTERN_BLOCK => &SyntaxInfo { name: \"EXTERN_BLOCK\" },\n             ENUM_VARIANT => &SyntaxInfo { name: \"ENUM_VARIANT\" },\n             NAMED_FIELD => &SyntaxInfo { name: \"NAMED_FIELD\" },"}, {"sha": "fae70513133482995a7a1980b5d4057c0ec21608", "filename": "tests/data/parser/inline/0021_pointer_type_no_mutability.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ceb94ece2aa6a1b54063c582663fff4c1937d989/tests%2Fdata%2Fparser%2Finline%2F0021_pointer_type_no_mutability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ceb94ece2aa6a1b54063c582663fff4c1937d989/tests%2Fdata%2Fparser%2Finline%2F0021_pointer_type_no_mutability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0021_pointer_type_no_mutability.rs?ref=ceb94ece2aa6a1b54063c582663fff4c1937d989", "patch": "@@ -0,0 +1 @@\n+type T = *();"}, {"sha": "f7720a712d9486e93179f5c129e145188b20294f", "filename": "tests/data/parser/inline/0021_pointer_type_no_mutability.txt", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ceb94ece2aa6a1b54063c582663fff4c1937d989/tests%2Fdata%2Fparser%2Finline%2F0021_pointer_type_no_mutability.txt", "raw_url": "https://github.com/rust-lang/rust/raw/ceb94ece2aa6a1b54063c582663fff4c1937d989/tests%2Fdata%2Fparser%2Finline%2F0021_pointer_type_no_mutability.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0021_pointer_type_no_mutability.txt?ref=ceb94ece2aa6a1b54063c582663fff4c1937d989", "patch": "@@ -0,0 +1,17 @@\n+FILE@[0; 14)\n+  TYPE_ITEM@[0; 14)\n+    TYPE_KW@[0; 4)\n+    NAME@[4; 7)\n+      WHITESPACE@[4; 5)\n+      IDENT@[5; 6) \"T\"\n+      WHITESPACE@[6; 7)\n+    EQ@[7; 8)\n+    POINTER_TYPE@[8; 12)\n+      WHITESPACE@[8; 9)\n+      STAR@[9; 10)\n+      err: `expected mut or const in raw pointer type (use `*mut T` or `*const T` as appropriate)`\n+      TUPLE_TYPE@[10; 12)\n+        L_PAREN@[10; 11)\n+        R_PAREN@[11; 12)\n+    SEMI@[12; 13)\n+    WHITESPACE@[13; 14)"}, {"sha": "04b2bb9ba5c9569e5979647783c4d682e48c1dec", "filename": "tests/data/parser/inline/0022_pointer_type_mut.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ceb94ece2aa6a1b54063c582663fff4c1937d989/tests%2Fdata%2Fparser%2Finline%2F0022_pointer_type_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ceb94ece2aa6a1b54063c582663fff4c1937d989/tests%2Fdata%2Fparser%2Finline%2F0022_pointer_type_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0022_pointer_type_mut.rs?ref=ceb94ece2aa6a1b54063c582663fff4c1937d989", "patch": "@@ -0,0 +1,2 @@\n+type M = *mut ();\n+type C = *mut ();"}, {"sha": "c3ab2b887aedd6b8f2b2bb249385b4c4f645a44d", "filename": "tests/data/parser/inline/0022_pointer_type_mut.txt", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/ceb94ece2aa6a1b54063c582663fff4c1937d989/tests%2Fdata%2Fparser%2Finline%2F0022_pointer_type_mut.txt", "raw_url": "https://github.com/rust-lang/rust/raw/ceb94ece2aa6a1b54063c582663fff4c1937d989/tests%2Fdata%2Fparser%2Finline%2F0022_pointer_type_mut.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0022_pointer_type_mut.txt?ref=ceb94ece2aa6a1b54063c582663fff4c1937d989", "patch": "@@ -0,0 +1,35 @@\n+FILE@[0; 36)\n+  TYPE_ITEM@[0; 18)\n+    TYPE_KW@[0; 4)\n+    NAME@[4; 7)\n+      WHITESPACE@[4; 5)\n+      IDENT@[5; 6) \"M\"\n+      WHITESPACE@[6; 7)\n+    EQ@[7; 8)\n+    POINTER_TYPE@[8; 16)\n+      WHITESPACE@[8; 9)\n+      STAR@[9; 10)\n+      MUT_KW@[10; 13)\n+      TUPLE_TYPE@[13; 16)\n+        WHITESPACE@[13; 14)\n+        L_PAREN@[14; 15)\n+        R_PAREN@[15; 16)\n+    SEMI@[16; 17)\n+    WHITESPACE@[17; 18)\n+  TYPE_ITEM@[18; 36)\n+    TYPE_KW@[18; 22)\n+    NAME@[22; 25)\n+      WHITESPACE@[22; 23)\n+      IDENT@[23; 24) \"C\"\n+      WHITESPACE@[24; 25)\n+    EQ@[25; 26)\n+    POINTER_TYPE@[26; 34)\n+      WHITESPACE@[26; 27)\n+      STAR@[27; 28)\n+      MUT_KW@[28; 31)\n+      TUPLE_TYPE@[31; 34)\n+        WHITESPACE@[31; 32)\n+        L_PAREN@[32; 33)\n+        R_PAREN@[33; 34)\n+    SEMI@[34; 35)\n+    WHITESPACE@[35; 36)"}, {"sha": "ae1dea810b13dabcec1764d20dfd5be477a2deb5", "filename": "tests/testutils/src/lib.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ceb94ece2aa6a1b54063c582663fff4c1937d989/tests%2Ftestutils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ceb94ece2aa6a1b54063c582663fff4c1937d989/tests%2Ftestutils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftestutils%2Fsrc%2Flib.rs?ref=ceb94ece2aa6a1b54063c582663fff4c1937d989", "patch": "@@ -26,21 +26,20 @@ where\n     F: Fn(&str) -> String,\n {\n     for path in collect_tests(paths) {\n-        let actual = {\n-            let text = read_text(&path);\n-            f(&text)\n-        };\n+        let input_code = read_text(&path);\n+        let parse_tree = f(&input_code);\n         let path = path.with_extension(\"txt\");\n         if !path.exists() {\n             println!(\"\\nfile: {}\", path.display());\n-            println!(\"No .txt file with expected result, creating...\");\n-            file::put_text(&path, actual).unwrap();\n+            println!(\"No .txt file with expected result, creating...\\n\");\n+            println!(\"{}\\n{}\", input_code, parse_tree);\n+            file::put_text(&path, parse_tree).unwrap();\n             panic!(\"No expected result\")\n         }\n         let expected = read_text(&path);\n         let expected = expected.as_str();\n-        let actual = actual.as_str();\n-        assert_equal_text(expected, actual, &path);\n+        let parse_tree = parse_tree.as_str();\n+        assert_equal_text(expected, parse_tree, &path);\n     }\n }\n "}]}