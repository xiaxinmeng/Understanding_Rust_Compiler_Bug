{"sha": "01e9d09d3bbb35a1fbb0a2a353cfcf90a4feb050", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxZTlkMDlkM2JiYjM1YTFmYmIwYTJhMzUzY2ZjZjkwYTRmZWIwNTA=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-05-06T22:38:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-06T22:38:45Z"}, "message": "Rollup merge of #84987 - lcnr:nits, r=Mark-Simulacrum\n\nsmall nits", "tree": {"sha": "3432196804ef561dd5f16833d8d2fbab6a5b0689", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3432196804ef561dd5f16833d8d2fbab6a5b0689"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01e9d09d3bbb35a1fbb0a2a353cfcf90a4feb050", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJglG/1CRBK7hj4Ov3rIwAA3qsIAGjdspoPEywJrpDedzgp+fBZ\ndOzQrPpXA7xKCj3IBJLkWI41cPKfa2T35TYRdyLffz4gODnXJtnYwpmf2aiT2PrR\nieIa08CLEvpNuRVz63C8WlnqiTh1Wm/67pDovui52HmPxwT+q50ita8datzt4rt6\n6Gk3dreJlNpkFBJrdz3t+rTL/KkKa2fEWT7JPRMQ7CezfNdO2tF2QrUKQeT+rX6G\nvAle83aAeuAm6k327StkASpY51rHiwcDZQacEGSzNuDIDJc4iKJ74EMYfI58623D\nPMc38EG4j3FiiSD8c7bTmJTtBCE7LtH1pw5MFKCnWbYUGbpMGQ761dw4xJa+pz8=\n=E0ab\n-----END PGP SIGNATURE-----\n", "payload": "tree 3432196804ef561dd5f16833d8d2fbab6a5b0689\nparent 3c5da6e6b9b0b3a7969036732ba45cd307d2cf93\nparent b9811418ddcd53dddae5bfe3ebeca5b071fff7f4\nauthor Dylan DPC <dylan.dpc@gmail.com> 1620340725 +0200\ncommitter GitHub <noreply@github.com> 1620340725 +0200\n\nRollup merge of #84987 - lcnr:nits, r=Mark-Simulacrum\n\nsmall nits\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01e9d09d3bbb35a1fbb0a2a353cfcf90a4feb050", "html_url": "https://github.com/rust-lang/rust/commit/01e9d09d3bbb35a1fbb0a2a353cfcf90a4feb050", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01e9d09d3bbb35a1fbb0a2a353cfcf90a4feb050/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c5da6e6b9b0b3a7969036732ba45cd307d2cf93", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c5da6e6b9b0b3a7969036732ba45cd307d2cf93", "html_url": "https://github.com/rust-lang/rust/commit/3c5da6e6b9b0b3a7969036732ba45cd307d2cf93"}, {"sha": "b9811418ddcd53dddae5bfe3ebeca5b071fff7f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9811418ddcd53dddae5bfe3ebeca5b071fff7f4", "html_url": "https://github.com/rust-lang/rust/commit/b9811418ddcd53dddae5bfe3ebeca5b071fff7f4"}], "stats": {"total": 8, "additions": 0, "deletions": 8}, "files": [{"sha": "1cafb2fe1a24f48be2c35cb106bb53a5c9973a2a", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/01e9d09d3bbb35a1fbb0a2a353cfcf90a4feb050/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01e9d09d3bbb35a1fbb0a2a353cfcf90a4feb050/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=01e9d09d3bbb35a1fbb0a2a353cfcf90a4feb050", "patch": "@@ -2398,9 +2398,6 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                 self.tcx.associated_item(def_id).ident\n             ),\n             infer::EarlyBoundRegion(_, name) => format!(\" for lifetime parameter `{}`\", name),\n-            infer::BoundRegionInCoherence(name) => {\n-                format!(\" for lifetime parameter `{}` in coherence check\", name)\n-            }\n             infer::UpvarRegion(ref upvar_id, _) => {\n                 let var_name = self.tcx.hir().name(upvar_id.var_path.hir_id);\n                 format!(\" for capture of `{}` by closure\", var_name)"}, {"sha": "f39431f2494b1868f53c19f58ff893eb0c93a614", "filename": "compiler/rustc_infer/src/infer/mod.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/01e9d09d3bbb35a1fbb0a2a353cfcf90a4feb050/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01e9d09d3bbb35a1fbb0a2a353cfcf90a4feb050/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs?ref=01e9d09d3bbb35a1fbb0a2a353cfcf90a4feb050", "patch": "@@ -453,8 +453,6 @@ pub enum RegionVariableOrigin {\n \n     UpvarRegion(ty::UpvarId, Span),\n \n-    BoundRegionInCoherence(Symbol),\n-\n     /// This origin is used for the inference variables that we create\n     /// during NLL region processing.\n     Nll(NllRegionVariableOrigin),\n@@ -1749,7 +1747,6 @@ impl RegionVariableOrigin {\n             | EarlyBoundRegion(a, ..)\n             | LateBoundRegion(a, ..)\n             | UpvarRegion(_, a) => a,\n-            BoundRegionInCoherence(_) => rustc_span::DUMMY_SP,\n             Nll(..) => bug!(\"NLL variable used with `span`\"),\n         }\n     }"}, {"sha": "08d452900c8e18a69b5fdbdf2f33fd9c7526e7b6", "filename": "compiler/rustc_trait_selection/src/traits/select/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/01e9d09d3bbb35a1fbb0a2a353cfcf90a4feb050/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01e9d09d3bbb35a1fbb0a2a353cfcf90a4feb050/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs?ref=01e9d09d3bbb35a1fbb0a2a353cfcf90a4feb050", "patch": "@@ -1044,8 +1044,6 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n     }\n \n     /// Returns `true` if the global caches can be used.\n-    /// Do note that if the type itself is not in the\n-    /// global tcx, the local caches will be used.\n     fn can_use_global_caches(&self, param_env: ty::ParamEnv<'tcx>) -> bool {\n         // If there are any inference variables in the `ParamEnv`, then we\n         // always use a cache local to this particular scope. Otherwise, we"}]}