{"sha": "1569fd8c55a4b67021caa89474caf6cb02112d02", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1NjlmZDhjNTVhNGI2NzAyMWNhYTg5NDc0Y2FmNmNiMDIxMTJkMDI=", "commit": {"author": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-09-06T17:46:21Z"}, "committer": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-09-06T17:46:21Z"}, "message": "Merge pull request #308 from Manishearth/unit_cmp\n\nmacro check for unit_cmp", "tree": {"sha": "b91485d66f23ce7acff76e06e75ec208c2db87d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b91485d66f23ce7acff76e06e75ec208c2db87d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1569fd8c55a4b67021caa89474caf6cb02112d02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1569fd8c55a4b67021caa89474caf6cb02112d02", "html_url": "https://github.com/rust-lang/rust/commit/1569fd8c55a4b67021caa89474caf6cb02112d02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1569fd8c55a4b67021caa89474caf6cb02112d02/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "459ef55b25e8a183cb12fbfb0cd41260fb1e5086", "url": "https://api.github.com/repos/rust-lang/rust/commits/459ef55b25e8a183cb12fbfb0cd41260fb1e5086", "html_url": "https://github.com/rust-lang/rust/commit/459ef55b25e8a183cb12fbfb0cd41260fb1e5086"}, {"sha": "391a5135e88afe2e6f86319db45b96262f350c4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/391a5135e88afe2e6f86319db45b96262f350c4d", "html_url": "https://github.com/rust-lang/rust/commit/391a5135e88afe2e6f86319db45b96262f350c4d"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "6d096e18b8815f79a959a3e3ed38601c0304b8e4", "filename": "src/types.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1569fd8c55a4b67021caa89474caf6cb02112d02/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1569fd8c55a4b67021caa89474caf6cb02112d02/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=1569fd8c55a4b67021caa89474caf6cb02112d02", "patch": "@@ -85,6 +85,7 @@ impl LintPass for UnitCmp {\n     }\n \n     fn check_expr(&mut self, cx: &Context, expr: &Expr) {\n+        if in_macro(cx, expr.span) { return; }\n         if let ExprBinary(ref cmp, ref left, _) = expr.node {\n             let op = cmp.node;\n             let sty = &cx.tcx.expr_ty(left).sty;"}]}