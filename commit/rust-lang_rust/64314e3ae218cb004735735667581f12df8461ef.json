{"sha": "64314e3ae218cb004735735667581f12df8461ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0MzE0ZTNhZTIxOGNiMDA0NzM1NzM1NjY3NTgxZjEyZGY4NDYxZWY=", "commit": {"author": {"name": "Taylor Cramer", "email": "cramertj@google.com", "date": "2017-09-19T05:55:21Z"}, "committer": {"name": "Taylor Cramer", "email": "cramertj@google.com", "date": "2017-09-21T06:45:05Z"}, "message": "Implement underscore lifetimes", "tree": {"sha": "1498279ee3a2733053a832df951b5e57f3232cb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1498279ee3a2733053a832df951b5e57f3232cb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64314e3ae218cb004735735667581f12df8461ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64314e3ae218cb004735735667581f12df8461ef", "html_url": "https://github.com/rust-lang/rust/commit/64314e3ae218cb004735735667581f12df8461ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64314e3ae218cb004735735667581f12df8461ef/comments", "author": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2504cfc7615b9247d4546672e31a9803f4b88ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2504cfc7615b9247d4546672e31a9803f4b88ba", "html_url": "https://github.com/rust-lang/rust/commit/e2504cfc7615b9247d4546672e31a9803f4b88ba"}], "stats": {"total": 146, "additions": 129, "deletions": 17}, "files": [{"sha": "6e0f49bba90ff04973bec8f9f6fde78d51eb94f1", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/64314e3ae218cb004735735667581f12df8461ef/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64314e3ae218cb004735735667581f12df8461ef/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=64314e3ae218cb004735735667581f12df8461ef", "patch": "@@ -2086,4 +2086,5 @@ register_diagnostics! {\n     E0566, // conflicting representation hints\n     E0623, // lifetime mismatch where both parameters are anonymous regions\n     E0628, // generators cannot have explicit arguments\n+    E0637, // \"'_\" is not a valid lifetime bound\n }"}, {"sha": "3d82481807e022f7721c8565c6633fb5b553fd49", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/64314e3ae218cb004735735667581f12df8461ef/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64314e3ae218cb004735735667581f12df8461ef/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=64314e3ae218cb004735735667581f12df8461ef", "patch": "@@ -159,7 +159,8 @@ impl fmt::Debug for Lifetime {\n \n impl Lifetime {\n     pub fn is_elided(&self) -> bool {\n-        self.name == keywords::Invalid.name()\n+        self.name == keywords::Invalid.name() ||\n+        self.name == \"'_\"\n     }\n \n     pub fn is_static(&self) -> bool {"}, {"sha": "8b58c75e2418e7fc46d8ede0846a28fb75435bb7", "filename": "src/librustc/middle/resolve_lifetime.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/64314e3ae218cb004735735667581f12df8461ef/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64314e3ae218cb004735735667581f12df8461ef/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs?ref=64314e3ae218cb004735735667581f12df8461ef", "patch": "@@ -1422,7 +1422,7 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n             let lifetime_i = &lifetimes[i];\n \n             for lifetime in lifetimes {\n-                if lifetime.lifetime.is_static() {\n+                if lifetime.lifetime.is_static() || lifetime.lifetime.name == \"'_\"  {\n                     let lifetime = lifetime.lifetime;\n                     let mut err = struct_span_err!(self.sess, lifetime.span, E0262,\n                                   \"invalid lifetime parameter name: `{}`\", lifetime.name);\n@@ -1452,7 +1452,13 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n             self.check_lifetime_def_for_shadowing(old_scope, &lifetime_i.lifetime);\n \n             for bound in &lifetime_i.bounds {\n-                if !bound.is_static() {\n+                if bound.name == \"'_\" {\n+                    let mut err = struct_span_err!(self.sess, bound.span, E0637,\n+                        \"invalid lifetime bound name: `{}`\", bound.name);\n+                    err.span_label(bound.span,\n+                                   format!(\"{} is a reserved lifetime name\", bound.name));\n+                    err.emit();\n+                } else if !bound.is_static() {\n                     self.resolve_lifetime_ref(bound);\n                 } else {\n                     self.insert_lifetime(bound, Region::Static);"}, {"sha": "efb5b0318099822877662560b6fe457ecbd971f6", "filename": "src/librustc_passes/ast_validation.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/64314e3ae218cb004735735667581f12df8461ef/src%2Flibrustc_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64314e3ae218cb004735735667581f12df8461ef/src%2Flibrustc_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fast_validation.rs?ref=64314e3ae218cb004735735667581f12df8461ef", "patch": "@@ -122,14 +122,6 @@ impl<'a> AstValidator<'a> {\n }\n \n impl<'a> Visitor<'a> for AstValidator<'a> {\n-    fn visit_lifetime(&mut self, lt: &'a Lifetime) {\n-        if lt.ident.name == \"'_\" {\n-            self.err_handler().span_err(lt.span, &format!(\"invalid lifetime name `{}`\", lt.ident));\n-        }\n-\n-        visit::walk_lifetime(self, lt)\n-    }\n-\n     fn visit_expr(&mut self, expr: &'a Expr) {\n         match expr.node {\n             ExprKind::While(.., Some(ident)) |"}, {"sha": "1fef382c83a34ca66d7c26e6285e317db90b2c42", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/64314e3ae218cb004735735667581f12df8461ef/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64314e3ae218cb004735735667581f12df8461ef/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=64314e3ae218cb004735735667581f12df8461ef", "patch": "@@ -389,6 +389,9 @@ declare_features! (\n     // Copy/Clone closures (RFC 2132)\n     (active, clone_closures, \"1.22.0\", Some(44490)),\n     (active, copy_closures, \"1.22.0\", Some(44490)),\n+\n+    // allow `'_` placeholder lifetimes\n+    (active, underscore_lifetimes, \"1.22.0\", Some(44524)),\n );\n \n declare_features! (\n@@ -1572,6 +1575,14 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n         }\n         visit::walk_lifetime_def(self, lifetime_def)\n     }\n+\n+    fn visit_lifetime(&mut self, lt: &'a ast::Lifetime) {\n+        if lt.ident.name == \"'_\" {\n+            gate_feature_post!(&self, underscore_lifetimes, lt.span,\n+                               \"underscore lifetimes are unstable\");\n+        }\n+        visit::walk_lifetime(self, lt)\n+    }\n }\n \n pub fn get_features(span_handler: &Handler, krate_attrs: &[ast::Attribute]) -> Features {"}, {"sha": "455529b088a2e517a5109faa1a5b2e2bc61a4fdd", "filename": "src/test/compile-fail/E0637.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/64314e3ae218cb004735735667581f12df8461ef/src%2Ftest%2Fcompile-fail%2FE0637.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64314e3ae218cb004735735667581f12df8461ef/src%2Ftest%2Fcompile-fail%2FE0637.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0637.rs?ref=64314e3ae218cb004735735667581f12df8461ef", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+#![feature(underscore_lifetimes)]\n+\n+struct Foo<'a: '_>(&'a u8); //~ ERROR invalid lifetime bound name: `'_`\n+fn foo<'a: '_>(_: &'a u8) {} //~ ERROR invalid lifetime bound name: `'_`\n+\n+struct Bar<'a>(&'a u8);\n+impl<'a: '_> Bar<'a> { //~ ERROR invalid lifetime bound name: `'_`\n+  fn bar() {}\n+}\n+\n+fn main() {}"}, {"sha": "9da50c5c8771985bbe9cd9ef3f005722a2e403b7", "filename": "src/test/compile-fail/feature-gate-underscore-lifetimes.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/64314e3ae218cb004735735667581f12df8461ef/src%2Ftest%2Fcompile-fail%2Ffeature-gate-underscore-lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64314e3ae218cb004735735667581f12df8461ef/src%2Ftest%2Fcompile-fail%2Ffeature-gate-underscore-lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-underscore-lifetimes.rs?ref=64314e3ae218cb004735735667581f12df8461ef", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct Foo<'a>(&'a u8);\n+\n+fn foo(x: &u8) -> Foo<'_> { //~ ERROR underscore lifetimes are unstable\n+    Foo(x)\n+}\n+\n+fn main() {\n+    let x = 5;\n+    let _ = foo(&x);\n+}"}, {"sha": "30411bf878909448ea925a96032ec7639d2724d3", "filename": "src/test/compile-fail/label-underscore.rs", "status": "renamed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/64314e3ae218cb004735735667581f12df8461ef/src%2Ftest%2Fcompile-fail%2Flabel-underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64314e3ae218cb004735735667581f12df8461ef/src%2Ftest%2Fcompile-fail%2Flabel-underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flabel-underscore.rs?ref=64314e3ae218cb004735735667581f12df8461ef", "patch": "@@ -8,12 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-fn _f<'_>() //~ ERROR invalid lifetime name `'_`\n-    -> &'_ u8 //~ ERROR invalid lifetime name `'_`\n-{\n-    panic!();\n-}\n-\n fn main() {\n     '_: loop { //~ ERROR invalid label name `'_`\n         break '_ //~ ERROR invalid label name `'_`", "previous_filename": "src/test/compile-fail/lifetime-underscore.rs"}, {"sha": "7d9452249c5cec82ef36b4a7744e4cca9f29c735", "filename": "src/test/compile-fail/underscore-lifetime-binders.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/64314e3ae218cb004735735667581f12df8461ef/src%2Ftest%2Fcompile-fail%2Funderscore-lifetime-binders.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64314e3ae218cb004735735667581f12df8461ef/src%2Ftest%2Fcompile-fail%2Funderscore-lifetime-binders.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funderscore-lifetime-binders.rs?ref=64314e3ae218cb004735735667581f12df8461ef", "patch": "@@ -0,0 +1,32 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(underscore_lifetimes)]\n+\n+struct Foo<'a>(&'a u8);\n+\n+fn foo<'_> //~ ERROR invalid lifetime parameter name: `'_`\n+(_: Foo<'_>) {}\n+\n+trait Meh<'a> {}\n+impl<'a> Meh<'a> for u8 {}\n+\n+fn meh() -> Box<for<'_> Meh<'_>> //~ ERROR invalid lifetime parameter name: `'_`\n+//~^ ERROR missing lifetime specifier\n+//~^^ ERROR missing lifetime specifier\n+{\n+  Box::new(5u8)\n+}\n+\n+fn main() {\n+    let x = 5;\n+    foo(Foo(&x));\n+    let _ = meh();\n+}"}, {"sha": "d3db34a7caa97fa466fc3fe618749e70a236b0d0", "filename": "src/test/run-pass/underscore-lifetimes.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/64314e3ae218cb004735735667581f12df8461ef/src%2Ftest%2Frun-pass%2Funderscore-lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64314e3ae218cb004735735667581f12df8461ef/src%2Ftest%2Frun-pass%2Funderscore-lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funderscore-lifetimes.rs?ref=64314e3ae218cb004735735667581f12df8461ef", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(underscore_lifetimes)]\n+\n+struct Foo<'a>(&'a u8);\n+\n+fn foo(x: &u8) -> Foo<'_> {\n+    Foo(x)\n+}\n+\n+fn foo2(x: &'_ u8) -> Foo<'_> {\n+    Foo(x)\n+}\n+\n+fn foo3(x: &'_ u8) -> Foo {\n+    Foo(x)\n+}\n+\n+fn foo4(_: Foo<'_>) {}\n+\n+fn main() {\n+    let x = &5;\n+    let _ = foo(x);\n+    let _ = foo2(x);\n+    let _ = foo3(x);\n+    foo4(Foo(x));\n+}"}]}