{"sha": "9342be5538ad5c97e8d2496e1cbbf2530d377e5e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzNDJiZTU1MzhhZDVjOTdlOGQyNDk2ZTFjYmJmMjUzMGQzNzdlNWU=", "commit": {"author": {"name": "Yuki Okushi", "email": "yuki.okushi@huawei.com", "date": "2021-07-28T20:49:56Z"}, "committer": {"name": "Yuki Okushi", "email": "yuki.okushi@huawei.com", "date": "2021-09-17T05:02:00Z"}, "message": "Recover invalid assoc type bounds using `==`", "tree": {"sha": "1d3514980dcc024dfabfa556e0aa7feafcd25954", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d3514980dcc024dfabfa556e0aa7feafcd25954"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9342be5538ad5c97e8d2496e1cbbf2530d377e5e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEx6scKn6IIf/+FpBu2rpbBylhwYoFAmFEIUgACgkQ2rpbBylh\nwYrccw//d72TrnHftreaw/oMW1WcON8cuBEHzx0Oqhg4N1e0ByGVFBcuZ2yKJ+m1\nXw+NpwAy2Eyy34vtOly5WSLGu41nrLMegMozi7GMgxRc/THfJ1wn5XDJQfIQ1vQE\nxo9hSmEBd0lfUWItWbkrY5zV10WnA/tRAtKZiXFvtgdp2F/TBIfUGKn/1xqBVlLp\nkhzYVNSTq30oB7wW5aNZ+WXBH6W3Kxk62cf1i8ZjsCdUEZP0EBQEjlqd9oI19Bqs\nthcX3lZVApnMtmo4kEZk2AzBAUGCrfnTELqiHBPr4zvMQL9BeybHdNRbdefVwnjd\n93J0c0+AjiDRhO3dzIfddLDHXaFgr975sV/BBXCDF5hjiy/bCwJsrxNor7zn3nr9\nA3xh82as9H8Ws9qcb7yatoLqwJDWg5UtvpdzQvhRH23EFOYwflEh1IR9ZQaXd9dI\nTbUol2mOSjova1dw6Ht8RmR50kwbEW0Wo2ihW4U8vtu1hiItYMnUR5z6tpFlXoOr\nw8z5PGa2YOPo0DujHu4ac/pR6zGzHLH0Jcah0I7wS1mwhT/KeZ+8SDutDk4L7xYq\ntGBJ+GmowoFCMix+aSvmMzTc+cdBw5WEFXeWPGKR5cdjHNwNhYJV/zLcokOSQgSY\nKubkGx9AGLqkLigiPTSfP6YAq7eoTc7uHSJtK0+trZKRpRdy6rU=\n=dd6Z\n-----END PGP SIGNATURE-----", "payload": "tree 1d3514980dcc024dfabfa556e0aa7feafcd25954\nparent 78a46efff06558674b51c10d8d81758285746ab5\nauthor Yuki Okushi <yuki.okushi@huawei.com> 1627505396 +0900\ncommitter Yuki Okushi <yuki.okushi@huawei.com> 1631854920 +0900\n\nRecover invalid assoc type bounds using `==`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9342be5538ad5c97e8d2496e1cbbf2530d377e5e", "html_url": "https://github.com/rust-lang/rust/commit/9342be5538ad5c97e8d2496e1cbbf2530d377e5e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9342be5538ad5c97e8d2496e1cbbf2530d377e5e/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78a46efff06558674b51c10d8d81758285746ab5", "url": "https://api.github.com/repos/rust-lang/rust/commits/78a46efff06558674b51c10d8d81758285746ab5", "html_url": "https://github.com/rust-lang/rust/commit/78a46efff06558674b51c10d8d81758285746ab5"}], "stats": {"total": 54, "additions": 53, "deletions": 1}, "files": [{"sha": "39651bd5e674502342ca2e86704d9a0f3f036843", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9342be5538ad5c97e8d2496e1cbbf2530d377e5e/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9342be5538ad5c97e8d2496e1cbbf2530d377e5e/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=9342be5538ad5c97e8d2496e1cbbf2530d377e5e", "patch": "@@ -1955,7 +1955,19 @@ impl<'a> Parser<'a> {\n         }\n         match self.parse_expr_res(Restrictions::CONST_EXPR, None) {\n             Ok(expr) => {\n-                if token::Comma == self.token.kind || self.token.kind.should_end_const_arg() {\n+                // Find a mistake like `MyTrait<Assoc == S::Assoc>`.\n+                if token::EqEq == snapshot.token.kind {\n+                    err.span_suggestion(\n+                        snapshot.token.span,\n+                        \"replace `==` with `=`\",\n+                        \"=\".to_string(),\n+                        Applicability::MaybeIncorrect,\n+                    );\n+                    let value = self.mk_expr_err(expr.span);\n+                    err.emit();\n+                    return Ok(GenericArg::Const(AnonConst { id: ast::DUMMY_NODE_ID, value }));\n+                } else if token::Comma == self.token.kind || self.token.kind.should_end_const_arg()\n+                {\n                     // Avoid the following output by checking that we consumed a full const arg:\n                     // help: expressions must be enclosed in braces to be used as const generic\n                     //       arguments"}, {"sha": "d8599ab22a32b8de907eef76b216ff2dd43e0c74", "filename": "src/test/ui/const-generics/issues/issue-87493.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9342be5538ad5c97e8d2496e1cbbf2530d377e5e/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-87493.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9342be5538ad5c97e8d2496e1cbbf2530d377e5e/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-87493.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-87493.rs?ref=9342be5538ad5c97e8d2496e1cbbf2530d377e5e", "patch": "@@ -0,0 +1,14 @@\n+pub trait MyTrait {\n+    type Assoc;\n+}\n+\n+pub fn foo<S, T>(_s: S, _t: T)\n+where\n+    S: MyTrait,\n+    T: MyTrait<Assoc == S::Assoc>,\n+    //~^ ERROR: expected one of `,` or `>`, found `==`\n+    //~| ERROR: this trait takes 0 generic arguments but 1 generic argument was supplied\n+{\n+}\n+\n+fn main() {}"}, {"sha": "b1ac08b51b50f598fd80f9e419ac448dcbeb458e", "filename": "src/test/ui/const-generics/issues/issue-87493.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/9342be5538ad5c97e8d2496e1cbbf2530d377e5e/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-87493.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9342be5538ad5c97e8d2496e1cbbf2530d377e5e/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-87493.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-87493.stderr?ref=9342be5538ad5c97e8d2496e1cbbf2530d377e5e", "patch": "@@ -0,0 +1,26 @@\n+error: expected one of `,` or `>`, found `==`\n+  --> $DIR/issue-87493.rs:8:22\n+   |\n+LL |     T: MyTrait<Assoc == S::Assoc>,\n+   |                      ^^\n+   |                      |\n+   |                      expected one of `,` or `>`\n+   |                      help: replace `==` with `=`: `=`\n+\n+error[E0107]: this trait takes 0 generic arguments but 1 generic argument was supplied\n+  --> $DIR/issue-87493.rs:8:8\n+   |\n+LL |     T: MyTrait<Assoc == S::Assoc>,\n+   |        ^^^^^^^------------------- help: remove these generics\n+   |        |\n+   |        expected 0 generic arguments\n+   |\n+note: trait defined here, with 0 generic parameters\n+  --> $DIR/issue-87493.rs:1:11\n+   |\n+LL | pub trait MyTrait {\n+   |           ^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0107`."}]}