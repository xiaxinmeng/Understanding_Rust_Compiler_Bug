{"sha": "2276c5e3d76591561e28fed760984e75c46bc407", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyNzZjNWUzZDc2NTkxNTYxZTI4ZmVkNzYwOTg0ZTc1YzQ2YmM0MDc=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-07-26T22:14:19Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-07-26T22:14:19Z"}, "message": "from review: add a comment why try_fold was chosen instead of fold", "tree": {"sha": "4725a1a7b9c0f5d172a2f43acdaed24d9746e4f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4725a1a7b9c0f5d172a2f43acdaed24d9746e4f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2276c5e3d76591561e28fed760984e75c46bc407", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2276c5e3d76591561e28fed760984e75c46bc407", "html_url": "https://github.com/rust-lang/rust/commit/2276c5e3d76591561e28fed760984e75c46bc407", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2276c5e3d76591561e28fed760984e75c46bc407/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e015e9da717bf501ab4752b2ea045d899f804a42", "url": "https://api.github.com/repos/rust-lang/rust/commits/e015e9da717bf501ab4752b2ea045d899f804a42", "html_url": "https://github.com/rust-lang/rust/commit/e015e9da717bf501ab4752b2ea045d899f804a42"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "f6616399610a6a278ade82ae200044cb886ac4e1", "filename": "library/core/src/array/iter.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2276c5e3d76591561e28fed760984e75c46bc407/library%2Fcore%2Fsrc%2Farray%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2276c5e3d76591561e28fed760984e75c46bc407/library%2Fcore%2Fsrc%2Farray%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Farray%2Fiter.rs?ref=2276c5e3d76591561e28fed760984e75c46bc407", "patch": "@@ -129,6 +129,11 @@ impl<T, const N: usize> Iterator for IntoIter<T, N> {\n         Fold: FnMut(Acc, Self::Item) -> Acc,\n     {\n         let data = &mut self.data;\n+        // FIXME: This uses try_fold(&mut iter) instead of fold(iter) because the latter\n+        //  would go through the blanket `impl Iterator for &mut I` implementation\n+        //  which lacks inline annotations on its methods and adding those would be a larger\n+        //  perturbation than using try_fold here.\n+        //  Whether it would be beneficial to add those annotations should be investigated separately.\n         (&mut self.alive)\n             .try_fold::<_, _, Result<_, !>>(init, |acc, idx| {\n                 // SAFETY: idx is obtained by folding over the `alive` range, which implies the"}]}