{"sha": "58519a7a7930d4ac494d971a737525221c70f26a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4NTE5YTdhNzkzMGQ0YWM0OTRkOTcxYTczNzUyNTIyMWM3MGYyNmE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-03T14:00:19Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-03T14:02:06Z"}, "message": "try even harder to catch invalid generator fields", "tree": {"sha": "f00bac2b62ea5356a53ab9f1d504e6eaad0ca7c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f00bac2b62ea5356a53ab9f1d504e6eaad0ca7c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58519a7a7930d4ac494d971a737525221c70f26a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58519a7a7930d4ac494d971a737525221c70f26a", "html_url": "https://github.com/rust-lang/rust/commit/58519a7a7930d4ac494d971a737525221c70f26a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58519a7a7930d4ac494d971a737525221c70f26a/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f437099d85be1c978de76ef3b3a02432ac0913d", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f437099d85be1c978de76ef3b3a02432ac0913d", "html_url": "https://github.com/rust-lang/rust/commit/4f437099d85be1c978de76ef3b3a02432ac0913d"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "18eaf5e55c15d0bbbfcd31cac900a637060f2a67", "filename": "tests/run-pass/generator.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/58519a7a7930d4ac494d971a737525221c70f26a/tests%2Frun-pass%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58519a7a7930d4ac494d971a737525221c70f26a/tests%2Frun-pass%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fgenerator.rs?ref=58519a7a7930d4ac494d971a737525221c70f26a", "patch": "@@ -4,6 +4,8 @@ use std::ops::{GeneratorState::{self, *}, Generator};\n use std::pin::Pin;\n use std::sync::atomic::{AtomicUsize, Ordering};\n use std::fmt::Debug;\n+use std::mem::ManuallyDrop;\n+use std::ptr;\n \n fn basic() {\n     fn finish<T>(mut amt: usize, mut t: T) -> T::Return\n@@ -12,8 +14,13 @@ fn basic() {\n         // We are not moving the `t` around until it gets dropped, so this is okay.\n         let mut t = unsafe { Pin::new_unchecked(&mut t) };\n         loop {\n-            match t.as_mut().resume(()) {\n-                GeneratorState::Yielded(y) => amt -= y,\n+            let state = t.as_mut().resume(());\n+            // Test if the generator is valid (according to type invariants).\n+            let _ = unsafe { ManuallyDrop::new(ptr::read(t.as_mut().get_unchecked_mut())) };\n+            match state {\n+                GeneratorState::Yielded(y) => {\n+                    amt -= y;\n+                }\n                 GeneratorState::Complete(ret) => {\n                     assert_eq!(amt, 0);\n                     return ret\n@@ -109,6 +116,8 @@ fn smoke_resume_arg() {\n \n         for (input, out) in inout {\n             assert_eq!(gen.as_mut().resume(input), out);\n+            // Test if the generator is valid (according to type invariants).\n+            let _ = unsafe { ManuallyDrop::new(ptr::read(gen.as_mut().get_unchecked_mut())) };\n         }\n     }\n "}]}