{"sha": "9c3a1235c5273e01b6e52ea5bbe5e047c7a97778", "node_id": "C_kwDOAAsO6NoAKDljM2ExMjM1YzUyNzNlMDFiNmU1MmVhNWJiZTVlMDQ3YzdhOTc3Nzg", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-01-30T12:38:27Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-02-01T16:58:03Z"}, "message": "Fix type_kind implementation", "tree": {"sha": "6f3d6eccc9c571608e225a872a9f10010ea06753", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f3d6eccc9c571608e225a872a9f10010ea06753"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c3a1235c5273e01b6e52ea5bbe5e047c7a97778", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c3a1235c5273e01b6e52ea5bbe5e047c7a97778", "html_url": "https://github.com/rust-lang/rust/commit/9c3a1235c5273e01b6e52ea5bbe5e047c7a97778", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c3a1235c5273e01b6e52ea5bbe5e047c7a97778/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7aaa87bcd24d82cf9ee50912d71ac304aeef88dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/7aaa87bcd24d82cf9ee50912d71ac304aeef88dc", "html_url": "https://github.com/rust-lang/rust/commit/7aaa87bcd24d82cf9ee50912d71ac304aeef88dc"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "e95058085216e94aa9482e579ad4b21097e29b33", "filename": "src/type_.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9c3a1235c5273e01b6e52ea5bbe5e047c7a97778/src%2Ftype_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c3a1235c5273e01b6e52ea5bbe5e047c7a97778/src%2Ftype_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftype_.rs?ref=9c3a1235c5273e01b6e52ea5bbe5e047c7a97778", "patch": "@@ -121,10 +121,10 @@ impl<'gcc, 'tcx> BaseTypeMethods<'tcx> for CodegenCx<'gcc, 'tcx> {\n         if self.is_int_type_or_bool(typ) {\n             TypeKind::Integer\n         }\n-        else if typ == self.float_type {\n+        else if typ.is_compatible_with(self.float_type) {\n             TypeKind::Float\n         }\n-        else if typ == self.double_type {\n+        else if typ.is_compatible_with(self.double_type) {\n             TypeKind::Double\n         }\n         else if typ.dyncast_vector().is_some() {"}]}