{"sha": "f58a65374b6a372b641852283cc4ce94bdb07035", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1OGE2NTM3NGI2YTM3MmI2NDE4NTIyODNjYzRjZTk0YmRiMDcwMzU=", "commit": {"author": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2015-03-10T17:50:35Z"}, "committer": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2015-03-10T17:50:35Z"}, "message": "derive common traits for `collections::Bound`", "tree": {"sha": "74f3436b5f2ba066c13ee2a75bb94591edc189ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74f3436b5f2ba066c13ee2a75bb94591edc189ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f58a65374b6a372b641852283cc4ce94bdb07035", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f58a65374b6a372b641852283cc4ce94bdb07035", "html_url": "https://github.com/rust-lang/rust/commit/f58a65374b6a372b641852283cc4ce94bdb07035", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f58a65374b6a372b641852283cc4ce94bdb07035/comments", "author": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "698c1008d6009fc6cf5a4e797cef62b52f7d1e75", "url": "https://api.github.com/repos/rust-lang/rust/commits/698c1008d6009fc6cf5a4e797cef62b52f7d1e75", "html_url": "https://github.com/rust-lang/rust/commit/698c1008d6009fc6cf5a4e797cef62b52f7d1e75"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "f7943c0bb91402941e0dfa4f4b7afe92097daad8", "filename": "src/libcollections/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f58a65374b6a372b641852283cc4ce94bdb07035/src%2Flibcollections%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f58a65374b6a372b641852283cc4ce94bdb07035/src%2Flibcollections%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flib.rs?ref=f58a65374b6a372b641852283cc4ce94bdb07035", "patch": "@@ -175,6 +175,7 @@ mod prelude {\n }\n \n /// An endpoint of a range of keys.\n+#[derive(Clone, Copy, Debug, Hash, PartialEq, Eq)]\n pub enum Bound<T> {\n     /// An inclusive bound.\n     Included(T),"}]}