{"sha": "f16e7b4a419a5afcdd4d634da120cb834c8ebaba", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxNmU3YjRhNDE5YTVhZmNkZDRkNjM0ZGExMjBjYjgzNGM4ZWJhYmE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-11-09T17:11:16Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-11-09T17:11:16Z"}, "message": "std: Fix endianness in Ord for IP addresses\n\nThe comparison of IP addresses should happen not always in network endianness\nbut rather in the host endianness format, so be sure to convert to that before\ncomparing addresses.\n\nThere are still locations where the endianness will factor into visible\nproperties, such as the hash, but these are not important to be independent of\nthe endianness in play (as hash values are pretty undefined anyway.\n\nCloses #29691", "tree": {"sha": "8a4f2765b369f5d9f63917763d165ce8dfc964a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a4f2765b369f5d9f63917763d165ce8dfc964a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f16e7b4a419a5afcdd4d634da120cb834c8ebaba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f16e7b4a419a5afcdd4d634da120cb834c8ebaba", "html_url": "https://github.com/rust-lang/rust/commit/f16e7b4a419a5afcdd4d634da120cb834c8ebaba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f16e7b4a419a5afcdd4d634da120cb834c8ebaba/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00aa3cbecc6723898a04467050891c26a7fdb758", "url": "https://api.github.com/repos/rust-lang/rust/commits/00aa3cbecc6723898a04467050891c26a7fdb758", "html_url": "https://github.com/rust-lang/rust/commit/00aa3cbecc6723898a04467050891c26a7fdb758"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "7ba3353fd1ed17efb108f1d7df0d1bacffbcf177", "filename": "src/libstd/net/ip.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f16e7b4a419a5afcdd4d634da120cb834c8ebaba/src%2Flibstd%2Fnet%2Fip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f16e7b4a419a5afcdd4d634da120cb834c8ebaba/src%2Flibstd%2Fnet%2Fip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fip.rs?ref=f16e7b4a419a5afcdd4d634da120cb834c8ebaba", "patch": "@@ -235,7 +235,7 @@ impl PartialOrd for Ipv4Addr {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl Ord for Ipv4Addr {\n     fn cmp(&self, other: &Ipv4Addr) -> Ordering {\n-        self.inner.s_addr.cmp(&other.inner.s_addr)\n+        self.octets().cmp(&other.octets())\n     }\n }\n \n@@ -498,7 +498,7 @@ impl PartialOrd for Ipv6Addr {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl Ord for Ipv6Addr {\n     fn cmp(&self, other: &Ipv6Addr) -> Ordering {\n-        self.inner.s6_addr.cmp(&other.inner.s6_addr)\n+        self.segments().cmp(&other.segments())\n     }\n }\n \n@@ -786,4 +786,11 @@ mod tests {\n         let a = Ipv4Addr::new(127, 0, 0, 1);\n         assert_eq!(Ipv4Addr::from(2130706433), a);\n     }\n+\n+    #[test]\n+    fn ord() {\n+        assert!(Ipv4Addr::new(100, 64, 3, 3) < Ipv4Addr::new(192, 0, 2, 2));\n+        assert!(\"2001:db8:f00::1002\".parse::<Ipv6Addr>().unwrap() <\n+                \"2001:db8:f00::2001\".parse::<Ipv6Addr>().unwrap());\n+    }\n }"}]}