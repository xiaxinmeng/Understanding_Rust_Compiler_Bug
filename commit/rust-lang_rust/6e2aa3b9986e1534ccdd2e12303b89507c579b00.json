{"sha": "6e2aa3b9986e1534ccdd2e12303b89507c579b00", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlMmFhM2I5OTg2ZTE1MzRjY2RkMmUxMjMwM2I4OTUwN2M1NzliMDA=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-06-02T03:21:59Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-06-02T03:40:35Z"}, "message": "Port more resource tests to classes", "tree": {"sha": "526a9e5a0f85cd67dfd42405cffd781d8ccf7bb5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/526a9e5a0f85cd67dfd42405cffd781d8ccf7bb5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e2aa3b9986e1534ccdd2e12303b89507c579b00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e2aa3b9986e1534ccdd2e12303b89507c579b00", "html_url": "https://github.com/rust-lang/rust/commit/6e2aa3b9986e1534ccdd2e12303b89507c579b00", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e2aa3b9986e1534ccdd2e12303b89507c579b00/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14e3fdea9c0a4e9669d4c918af84b6306aca0123", "url": "https://api.github.com/repos/rust-lang/rust/commits/14e3fdea9c0a4e9669d4c918af84b6306aca0123", "html_url": "https://github.com/rust-lang/rust/commit/14e3fdea9c0a4e9669d4c918af84b6306aca0123"}], "stats": {"total": 60, "additions": 38, "deletions": 22}, "files": [{"sha": "0fb4f2caf6c943ca330f8e9023bed491ca54a5a1", "filename": "src/test/compile-fail/issue-2063-resource.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6e2aa3b9986e1534ccdd2e12303b89507c579b00/src%2Ftest%2Fcompile-fail%2Fissue-2063-resource.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e2aa3b9986e1534ccdd2e12303b89507c579b00/src%2Ftest%2Fcompile-fail%2Fissue-2063-resource.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2063-resource.rs?ref=6e2aa3b9986e1534ccdd2e12303b89507c579b00", "patch": "@@ -1,12 +1,12 @@\n // test that autoderef of a type like this does not\n // cause compiler to loop.  Note that no instances\n // of such a type could ever be constructed.\n-resource t(x: x) {} //! ERROR this type cannot be instantiated\n-enum x = @t; //! ERROR this type cannot be instantiated\n-\n-fn new_t(x: t) {\n-    x.to_str; //! ERROR attempted access of field to_str\n+class t { //! ERROR this type cannot be instantiated\n+  let x: x;\n+  let to_str: ();\n+  new(x: x) { self.x = x; self.to_str = (); }\n }\n+enum x = @t; //! ERROR this type cannot be instantiated\n \n fn main() {\n }"}, {"sha": "c438a5bafba52635e5ab71e6a57271c1ec432256", "filename": "src/test/compile-fail/non-const.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6e2aa3b9986e1534ccdd2e12303b89507c579b00/src%2Ftest%2Fcompile-fail%2Fnon-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e2aa3b9986e1534ccdd2e12303b89507c579b00/src%2Ftest%2Fcompile-fail%2Fnon-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnon-const.rs?ref=6e2aa3b9986e1534ccdd2e12303b89507c579b00", "patch": "@@ -2,8 +2,17 @@\n \n fn foo<T: const>(_x: T) { }\n \n-resource r(_x: int) {}\n-resource r2(_x: @mut int) {}\n+class r {\n+  let x:int;\n+  new(x:int) { self.x = x; }\n+  drop {}\n+}\n+\n+class r2 {\n+  let x:@mut int;\n+  new(x:@mut int) { self.x = x; }\n+  drop {}\n+}\n \n fn main() {\n     foo({f: 3});"}, {"sha": "496a4fcbe76ebac745ba008c9df51869bcd13a22", "filename": "src/test/compile-fail/pinned-deep-copy.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6e2aa3b9986e1534ccdd2e12303b89507c579b00/src%2Ftest%2Fcompile-fail%2Fpinned-deep-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e2aa3b9986e1534ccdd2e12303b89507c579b00/src%2Ftest%2Fcompile-fail%2Fpinned-deep-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fpinned-deep-copy.rs?ref=6e2aa3b9986e1534ccdd2e12303b89507c579b00", "patch": "@@ -1,7 +1,9 @@\n // error-pattern: copying a noncopyable value\n \n-resource r(i: @mut int) {\n-    *i = *i + 1;\n+class r {\n+  let i: @mut int;\n+  new(i: @mut int) { self.i = i; }\n+  drop { *(self.i) = *(self.i) + 1; }\n }\n \n fn main() {"}, {"sha": "69f0cf09726e71180704fcebbb70f0298e698add", "filename": "src/test/compile-fail/record-with-resource.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6e2aa3b9986e1534ccdd2e12303b89507c579b00/src%2Ftest%2Fcompile-fail%2Frecord-with-resource.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e2aa3b9986e1534ccdd2e12303b89507c579b00/src%2Ftest%2Fcompile-fail%2Frecord-with-resource.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frecord-with-resource.rs?ref=6e2aa3b9986e1534ccdd2e12303b89507c579b00", "patch": "@@ -1,7 +1,9 @@\n // error-pattern: copying a noncopyable value\n \n-resource my_resource(x: int) {\n-    log(error, x);\n+class my_resource {\n+  let x: int;\n+  new(x: int) { self.x = x; }\n+  drop { log(error, self.x); }\n }\n \n fn main() {"}, {"sha": "1582c8a049fcba3c7b3f4ec8f12d21aa27af1d5b", "filename": "src/test/compile-fail/regions-bounds.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6e2aa3b9986e1534ccdd2e12303b89507c579b00/src%2Ftest%2Fcompile-fail%2Fregions-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e2aa3b9986e1534ccdd2e12303b89507c579b00/src%2Ftest%2Fcompile-fail%2Fregions-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-bounds.rs?ref=6e2aa3b9986e1534ccdd2e12303b89507c579b00", "patch": "@@ -5,7 +5,6 @@\n enum an_enum/& { }\n iface an_iface/& { }\n class a_class/& { new() { } }\n-resource a_rsrc/&(_x: ()) { }\n \n fn a_fn1(e: an_enum/&a) -> an_enum/&b {\n     ret e; //! ERROR mismatched types: expected `an_enum/&b` but found `an_enum/&a`\n@@ -19,11 +18,7 @@ fn a_fn3(e: a_class/&a) -> a_class/&b {\n     ret e; //! ERROR mismatched types: expected `a_class/&b` but found `a_class/&a`\n }\n \n-fn a_fn4(e: a_rsrc/&a) -> a_rsrc/&b {\n-    ret e; //! ERROR mismatched types: expected `a_rsrc/&b` but found `a_rsrc/&a`\n-}\n-\n-fn a_fn5(e: int/&a) -> int/&b {\n+fn a_fn4(e: int/&a) -> int/&b {\n     //!^ ERROR Region parameters are not allowed on this type.\n     //!^^ ERROR Region parameters are not allowed on this type.\n     ret e;"}, {"sha": "75250d9faf6c13eb36911259366dd33698dc4092", "filename": "src/test/compile-fail/unique-pinned-nocopy.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6e2aa3b9986e1534ccdd2e12303b89507c579b00/src%2Ftest%2Fcompile-fail%2Funique-pinned-nocopy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e2aa3b9986e1534ccdd2e12303b89507c579b00/src%2Ftest%2Fcompile-fail%2Funique-pinned-nocopy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funique-pinned-nocopy.rs?ref=6e2aa3b9986e1534ccdd2e12303b89507c579b00", "patch": "@@ -1,6 +1,9 @@\n // error-pattern: copying a noncopyable value\n \n-resource r(b: bool) {\n+class r {\n+  let b:bool;\n+  new(b: bool) { self.b = b; }\n+  drop {}\n }\n \n fn main() {"}, {"sha": "92dcd538aa7fb9f23af983b6be02e041a2de6082", "filename": "src/test/compile-fail/unique-vec-res.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6e2aa3b9986e1534ccdd2e12303b89507c579b00/src%2Ftest%2Fcompile-fail%2Funique-vec-res.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e2aa3b9986e1534ccdd2e12303b89507c579b00/src%2Ftest%2Fcompile-fail%2Funique-vec-res.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funique-vec-res.rs?ref=6e2aa3b9986e1534ccdd2e12303b89507c579b00", "patch": "@@ -1,7 +1,9 @@\n // error-pattern: copying a noncopyable value\n \n-resource r(i: @mut int) {\n-    *i = *i + 1;\n+class r {\n+  let i: @mut int;\n+  new(i: @mut int) { self.i = i; }\n+  drop { *(self.i) = *(self.i) + 1; }\n }\n \n fn f<T>(+i: [T], +j: [T]) {"}, {"sha": "ea411ca27a2f6f4430d850d0db4e66240916ec73", "filename": "src/test/compile-fail/vec-res-add.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6e2aa3b9986e1534ccdd2e12303b89507c579b00/src%2Ftest%2Fcompile-fail%2Fvec-res-add.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e2aa3b9986e1534ccdd2e12303b89507c579b00/src%2Ftest%2Fcompile-fail%2Fvec-res-add.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvec-res-add.rs?ref=6e2aa3b9986e1534ccdd2e12303b89507c579b00", "patch": "@@ -1,9 +1,12 @@\n // error-pattern: copying a noncopyable value\n \n-resource r(_i: int) { }\n+class r {\n+  new(_i:int) {}\n+  drop {}\n+}\n \n fn main() {\n-    // This can't make sense as it would copy the resources\n+    // This can't make sense as it would copy the classes\n     let i <- [r(0)];\n     let j <- [r(1)];\n     let k = i + j;"}]}