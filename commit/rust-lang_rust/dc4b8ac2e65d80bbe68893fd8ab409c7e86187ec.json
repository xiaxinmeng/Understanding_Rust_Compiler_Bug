{"sha": "dc4b8ac2e65d80bbe68893fd8ab409c7e86187ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjNGI4YWMyZTY1ZDgwYmJlNjg4OTNmZDhhYjQwOWM3ZTg2MTg3ZWM=", "commit": {"author": {"name": "Christian Poveda", "email": "git@christianpoveda.xyz", "date": "2019-12-27T13:34:35Z"}, "committer": {"name": "Christian Poveda", "email": "git@christianpoveda.xyz", "date": "2019-12-27T13:34:35Z"}, "message": "close file silently if the file is read only", "tree": {"sha": "5b797ef198734a355915ca3f4bd1c0a74bd4d143", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b797ef198734a355915ca3f4bd1c0a74bd4d143"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc4b8ac2e65d80bbe68893fd8ab409c7e86187ec", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niI4EABYIADYWIQRsB8A/3NrzTlMMjT0nUl7150IKUAUCXgYIaxgcZ2l0QGNocmlz\ndGlhbnBvdmVkYS54eXoACgkQJ1Je9edCClCMgAEAufT1UCOyGVc3nYpyMmnXbZNy\nP4582QxNBUb+R/jeZFABAN+618+koqlLSb5GGPEm8ROmmjfZR/jPt/+AJCqTVC8C\n=LeM8\n-----END PGP SIGNATURE-----", "payload": "tree 5b797ef198734a355915ca3f4bd1c0a74bd4d143\nparent 0f1dec05dde67d6def6645ba82e8e7de68776766\nauthor Christian Poveda <git@christianpoveda.xyz> 1577453675 -0500\ncommitter Christian Poveda <git@christianpoveda.xyz> 1577453675 -0500\n\nclose file silently if the file is read only\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc4b8ac2e65d80bbe68893fd8ab409c7e86187ec", "html_url": "https://github.com/rust-lang/rust/commit/dc4b8ac2e65d80bbe68893fd8ab409c7e86187ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc4b8ac2e65d80bbe68893fd8ab409c7e86187ec/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f1dec05dde67d6def6645ba82e8e7de68776766", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f1dec05dde67d6def6645ba82e8e7de68776766", "html_url": "https://github.com/rust-lang/rust/commit/0f1dec05dde67d6def6645ba82e8e7de68776766"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "c6cae22331d13079688810d24cec8d2c0bcd97ae", "filename": "src/shims/fs.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/dc4b8ac2e65d80bbe68893fd8ab409c7e86187ec/src%2Fshims%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc4b8ac2e65d80bbe68893fd8ab409c7e86187ec/src%2Fshims%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ffs.rs?ref=dc4b8ac2e65d80bbe68893fd8ab409c7e86187ec", "patch": "@@ -15,6 +15,7 @@ use shims::time::system_time_to_duration;\n #[derive(Debug)]\n pub struct FileHandle {\n     file: File,\n+    read_only: bool,\n }\n \n pub struct FileHandler {\n@@ -56,10 +57,13 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         if (o_rdonly | o_wronly | o_rdwr) & !0b11 != 0 {\n             throw_unsup_format!(\"Access mode flags on this platform are unsupported\");\n         }\n+        let mut read_only = false;\n+\n         // Now we check the access mode\n         let access_mode = flag & 0b11;\n \n         if access_mode == o_rdonly {\n+            read_only = true;\n             options.read(true);\n         } else if access_mode == o_wronly {\n             options.write(true);\n@@ -105,7 +109,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         let fd = options.open(&path).map(|file| {\n             let mut fh = &mut this.machine.file_handler;\n             fh.low += 1;\n-            fh.handles.insert(fh.low, FileHandle { file }).unwrap_none();\n+            fh.handles.insert(fh.low, FileHandle { file, read_only }).unwrap_none();\n             fh.low\n         });\n \n@@ -148,6 +152,9 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         let fd = this.read_scalar(fd_op)?.to_i32()?;\n \n         if let Some(handle) = this.machine.file_handler.handles.remove(&fd) {\n+            if handle.read_only {\n+                return Ok(0);\n+            }\n             // `File::sync_all` does the checks that are done when closing a file. We do this to\n             // to handle possible errors correctly.\n             let result = this.try_unwrap_io_result(handle.file.sync_all().map(|_| 0i32));"}]}