{"sha": "d58e0e30edf540c7c6212d0ab7c617c272b27f8e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1OGUwZTMwZWRmNTQwYzdjNjIxMmQwYWI3YzYxN2MyNzJiMjdmOGU=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-11-15T22:36:38Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-11-16T00:59:07Z"}, "message": "Update error messages and un-xfail", "tree": {"sha": "1b2cf25881b92f576134d2524a99085a19a2633f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b2cf25881b92f576134d2524a99085a19a2633f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d58e0e30edf540c7c6212d0ab7c617c272b27f8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d58e0e30edf540c7c6212d0ab7c617c272b27f8e", "html_url": "https://github.com/rust-lang/rust/commit/d58e0e30edf540c7c6212d0ab7c617c272b27f8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d58e0e30edf540c7c6212d0ab7c617c272b27f8e/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35b2960d0074a776556a22b13834ad8f657ffc2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/35b2960d0074a776556a22b13834ad8f657ffc2e", "html_url": "https://github.com/rust-lang/rust/commit/35b2960d0074a776556a22b13834ad8f657ffc2e"}], "stats": {"total": 33, "additions": 8, "deletions": 25}, "files": [{"sha": "8974dba487c2cd80999e8bcdaa0ae2360c147393", "filename": "src/test/compile-fail/bad-type-env-capture.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d58e0e30edf540c7c6212d0ab7c617c272b27f8e/src%2Ftest%2Fcompile-fail%2Fbad-type-env-capture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d58e0e30edf540c7c6212d0ab7c617c272b27f8e/src%2Ftest%2Fcompile-fail%2Fbad-type-env-capture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-type-env-capture.rs?ref=d58e0e30edf540c7c6212d0ab7c617c272b27f8e", "patch": "@@ -1,6 +1,5 @@\n-// xfail-test\n-// error-pattern: attempted dynamic environment-capture\n fn foo<T>() {\n-    fn bar(b: T) { }\n+    fn bar(b: T) { } //~ ERROR attempt to use a type argument out of scope\n+    //~^ ERROR use of undeclared type name\n }\n fn main() { }"}, {"sha": "c847f292ccb4a684643a88bfcc2a44bc85a74dd0", "filename": "src/test/compile-fail/do2.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d58e0e30edf540c7c6212d0ab7c617c272b27f8e/src%2Ftest%2Fcompile-fail%2Fdo2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d58e0e30edf540c7c6212d0ab7c617c272b27f8e/src%2Ftest%2Fcompile-fail%2Fdo2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdo2.rs?ref=d58e0e30edf540c7c6212d0ab7c617c272b27f8e", "patch": "@@ -1,13 +1,6 @@\n-// xfail-fast\n-// xfail-test\n-\n-// This is xfail'd due to bad typecheck error messages. (There is a spurious\n-// \"expected `bool` but but found `int`\" message.)\n-\n fn f(f: fn@(int) -> bool) -> bool { f(10i) }\n \n fn main() {\n     assert do f() |i| { i == 10i } == 10i;\n     //~^ ERROR: expected `bool` but found `int`\n-    //~^^ ERROR: expected `bool` but found `int`\n }"}, {"sha": "34471dd68c1b85118753d6da9901e9914d6eb831", "filename": "src/test/compile-fail/fn-compare-mismatch.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d58e0e30edf540c7c6212d0ab7c617c272b27f8e/src%2Ftest%2Fcompile-fail%2Ffn-compare-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d58e0e30edf540c7c6212d0ab7c617c272b27f8e/src%2Ftest%2Fcompile-fail%2Ffn-compare-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffn-compare-mismatch.rs?ref=d58e0e30edf540c7c6212d0ab7c617c272b27f8e", "patch": "@@ -1,12 +1,7 @@\n-// xfail-fast\n-// xfail-test\n-\n-// This is xfail'd due to bad spurious typecheck error messages.\n-\n fn main() {\n     fn f() { }\n     fn g() { }\n     let x = f == g;\n     //~^ ERROR mismatched types\n-    //~^^ ERROR cannot determine a type\n+    //~^^ ERROR failed to find an implementation of trait\n }"}, {"sha": "2bd70379dd29d7fdb91dc86d41ca228ae4a0bd61", "filename": "src/test/compile-fail/import-from-missing.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d58e0e30edf540c7c6212d0ab7c617c272b27f8e/src%2Ftest%2Fcompile-fail%2Fimport-from-missing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d58e0e30edf540c7c6212d0ab7c617c272b27f8e/src%2Ftest%2Fcompile-fail%2Fimport-from-missing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport-from-missing.rs?ref=d58e0e30edf540c7c6212d0ab7c617c272b27f8e", "patch": "@@ -1,5 +1,4 @@\n-// error-pattern:unresolved\n-// xfail-test\n+// error-pattern:failed to resolve import\n use spam::{ham, eggs};\n \n mod spam {"}, {"sha": "a308597a0d4ecf1962a74281974aa975f285046d", "filename": "src/test/compile-fail/import.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d58e0e30edf540c7c6212d0ab7c617c272b27f8e/src%2Ftest%2Fcompile-fail%2Fimport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d58e0e30edf540c7c6212d0ab7c617c272b27f8e/src%2Ftest%2Fcompile-fail%2Fimport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport.rs?ref=d58e0e30edf540c7c6212d0ab7c617c272b27f8e", "patch": "@@ -1,5 +1,4 @@\n-// xfail-test\n-// error-pattern: unresolved\n+// error-pattern:failed to resolve import\n use zed::bar;\n use zed::baz;\n mod zed {"}, {"sha": "b8d34f6f0e8a0cf8cdd9badff5caccae8b7c0dad", "filename": "src/test/compile-fail/infinite-tag-type-recursion.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d58e0e30edf540c7c6212d0ab7c617c272b27f8e/src%2Ftest%2Fcompile-fail%2Finfinite-tag-type-recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d58e0e30edf540c7c6212d0ab7c617c272b27f8e/src%2Ftest%2Fcompile-fail%2Finfinite-tag-type-recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Finfinite-tag-type-recursion.rs?ref=d58e0e30edf540c7c6212d0ab7c617c272b27f8e", "patch": "@@ -1,7 +1,6 @@\n-// xfail-test\n // -*- rust -*-\n \n-// error-pattern: enum of infinite size\n+// error-pattern: illegal recursive enum type; wrap the inner value in a box\n \n enum mlist { cons(int, mlist), nil, }\n "}, {"sha": "77ba555ab7a5bc56bdb85322e66be6271eb0d80b", "filename": "src/test/compile-fail/issue-1697.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d58e0e30edf540c7c6212d0ab7c617c272b27f8e/src%2Ftest%2Fcompile-fail%2Fissue-1697.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d58e0e30edf540c7c6212d0ab7c617c272b27f8e/src%2Ftest%2Fcompile-fail%2Fissue-1697.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-1697.rs?ref=d58e0e30edf540c7c6212d0ab7c617c272b27f8e", "patch": "@@ -1,8 +1,7 @@\n-// xfail-test\n // Testing that we don't fail abnormally after hitting the errors\n \n-use unresolved::*; //~ ERROR unresolved modulename\n-//~^ ERROR unresolved does not name a module\n+use unresolved::*; //~ ERROR unresolved name\n+//~^ ERROR failed to resolve import\n \n fn main() {\n }"}]}