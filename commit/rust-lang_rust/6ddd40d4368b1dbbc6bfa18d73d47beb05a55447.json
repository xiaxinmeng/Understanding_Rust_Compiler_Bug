{"sha": "6ddd40d4368b1dbbc6bfa18d73d47beb05a55447", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkZGQ0MGQ0MzY4YjFkYmJjNmJmYTE4ZDczZDQ3YmViMDVhNTU0NDc=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-05-26T12:00:08Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-05-26T12:44:38Z"}, "message": "syntax: Add a source field to `Local` for tracking if it comes from `let`s or `for`s.", "tree": {"sha": "8c6174fc1eb31872755870db27f6c60423e74627", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c6174fc1eb31872755870db27f6c60423e74627"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ddd40d4368b1dbbc6bfa18d73d47beb05a55447", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ddd40d4368b1dbbc6bfa18d73d47beb05a55447", "html_url": "https://github.com/rust-lang/rust/commit/6ddd40d4368b1dbbc6bfa18d73d47beb05a55447", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ddd40d4368b1dbbc6bfa18d73d47beb05a55447/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6fad19e16b2770c6641d7a457415d4c4c65e1f8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6fad19e16b2770c6641d7a457415d4c4c65e1f8d", "html_url": "https://github.com/rust-lang/rust/commit/6fad19e16b2770c6641d7a457415d4c4c65e1f8d"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "69a92a871855c82158f62cf439a190cd71899866", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6ddd40d4368b1dbbc6bfa18d73d47beb05a55447/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ddd40d4368b1dbbc6bfa18d73d47beb05a55447/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=6ddd40d4368b1dbbc6bfa18d73d47beb05a55447", "patch": "@@ -417,6 +417,14 @@ pub enum Stmt_ {\n     StmtMac(Mac, bool),\n }\n \n+/// Where a local declaration came from: either a true `let ... =\n+/// ...;`, or one desugared from the pattern of a for loop.\n+#[deriving(Clone, Eq, TotalEq, Encodable, Decodable, Hash)]\n+pub enum LocalSource {\n+    LocalLet,\n+    LocalFor,\n+}\n+\n // FIXME (pending discussion of #1697, #2178...): local should really be\n // a refinement on pat.\n /// Local represents a `let` statement, e.g., `let <pat>:<ty> = <expr>;`\n@@ -427,6 +435,7 @@ pub struct Local {\n     pub init: Option<@Expr>,\n     pub id: NodeId,\n     pub span: Span,\n+    pub source: LocalSource,\n }\n \n pub type Decl = Spanned<Decl_>;"}, {"sha": "bb7b73c5f81f29b53861f49a868ba23e69b367bf", "filename": "src/libsyntax/ext/build.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ddd40d4368b1dbbc6bfa18d73d47beb05a55447/src%2Flibsyntax%2Fext%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ddd40d4368b1dbbc6bfa18d73d47beb05a55447/src%2Flibsyntax%2Fext%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbuild.rs?ref=6ddd40d4368b1dbbc6bfa18d73d47beb05a55447", "patch": "@@ -439,6 +439,7 @@ impl<'a> AstBuilder for ExtCtxt<'a> {\n             init: Some(ex),\n             id: ast::DUMMY_NODE_ID,\n             span: sp,\n+            source: ast::LocalLet,\n         };\n         let decl = respan(sp, ast::DeclLocal(local));\n         @respan(sp, ast::StmtDecl(@decl, ast::DUMMY_NODE_ID))\n@@ -462,6 +463,7 @@ impl<'a> AstBuilder for ExtCtxt<'a> {\n             init: Some(ex),\n             id: ast::DUMMY_NODE_ID,\n             span: sp,\n+            source: ast::LocalLet,\n         };\n         let decl = respan(sp, ast::DeclLocal(local));\n         @respan(sp, ast::StmtDecl(@decl, ast::DUMMY_NODE_ID))"}, {"sha": "762363f3abeaf00e9dc4c706d4f09f647ea6e26b", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6ddd40d4368b1dbbc6bfa18d73d47beb05a55447/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ddd40d4368b1dbbc6bfa18d73d47beb05a55447/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=6ddd40d4368b1dbbc6bfa18d73d47beb05a55447", "patch": "@@ -669,7 +669,8 @@ fn expand_non_macro_stmt(s: &Stmt, fld: &mut MacroExpander)\n                         pat: pat,\n                         init: init,\n                         id: id,\n-                        span: span\n+                        span: span,\n+                        source: source,\n                     } = **local;\n                     // expand the pat (it might contain exprs... #:(o)>\n                     let expanded_pat = fld.fold_pat(pat);\n@@ -703,6 +704,7 @@ fn expand_non_macro_stmt(s: &Stmt, fld: &mut MacroExpander)\n                             init: new_init_opt,\n                             id: id,\n                             span: span,\n+                            source: source\n                         };\n                     SmallVector::one(@Spanned {\n                         node: StmtDecl(@Spanned {"}, {"sha": "6a9f26ae83d6812494b745d8da537ac4ff85e799", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6ddd40d4368b1dbbc6bfa18d73d47beb05a55447/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ddd40d4368b1dbbc6bfa18d73d47beb05a55447/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=6ddd40d4368b1dbbc6bfa18d73d47beb05a55447", "patch": "@@ -288,6 +288,7 @@ pub trait Folder {\n             pat: self.fold_pat(l.pat),\n             init: l.init.map(|e| self.fold_expr(e)),\n             span: self.new_span(l.span),\n+            source: l.source,\n         }\n     }\n "}, {"sha": "65687ce4d94473ba512841f469fd5e556c164bf3", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6ddd40d4368b1dbbc6bfa18d73d47beb05a55447/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ddd40d4368b1dbbc6bfa18d73d47beb05a55447/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=6ddd40d4368b1dbbc6bfa18d73d47beb05a55447", "patch": "@@ -34,7 +34,7 @@ use ast::{Ident, NormalFn, Inherited, Item, Item_, ItemStatic};\n use ast::{ItemEnum, ItemFn, ItemForeignMod, ItemImpl};\n use ast::{ItemMac, ItemMod, ItemStruct, ItemTrait, ItemTy, Lit, Lit_};\n use ast::{LitBool, LitFloat, LitFloatUnsuffixed, LitInt, LitChar};\n-use ast::{LitIntUnsuffixed, LitNil, LitStr, LitUint, Local};\n+use ast::{LitIntUnsuffixed, LitNil, LitStr, LitUint, Local, LocalLet};\n use ast::{MutImmutable, MutMutable, Mac_, MacInvocTT, Matcher, MatchNonterminal};\n use ast::{MatchSeq, MatchTok, Method, MutTy, BiMul, Mutability};\n use ast::{NamedField, UnNeg, NoReturn, UnNot, P, Pat, PatEnum};\n@@ -3034,6 +3034,7 @@ impl<'a> Parser<'a> {\n             init: init,\n             id: ast::DUMMY_NODE_ID,\n             span: mk_sp(lo, self.last_span.hi),\n+            source: LocalLet,\n         }\n     }\n "}]}