{"sha": "71fef95e765f812f2eada304f1a6be00a814c0e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxZmVmOTVlNzY1ZjgxMmYyZWFkYTMwNGYxYTZiZTAwYTgxNGMwZTk=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-07-23T15:13:35Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-07-25T03:38:20Z"}, "message": "SparseBitMatrix: add `ensure_row` helper fn", "tree": {"sha": "40c46eace12a510c63f8078f4dd6df943f3f8097", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40c46eace12a510c63f8078f4dd6df943f3f8097"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71fef95e765f812f2eada304f1a6be00a814c0e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71fef95e765f812f2eada304f1a6be00a814c0e9", "html_url": "https://github.com/rust-lang/rust/commit/71fef95e765f812f2eada304f1a6be00a814c0e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71fef95e765f812f2eada304f1a6be00a814c0e9/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f0fb4f7d849a12bce2996c03214601255bfe82e", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f0fb4f7d849a12bce2996c03214601255bfe82e", "html_url": "https://github.com/rust-lang/rust/commit/3f0fb4f7d849a12bce2996c03214601255bfe82e"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "f564f46dd2b3f36e4486a9e267d27145e63fa820", "filename": "src/librustc_data_structures/bitvec.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/71fef95e765f812f2eada304f1a6be00a814c0e9/src%2Flibrustc_data_structures%2Fbitvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71fef95e765f812f2eada304f1a6be00a814c0e9/src%2Flibrustc_data_structures%2Fbitvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fbitvec.rs?ref=71fef95e765f812f2eada304f1a6be00a814c0e9", "patch": "@@ -313,14 +313,18 @@ impl<R: Idx, C: Idx> SparseBitMatrix<R, C> {\n         }\n     }\n \n+    fn ensure_row(&mut self, row: R) {\n+        let columns = self.columns;\n+        self.vector\n+            .ensure_contains_elem(row, || BitVector::new(columns));\n+    }\n+\n     /// Sets the cell at `(row, column)` to true. Put another way, insert\n     /// `column` to the bitset for `row`.\n     ///\n     /// Returns true if this changed the matrix, and false otherwise.\n     pub fn add(&mut self, row: R, column: C) -> bool {\n-        let columns = self.columns;\n-        self.vector\n-            .ensure_contains_elem(row, || BitVector::new(columns));\n+        self.ensure_row(row);\n         self.vector[row].insert(column)\n     }\n \n@@ -344,18 +348,14 @@ impl<R: Idx, C: Idx> SparseBitMatrix<R, C> {\n             return false;\n         }\n \n-        let columns = self.columns;\n-        self.vector\n-            .ensure_contains_elem(write, || BitVector::new(columns));\n+        self.ensure_row(write);\n         let (bitvec_read, bitvec_write) = self.vector.pick2_mut(read, write);\n         bitvec_write.merge(bitvec_read)\n     }\n \n     /// Merge a row, `from`, into the `into` row.\n     pub fn merge_into(&mut self, into: R, from: &BitVector<C>) -> bool {\n-        let columns = self.columns;\n-        self.vector\n-            .ensure_contains_elem(into, || BitVector::new(columns));\n+        self.ensure_row(into);\n         self.vector[into].merge(from)\n     }\n "}]}