{"sha": "255cc1aed33442567c29c95fa445a534575e925c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1NWNjMWFlZDMzNDQyNTY3YzI5Yzk1ZmE0NDVhNTM0NTc1ZTkyNWM=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-11-08T15:49:28Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-11-08T15:53:03Z"}, "message": "rustc: Request ansi colors if stderr isn't a tty\n\nCurrently Cargo will always capture the output of rustc meaning that\nrustc is never hooked up to a tty. To retain colors Cargo uses the\n`fwdansi` crate to ensure that ansi color codes are translated to\nwindows terminal methods (and ansi codes otherwise just go their natural\nroute on Unix).\n\nCargo passes `--color always` to rustc to ensure that using a pipe\ndoesn't trick it into not emitting colors at all. It turns out, however,\nthat `--color always` ends up still accidentally using the native shell\napi on native windows shells.\n\nThe fix here is to instead pass `AlwaysAnsi` to `termcolor` instead of\n`Always`, ensuring that when `--color always` is passed to rustc and its\noutput isn't a terminal, we're always generating ansi colors regardless\nof the platform.\n\nCloses #55769", "tree": {"sha": "f3e843496ae2cf9295cca99601bcc418f2355665", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3e843496ae2cf9295cca99601bcc418f2355665"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/255cc1aed33442567c29c95fa445a534575e925c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/255cc1aed33442567c29c95fa445a534575e925c", "html_url": "https://github.com/rust-lang/rust/commit/255cc1aed33442567c29c95fa445a534575e925c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/255cc1aed33442567c29c95fa445a534575e925c/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8315b11b6352cbd91ee096571c31ae7d3ac9613d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8315b11b6352cbd91ee096571c31ae7d3ac9613d", "html_url": "https://github.com/rust-lang/rust/commit/8315b11b6352cbd91ee096571c31ae7d3ac9613d"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "7e69e98071d4b1fa29ad1453d8f9733f8e1e1424", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/255cc1aed33442567c29c95fa445a534575e925c/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/255cc1aed33442567c29c95fa445a534575e925c/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=255cc1aed33442567c29c95fa445a534575e925c", "patch": "@@ -108,7 +108,13 @@ pub enum ColorConfig {\n impl ColorConfig {\n     fn to_color_choice(&self) -> ColorChoice {\n         match *self {\n-            ColorConfig::Always => ColorChoice::Always,\n+            ColorConfig::Always => {\n+                if atty::is(atty::Stream::Stderr) {\n+                    ColorChoice::Always\n+                } else {\n+                    ColorChoice::AlwaysAnsi\n+                }\n+            }\n             ColorConfig::Never => ColorChoice::Never,\n             ColorConfig::Auto if atty::is(atty::Stream::Stderr) => {\n                 ColorChoice::Auto"}]}