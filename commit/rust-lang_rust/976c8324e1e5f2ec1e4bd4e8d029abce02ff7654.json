{"sha": "976c8324e1e5f2ec1e4bd4e8d029abce02ff7654", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3NmM4MzI0ZTFlNWYyZWMxZTRiZDRlOGQwMjlhYmNlMDJmZjc2NTQ=", "commit": {"author": {"name": "klutzy", "email": "klutzytheklutzy@gmail.com", "date": "2014-05-29T03:19:05Z"}, "committer": {"name": "klutzy", "email": "klutzytheklutzy@gmail.com", "date": "2014-06-02T14:21:40Z"}, "message": "syntax: Remove use of `pub use` globs\n\n`quote_expr!` now injects two more (priv) `use` globs.\nThis may cause extra unused_imports warning.", "tree": {"sha": "36e09d0b47455d394e79becd685e3b6e7a981660", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36e09d0b47455d394e79becd685e3b6e7a981660"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654", "html_url": "https://github.com/rust-lang/rust/commit/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/comments", "author": {"login": "klutzy", "id": 1589355, "node_id": "MDQ6VXNlcjE1ODkzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1589355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klutzy", "html_url": "https://github.com/klutzy", "followers_url": "https://api.github.com/users/klutzy/followers", "following_url": "https://api.github.com/users/klutzy/following{/other_user}", "gists_url": "https://api.github.com/users/klutzy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klutzy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klutzy/subscriptions", "organizations_url": "https://api.github.com/users/klutzy/orgs", "repos_url": "https://api.github.com/users/klutzy/repos", "events_url": "https://api.github.com/users/klutzy/events{/privacy}", "received_events_url": "https://api.github.com/users/klutzy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "klutzy", "id": 1589355, "node_id": "MDQ6VXNlcjE1ODkzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1589355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klutzy", "html_url": "https://github.com/klutzy", "followers_url": "https://api.github.com/users/klutzy/followers", "following_url": "https://api.github.com/users/klutzy/following{/other_user}", "gists_url": "https://api.github.com/users/klutzy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klutzy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klutzy/subscriptions", "organizations_url": "https://api.github.com/users/klutzy/orgs", "repos_url": "https://api.github.com/users/klutzy/repos", "events_url": "https://api.github.com/users/klutzy/events{/privacy}", "received_events_url": "https://api.github.com/users/klutzy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e38fde71b1dede9772043b71fe09c43b4ba61b8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e38fde71b1dede9772043b71fe09c43b4ba61b8c", "html_url": "https://github.com/rust-lang/rust/commit/e38fde71b1dede9772043b71fe09c43b4ba61b8c"}], "stats": {"total": 53, "additions": 41, "deletions": 12}, "files": [{"sha": "452d1d74e52cbe279e68d9127d65deec50408211", "filename": "src/libregex_macros/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibregex_macros%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibregex_macros%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibregex_macros%2Flib.rs?ref=976c8324e1e5f2ec1e4bd4e8d029abce02ff7654", "patch": "@@ -20,6 +20,7 @@\n        html_root_url = \"http://doc.rust-lang.org/\")]\n \n #![feature(macro_registrar, managed_boxes, quote)]\n+#![allow(unused_imports)] // `quote_expr!` adds some `use` globs which may be unused\n \n extern crate regex;\n extern crate syntax;"}, {"sha": "7b25f4db98075ad10cb29bbb4ec921e2752a5346", "filename": "src/libsyntax/ext/build.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbuild.rs?ref=976c8324e1e5f2ec1e4bd4e8d029abce02ff7654", "patch": "@@ -9,16 +9,16 @@\n // except according to those terms.\n \n use abi;\n-use ast::{P, Ident};\n+use ast::{P, Ident, Generics, NodeId, Expr};\n use ast;\n use ast_util;\n use attr;\n use codemap::{Span, respan, Spanned, DUMMY_SP};\n use ext::base::ExtCtxt;\n-use ext::quote::rt::*;\n use fold::Folder;\n use owned_slice::OwnedSlice;\n use parse::token::special_idents;\n+use parse::token::InternedString;\n use parse::token;\n \n pub struct Field {"}, {"sha": "81fb1e46bba5dd62ec4b5a66631306f4593d5a1f", "filename": "src/libsyntax/ext/deriving/bounds.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fderiving%2Fbounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fderiving%2Fbounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fbounds.rs?ref=976c8324e1e5f2ec1e4bd4e8d029abce02ff7654", "patch": "@@ -12,6 +12,7 @@ use ast::{MetaItem, MetaWord, Item};\n use codemap::Span;\n use ext::base::ExtCtxt;\n use ext::deriving::generic::*;\n+use ext::deriving::generic::ty::*;\n \n pub fn expand_deriving_bound(cx: &mut ExtCtxt,\n                              span: Span,"}, {"sha": "6ddfedfeb4f3b2d91267f5c76aa90bb5e40ed234", "filename": "src/libsyntax/ext/deriving/clone.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fderiving%2Fclone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fderiving%2Fclone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fclone.rs?ref=976c8324e1e5f2ec1e4bd4e8d029abce02ff7654", "patch": "@@ -13,6 +13,7 @@ use codemap::Span;\n use ext::base::ExtCtxt;\n use ext::build::AstBuilder;\n use ext::deriving::generic::*;\n+use ext::deriving::generic::ty::*;\n use parse::token::InternedString;\n \n pub fn expand_deriving_clone(cx: &mut ExtCtxt,"}, {"sha": "e7a6cb35582318091523c7f89c59efdf970a1b89", "filename": "src/libsyntax/ext/deriving/cmp/eq.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Feq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Feq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Feq.rs?ref=976c8324e1e5f2ec1e4bd4e8d029abce02ff7654", "patch": "@@ -13,6 +13,7 @@ use codemap::Span;\n use ext::base::ExtCtxt;\n use ext::build::AstBuilder;\n use ext::deriving::generic::*;\n+use ext::deriving::generic::ty::*;\n use parse::token::InternedString;\n \n pub fn expand_deriving_eq(cx: &mut ExtCtxt,"}, {"sha": "abe504b888579b86d06bd5d4eac44e7078a4d8c4", "filename": "src/libsyntax/ext/deriving/cmp/ord.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ford.rs", "raw_url": "https://github.com/rust-lang/rust/raw/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ford.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ford.rs?ref=976c8324e1e5f2ec1e4bd4e8d029abce02ff7654", "patch": "@@ -14,6 +14,7 @@ use codemap::Span;\n use ext::base::ExtCtxt;\n use ext::build::AstBuilder;\n use ext::deriving::generic::*;\n+use ext::deriving::generic::ty::*;\n use parse::token::InternedString;\n \n pub fn expand_deriving_ord(cx: &mut ExtCtxt,"}, {"sha": "fb7be4c14b68dc5369ffb2fe0c1529cd7baf66b5", "filename": "src/libsyntax/ext/deriving/cmp/totaleq.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotaleq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotaleq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotaleq.rs?ref=976c8324e1e5f2ec1e4bd4e8d029abce02ff7654", "patch": "@@ -13,6 +13,7 @@ use codemap::Span;\n use ext::base::ExtCtxt;\n use ext::build::AstBuilder;\n use ext::deriving::generic::*;\n+use ext::deriving::generic::ty::*;\n use parse::token::InternedString;\n \n pub fn expand_deriving_totaleq(cx: &mut ExtCtxt,"}, {"sha": "03ac4c9ab03dfb27272b9c18791ff8a56a155f96", "filename": "src/libsyntax/ext/deriving/cmp/totalord.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotalord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotalord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotalord.rs?ref=976c8324e1e5f2ec1e4bd4e8d029abce02ff7654", "patch": "@@ -14,6 +14,7 @@ use codemap::Span;\n use ext::base::ExtCtxt;\n use ext::build::AstBuilder;\n use ext::deriving::generic::*;\n+use ext::deriving::generic::ty::*;\n use parse::token::InternedString;\n \n use std::cmp::{Ordering, Equal, Less, Greater};"}, {"sha": "fe19874938460f3e20cfc93a612ac3e1950a768e", "filename": "src/libsyntax/ext/deriving/decodable.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fderiving%2Fdecodable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fderiving%2Fdecodable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fdecodable.rs?ref=976c8324e1e5f2ec1e4bd4e8d029abce02ff7654", "patch": "@@ -19,6 +19,7 @@ use codemap::Span;\n use ext::base::ExtCtxt;\n use ext::build::AstBuilder;\n use ext::deriving::generic::*;\n+use ext::deriving::generic::ty::*;\n use parse::token::InternedString;\n use parse::token;\n "}, {"sha": "28547a5a494a308a92f468dd2f706b03e4ae2982", "filename": "src/libsyntax/ext/deriving/default.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fderiving%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fderiving%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fdefault.rs?ref=976c8324e1e5f2ec1e4bd4e8d029abce02ff7654", "patch": "@@ -13,6 +13,7 @@ use codemap::Span;\n use ext::base::ExtCtxt;\n use ext::build::AstBuilder;\n use ext::deriving::generic::*;\n+use ext::deriving::generic::ty::*;\n use parse::token::InternedString;\n \n pub fn expand_deriving_default(cx: &mut ExtCtxt,"}, {"sha": "c8f5061c9897a6dd0d39ce065511bb0d234163c3", "filename": "src/libsyntax/ext/deriving/encodable.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fderiving%2Fencodable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fderiving%2Fencodable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fencodable.rs?ref=976c8324e1e5f2ec1e4bd4e8d029abce02ff7654", "patch": "@@ -88,6 +88,7 @@ use codemap::Span;\n use ext::base::ExtCtxt;\n use ext::build::AstBuilder;\n use ext::deriving::generic::*;\n+use ext::deriving::generic::ty::*;\n use parse::token;\n \n pub fn expand_deriving_encodable(cx: &mut ExtCtxt,"}, {"sha": "eb224d255e535562ff2b6ffc49eceb2d7f849c68", "filename": "src/libsyntax/ext/deriving/generic/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric%2Fmod.rs?ref=976c8324e1e5f2ec1e4bd4e8d029abce02ff7654", "patch": "@@ -191,8 +191,9 @@ use codemap::Span;\n use owned_slice::OwnedSlice;\n use parse::token::InternedString;\n \n-pub use self::ty::*;\n-mod ty;\n+use self::ty::*;\n+\n+pub mod ty;\n \n pub struct TraitDef<'a> {\n     /// The span for the current #[deriving(Foo)] header."}, {"sha": "a9d5f156a9912c69898ed340953ddd65eef158d0", "filename": "src/libsyntax/ext/deriving/hash.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fderiving%2Fhash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fderiving%2Fhash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fhash.rs?ref=976c8324e1e5f2ec1e4bd4e8d029abce02ff7654", "patch": "@@ -14,6 +14,7 @@ use codemap::Span;\n use ext::base::ExtCtxt;\n use ext::build::AstBuilder;\n use ext::deriving::generic::*;\n+use ext::deriving::generic::ty::*;\n use parse::token::InternedString;\n \n pub fn expand_deriving_hash(cx: &mut ExtCtxt,"}, {"sha": "0db3233c475d4bf12063fba9c1018e0d5880bba1", "filename": "src/libsyntax/ext/deriving/primitive.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fderiving%2Fprimitive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fderiving%2Fprimitive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fprimitive.rs?ref=976c8324e1e5f2ec1e4bd4e8d029abce02ff7654", "patch": "@@ -14,6 +14,7 @@ use codemap::Span;\n use ext::base::ExtCtxt;\n use ext::build::AstBuilder;\n use ext::deriving::generic::*;\n+use ext::deriving::generic::ty::*;\n use parse::token::InternedString;\n \n pub fn expand_deriving_from_primitive(cx: &mut ExtCtxt,"}, {"sha": "86620f1aa1b1ad7edadc6552f50269470d337166", "filename": "src/libsyntax/ext/deriving/rand.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fderiving%2Frand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fderiving%2Frand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Frand.rs?ref=976c8324e1e5f2ec1e4bd4e8d029abce02ff7654", "patch": "@@ -14,6 +14,7 @@ use codemap::Span;\n use ext::base::ExtCtxt;\n use ext::build::{AstBuilder};\n use ext::deriving::generic::*;\n+use ext::deriving::generic::ty::*;\n \n pub fn expand_deriving_rand(cx: &mut ExtCtxt,\n                             span: Span,"}, {"sha": "b352a702eec01b27e584b29b4aef766301b964a3", "filename": "src/libsyntax/ext/deriving/show.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fderiving%2Fshow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fderiving%2Fshow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fshow.rs?ref=976c8324e1e5f2ec1e4bd4e8d029abce02ff7654", "patch": "@@ -15,6 +15,7 @@ use ext::format;\n use ext::base::ExtCtxt;\n use ext::build::AstBuilder;\n use ext::deriving::generic::*;\n+use ext::deriving::generic::ty::*;\n use parse::token;\n \n use collections::HashMap;"}, {"sha": "0328f7b470ce5f2113b73dfb8eb8d443d5ac7555", "filename": "src/libsyntax/ext/deriving/zero.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fderiving%2Fzero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fderiving%2Fzero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fzero.rs?ref=976c8324e1e5f2ec1e4bd4e8d029abce02ff7654", "patch": "@@ -13,6 +13,7 @@ use codemap::Span;\n use ext::base::ExtCtxt;\n use ext::build::AstBuilder;\n use ext::deriving::generic::*;\n+use ext::deriving::generic::ty::*;\n use parse::token::InternedString;\n \n pub fn expand_deriving_zero(cx: &mut ExtCtxt,"}, {"sha": "56bf0309e93ac7a1f007ff1bda2ffc81b28a8f36", "filename": "src/libsyntax/ext/quote.rs", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Fext%2Fquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fquote.rs?ref=976c8324e1e5f2ec1e4bd4e8d029abce02ff7654", "patch": "@@ -36,8 +36,17 @@ pub mod rt {\n     use parse;\n     use print::pprust;\n \n-    pub use ast::*;\n-    pub use parse::token::*;\n+    #[cfg(not(stage0))]\n+    use ast::{TokenTree, Generics, Expr};\n+\n+    // NOTE remove this after snapshot\n+    // (stage0 quasiquoter needs this)\n+    #[cfg(stage0)]\n+    pub use ast::{Generics, TokenTree, TTTok};\n+    #[cfg(stage0)]\n+    pub use parse::token::{IDENT, SEMI, LBRACE, RBRACE, LIFETIME, COLON, AND, BINOP, EQ,\n+                           LBRACKET, RBRACKET, LPAREN, RPAREN, POUND, NOT, MOD_SEP, DOT, COMMA};\n+\n     pub use parse::new_parser_from_tts;\n     pub use codemap::{BytePos, Span, dummy_spanned};\n \n@@ -72,7 +81,7 @@ pub mod rt {\n \n     impl ToSource for ast::Ident {\n         fn to_source(&self) -> String {\n-            get_ident(*self).get().to_string()\n+            token::get_ident(*self).get().to_string()\n         }\n     }\n \n@@ -685,11 +694,14 @@ fn expand_wrapper(cx: &ExtCtxt,\n                   sp: Span,\n                   cx_expr: @ast::Expr,\n                   expr: @ast::Expr) -> @ast::Expr {\n-    let uses = vec![ cx.view_use_glob(sp, ast::Inherited,\n-                                   ids_ext(vec![\"syntax\".to_string(),\n-                                                \"ext\".to_string(),\n-                                                \"quote\".to_string(),\n-                                                \"rt\".to_string()])) ];\n+    let uses = [\n+        &[\"syntax\", \"ast\"],\n+        &[\"syntax\", \"parse\", \"token\"],\n+        &[\"syntax\", \"ext\", \"quote\", \"rt\"],\n+    ].iter().map(|path| {\n+        let path = path.iter().map(|s| s.to_string()).collect();\n+        cx.view_use_glob(sp, ast::Inherited, ids_ext(path))\n+    }).collect();\n \n     let stmt_let_ext_cx = cx.stmt_let(sp, false, id_ext(\"ext_cx\"), cx_expr);\n "}, {"sha": "b1033c419b1fbe3a9d8094264a1a1e723e8561b9", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/976c8324e1e5f2ec1e4bd4e8d029abce02ff7654/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=976c8324e1e5f2ec1e4bd4e8d029abce02ff7654", "patch": "@@ -48,6 +48,7 @@ pub mod util {\n pub mod syntax {\n     pub use ext;\n     pub use parse;\n+    pub use ast;\n }\n \n pub mod owned_slice;"}]}