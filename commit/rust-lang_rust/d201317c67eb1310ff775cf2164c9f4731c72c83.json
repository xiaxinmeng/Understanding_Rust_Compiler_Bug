{"sha": "d201317c67eb1310ff775cf2164c9f4731c72c83", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyMDEzMTdjNjdlYjEzMTBmZjc3NWNmMjE2NGM5ZjQ3MzFjNzJjODM=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-09-05T13:00:06Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-09-05T13:44:54Z"}, "message": "Fix segment_iter not iterating segments properly", "tree": {"sha": "d1f539a15b5fc6629bda8ddaf93314c519fe6c10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1f539a15b5fc6629bda8ddaf93314c519fe6c10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d201317c67eb1310ff775cf2164c9f4731c72c83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d201317c67eb1310ff775cf2164c9f4731c72c83", "html_url": "https://github.com/rust-lang/rust/commit/d201317c67eb1310ff775cf2164c9f4731c72c83", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d201317c67eb1310ff775cf2164c9f4731c72c83/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0275b08d1521606fa733f76fe5d5707717456fb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/0275b08d1521606fa733f76fe5d5707717456fb4", "html_url": "https://github.com/rust-lang/rust/commit/0275b08d1521606fa733f76fe5d5707717456fb4"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "1cb52318ac2a19da99d1ee73ee2533843f5b6b2f", "filename": "crates/assists/src/utils/insert_use.rs", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d201317c67eb1310ff775cf2164c9f4731c72c83/crates%2Fassists%2Fsrc%2Futils%2Finsert_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d201317c67eb1310ff775cf2164c9f4731c72c83/crates%2Fassists%2Fsrc%2Futils%2Finsert_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Futils%2Finsert_use.rs?ref=d201317c67eb1310ff775cf2164c9f4731c72c83", "patch": "@@ -138,7 +138,7 @@ pub(crate) fn insert_use(\n     algo::insert_children(scope.as_syntax_node(), insert_position, to_insert)\n }\n \n-fn try_merge_imports(\n+pub(crate) fn try_merge_imports(\n     old: &ast::Use,\n     new: &ast::Use,\n     merge_behaviour: MergeBehaviour,\n@@ -161,7 +161,7 @@ fn use_tree_list_is_nested(tl: &ast::UseTreeList) -> bool {\n }\n \n // FIXME: currently this merely prepends the new tree into old, ideally it would insert the items in a sorted fashion\n-pub fn try_merge_trees(\n+pub(crate) fn try_merge_trees(\n     old: &ast::UseTree,\n     new: &ast::UseTree,\n     merge_behaviour: MergeBehaviour,\n@@ -278,7 +278,8 @@ fn first_path(path: &ast::Path) -> ast::Path {\n }\n \n fn segment_iter(path: &ast::Path) -> impl Iterator<Item = ast::PathSegment> + Clone {\n-    path.syntax().children().flat_map(ast::PathSegment::cast)\n+    // cant make use of SyntaxNode::siblings, because the returned Iterator is not clone\n+    successors(first_segment(path), |p| p.parent_path().parent_path().and_then(|p| p.segment()))\n }\n \n #[derive(PartialEq, Eq)]\n@@ -684,8 +685,18 @@ use std::io;\",\n         check_last(\n             \"foo::bar\",\n             r\"use foo::bar::baz::Qux;\",\n-            r\"use foo::bar::baz::Qux;\n-use foo::bar;\",\n+            r\"use foo::bar;\n+use foo::bar::baz::Qux;\",\n+        );\n+    }\n+\n+    #[test]\n+    fn insert_short_before_long() {\n+        check_none(\n+            \"foo::bar\",\n+            r\"use foo::bar::baz::Qux;\",\n+            r\"use foo::bar;\n+use foo::bar::baz::Qux;\",\n         );\n     }\n "}]}