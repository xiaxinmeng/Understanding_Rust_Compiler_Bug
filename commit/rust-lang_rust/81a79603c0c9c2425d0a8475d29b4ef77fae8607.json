{"sha": "81a79603c0c9c2425d0a8475d29b4ef77fae8607", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxYTc5NjAzYzBjOWMyNDI1ZDBhODQ3NWQyOWI0ZWY3N2ZhZTg2MDc=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-11-19T01:42:37Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-11-27T02:13:54Z"}, "message": "Add a temporary hack to divert the parser to an alternate file", "tree": {"sha": "3fed9ba476c2e53419f3e22a85189e044747b002", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3fed9ba476c2e53419f3e22a85189e044747b002"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81a79603c0c9c2425d0a8475d29b4ef77fae8607", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81a79603c0c9c2425d0a8475d29b4ef77fae8607", "html_url": "https://github.com/rust-lang/rust/commit/81a79603c0c9c2425d0a8475d29b4ef77fae8607", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81a79603c0c9c2425d0a8475d29b4ef77fae8607/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58e26243a7d7efa8e37703fb6dca95652c79f848", "url": "https://api.github.com/repos/rust-lang/rust/commits/58e26243a7d7efa8e37703fb6dca95652c79f848", "html_url": "https://github.com/rust-lang/rust/commit/58e26243a7d7efa8e37703fb6dca95652c79f848"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "d1388bedad96fd50adfbf971f64b77fce7994475", "filename": "src/libsyntax/parse.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/81a79603c0c9c2425d0a8475d29b4ef77fae8607/src%2Flibsyntax%2Fparse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a79603c0c9c2425d0a8475d29b4ef77fae8607/src%2Flibsyntax%2Fparse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse.rs?ref=81a79603c0c9c2425d0a8475d29b4ef77fae8607", "patch": "@@ -175,6 +175,18 @@ fn new_parser_from_file(sess: parse_sess, cfg: ast::crate_cfg,\n                         path: &Path) -> Result<Parser, ~str> {\n     match io::read_whole_file_str(path) {\n       result::Ok(move src) => {\n+\n+          // HACK: If the file contains a special token use a different\n+          // source file. Used to send the stage1+ parser (the stage0 parser\n+          // doesn't have this hack) to a different crate file.\n+          // Transitional. Remove me.\n+          let src = if src.starts_with(\"// DIVERT\") {\n+              let actual_path = &path.with_filestem(\"alternate_crate\");\n+              result::unwrap(io::read_whole_file_str(actual_path))\n+          } else {\n+              move src\n+          };\n+\n           let filemap = sess.cm.new_filemap(path.to_str(), @move src);\n           let srdr = lexer::new_string_reader(sess.span_diagnostic, filemap,\n                                               sess.interner);"}]}