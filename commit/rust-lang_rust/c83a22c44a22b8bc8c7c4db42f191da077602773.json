{"sha": "c83a22c44a22b8bc8c7c4db42f191da077602773", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4M2EyMmM0NGEyMmI4YmM4YzdjNGRiNDJmMTkxZGEwNzc2MDI3NzM=", "commit": {"author": {"name": "Jeremy Soller", "email": "jackpot51@gmail.com", "date": "2017-06-20T03:00:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-06-20T03:00:30Z"}, "message": "Disable repr(simd) in mem::swap on Redox", "tree": {"sha": "e14fa647726afa9ec1943e10fc55952a0bd5025b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e14fa647726afa9ec1943e10fc55952a0bd5025b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c83a22c44a22b8bc8c7c4db42f191da077602773", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c83a22c44a22b8bc8c7c4db42f191da077602773", "html_url": "https://github.com/rust-lang/rust/commit/c83a22c44a22b8bc8c7c4db42f191da077602773", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c83a22c44a22b8bc8c7c4db42f191da077602773/comments", "author": {"login": "jackpot51", "id": 7741236, "node_id": "MDQ6VXNlcjc3NDEyMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/7741236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackpot51", "html_url": "https://github.com/jackpot51", "followers_url": "https://api.github.com/users/jackpot51/followers", "following_url": "https://api.github.com/users/jackpot51/following{/other_user}", "gists_url": "https://api.github.com/users/jackpot51/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackpot51/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackpot51/subscriptions", "organizations_url": "https://api.github.com/users/jackpot51/orgs", "repos_url": "https://api.github.com/users/jackpot51/repos", "events_url": "https://api.github.com/users/jackpot51/events{/privacy}", "received_events_url": "https://api.github.com/users/jackpot51/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04145943a25c3b8c7e7d7fe8c2efb04f259c25fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/04145943a25c3b8c7e7d7fe8c2efb04f259c25fb", "html_url": "https://github.com/rust-lang/rust/commit/04145943a25c3b8c7e7d7fe8c2efb04f259c25fb"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "509b396f211bba873235148b2b7c0f1881dcfb4c", "filename": "src/libcore/mem.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c83a22c44a22b8bc8c7c4db42f191da077602773/src%2Flibcore%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83a22c44a22b8bc8c7c4db42f191da077602773/src%2Flibcore%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem.rs?ref=c83a22c44a22b8bc8c7c4db42f191da077602773", "patch": "@@ -504,8 +504,8 @@ pub fn swap<T>(x: &mut T, y: &mut T) {\n         // Haswell E processors. LLVM is more able to optimize if we give a struct a\n         // #[repr(simd)], even if we don't actually use this struct directly.\n         //\n-        // FIXME repr(simd) broken on emscripten\n-        #[cfg_attr(not(target_os = \"emscripten\"), repr(simd))]\n+        // FIXME repr(simd) broken on emscripten and redox\n+        #[cfg_attr(not(any(target_os = \"emscripten\", target_os = \"redox\")), repr(simd))]\n         struct Block(u64, u64, u64, u64);\n         struct UnalignedBlock(u64, u64, u64, u64);\n "}]}