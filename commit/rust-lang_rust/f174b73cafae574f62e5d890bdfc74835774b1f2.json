{"sha": "f174b73cafae574f62e5d890bdfc74835774b1f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxNzRiNzNjYWZhZTU3NGY2MmU1ZDg5MGJkZmM3NDgzNTc3NGIxZjI=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-01-09T15:08:07Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-01-09T15:08:07Z"}, "message": "Document the `mk_*_eval_cx` functions", "tree": {"sha": "06b547c2dfc519f4db44a0f14bd391d95d71e53f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06b547c2dfc519f4db44a0f14bd391d95d71e53f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f174b73cafae574f62e5d890bdfc74835774b1f2", "comment_count": 4, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f174b73cafae574f62e5d890bdfc74835774b1f2", "html_url": "https://github.com/rust-lang/rust/commit/f174b73cafae574f62e5d890bdfc74835774b1f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f174b73cafae574f62e5d890bdfc74835774b1f2/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cea282bcfda7bf47a95eae7be822467a97d0a9b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/cea282bcfda7bf47a95eae7be822467a97d0a9b2", "html_url": "https://github.com/rust-lang/rust/commit/cea282bcfda7bf47a95eae7be822467a97d0a9b2"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "9b62743e9c64cfdceddbe34abdd471e6896b0059", "filename": "src/librustc_mir/const_eval.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f174b73cafae574f62e5d890bdfc74835774b1f2/src%2Flibrustc_mir%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f174b73cafae574f62e5d890bdfc74835774b1f2/src%2Flibrustc_mir%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval.rs?ref=f174b73cafae574f62e5d890bdfc74835774b1f2", "patch": "@@ -35,6 +35,8 @@ const STEPS_UNTIL_DETECTOR_ENABLED: isize = 1_000_000;\n /// Should be a power of two for performance reasons.\n const DETECTOR_SNAPSHOT_PERIOD: isize = 256;\n \n+/// Warning: do not use this function if you expect to start interpreting the given `Mir`.\n+/// The `EvalContext` is only meant to be used to query values from constants and statics.\n pub fn mk_borrowck_eval_cx<'a, 'mir, 'tcx>(\n     tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     instance: Instance<'tcx>,\n@@ -46,6 +48,8 @@ pub fn mk_borrowck_eval_cx<'a, 'mir, 'tcx>(\n     mk_eval_cx_inner(tcx, instance, mir, span, param_env)\n }\n \n+/// This is just a helper function to reduce code duplication between `mk_borrowck_eval_cx` and\n+/// `mk_eval_cx`. Do not call this function directly.\n fn mk_eval_cx_inner<'a, 'mir, 'tcx>(\n     tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     instance: Instance<'tcx>,\n@@ -54,8 +58,9 @@ fn mk_eval_cx_inner<'a, 'mir, 'tcx>(\n     param_env: ty::ParamEnv<'tcx>,\n ) -> EvalResult<'tcx, CompileTimeEvalContext<'a, 'mir, 'tcx>> {\n     let mut ecx = EvalContext::new(tcx.at(span), param_env, CompileTimeInterpreter::new());\n-    // insert a stack frame so any queries have the correct substs\n-    // cannot use `push_stack_frame`; if we do `const_prop` explodes\n+    // Insert a stack frame so any queries have the correct substs.\n+    // We also avoid all the extra work performed by push_stack_frame,\n+    // like initializing local variables\n     ecx.stack.push(interpret::Frame {\n         block: mir::START_BLOCK,\n         locals: IndexVec::new(),\n@@ -70,6 +75,9 @@ fn mk_eval_cx_inner<'a, 'mir, 'tcx>(\n     Ok(ecx)\n }\n \n+/// Warning: do not use this function if you expect to start interpreting the given `Mir`.\n+/// The `EvalContext` is only meant to be used to do field and index projections into constants for\n+/// `simd_shuffle` and const patterns in match arms.\n fn mk_eval_cx<'a, 'tcx>(\n     tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     instance: Instance<'tcx>,"}]}