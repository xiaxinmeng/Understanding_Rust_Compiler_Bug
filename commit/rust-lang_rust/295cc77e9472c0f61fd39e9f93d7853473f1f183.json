{"sha": "295cc77e9472c0f61fd39e9f93d7853473f1f183", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5NWNjNzdlOTQ3MmMwZjYxZmQzOWU5ZjkzZDc4NTM0NzNmMWYxODM=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-03-20T22:17:45Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-03-20T22:17:45Z"}, "message": "cleanup: Remove compile-fail-fulldeps directory again", "tree": {"sha": "3c4da88b5e6692159e7686e78f2a9c33e08dcd64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c4da88b5e6692159e7686e78f2a9c33e08dcd64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/295cc77e9472c0f61fd39e9f93d7853473f1f183", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/295cc77e9472c0f61fd39e9f93d7853473f1f183", "html_url": "https://github.com/rust-lang/rust/commit/295cc77e9472c0f61fd39e9f93d7853473f1f183", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/295cc77e9472c0f61fd39e9f93d7853473f1f183/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82e2f3ec25a316c7536c33a6b6704366b14cbf2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/82e2f3ec25a316c7536c33a6b6704366b14cbf2a", "html_url": "https://github.com/rust-lang/rust/commit/82e2f3ec25a316c7536c33a6b6704366b14cbf2a"}], "stats": {"total": 45, "additions": 0, "deletions": 45}, "files": [{"sha": "16630e2b3128555db9e02ac543b39fe43848aa8b", "filename": "src/test/compile-fail-fulldeps/auxiliary/lint_group_plugin_test.rs", "status": "removed", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/82e2f3ec25a316c7536c33a6b6704366b14cbf2a/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_group_plugin_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82e2f3ec25a316c7536c33a6b6704366b14cbf2a/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_group_plugin_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_group_plugin_test.rs?ref=82e2f3ec25a316c7536c33a6b6704366b14cbf2a", "patch": "@@ -1,45 +0,0 @@\n-// force-host\n-\n-#![feature(plugin_registrar)]\n-#![feature(box_syntax, rustc_private)]\n-\n-// Load rustc as a plugin to get macros.\n-#[macro_use]\n-extern crate rustc;\n-extern crate rustc_plugin;\n-\n-use rustc::hir;\n-use rustc::lint::{LateContext, LintContext, LintPass, LateLintPass, LateLintPassObject, LintArray};\n-use rustc_plugin::Registry;\n-\n-declare_lint!(TEST_LINT, Warn, \"Warn about items named 'lintme'\");\n-\n-declare_lint!(PLEASE_LINT, Warn, \"Warn about items named 'pleaselintme'\");\n-\n-struct Pass;\n-\n-impl LintPass for Pass {\n-    fn name(&self) -> &'static str {\n-        \"Pass\"\n-    }\n-\n-    fn get_lints(&self) -> LintArray {\n-        lint_array!(TEST_LINT, PLEASE_LINT)\n-    }\n-}\n-\n-impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n-    fn check_item(&mut self, cx: &LateContext, it: &hir::Item) {\n-        match &*it.ident.as_str() {\n-            \"lintme\" => cx.span_lint(TEST_LINT, it.span, \"item is named 'lintme'\"),\n-            \"pleaselintme\" => cx.span_lint(PLEASE_LINT, it.span, \"item is named 'pleaselintme'\"),\n-            _ => {}\n-        }\n-    }\n-}\n-\n-#[plugin_registrar]\n-pub fn plugin_registrar(reg: &mut Registry) {\n-    reg.register_late_lint_pass(box Pass);\n-    reg.register_lint_group(\"lint_me\", None, vec![TEST_LINT, PLEASE_LINT]);\n-}"}]}