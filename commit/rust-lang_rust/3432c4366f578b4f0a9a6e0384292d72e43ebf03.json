{"sha": "3432c4366f578b4f0a9a6e0384292d72e43ebf03", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0MzJjNDM2NmY1NzhiNGYwYTlhNmUwMzg0MjkyZDcyZTQzZWJmMDM=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-28T12:01:56Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-28T12:01:56Z"}, "message": "Merge #695\n\n695: align command naming r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "b589fcf2ee7d816f3f18bd83b8e88738dcb6fd4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b589fcf2ee7d816f3f18bd83b8e88738dcb6fd4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3432c4366f578b4f0a9a6e0384292d72e43ebf03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3432c4366f578b4f0a9a6e0384292d72e43ebf03", "html_url": "https://github.com/rust-lang/rust/commit/3432c4366f578b4f0a9a6e0384292d72e43ebf03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3432c4366f578b4f0a9a6e0384292d72e43ebf03/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "7abe1f422c1a1230ad5b39474101806c438ef452", "url": "https://api.github.com/repos/rust-lang/rust/commits/7abe1f422c1a1230ad5b39474101806c438ef452", "html_url": "https://github.com/rust-lang/rust/commit/7abe1f422c1a1230ad5b39474101806c438ef452"}, {"sha": "d1a67c1174abfb99b67b8db89c9f27c741e85057", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1a67c1174abfb99b67b8db89c9f27c741e85057", "html_url": "https://github.com/rust-lang/rust/commit/d1a67c1174abfb99b67b8db89c9f27c741e85057"}], "stats": {"total": 171, "additions": 94, "deletions": 77}, "files": [{"sha": "ad600d1628932a116ac5764c750c730519a45e2b", "filename": "README.md", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3432c4366f578b4f0a9a6e0384292d72e43ebf03/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/3432c4366f578b4f0a9a6e0384292d72e43ebf03/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=3432c4366f578b4f0a9a6e0384292d72e43ebf03", "patch": "@@ -125,13 +125,13 @@ and trait selection) to the existing rustc.\n - [x] [textDocument/documentHighlight](https://microsoft.github.io/language-server-protocol/specification#textDocument_documentHighlight)\n - [x] [textDocument/documentSymbol](https://microsoft.github.io/language-server-protocol/specification#textDocument_documentSymbol)\n - [x] [textDocument/codeAction](https://microsoft.github.io/language-server-protocol/specification#textDocument_codeAction)\n- - ra_lsp.syntaxTree\n- - ra_lsp.extendSelection\n- - ra_lsp.matchingBrace\n- - ra_lsp.parentModule\n- - ra_lsp.joinLines\n- - ra_lsp.run\n- - ra_lsp.analyzerStatus\n+ - rust-analyzer.syntaxTree\n+ - rust-analyzer.extendSelection\n+ - rust-analyzer.matchingBrace\n+ - rust-analyzer.parentModule\n+ - rust-analyzer.joinLines\n+ - rust-analyzer.run\n+ - rust-analyzer.analyzerStatus\n - [x] [textDocument/codeLens](https://microsoft.github.io/language-server-protocol/specification#textDocument_codeLens)\n - [ ] [textDocument/documentLink](https://microsoft.github.io/language-server-protocol/specification#codeLens_resolve)\n - [ ] [documentLink/resolve](https://microsoft.github.io/language-server-protocol/specification#documentLink_resolve)"}, {"sha": "9478ebfb89cfdf56147829f8dcdc4ad693dceac4", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3432c4366f578b4f0a9a6e0384292d72e43ebf03/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3432c4366f578b4f0a9a6e0384292d72e43ebf03/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=3432c4366f578b4f0a9a6e0384292d72e43ebf03", "patch": "@@ -581,7 +581,7 @@ pub fn handle_code_action(\n         let edit = source_edit.try_conv_with(&world)?;\n         let cmd = Command {\n             title,\n-            command: \"ra-lsp.applySourceChange\".to_string(),\n+            command: \"rust-analyzer.applySourceChange\".to_string(),\n             arguments: Some(vec![to_value(edit).unwrap()]),\n         };\n         res.push(cmd);\n@@ -623,7 +623,7 @@ pub fn handle_code_lens(\n                 range,\n                 command: Some(Command {\n                     title: title.into(),\n-                    command: \"ra-lsp.run-single\".into(),\n+                    command: \"rust-analyzer.runSingle\".into(),\n                     arguments: Some(vec![to_value(r).unwrap()]),\n                 }),\n                 data: None,"}, {"sha": "a4d890755f4807b1a2062a76574d1dc038cba57a", "filename": "crates/ra_lsp_server/src/req.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/3432c4366f578b4f0a9a6e0384292d72e43ebf03/crates%2Fra_lsp_server%2Fsrc%2Freq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3432c4366f578b4f0a9a6e0384292d72e43ebf03/crates%2Fra_lsp_server%2Fsrc%2Freq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Freq.rs?ref=3432c4366f578b4f0a9a6e0384292d72e43ebf03", "patch": "@@ -16,23 +16,23 @@ pub enum AnalyzerStatus {}\n impl Request for AnalyzerStatus {\n     type Params = ();\n     type Result = String;\n-    const METHOD: &'static str = \"ra/analyzerStatus\";\n+    const METHOD: &'static str = \"rust-analyzer/analyzerStatus\";\n }\n \n pub enum CollectGarbage {}\n \n impl Request for CollectGarbage {\n     type Params = ();\n     type Result = ();\n-    const METHOD: &'static str = \"ra/collectGarbage\";\n+    const METHOD: &'static str = \"rust-analyzer/collectGarbage\";\n }\n \n pub enum SyntaxTree {}\n \n impl Request for SyntaxTree {\n     type Params = SyntaxTreeParams;\n     type Result = String;\n-    const METHOD: &'static str = \"m/syntaxTree\";\n+    const METHOD: &'static str = \"rust-analyzer/syntaxTree\";\n }\n \n #[derive(Deserialize, Debug)]\n@@ -46,7 +46,7 @@ pub enum ExtendSelection {}\n impl Request for ExtendSelection {\n     type Params = ExtendSelectionParams;\n     type Result = ExtendSelectionResult;\n-    const METHOD: &'static str = \"m/extendSelection\";\n+    const METHOD: &'static str = \"rust-analyzer/extendSelection\";\n }\n \n #[derive(Deserialize, Debug)]\n@@ -67,7 +67,7 @@ pub enum FindMatchingBrace {}\n impl Request for FindMatchingBrace {\n     type Params = FindMatchingBraceParams;\n     type Result = Vec<Position>;\n-    const METHOD: &'static str = \"m/findMatchingBrace\";\n+    const METHOD: &'static str = \"rust-analyzer/findMatchingBrace\";\n }\n \n #[derive(Deserialize, Debug)]\n@@ -82,14 +82,14 @@ pub enum DecorationsRequest {}\n impl Request for DecorationsRequest {\n     type Params = TextDocumentIdentifier;\n     type Result = Vec<Decoration>;\n-    const METHOD: &'static str = \"m/decorationsRequest\";\n+    const METHOD: &'static str = \"rust-analyzer/decorationsRequest\";\n }\n \n pub enum PublishDecorations {}\n \n impl Notification for PublishDecorations {\n     type Params = PublishDecorationsParams;\n-    const METHOD: &'static str = \"m/publishDecorations\";\n+    const METHOD: &'static str = \"rust-analyzer/publishDecorations\";\n }\n \n #[derive(Serialize, Debug)]\n@@ -112,15 +112,15 @@ pub enum ParentModule {}\n impl Request for ParentModule {\n     type Params = TextDocumentPositionParams;\n     type Result = Vec<Location>;\n-    const METHOD: &'static str = \"m/parentModule\";\n+    const METHOD: &'static str = \"rust-analyzer/parentModule\";\n }\n \n pub enum JoinLines {}\n \n impl Request for JoinLines {\n     type Params = JoinLinesParams;\n     type Result = SourceChange;\n-    const METHOD: &'static str = \"m/joinLines\";\n+    const METHOD: &'static str = \"rust-analyzer/joinLines\";\n }\n \n #[derive(Deserialize, Debug)]\n@@ -135,15 +135,15 @@ pub enum OnEnter {}\n impl Request for OnEnter {\n     type Params = TextDocumentPositionParams;\n     type Result = Option<SourceChange>;\n-    const METHOD: &'static str = \"m/onEnter\";\n+    const METHOD: &'static str = \"rust-analyzer/onEnter\";\n }\n \n pub enum Runnables {}\n \n impl Request for Runnables {\n     type Params = RunnablesParams;\n     type Result = Vec<Runnable>;\n-    const METHOD: &'static str = \"m/runnables\";\n+    const METHOD: &'static str = \"rust-analyzer/runnables\";\n }\n \n #[derive(Serialize, Deserialize, Debug)]"}, {"sha": "bfb0645a8d1b1b6599d63893d369d61f0bfd55ff", "filename": "crates/ra_lsp_server/tests/heavy_tests/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3432c4366f578b4f0a9a6e0384292d72e43ebf03/crates%2Fra_lsp_server%2Ftests%2Fheavy_tests%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3432c4366f578b4f0a9a6e0384292d72e43ebf03/crates%2Fra_lsp_server%2Ftests%2Fheavy_tests%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Ftests%2Fheavy_tests%2Fmain.rs?ref=3432c4366f578b4f0a9a6e0384292d72e43ebf03", "patch": "@@ -246,7 +246,7 @@ fn main() {}\n                   \"label\": \"create module\"\n                 }\n               ],\n-              \"command\": \"ra-lsp.applySourceChange\",\n+              \"command\": \"rust-analyzer.applySourceChange\",\n               \"title\": \"create module\"\n             }\n         ]),"}, {"sha": "2d6a3f21d03e6af29a4c2672640c321e1b5f5e90", "filename": "editors/README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3432c4366f578b4f0a9a6e0384292d72e43ebf03/editors%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/3432c4366f578b4f0a9a6e0384292d72e43ebf03/editors%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2FREADME.md?ref=3432c4366f578b4f0a9a6e0384292d72e43ebf03", "patch": "@@ -26,7 +26,7 @@ They are more experimental in nature and work only with VS Code.\n ### Syntax highlighting\n \n It overrides built-in highlighting, and works only with a specific theme\n-(zenburn). `ra-lsp.highlightingOn` setting can be used to disable it.\n+(zenburn). `rust-analyzer.highlightingOn` setting can be used to disable it.\n \n ### Go to symbol in workspace <kbd>ctrl+t</kbd>\n "}, {"sha": "05c67d822e7e83b384b04a8fd7edc41ab9f2cbc6", "filename": "editors/code/package.json", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/3432c4366f578b4f0a9a6e0384292d72e43ebf03/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/3432c4366f578b4f0a9a6e0384292d72e43ebf03/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=3432c4366f578b4f0a9a6e0384292d72e43ebf03", "patch": "@@ -72,61 +72,61 @@\n         ],\n         \"commands\": [\n             {\n-                \"command\": \"ra-lsp.syntaxTree\",\n-                \"title\": \"Show Rust syntax tree\"\n+                \"command\": \"rust-analyzer.syntaxTree\",\n+                \"title\": \"rust-analyzer: syntax tree\"\n             },\n             {\n-                \"command\": \"ra-lsp.extendSelection\",\n-                \"title\": \"Rust Extend Selection\"\n+                \"command\": \"rust-analyzer.extendSelection\",\n+                \"title\": \"rust-analyzer: extend selection\"\n             },\n             {\n-                \"command\": \"ra-lsp.matchingBrace\",\n-                \"title\": \"Rust Matching Brace\"\n+                \"command\": \"rust-analyzer.matchingBrace\",\n+                \"title\": \"rust-analyzer: matching brace\"\n             },\n             {\n-                \"command\": \"ra-lsp.parentModule\",\n-                \"title\": \"Rust Parent Module\"\n+                \"command\": \"rust-analyzer.parentModule\",\n+                \"title\": \"rust-analyzer: parent module\"\n             },\n             {\n-                \"command\": \"ra-lsp.joinLines\",\n-                \"title\": \"Rust Join Lines\"\n+                \"command\": \"rust-analyzer.joinLines\",\n+                \"title\": \"rust-analyzer: join lines\"\n             },\n             {\n-                \"command\": \"ra-lsp.run\",\n-                \"title\": \"Rust Run\"\n+                \"command\": \"rust-analyzer.run\",\n+                \"title\": \"rust-analyzer: run\"\n             },\n             {\n-                \"command\": \"ra-lsp.analyzerStatus\",\n-                \"title\": \"Status of rust-analyzer (debug)\"\n+                \"command\": \"rust-analyzer.analyzerStatus\",\n+                \"title\": \"rust-analyzer: status\"\n             },\n             {\n-                \"command\": \"ra-lsp.collectGarbage\",\n-                \"title\": \"Run rust-analyzer's GC\"\n+                \"command\": \"rust-analyzer.collectGarbage\",\n+                \"title\": \"rust-analyzer: run gc\"\n             }\n         ],\n         \"keybindings\": [\n             {\n-                \"command\": \"ra-lsp.parentModule\",\n+                \"command\": \"rust-analyzer.parentModule\",\n                 \"key\": \"ctrl+u\",\n                 \"when\": \"editorTextFocus && editorLangId == rust\"\n             },\n             {\n-                \"command\": \"ra-lsp.matchingBrace\",\n+                \"command\": \"rust-analyzer.matchingBrace\",\n                 \"key\": \"ctrl+shift+m\",\n                 \"when\": \"editorTextFocus && editorLangId == rust\"\n             },\n             {\n-                \"command\": \"ra-lsp.extendSelection\",\n+                \"command\": \"rust-analyzer.extendSelection\",\n                 \"key\": \"shift+alt+right\",\n                 \"when\": \"editorTextFocus && editorLangId == rust\"\n             },\n             {\n-                \"command\": \"ra-lsp.joinLines\",\n+                \"command\": \"rust-analyzer.joinLines\",\n                 \"key\": \"ctrl+shift+j\",\n                 \"when\": \"editorTextFocus && editorLangId == rust\"\n             },\n             {\n-                \"command\": \"ra-lsp.run\",\n+                \"command\": \"rust-analyzer.run\",\n                 \"key\": \"ctrl+r\",\n                 \"when\": \"editorTextFocus && editorLangId == rust\"\n             }\n@@ -135,19 +135,19 @@\n             \"type\": \"object\",\n             \"title\": \"Rust Analyzer\",\n             \"properties\": {\n-                \"ra-lsp.highlightingOn\": {\n+                \"rust-analyzer.highlightingOn\": {\n                     \"type\": \"boolean\",\n                     \"default\": true,\n                     \"description\": \"Highlight Rust code (overrides built-in syntax highlighting)\"\n                 },\n-                \"ra-lsp.raLspServerPath\": {\n+                \"rust-analyzer.raLspServerPath\": {\n                     \"type\": [\n                         \"string\"\n                     ],\n                     \"default\": \"ra_lsp_server\",\n                     \"description\": \"Path to ra_lsp_server executable\"\n                 },\n-                \"ra-lsp.trace.server\": {\n+                \"rust-analyzer.trace.server\": {\n                     \"type\": \"string\",\n                     \"scope\": \"window\",\n                     \"enum\": [\n@@ -156,7 +156,7 @@\n                         \"verbose\"\n                     ],\n                     \"default\": \"off\",\n-                    \"description\": \"Trace requests to the ra-lsp server\"\n+                    \"description\": \"Trace requests to the ra_lsp_server\"\n                 }\n             }\n         },"}, {"sha": "63f82c92d8816c3ea6e411611807e841a1955b90", "filename": "editors/code/src/commands/analyzer_status.ts", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3432c4366f578b4f0a9a6e0384292d72e43ebf03/editors%2Fcode%2Fsrc%2Fcommands%2Fanalyzer_status.ts", "raw_url": "https://github.com/rust-lang/rust/raw/3432c4366f578b4f0a9a6e0384292d72e43ebf03/editors%2Fcode%2Fsrc%2Fcommands%2Fanalyzer_status.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fanalyzer_status.ts?ref=3432c4366f578b4f0a9a6e0384292d72e43ebf03", "patch": "@@ -1,7 +1,7 @@\n import * as vscode from 'vscode';\n import { Server } from '../server';\n \n-const statusUri = vscode.Uri.parse('ra-lsp-status://status');\n+const statusUri = vscode.Uri.parse('rust-analyzer-status://status');\n \n export class TextDocumentContentProvider\n     implements vscode.TextDocumentContentProvider {\n@@ -15,7 +15,10 @@ export class TextDocumentContentProvider\n         if (editor == null) {\n             return '';\n         }\n-        return Server.client.sendRequest<string>('ra/analyzerStatus', null);\n+        return Server.client.sendRequest<string>(\n+            'rust-analyzer/analyzerStatus',\n+            null\n+        );\n     }\n \n     get onDidChange(): vscode.Event<vscode.Uri> {\n@@ -31,7 +34,7 @@ export function makeCommand(context: vscode.ExtensionContext) {\n     const textDocumentContentProvider = new TextDocumentContentProvider();\n     context.subscriptions.push(\n         vscode.workspace.registerTextDocumentContentProvider(\n-            'ra-lsp-status',\n+            'rust-analyzer-status',\n             textDocumentContentProvider\n         )\n     );"}, {"sha": "6f4187d15c3868e9a8a516e234a756eceddfb3e6", "filename": "editors/code/src/commands/extend_selection.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3432c4366f578b4f0a9a6e0384292d72e43ebf03/editors%2Fcode%2Fsrc%2Fcommands%2Fextend_selection.ts", "raw_url": "https://github.com/rust-lang/rust/raw/3432c4366f578b4f0a9a6e0384292d72e43ebf03/editors%2Fcode%2Fsrc%2Fcommands%2Fextend_selection.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fextend_selection.ts?ref=3432c4366f578b4f0a9a6e0384292d72e43ebf03", "patch": "@@ -24,7 +24,7 @@ export async function handle() {\n         textDocument: { uri: editor.document.uri.toString() }\n     };\n     const response = await Server.client.sendRequest<ExtendSelectionResult>(\n-        'm/extendSelection',\n+        'rust-analyzer/extendSelection',\n         request\n     );\n     editor.selections = response.selections.map((range: Range) => {"}, {"sha": "0d4b12f4d856c86dc0343fa0297effd5975024e2", "filename": "editors/code/src/commands/join_lines.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3432c4366f578b4f0a9a6e0384292d72e43ebf03/editors%2Fcode%2Fsrc%2Fcommands%2Fjoin_lines.ts", "raw_url": "https://github.com/rust-lang/rust/raw/3432c4366f578b4f0a9a6e0384292d72e43ebf03/editors%2Fcode%2Fsrc%2Fcommands%2Fjoin_lines.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fjoin_lines.ts?ref=3432c4366f578b4f0a9a6e0384292d72e43ebf03", "patch": "@@ -22,7 +22,7 @@ export async function handle() {\n         textDocument: { uri: editor.document.uri.toString() }\n     };\n     const change = await Server.client.sendRequest<SourceChange>(\n-        'm/joinLines',\n+        'rust-analyzer/joinLines',\n         request\n     );\n     await applySourceChange(change);"}, {"sha": "d86faf40518b05e29514172f381a8ec0c9aa9046", "filename": "editors/code/src/commands/matching_brace.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3432c4366f578b4f0a9a6e0384292d72e43ebf03/editors%2Fcode%2Fsrc%2Fcommands%2Fmatching_brace.ts", "raw_url": "https://github.com/rust-lang/rust/raw/3432c4366f578b4f0a9a6e0384292d72e43ebf03/editors%2Fcode%2Fsrc%2Fcommands%2Fmatching_brace.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fmatching_brace.ts?ref=3432c4366f578b4f0a9a6e0384292d72e43ebf03", "patch": "@@ -20,7 +20,7 @@ export async function handle() {\n         })\n     };\n     const response = await Server.client.sendRequest<Position[]>(\n-        'm/findMatchingBrace',\n+        'rust-analyzer/findMatchingBrace',\n         request\n     );\n     editor.selections = editor.selections.map((sel, idx) => {"}, {"sha": "16dcb70c813ed36fa7f5e8500d5e3b4bad6b9160", "filename": "editors/code/src/commands/on_enter.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3432c4366f578b4f0a9a6e0384292d72e43ebf03/editors%2Fcode%2Fsrc%2Fcommands%2Fon_enter.ts", "raw_url": "https://github.com/rust-lang/rust/raw/3432c4366f578b4f0a9a6e0384292d72e43ebf03/editors%2Fcode%2Fsrc%2Fcommands%2Fon_enter.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fon_enter.ts?ref=3432c4366f578b4f0a9a6e0384292d72e43ebf03", "patch": "@@ -22,7 +22,7 @@ export async function handle(event: { text: string }): Promise<boolean> {\n         )\n     };\n     const change = await Server.client.sendRequest<undefined | SourceChange>(\n-        'm/onEnter',\n+        'rust-analyzer/onEnter',\n         request\n     );\n     if (!change) {"}, {"sha": "9d30b7b59ace4f4f2a781bf4427e2143c8218614", "filename": "editors/code/src/commands/parent_module.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3432c4366f578b4f0a9a6e0384292d72e43ebf03/editors%2Fcode%2Fsrc%2Fcommands%2Fparent_module.ts", "raw_url": "https://github.com/rust-lang/rust/raw/3432c4366f578b4f0a9a6e0384292d72e43ebf03/editors%2Fcode%2Fsrc%2Fcommands%2Fparent_module.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fparent_module.ts?ref=3432c4366f578b4f0a9a6e0384292d72e43ebf03", "patch": "@@ -15,7 +15,7 @@ export async function handle() {\n         )\n     };\n     const response = await Server.client.sendRequest<lc.Location[]>(\n-        'm/parentModule',\n+        'rust-analyzer/parentModule',\n         request\n     );\n     const loc = response[0];"}, {"sha": "d9ae56420a29331e36e53d315042101a08eca910", "filename": "editors/code/src/commands/runnables.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3432c4366f578b4f0a9a6e0384292d72e43ebf03/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts", "raw_url": "https://github.com/rust-lang/rust/raw/3432c4366f578b4f0a9a6e0384292d72e43ebf03/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts?ref=3432c4366f578b4f0a9a6e0384292d72e43ebf03", "patch": "@@ -83,7 +83,7 @@ export async function handle() {\n         )\n     };\n     const runnables = await Server.client.sendRequest<Runnable[]>(\n-        'm/runnables',\n+        'rust-analyzer/runnables',\n         params\n     );\n     const items: RunnableQuickPick[] = [];"}, {"sha": "c0baf08c51200f6cb31b11c9d1dc216148b15d34", "filename": "editors/code/src/commands/syntaxTree.ts", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3432c4366f578b4f0a9a6e0384292d72e43ebf03/editors%2Fcode%2Fsrc%2Fcommands%2FsyntaxTree.ts", "raw_url": "https://github.com/rust-lang/rust/raw/3432c4366f578b4f0a9a6e0384292d72e43ebf03/editors%2Fcode%2Fsrc%2Fcommands%2FsyntaxTree.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2FsyntaxTree.ts?ref=3432c4366f578b4f0a9a6e0384292d72e43ebf03", "patch": "@@ -3,7 +3,7 @@ import { TextDocumentIdentifier } from 'vscode-languageclient';\n \n import { Server } from '../server';\n \n-export const syntaxTreeUri = vscode.Uri.parse('ra-lsp://syntaxtree');\n+export const syntaxTreeUri = vscode.Uri.parse('rust-analyzer://syntaxtree');\n \n export class TextDocumentContentProvider\n     implements vscode.TextDocumentContentProvider {\n@@ -21,7 +21,7 @@ export class TextDocumentContentProvider\n             textDocument: { uri: editor.document.uri.toString() }\n         };\n         return Server.client.sendRequest<SyntaxTreeResult>(\n-            'm/syntaxTree',\n+            'rust-analyzer/syntaxTree',\n             request\n         );\n     }"}, {"sha": "d26f5df0ab128de73dea78e510dc3096553f2316", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3432c4366f578b4f0a9a6e0384292d72e43ebf03/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/3432c4366f578b4f0a9a6e0384292d72e43ebf03/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=3432c4366f578b4f0a9a6e0384292d72e43ebf03", "patch": "@@ -16,7 +16,7 @@ export class Config {\n     }\n \n     public userConfigChanged() {\n-        const config = vscode.workspace.getConfiguration('ra-lsp');\n+        const config = vscode.workspace.getConfiguration('rust-analyzer');\n         if (config.has('highlightingOn')) {\n             this.highlightingOn = config.get('highlightingOn') as boolean;\n         }"}, {"sha": "af295b2ecba89d448e2c9dd2ed0f920d350c7876", "filename": "editors/code/src/events/change_active_text_editor.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3432c4366f578b4f0a9a6e0384292d72e43ebf03/editors%2Fcode%2Fsrc%2Fevents%2Fchange_active_text_editor.ts", "raw_url": "https://github.com/rust-lang/rust/raw/3432c4366f578b4f0a9a6e0384292d72e43ebf03/editors%2Fcode%2Fsrc%2Fevents%2Fchange_active_text_editor.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fevents%2Fchange_active_text_editor.ts?ref=3432c4366f578b4f0a9a6e0384292d72e43ebf03", "patch": "@@ -16,7 +16,7 @@ export async function handle(editor: TextEditor | undefined) {\n         uri: editor.document.uri.toString()\n     };\n     const decorations = await Server.client.sendRequest<Decoration[]>(\n-        'm/decorationsRequest',\n+        'rust-analyzer/decorationsRequest',\n         params\n     );\n     Server.highlighter.setHighlights(editor, decorations);"}, {"sha": "0b2a6095b7e3a4d64175d6d01079ea191ae982fe", "filename": "editors/code/src/extension.ts", "status": "modified", "additions": 25, "deletions": 15, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/3432c4366f578b4f0a9a6e0384292d72e43ebf03/editors%2Fcode%2Fsrc%2Fextension.ts", "raw_url": "https://github.com/rust-lang/rust/raw/3432c4366f578b4f0a9a6e0384292d72e43ebf03/editors%2Fcode%2Fsrc%2Fextension.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fextension.ts?ref=3432c4366f578b4f0a9a6e0384292d72e43ebf03", "patch": "@@ -46,31 +46,41 @@ export function activate(context: vscode.ExtensionContext) {\n \n     // Commands are requests from vscode to the language server\n     registerCommand(\n-        'ra-lsp.analyzerStatus',\n+        'rust-analyzer.analyzerStatus',\n         commands.analyzerStatus.makeCommand(context)\n     );\n-    registerCommand('ra-lsp.collectGarbage', () =>\n-        Server.client.sendRequest<null>('ra/collectGarbage', null)\n+    registerCommand('rust-analyzer.collectGarbage', () =>\n+        Server.client.sendRequest<null>('rust-analyzer/collectGarbage', null)\n     );\n-    registerCommand('ra-lsp.syntaxTree', commands.syntaxTree.handle);\n-    registerCommand('ra-lsp.extendSelection', commands.extendSelection.handle);\n-    registerCommand('ra-lsp.matchingBrace', commands.matchingBrace.handle);\n-    registerCommand('ra-lsp.joinLines', commands.joinLines.handle);\n-    registerCommand('ra-lsp.parentModule', commands.parentModule.handle);\n-    registerCommand('ra-lsp.run', commands.runnables.handle);\n+    registerCommand('rust-analyzer.syntaxTree', commands.syntaxTree.handle);\n     registerCommand(\n-        'ra-lsp.applySourceChange',\n+        'rust-analyzer.extendSelection',\n+        commands.extendSelection.handle\n+    );\n+    registerCommand(\n+        'rust-analyzer.matchingBrace',\n+        commands.matchingBrace.handle\n+    );\n+    registerCommand('rust-analyzer.joinLines', commands.joinLines.handle);\n+    registerCommand('rust-analyzer.parentModule', commands.parentModule.handle);\n+    registerCommand('rust-analyzer.run', commands.runnables.handle);\n+    // Unlike the above this does not send requests to the language server\n+    registerCommand('rust-analyzer.runSingle', commands.runnables.handleSingle);\n+    registerCommand(\n+        'rust-analyzer.applySourceChange',\n         commands.applySourceChange.handle\n     );\n     overrideCommand('type', commands.onEnter.handle);\n \n-    // Unlike the above this does not send requests to the language server\n-    registerCommand('ra-lsp.run-single', commands.runnables.handleSingle);\n-\n     // Notifications are events triggered by the language server\n     const allNotifications: Iterable<\n         [string, lc.GenericNotificationHandler]\n-    > = [['m/publishDecorations', notifications.publishDecorations.handle]];\n+    > = [\n+        [\n+            'rust-analyzer/publishDecorations',\n+            notifications.publishDecorations.handle\n+        ]\n+    ];\n \n     // The events below are plain old javascript events, triggered and handled by vscode\n     vscode.window.onDidChangeActiveTextEditor(\n@@ -80,7 +90,7 @@ export function activate(context: vscode.ExtensionContext) {\n     const textDocumentContentProvider = new TextDocumentContentProvider();\n     disposeOnDeactivation(\n         vscode.workspace.registerTextDocumentContentProvider(\n-            'ra-lsp',\n+            'rust-analyzer',\n             textDocumentContentProvider\n         )\n     );"}, {"sha": "0d26327081b1cd7d9d46efb9240fcd924eb8698e", "filename": "editors/code/src/server.ts", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3432c4366f578b4f0a9a6e0384292d72e43ebf03/editors%2Fcode%2Fsrc%2Fserver.ts", "raw_url": "https://github.com/rust-lang/rust/raw/3432c4366f578b4f0a9a6e0384292d72e43ebf03/editors%2Fcode%2Fsrc%2Fserver.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fserver.ts?ref=3432c4366f578b4f0a9a6e0384292d72e43ebf03", "patch": "@@ -42,8 +42,12 @@ export class Server {\n             log: (messageOrDataObject: string | any, data?: string) => {\n                 if (typeof messageOrDataObject === 'string') {\n                     if (\n-                        messageOrDataObject.includes('m/publishDecorations') ||\n-                        messageOrDataObject.includes('m/decorationsRequest')\n+                        messageOrDataObject.includes(\n+                            'rust-analyzer/publishDecorations'\n+                        ) ||\n+                        messageOrDataObject.includes(\n+                            'rust-analyzer/decorationsRequest'\n+                        )\n                     ) {\n                         // Don't log publish decorations requests\n                     } else {"}]}