{"sha": "442a6e7e97b7b053d7fb89432e6f621e4031a11f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0MmE2ZTdlOTdiN2IwNTNkN2ZiODk0MzJlNmY2MjFlNDAzMWExMWY=", "commit": {"author": {"name": "Ohad Ravid", "email": "ohad.rv@gmail.com", "date": "2019-10-30T06:59:27Z"}, "committer": {"name": "Ohad Ravid", "email": "ohad.rv@gmail.com", "date": "2019-10-31T16:11:22Z"}, "message": "Strengthen documentation discouraging implementing `Into` over `From`", "tree": {"sha": "b365a9a63b68fc89227ef81eb7f0a15f144f75d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b365a9a63b68fc89227ef81eb7f0a15f144f75d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/442a6e7e97b7b053d7fb89432e6f621e4031a11f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/442a6e7e97b7b053d7fb89432e6f621e4031a11f", "html_url": "https://github.com/rust-lang/rust/commit/442a6e7e97b7b053d7fb89432e6f621e4031a11f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/442a6e7e97b7b053d7fb89432e6f621e4031a11f/comments", "author": {"login": "ohadravid", "id": 2358365, "node_id": "MDQ6VXNlcjIzNTgzNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/2358365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ohadravid", "html_url": "https://github.com/ohadravid", "followers_url": "https://api.github.com/users/ohadravid/followers", "following_url": "https://api.github.com/users/ohadravid/following{/other_user}", "gists_url": "https://api.github.com/users/ohadravid/gists{/gist_id}", "starred_url": "https://api.github.com/users/ohadravid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ohadravid/subscriptions", "organizations_url": "https://api.github.com/users/ohadravid/orgs", "repos_url": "https://api.github.com/users/ohadravid/repos", "events_url": "https://api.github.com/users/ohadravid/events{/privacy}", "received_events_url": "https://api.github.com/users/ohadravid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ohadravid", "id": 2358365, "node_id": "MDQ6VXNlcjIzNTgzNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/2358365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ohadravid", "html_url": "https://github.com/ohadravid", "followers_url": "https://api.github.com/users/ohadravid/followers", "following_url": "https://api.github.com/users/ohadravid/following{/other_user}", "gists_url": "https://api.github.com/users/ohadravid/gists{/gist_id}", "starred_url": "https://api.github.com/users/ohadravid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ohadravid/subscriptions", "organizations_url": "https://api.github.com/users/ohadravid/orgs", "repos_url": "https://api.github.com/users/ohadravid/repos", "events_url": "https://api.github.com/users/ohadravid/events{/privacy}", "received_events_url": "https://api.github.com/users/ohadravid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b7c0d3fa0fcb437c3b7de9674429fe77f62c927", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b7c0d3fa0fcb437c3b7de9674429fe77f62c927", "html_url": "https://github.com/rust-lang/rust/commit/3b7c0d3fa0fcb437c3b7de9674429fe77f62c927"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "e5b3af7ad55c5c3304588cfa19223b98003664a1", "filename": "src/libcore/convert.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/442a6e7e97b7b053d7fb89432e6f621e4031a11f/src%2Flibcore%2Fconvert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/442a6e7e97b7b053d7fb89432e6f621e4031a11f/src%2Flibcore%2Fconvert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fconvert.rs?ref=442a6e7e97b7b053d7fb89432e6f621e4031a11f", "patch": "@@ -205,11 +205,12 @@ pub trait AsMut<T: ?Sized> {\n /// A value-to-value conversion that consumes the input value. The\n /// opposite of [`From`].\n ///\n-/// One should only implement [`Into`] if a conversion to a type outside the current crate is\n-/// required. Otherwise one should always prefer implementing [`From`] over [`Into`] because\n-/// implementing [`From`] automatically provides one with a implementation of [`Into`] thanks to\n-/// the blanket implementation in the standard library. [`From`] cannot do these type of\n-/// conversions because of Rust's orphaning rules.\n+/// One should avoid implementing [`Into`] and implement [`From`] instead.\n+/// Implementing [`From`] automatically provides one with an implementation of [`Into`]\n+/// thanks to the blanket implementation in the standard library.\n+///\n+/// Prefer using [`Into`] over [`From`] when specifying trait bounds on a generic function\n+/// to ensure that types that only implement [`Into`] can be used as well.\n ///\n /// **Note: This trait must not fail**. If the conversion can fail, use [`TryInto`].\n ///\n@@ -218,7 +219,7 @@ pub trait AsMut<T: ?Sized> {\n /// - [`From`]`<T> for U` implies `Into<U> for T`\n /// - [`Into`] is reflexive, which means that `Into<T> for T` is implemented\n ///\n-/// # Implementing [`Into`] for conversions to external types\n+/// # Implementing [`Into`] for conversions to external types in old versions of Rust\n ///\n /// Prior to Rust 1.40, if the destination type was not part of the current crate\n /// then you couldn't implement [`From`] directly.\n@@ -248,9 +249,6 @@ pub trait AsMut<T: ?Sized> {\n /// (as [`From`] does with [`Into`]). Therefore, you should always try to implement [`From`]\n /// and then fall back to [`Into`] if [`From`] can't be implemented.\n ///\n-/// Prefer using [`Into`] over [`From`] when specifying trait bounds on a generic function\n-/// to ensure that types that only implement [`Into`] can be used as well.\n-///\n /// # Examples\n ///\n /// [`String`] implements [`Into`]`<`[`Vec`]`<`[`u8`]`>>`:"}]}