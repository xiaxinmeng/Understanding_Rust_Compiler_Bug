{"sha": "9e60288640fa549329bd518cbb541176839adedb", "node_id": "C_kwDOAAsO6NoAKDllNjAyODg2NDBmYTU0OTMyOWJkNTE4Y2JiNTQxMTc2ODM5YWRlZGI", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-10-18T02:40:23Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-10-18T02:40:23Z"}, "message": "Add static size assertion for `clean::GenericParamDef`", "tree": {"sha": "f746206052dd1cbe0fe6373f9628b10db0a31535", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f746206052dd1cbe0fe6373f9628b10db0a31535"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e60288640fa549329bd518cbb541176839adedb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e60288640fa549329bd518cbb541176839adedb", "html_url": "https://github.com/rust-lang/rust/commit/9e60288640fa549329bd518cbb541176839adedb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e60288640fa549329bd518cbb541176839adedb/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8db8f48ea8c2443e969050fe4b6c829585048d5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/8db8f48ea8c2443e969050fe4b6c829585048d5c", "html_url": "https://github.com/rust-lang/rust/commit/8db8f48ea8c2443e969050fe4b6c829585048d5c"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "770593a8b86ae6d3d9ce26ccc61e8fb5562e4400", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9e60288640fa549329bd518cbb541176839adedb/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e60288640fa549329bd518cbb541176839adedb/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=9e60288640fa549329bd518cbb541176839adedb", "patch": "@@ -1252,6 +1252,10 @@ crate struct GenericParamDef {\n     crate kind: GenericParamDefKind,\n }\n \n+// `GenericParamDef` is used in many places. Make sure it doesn't unintentionally get bigger.\n+#[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"64\"))]\n+rustc_data_structures::static_assert_size!(GenericParamDef, 120);\n+\n impl GenericParamDef {\n     crate fn is_synthetic_type_param(&self) -> bool {\n         match self.kind {"}]}