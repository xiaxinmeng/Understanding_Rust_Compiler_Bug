{"sha": "d64a4b57aef5e1f0a51bbae24b73e5a7acd20aef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2NGE0YjU3YWVmNWUxZjBhNTFiYmFlMjRiNzNlNWE3YWNkMjBhZWY=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-07-03T22:12:16Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-07-03T22:15:29Z"}, "message": "Create new E0768 error code for \"no valid digits found for number\" error", "tree": {"sha": "7c51c012522f4977838d29238d3a08754e945f9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c51c012522f4977838d29238d3a08754e945f9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d64a4b57aef5e1f0a51bbae24b73e5a7acd20aef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d64a4b57aef5e1f0a51bbae24b73e5a7acd20aef", "html_url": "https://github.com/rust-lang/rust/commit/d64a4b57aef5e1f0a51bbae24b73e5a7acd20aef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d64a4b57aef5e1f0a51bbae24b73e5a7acd20aef/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f844ea1e561475e6023282ef167e76bc973773ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/f844ea1e561475e6023282ef167e76bc973773ef", "html_url": "https://github.com/rust-lang/rust/commit/f844ea1e561475e6023282ef167e76bc973773ef"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "f687221d78e039a6f3f524faf1ea2cd54a240d6b", "filename": "src/librustc_error_codes/error_codes.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d64a4b57aef5e1f0a51bbae24b73e5a7acd20aef/src%2Flibrustc_error_codes%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d64a4b57aef5e1f0a51bbae24b73e5a7acd20aef/src%2Flibrustc_error_codes%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes.rs?ref=d64a4b57aef5e1f0a51bbae24b73e5a7acd20aef", "patch": "@@ -449,6 +449,7 @@ E0764: include_str!(\"./error_codes/E0764.md\"),\n E0765: include_str!(\"./error_codes/E0765.md\"),\n E0766: include_str!(\"./error_codes/E0766.md\"),\n E0767: include_str!(\"./error_codes/E0767.md\"),\n+E0768: include_str!(\"./error_codes/E0768.md\"),\n ;\n //  E0006, // merged with E0005\n //  E0008, // cannot bind by-move into a pattern guard"}, {"sha": "24169ef512efb64283409449ceae4e7ad222af54", "filename": "src/librustc_error_codes/error_codes/E0768.md", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d64a4b57aef5e1f0a51bbae24b73e5a7acd20aef/src%2Flibrustc_error_codes%2Ferror_codes%2FE0768.md", "raw_url": "https://github.com/rust-lang/rust/raw/d64a4b57aef5e1f0a51bbae24b73e5a7acd20aef/src%2Flibrustc_error_codes%2Ferror_codes%2FE0768.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0768.md?ref=d64a4b57aef5e1f0a51bbae24b73e5a7acd20aef", "patch": "@@ -0,0 +1,13 @@\n+A number in a non-decimal base has no digits.\n+\n+Erroneous code example:\n+\n+```compile_fail,E0768\n+let s: i32 = 0b; // error!\n+```\n+\n+To fix this error, add the missing digits:\n+\n+```\n+let s: i32 = 0b1; // ok!\n+```"}, {"sha": "2b0e637c74e5ab2b640c73ff36392f0eb2008159", "filename": "src/librustc_parse/lexer/mod.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d64a4b57aef5e1f0a51bbae24b73e5a7acd20aef/src%2Flibrustc_parse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d64a4b57aef5e1f0a51bbae24b73e5a7acd20aef/src%2Flibrustc_parse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Flexer%2Fmod.rs?ref=d64a4b57aef5e1f0a51bbae24b73e5a7acd20aef", "patch": "@@ -391,7 +391,14 @@ impl<'a> StringReader<'a> {\n             }\n             rustc_lexer::LiteralKind::Int { base, empty_int } => {\n                 return if empty_int {\n-                    self.err_span_(start, suffix_start, \"no valid digits found for number\");\n+                    self.sess\n+                        .span_diagnostic\n+                        .struct_span_err_with_code(\n+                            self.mk_sp(start, suffix_start),\n+                            \"no valid digits found for number\",\n+                            error_code!(E0768),\n+                        )\n+                        .emit();\n                     (token::Integer, sym::integer(0))\n                 } else {\n                     self.validate_int_literal(base, start, suffix_start);"}]}