{"sha": "22bf541e27eaea348f1ab534b1ec2f1e701254d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyYmY1NDFlMjdlYWVhMzQ4ZjFhYjUzNGIxZWMyZjFlNzAxMjU0ZDU=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-12-19T21:10:48Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-12-21T03:03:35Z"}, "message": "Clean up uses of set_personality_fn.\n\nRemove gnu/msvc constructors for Funclet; these are worse for\nreadability than explicit Some/None.", "tree": {"sha": "79ffc26039879fa6f57b7f3478b6670d690959d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79ffc26039879fa6f57b7f3478b6670d690959d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22bf541e27eaea348f1ab534b1ec2f1e701254d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22bf541e27eaea348f1ab534b1ec2f1e701254d5", "html_url": "https://github.com/rust-lang/rust/commit/22bf541e27eaea348f1ab534b1ec2f1e701254d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22bf541e27eaea348f1ab534b1ec2f1e701254d5/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ef85dd57e46e59e8035f522a672eeffba989d05", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ef85dd57e46e59e8035f522a672eeffba989d05", "html_url": "https://github.com/rust-lang/rust/commit/5ef85dd57e46e59e8035f522a672eeffba989d05"}], "stats": {"total": 36, "additions": 12, "deletions": 24}, "files": [{"sha": "4eb786d63941bd0e8b8b92d94563318ce8e42974", "filename": "src/librustc_trans/cleanup.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22bf541e27eaea348f1ab534b1ec2f1e701254d5/src%2Flibrustc_trans%2Fcleanup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bf541e27eaea348f1ab534b1ec2f1e701254d5/src%2Flibrustc_trans%2Fcleanup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcleanup.rs?ref=22bf541e27eaea348f1ab534b1ec2f1e701254d5", "patch": "@@ -203,8 +203,8 @@ impl<'tcx> CleanupScope<'tcx> {\n \n         // Insert cleanup instructions into the cleanup block\n         let funclet = match val {\n-            UnwindKind::CleanupPad(_) => Funclet::msvc(cleanup.cleanup_pad(None, &[])),\n-            UnwindKind::LandingPad => Funclet::gnu(),\n+            UnwindKind::CleanupPad(_) => Some(Funclet::new(cleanup.cleanup_pad(None, &[]))),\n+            UnwindKind::LandingPad => None,\n         };\n         drop_val.trans(funclet.as_ref(), &cleanup);\n "}, {"sha": "81aba269a8b3b407605654a270f6da69f99be022", "filename": "src/librustc_trans/common.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/22bf541e27eaea348f1ab534b1ec2f1e701254d5/src%2Flibrustc_trans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bf541e27eaea348f1ab534b1ec2f1e701254d5/src%2Flibrustc_trans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcommon.rs?ref=22bf541e27eaea348f1ab534b1ec2f1e701254d5", "patch": "@@ -466,15 +466,11 @@ pub struct Funclet {\n }\n \n impl Funclet {\n-    pub fn gnu() -> Option<Funclet> {\n-        None\n-    }\n-\n-    pub fn msvc(cleanuppad: ValueRef) -> Option<Funclet> {\n-        Some(Funclet {\n+    pub fn new(cleanuppad: ValueRef) -> Funclet {\n+        Funclet {\n             cleanuppad: cleanuppad,\n             operand: OperandBundleDef::new(\"funclet\", &[cleanuppad]),\n-        })\n+        }\n     }\n \n     pub fn cleanuppad(&self) -> ValueRef {"}, {"sha": "7edc3b00532387cadbd96ae7acaa67488a371225", "filename": "src/librustc_trans/mir/block.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22bf541e27eaea348f1ab534b1ec2f1e701254d5/src%2Flibrustc_trans%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bf541e27eaea348f1ab534b1ec2f1e701254d5/src%2Flibrustc_trans%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fblock.rs?ref=22bf541e27eaea348f1ab534b1ec2f1e701254d5", "patch": "@@ -86,7 +86,6 @@ impl<'a, 'tcx> MirContext<'a, 'tcx> {\n                         debug!(\"llblock: creating cleanup trampoline for {:?}\", target);\n                         let name = &format!(\"{:?}_cleanup_trampoline_{:?}\", bb, target);\n                         let trampoline = this.fcx.build_new_block(name);\n-                        trampoline.set_personality_fn(this.fcx.eh_personality());\n                         trampoline.cleanup_ret(cp, Some(lltarget));\n                         trampoline.llbb()\n                     }\n@@ -121,9 +120,6 @@ impl<'a, 'tcx> MirContext<'a, 'tcx> {\n                 if let Some(cleanup_pad) = cleanup_pad {\n                     bcx.cleanup_ret(cleanup_pad, None);\n                 } else {\n-                    let llpersonality = bcx.fcx().eh_personality();\n-                    bcx.set_personality_fn(llpersonality);\n-\n                     let ps = self.get_personality_slot(&bcx);\n                     let lp = bcx.load(ps);\n                     Lifetime::End.call(&bcx, ps);"}, {"sha": "6041b76d18e698b3cf9149382d7efa949b38e117", "filename": "src/librustc_trans/mir/mod.rs", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/22bf541e27eaea348f1ab534b1ec2f1e701254d5/src%2Flibrustc_trans%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22bf541e27eaea348f1ab534b1ec2f1e701254d5/src%2Flibrustc_trans%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fmod.rs?ref=22bf541e27eaea348f1ab534b1ec2f1e701254d5", "patch": "@@ -303,19 +303,15 @@ pub fn trans_mir<'a, 'tcx: 'a>(\n     // If false, all funclets should be None (which is the default)\n     let funclets: IndexVec<mir::BasicBlock, Option<Funclet>> =\n     mircx.cleanup_kinds.iter_enumerated().map(|(bb, cleanup_kind)| {\n-        let bcx = mircx.build_block(bb);\n-        match *cleanup_kind {\n-            _ if !base::wants_msvc_seh(fcx.ccx.sess()) => None,\n-            CleanupKind::Internal { .. } => {\n-                bcx.set_personality_fn(fcx.eh_personality());\n-                None\n+        if let CleanupKind::Funclet = *cleanup_kind {\n+            let bcx = mircx.build_block(bb);\n+            bcx.set_personality_fn(fcx.eh_personality());\n+            if base::wants_msvc_seh(fcx.ccx.sess()) {\n+                return Some(Funclet::new(bcx.cleanup_pad(None, &[])));\n             }\n-            CleanupKind::Funclet => {\n-                bcx.set_personality_fn(fcx.eh_personality());\n-                Funclet::msvc(bcx.cleanup_pad(None, &[]))\n-            }\n-            _ => None\n         }\n+\n+        None\n     }).collect();\n \n     let rpo = traversal::reverse_postorder(&mir);"}]}