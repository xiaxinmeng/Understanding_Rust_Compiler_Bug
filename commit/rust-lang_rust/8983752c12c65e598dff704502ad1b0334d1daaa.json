{"sha": "8983752c12c65e598dff704502ad1b0334d1daaa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5ODM3NTJjMTJjNjVlNTk4ZGZmNzA0NTAyYWQxYjAzMzRkMWRhYWE=", "commit": {"author": {"name": "LinkTed", "email": "link.ted@mailbox.org", "date": "2020-11-26T17:54:13Z"}, "committer": {"name": "LinkTed", "email": "link.ted@mailbox.org", "date": "2020-11-26T17:54:13Z"}, "message": "Add comment for the previous android bug fix", "tree": {"sha": "4fb9d6d3786d8ae330bc38689942e23ed0390624", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4fb9d6d3786d8ae330bc38689942e23ed0390624"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8983752c12c65e598dff704502ad1b0334d1daaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8983752c12c65e598dff704502ad1b0334d1daaa", "html_url": "https://github.com/rust-lang/rust/commit/8983752c12c65e598dff704502ad1b0334d1daaa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8983752c12c65e598dff704502ad1b0334d1daaa/comments", "author": {"login": "LinkTed", "id": 6806266, "node_id": "MDQ6VXNlcjY4MDYyNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6806266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LinkTed", "html_url": "https://github.com/LinkTed", "followers_url": "https://api.github.com/users/LinkTed/followers", "following_url": "https://api.github.com/users/LinkTed/following{/other_user}", "gists_url": "https://api.github.com/users/LinkTed/gists{/gist_id}", "starred_url": "https://api.github.com/users/LinkTed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LinkTed/subscriptions", "organizations_url": "https://api.github.com/users/LinkTed/orgs", "repos_url": "https://api.github.com/users/LinkTed/repos", "events_url": "https://api.github.com/users/LinkTed/events{/privacy}", "received_events_url": "https://api.github.com/users/LinkTed/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LinkTed", "id": 6806266, "node_id": "MDQ6VXNlcjY4MDYyNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6806266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LinkTed", "html_url": "https://github.com/LinkTed", "followers_url": "https://api.github.com/users/LinkTed/followers", "following_url": "https://api.github.com/users/LinkTed/following{/other_user}", "gists_url": "https://api.github.com/users/LinkTed/gists{/gist_id}", "starred_url": "https://api.github.com/users/LinkTed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LinkTed/subscriptions", "organizations_url": "https://api.github.com/users/LinkTed/orgs", "repos_url": "https://api.github.com/users/LinkTed/repos", "events_url": "https://api.github.com/users/LinkTed/events{/privacy}", "received_events_url": "https://api.github.com/users/LinkTed/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b9dd4aeea858fb2249adc9421ab156a78e84b8b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b9dd4aeea858fb2249adc9421ab156a78e84b8b", "html_url": "https://github.com/rust-lang/rust/commit/9b9dd4aeea858fb2249adc9421ab156a78e84b8b"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "2c91ba70dd0b5c16aa43f2a779b66086356ed223", "filename": "library/std/src/sys/unix/ext/net/ancillary.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8983752c12c65e598dff704502ad1b0334d1daaa/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fancillary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8983752c12c65e598dff704502ad1b0334d1daaa/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fancillary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fancillary.rs?ref=8983752c12c65e598dff704502ad1b0334d1daaa", "patch": "@@ -160,6 +160,8 @@ fn add_to_ancillary_data<T>(\n             previous_cmsg = cmsg;\n             cmsg = libc::CMSG_NXTHDR(&msg, cmsg);\n             cfg_if::cfg_if! {\n+                // Android return the same pointer if it is the last cmsg.\n+                // Therefore, check it if the previous pointer is the same as the current one.\n                 if #[cfg(target_os = \"android\")] {\n                     if cmsg == previous_cmsg {\n                         break;\n@@ -430,6 +432,8 @@ impl<'a> Iterator for Messages<'a> {\n \n             let cmsg = cmsg.as_ref()?;\n             cfg_if::cfg_if! {\n+                // Android return the same pointer if it is the last cmsg.\n+                // Therefore, check it if the previous pointer is the same as the current one.\n                 if #[cfg(target_os = \"android\")] {\n                     if let Some(current) = self.current {\n                         if eq(current, cmsg) {"}]}