{"sha": "fe3ad0a204656b43ecec7605161603d2943b0582", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlM2FkMGEyMDQ2NTZiNDNlY2VjNzYwNTE2MTYwM2QyOTQzYjA1ODI=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-06-08T19:02:32Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-06-08T19:02:32Z"}, "message": "rm some uses of to_mut_unsafe_ptr", "tree": {"sha": "1ce3af2dc8fcc322dd4a2503a7b3a32d32255919", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ce3af2dc8fcc322dd4a2503a7b3a32d32255919"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe3ad0a204656b43ecec7605161603d2943b0582", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe3ad0a204656b43ecec7605161603d2943b0582", "html_url": "https://github.com/rust-lang/rust/commit/fe3ad0a204656b43ecec7605161603d2943b0582", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe3ad0a204656b43ecec7605161603d2943b0582/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8fa9d3be10e952fbcaf14f3098aebf13dedd7ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8fa9d3be10e952fbcaf14f3098aebf13dedd7ec", "html_url": "https://github.com/rust-lang/rust/commit/b8fa9d3be10e952fbcaf14f3098aebf13dedd7ec"}], "stats": {"total": 21, "additions": 8, "deletions": 13}, "files": [{"sha": "a59f59deee3c67c48ac79b8aa4a56a436e040946", "filename": "src/libextra/arc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe3ad0a204656b43ecec7605161603d2943b0582/src%2Flibextra%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe3ad0a204656b43ecec7605161603d2943b0582/src%2Flibextra%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Farc.rs?ref=fe3ad0a204656b43ecec7605161603d2943b0582", "patch": "@@ -263,7 +263,7 @@ impl Drop for PoisonOnFail {\n \n fn PoisonOnFail<'r>(failed: &'r mut bool) -> PoisonOnFail {\n     PoisonOnFail {\n-        failed: ptr::to_mut_unsafe_ptr(failed)\n+        failed: failed\n     }\n }\n "}, {"sha": "f6beb078e46f5a099d3bd99934b6c8a725f95113", "filename": "src/librustc/lib/llvm.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fe3ad0a204656b43ecec7605161603d2943b0582/src%2Flibrustc%2Flib%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe3ad0a204656b43ecec7605161603d2943b0582/src%2Flibrustc%2Flib%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib%2Fllvm.rs?ref=fe3ad0a204656b43ecec7605161603d2943b0582", "patch": "@@ -2117,8 +2117,7 @@ pub fn struct_tys(struct_ty: TypeRef) -> ~[TypeRef] {\n             return ~[];\n         }\n         let mut elts = vec::from_elem(n_elts, ptr::null());\n-        llvm::LLVMGetStructElementTypes(\n-            struct_ty, ptr::to_mut_unsafe_ptr(&mut elts[0]));\n+        llvm::LLVMGetStructElementTypes(struct_ty, &mut elts[0]);\n         return elts;\n     }\n }"}, {"sha": "6be398c0bb2b145c42b73e2e8707b13af27a6a2c", "filename": "src/librustc/middle/trans/cabi_mips.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fe3ad0a204656b43ecec7605161603d2943b0582/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_mips.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe3ad0a204656b43ecec7605161603d2943b0582/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_mips.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_mips.rs?ref=fe3ad0a204656b43ecec7605161603d2943b0582", "patch": "@@ -38,8 +38,7 @@ fn struct_tys(ty: TypeRef) -> ~[TypeRef] {\n         return ~[];\n     }\n         let mut elts = vec::from_elem(n as uint, ptr::null());\n-        llvm::LLVMGetStructElementTypes(ty,\n-            ptr::to_mut_unsafe_ptr(&mut elts[0]));\n+        llvm::LLVMGetStructElementTypes(ty, &mut elts[0]);\n         return elts;\n     }\n }"}, {"sha": "78aca4c831f7c624d95c22f0065a583b07161367", "filename": "src/librustc/middle/trans/common.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fe3ad0a204656b43ecec7605161603d2943b0582/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe3ad0a204656b43ecec7605161603d2943b0582/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs?ref=fe3ad0a204656b43ecec7605161603d2943b0582", "patch": "@@ -964,9 +964,7 @@ pub fn T_tydesc_field(cx: @CrateContext, field: uint) -> TypeRef {\n         let mut tydesc_elts: ~[TypeRef] =\n             vec::from_elem::<TypeRef>(abi::n_tydesc_fields,\n                                      T_nil());\n-        llvm::LLVMGetStructElementTypes(\n-            cx.tydesc_type,\n-            ptr::to_mut_unsafe_ptr(&mut tydesc_elts[0]));\n+        llvm::LLVMGetStructElementTypes(cx.tydesc_type, &mut tydesc_elts[0]);\n         let t = llvm::LLVMGetElementType(tydesc_elts[field]);\n         return t;\n     }"}, {"sha": "6ce6d81bf2439dd51f38688e0e285980c1e71f71", "filename": "src/libstd/os.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe3ad0a204656b43ecec7605161603d2943b0582/src%2Flibstd%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe3ad0a204656b43ecec7605161603d2943b0582/src%2Flibstd%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos.rs?ref=fe3ad0a204656b43ecec7605161603d2943b0582", "patch": "@@ -1179,7 +1179,7 @@ pub fn real_args() -> ~[~str] {\n #[cfg(windows)]\n pub fn real_args() -> ~[~str] {\n     let mut nArgs: c_int = 0;\n-    let lpArgCount = ptr::to_mut_unsafe_ptr(&mut nArgs);\n+    let lpArgCount: *mut c_int = &mut nArgs;\n     let lpCmdLine = unsafe { GetCommandLineW() };\n     let szArgList = unsafe { CommandLineToArgvW(lpCmdLine, lpArgCount) };\n "}, {"sha": "7c52ccc967ebbfb0841963648b81c201efd3104b", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fe3ad0a204656b43ecec7605161603d2943b0582/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe3ad0a204656b43ecec7605161603d2943b0582/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=fe3ad0a204656b43ecec7605161603d2943b0582", "patch": "@@ -1315,8 +1315,8 @@ pub fn swap<T>(v: &mut [T], a: uint, b: uint) {\n     unsafe {\n         // Can't take two mutable loans from one vector, so instead just cast\n         // them to their raw pointers to do the swap\n-        let pa: *mut T = ptr::to_mut_unsafe_ptr(&mut v[a]);\n-        let pb: *mut T = ptr::to_mut_unsafe_ptr(&mut v[b]);\n+        let pa: *mut T = &mut v[a];\n+        let pb: *mut T = &mut v[b];\n         ptr::swap_ptr(pa, pb);\n     }\n }"}, {"sha": "927ec6997273862603d2fadd1856e1e0a6b71b92", "filename": "src/test/run-pass/swap-overlapping.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fe3ad0a204656b43ecec7605161603d2943b0582/src%2Ftest%2Frun-pass%2Fswap-overlapping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe3ad0a204656b43ecec7605161603d2943b0582/src%2Ftest%2Frun-pass%2Fswap-overlapping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fswap-overlapping.rs?ref=fe3ad0a204656b43ecec7605161603d2943b0582", "patch": "@@ -26,8 +26,7 @@ pub fn main() {\n \n fn do_swap(test: &mut TestDescAndFn) {\n     unsafe {\n-        ptr::swap_ptr(ptr::to_mut_unsafe_ptr(test),\n-                      ptr::to_mut_unsafe_ptr(test));\n+        ptr::swap_ptr(test, test);\n     }\n }\n "}]}