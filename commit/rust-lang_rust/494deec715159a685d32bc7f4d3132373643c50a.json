{"sha": "494deec715159a685d32bc7f4d3132373643c50a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5NGRlZWM3MTUxNTlhNjg1ZDMyYmM3ZjRkMzEzMjM3MzY0M2M1MGE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-07-08T13:51:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-08T13:51:27Z"}, "message": "Merge #9533\n\n9533: minor: Update list of safe intrinsics r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "8fb6e7a657c8ae59933e76f93e41a2753cba1eda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8fb6e7a657c8ae59933e76f93e41a2753cba1eda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/494deec715159a685d32bc7f4d3132373643c50a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg5wLfCRBK7hj4Ov3rIwAAlV4IAKY+/QyIxSBtVY4gCr1adB3W\n0TCzDuIwlrP4T9GgQ8BHSXOEKp4tCVTOXb/Gd/p6KtxVV4rxdINpjAhfJ57d5YLL\nTLhzj514OZgAOBKRlVtw8x9f5FO7GkDwTzzzQiR2bsaBBZEA+Ha/BpaiqgKKaYmo\nI1M0uVST7LOR4LZdW/lFzGLcgcQWcjlpNebTvYCXBgHqGPJbxywLKr3ikCYxa2sv\nYwARufdSPYTxtAyKVCFgR6coVnEu4ncE6lrCqbdOBCqX3SYKckvy5DyhjfZbtc5/\nFvO7qZqYaasM9SMZP2bSG7lEPpMsq9pTsu07xrEtipNoLqSPUOsMc30qhDdfVag=\n=LSRT\n-----END PGP SIGNATURE-----\n", "payload": "tree 8fb6e7a657c8ae59933e76f93e41a2753cba1eda\nparent ff8621b4b8c29fd52a6317ed020cbb5e06ade103\nparent 13d3928d0b5243c52680dc1ec8a8ba244b178306\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1625752287 +0000\ncommitter GitHub <noreply@github.com> 1625752287 +0000\n\nMerge #9533\n\n9533: minor: Update list of safe intrinsics r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/494deec715159a685d32bc7f4d3132373643c50a", "html_url": "https://github.com/rust-lang/rust/commit/494deec715159a685d32bc7f4d3132373643c50a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/494deec715159a685d32bc7f4d3132373643c50a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff8621b4b8c29fd52a6317ed020cbb5e06ade103", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff8621b4b8c29fd52a6317ed020cbb5e06ade103", "html_url": "https://github.com/rust-lang/rust/commit/ff8621b4b8c29fd52a6317ed020cbb5e06ade103"}, {"sha": "13d3928d0b5243c52680dc1ec8a8ba244b178306", "url": "https://api.github.com/repos/rust-lang/rust/commits/13d3928d0b5243c52680dc1ec8a8ba244b178306", "html_url": "https://github.com/rust-lang/rust/commit/13d3928d0b5243c52680dc1ec8a8ba244b178306"}], "stats": {"total": 97, "additions": 49, "deletions": 48}, "files": [{"sha": "aa2dbaba1006562d62684437802bf01e5dcdd90f", "filename": "crates/hir_def/src/item_tree/lower.rs", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/494deec715159a685d32bc7f4d3132373643c50a/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/494deec715159a685d32bc7f4d3132373643c50a/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Flower.rs?ref=494deec715159a685d32bc7f4d3132373643c50a", "patch": "@@ -795,42 +795,42 @@ enum GenericsOwner<'a> {\n \n /// Returns `true` if the given intrinsic is unsafe to call, or false otherwise.\n fn is_intrinsic_fn_unsafe(name: &Name) -> bool {\n-    // Should be kept in sync with https://github.com/rust-lang/rust/blob/c6e4db620a7d2f569f11dcab627430921ea8aacf/compiler/rustc_typeck/src/check/intrinsic.rs#L68\n+    // Should be kept in sync with https://github.com/rust-lang/rust/blob/0cd0709f19d316c4796fa71c5f52c8612a5f3771/compiler/rustc_typeck/src/check/intrinsic.rs#L72-L105\n     ![\n         known::abort,\n-        known::min_align_of,\n-        known::needs_drop,\n-        known::caller_location,\n-        known::size_of_val,\n-        known::min_align_of_val,\n         known::add_with_overflow,\n-        known::sub_with_overflow,\n-        known::mul_with_overflow,\n-        known::wrapping_add,\n-        known::wrapping_sub,\n-        known::wrapping_mul,\n-        known::saturating_add,\n-        known::saturating_sub,\n-        known::rotate_left,\n-        known::rotate_right,\n-        known::ctpop,\n+        known::bitreverse,\n+        known::bswap,\n+        known::caller_location,\n         known::ctlz,\n+        known::ctpop,\n         known::cttz,\n-        known::bswap,\n-        known::bitreverse,\n         known::discriminant_value,\n-        known::type_id,\n+        known::forget,\n         known::likely,\n-        known::unlikely,\n-        known::ptr_guaranteed_eq,\n-        known::ptr_guaranteed_ne,\n+        known::maxnumf32,\n+        known::maxnumf64,\n+        known::min_align_of,\n         known::minnumf32,\n         known::minnumf64,\n-        known::maxnumf32,\n+        known::mul_with_overflow,\n+        known::needs_drop,\n+        known::ptr_guaranteed_eq,\n+        known::ptr_guaranteed_ne,\n+        known::rotate_left,\n+        known::rotate_right,\n         known::rustc_peek,\n-        known::maxnumf64,\n+        known::saturating_add,\n+        known::saturating_sub,\n+        known::size_of,\n+        known::sub_with_overflow,\n+        known::type_id,\n         known::type_name,\n+        known::unlikely,\n         known::variant_count,\n+        known::wrapping_add,\n+        known::wrapping_mul,\n+        known::wrapping_sub,\n     ]\n     .contains(name)\n }"}, {"sha": "4c15ba15453422b8480531c41b16106a1f41b7cc", "filename": "crates/hir_expand/src/name.rs", "status": "modified", "additions": 25, "deletions": 24, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/494deec715159a685d32bc7f4d3132373643c50a/crates%2Fhir_expand%2Fsrc%2Fname.rs", "raw_url": "https://github.com/rust-lang/rust/raw/494deec715159a685d32bc7f4d3132373643c50a/crates%2Fhir_expand%2Fsrc%2Fname.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fname.rs?ref=494deec715159a685d32bc7f4d3132373643c50a", "patch": "@@ -249,40 +249,41 @@ pub mod known {\n         test_case,\n         // Safe intrinsics\n         abort,\n-        size_of,\n-        min_align_of,\n-        needs_drop,\n-        caller_location,\n-        size_of_val,\n-        min_align_of_val,\n         add_with_overflow,\n-        sub_with_overflow,\n-        mul_with_overflow,\n-        wrapping_add,\n-        wrapping_sub,\n-        wrapping_mul,\n-        saturating_add,\n-        saturating_sub,\n-        rotate_left,\n-        rotate_right,\n-        ctpop,\n+        bitreverse,\n+        bswap,\n+        caller_location,\n         ctlz,\n+        ctpop,\n         cttz,\n-        bswap,\n-        bitreverse,\n         discriminant_value,\n-        type_id,\n+        forget,\n         likely,\n-        unlikely,\n-        ptr_guaranteed_eq,\n-        ptr_guaranteed_ne,\n+        maxnumf32,\n+        maxnumf64,\n+        min_align_of_val,\n+        min_align_of,\n         minnumf32,\n         minnumf64,\n-        maxnumf32,\n+        mul_with_overflow,\n+        needs_drop,\n+        ptr_guaranteed_eq,\n+        ptr_guaranteed_ne,\n+        rotate_left,\n+        rotate_right,\n         rustc_peek,\n-        maxnumf64,\n+        saturating_add,\n+        saturating_sub,\n+        size_of_val,\n+        size_of,\n+        sub_with_overflow,\n+        type_id,\n         type_name,\n+        unlikely,\n         variant_count,\n+        wrapping_add,\n+        wrapping_mul,\n+        wrapping_sub,\n     );\n \n     // self/Self cannot be used as an identifier"}]}