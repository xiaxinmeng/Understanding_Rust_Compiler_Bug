{"sha": "e284780cf64381eeb0379d09a6f4896b239db9b1", "node_id": "C_kwDOAAsO6NoAKGUyODQ3ODBjZjY0MzgxZWViMDM3OWQwOWE2ZjQ4OTZiMjM5ZGI5YjE", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2022-11-14T02:49:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-14T02:49:25Z"}, "message": "Rollup merge of #104105 - davidtwco:split-dwarf-lto, r=michaelwoerister\n\nllvm: dwo only emitted when object code emitted\n\nFixes #103932.\n\n`CompiledModule` should not think a DWARF object was emitted when a bitcode-only compilation has happened, this can confuse archive file creation (which expects to create an archive containing non-existent dwo files).\n\nr? ``````@michaelwoerister``````", "tree": {"sha": "e5852b873de6163b95cbb6ff65f9b13eaba5ee1e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5852b873de6163b95cbb6ff65f9b13eaba5ee1e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e284780cf64381eeb0379d09a6f4896b239db9b1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjcay1CRBK7hj4Ov3rIwAA6ZYIAAso74u7NuiGHbN1uPTDZtEu\ns3xNfLPOD9dwI5fbNxNhshDhhMoWrCM6oSB0dH2WOFlAG8Ame2VXmoYiYFJOGoxx\nIid7yw1suZcp9KoPxCBiIEKMAXImqclDaChV8EIySjDx12Wn1VUOIsn1NfkoxZJc\nNk+AL9tKCjzz+N/VpYweZ0y7fGqL+tNdTxMJ/HUznx/JJe7PAm4lsHto71yTdS/6\ncyO40DtclPntkqs8Ri1iPBnGh4LQNTsJm11c3lyeIl7mmiEbIVYGWQCGedV0bMib\nJ8qfZuqmrisQm10ROqtp16k+f6Zi315l5VVEQ5aQqFmxVFvi9pJlarSM9vZT5Rk=\n=mc21\n-----END PGP SIGNATURE-----\n", "payload": "tree e5852b873de6163b95cbb6ff65f9b13eaba5ee1e\nparent c9fc5cbeb5b682eb207cb190670027c497ea47a1\nparent 29dc08307dde3051ab6bf17c53f2db99e32681ee\nauthor Manish Goregaokar <manishsmail@gmail.com> 1668394165 -0500\ncommitter GitHub <noreply@github.com> 1668394165 -0500\n\nRollup merge of #104105 - davidtwco:split-dwarf-lto, r=michaelwoerister\n\nllvm: dwo only emitted when object code emitted\n\nFixes #103932.\n\n`CompiledModule` should not think a DWARF object was emitted when a bitcode-only compilation has happened, this can confuse archive file creation (which expects to create an archive containing non-existent dwo files).\n\nr? ``````@michaelwoerister``````\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e284780cf64381eeb0379d09a6f4896b239db9b1", "html_url": "https://github.com/rust-lang/rust/commit/e284780cf64381eeb0379d09a6f4896b239db9b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e284780cf64381eeb0379d09a6f4896b239db9b1/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9fc5cbeb5b682eb207cb190670027c497ea47a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9fc5cbeb5b682eb207cb190670027c497ea47a1", "html_url": "https://github.com/rust-lang/rust/commit/c9fc5cbeb5b682eb207cb190670027c497ea47a1"}, {"sha": "29dc08307dde3051ab6bf17c53f2db99e32681ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/29dc08307dde3051ab6bf17c53f2db99e32681ee", "html_url": "https://github.com/rust-lang/rust/commit/29dc08307dde3051ab6bf17c53f2db99e32681ee"}], "stats": {"total": 227, "additions": 210, "deletions": 17}, "files": [{"sha": "97d0de47b3a6e7fbff4484c5e74c393bea3891a2", "filename": "compiler/rustc_codegen_llvm/src/back/write.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e284780cf64381eeb0379d09a6f4896b239db9b1/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e284780cf64381eeb0379d09a6f4896b239db9b1/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs?ref=e284780cf64381eeb0379d09a6f4896b239db9b1", "patch": "@@ -765,11 +765,21 @@ pub(crate) unsafe fn codegen(\n         drop(handlers);\n     }\n \n+    // `.dwo` files are only emitted if:\n+    //\n+    // - Object files are being emitted (i.e. bitcode only or metadata only compilations will not\n+    //   produce dwarf objects, even if otherwise enabled)\n+    // - Target supports Split DWARF\n+    // - Split debuginfo is enabled\n+    // - Split DWARF kind is `split` (i.e. debuginfo is split into `.dwo` files, not different\n+    //   sections in the `.o` files).\n+    let dwarf_object_emitted = matches!(config.emit_obj, EmitObj::ObjectCode(_))\n+        && cgcx.target_can_use_split_dwarf\n+        && cgcx.split_debuginfo != SplitDebuginfo::Off\n+        && cgcx.split_dwarf_kind == SplitDwarfKind::Split;\n     Ok(module.into_compiled_module(\n         config.emit_obj != EmitObj::None,\n-        cgcx.target_can_use_split_dwarf\n-            && cgcx.split_debuginfo != SplitDebuginfo::Off\n-            && cgcx.split_dwarf_kind == SplitDwarfKind::Split,\n+        dwarf_object_emitted,\n         config.emit_bc,\n         &cgcx.output_filenames,\n     ))"}, {"sha": "1831ab38fab49d9728505491e3d15e4e9b653773", "filename": "src/test/run-make-fulldeps/split-debuginfo/Makefile", "status": "modified", "additions": 196, "deletions": 14, "changes": 210, "blob_url": "https://github.com/rust-lang/rust/blob/e284780cf64381eeb0379d09a6f4896b239db9b1/src%2Ftest%2Frun-make-fulldeps%2Fsplit-debuginfo%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/e284780cf64381eeb0379d09a6f4896b239db9b1/src%2Ftest%2Frun-make-fulldeps%2Fsplit-debuginfo%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fsplit-debuginfo%2FMakefile?ref=e284780cf64381eeb0379d09a6f4896b239db9b1", "patch": "@@ -3,7 +3,7 @@ include ../tools.mk\n all: off packed unpacked\n \n ifeq ($(UNAME),Darwin)\n-# If disabled, don't run dsymutil\n+# If disabled, don't run `dsymutil`.\n off:\n \trm -rf $(TMPDIR)/*.dSYM\n \t$(RUSTC) foo.rs -g -C split-debuginfo=off\n@@ -29,98 +29,280 @@ unpacked:\n \t[ ! -d $(TMPDIR)/foo.dSYM ]\n else\n ifdef IS_WINDOWS\n-# Windows only supports =packed\n+# Windows only supports packed debuginfo - nothing to test.\n off:\n packed:\n unpacked:\n else\n+# Some non-Windows, non-Darwin platforms are not stable, and some are.\n ifeq ($(UNAME),Linux)\n   UNSTABLEOPTS :=\n else\n   UNSTABLEOPTS := -Zunstable-options\n endif\n \n+# - Debuginfo in `.o` files\n+# - `.o` deleted\n+# - `.dwo` never created\n+# - `.dwp` never created\n off:\n \t$(RUSTC) foo.rs -g -C $(UNSTABLEOPTS) split-debuginfo=off\n \t[ ! -f $(TMPDIR)/*.dwp ]\n \t[ ! -f $(TMPDIR)/*.dwo ]\n-\n \t$(RUSTC) foo.rs -g\n \t[ ! -f $(TMPDIR)/*.dwp ]\n \t[ ! -f $(TMPDIR)/*.dwo ]\n \n-packed: packed-split packed-single\n+packed: packed-split packed-single packed-lto packed-remapped packed-crosscrate\n \n+# - Debuginfo in `.dwo` files\n+# - `.o` deleted\n+# - `.dwo` deleted\n+# - `.dwp` present\n packed-split:\n \t$(RUSTC) foo.rs -g $(UNSTABLEOPTS) -C split-debuginfo=packed -Zsplit-dwarf-kind=split\n-\tls $(TMPDIR)/*.dwp\n-\trm -rf $(TMPDIR)/*.dwp $(TMPDIR)/*.dwo\n+\tls $(TMPDIR)/*.o && exit 1 || exit 0\n+\tls $(TMPDIR)/*.dwo && exit 1 || exit 0\n+\trm $(TMPDIR)/foo.dwp\n+\trm $(TMPDIR)/$(call BIN,foo)\n \n+# - Debuginfo in `.o` files\n+# - `.o` deleted\n+# - `.dwo` never created\n+# - `.dwp` present\n packed-single:\n \t$(RUSTC) foo.rs -g $(UNSTABLEOPTS) -C split-debuginfo=packed -Zsplit-dwarf-kind=single\n-\tls $(TMPDIR)/*.dwp\n+\tls $(TMPDIR)/*.o && exit 1 || exit 0\n+\tls $(TMPDIR)/*.dwo && exit 1 || exit 0\n+\trm $(TMPDIR)/foo.dwp\n+\trm $(TMPDIR)/$(call BIN,foo)\n+\n+packed-lto: packed-lto-split packed-lto-single\n+\n+# - rmeta file added to rlib, no object files are generated and thus no debuginfo is generated\n+# - `.o` never created\n+# - `.dwo` never created\n+# - `.dwp` never created\n+packed-lto-split:\n+\t$(RUSTC) baz.rs -g $(UNSTABLEOPTS) -Csplit-debuginfo=packed -Zsplit-dwarf-kind=split \\\n+\t\t--crate-type=rlib -Clinker-plugin-lto\n+\tls $(TMPDIR)/*.o && exit 1 || exit 0\n+\tls $(TMPDIR)/*.dwo && exit 1 || exit 0\n+\tls $(TMPDIR)/*.dwp && exit 1 || exit 0\n+\trm $(TMPDIR)/libbaz.rlib\n+\n+# - rmeta file added to rlib, no object files are generated and thus no debuginfo is generated\n+# - `.o` never created\n+# - `.dwo` never created\n+# - `.dwp` never created\n+packed-lto-single:\n+\t$(RUSTC) baz.rs -g $(UNSTABLEOPTS) -Csplit-debuginfo=packed -Zsplit-dwarf-kind=single \\\n+\t\t--crate-type=rlib -Clinker-plugin-lto\n+\tls $(TMPDIR)/*.o && exit 1 || exit 0\n \tls $(TMPDIR)/*.dwo && exit 1 || exit 0\n-\trm -rf $(TMPDIR)/*.dwp\n+\tls $(TMPDIR)/*.dwp && exit 1 || exit 0\n+\trm $(TMPDIR)/libbaz.rlib\n \n packed-remapped: packed-remapped-split packed-remapped-single\n \n+# - Debuginfo in `.dwo` files\n+# - `.o` and binary refer to remapped `.dwo` paths which do not exist\n+# - `.o` deleted\n+# - `.dwo` deleted\n+# - `.dwp` present\n packed-remapped-split:\n \t$(RUSTC) $(UNSTABLEOPTS) -C split-debuginfo=packed -C debuginfo=2 \\\n \t\t-Z split-dwarf-kind=split --remap-path-prefix $(TMPDIR)=/a foo.rs -g\n \tobjdump -Wi $(TMPDIR)/foo | grep DW_AT_GNU_dwo_name | (! grep $(TMPDIR)) || exit 1\n+\tls $(TMPDIR)/*.o && exit 1 || exit 0\n+\tls $(TMPDIR)/*.dwo && exit 1 || exit 0\n+\trm $(TMPDIR)/foo.dwp\n+\trm $(TMPDIR)/$(call BIN,foo)\n \n+# - Debuginfo in `.o` files\n+# - `.o` and binary refer to remapped `.o` paths which do not exist\n+# - `.o` deleted\n+# - `.dwo` never created\n+# - `.dwp` present\n packed-remapped-single:\n \t$(RUSTC) $(UNSTABLEOPTS) -C split-debuginfo=packed -C debuginfo=2 \\\n \t\t-Z split-dwarf-kind=single --remap-path-prefix $(TMPDIR)=/a foo.rs -g\n \tobjdump -Wi $(TMPDIR)/foo | grep DW_AT_GNU_dwo_name | (! grep $(TMPDIR)) || exit 1\n+\tls $(TMPDIR)/*.o && exit 1 || exit 0\n+\tls $(TMPDIR)/*.dwo && exit 1 || exit 0\n+\trm $(TMPDIR)/foo.dwp\n+\trm $(TMPDIR)/$(call BIN,foo)\n \n packed-crosscrate: packed-crosscrate-split packed-crosscrate-single\n \n+# - Debuginfo in `.dwo` files\n+# - (bar) `.rlib` file created, contains `.dwo`\n+# - (bar) `.o` deleted\n+# - (bar) `.dwo` deleted\n+# - (bar) `.dwp` never created\n+# - (main) `.o` deleted\n+# - (main) `.dwo` deleted\n+# - (main) `.dwp` present\n packed-crosscrate-split:\n \t$(RUSTC) --crate-type lib $(UNSTABLEOPTS) -C split-debuginfo=packed \\\n \t\t-Zsplit-dwarf-kind=split -C debuginfo=2 -g bar.rs\n \tls $(TMPDIR)/*.rlib\n+\tls $(TMPDIR)/*.o && exit 1 || exit 0\n \tls $(TMPDIR)/*.dwo && exit 1 || exit 0\n \tls $(TMPDIR)/*.dwp && exit 1 || exit 0\n-\t$(RUSTC) --extern bar=$(TMPDIR)/libbar.rlib -Z unstable-options $(UNSTABLEOPTS) \\\n+\t$(RUSTC) --extern bar=$(TMPDIR)/libbar.rlib $(UNSTABLEOPTS) \\\n \t\t-C split-debuginfo=packed -Zsplit-dwarf-kind=split -C debuginfo=2 -g main.rs\n-\trm $(TMPDIR)/*.dwo\n+\tls $(TMPDIR)/*.o && exit 1 || exit 0\n+\tls $(TMPDIR)/*.dwo && exit 1 || exit 0\n \trm $(TMPDIR)/main.dwp\n \trm $(TMPDIR)/$(call BIN,main)\n \n+# - Debuginfo in `.o` files\n+# - (bar) `.rlib` file created, contains `.o`\n+# - (bar) `.o` deleted\n+# - (bar) `.dwo` never created\n+# - (bar) `.dwp` never created\n+# - (main) `.o` deleted\n+# - (main) `.dwo` never created\n+# - (main) `.dwp` present\n packed-crosscrate-single:\n \t$(RUSTC) --crate-type lib $(UNSTABLEOPTS) -C split-debuginfo=packed \\\n \t\t-Zsplit-dwarf-kind=single -C debuginfo=2 -g bar.rs\n \tls $(TMPDIR)/*.rlib\n+\tls $(TMPDIR)/*.o && exit 1 || exit 0\n \tls $(TMPDIR)/*.dwo && exit 1 || exit 0\n \tls $(TMPDIR)/*.dwp && exit 1 || exit 0\n-\t$(RUSTC) --extern bar=$(TMPDIR)/libbar.rlib -Z unstable-options $(UNSTABLEOPTS) \\\n+\t$(RUSTC) --extern bar=$(TMPDIR)/libbar.rlib $(UNSTABLEOPTS) \\\n \t\t-C split-debuginfo=packed -Zsplit-dwarf-kind=single -C debuginfo=2 -g main.rs\n+\tls $(TMPDIR)/*.o && exit 1 || exit 0\n \tls $(TMPDIR)/*.dwo && exit 1 || exit 0\n \trm $(TMPDIR)/main.dwp\n \trm $(TMPDIR)/$(call BIN,main)\n \n-unpacked: unpacked-split unpacked-single unpacked-remapped-split unpacked-remapped-single\n+unpacked: unpacked-split unpacked-single unpacked-lto unpacked-remapped unpacked-crosscrate\n \n+# - Debuginfo in `.dwo` files\n+# - `.o` deleted\n+# - `.dwo` present\n+# - `.dwp` never created\n unpacked-split:\n \t$(RUSTC) foo.rs -g $(UNSTABLEOPTS) -C split-debuginfo=unpacked -Zsplit-dwarf-kind=split\n+\tls $(TMPDIR)/*.o && exit 1 || exit 0\n+\trm $(TMPDIR)/*.dwo\n \tls $(TMPDIR)/*.dwp && exit 1 || exit 0\n-\tls $(TMPDIR)/*.dwo\n-\trm -rf $(TMPDIR)/*.dwp $(TMPDIR)/*.dwo\n+\trm $(TMPDIR)/$(call BIN,foo)\n \n+# - Debuginfo in `.o` files\n+# - `.o` present\n+# - `.dwo` never created\n+# - `.dwp` never created\n unpacked-single:\n \t$(RUSTC) foo.rs -g $(UNSTABLEOPTS) -C split-debuginfo=unpacked -Zsplit-dwarf-kind=single\n+\tls $(TMPDIR)/*.o\n+\tls $(TMPDIR)/*.dwo && exit 1 || exit 0\n+\tls $(TMPDIR)/*.dwp && exit 1 || exit 0\n+\trm $(TMPDIR)/$(call BIN,foo)\n+\n+unpacked-lto: packed-lto-split packed-lto-single\n+\n+# - rmeta file added to rlib, no object files are generated and thus no debuginfo is generated\n+# - `.o` never created\n+# - `.dwo` never created\n+# - `.dwp` never created\n+unpacked-lto-split:\n+\t$(RUSTC) baz.rs -g $(UNSTABLEOPTS) -Csplit-debuginfo=unpacked -Zsplit-dwarf-kind=split \\\n+\t\t--crate-type=rlib -Clinker-plugin-lto\n+\tls $(TMPDIR)/*.o && exit 1 || exit 0\n+\tls $(TMPDIR)/*.dwo && exit 1 || exit 0\n \tls $(TMPDIR)/*.dwp && exit 1 || exit 0\n+\trm $(TMPDIR)/libbaz.rlib\n+\n+# - rmeta file added to rlib, no object files are generated and thus no debuginfo is generated\n+# - `.o` never created\n+# - `.dwo` never created\n+# - `.dwp` never created\n+unpacked-lto-single:\n+\t$(RUSTC) baz.rs -g $(UNSTABLEOPTS) -Csplit-debuginfo=unpacked -Zsplit-dwarf-kind=single \\\n+\t\t--crate-type=rlib -Clinker-plugin-lto\n+\tls $(TMPDIR)/*.o && exit 1 || exit 0\n \tls $(TMPDIR)/*.dwo && exit 1 || exit 0\n+\tls $(TMPDIR)/*.dwp && exit 1 || exit 0\n+\trm $(TMPDIR)/libbaz.rlib\n+\n+unpacked-remapped: unpacked-remapped-split unpacked-remapped-single\n \n+# - Debuginfo in `.dwo` files\n+# - `.o` and binary refer to remapped `.dwo` paths which do not exist\n+# - `.o` deleted\n+# - `.dwo` present\n+# - `.dwp` never created\n unpacked-remapped-split:\n \t$(RUSTC) $(UNSTABLEOPTS) -C split-debuginfo=unpacked -C debuginfo=2 \\\n \t\t-Z split-dwarf-kind=split --remap-path-prefix $(TMPDIR)=/a foo.rs -g\n \tobjdump -Wi $(TMPDIR)/foo | grep DW_AT_GNU_dwo_name | (! grep $(TMPDIR)) || exit 1\n+\tls $(TMPDIR)/*.o && exit 1 || exit 0\n+\trm $(TMPDIR)/*.dwo\n+\tls $(TMPDIR)/*.dwp && exit 1 || exit 0\n+\trm $(TMPDIR)/$(call BIN,foo)\n \n+# - Debuginfo in `.o` files\n+# - `.o` and binary refer to remapped `.o` paths which do not exist\n+# - `.o` present\n+# - `.dwo` never created\n+# - `.dwp` never created\n unpacked-remapped-single:\n \t$(RUSTC) $(UNSTABLEOPTS) -C split-debuginfo=unpacked -C debuginfo=2 \\\n \t\t-Z split-dwarf-kind=single --remap-path-prefix $(TMPDIR)=/a foo.rs -g\n \tobjdump -Wi $(TMPDIR)/foo | grep DW_AT_GNU_dwo_name | (! grep $(TMPDIR)) || exit 1\n+\tls $(TMPDIR)/*.o\n+\tls $(TMPDIR)/*.dwo && exit 1 || exit 0\n+\tls $(TMPDIR)/*.dwp && exit 1 || exit 0\n+\trm $(TMPDIR)/$(call BIN,foo)\n+\n+unpacked-crosscrate: packed-crosscrate-split packed-crosscrate-single\n+\n+# - Debuginfo in `.dwo` files\n+# - (bar) `.rlib` file created, contains `.dwo`\n+# - (bar) `.o` deleted\n+# - (bar) `.dwo` present\n+# - (bar) `.dwp` never created\n+# - (main) `.o` deleted\n+# - (main) `.dwo` present\n+# - (main) `.dwp` never created\n+unpacked-crosscrate-split:\n+\t$(RUSTC) --crate-type lib $(UNSTABLEOPTS) -C split-debuginfo=unpacked \\\n+\t\t-Zsplit-dwarf-kind=split -C debuginfo=2 -g bar.rs\n+\tls $(TMPDIR)/*.rlib\n+\tls $(TMPDIR)/*.o && exit 1 || exit 0\n+\tls $(TMPDIR)/*.dwo\n+\tls $(TMPDIR)/*.dwp && exit 1 || exit 0\n+\t$(RUSTC) --extern bar=$(TMPDIR)/libbar.rlib $(UNSTABLEOPTS) \\\n+\t\t-C split-debuginfo=unpacked -Zsplit-dwarf-kind=split -C debuginfo=2 -g main.rs\n+\tls $(TMPDIR)/*.o && exit 1 || exit 0\n+\trm $(TMPDIR)/*.dwo\n+\tls $(TMPDIR)/*.dwp && exit 1 || exit 0\n+\trm $(TMPDIR)/$(call BIN,main)\n+\n+# - Debuginfo in `.o` files\n+# - (bar) `.rlib` file created, contains `.o`\n+# - (bar) `.o` present\n+# - (bar) `.dwo` never created\n+# - (bar) `.dwp` never created\n+# - (main) `.o` present\n+# - (main) `.dwo` never created\n+# - (main) `.dwp` never created\n+unpacked-crosscrate-single:\n+\t$(RUSTC) --crate-type lib $(UNSTABLEOPTS) -C split-debuginfo=unpacked \\\n+\t\t-Zsplit-dwarf-kind=single -C debuginfo=2 -g bar.rs\n+\tls $(TMPDIR)/*.rlib\n+\tls $(TMPDIR)/*.o\n+\tls $(TMPDIR)/*.dwo && exit 1 || exit 0\n+\tls $(TMPDIR)/*.dwp && exit 1 || exit 0\n+\t$(RUSTC) --extern bar=$(TMPDIR)/libbar.rlib $(UNSTABLEOPTS) \\\n+\t\t-C split-debuginfo=unpacked -Zsplit-dwarf-kind=single -C debuginfo=2 -g main.rs\n+\tls $(TMPDIR)/*.o\n+\tls $(TMPDIR)/*.dwo && exit 1 || exit 0\n+\tls $(TMPDIR)/*.dwp && exit 1 || exit 0\n+\trm $(TMPDIR)/$(call BIN,main)\n endif\n endif"}, {"sha": "8b1a393741c96c03c3712b4c80b3d2bcd06959b6", "filename": "src/test/run-make-fulldeps/split-debuginfo/baz.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e284780cf64381eeb0379d09a6f4896b239db9b1/src%2Ftest%2Frun-make-fulldeps%2Fsplit-debuginfo%2Fbaz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e284780cf64381eeb0379d09a6f4896b239db9b1/src%2Ftest%2Frun-make-fulldeps%2Fsplit-debuginfo%2Fbaz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fsplit-debuginfo%2Fbaz.rs?ref=e284780cf64381eeb0379d09a6f4896b239db9b1", "patch": "@@ -0,0 +1 @@\n+// empty"}]}