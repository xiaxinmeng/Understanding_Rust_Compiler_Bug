{"sha": "b3665fccfb0a81752c35e56f6c41043133a949dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzNjY1ZmNjZmIwYTgxNzUyYzM1ZTU2ZjZjNDEwNDMxMzNhOTQ5ZGQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-25T14:45:52Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-25T14:45:52Z"}, "message": "Preserve relative ordering of grouped assists", "tree": {"sha": "150a039b5cd4102e21cadd5e6bc421539bbd38a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/150a039b5cd4102e21cadd5e6bc421539bbd38a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3665fccfb0a81752c35e56f6c41043133a949dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3665fccfb0a81752c35e56f6c41043133a949dd", "html_url": "https://github.com/rust-lang/rust/commit/b3665fccfb0a81752c35e56f6c41043133a949dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3665fccfb0a81752c35e56f6c41043133a949dd/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "785eb32f49653fbc5789396af4fa6ad61f89fb38", "url": "https://api.github.com/repos/rust-lang/rust/commits/785eb32f49653fbc5789396af4fa6ad61f89fb38", "html_url": "https://github.com/rust-lang/rust/commit/785eb32f49653fbc5789396af4fa6ad61f89fb38"}], "stats": {"total": 44, "additions": 26, "deletions": 18}, "files": [{"sha": "1033d6de94bd005f86e64a7a29d5ed18a3812ae9", "filename": "crates/rust-analyzer/src/main_loop/handlers.rs", "status": "modified", "additions": 26, "deletions": 18, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/b3665fccfb0a81752c35e56f6c41043133a949dd/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3665fccfb0a81752c35e56f6c41043133a949dd/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=b3665fccfb0a81752c35e56f6c41043133a949dd", "patch": "@@ -734,19 +734,29 @@ pub fn handle_code_action(\n         res.push(fix.action.clone());\n     }\n \n-    let mut grouped_assists: FxHashMap<String, Vec<Assist>> = FxHashMap::default();\n+    let mut grouped_assists: FxHashMap<String, (usize, Vec<Assist>)> = FxHashMap::default();\n     for assist in world.analysis().assists(FileRange { file_id, range })?.into_iter() {\n         match &assist.group_label {\n-            Some(label) => grouped_assists.entry(label.to_owned()).or_default().push(assist),\n-            None => res.push(create_single_code_action(assist, &world)?.into()),\n+            Some(label) => grouped_assists\n+                .entry(label.to_owned())\n+                .or_insert_with(|| {\n+                    let idx = res.len();\n+                    let dummy = Command::new(String::new(), String::new(), None);\n+                    res.push(dummy.into());\n+                    (idx, Vec::new())\n+                })\n+                .1\n+                .push(assist),\n+            None => {\n+                res.push(create_single_code_action(assist, &world)?.into());\n+            }\n         }\n     }\n \n-    for (group_label, assists) in grouped_assists {\n+    for (group_label, (idx, assists)) in grouped_assists {\n         if assists.len() == 1 {\n-            res.push(\n-                create_single_code_action(assists.into_iter().next().unwrap(), &world)?.into(),\n-            );\n+            res[idx] =\n+                create_single_code_action(assists.into_iter().next().unwrap(), &world)?.into();\n         } else {\n             let title = group_label;\n \n@@ -760,17 +770,15 @@ pub fn handle_code_action(\n                 command: \"rust-analyzer.selectAndApplySourceChange\".to_string(),\n                 arguments: Some(vec![serde_json::Value::Array(arguments)]),\n             });\n-            res.push(\n-                CodeAction {\n-                    title,\n-                    kind: None,\n-                    diagnostics: None,\n-                    edit: None,\n-                    command,\n-                    is_preferred: None,\n-                }\n-                .into(),\n-            );\n+            res[idx] = CodeAction {\n+                title,\n+                kind: None,\n+                diagnostics: None,\n+                edit: None,\n+                command,\n+                is_preferred: None,\n+            }\n+            .into();\n         }\n     }\n "}]}