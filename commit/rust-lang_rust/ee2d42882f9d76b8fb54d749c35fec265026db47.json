{"sha": "ee2d42882f9d76b8fb54d749c35fec265026db47", "node_id": "C_kwDOAAsO6NoAKGVlMmQ0Mjg4MmY5ZDc2YjhmYjU0ZDc0OWMzNWZlYzI2NTAyNmRiNDc", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-03-14T00:35:34Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-03-14T16:33:12Z"}, "message": "Use `unused_generic_params` from crate metadata", "tree": {"sha": "b117273d26f91c0a56e227d025df507340c82fd2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b117273d26f91c0a56e227d025df507340c82fd2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee2d42882f9d76b8fb54d749c35fec265026db47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee2d42882f9d76b8fb54d749c35fec265026db47", "html_url": "https://github.com/rust-lang/rust/commit/ee2d42882f9d76b8fb54d749c35fec265026db47", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee2d42882f9d76b8fb54d749c35fec265026db47/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1b1ed7e18f1fbe5226a96626827c625985f8285", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1b1ed7e18f1fbe5226a96626827c625985f8285", "html_url": "https://github.com/rust-lang/rust/commit/f1b1ed7e18f1fbe5226a96626827c625985f8285"}], "stats": {"total": 38, "additions": 28, "deletions": 10}, "files": [{"sha": "2d8f2c8554f4b16d076af973447f05d4c984d03d", "filename": "compiler/rustc_metadata/src/rmeta/decoder/cstore_impl.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ee2d42882f9d76b8fb54d749c35fec265026db47/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee2d42882f9d76b8fb54d749c35fec265026db47/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs?ref=ee2d42882f9d76b8fb54d749c35fec265026db47", "patch": "@@ -226,7 +226,15 @@ provide! { tcx, def_id, other, cdata,\n     lookup_default_body_stability => { table }\n     lookup_deprecation_entry => { table }\n     params_in_repr => { table }\n-    unused_generic_params => { table }\n+    // FIXME: Could be defaulted, but `LazyValue<UnusedGenericParams>` is not `FixedSizeEncoding`..\n+    unused_generic_params => {\n+        cdata\n+            .root\n+            .tables\n+            .unused_generic_params\n+            .get(cdata, def_id.index)\n+            .map_or_else(|| ty::UnusedGenericParams::new_all_used(), |lazy| lazy.decode((cdata, tcx)))\n+    }\n     opt_def_kind => { table_direct }\n     impl_parent => { table }\n     impl_polarity => { table_direct }"}, {"sha": "6e961a775c1ff88addffac1ca20c5a233e1af5d5", "filename": "compiler/rustc_middle/src/query/keys.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee2d42882f9d76b8fb54d749c35fec265026db47/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fkeys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee2d42882f9d76b8fb54d749c35fec265026db47/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fkeys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fkeys.rs?ref=ee2d42882f9d76b8fb54d749c35fec265026db47", "patch": "@@ -63,7 +63,7 @@ impl<'tcx> Key for ty::InstanceDef<'tcx> {\n \n     #[inline(always)]\n     fn query_crate_is_local(&self) -> bool {\n-        true\n+        self.def_id().is_local()\n     }\n \n     fn default_span(&self, tcx: TyCtxt<'_>) -> Span {\n@@ -76,7 +76,7 @@ impl<'tcx> Key for ty::Instance<'tcx> {\n \n     #[inline(always)]\n     fn query_crate_is_local(&self) -> bool {\n-        true\n+        self.def_id().is_local()\n     }\n \n     fn default_span(&self, tcx: TyCtxt<'_>) -> Span {"}, {"sha": "63263a642acc14bf8d9ceda4467f96cd3202124a", "filename": "compiler/rustc_monomorphize/src/polymorphize.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ee2d42882f9d76b8fb54d749c35fec265026db47/compiler%2Frustc_monomorphize%2Fsrc%2Fpolymorphize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee2d42882f9d76b8fb54d749c35fec265026db47/compiler%2Frustc_monomorphize%2Fsrc%2Fpolymorphize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Fpolymorphize.rs?ref=ee2d42882f9d76b8fb54d749c35fec265026db47", "patch": "@@ -36,6 +36,8 @@ fn unused_generic_params<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     instance: ty::InstanceDef<'tcx>,\n ) -> UnusedGenericParams {\n+    assert!(instance.def_id().is_local());\n+\n     if !tcx.sess.opts.unstable_opts.polymorphize {\n         // If polymorphization disabled, then all parameters are used.\n         return UnusedGenericParams::new_all_used();\n@@ -100,13 +102,6 @@ fn should_polymorphize<'tcx>(\n         return false;\n     }\n \n-    // Polymorphization results are stored in cross-crate metadata only when there are unused\n-    // parameters, so assume that non-local items must have only used parameters (else this query\n-    // would not be invoked, and the cross-crate metadata used instead).\n-    if !def_id.is_local() {\n-        return false;\n-    }\n-\n     // Foreign items have no bodies to analyze.\n     if tcx.is_foreign_item(def_id) {\n         return false;"}, {"sha": "fdbfa1b096d4b610619f6e924f2a8cd72df552b2", "filename": "tests/codegen-units/polymorphization/auxiliary/poly-dep.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee2d42882f9d76b8fb54d749c35fec265026db47/tests%2Fcodegen-units%2Fpolymorphization%2Fauxiliary%2Fpoly-dep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee2d42882f9d76b8fb54d749c35fec265026db47/tests%2Fcodegen-units%2Fpolymorphization%2Fauxiliary%2Fpoly-dep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fpolymorphization%2Fauxiliary%2Fpoly-dep.rs?ref=ee2d42882f9d76b8fb54d749c35fec265026db47", "patch": "@@ -0,0 +1,4 @@\n+// compile-flags: -Zpolymorphize=on\n+\n+#[inline(never)]\n+pub fn foo<T>() {}"}, {"sha": "9da082daf114a99f457c03c0186f5941db0fb1dd", "filename": "tests/codegen-units/polymorphization/poly-foreign.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ee2d42882f9d76b8fb54d749c35fec265026db47/tests%2Fcodegen-units%2Fpolymorphization%2Fpoly-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee2d42882f9d76b8fb54d749c35fec265026db47/tests%2Fcodegen-units%2Fpolymorphization%2Fpoly-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen-units%2Fpolymorphization%2Fpoly-foreign.rs?ref=ee2d42882f9d76b8fb54d749c35fec265026db47", "patch": "@@ -0,0 +1,11 @@\n+// aux-build:poly-dep.rs\n+// compile-flags: --crate-type=lib -Zprint-mono-items=eager -Zpolymorphize=on\n+\n+extern crate poly_dep;\n+\n+pub static FN1: fn() = poly_dep::foo::<i32>;\n+pub static FN2: fn() = poly_dep::foo::<u32>;\n+\n+//~ MONO_ITEM static FN1\n+//~ MONO_ITEM static FN2\n+//~ MONO_ITEM fn poly_dep::foo::<T>"}]}