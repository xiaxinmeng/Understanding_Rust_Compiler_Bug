{"sha": "8a0e5cbf124cea5254bb09111cae6af1b86b21e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhMGU1Y2JmMTI0Y2VhNTI1NGJiMDkxMTFjYWU2YWYxYjg2YjIxZTQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-10-04T09:17:47Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-10-04T09:17:47Z"}, "message": "Auto merge of #54638 - christianpoveda:master, r=kennytm\n\nAdd checking for tool distribution in Tier 1\n\nThis fixes https://github.com/rust-lang/rust/issues/54483\nr? @kennytm", "tree": {"sha": "c55b2a68a62f48f2879ef6a7c0e0565a7f7914d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c55b2a68a62f48f2879ef6a7c0e0565a7f7914d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a0e5cbf124cea5254bb09111cae6af1b86b21e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a0e5cbf124cea5254bb09111cae6af1b86b21e4", "html_url": "https://github.com/rust-lang/rust/commit/8a0e5cbf124cea5254bb09111cae6af1b86b21e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a0e5cbf124cea5254bb09111cae6af1b86b21e4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "088fc7384c1ac3f7670d66880c7dcc0ec9160c79", "url": "https://api.github.com/repos/rust-lang/rust/commits/088fc7384c1ac3f7670d66880c7dcc0ec9160c79", "html_url": "https://github.com/rust-lang/rust/commit/088fc7384c1ac3f7670d66880c7dcc0ec9160c79"}, {"sha": "276557504d20412b46bc5ba2e3463f1ddce73040", "url": "https://api.github.com/repos/rust-lang/rust/commits/276557504d20412b46bc5ba2e3463f1ddce73040", "html_url": "https://github.com/rust-lang/rust/commit/276557504d20412b46bc5ba2e3463f1ddce73040"}], "stats": {"total": 41, "additions": 36, "deletions": 5}, "files": [{"sha": "ec8060b9f56aaae8c934c60f9e11ae613306dd74", "filename": ".travis.yml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8a0e5cbf124cea5254bb09111cae6af1b86b21e4/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/8a0e5cbf124cea5254bb09111cae6af1b86b21e4/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=8a0e5cbf124cea5254bb09111cae6af1b86b21e4", "patch": "@@ -94,6 +94,7 @@ matrix:\n         MACOSX_DEPLOYMENT_TARGET=10.7\n         NO_LLVM_ASSERTIONS=1\n         NO_DEBUG_ASSERTIONS=1\n+        DIST_REQUIRE_ALL_TOOLS=1\n         CI_JOB_NAME=dist-i686-apple\n       os: osx\n       osx_image: xcode9.3-moar\n@@ -108,6 +109,7 @@ matrix:\n         MACOSX_DEPLOYMENT_TARGET=10.7\n         NO_LLVM_ASSERTIONS=1\n         NO_DEBUG_ASSERTIONS=1\n+        DIST_REQUIRE_ALL_TOOLS=1\n         CI_JOB_NAME=dist-x86_64-apple\n       os: osx\n       osx_image: xcode9.3-moar"}, {"sha": "04951454c29e1316fa7a08fcd5a5cbf3cc9c760d", "filename": "appveyor.yml", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8a0e5cbf124cea5254bb09111cae6af1b86b21e4/appveyor.yml", "raw_url": "https://github.com/rust-lang/rust/raw/8a0e5cbf124cea5254bb09111cae6af1b86b21e4/appveyor.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/appveyor.yml?ref=8a0e5cbf124cea5254bb09111cae6af1b86b21e4", "patch": "@@ -85,6 +85,7 @@ environment:\n       --enable-full-tools\n       --enable-profiler\n     SCRIPT: python x.py dist\n+    DIST_REQUIRE_ALL_TOOLS: 1\n     DEPLOY: 1\n     CI_JOB_NAME: dist-x86_64-msvc\n   - RUST_CONFIGURE_ARGS: >\n@@ -93,6 +94,7 @@ environment:\n       --enable-full-tools\n       --enable-profiler\n     SCRIPT: python x.py dist\n+    DIST_REQUIRE_ALL_TOOLS: 1\n     DEPLOY: 1\n     CI_JOB_NAME: dist-i686-msvc\n   - MSYS_BITS: 32\n@@ -101,6 +103,7 @@ environment:\n     MINGW_URL: https://s3-us-west-1.amazonaws.com/rust-lang-ci2/rust-ci-mirror\n     MINGW_ARCHIVE: i686-6.3.0-release-posix-dwarf-rt_v5-rev2.7z\n     MINGW_DIR: mingw32\n+    DIST_REQUIRE_ALL_TOOLS: 1\n     DEPLOY: 1\n     CI_JOB_NAME: dist-i686-mingw\n   - MSYS_BITS: 64\n@@ -109,6 +112,7 @@ environment:\n     MINGW_URL: https://s3-us-west-1.amazonaws.com/rust-lang-ci2/rust-ci-mirror\n     MINGW_ARCHIVE: x86_64-6.3.0-release-posix-seh-rt_v5-rev2.7z\n     MINGW_DIR: mingw64\n+    DIST_REQUIRE_ALL_TOOLS: 1\n     DEPLOY: 1\n     CI_JOB_NAME: dist-x86_64-mingw\n "}, {"sha": "312270532affc7bbaaaa1001f0effeb1bd229055", "filename": "config.toml.example", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8a0e5cbf124cea5254bb09111cae6af1b86b21e4/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/8a0e5cbf124cea5254bb09111cae6af1b86b21e4/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=8a0e5cbf124cea5254bb09111cae6af1b86b21e4", "patch": "@@ -481,3 +481,7 @@\n # as the one built on Windows will contain backslashes in paths causing problems\n # on linux\n #src-tarball = true\n+#\n+\n+# Whether to allow failures when building tools\n+#missing-tools = false"}, {"sha": "c3fbc8eeca6ba65ee428f6cff468f05283334219", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8a0e5cbf124cea5254bb09111cae6af1b86b21e4/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a0e5cbf124cea5254bb09111cae6af1b86b21e4/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=8a0e5cbf124cea5254bb09111cae6af1b86b21e4", "patch": "@@ -134,6 +134,7 @@ pub struct Config {\n     pub test_miri: bool,\n     pub save_toolstates: Option<PathBuf>,\n     pub print_step_timings: bool,\n+    pub missing_tools: bool,\n \n     // Fallback musl-root for all targets\n     pub musl_root: Option<PathBuf>,\n@@ -271,6 +272,7 @@ struct Dist {\n     gpg_password_file: Option<String>,\n     upload_addr: Option<String>,\n     src_tarball: Option<bool>,\n+    missing_tools: Option<bool>,\n }\n \n #[derive(Deserialize)]\n@@ -375,6 +377,7 @@ impl Config {\n         config.rust_codegen_backends = vec![INTERNER.intern_str(\"llvm\")];\n         config.rust_codegen_backends_dir = \"codegen-backends\".to_owned();\n         config.deny_warnings = true;\n+        config.missing_tools = false;\n \n         // set by bootstrap.py\n         config.build = INTERNER.intern_str(&env::var(\"BUILD\").expect(\"'BUILD' to be set\"));\n@@ -613,6 +616,7 @@ impl Config {\n             config.dist_gpg_password_file = t.gpg_password_file.clone().map(PathBuf::from);\n             config.dist_upload_addr = t.upload_addr.clone();\n             set(&mut config.rust_dist_src, t.src_tarball);\n+            set(&mut config.missing_tools, t.missing_tools);\n         }\n \n         // Now that we've reached the end of our configuration, infer the"}, {"sha": "d95603190d869e20d911eb1ae243c0d0718d1c5c", "filename": "src/bootstrap/configure.py", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8a0e5cbf124cea5254bb09111cae6af1b86b21e4/src%2Fbootstrap%2Fconfigure.py", "raw_url": "https://github.com/rust-lang/rust/raw/8a0e5cbf124cea5254bb09111cae6af1b86b21e4/src%2Fbootstrap%2Fconfigure.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfigure.py?ref=8a0e5cbf124cea5254bb09111cae6af1b86b21e4", "patch": "@@ -69,6 +69,7 @@ def v(*args):\n o(\"emscripten\", None, \"compile the emscripten backend as well as LLVM\")\n o(\"full-tools\", None, \"enable all tools\")\n o(\"lldb\", \"rust.lldb\", \"build lldb\")\n+o(\"missing-tools\", \"dist.missing-tools\", \"allow failures when building tools\")\n \n # Optimization and debugging options. These may be overridden by the release\n # channel, etc."}, {"sha": "c25f94357f24c16734a297c736ccca4271560db4", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8a0e5cbf124cea5254bb09111cae6af1b86b21e4/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a0e5cbf124cea5254bb09111cae6af1b86b21e4/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=8a0e5cbf124cea5254bb09111cae6af1b86b21e4", "patch": "@@ -67,6 +67,14 @@ fn rust_installer(builder: &Builder) -> Command {\n     builder.tool_cmd(Tool::RustInstaller)\n }\n \n+fn missing_tool(tool_name: &str, skip: bool) {\n+    if skip {\n+        println!(\"Unable to build {}, skipping dist\", tool_name)\n+    } else {\n+        panic!(\"Unable to build {}\", tool_name)\n+    }\n+}\n+\n #[derive(Debug, PartialOrd, Ord, Copy, Clone, Hash, PartialEq, Eq)]\n pub struct Docs {\n     pub stage: u32,\n@@ -1166,7 +1174,7 @@ impl Step for Rls {\n         let rls = builder.ensure(tool::Rls {\n             compiler: builder.compiler(stage, builder.config.build),\n             target, extra_features: Vec::new()\n-        }).or_else(|| { println!(\"Unable to build RLS, skipping dist\"); None })?;\n+        }).or_else(|| { missing_tool(\"RLS\", builder.build.config.missing_tools); None })?;\n \n         builder.install(&rls, &image.join(\"bin\"), 0o755);\n         let doc = image.join(\"share/doc/rls\");\n@@ -1245,11 +1253,11 @@ impl Step for Clippy {\n         let clippy = builder.ensure(tool::Clippy {\n             compiler: builder.compiler(stage, builder.config.build),\n             target, extra_features: Vec::new()\n-        }).or_else(|| { println!(\"Unable to build clippy, skipping dist\"); None })?;\n+        }).or_else(|| { missing_tool(\"clippy\", builder.build.config.missing_tools); None })?;\n         let cargoclippy = builder.ensure(tool::CargoClippy {\n             compiler: builder.compiler(stage, builder.config.build),\n             target, extra_features: Vec::new()\n-        }).or_else(|| { println!(\"Unable to build cargo clippy, skipping dist\"); None })?;\n+        }).or_else(|| { missing_tool(\"cargo clippy\", builder.build.config.missing_tools); None })?;\n \n         builder.install(&clippy, &image.join(\"bin\"), 0o755);\n         builder.install(&cargoclippy, &image.join(\"bin\"), 0o755);\n@@ -1324,11 +1332,11 @@ impl Step for Rustfmt {\n         let rustfmt = builder.ensure(tool::Rustfmt {\n             compiler: builder.compiler(stage, builder.config.build),\n             target, extra_features: Vec::new()\n-        }).or_else(|| { println!(\"Unable to build Rustfmt, skipping dist\"); None })?;\n+        }).or_else(|| { missing_tool(\"Rustfmt\", builder.build.config.missing_tools); None })?;\n         let cargofmt = builder.ensure(tool::Cargofmt {\n             compiler: builder.compiler(stage, builder.config.build),\n             target, extra_features: Vec::new()\n-        }).or_else(|| { println!(\"Unable to build Cargofmt, skipping dist\"); None })?;\n+        }).or_else(|| { missing_tool(\"Cargofmt\", builder.build.config.missing_tools); None })?;\n \n         builder.install(&rustfmt, &image.join(\"bin\"), 0o755);\n         builder.install(&cargofmt, &image.join(\"bin\"), 0o755);"}, {"sha": "8a84e474687442ccbe9f6f2cf0de0faf4589479f", "filename": "src/ci/docker/dist-i686-linux/Dockerfile", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8a0e5cbf124cea5254bb09111cae6af1b86b21e4/src%2Fci%2Fdocker%2Fdist-i686-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/8a0e5cbf124cea5254bb09111cae6af1b86b21e4/src%2Fci%2Fdocker%2Fdist-i686-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i686-linux%2FDockerfile?ref=8a0e5cbf124cea5254bb09111cae6af1b86b21e4", "patch": "@@ -110,3 +110,5 @@ ENV CFLAGS -mstackrealign\n # When we build cargo in this container, we don't want it to use the system\n # libcurl, instead it should compile its own.\n ENV LIBCURL_NO_PKG_CONFIG 1\n+\n+ENV DIST_REQUIRE_ALL_TOOLS 1"}, {"sha": "7e3cc10b0c10cda557cfe83b805070f4c468f399", "filename": "src/ci/docker/dist-x86_64-linux/Dockerfile", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8a0e5cbf124cea5254bb09111cae6af1b86b21e4/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/8a0e5cbf124cea5254bb09111cae6af1b86b21e4/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2FDockerfile?ref=8a0e5cbf124cea5254bb09111cae6af1b86b21e4", "patch": "@@ -106,3 +106,5 @@ ENV DIST_SRC 1\n # When we build cargo in this container, we don't want it to use the system\n # libcurl, instead it should compile its own.\n ENV LIBCURL_NO_PKG_CONFIG 1\n+\n+ENV DIST_REQUIRE_ALL_TOOLS 1"}, {"sha": "a9e506645f189821f270ccb04ceaeacef66e83d4", "filename": "src/ci/run.sh", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8a0e5cbf124cea5254bb09111cae6af1b86b21e4/src%2Fci%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/8a0e5cbf124cea5254bb09111cae6af1b86b21e4/src%2Fci%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Frun.sh?ref=8a0e5cbf124cea5254bb09111cae6af1b86b21e4", "patch": "@@ -76,6 +76,10 @@ else\n   fi\n fi\n \n+if [ \"$RUST_RELEASE_CHANNEL\" = \"nightly\" ] || [ \"$DIST_REQUIRE_ALL_TOOLS\" = \"\" ]; then\n+    RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --enable-missing-tools\"\n+fi\n+\n # We've had problems in the past of shell scripts leaking fds into the sccache\n # server (#48192) which causes Cargo to erroneously think that a build script\n # hasn't finished yet. Try to solve that problem by starting a very long-lived"}]}