{"sha": "60b39ba9a573081af2b1f3faaf14c020ef304d11", "node_id": "C_kwDOAAsO6NoAKDYwYjM5YmE5YTU3MzA4MWFmMmIxZjNmYWFmMTRjMDIwZWYzMDRkMTE", "commit": {"author": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-10-04T02:48:53Z"}, "committer": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-10-04T03:25:42Z"}, "message": "use ci-rustc-sysroot for sysroot when download_rustc", "tree": {"sha": "b39c9b15c8d37b0c8ac7bf9d747a0c477fdd7df7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b39c9b15c8d37b0c8ac7bf9d747a0c477fdd7df7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60b39ba9a573081af2b1f3faaf14c020ef304d11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60b39ba9a573081af2b1f3faaf14c020ef304d11", "html_url": "https://github.com/rust-lang/rust/commit/60b39ba9a573081af2b1f3faaf14c020ef304d11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60b39ba9a573081af2b1f3faaf14c020ef304d11/comments", "author": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "973ff033f38a1ee23798560e748a7e2035f49ed0", "url": "https://api.github.com/repos/rust-lang/rust/commits/973ff033f38a1ee23798560e748a7e2035f49ed0", "html_url": "https://github.com/rust-lang/rust/commit/973ff033f38a1ee23798560e748a7e2035f49ed0"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "8058fb1eaa22dd6d0b500e837ed1004deebafcb3", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60b39ba9a573081af2b1f3faaf14c020ef304d11/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60b39ba9a573081af2b1f3faaf14c020ef304d11/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=60b39ba9a573081af2b1f3faaf14c020ef304d11", "patch": "@@ -1102,6 +1102,8 @@ impl Step for Sysroot {\n         let host_dir = builder.out.join(&compiler.host.triple);\n         let sysroot = if compiler.stage == 0 {\n             host_dir.join(\"stage0-sysroot\")\n+        } else if builder.download_rustc() {\n+            host_dir.join(\"ci-rustc-sysroot\")\n         } else {\n             host_dir.join(format!(\"stage{}\", compiler.stage))\n         };\n@@ -1115,7 +1117,7 @@ impl Step for Sysroot {\n                 \"Cross-compiling is not yet supported with `download-rustc`\",\n             );\n \n-            // #102002, cleanup stage1 and stage0-sysroot folders when using download-rustc\n+            // #102002, cleanup stage1 and stage0-sysroot folders when using download-rustc so people don't use old versions of the toolchain by accident.\n             let _ = fs::remove_dir_all(host_dir.join(\"stage1\"));\n             let _ = fs::remove_dir_all(host_dir.join(\"stage0-sysroot\"));\n "}, {"sha": "5d0c7d2bd9d44c49a9682e79a08ca2cfcc6b56d1", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/60b39ba9a573081af2b1f3faaf14c020ef304d11/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60b39ba9a573081af2b1f3faaf14c020ef304d11/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=60b39ba9a573081af2b1f3faaf14c020ef304d11", "patch": "@@ -512,10 +512,8 @@ impl Step for Rustdoc {\n         // Similar to `compile::Assemble`, build with the previous stage's compiler. Otherwise\n         // we'd have stageN/bin/rustc and stageN/bin/rustdoc be effectively different stage\n         // compilers, which isn't what we want. Rustdoc should be linked in the same way as the\n-        // rustc compiler it's paired with, so it must be built with the previous stage compiler,\n-        // if download_rustc is true, we will use the same target stage.\n-        let target_stage = target_compiler.stage - if builder.download_rustc() { 0 } else { 1 };\n-        let build_compiler = builder.compiler(target_stage, builder.config.build);\n+        // rustc compiler it's paired with, so it must be built with the previous stage compiler.\n+        let build_compiler = builder.compiler(target_compiler.stage - 1, builder.config.build);\n \n         // When using `download-rustc` and a stage0 build_compiler, copying rustc doesn't actually\n         // build stage0 libstd (because the libstd in sysroot has the wrong ABI). Explicitly build"}]}