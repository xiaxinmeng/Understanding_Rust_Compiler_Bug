{"sha": "7ad1c62d38294e145aa65425a08b5accac121cd3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhZDFjNjJkMzgyOTRlMTQ1YWE2NTQyNWEwOGI1YWNjYWMxMjFjZDM=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-07-01T16:24:07Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-07-02T18:43:16Z"}, "message": "Fix an ICE using break and continue as array lengths", "tree": {"sha": "6be6e3ef3ce4c1faee9cbca26f0cc0b723bac7d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6be6e3ef3ce4c1faee9cbca26f0cc0b723bac7d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ad1c62d38294e145aa65425a08b5accac121cd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ad1c62d38294e145aa65425a08b5accac121cd3", "html_url": "https://github.com/rust-lang/rust/commit/7ad1c62d38294e145aa65425a08b5accac121cd3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ad1c62d38294e145aa65425a08b5accac121cd3/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6bbee802abb174243fac490782baa680e4f67b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6bbee802abb174243fac490782baa680e4f67b4", "html_url": "https://github.com/rust-lang/rust/commit/c6bbee802abb174243fac490782baa680e4f67b4"}], "stats": {"total": 66, "additions": 60, "deletions": 6}, "files": [{"sha": "c4e196628915b42f1d0fa377d3109d1763b0a1bb", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1c62d38294e145aa65425a08b5accac121cd3/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1c62d38294e145aa65425a08b5accac121cd3/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=7ad1c62d38294e145aa65425a08b5accac121cd3", "patch": "@@ -1211,6 +1211,7 @@ where\n         .set(derive_registrar::find(&hir_map));\n \n     time(sess, \"loop checking\", || loops::check_crate(sess, &hir_map));\n+    sess.abort_if_errors();\n \n     let mut local_providers = ty::query::Providers::default();\n     default_provide(&mut local_providers);"}, {"sha": "502091e5192012872f41b15386ca76ae26ae4eba", "filename": "src/librustc_mir/build/scope.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1c62d38294e145aa65425a08b5accac121cd3/src%2Flibrustc_mir%2Fbuild%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1c62d38294e145aa65425a08b5accac121cd3/src%2Flibrustc_mir%2Fbuild%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fscope.rs?ref=7ad1c62d38294e145aa65425a08b5accac121cd3", "patch": "@@ -541,9 +541,9 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n     /// Finds the breakable scope for a given label. This is used for\n     /// resolving `break` and `continue`.\n     pub fn find_breakable_scope(&self,\n-                           span: Span,\n-                           label: region::Scope)\n-                           -> &BreakableScope<'tcx> {\n+                                span: Span,\n+                                label: region::Scope)\n+                                -> &BreakableScope<'tcx> {\n         // find the loop-scope with the correct id\n         self.breakable_scopes.iter()\n             .rev()"}, {"sha": "898acf48d3df82a28d29f7f31c7197bc71d2ca48", "filename": "src/librustc_passes/loops.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1c62d38294e145aa65425a08b5accac121cd3/src%2Flibrustc_passes%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1c62d38294e145aa65425a08b5accac121cd3/src%2Flibrustc_passes%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Floops.rs?ref=7ad1c62d38294e145aa65425a08b5accac121cd3", "patch": "@@ -40,6 +40,7 @@ enum Context {\n     Loop(LoopKind),\n     Closure,\n     LabeledBlock,\n+    AnonConst,\n }\n \n #[derive(Copy, Clone)]\n@@ -71,6 +72,10 @@ impl<'a, 'hir> Visitor<'hir> for CheckLoopVisitor<'a, 'hir> {\n         self.with_context(Normal, |v| intravisit::walk_impl_item(v, i));\n     }\n \n+    fn visit_anon_const(&mut self, c: &'hir hir::AnonConst) {\n+        self.with_context(AnonConst, |v| intravisit::walk_anon_const(v, c));\n+    }\n+\n     fn visit_expr(&mut self, e: &'hir hir::Expr) {\n         match e.node {\n             hir::ExprWhile(ref e, ref b, _) => {\n@@ -194,7 +199,7 @@ impl<'a, 'hir> CheckLoopVisitor<'a, 'hir> {\n                 .span_label(span, \"cannot break inside of a closure\")\n                 .emit();\n             }\n-            Normal => {\n+            Normal | AnonConst => {\n                 struct_span_err!(self.sess, span, E0268, \"`{}` outside of loop\", name)\n                 .span_label(span, \"cannot break outside of a loop\")\n                 .emit();"}, {"sha": "c3cfff0e1f642915fa30df8340c4b3e6bfdf3082", "filename": "src/test/ui/array-break-length.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1c62d38294e145aa65425a08b5accac121cd3/src%2Ftest%2Fui%2Farray-break-length.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1c62d38294e145aa65425a08b5accac121cd3/src%2Ftest%2Fui%2Farray-break-length.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Farray-break-length.rs?ref=7ad1c62d38294e145aa65425a08b5accac121cd3", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    loop {\n+        |_: [_; break]| {} //~ ERROR: `break` outside of loop\n+    }\n+\n+    loop {\n+        |_: [_; continue]| {} //~ ERROR: `continue` outside of loop\n+    }\n+}"}, {"sha": "114245b9cc77b607c1951231ab2b412f9e7e88e6", "filename": "src/test/ui/array-break-length.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1c62d38294e145aa65425a08b5accac121cd3/src%2Ftest%2Fui%2Farray-break-length.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1c62d38294e145aa65425a08b5accac121cd3/src%2Ftest%2Fui%2Farray-break-length.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Farray-break-length.stderr?ref=7ad1c62d38294e145aa65425a08b5accac121cd3", "patch": "@@ -0,0 +1,15 @@\n+error[E0268]: `break` outside of loop\n+  --> $DIR/array-break-length.rs:13:17\n+   |\n+LL |         |_: [_; break]| {} //~ ERROR: `break` outside of loop\n+   |                 ^^^^^ cannot break outside of a loop\n+\n+error[E0268]: `continue` outside of loop\n+  --> $DIR/array-break-length.rs:17:17\n+   |\n+LL |         |_: [_; continue]| {} //~ ERROR: `continue` outside of loop\n+   |                 ^^^^^^^^ cannot break outside of a loop\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0268`."}, {"sha": "727113e328fef1db1563e8170d4d0714df513e3c", "filename": "src/test/ui/closure-array-break-length.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1c62d38294e145aa65425a08b5accac121cd3/src%2Ftest%2Fui%2Fclosure-array-break-length.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1c62d38294e145aa65425a08b5accac121cd3/src%2Ftest%2Fui%2Fclosure-array-break-length.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosure-array-break-length.rs?ref=7ad1c62d38294e145aa65425a08b5accac121cd3", "patch": "@@ -12,6 +12,8 @@ fn main() {\n     |_: [_; continue]| {}; //~ ERROR: `continue` outside of loop\n \n     while |_: [_; continue]| {} {} //~ ERROR: `break` or `continue` with no label\n+    //~^ ERROR: `continue` outside of loop\n \n     while |_: [_; break]| {} {} //~ ERROR: `break` or `continue` with no label\n+    //~^ ERROR: `break` outside of loop\n }"}, {"sha": "a337645fb7e8fc5dcf25c93c4417b5787b5f40cc", "filename": "src/test/ui/closure-array-break-length.stderr", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7ad1c62d38294e145aa65425a08b5accac121cd3/src%2Ftest%2Fui%2Fclosure-array-break-length.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7ad1c62d38294e145aa65425a08b5accac121cd3/src%2Ftest%2Fui%2Fclosure-array-break-length.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosure-array-break-length.stderr?ref=7ad1c62d38294e145aa65425a08b5accac121cd3", "patch": "@@ -10,13 +10,25 @@ error[E0590]: `break` or `continue` with no label in the condition of a `while`\n LL |     while |_: [_; continue]| {} {} //~ ERROR: `break` or `continue` with no label\n    |                   ^^^^^^^^ unlabeled `continue` in the condition of a `while` loop\n \n+error[E0268]: `continue` outside of loop\n+  --> $DIR/closure-array-break-length.rs:14:19\n+   |\n+LL |     while |_: [_; continue]| {} {} //~ ERROR: `break` or `continue` with no label\n+   |                   ^^^^^^^^ cannot break outside of a loop\n+\n error[E0590]: `break` or `continue` with no label in the condition of a `while` loop\n-  --> $DIR/closure-array-break-length.rs:16:19\n+  --> $DIR/closure-array-break-length.rs:17:19\n    |\n LL |     while |_: [_; break]| {} {} //~ ERROR: `break` or `continue` with no label\n    |                   ^^^^^ unlabeled `break` in the condition of a `while` loop\n \n-error: aborting due to 3 previous errors\n+error[E0268]: `break` outside of loop\n+  --> $DIR/closure-array-break-length.rs:17:19\n+   |\n+LL |     while |_: [_; break]| {} {} //~ ERROR: `break` or `continue` with no label\n+   |                   ^^^^^ cannot break outside of a loop\n+\n+error: aborting due to 5 previous errors\n \n Some errors occurred: E0268, E0590.\n For more information about an error, try `rustc --explain E0268`."}]}