{"sha": "a693c9206bd8c6bb69979de7082977444b9309d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2OTNjOTIwNmJkOGM2YmI2OTk3OWRlNzA4Mjk3NzQ0NGI5MzA5ZDA=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-06-26T11:56:42Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-06-26T11:56:42Z"}, "message": "Use proper debugging statements for infinite recursion assertion", "tree": {"sha": "c056fc0a95147d971300ed34508895e62379a7c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c056fc0a95147d971300ed34508895e62379a7c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a693c9206bd8c6bb69979de7082977444b9309d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a693c9206bd8c6bb69979de7082977444b9309d0", "html_url": "https://github.com/rust-lang/rust/commit/a693c9206bd8c6bb69979de7082977444b9309d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a693c9206bd8c6bb69979de7082977444b9309d0/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "309fd8a6fb059d38ea56274968feff2ef738184b", "url": "https://api.github.com/repos/rust-lang/rust/commits/309fd8a6fb059d38ea56274968feff2ef738184b", "html_url": "https://github.com/rust-lang/rust/commit/309fd8a6fb059d38ea56274968feff2ef738184b"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "6d2df4c201813b5dafe62a7f115891af497c8dca", "filename": "src/librustc/traits/query/normalize.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a693c9206bd8c6bb69979de7082977444b9309d0/src%2Flibrustc%2Ftraits%2Fquery%2Fnormalize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a693c9206bd8c6bb69979de7082977444b9309d0/src%2Flibrustc%2Ftraits%2Fquery%2Fnormalize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fquery%2Fnormalize.rs?ref=a693c9206bd8c6bb69979de7082977444b9309d0", "patch": "@@ -124,10 +124,10 @@ impl<'cx, 'gcx, 'tcx> TypeFolder<'gcx, 'tcx> for QueryNormalizer<'cx, 'gcx, 'tcx\n                         let concrete_ty = generic_ty.subst(self.tcx(), substs);\n                         self.anon_depth += 1;\n                         if concrete_ty == ty {\n-                            println!(\"generic_ty: {:#?}\", generic_ty);\n-                            println!(\"substs {:#?}\", substs);\n+                            bug!(\"infinite recursion generic_ty: {:#?}, substs: {:#?}, \\\n+                                  concrete_ty: {:#?}, ty: {:#?}\", generic_ty, substs, concrete_ty,\n+                                  ty);\n                         }\n-                        assert_ne!(concrete_ty, ty, \"infinite recursion\");\n                         let folded_ty = self.fold_ty(concrete_ty);\n                         self.anon_depth -= 1;\n                         folded_ty"}]}