{"sha": "4255a5afd5d55532fda11f43ded5339ad27ea27e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyNTVhNWFmZDVkNTU1MzJmZGExMWY0M2RlZDUzMzlhZDI3ZWEyN2U=", "commit": {"author": {"name": "Albin Hedman", "email": "albin9604@gmail.com", "date": "2020-12-06T18:01:03Z"}, "committer": {"name": "Albin Hedman", "email": "albin9604@gmail.com", "date": "2020-12-06T18:01:03Z"}, "message": "Moved failing test to src/test/ui/\nStill have not figured out how to make it work", "tree": {"sha": "3e4e39d3c9acb73b6bc5ebcf5d897462915c7c8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e4e39d3c9acb73b6bc5ebcf5d897462915c7c8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4255a5afd5d55532fda11f43ded5339ad27ea27e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4255a5afd5d55532fda11f43ded5339ad27ea27e", "html_url": "https://github.com/rust-lang/rust/commit/4255a5afd5d55532fda11f43ded5339ad27ea27e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4255a5afd5d55532fda11f43ded5339ad27ea27e/comments", "author": {"login": "usbalbin", "id": 10927717, "node_id": "MDQ6VXNlcjEwOTI3NzE3", "avatar_url": "https://avatars.githubusercontent.com/u/10927717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usbalbin", "html_url": "https://github.com/usbalbin", "followers_url": "https://api.github.com/users/usbalbin/followers", "following_url": "https://api.github.com/users/usbalbin/following{/other_user}", "gists_url": "https://api.github.com/users/usbalbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/usbalbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usbalbin/subscriptions", "organizations_url": "https://api.github.com/users/usbalbin/orgs", "repos_url": "https://api.github.com/users/usbalbin/repos", "events_url": "https://api.github.com/users/usbalbin/events{/privacy}", "received_events_url": "https://api.github.com/users/usbalbin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "usbalbin", "id": 10927717, "node_id": "MDQ6VXNlcjEwOTI3NzE3", "avatar_url": "https://avatars.githubusercontent.com/u/10927717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usbalbin", "html_url": "https://github.com/usbalbin", "followers_url": "https://api.github.com/users/usbalbin/followers", "following_url": "https://api.github.com/users/usbalbin/following{/other_user}", "gists_url": "https://api.github.com/users/usbalbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/usbalbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usbalbin/subscriptions", "organizations_url": "https://api.github.com/users/usbalbin/orgs", "repos_url": "https://api.github.com/users/usbalbin/repos", "events_url": "https://api.github.com/users/usbalbin/events{/privacy}", "received_events_url": "https://api.github.com/users/usbalbin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94762417e8957caa5db219e11be58c4de5def4c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/94762417e8957caa5db219e11be58c4de5def4c6", "html_url": "https://github.com/rust-lang/rust/commit/94762417e8957caa5db219e11be58c4de5def4c6"}], "stats": {"total": 61, "additions": 51, "deletions": 10}, "files": [{"sha": "268c2ed283f64edb94c316e48246368b8b286b41", "filename": "library/core/tests/mem.rs", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4255a5afd5d55532fda11f43ded5339ad27ea27e/library%2Fcore%2Ftests%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4255a5afd5d55532fda11f43ded5339ad27ea27e/library%2Fcore%2Ftests%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fmem.rs?ref=4255a5afd5d55532fda11f43ded5339ad27ea27e", "patch": "@@ -131,18 +131,9 @@ fn test_discriminant_send_sync() {\n }\n \n #[test]\n+#[cfg(not(bootstrap))]\n fn assume_init_good() {\n     const TRUE: bool = unsafe { MaybeUninit::<bool>::new(true).assume_init() };\n \n     assert!(TRUE);\n }\n-\n-#[test]\n-fn assume_init_bad() {\n-    const _BAD: () = unsafe {\n-        MaybeUninit::<!>::uninit().assume_init();\n-        //~^ ERROR the type `!` does not permit being left uninitialized\n-        //~| ERROR this code causes undefined behavior when executed\n-        //~| ERROR help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n-    };\n-}"}, {"sha": "95562f3134fc8cfd7e2a116faa9a47c611abeef2", "filename": "src/test/ui/assume-type-intrinsics.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4255a5afd5d55532fda11f43ded5339ad27ea27e/src%2Ftest%2Fui%2Fassume-type-intrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4255a5afd5d55532fda11f43ded5339ad27ea27e/src%2Ftest%2Fui%2Fassume-type-intrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassume-type-intrinsics.rs?ref=4255a5afd5d55532fda11f43ded5339ad27ea27e", "patch": "@@ -0,0 +1,13 @@\n+#![feature(never_type)]\n+#![feature(const_maybe_uninit_assume_init)]\n+\n+fn main() {\n+    use std::mem::MaybeUninit;\n+\n+    const _BAD: () = unsafe {\n+        MaybeUninit::<!>::uninit().assume_init();\n+        //~^ ERROR: the type `!` does not permit being left uninitialized\n+        //~| this code causes undefined behavior when executed\n+        //~| WARN: the type `!` does not permit being left uninitialized\n+    };\n+}"}, {"sha": "be45d1ba384ea078fe5165a938256bc74e6fb4ba", "filename": "src/test/ui/assume-type-intrinsics.stderr", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/4255a5afd5d55532fda11f43ded5339ad27ea27e/src%2Ftest%2Fui%2Fassume-type-intrinsics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4255a5afd5d55532fda11f43ded5339ad27ea27e/src%2Ftest%2Fui%2Fassume-type-intrinsics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassume-type-intrinsics.stderr?ref=4255a5afd5d55532fda11f43ded5339ad27ea27e", "patch": "@@ -0,0 +1,37 @@\n+error: any use of this value will cause an error\n+  --> $SRC_DIR/core/src/mem/maybe_uninit.rs:LL:COL\n+   |\n+LL |               intrinsics::assert_inhabited::<T>();\n+   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |               |\n+   |               attempted to instantiate uninhabited type `!`\n+   |               inside `MaybeUninit::<!>::assume_init` at $SRC_DIR/core/src/mem/maybe_uninit.rs:LL:COL\n+   |               inside `_BAD` at $DIR/assume-type-intrinsics.rs:8:9\n+   | \n+  ::: $DIR/assume-type-intrinsics.rs:7:5\n+   |\n+LL | /     const _BAD: () = unsafe {\n+LL | |         MaybeUninit::<!>::uninit().assume_init();\n+LL | |\n+LL | |\n+LL | |\n+LL | |\n+LL | |     };\n+   | |______-\n+   |\n+   = note: `#[deny(const_err)]` on by default\n+\n+warning: the type `!` does not permit being left uninitialized\n+  --> $DIR/assume-type-intrinsics.rs:8:9\n+   |\n+LL |         MaybeUninit::<!>::uninit().assume_init();\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |         |\n+   |         this code causes undefined behavior when executed\n+   |         help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n+   |\n+   = note: `#[warn(invalid_value)]` on by default\n+   = note: the `!` type has no valid value\n+\n+error: aborting due to previous error; 1 warning emitted\n+"}]}