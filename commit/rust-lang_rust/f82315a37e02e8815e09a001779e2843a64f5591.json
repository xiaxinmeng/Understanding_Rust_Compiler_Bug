{"sha": "f82315a37e02e8815e09a001779e2843a64f5591", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4MjMxNWEzN2UwMmU4ODE1ZTA5YTAwMTc3OWUyODQzYTY0ZjU1OTE=", "commit": {"author": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-02-02T16:33:42Z"}, "committer": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-02-05T14:44:50Z"}, "message": "Don't release Miri if its tests only failed on Windows", "tree": {"sha": "1e227826cb3bfe85a34e22289994c242b870ac62", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e227826cb3bfe85a34e22289994c242b870ac62"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f82315a37e02e8815e09a001779e2843a64f5591", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niIsEABYIADMWIQRJ2jPMDdiQ+U4U42Z0+n/VuNoUuAUCYB1Z4hUceWQtaHVhbmdA\nb3V0bG9vay5jb20ACgkQdPp/1bjaFLjlngEAjSWoSj8Gs4xK3/IqaGS9NLzrfpHc\n9UPf5OUTANLwb/wBAJsroy9Txz9jZnv362aGfOAA0CeJIMWmYDMyUKw8MScG\n=6svO\n-----END PGP SIGNATURE-----", "payload": "tree 1e227826cb3bfe85a34e22289994c242b870ac62\nparent a3ed564c130ec3f19e933a9ea31faca5a717ce91\nauthor hyd-dev <yd-huang@outlook.com> 1612283622 +0800\ncommitter hyd-dev <yd-huang@outlook.com> 1612536290 +0800\n\nDon't release Miri if its tests only failed on Windows\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f82315a37e02e8815e09a001779e2843a64f5591", "html_url": "https://github.com/rust-lang/rust/commit/f82315a37e02e8815e09a001779e2843a64f5591", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f82315a37e02e8815e09a001779e2843a64f5591/comments", "author": null, "committer": null, "parents": [{"sha": "a3ed564c130ec3f19e933a9ea31faca5a717ce91", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3ed564c130ec3f19e933a9ea31faca5a717ce91", "html_url": "https://github.com/rust-lang/rust/commit/a3ed564c130ec3f19e933a9ea31faca5a717ce91"}], "stats": {"total": 27, "additions": 14, "deletions": 13}, "files": [{"sha": "13b312afa37e1c5c58dbbe24ae928d62e61253ba", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f82315a37e02e8815e09a001779e2843a64f5591/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/f82315a37e02e8815e09a001779e2843a64f5591/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=f82315a37e02e8815e09a001779e2843a64f5591", "patch": "@@ -349,6 +349,7 @@ jobs:\n             env:\n               SCRIPT: src/ci/docker/host-x86_64/x86_64-gnu-tools/checktools.sh x.py /tmp/toolstate/toolstates.json windows\n               RUST_CONFIGURE_ARGS: \"--build=x86_64-pc-windows-msvc --save-toolstates=/tmp/toolstate/toolstates.json\"\n+              DEPLOY_TOOLSTATES_JSON: toolstates-windows.json\n             os: windows-latest-xl\n           - name: i686-mingw-1\n             env:"}, {"sha": "5b9b7795c1bdb08c66a472b543b776fcf1e637b0", "filename": "src/ci/github-actions/ci.yml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f82315a37e02e8815e09a001779e2843a64f5591/src%2Fci%2Fgithub-actions%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/f82315a37e02e8815e09a001779e2843a64f5591/src%2Fci%2Fgithub-actions%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fgithub-actions%2Fci.yml?ref=f82315a37e02e8815e09a001779e2843a64f5591", "patch": "@@ -531,6 +531,7 @@ jobs:\n             env:\n               SCRIPT: src/ci/docker/host-x86_64/x86_64-gnu-tools/checktools.sh x.py /tmp/toolstate/toolstates.json windows\n               RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --save-toolstates=/tmp/toolstate/toolstates.json\n+              DEPLOY_TOOLSTATES_JSON: toolstates-windows.json\n             <<: *job-windows-xl\n \n           # 32/64-bit MinGW builds."}, {"sha": "9eeeb409d44e05161e1878edef2ce261b833ed8d", "filename": "src/tools/build-manifest/src/main.rs", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/f82315a37e02e8815e09a001779e2843a64f5591/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f82315a37e02e8815e09a001779e2843a64f5591/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs?ref=f82315a37e02e8815e09a001779e2843a64f5591", "patch": "@@ -257,21 +257,20 @@ impl Builder {\n     /// If a tool does not pass its tests, don't ship it.\n     /// Right now, we do this only for Miri.\n     fn check_toolstate(&mut self) {\n-        let toolstates: Option<HashMap<String, String>> =\n-            File::open(self.input.join(\"toolstates-linux.json\"))\n+        for file in &[\"toolstates-linux.json\", \"toolstates-windows.json\"] {\n+            let toolstates: Option<HashMap<String, String>> = File::open(self.input.join(file))\n                 .ok()\n                 .and_then(|f| serde_json::from_reader(&f).ok());\n-        let toolstates = toolstates.unwrap_or_else(|| {\n-            println!(\n-                \"WARNING: `toolstates-linux.json` missing/malformed; \\\n-                assuming all tools failed\"\n-            );\n-            HashMap::default() // Use empty map if anything went wrong.\n-        });\n-        // Mark some tools as missing based on toolstate.\n-        if toolstates.get(\"miri\").map(|s| &*s as &str) != Some(\"test-pass\") {\n-            println!(\"Miri tests are not passing, removing component\");\n-            self.versions.disable_version(&PkgType::Miri);\n+            let toolstates = toolstates.unwrap_or_else(|| {\n+                println!(\"WARNING: `{}` missing/malformed; assuming all tools failed\", file);\n+                HashMap::default() // Use empty map if anything went wrong.\n+            });\n+            // Mark some tools as missing based on toolstate.\n+            if toolstates.get(\"miri\").map(|s| &*s as &str) != Some(\"test-pass\") {\n+                println!(\"Miri tests are not passing, removing component\");\n+                self.versions.disable_version(&PkgType::Miri);\n+                break;\n+            }\n         }\n     }\n "}]}