{"sha": "bc1aef3e7b46db3d3eee4eca80f6462f8a56bbeb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjMWFlZjNlN2I0NmRiM2QzZWVlNGVjYTgwZjY0NjJmOGE1NmJiZWI=", "commit": {"author": {"name": "Dzmitry Malyshau", "email": "kvarkus@gmail.com", "date": "2015-04-04T22:54:23Z"}, "committer": {"name": "Dzmitry Malyshau", "email": "kvarkus@gmail.com", "date": "2015-04-04T23:01:48Z"}, "message": "Removed explicit lifetimes for `get_mut`. Fixed the doc test.", "tree": {"sha": "b56787f557ac9be3162d31e3f2369c5f01854382", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b56787f557ac9be3162d31e3f2369c5f01854382"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc1aef3e7b46db3d3eee4eca80f6462f8a56bbeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc1aef3e7b46db3d3eee4eca80f6462f8a56bbeb", "html_url": "https://github.com/rust-lang/rust/commit/bc1aef3e7b46db3d3eee4eca80f6462f8a56bbeb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc1aef3e7b46db3d3eee4eca80f6462f8a56bbeb/comments", "author": {"login": "kvark", "id": 107301, "node_id": "MDQ6VXNlcjEwNzMwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/107301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvark", "html_url": "https://github.com/kvark", "followers_url": "https://api.github.com/users/kvark/followers", "following_url": "https://api.github.com/users/kvark/following{/other_user}", "gists_url": "https://api.github.com/users/kvark/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvark/subscriptions", "organizations_url": "https://api.github.com/users/kvark/orgs", "repos_url": "https://api.github.com/users/kvark/repos", "events_url": "https://api.github.com/users/kvark/events{/privacy}", "received_events_url": "https://api.github.com/users/kvark/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kvark", "id": 107301, "node_id": "MDQ6VXNlcjEwNzMwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/107301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvark", "html_url": "https://github.com/kvark", "followers_url": "https://api.github.com/users/kvark/followers", "following_url": "https://api.github.com/users/kvark/following{/other_user}", "gists_url": "https://api.github.com/users/kvark/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvark/subscriptions", "organizations_url": "https://api.github.com/users/kvark/orgs", "repos_url": "https://api.github.com/users/kvark/repos", "events_url": "https://api.github.com/users/kvark/events{/privacy}", "received_events_url": "https://api.github.com/users/kvark/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1d716ed4b98457fe6b713085ec3598c36aadadd", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1d716ed4b98457fe6b713085ec3598c36aadadd", "html_url": "https://github.com/rust-lang/rust/commit/c1d716ed4b98457fe6b713085ec3598c36aadadd"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "68bde1476118d79108a11112d905dd61ee376237", "filename": "src/liballoc/arc.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bc1aef3e7b46db3d3eee4eca80f6462f8a56bbeb/src%2Fliballoc%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc1aef3e7b46db3d3eee4eca80f6462f8a56bbeb/src%2Fliballoc%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Farc.rs?ref=bc1aef3e7b46db3d3eee4eca80f6462f8a56bbeb", "patch": "@@ -252,6 +252,7 @@ pub fn strong_count<T>(this: &Arc<T>) -> usize { this.inner().strong.load(SeqCst\n /// ```\n /// # #![feature(alloc)]\n /// extern crate alloc;\n+/// # fn main() {\n /// use alloc::arc::{Arc, get_mut};\n ///\n /// let mut x = Arc::new(3);\n@@ -260,10 +261,11 @@ pub fn strong_count<T>(this: &Arc<T>) -> usize { this.inner().strong.load(SeqCst\n ///\n /// let _y = x.clone();\n /// assert!(get_mut(&mut x).is_none());\n+/// # }\n /// ```\n #[inline]\n #[unstable(feature = \"alloc\")]\n-pub fn get_mut<'a, T>(this: &'a mut Arc<T>) -> Option<&'a mut T> {\n+pub fn get_mut<T>(this: &mut Arc<T>) -> Option<&mut T> {\n     if strong_count(this) == 1 && weak_count(this) == 0 {\n         // This unsafety is ok because we're guaranteed that the pointer\n         // returned is the *only* pointer that will ever be returned to T. Our"}, {"sha": "56822cfe28a3588296bba06b899ab749969c3235", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc1aef3e7b46db3d3eee4eca80f6462f8a56bbeb/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc1aef3e7b46db3d3eee4eca80f6462f8a56bbeb/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=bc1aef3e7b46db3d3eee4eca80f6462f8a56bbeb", "patch": "@@ -324,7 +324,7 @@ pub fn try_unwrap<T>(rc: Rc<T>) -> Result<T, Rc<T>> {\n /// ```\n #[inline]\n #[unstable(feature = \"alloc\")]\n-pub fn get_mut<'a, T>(rc: &'a mut Rc<T>) -> Option<&'a mut T> {\n+pub fn get_mut<T>(rc: &mut Rc<T>) -> Option<&mut T> {\n     if is_unique(rc) {\n         let inner = unsafe { &mut **rc._ptr };\n         Some(&mut inner.value)"}]}