{"sha": "5aa40dda855d7c0562655903e1daa018d78297e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhYTQwZGRhODU1ZDdjMDU2MjY1NTkwM2UxZGFhMDE4ZDc4Mjk3ZTc=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-05-13T13:54:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-13T13:54:11Z"}, "message": "Rollup merge of #85175 - GuillaumeGomez:rustdoc-cleanup, r=jsha\n\nRustdoc cleanup\n\nPart of https://github.com/rust-lang/rust/issues/83332. The goal of this PR is to remove a few unused things:\n\n * The \"loading content\" things are now unneeded.\n * Some toggle CSS rules were still there.\n * Some parts of the JS had a different indent, fixed it.\n\nr? `@jsha`", "tree": {"sha": "ea4bce19510fefd949fc09d3d19e2afdacd583b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea4bce19510fefd949fc09d3d19e2afdacd583b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5aa40dda855d7c0562655903e1daa018d78297e7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgnS+ECRBK7hj4Ov3rIwAA7YMIAIW4DkS9CxQWNghALJFEgrN+\nFdSyw+SzfISKDq7MXyKVw1EcFmc103RwKwdmz9s+IKzuQtz0feOim9zzd7d+iCjO\naUXpC859R+pDtL5htepwvH5BlERNDtwR24HPgPhIz/8JKM0X7z5dvll8PlXJHpg0\nh2Eg5ByCMVv6R648mupO+uV7SrVxSMzjdkSdALWkq+aAdu02EWalY04XU+HtYLbs\nDz3/AV8uKEgUeZN3C83OXkPJcyMAtTXuxkN6GNkKgZup7BqEr1HzferxfO2FyFTZ\npy1irzJTYTbw8g3m09+zHVat3X/2UeIHUeyltb4RIJnUHdkV53IYzRIxKhfhoQM=\n=ASK2\n-----END PGP SIGNATURE-----\n", "payload": "tree ea4bce19510fefd949fc09d3d19e2afdacd583b0\nparent 3db335b934d31cf3bdaaa248ca34aa25ef67f366\nparent cb91c6f24dfd522d07a4c7db6294dca9fbc2d20d\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1620914051 +0200\ncommitter GitHub <noreply@github.com> 1620914051 +0200\n\nRollup merge of #85175 - GuillaumeGomez:rustdoc-cleanup, r=jsha\n\nRustdoc cleanup\n\nPart of https://github.com/rust-lang/rust/issues/83332. The goal of this PR is to remove a few unused things:\n\n * The \"loading content\" things are now unneeded.\n * Some toggle CSS rules were still there.\n * Some parts of the JS had a different indent, fixed it.\n\nr? `@jsha`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5aa40dda855d7c0562655903e1daa018d78297e7", "html_url": "https://github.com/rust-lang/rust/commit/5aa40dda855d7c0562655903e1daa018d78297e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5aa40dda855d7c0562655903e1daa018d78297e7/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3db335b934d31cf3bdaaa248ca34aa25ef67f366", "url": "https://api.github.com/repos/rust-lang/rust/commits/3db335b934d31cf3bdaaa248ca34aa25ef67f366", "html_url": "https://github.com/rust-lang/rust/commit/3db335b934d31cf3bdaaa248ca34aa25ef67f366"}, {"sha": "cb91c6f24dfd522d07a4c7db6294dca9fbc2d20d", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb91c6f24dfd522d07a4c7db6294dca9fbc2d20d", "html_url": "https://github.com/rust-lang/rust/commit/cb91c6f24dfd522d07a4c7db6294dca9fbc2d20d"}], "stats": {"total": 424, "additions": 150, "deletions": 274}, "files": [{"sha": "20e82cf2caf388f6169ace9577668fcd4d8476c7", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 8, "deletions": 15, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/5aa40dda855d7c0562655903e1daa018d78297e7/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5aa40dda855d7c0562655903e1daa018d78297e7/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=5aa40dda855d7c0562655903e1daa018d78297e7", "patch": "@@ -573,10 +573,6 @@ fn item_trait(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, t: &clean::Tra\n         )\n     }\n \n-    fn write_loading_content(w: &mut Buffer, extra_content: &str) {\n-        write!(w, \"{}<span class=\\\"loading-content\\\">Loading content...</span>\", extra_content)\n-    }\n-\n     fn trait_item(w: &mut Buffer, cx: &Context<'_>, m: &clean::Item, t: &clean::Item) {\n         let name = m.name.as_ref().unwrap();\n         info!(\"Documenting {} on {:?}\", name, t.name);\n@@ -601,7 +597,7 @@ fn item_trait(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, t: &clean::Tra\n         for t in types {\n             trait_item(w, cx, t, it);\n         }\n-        write_loading_content(w, \"</div>\");\n+        w.write_str(\"</div>\");\n     }\n \n     if !consts.is_empty() {\n@@ -614,7 +610,7 @@ fn item_trait(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, t: &clean::Tra\n         for t in consts {\n             trait_item(w, cx, t, it);\n         }\n-        write_loading_content(w, \"</div>\");\n+        w.write_str(\"</div>\");\n     }\n \n     // Output the documentation for each function individually\n@@ -628,7 +624,7 @@ fn item_trait(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, t: &clean::Tra\n         for m in required {\n             trait_item(w, cx, m, it);\n         }\n-        write_loading_content(w, \"</div>\");\n+        w.write_str(\"</div>\");\n     }\n     if !provided.is_empty() {\n         write_small_section_header(\n@@ -640,7 +636,7 @@ fn item_trait(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, t: &clean::Tra\n         for m in provided {\n             trait_item(w, cx, m, it);\n         }\n-        write_loading_content(w, \"</div>\");\n+        w.write_str(\"</div>\");\n     }\n \n     // If there are methods directly on this trait object, render them here.\n@@ -703,7 +699,6 @@ fn item_trait(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, t: &clean::Tra\n                     &[],\n                 );\n             }\n-            write_loading_content(w, \"\");\n         }\n \n         write_small_section_header(\n@@ -715,7 +710,7 @@ fn item_trait(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, t: &clean::Tra\n         for implementor in concrete {\n             render_implementor(cx, implementor, it, w, &implementor_dups, &[]);\n         }\n-        write_loading_content(w, \"</div>\");\n+        w.write_str(\"</div>\");\n \n         if t.is_auto {\n             write_small_section_header(\n@@ -734,7 +729,7 @@ fn item_trait(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, t: &clean::Tra\n                     &collect_paths_for_type(implementor.inner_impl().for_.clone(), &cx.cache),\n                 );\n             }\n-            write_loading_content(w, \"</div>\");\n+            w.write_str(\"</div>\");\n         }\n     } else {\n         // even without any implementations to write in, we still want the heading and list, so the\n@@ -743,18 +738,16 @@ fn item_trait(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, t: &clean::Tra\n             w,\n             \"implementors\",\n             \"Implementors\",\n-            \"<div class=\\\"item-list\\\" id=\\\"implementors-list\\\">\",\n+            \"<div class=\\\"item-list\\\" id=\\\"implementors-list\\\"></div>\",\n         );\n-        write_loading_content(w, \"</div>\");\n \n         if t.is_auto {\n             write_small_section_header(\n                 w,\n                 \"synthetic-implementors\",\n                 \"Auto implementors\",\n-                \"<div class=\\\"item-list\\\" id=\\\"synthetic-implementors-list\\\">\",\n+                \"<div class=\\\"item-list\\\" id=\\\"synthetic-implementors-list\\\"></div>\",\n             );\n-            write_loading_content(w, \"</div>\");\n         }\n     }\n "}, {"sha": "ebc9ada4451e7813555b7e32487545f4f9a4fe81", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 139, "deletions": 157, "changes": 296, "blob_url": "https://github.com/rust-lang/rust/blob/5aa40dda855d7c0562655903e1daa018d78297e7/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/5aa40dda855d7c0562655903e1daa018d78297e7/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=5aa40dda855d7c0562655903e1daa018d78297e7", "patch": "@@ -156,152 +156,154 @@ function hideThemeButtonState() {\n     \"use strict\";\n \n     window.searchState = {\n-      loadingText: \"Loading search results...\",\n-      input: document.getElementsByClassName(\"search-input\")[0],\n-      outputElement: function() {\n-        return document.getElementById(\"search\");\n-      },\n-      title: null,\n-      titleBeforeSearch: document.title,\n-      timeout: null,\n-      // On the search screen, so you remain on the last tab you opened.\n-      //\n-      // 0 for \"In Names\"\n-      // 1 for \"In Parameters\"\n-      // 2 for \"In Return Types\"\n-      currentTab: 0,\n-      mouseMovedAfterSearch: true,\n-      clearInputTimeout: function() {\n-        if (searchState.timeout !== null) {\n-            clearTimeout(searchState.timeout);\n-            searchState.timeout = null;\n-        }\n-      },\n-      // Sets the focus on the search bar at the top of the page\n-      focus: function() {\n-          searchState.input.focus();\n-      },\n-      // Removes the focus from the search bar.\n-      defocus: function() {\n-          searchState.input.blur();\n-      },\n-      showResults: function(search) {\n-        if (search === null || typeof search === 'undefined') {\n-            search = searchState.outputElement();\n-        }\n-        addClass(main, \"hidden\");\n-        removeClass(search, \"hidden\");\n-        searchState.mouseMovedAfterSearch = false;\n-        document.title = searchState.title;\n-      },\n-      hideResults: function(search) {\n-        if (search === null || typeof search === 'undefined') {\n-            search = searchState.outputElement();\n-        }\n-        addClass(search, \"hidden\");\n-        removeClass(main, \"hidden\");\n-        document.title = searchState.titleBeforeSearch;\n-        // We also remove the query parameter from the URL.\n-        if (searchState.browserSupportsHistoryApi()) {\n-            history.replaceState(\"\", window.currentCrate + \" - Rust\",\n-                getNakedUrl() + window.location.hash);\n-        }\n-      },\n-      getQueryStringParams: function() {\n-        var params = {};\n-        window.location.search.substring(1).split(\"&\").\n-            map(function(s) {\n-                var pair = s.split(\"=\");\n-                params[decodeURIComponent(pair[0])] =\n-                    typeof pair[1] === \"undefined\" ? null : decodeURIComponent(pair[1]);\n-            });\n-        return params;\n-      },\n-      putBackSearch: function(search_input) {\n-        var search = searchState.outputElement();\n-        if (search_input.value !== \"\" && hasClass(search, \"hidden\")) {\n-            searchState.showResults(search);\n-            if (searchState.browserSupportsHistoryApi()) {\n-                var extra = \"?search=\" + encodeURIComponent(search_input.value);\n-                history.replaceState(search_input.value, \"\",\n-                    getNakedUrl() + extra + window.location.hash);\n+        loadingText: \"Loading search results...\",\n+        input: document.getElementsByClassName(\"search-input\")[0],\n+        outputElement: function() {\n+            return document.getElementById(\"search\");\n+        },\n+        title: null,\n+        titleBeforeSearch: document.title,\n+        timeout: null,\n+        // On the search screen, so you remain on the last tab you opened.\n+        //\n+        // 0 for \"In Names\"\n+        // 1 for \"In Parameters\"\n+        // 2 for \"In Return Types\"\n+        currentTab: 0,\n+        mouseMovedAfterSearch: true,\n+        clearInputTimeout: function() {\n+            if (searchState.timeout !== null) {\n+                clearTimeout(searchState.timeout);\n+                searchState.timeout = null;\n+            }\n+        },\n+        // Sets the focus on the search bar at the top of the page\n+        focus: function() {\n+            searchState.input.focus();\n+        },\n+        // Removes the focus from the search bar.\n+        defocus: function() {\n+            searchState.input.blur();\n+        },\n+        showResults: function(search) {\n+            if (search === null || typeof search === 'undefined') {\n+                search = searchState.outputElement();\n             }\n+            addClass(main, \"hidden\");\n+            removeClass(search, \"hidden\");\n+            searchState.mouseMovedAfterSearch = false;\n             document.title = searchState.title;\n-        }\n-      },\n-      browserSupportsHistoryApi: function() {\n-          return window.history && typeof window.history.pushState === \"function\";\n-      },\n-      setup: function() {\n-        var search_input = searchState.input;\n-        if (!searchState.input) {\n-            return;\n-        }\n-        function loadScript(url) {\n-            var script = document.createElement('script');\n-            script.src = url;\n-            document.head.append(script);\n-        }\n-\n-        var searchLoaded = false;\n-        function loadSearch() {\n-            if (!searchLoaded) {\n-                searchLoaded = true;\n-                loadScript(window.searchJS);\n-                loadScript(window.searchIndexJS);\n+        },\n+        hideResults: function(search) {\n+            if (search === null || typeof search === 'undefined') {\n+                search = searchState.outputElement();\n+            }\n+            addClass(search, \"hidden\");\n+            removeClass(main, \"hidden\");\n+            document.title = searchState.titleBeforeSearch;\n+            // We also remove the query parameter from the URL.\n+            if (searchState.browserSupportsHistoryApi()) {\n+                history.replaceState(\"\", window.currentCrate + \" - Rust\",\n+                    getNakedUrl() + window.location.hash);\n+            }\n+        },\n+        getQueryStringParams: function() {\n+            var params = {};\n+            window.location.search.substring(1).split(\"&\").\n+                map(function(s) {\n+                    var pair = s.split(\"=\");\n+                    params[decodeURIComponent(pair[0])] =\n+                        typeof pair[1] === \"undefined\" ? null : decodeURIComponent(pair[1]);\n+                });\n+            return params;\n+        },\n+        putBackSearch: function(search_input) {\n+            var search = searchState.outputElement();\n+            if (search_input.value !== \"\" && hasClass(search, \"hidden\")) {\n+                searchState.showResults(search);\n+                if (searchState.browserSupportsHistoryApi()) {\n+                    var extra = \"?search=\" + encodeURIComponent(search_input.value);\n+                    history.replaceState(search_input.value, \"\",\n+                        getNakedUrl() + extra + window.location.hash);\n+                }\n+                document.title = searchState.title;\n+            }\n+        },\n+        browserSupportsHistoryApi: function() {\n+            return window.history && typeof window.history.pushState === \"function\";\n+        },\n+        setup: function() {\n+            var search_input = searchState.input;\n+            if (!searchState.input) {\n+                return;\n+            }\n+            function loadScript(url) {\n+                var script = document.createElement('script');\n+                script.src = url;\n+                document.head.append(script);\n             }\n-        }\n \n-        search_input.addEventListener(\"focus\", function() {\n-            searchState.putBackSearch(this);\n-            search_input.origPlaceholder = searchState.input.placeholder;\n-            search_input.placeholder = \"Type your search here.\";\n-            loadSearch();\n-        });\n-        search_input.addEventListener(\"blur\", function() {\n-            search_input.placeholder = searchState.input.origPlaceholder;\n-        });\n+            var searchLoaded = false;\n+            function loadSearch() {\n+                if (!searchLoaded) {\n+                    searchLoaded = true;\n+                    loadScript(window.searchJS);\n+                    loadScript(window.searchIndexJS);\n+                }\n+            }\n \n-        document.addEventListener(\"mousemove\", function() {\n-          searchState.mouseMovedAfterSearch = true;\n-        });\n+            search_input.addEventListener(\"focus\", function() {\n+                searchState.putBackSearch(this);\n+                search_input.origPlaceholder = searchState.input.placeholder;\n+                search_input.placeholder = \"Type your search here.\";\n+                loadSearch();\n+            });\n+            search_input.addEventListener(\"blur\", function() {\n+                search_input.placeholder = searchState.input.origPlaceholder;\n+            });\n \n-        search_input.removeAttribute('disabled');\n+            document.addEventListener(\"mousemove\", function() {\n+                searchState.mouseMovedAfterSearch = true;\n+            });\n \n-        // `crates{version}.js` should always be loaded before this script, so we can use it safely.\n-        searchState.addCrateDropdown(window.ALL_CRATES);\n-        var params = searchState.getQueryStringParams();\n-        if (params.search !== undefined) {\n-            var search = searchState.outputElement();\n-            search.innerHTML = \"<h3 style=\\\"text-align: center;\\\">\" +\n-               searchState.loadingText + \"</h3>\";\n-            searchState.showResults(search);\n-            loadSearch();\n-        }\n-      },\n-      addCrateDropdown: function(crates) {\n-        var elem = document.getElementById(\"crate-search\");\n+            search_input.removeAttribute('disabled');\n+\n+            // `crates{version}.js` should always be loaded before this script, so we can use it\n+            // safely.\n+            searchState.addCrateDropdown(window.ALL_CRATES);\n+            var params = searchState.getQueryStringParams();\n+            if (params.search !== undefined) {\n+                var search = searchState.outputElement();\n+                search.innerHTML = \"<h3 style=\\\"text-align: center;\\\">\" +\n+                   searchState.loadingText + \"</h3>\";\n+                searchState.showResults(search);\n+                loadSearch();\n+            }\n+        },\n+        addCrateDropdown: function(crates) {\n+            var elem = document.getElementById(\"crate-search\");\n \n-        if (!elem) {\n-            return;\n-        }\n-        var savedCrate = getSettingValue(\"saved-filter-crate\");\n-        for (var i = 0, len = crates.length; i < len; ++i) {\n-            var option = document.createElement(\"option\");\n-            option.value = crates[i];\n-            option.innerText = crates[i];\n-            elem.appendChild(option);\n-            // Set the crate filter from saved storage, if the current page has the saved crate\n-            // filter.\n-            //\n-            // If not, ignore the crate filter -- we want to support filtering for crates on sites\n-            // like doc.rust-lang.org where the crates may differ from page to page while on the\n-            // same domain.\n-            if (crates[i] === savedCrate) {\n-                elem.value = savedCrate;\n+            if (!elem) {\n+                return;\n             }\n-        }\n-      },\n+            var savedCrate = getSettingValue(\"saved-filter-crate\");\n+            for (var i = 0, len = crates.length; i < len; ++i) {\n+                var option = document.createElement(\"option\");\n+                option.value = crates[i];\n+                option.innerText = crates[i];\n+                elem.appendChild(option);\n+                // Set the crate filter from saved storage, if the current page has the saved crate\n+                // filter.\n+                //\n+                // If not, ignore the crate filter -- we want to support filtering for crates on\n+                // sites like doc.rust-lang.org where the crates may differ from page to page while\n+                // on the\n+                // same domain.\n+                if (crates[i] === savedCrate) {\n+                    elem.value = savedCrate;\n+                }\n+            }\n+        },\n     };\n \n     function getPageId() {\n@@ -1045,26 +1047,6 @@ function hideThemeButtonState() {\n         };\n     }\n \n-    if (main) {\n-        onEachLazy(main.getElementsByClassName(\"loading-content\"), function(e) {\n-            e.remove();\n-        });\n-        onEachLazy(main.childNodes, function(e) {\n-            // Unhide the actual content once loading is complete. Headers get\n-            // flex treatment for their horizontal layout, divs get block treatment\n-            // for vertical layout (column-oriented flex layout for divs caused\n-            // errors in mobile browsers).\n-            if (e.tagName === \"H2\" || e.tagName === \"H3\") {\n-                var nextTagName = e.nextElementSibling.tagName;\n-                if (nextTagName === \"H2\" || nextTagName === \"H3\") {\n-                    e.nextElementSibling.style.display = \"flex\";\n-                } else if (nextTagName !== \"DETAILS\") {\n-                    e.nextElementSibling.style.display = \"block\";\n-                }\n-            }\n-        });\n-    }\n-\n     function buildHelperPopup() {\n         var popup = document.createElement(\"aside\");\n         addClass(popup, \"hidden\");"}, {"sha": "0a196edd53b1dd063900a27a45a598e8e49be2f8", "filename": "src/librustdoc/html/static/noscript.css", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/5aa40dda855d7c0562655903e1daa018d78297e7/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fnoscript.css", "raw_url": "https://github.com/rust-lang/rust/raw/5aa40dda855d7c0562655903e1daa018d78297e7/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fnoscript.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fnoscript.css?ref=5aa40dda855d7c0562655903e1daa018d78297e7", "patch": "@@ -4,31 +4,6 @@ of content is hidden by default (depending on the settings too), we have to over\n rules.\n */\n \n-#main > h2 + div, #main > h2 + h3, #main > h3 + div {\n-\tdisplay: block;\n-}\n-\n-.loading-content {\n-\tdisplay: none;\n-}\n-\n-#main > h2 + div, #main > h3 + div {\n-\tdisplay: block;\n-}\n-\n-#main > h2 + h3 {\n-\tdisplay: flex;\n-}\n-\n-#main .impl-items .hidden {\n-\tdisplay: block !important;\n-}\n-\n-#main .impl-items h4.hidden {\n-\t/* Without this rule, the version and the \"[src]\" span aren't on the same line as the header. */\n-\tdisplay: flex !important;\n-}\n-\n #main .attributes {\n \t/* Since there is no toggle (the \"[-]\") when JS is disabled, no need for this margin either. */\n \tmargin-left: 0 !important;"}, {"sha": "1b7eff4604f5f9f694a0e9d671bce9f541b33e56", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 2, "deletions": 73, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/5aa40dda855d7c0562655903e1daa018d78297e7/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/5aa40dda855d7c0562655903e1daa018d78297e7/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=5aa40dda855d7c0562655903e1daa018d78297e7", "patch": "@@ -145,7 +145,7 @@ h4.type.trait-impl, h4.associatedconstant.trait-impl, h4.associatedtype.trait-im\n \n h1, h2, h3, h4,\n .sidebar, a.source, .search-input, .content table td:first-child > a,\n-.collapse-toggle, div.item-list .out-of-band,\n+div.item-list .out-of-band,\n #source-sidebar, #sidebar-toggle,\n details.rustdoc-toggle > summary::before,\n details.undocumented > summary::before,\n@@ -431,11 +431,6 @@ nav.sub {\n #main > .docblock h2 { font-size: 1.15em; }\n #main > .docblock h3, #main > .docblock h4, #main > .docblock h5 { font-size: 1em; }\n \n-#main > h2 + div, #main > h2 + h3, #main > h3 + div {\n-\tdisplay: none; /* Changed to flex or block via js once the page is loaded */\n-\tflex-wrap: wrap;\n-}\n-\n .docblock h1 { font-size: 1em; }\n .docblock h2 { font-size: 0.95em; }\n .docblock h3, .docblock h4, .docblock h5 { font-size: 0.9em; }\n@@ -565,9 +560,6 @@ h4 > code, h3 > code, .invisible > code {\n .content .docblock >.impl-items table td {\n \tpadding: 0;\n }\n-.toggle-wrapper.marg-left > .collapse-toggle {\n-\tleft: -24px;\n-}\n .content .docblock > .impl-items .table-display, .impl-items table td {\n \tborder: none;\n }\n@@ -974,45 +966,6 @@ a.test-arrow:hover{\n \tfont-weight: 300;\n }\n \n-.collapse-toggle {\n-\tfont-weight: 300;\n-\tposition: absolute;\n-\tleft: -23px;\n-\ttop: 0;\n-}\n-\n-h3 > .collapse-toggle, h4 > .collapse-toggle {\n-\tfont-size: 0.8em;\n-\ttop: 5px;\n-}\n-\n-.toggle-wrapper > .collapse-toggle {\n-\tleft: -24px;\n-\tmargin-top: 0px;\n-}\n-\n-.toggle-wrapper {\n-\tposition: relative;\n-\tmargin-top: 0;\n-}\n-\n-.toggle-wrapper.collapsed {\n-\theight: 25px;\n-\ttransition: height .2s;\n-\tmargin-bottom: .6em;\n-}\n-\n-.collapse-toggle > .inner {\n-\tdisplay: inline-block;\n-\twidth: 1.2ch;\n-\ttext-align: center;\n-}\n-\n-.collapse-toggle.hidden-default {\n-\tposition: relative;\n-\tmargin-left: 20px;\n-}\n-\n .since + .srclink {\n \tdisplay: table-cell;\n \tpadding-left: 10px;\n@@ -1029,14 +982,6 @@ h3 > .collapse-toggle, h4 > .collapse-toggle {\n \tmargin-right: 5px;\n }\n \n-.toggle-wrapper > .collapse-toggle {\n-\tleft: 0;\n-}\n-\n-.variant + .toggle-wrapper + .docblock > p {\n-\tmargin-top: 5px;\n-}\n-\n .sub-variant, .sub-variant > h3 {\n \tmargin-top: 0px !important;\n \tpadding-top: 1px;\n@@ -1457,14 +1402,6 @@ h4 > .notable-traits {\n \t\tposition: inherit;\n \t}\n \n-\t.toggle-wrapper > .collapse-toggle {\n-\t\tleft: 0px;\n-\t}\n-\n-\t.toggle-wrapper {\n-\t\theight: 1.5em;\n-\t}\n-\n \t#search {\n \t\tmargin-left: 0;\n \t}\n@@ -1555,14 +1492,6 @@ h4 > .notable-traits {\n \t\tborder-bottom: 1px solid;\n \t}\n \n-\t.collapse-toggle {\n-\t\tleft: -20px;\n-\t}\n-\n-\t.impl > .collapse-toggle {\n-\t\tleft: -10px;\n-\t}\n-\n \t.item-list > details.rustdoc-toggle > summary:not(.hideme)::before {\n \t\tleft: -10px;\n \t}\n@@ -1602,7 +1531,7 @@ h4 > .notable-traits {\n }\n \n @media print {\n-\tnav.sub, .content .out-of-band, .collapse-toggle {\n+\tnav.sub, .content .out-of-band {\n \t\tdisplay: none;\n \t}\n }"}, {"sha": "a09d3eb1796b3ff6512f0600af6602a0ab5ea167", "filename": "src/librustdoc/html/static/search.js", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5aa40dda855d7c0562655903e1daa018d78297e7/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsearch.js", "raw_url": "https://github.com/rust-lang/rust/raw/5aa40dda855d7c0562655903e1daa018d78297e7/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsearch.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsearch.js?ref=5aa40dda855d7c0562655903e1daa018d78297e7", "patch": "@@ -1505,7 +1505,7 @@ window.initSearch = function(rawSearchIndex) {\n };\n \n if (window.searchIndex !== undefined) {\n-  initSearch(window.searchIndex);\n+    initSearch(window.searchIndex);\n }\n \n })();"}, {"sha": "13d1a475e4b2ad98877847eae397b4a9ce0b4ce4", "filename": "src/librustdoc/html/static/themes/ayu.css", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5aa40dda855d7c0562655903e1daa018d78297e7/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css", "raw_url": "https://github.com/rust-lang/rust/raw/5aa40dda855d7c0562655903e1daa018d78297e7/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css?ref=5aa40dda855d7c0562655903e1daa018d78297e7", "patch": "@@ -224,7 +224,6 @@ a {\n \tcolor: #39AFD7;\n }\n \n-.collapse-toggle,\n details.rustdoc-toggle > summary.hideme > span,\n details.rustdoc-toggle > summary::before,\n details.undocumented > summary::before {"}, {"sha": "945ca9b252e5f509c0642e946031f6e10486212d", "filename": "src/librustdoc/html/static/themes/dark.css", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5aa40dda855d7c0562655903e1daa018d78297e7/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "raw_url": "https://github.com/rust-lang/rust/raw/5aa40dda855d7c0562655903e1daa018d78297e7/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css?ref=5aa40dda855d7c0562655903e1daa018d78297e7", "patch": "@@ -186,7 +186,6 @@ a.test-arrow {\n \tcolor: #dedede;\n }\n \n-.collapse-toggle,\n details.rustdoc-toggle > summary.hideme > span,\n details.rustdoc-toggle > summary::before,\n details.undocumented > summary::before {"}, {"sha": "2ed638bdd4fa188c4e9a5fa0ef318232c85e7fbe", "filename": "src/librustdoc/html/static/themes/light.css", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5aa40dda855d7c0562655903e1daa018d78297e7/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "raw_url": "https://github.com/rust-lang/rust/raw/5aa40dda855d7c0562655903e1daa018d78297e7/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css?ref=5aa40dda855d7c0562655903e1daa018d78297e7", "patch": "@@ -184,7 +184,6 @@ a.test-arrow {\n \tcolor: #f5f5f5;\n }\n \n-.collapse-toggle,\n details.rustdoc-toggle > summary.hideme > span,\n details.rustdoc-toggle > summary::before,\n details.undocumented > summary::before {"}]}