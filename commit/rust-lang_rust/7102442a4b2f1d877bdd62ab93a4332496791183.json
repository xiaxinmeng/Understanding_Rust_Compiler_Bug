{"sha": "7102442a4b2f1d877bdd62ab93a4332496791183", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxMDI0NDJhNGIyZjFkODc3YmRkNjJhYjkzYTQzMzI0OTY3OTExODM=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-07-03T14:07:04Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-08-01T10:55:52Z"}, "message": "Use the authoring tool to create a new lint", "tree": {"sha": "eec3e84c02b210f9357f28ac9f56607cbddd5c5c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eec3e84c02b210f9357f28ac9f56607cbddd5c5c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7102442a4b2f1d877bdd62ab93a4332496791183", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlmAXjgACgkQpp+NIls6\n19lSLhAArJB8sAlSylWuFMv/yXnFfknDyp7qwkFA947HrrjSJgRmTrjY91IAfVU1\nHmiU41486aIVUAgcANnKLZzilk+GxYsLXiqllME1ZEwEA9zLyWt5NpNQQCP73+/b\nj6otEuinzG7+KDM6Q48mw2AbCf84gMfOqoqTA9xnBDdN0Fvp1ICob2VVewbJexy2\nftvpn+Mx2ZyWSun9nuU9GwlLhYCcbE86/eLazy7hzDQ5KuSm8htj54KzhDO0Z4LC\nGGnet61+5poMZGVlL+RjnZb6tdId3riePSoT4zRcpVoWdHio+5lMw037XgrZOSl0\n+WisMh/4zZPvhwD8XGr6bYgKjtxoX5NSwrUleubgjNSxv+MD0zInzB6R03J64soK\n1kzPy59wPIaVe0u5bX1DTRdDW5VTFX6SlxTGjpItBqHEf2GI4SmeNcRDEMmdf5uG\nYrTRGLXbmlNzsMLmg/lvb+NPgY5QzP9Iu+1mT4ngD/NcaGAwvmkpNgkGLzPIC4+W\nW60pjRGhhi4Yd7uTdh5GAElFz6TmWAeZphE4PFPnTXchf9gPcLqD50PR2I3UNJ7/\nhFpaaCX1gFVTZAe3reg8rxj6zt/bXqW9/dBwBvDo/faIQP4P6ZvWpl9GDAtulLjp\nWkdMawaxBmDFil/wgFMB2WSGK0j9BUZJm11MAFDd/3+f77nojLM=\n=ya14\n-----END PGP SIGNATURE-----", "payload": "tree eec3e84c02b210f9357f28ac9f56607cbddd5c5c\nparent 3a61b452a20e9ee48ac4d7368439276452071d50\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1499090824 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1501584952 +0200\n\nUse the authoring tool to create a new lint\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7102442a4b2f1d877bdd62ab93a4332496791183", "html_url": "https://github.com/rust-lang/rust/commit/7102442a4b2f1d877bdd62ab93a4332496791183", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7102442a4b2f1d877bdd62ab93a4332496791183/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a61b452a20e9ee48ac4d7368439276452071d50", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a61b452a20e9ee48ac4d7368439276452071d50", "html_url": "https://github.com/rust-lang/rust/commit/3a61b452a20e9ee48ac4d7368439276452071d50"}], "stats": {"total": 81, "additions": 76, "deletions": 5}, "files": [{"sha": "889f74d52e79a6211094631f3225a3dea86c94fd", "filename": "clippy_lints/src/bit_mask.rs", "status": "modified", "additions": 40, "deletions": 2, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/7102442a4b2f1d877bdd62ab93a4332496791183/clippy_lints%2Fsrc%2Fbit_mask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7102442a4b2f1d877bdd62ab93a4332496791183/clippy_lints%2Fsrc%2Fbit_mask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbit_mask.rs?ref=7102442a4b2f1d877bdd62ab93a4332496791183", "patch": "@@ -4,7 +4,8 @@ use rustc::lint::*;\n use rustc_const_eval::lookup_const_by_id;\n use syntax::ast::LitKind;\n use syntax::codemap::Span;\n-use utils::span_lint;\n+use utils::{span_lint, span_lint_and_then};\n+use utils::sugg::Sugg;\n \n /// **What it does:** Checks for incompatible bit masks in comparisons.\n ///\n@@ -70,12 +71,29 @@ declare_lint! {\n     \"expressions where a bit mask will be rendered useless by a comparison, e.g. `(x | 1) > 2`\"\n }\n \n+/// **What it does:** Checks for bit masks that can be replaced by a call\n+/// to `trailing_zeros`\n+///\n+/// **Why is this bad?** `x.trailing_zeros() > 4` is much clearer than `x & 15 == 0`\n+///\n+/// **Known problems:** None\n+///\n+/// **Example:**\n+/// ```rust\n+/// x & 0x1111 == 0\n+/// ```\n+declare_lint! {\n+    pub VERBOSE_BIT_MASK,\n+    Warn,\n+    \"expressions where a bit mask is less readable than the corresponding method call\"\n+}\n+\n #[derive(Copy,Clone)]\n pub struct BitMask;\n \n impl LintPass for BitMask {\n     fn get_lints(&self) -> LintArray {\n-        lint_array!(BAD_BIT_MASK, INEFFECTIVE_BIT_MASK)\n+        lint_array!(BAD_BIT_MASK, INEFFECTIVE_BIT_MASK, VERBOSE_BIT_MASK)\n     }\n }\n \n@@ -90,6 +108,26 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for BitMask {\n                 }\n             }\n         }\n+        if_let_chain!{[\n+            let Expr_::ExprBinary(ref op, ref left, ref right) = e.node,\n+            BinOp_::BiEq == op.node,\n+            let Expr_::ExprBinary(ref op1, ref left1, ref right1) = left.node,\n+            BinOp_::BiBitAnd == op1.node,\n+            let Expr_::ExprLit(ref lit) = right1.node,\n+            let LitKind::Int(n, _) = lit.node,\n+            let Expr_::ExprLit(ref lit1) = right.node,\n+            let LitKind::Int(0, _) = lit1.node,\n+            n.leading_zeros() == n.count_zeros(),\n+        ], {\n+            span_lint_and_then(cx,\n+                               VERBOSE_BIT_MASK,\n+                               e.span,\n+                               \"bit mask could be simplified with a call to `trailing_zeros`\",\n+                               |db| {\n+                let sugg = Sugg::hir(cx, left1, \"...\").maybe_par();\n+                db.span_suggestion(e.span, \"try\", format!(\"{}.trailing_zeros() > {}\", sugg, n.count_ones()));\n+            });\n+        }}\n     }\n }\n "}, {"sha": "0c1c14f5b8c89dc6bc9403e818761d7f4a6ae266", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7102442a4b2f1d877bdd62ab93a4332496791183/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7102442a4b2f1d877bdd62ab93a4332496791183/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=7102442a4b2f1d877bdd62ab93a4332496791183", "patch": "@@ -380,6 +380,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n         attrs::USELESS_ATTRIBUTE,\n         bit_mask::BAD_BIT_MASK,\n         bit_mask::INEFFECTIVE_BIT_MASK,\n+        bit_mask::VERBOSE_BIT_MASK,\n         blacklisted_name::BLACKLISTED_NAME,\n         block_in_if_condition::BLOCK_IN_IF_CONDITION_EXPR,\n         block_in_if_condition::BLOCK_IN_IF_CONDITION_STMT,"}, {"sha": "64f5e0f2045620a554dd4866eecb2d35560b7457", "filename": "clippy_tests/examples/bit_masks.stderr", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7102442a4b2f1d877bdd62ab93a4332496791183/clippy_tests%2Fexamples%2Fbit_masks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7102442a4b2f1d877bdd62ab93a4332496791183/clippy_tests%2Fexamples%2Fbit_masks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fbit_masks.stderr?ref=7102442a4b2f1d877bdd62ab93a4332496791183", "patch": "@@ -6,6 +6,20 @@ error: &-masking with zero\n    |\n    = note: `-D bad-bit-mask` implied by `-D warnings`\n \n+error: bit mask could be simplified with a call to `trailing_zeros`\n+  --> bit_masks.rs:12:5\n+   |\n+12 |     x & 0 == 0;\n+   |     ^^^^^^^^^^ help: try `x.trailing_zeros() > 0`\n+   |\n+   = note: `-D verbose-bit-mask` implied by `-D warnings`\n+\n+error: bit mask could be simplified with a call to `trailing_zeros`\n+  --> bit_masks.rs:14:5\n+   |\n+14 |     x & 1 == 0; //ok, compared with zero\n+   |     ^^^^^^^^^^ help: try `x.trailing_zeros() > 1`\n+\n error: incompatible bit mask: `_ & 2` can never be equal to `1`\n   --> bit_masks.rs:15:5\n    |\n@@ -92,7 +106,7 @@ error: ineffective bit mask: `x | 1` compared to `8`, is the same as x compared\n 55 |     x | 1 >= 8;\n    |     ^^^^^^^^^^\n \n-error: aborting due to 15 previous errors\n+error: aborting due to 17 previous errors\n \n \n To learn more, run the command again with --verbose."}, {"sha": "4fb608c7bf15906df5c8530c4c024c70434cd5e2", "filename": "clippy_tests/examples/trailing_zeros.stderr", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7102442a4b2f1d877bdd62ab93a4332496791183/clippy_tests%2Fexamples%2Ftrailing_zeros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7102442a4b2f1d877bdd62ab93a4332496791183/clippy_tests%2Fexamples%2Ftrailing_zeros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Ftrailing_zeros.stderr?ref=7102442a4b2f1d877bdd62ab93a4332496791183", "patch": "@@ -0,0 +1,18 @@\n+error: bit mask could be simplified with a call to `trailing_zeros`\n+ --> trailing_zeros.rs:7:31\n+  |\n+7 |     let _ = #[clippy(author)] (x & 0b1111 == 0);  // suggest trailing_zeros\n+  |                               ^^^^^^^^^^^^^^^^^ help: try `x.trailing_zeros() > 4`\n+  |\n+  = note: `-D verbose-bit-mask` implied by `-D warnings`\n+\n+error: bit mask could be simplified with a call to `trailing_zeros`\n+ --> trailing_zeros.rs:8:13\n+  |\n+8 |     let _ = x & 0b11111 == 0; // suggest trailing_zeros\n+  |             ^^^^^^^^^^^^^^^^ help: try `x.trailing_zeros() > 5`\n+\n+error: aborting due to 2 previous errors\n+\n+\n+To learn more, run the command again with --verbose."}, {"sha": "98025316da4d22cf69be068693486b5382d8fa6f", "filename": "clippy_tests/examples/trailing_zeros.stdout", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7102442a4b2f1d877bdd62ab93a4332496791183/clippy_tests%2Fexamples%2Ftrailing_zeros.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/7102442a4b2f1d877bdd62ab93a4332496791183/clippy_tests%2Fexamples%2Ftrailing_zeros.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Ftrailing_zeros.stdout?ref=7102442a4b2f1d877bdd62ab93a4332496791183", "patch": "@@ -9,6 +9,6 @@ if_let_chain!{[\n     let LitKind::Int(15, _) = lit.node,\n     let Expr_::ExprLit(ref lit1) = right.node,\n     let LitKind::Int(0, _) = lit1.node,\n-]} {\n+], {\n     // report your lint here\n-}\n+}}"}]}