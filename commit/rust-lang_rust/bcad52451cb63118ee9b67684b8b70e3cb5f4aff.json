{"sha": "bcad52451cb63118ee9b67684b8b70e3cb5f4aff", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjYWQ1MjQ1MWNiNjMxMThlZTliNjc2ODRiOGI3MGUzY2I1ZjRhZmY=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-04-29T00:44:28Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-04-29T00:45:35Z"}, "message": "Actually hit the no-growth path on vec-append.", "tree": {"sha": "ceaf47380983df319a29b5caf5c7d6cf56cc211a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ceaf47380983df319a29b5caf5c7d6cf56cc211a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bcad52451cb63118ee9b67684b8b70e3cb5f4aff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bcad52451cb63118ee9b67684b8b70e3cb5f4aff", "html_url": "https://github.com/rust-lang/rust/commit/bcad52451cb63118ee9b67684b8b70e3cb5f4aff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bcad52451cb63118ee9b67684b8b70e3cb5f4aff/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66e5dfbde6ce7a84158d39f4b19acc420b1f7c5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/66e5dfbde6ce7a84158d39f4b19acc420b1f7c5a", "html_url": "https://github.com/rust-lang/rust/commit/66e5dfbde6ce7a84158d39f4b19acc420b1f7c5a"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "14eb2e08d89983bad0b34a3336f825d5758e0050", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/bcad52451cb63118ee9b67684b8b70e3cb5f4aff/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcad52451cb63118ee9b67684b8b70e3cb5f4aff/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=bcad52451cb63118ee9b67684b8b70e3cb5f4aff", "patch": "@@ -5075,9 +5075,19 @@ fn trans_expr(@block_ctxt cx, @ast.expr e) -> result {\n             auto t = node_ann_type(cx.fcx.lcx.ccx, ann);\n             auto lhs_res = trans_lval(cx, dst);\n             check (lhs_res.is_mem);\n-            auto lhs_val = load_if_immediate(lhs_res.res.bcx,\n-                                                lhs_res.res.val, t);\n             auto rhs_res = trans_expr(lhs_res.res.bcx, src);\n+            if (ty.type_is_sequence(cx.fcx.lcx.ccx.tcx, t)) {\n+                alt (op) {\n+                    case (ast.add) {\n+                        ret trans_vec_append(rhs_res.bcx, t,\n+                                             lhs_res.res.val,\n+                                             rhs_res.val);\n+                    }\n+                    case (_) { }\n+                }\n+            }\n+            auto lhs_val = load_if_immediate(rhs_res.bcx,\n+                                             lhs_res.res.val, t);\n             auto v = trans_eager_binop(rhs_res.bcx, op, t,\n                                        lhs_val, rhs_res.val);\n             // FIXME: calculate copy init-ness in typestate."}]}