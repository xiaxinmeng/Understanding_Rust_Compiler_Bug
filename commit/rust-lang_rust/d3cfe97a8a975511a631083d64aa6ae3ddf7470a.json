{"sha": "d3cfe97a8a975511a631083d64aa6ae3ddf7470a", "node_id": "C_kwDOAAsO6NoAKGQzY2ZlOTdhOGE5NzU1MTFhNjMxMDgzZDY0YWE2YWUzZGRmNzQ3MGE", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2023-01-19T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2023-01-19T21:00:33Z"}, "message": "Custom MIR: Support binary and unary operations", "tree": {"sha": "050278403fe457aa185751f0eca18ea28d24b425", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/050278403fe457aa185751f0eca18ea28d24b425"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3cfe97a8a975511a631083d64aa6ae3ddf7470a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3cfe97a8a975511a631083d64aa6ae3ddf7470a", "html_url": "https://github.com/rust-lang/rust/commit/d3cfe97a8a975511a631083d64aa6ae3ddf7470a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3cfe97a8a975511a631083d64aa6ae3ddf7470a/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c83bd03a9d94af35c97a6b8b595d40e291af84a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c83bd03a9d94af35c97a6b8b595d40e291af84a", "html_url": "https://github.com/rust-lang/rust/commit/4c83bd03a9d94af35c97a6b8b595d40e291af84a"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "2560eaee433727ad5360489b67db12b3d49ace4e", "filename": "compiler/rustc_mir_build/src/build/custom/parse/instruction.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d3cfe97a8a975511a631083d64aa6ae3ddf7470a/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fcustom%2Fparse%2Finstruction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3cfe97a8a975511a631083d64aa6ae3ddf7470a/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fcustom%2Fparse%2Finstruction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fcustom%2Fparse%2Finstruction.rs?ref=d3cfe97a8a975511a631083d64aa6ae3ddf7470a", "patch": "@@ -141,6 +141,12 @@ impl<'tcx, 'body> ParseCtxt<'tcx, 'body> {\n             ExprKind::AddressOf { mutability, arg } => Ok(\n                 Rvalue::AddressOf(*mutability, self.parse_place(*arg)?)\n             ),\n+            ExprKind::Binary { op, lhs, rhs } =>  Ok(\n+                Rvalue::BinaryOp(*op, Box::new((self.parse_operand(*lhs)?, self.parse_operand(*rhs)?)))\n+            ),\n+            ExprKind::Unary { op, arg } => Ok(\n+                Rvalue::UnaryOp(*op, self.parse_operand(*arg)?)\n+            ),\n             _ => self.parse_operand(expr_id).map(Rvalue::Use),\n         )\n     }"}, {"sha": "a0c5f1b40dbb72957fccd3bfb94d64d2add4de86", "filename": "tests/mir-opt/building/custom/operators.f.built.after.mir", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/d3cfe97a8a975511a631083d64aa6ae3ddf7470a/tests%2Fmir-opt%2Fbuilding%2Fcustom%2Foperators.f.built.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/d3cfe97a8a975511a631083d64aa6ae3ddf7470a/tests%2Fmir-opt%2Fbuilding%2Fcustom%2Foperators.f.built.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fbuilding%2Fcustom%2Foperators.f.built.after.mir?ref=d3cfe97a8a975511a631083d64aa6ae3ddf7470a", "patch": "@@ -0,0 +1,26 @@\n+// MIR for `f` after built\n+\n+fn f(_1: i32, _2: bool) -> i32 {\n+    let mut _0: i32;                     // return place in scope 0 at $DIR/operators.rs:+0:30: +0:33\n+\n+    bb0: {\n+        _1 = Neg(_1);                    // scope 0 at $DIR/operators.rs:+2:9: +2:15\n+        _2 = Not(_2);                    // scope 0 at $DIR/operators.rs:+3:9: +3:15\n+        _1 = Add(_1, _1);                // scope 0 at $DIR/operators.rs:+4:9: +4:18\n+        _1 = Sub(_1, _1);                // scope 0 at $DIR/operators.rs:+5:9: +5:18\n+        _1 = Mul(_1, _1);                // scope 0 at $DIR/operators.rs:+6:9: +6:18\n+        _1 = Div(_1, _1);                // scope 0 at $DIR/operators.rs:+7:9: +7:18\n+        _1 = Rem(_1, _1);                // scope 0 at $DIR/operators.rs:+8:9: +8:18\n+        _1 = BitXor(_1, _1);             // scope 0 at $DIR/operators.rs:+9:9: +9:18\n+        _1 = BitAnd(_1, _1);             // scope 0 at $DIR/operators.rs:+10:9: +10:18\n+        _1 = Shl(_1, _1);                // scope 0 at $DIR/operators.rs:+11:9: +11:19\n+        _1 = Shr(_1, _1);                // scope 0 at $DIR/operators.rs:+12:9: +12:19\n+        _2 = Eq(_1, _1);                 // scope 0 at $DIR/operators.rs:+13:9: +13:19\n+        _2 = Lt(_1, _1);                 // scope 0 at $DIR/operators.rs:+14:9: +14:18\n+        _2 = Le(_1, _1);                 // scope 0 at $DIR/operators.rs:+15:9: +15:19\n+        _2 = Ge(_1, _1);                 // scope 0 at $DIR/operators.rs:+16:9: +16:19\n+        _2 = Gt(_1, _1);                 // scope 0 at $DIR/operators.rs:+17:9: +17:18\n+        _0 = _1;                         // scope 0 at $DIR/operators.rs:+18:9: +18:16\n+        return;                          // scope 0 at $DIR/operators.rs:+19:9: +19:17\n+    }\n+}"}, {"sha": "51f80c66392a10046f7b295b76b4d6a5d993d836", "filename": "tests/mir-opt/building/custom/operators.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/d3cfe97a8a975511a631083d64aa6ae3ddf7470a/tests%2Fmir-opt%2Fbuilding%2Fcustom%2Foperators.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3cfe97a8a975511a631083d64aa6ae3ddf7470a/tests%2Fmir-opt%2Fbuilding%2Fcustom%2Foperators.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fbuilding%2Fcustom%2Foperators.rs?ref=d3cfe97a8a975511a631083d64aa6ae3ddf7470a", "patch": "@@ -0,0 +1,28 @@\n+// compile-flags: --crate-type=lib\n+#![feature(custom_mir, core_intrinsics, inline_const)]\n+use std::intrinsics::mir::*;\n+\n+// EMIT_MIR operators.f.built.after.mir\n+#[custom_mir(dialect = \"built\")]\n+pub fn f(a: i32, b: bool) -> i32 {\n+    mir!({\n+        a = -a;\n+        b = !b;\n+        a = a + a;\n+        a = a - a;\n+        a = a * a;\n+        a = a / a;\n+        a = a % a;\n+        a = a ^ a;\n+        a = a & a;\n+        a = a << a;\n+        a = a >> a;\n+        b = a == a;\n+        b = a < a;\n+        b = a <= a;\n+        b = a >= a;\n+        b = a > a;\n+        RET = a;\n+        Return()\n+    })\n+}"}]}