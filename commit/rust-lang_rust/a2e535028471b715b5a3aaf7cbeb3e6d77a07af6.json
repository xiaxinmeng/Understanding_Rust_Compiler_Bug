{"sha": "a2e535028471b715b5a3aaf7cbeb3e6d77a07af6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyZTUzNTAyODQ3MWI3MTViNWEzYWFmN2NiZWIzZTZkNzdhMDdhZjY=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-04-19T16:17:24Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-04-19T16:42:59Z"}, "message": "iterator: add a bit of documentation", "tree": {"sha": "7d87d7ab5462dabfb2d5541f6d3d132c0dfd1eb2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d87d7ab5462dabfb2d5541f6d3d132c0dfd1eb2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2e535028471b715b5a3aaf7cbeb3e6d77a07af6", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2e535028471b715b5a3aaf7cbeb3e6d77a07af6", "html_url": "https://github.com/rust-lang/rust/commit/a2e535028471b715b5a3aaf7cbeb3e6d77a07af6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2e535028471b715b5a3aaf7cbeb3e6d77a07af6/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d81b7b286d2be46474022935c5ac111dafd5c4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d81b7b286d2be46474022935c5ac111dafd5c4d", "html_url": "https://github.com/rust-lang/rust/commit/1d81b7b286d2be46474022935c5ac111dafd5c4d"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "4929b1b8dba377a54a890760578a3caaae088771", "filename": "src/libcore/iterator.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a2e535028471b715b5a3aaf7cbeb3e6d77a07af6/src%2Flibcore%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2e535028471b715b5a3aaf7cbeb3e6d77a07af6/src%2Flibcore%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiterator.rs?ref=a2e535028471b715b5a3aaf7cbeb3e6d77a07af6", "patch": "@@ -8,7 +8,14 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Composable iterator objects\n+/*! Composable external iterators\n+\n+The `Iterator` trait defines an interface for objects which implement iteration as a state machine.\n+\n+Algorithms like `zip` are provided as `Iterator` implementations which wrap other objects\n+implementing the `Iterator` trait.\n+\n+*/\n \n use prelude::*;\n \n@@ -17,6 +24,10 @@ pub trait Iterator<A> {\n     fn next(&mut self) -> Option<A>;\n }\n \n+/// Iterator adaptors provided for every `Iterator` implementation. The adaptor objects are also\n+/// implementations of the `Iterator` trait.\n+///\n+/// In the future these will be default methods instead of a utility trait.\n pub trait IteratorUtil<A> {\n     fn chain(self, other: Self) -> ChainIterator<Self>;\n     fn zip<B, U: Iterator<B>>(self, other: U) -> ZipIterator<Self, U>;\n@@ -31,6 +42,10 @@ pub trait IteratorUtil<A> {\n     fn advance(&mut self, f: &fn(A) -> bool);\n }\n \n+/// Iterator adaptors provided for every `Iterator` implementation. The adaptor objects are also\n+/// implementations of the `Iterator` trait.\n+///\n+/// In the future these will be default methods instead of a utility trait.\n impl<A, T: Iterator<A>> IteratorUtil<A> for T {\n     #[inline(always)]\n     fn chain(self, other: T) -> ChainIterator<T> {"}]}