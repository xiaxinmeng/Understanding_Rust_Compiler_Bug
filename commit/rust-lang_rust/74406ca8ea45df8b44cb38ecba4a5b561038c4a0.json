{"sha": "74406ca8ea45df8b44cb38ecba4a5b561038c4a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0NDA2Y2E4ZWE0NWRmOGI0NGNiMzhlY2JhNGE1YjU2MTAzOGM0YTA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-21T11:02:14Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-21T11:02:14Z"}, "message": "introduce completion_item module", "tree": {"sha": "fcff4bfc73f566fc958862e5491d434d2fff0176", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fcff4bfc73f566fc958862e5491d434d2fff0176"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74406ca8ea45df8b44cb38ecba4a5b561038c4a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74406ca8ea45df8b44cb38ecba4a5b561038c4a0", "html_url": "https://github.com/rust-lang/rust/commit/74406ca8ea45df8b44cb38ecba4a5b561038c4a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74406ca8ea45df8b44cb38ecba4a5b561038c4a0/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "463e5af3f2ff54b74e4aeb73e75047c00b6339be", "url": "https://api.github.com/repos/rust-lang/rust/commits/463e5af3f2ff54b74e4aeb73e75047c00b6339be", "html_url": "https://github.com/rust-lang/rust/commit/463e5af3f2ff54b74e4aeb73e75047c00b6339be"}], "stats": {"total": 75, "additions": 54, "deletions": 21}, "files": [{"sha": "ed1b6dd0c5e31ae770f38b14f5228c9a15bfec78", "filename": "crates/ra_analysis/src/completion.rs", "status": "modified", "additions": 7, "deletions": 16, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/74406ca8ea45df8b44cb38ecba4a5b561038c4a0/crates%2Fra_analysis%2Fsrc%2Fcompletion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74406ca8ea45df8b44cb38ecba4a5b561038c4a0/crates%2Fra_analysis%2Fsrc%2Fcompletion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion.rs?ref=74406ca8ea45df8b44cb38ecba4a5b561038c4a0", "patch": "@@ -1,3 +1,4 @@\n+mod completion_item;\n mod reference_completion;\n \n use ra_editor::find_node_at_offset;\n@@ -17,15 +18,7 @@ use crate::{\n     Cancelable, FilePosition\n };\n \n-#[derive(Debug)]\n-pub struct CompletionItem {\n-    /// What user sees in pop-up\n-    pub label: String,\n-    /// What string is used for filtering, defaults to label\n-    pub lookup: Option<String>,\n-    /// What is inserted, defaults to label\n-    pub snippet: Option<String>,\n-}\n+pub use crate::completion::completion_item::CompletionItem;\n \n pub(crate) fn completions(\n     db: &db::RootDatabase,\n@@ -63,6 +56,10 @@ pub(crate) fn completions(\n     Ok(res)\n }\n \n+/// Complete repeated parametes, both name and type. For example, if all\n+/// functions in a file have a `spam: &mut Spam` parameter, a completion with\n+/// `spam: &mut Spam` insert text/label and `spam` lookup string will be\n+/// suggested.\n fn param_completions(ctx: SyntaxNodeRef, acc: &mut Vec<CompletionItem>) {\n     let mut params = FxHashMap::default();\n     for node in ctx.ancestors() {\n@@ -81,13 +78,7 @@ fn param_completions(ctx: SyntaxNodeRef, acc: &mut Vec<CompletionItem>) {\n                 Some((label, lookup))\n             }\n         })\n-        .for_each(|(label, lookup)| {\n-            acc.push(CompletionItem {\n-                label,\n-                lookup: Some(lookup),\n-                snippet: None,\n-            })\n-        });\n+        .for_each(|(label, lookup)| CompletionItem::new(label).lookup_by(lookup).add_to(acc));\n \n     fn process<'a, N: ast::FnDefOwner<'a>>(\n         node: N,"}, {"sha": "309b0108d2063ee93e125362cd0ea7966e64910f", "filename": "crates/ra_analysis/src/completion/completion_item.rs", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/74406ca8ea45df8b44cb38ecba4a5b561038c4a0/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74406ca8ea45df8b44cb38ecba4a5b561038c4a0/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcompletion_item.rs?ref=74406ca8ea45df8b44cb38ecba4a5b561038c4a0", "patch": "@@ -0,0 +1,44 @@\n+#[derive(Debug)]\n+pub struct CompletionItem {\n+    /// What user sees in pop-up in the UI.\n+    pub label: String,\n+    /// What string is used for filtering, defaults to label.\n+    pub lookup: Option<String>,\n+    /// What is inserted, defaults to label.\n+    pub snippet: Option<String>,\n+}\n+\n+impl CompletionItem {\n+    pub(crate) fn new(label: impl Into<String>) -> Builder {\n+        let label = label.into();\n+        Builder {\n+            label,\n+            lookup: None,\n+            snippet: None,\n+        }\n+    }\n+}\n+\n+pub(crate) struct Builder {\n+    label: String,\n+    lookup: Option<String>,\n+    snippet: Option<String>,\n+}\n+\n+impl Builder {\n+    pub fn add_to(self, acc: &mut Vec<CompletionItem>) {\n+        acc.push(self.build())\n+    }\n+\n+    pub fn build(self) -> CompletionItem {\n+        CompletionItem {\n+            label: self.label,\n+            lookup: self.lookup,\n+            snippet: self.snippet,\n+        }\n+    }\n+    pub fn lookup_by(mut self, lookup: impl Into<String>) -> Builder {\n+        self.lookup = Some(lookup.into());\n+        self\n+    }\n+}"}, {"sha": "457ca13ccd6c4882ba6998c8eb7b327bd367a35e", "filename": "crates/ra_analysis/src/completion/reference_completion.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/74406ca8ea45df8b44cb38ecba4a5b561038c4a0/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Freference_completion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74406ca8ea45df8b44cb38ecba4a5b561038c4a0/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Freference_completion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Freference_completion.rs?ref=74406ca8ea45df8b44cb38ecba4a5b561038c4a0", "patch": "@@ -6,11 +6,9 @@ use ra_syntax::{\n     ast::{self, LoopBodyOwner},\n     SyntaxKind::*,\n };\n-use     hir::{\n-        self,\n-        FnScopes,\n-        Def,\n-        Path,\n+use hir::{\n+    self,\n+    FnScopes, Def, Path\n };\n \n use crate::{"}]}