{"sha": "a7ef9bac4e2ffd8120b4053c8bfc3132e047fa45", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3ZWY5YmFjNGUyZmZkODEyMGI0MDUzYzhiZmMzMTMyZTA0N2ZhNDU=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-05-02T02:08:11Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-05-02T02:08:11Z"}, "message": "Formating", "tree": {"sha": "c44487c1bfc21fc9bada08c82fc3fa0636740a12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c44487c1bfc21fc9bada08c82fc3fa0636740a12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7ef9bac4e2ffd8120b4053c8bfc3132e047fa45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7ef9bac4e2ffd8120b4053c8bfc3132e047fa45", "html_url": "https://github.com/rust-lang/rust/commit/a7ef9bac4e2ffd8120b4053c8bfc3132e047fa45", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7ef9bac4e2ffd8120b4053c8bfc3132e047fa45/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b2985ebc7327756d562d6af153a8b32ffaa8471", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b2985ebc7327756d562d6af153a8b32ffaa8471", "html_url": "https://github.com/rust-lang/rust/commit/6b2985ebc7327756d562d6af153a8b32ffaa8471"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "8f15d215b6be54bff60a61aa96e988f495b8730b", "filename": "crates/ra_mbe/src/tt_cursor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7ef9bac4e2ffd8120b4053c8bfc3132e047fa45/crates%2Fra_mbe%2Fsrc%2Ftt_cursor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7ef9bac4e2ffd8120b4053c8bfc3132e047fa45/crates%2Fra_mbe%2Fsrc%2Ftt_cursor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Ftt_cursor.rs?ref=a7ef9bac4e2ffd8120b4053c8bfc3132e047fa45", "patch": "@@ -152,7 +152,7 @@ impl<'a> TtCursor<'a> {\n     pub(crate) fn eat_vis(&mut self) -> Option<tt::TokenTree> {\n         let parser = Parser::new(&mut self.pos, self.subtree);\n         parser.parse_vis()\n-        }\n+    }\n \n     pub(crate) fn expect_char(&mut self, char: char) -> Result<(), ParseError> {\n         if self.at_char(char) {"}]}