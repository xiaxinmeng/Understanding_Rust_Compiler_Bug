{"sha": "62ea0c8c394d80669a336609181592effd887288", "node_id": "C_kwDOAAsO6NoAKDYyZWEwYzhjMzk0ZDgwNjY5YTMzNjYwOTE4MTU5MmVmZmQ4ODcyODg", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-22T20:00:17Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-22T20:00:17Z"}, "message": "Auto merge of #2144 - matthiaskrgr:stderrfix, r=RalfJung\n\nmute_stdout_stderr: mute stderr instead of stdin\n\nshould fix #2143\n\nnote: this is entirely untested, I was getting tons of errors on `cargo test` because of some missing setup.\nI hope that CI can tell me if this works or not :see_no_evil:\n\nr? `@oli-obk`", "tree": {"sha": "0ff9ad29d6d9faf14bde658f4ba3b070c2d7c163", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ff9ad29d6d9faf14bde658f4ba3b070c2d7c163"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62ea0c8c394d80669a336609181592effd887288", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62ea0c8c394d80669a336609181592effd887288", "html_url": "https://github.com/rust-lang/rust/commit/62ea0c8c394d80669a336609181592effd887288", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62ea0c8c394d80669a336609181592effd887288/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3227cfc7efb8fd9ca1aa53a92e0a65d70216748", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3227cfc7efb8fd9ca1aa53a92e0a65d70216748", "html_url": "https://github.com/rust-lang/rust/commit/e3227cfc7efb8fd9ca1aa53a92e0a65d70216748"}, {"sha": "89da571b5d7d35220dd65c670caf66e25c10a892", "url": "https://api.github.com/repos/rust-lang/rust/commits/89da571b5d7d35220dd65c670caf66e25c10a892", "html_url": "https://github.com/rust-lang/rust/commit/89da571b5d7d35220dd65c670caf66e25c10a892"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "79539fd9c49e3dcaff831fa1f360dd02a3820687", "filename": "src/shims/posix/fs.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/62ea0c8c394d80669a336609181592effd887288/src%2Fshims%2Fposix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62ea0c8c394d80669a336609181592effd887288/src%2Fshims%2Fposix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fposix%2Ffs.rs?ref=62ea0c8c394d80669a336609181592effd887288", "patch": "@@ -31,16 +31,19 @@ trait FileDescriptor: std::fmt::Debug {\n         communicate_allowed: bool,\n         bytes: &mut [u8],\n     ) -> InterpResult<'tcx, io::Result<usize>>;\n+\n     fn write<'tcx>(\n         &self,\n         communicate_allowed: bool,\n         bytes: &[u8],\n     ) -> InterpResult<'tcx, io::Result<usize>>;\n+\n     fn seek<'tcx>(\n         &mut self,\n         communicate_allowed: bool,\n         offset: SeekFrom,\n     ) -> InterpResult<'tcx, io::Result<u64>>;\n+\n     fn close<'tcx>(\n         self: Box<Self>,\n         _communicate_allowed: bool,\n@@ -304,14 +307,14 @@ pub struct FileHandler {\n impl<'tcx> FileHandler {\n     pub(crate) fn new(mute_stdout_stderr: bool) -> FileHandler {\n         let mut handles: BTreeMap<_, Box<dyn FileDescriptor>> = BTreeMap::new();\n+        handles.insert(0i32, Box::new(io::stdin()));\n         if mute_stdout_stderr {\n-            handles.insert(0i32, Box::new(DummyOutput));\n             handles.insert(1i32, Box::new(DummyOutput));\n+            handles.insert(2i32, Box::new(DummyOutput));\n         } else {\n-            handles.insert(0i32, Box::new(io::stdin()));\n             handles.insert(1i32, Box::new(io::stdout()));\n+            handles.insert(2i32, Box::new(io::stderr()));\n         }\n-        handles.insert(2i32, Box::new(io::stderr()));\n         FileHandler { handles }\n     }\n "}, {"sha": "3ee68d01f43d386b971c957b1fbf0d63333bd8da", "filename": "tests/run-pass/hide_stdout.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/62ea0c8c394d80669a336609181592effd887288/tests%2Frun-pass%2Fhide_stdout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62ea0c8c394d80669a336609181592effd887288/tests%2Frun-pass%2Fhide_stdout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fhide_stdout.rs?ref=62ea0c8c394d80669a336609181592effd887288", "patch": "@@ -1,5 +1,6 @@\n // compile-flags: -Zmiri-mute-stdout-stderr\n \n fn main() {\n-    println!(\"cake\");\n+    println!(\"print to stdout\");\n+    eprintln!(\"print to stderr\");\n }"}]}