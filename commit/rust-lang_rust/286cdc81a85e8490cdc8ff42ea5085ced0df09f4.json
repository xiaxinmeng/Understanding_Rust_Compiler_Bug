{"sha": "286cdc81a85e8490cdc8ff42ea5085ced0df09f4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4NmNkYzgxYTg1ZTg0OTBjZGM4ZmY0MmVhNTA4NWNlZDBkZjA5ZjQ=", "commit": {"author": {"name": "Wesley Wiser", "email": "wesleywiser@microsoft.com", "date": "2021-07-29T17:06:37Z"}, "committer": {"name": "Wesley Wiser", "email": "wesleywiser@microsoft.com", "date": "2021-07-29T17:51:27Z"}, "message": "[backtraces]: look for the `begin` symbol only after seeing `end`\n\nOn `x86_64-pc-windows-msvc`, we often get backtraces which look like\nthis:\n\n```\n10:     0x7ff77e0e9be5 - std::panicking::rust_panic_with_hook\n11:     0x7ff77e0e11b4 - std::sys_common::backtrace::__rust_begin_short_backtrace::h5769736bdb11136c\n12:     0x7ff77e0e116f - std::sys_common::backtrace::__rust_end_short_backtrace::h61c7ecb1b55338ae\n13:     0x7ff77e0f89dd - std::panicking::begin_panic::h8e60ef9f82a41805\n14:     0x7ff77e0e108c - d\n15:     0x7ff77e0e1069 - c\n16:     0x7ff77e0e1059 - b\n17:     0x7ff77e0e1049 - a\n18:     0x7ff77e0e1039 - core::ptr::drop_in_place<std::rt::lang_start<()>::{{closure}}>::h1bfcd14d5e15ba81\n19:     0x7ff77e0e1186 - std::sys_common::backtrace::__rust_begin_short_backtrace::h5769736bdb11136c\n20:     0x7ff77e0e100c - std::rt::lang_start::{{closure}}::ha054184bbf9921e3\n```\n\nNotice that `__rust_begin_short_backtrace` appears on frame 11 before\n`__rust_end_short_backtrace` on frame 12. This is because in typical\nrelease binaries without debug symbols, dbghelp.dll, which we use to walk\nand symbolize the stack, does not know where CGU internal functions\nstart or end and so the closure invoked by `__rust_end_short_backtrace`\nis incorrectly described as `__rust_begin_short_backtrace` because it\nhappens to be near that symbol.\n\nWhile that can obviously change, this has been happening quite\nconsistently since #75048. Since this is a very small change to the std\nand the change makes sense by itself, I think this is worth doing.\n\nThis doesn't completely resolve the situation for release binaries on\nWindows, since without debug symbols, the stack printed can still show\nincorrect symbol names (this is why the test uses `#[no_mangle]`) but it\ndoes slightly improve the situation in that you see the same backtrace\nyou would see with `RUST_BACKTRACE=full` or in a debugger (without the\nuninteresting bits at the top and bottom).", "tree": {"sha": "eabc7af5ed8414df7e189469cd81822985be1402", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eabc7af5ed8414df7e189469cd81822985be1402"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/286cdc81a85e8490cdc8ff42ea5085ced0df09f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/286cdc81a85e8490cdc8ff42ea5085ced0df09f4", "html_url": "https://github.com/rust-lang/rust/commit/286cdc81a85e8490cdc8ff42ea5085ced0df09f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/286cdc81a85e8490cdc8ff42ea5085ced0df09f4/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fda7086cc810ce3003b91f74eb1c17e9f016319", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fda7086cc810ce3003b91f74eb1c17e9f016319", "html_url": "https://github.com/rust-lang/rust/commit/3fda7086cc810ce3003b91f74eb1c17e9f016319"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "e6a099f0e81a0ad141b1f2950e34ed78c8987db4", "filename": "library/std/src/sys_common/backtrace.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/286cdc81a85e8490cdc8ff42ea5085ced0df09f4/library%2Fstd%2Fsrc%2Fsys_common%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/286cdc81a85e8490cdc8ff42ea5085ced0df09f4/library%2Fstd%2Fsrc%2Fsys_common%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fbacktrace.rs?ref=286cdc81a85e8490cdc8ff42ea5085ced0df09f4", "patch": "@@ -75,7 +75,7 @@ unsafe fn _print_fmt(fmt: &mut fmt::Formatter<'_>, print_fmt: PrintFmt) -> fmt::\n             hit = true;\n             if print_fmt == PrintFmt::Short {\n                 if let Some(sym) = symbol.name().and_then(|s| s.as_str()) {\n-                    if sym.contains(\"__rust_begin_short_backtrace\") {\n+                    if start && sym.contains(\"__rust_begin_short_backtrace\") {\n                         stop = true;\n                         return;\n                     }"}, {"sha": "fd01337296fb73aad9c357c641b5b72f8d1fe23d", "filename": "src/test/ui/panics/panic-short-backtrace-windows-x86_64.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/286cdc81a85e8490cdc8ff42ea5085ced0df09f4/src%2Ftest%2Fui%2Fpanics%2Fpanic-short-backtrace-windows-x86_64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/286cdc81a85e8490cdc8ff42ea5085ced0df09f4/src%2Ftest%2Fui%2Fpanics%2Fpanic-short-backtrace-windows-x86_64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpanics%2Fpanic-short-backtrace-windows-x86_64.rs?ref=286cdc81a85e8490cdc8ff42ea5085ced0df09f4", "patch": "@@ -10,6 +10,11 @@\n // check-run-results\n // exec-env:RUST_BACKTRACE=1\n \n+// We need to normalize out frame 5 because without debug info, dbghelp.dll doesn't know where CGU\n+// internal functions like `main` start or end and so it will return whatever symbol happens\n+// to be located near the address.\n+// normalize-stderr-test: \"5: .*\" -> \"5: some Rust fn\"\n+\n // Backtraces are pretty broken in general on i686-pc-windows-msvc (#62897).\n // only-x86_64-pc-windows-msvc\n "}, {"sha": "799a8b30e997b15d18fc2c815d6e13a12701f740", "filename": "src/test/ui/panics/panic-short-backtrace-windows-x86_64.run.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/286cdc81a85e8490cdc8ff42ea5085ced0df09f4/src%2Ftest%2Fui%2Fpanics%2Fpanic-short-backtrace-windows-x86_64.run.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/286cdc81a85e8490cdc8ff42ea5085ced0df09f4/src%2Ftest%2Fui%2Fpanics%2Fpanic-short-backtrace-windows-x86_64.run.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpanics%2Fpanic-short-backtrace-windows-x86_64.run.stderr?ref=286cdc81a85e8490cdc8ff42ea5085ced0df09f4", "patch": "@@ -1,3 +1,9 @@\n-thread 'main' panicked at 'd was called', $DIR/panic-short-backtrace-windows-x86_64.rs:43:5\n+thread 'main' panicked at 'd was called', $DIR/panic-short-backtrace-windows-x86_64.rs:48:5\n stack backtrace:\n+   0: std::panicking::begin_panic\n+   1: d\n+   2: c\n+   3: b\n+   4: a\n+   5: some Rust fn\n note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace."}]}