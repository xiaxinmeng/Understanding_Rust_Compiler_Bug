{"sha": "2f2feef9afe8f1c75f743a56f945a1560ca85af4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmMmZlZWY5YWZlOGYxYzc1Zjc0M2E1NmY5NDVhMTU2MGNhODVhZjQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-09-03T12:46:14Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-09-03T12:46:14Z"}, "message": "completion for trait params", "tree": {"sha": "e0c38474c39feaf4aae0de4ac2f4ec7d8ad91c79", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0c38474c39feaf4aae0de4ac2f4ec7d8ad91c79"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f2feef9afe8f1c75f743a56f945a1560ca85af4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f2feef9afe8f1c75f743a56f945a1560ca85af4", "html_url": "https://github.com/rust-lang/rust/commit/2f2feef9afe8f1c75f743a56f945a1560ca85af4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f2feef9afe8f1c75f743a56f945a1560ca85af4/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4798a89a12f40af17174a160f6d6a2f1c53db8d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/4798a89a12f40af17174a160f6d6a2f1c53db8d6", "html_url": "https://github.com/rust-lang/rust/commit/4798a89a12f40af17174a160f6d6a2f1c53db8d6"}], "stats": {"total": 43, "additions": 33, "deletions": 10}, "files": [{"sha": "c25b4c2177936378c09406a887ec47e5e4f68eb8", "filename": "crates/libeditor/src/completion.rs", "status": "modified", "additions": 31, "deletions": 10, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/2f2feef9afe8f1c75f743a56f945a1560ca85af4/crates%2Flibeditor%2Fsrc%2Fcompletion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f2feef9afe8f1c75f743a56f945a1560ca85af4/crates%2Flibeditor%2Fsrc%2Fcompletion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Fsrc%2Fcompletion.rs?ref=2f2feef9afe8f1c75f743a56f945a1560ca85af4", "patch": "@@ -35,11 +35,17 @@ pub fn scope_completion(file: &File, offset: TextUnit) -> Option<Vec<CompletionI\n     let mut res = Vec::new();\n     if let Some(name_ref) = find_node_at_offset::<ast::NameRef>(file.syntax(), offset) {\n         has_completions = true;\n-        complete_name_ref(&file, name_ref, &mut res)\n+        complete_name_ref(&file, name_ref, &mut res);\n+        // special case, `trait T { fn foo(i_am_a_name_ref) {} }`\n+        if is_node::<ast::Param>(name_ref.syntax()) {\n+            param_completions(name_ref.syntax(), &mut res);\n+        }\n     }\n     if let Some(name) = find_node_at_offset::<ast::Name>(file.syntax(), offset) {\n-        has_completions = true;\n-        complete_name(&file, name, &mut res)\n+        if is_node::<ast::Param>(name.syntax()) {\n+            has_completions = true;\n+            param_completions(name.syntax(), &mut res);\n+        }\n     }\n     if has_completions {\n         Some(res)\n@@ -71,15 +77,12 @@ fn complete_name_ref(file: &File, name_ref: ast::NameRef, acc: &mut Vec<Completi\n     }\n }\n \n-fn complete_name(_file: &File, name: ast::Name, acc: &mut Vec<CompletionItem>) {\n-    if !is_node::<ast::Param>(name.syntax()) {\n-        return;\n-    }\n-\n+fn param_completions(ctx: SyntaxNodeRef, acc: &mut Vec<CompletionItem>) {\n     let mut params = HashMap::new();\n-    for node in ancestors(name.syntax()) {\n+    for node in ancestors(ctx) {\n         let _ = visitor_ctx(&mut params)\n             .visit::<ast::Root, _>(process)\n+            .visit::<ast::ItemList, _>(process)\n             .accept(node);\n     }\n     params.into_iter()\n@@ -420,16 +423,34 @@ mod tests {\n     }\n \n     #[test]\n-    fn test_param_completion() {\n+    fn test_param_completion_last_param() {\n         check_scope_completion(r\"\n             fn foo(file_id: FileId) {}\n             fn bar(file_id: FileId) {}\n             fn baz(file<|>) {}\n         \", r#\"[CompletionItem { label: \"file_id: FileId\", lookup: Some(\"file_id\"), snippet: None }]\"#);\n+    }\n+\n+    #[test]\n+    fn test_param_completion_nth_param() {\n         check_scope_completion(r\"\n             fn foo(file_id: FileId) {}\n             fn bar(file_id: FileId) {}\n             fn baz(file<|>, x: i32) {}\n         \", r#\"[CompletionItem { label: \"file_id: FileId\", lookup: Some(\"file_id\"), snippet: None }]\"#);\n     }\n+\n+    #[test]\n+    fn test_param_completion_trait_param() {\n+        check_scope_completion(r\"\n+            pub(crate) trait SourceRoot {\n+                pub fn contains(&self, file_id: FileId) -> bool;\n+                pub fn module_map(&self) -> &ModuleMap;\n+                pub fn lines(&self, file_id: FileId) -> &LineIndex;\n+                pub fn syntax(&self, file<|>)\n+            }\n+        \", r#\"[CompletionItem { label: \"self\", lookup: None, snippet: None },\n+               CompletionItem { label: \"SourceRoot\", lookup: None, snippet: None },\n+               CompletionItem { label: \"file_id: FileId\", lookup: Some(\"file_id\"), snippet: None }]\"#);\n+    }\n }"}, {"sha": "a239f0630de4a9e8673badd1d8bba7152a8c6367", "filename": "crates/libsyntax2/src/ast/generated.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2f2feef9afe8f1c75f743a56f945a1560ca85af4/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f2feef9afe8f1c75f743a56f945a1560ca85af4/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs?ref=2f2feef9afe8f1c75f743a56f945a1560ca85af4", "patch": "@@ -698,6 +698,7 @@ impl<'a> AstNode<'a> for ItemList<'a> {\n     fn syntax(self) -> SyntaxNodeRef<'a> { self.syntax }\n }\n \n+impl<'a> ast::FnDefOwner<'a> for ItemList<'a> {}\n impl<'a> ItemList<'a> {\n     pub fn items(self) -> impl Iterator<Item = ModuleItem<'a>> + 'a {\n         super::children(self)"}, {"sha": "6ed658daa35d3226d2a98cfd7916a8b71bf3788b", "filename": "crates/libsyntax2/src/grammar.ron", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2f2feef9afe8f1c75f743a56f945a1560ca85af4/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/2f2feef9afe8f1c75f743a56f945a1560ca85af4/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron?ref=2f2feef9afe8f1c75f743a56f945a1560ca85af4", "patch": "@@ -275,6 +275,7 @@ Grammar(\n             options: [ \"ItemList\" ]\n         ),\n         \"ItemList\": (\n+            traits: [ \"FnDefOwner\" ],\n             collections: [ [\"items\", \"ModuleItem\"] ]\n         ),\n         \"ConstDef\": ( traits: ["}]}