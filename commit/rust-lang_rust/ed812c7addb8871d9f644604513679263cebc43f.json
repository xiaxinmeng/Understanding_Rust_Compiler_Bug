{"sha": "ed812c7addb8871d9f644604513679263cebc43f", "node_id": "C_kwDOAAsO6NoAKGVkODEyYzdhZGRiODg3MWQ5ZjY0NDYwNDUxMzY3OTI2M2NlYmM0M2Y", "commit": {"author": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-09-13T16:42:03Z"}, "committer": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-09-22T23:16:39Z"}, "message": "Add `AsFd` implementations for stdio lock types on WASI.\n\nThis mirrors the implementations on Unix platforms, and also mirrors the\nexisting `AsRawFd` impls.\n\nThis is similar to #100892, but is for the `*Lock` types.", "tree": {"sha": "e7532106fc9aab712962109f45e09370b12d4b8f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7532106fc9aab712962109f45e09370b12d4b8f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed812c7addb8871d9f644604513679263cebc43f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed812c7addb8871d9f644604513679263cebc43f", "html_url": "https://github.com/rust-lang/rust/commit/ed812c7addb8871d9f644604513679263cebc43f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed812c7addb8871d9f644604513679263cebc43f/comments", "author": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7119a0300b87a3d670408ee8e847c6821b3ae80", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7119a0300b87a3d670408ee8e847c6821b3ae80", "html_url": "https://github.com/rust-lang/rust/commit/e7119a0300b87a3d670408ee8e847c6821b3ae80"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "07f5fbe3842594f6d9f20e6ae8a0164de5f505c9", "filename": "library/std/src/sys/wasi/stdio.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ed812c7addb8871d9f644604513679263cebc43f/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed812c7addb8871d9f644604513679263cebc43f/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Fstdio.rs?ref=ed812c7addb8871d9f644604513679263cebc43f", "patch": "@@ -30,6 +30,13 @@ impl AsFd for Stdin {\n     }\n }\n \n+impl<'a> AsFd for StdinLock<'a> {\n+    #[inline]\n+    fn as_fd(&self) -> BorrowedFd<'_> {\n+        unsafe { BorrowedFd::borrow_raw(0) }\n+    }\n+}\n+\n impl io::Read for Stdin {\n     fn read(&mut self, data: &mut [u8]) -> io::Result<usize> {\n         self.read_vectored(&mut [IoSliceMut::new(data)])\n@@ -65,6 +72,13 @@ impl AsFd for Stdout {\n     }\n }\n \n+impl<'a> AsFd for StdoutLock<'a> {\n+    #[inline]\n+    fn as_fd(&self) -> BorrowedFd<'_> {\n+        unsafe { BorrowedFd::borrow_raw(1) }\n+    }\n+}\n+\n impl io::Write for Stdout {\n     fn write(&mut self, data: &[u8]) -> io::Result<usize> {\n         self.write_vectored(&[IoSlice::new(data)])\n@@ -103,6 +117,13 @@ impl AsFd for Stderr {\n     }\n }\n \n+impl<'a> AsFd for StderrLock<'a> {\n+    #[inline]\n+    fn as_fd(&self) -> BorrowedFd<'_> {\n+        unsafe { BorrowedFd::borrow_raw(2) }\n+    }\n+}\n+\n impl io::Write for Stderr {\n     fn write(&mut self, data: &[u8]) -> io::Result<usize> {\n         self.write_vectored(&[IoSlice::new(data)])"}]}