{"sha": "5eab397e7c9840bd01f9ca165428e8eb4156cdc4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlYWIzOTdlN2M5ODQwYmQwMWY5Y2ExNjU0MjhlOGViNDE1NmNkYzQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-08-13T14:28:11Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-08-13T16:15:41Z"}, "message": "Some fixes from dogfooding clippy", "tree": {"sha": "711686500d0eb84f9366682be60daec37f4db2c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/711686500d0eb84f9366682be60daec37f4db2c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5eab397e7c9840bd01f9ca165428e8eb4156cdc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5eab397e7c9840bd01f9ca165428e8eb4156cdc4", "html_url": "https://github.com/rust-lang/rust/commit/5eab397e7c9840bd01f9ca165428e8eb4156cdc4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5eab397e7c9840bd01f9ca165428e8eb4156cdc4/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d8447e0f8f2b2243b75f6f12a8f98a6f0f72c2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d8447e0f8f2b2243b75f6f12a8f98a6f0f72c2f", "html_url": "https://github.com/rust-lang/rust/commit/0d8447e0f8f2b2243b75f6f12a8f98a6f0f72c2f"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "0b7511e7dbd9a8d1b5ac529f2b3de9be12240fd2", "filename": "src/eq_op.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5eab397e7c9840bd01f9ca165428e8eb4156cdc4/src%2Feq_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5eab397e7c9840bd01f9ca165428e8eb4156cdc4/src%2Feq_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feq_op.rs?ref=5eab397e7c9840bd01f9ca165428e8eb4156cdc4", "patch": "@@ -1,3 +1,4 @@\n+#![allow(redundant_closure)] // FIXME (#116)\n use rustc::lint::*;\n use syntax::ast::*;\n use syntax::ast_util as ast_util;"}, {"sha": "9135ecaca6c93dfbecbbcc395210d71693132f63", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5eab397e7c9840bd01f9ca165428e8eb4156cdc4/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5eab397e7c9840bd01f9ca165428e8eb4156cdc4/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=5eab397e7c9840bd01f9ca165428e8eb4156cdc4", "patch": "@@ -1,6 +1,6 @@\n #![feature(plugin_registrar, box_syntax)]\n #![feature(rustc_private, collections)]\n-#![allow(unused_imports)]\n+#![allow(unused_imports, unknown_lints)]\n \n #[macro_use]\n extern crate syntax;"}, {"sha": "25be8874691323418270a392cebf4f94e288d821", "filename": "src/lifetimes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5eab397e7c9840bd01f9ca165428e8eb4156cdc4/src%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5eab397e7c9840bd01f9ca165428e8eb4156cdc4/src%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flifetimes.rs?ref=5eab397e7c9840bd01f9ca165428e8eb4156cdc4", "patch": "@@ -103,7 +103,7 @@ fn could_use_elision(kind: FnKind, func: &FnDecl) -> bool {\n }\n \n /// Number of unique lifetimes in the given vector.\n-fn unique_lifetimes(lts: &Vec<RefLt>) -> usize {\n+fn unique_lifetimes(lts: &[RefLt]) -> usize {\n     lts.iter().collect::<HashSet<_>>().len()\n }\n "}, {"sha": "937e95970ef20e45a55d3943c1342ec4ed92c26e", "filename": "src/loops.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5eab397e7c9840bd01f9ca165428e8eb4156cdc4/src%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5eab397e7c9840bd01f9ca165428e8eb4156cdc4/src%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Floops.rs?ref=5eab397e7c9840bd01f9ca165428e8eb4156cdc4", "patch": "@@ -31,7 +31,7 @@ impl LintPass for LoopsPass {\n                     walk_expr(&mut visitor, body);\n                     // linting condition: we only indexed one variable\n                     if visitor.indexed.len() == 1 {\n-                        let indexed = visitor.indexed.into_iter().next().unwrap();\n+                        let indexed = visitor.indexed.into_iter().next().expect(\"Len was nonzero, but no contents found\");\n                         if visitor.nonindex {\n                             span_lint(cx, NEEDLESS_RANGE_LOOP, expr.span, &format!(\n                                 \"the loop variable `{}` is used to index `{}`. Consider using \\\n@@ -72,7 +72,7 @@ impl LintPass for LoopsPass {\n \n /// Recover the essential nodes of a desugared for loop:\n /// `for pat in arg { body }` becomes `(pat, arg, body)`.\n-fn recover_for_loop<'a>(expr: &'a Expr) -> Option<(&'a Pat, &'a Expr, &'a Expr)> {\n+fn recover_for_loop<'a>(expr: &Expr) -> Option<(&Pat, &Expr, &Expr)> {\n     if_let_chain! {\n         [\n             let ExprMatch(ref iterexpr, ref arms, _) = expr.node,"}, {"sha": "c54a7f56f7e86781a7ea2dadab7b8c8b76661f81", "filename": "src/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5eab397e7c9840bd01f9ca165428e8eb4156cdc4/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5eab397e7c9840bd01f9ca165428e8eb4156cdc4/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=5eab397e7c9840bd01f9ca165428e8eb4156cdc4", "patch": "@@ -86,7 +86,7 @@ pub fn span_help_and_lint(cx: &Context, lint: &'static Lint, span: Span,\n }\n \n /// return the base type for references and raw pointers\n-pub fn walk_ptrs_ty<'t>(ty: ty::Ty<'t>) -> ty::Ty<'t> {\n+pub fn walk_ptrs_ty(ty: ty::Ty) -> ty::Ty {\n     match ty.sty {\n         ty::TyRef(_, ref tm) | ty::TyRawPtr(ref tm) => walk_ptrs_ty(tm.ty),\n         _ => ty"}]}