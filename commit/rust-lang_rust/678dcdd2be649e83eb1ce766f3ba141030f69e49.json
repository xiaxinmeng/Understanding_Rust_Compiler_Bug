{"sha": "678dcdd2be649e83eb1ce766f3ba141030f69e49", "node_id": "C_kwDOAAsO6NoAKDY3OGRjZGQyYmU2NDllODNlYjFjZTc2NmYzYmExNDEwMzBmNjllNDk", "commit": {"author": {"name": "dswij", "email": "dswijj@gmail.com", "date": "2022-06-02T12:17:00Z"}, "committer": {"name": "dswij", "email": "dswijj@gmail.com", "date": "2022-06-02T12:22:15Z"}, "message": "Apply `needless_return` suggestions", "tree": {"sha": "414a3de94c8d4e5084c1a072bca69fc5cd7e2792", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/414a3de94c8d4e5084c1a072bca69fc5cd7e2792"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/678dcdd2be649e83eb1ce766f3ba141030f69e49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/678dcdd2be649e83eb1ce766f3ba141030f69e49", "html_url": "https://github.com/rust-lang/rust/commit/678dcdd2be649e83eb1ce766f3ba141030f69e49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/678dcdd2be649e83eb1ce766f3ba141030f69e49/comments", "author": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b885035ef7c5d9e4824944e2c50035afdb2fd2f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/b885035ef7c5d9e4824944e2c50035afdb2fd2f5", "html_url": "https://github.com/rust-lang/rust/commit/b885035ef7c5d9e4824944e2c50035afdb2fd2f5"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "8989db54f6c5fb20bb19c3c3a1ef9540c32320d6", "filename": "clippy_lints/src/methods/option_map_or_none.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/678dcdd2be649e83eb1ce766f3ba141030f69e49/clippy_lints%2Fsrc%2Fmethods%2Foption_map_or_none.rs", "raw_url": "https://github.com/rust-lang/rust/raw/678dcdd2be649e83eb1ce766f3ba141030f69e49/clippy_lints%2Fsrc%2Fmethods%2Foption_map_or_none.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Foption_map_or_none.rs?ref=678dcdd2be649e83eb1ce766f3ba141030f69e49", "patch": "@@ -97,7 +97,7 @@ pub(super) fn check<'tcx>(\n         let func_snippet = snippet(cx, map_arg.span, \"..\");\n         let msg = \"called `map_or(None, ..)` on an `Option` value. This can be done more directly by calling \\\n                        `and_then(..)` instead\";\n-        return span_lint_and_sugg(\n+        span_lint_and_sugg(\n             cx,\n             OPTION_MAP_OR_NONE,\n             expr.span,\n@@ -110,7 +110,7 @@ pub(super) fn check<'tcx>(\n         let msg = \"called `map_or(None, Some)` on a `Result` value. This can be done more directly by calling \\\n                        `ok()` instead\";\n         let self_snippet = snippet(cx, recv.span, \"..\");\n-        return span_lint_and_sugg(\n+        span_lint_and_sugg(\n             cx,\n             RESULT_MAP_OR_INTO_OPTION,\n             expr.span,"}]}