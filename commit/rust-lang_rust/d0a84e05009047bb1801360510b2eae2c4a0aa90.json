{"sha": "d0a84e05009047bb1801360510b2eae2c4a0aa90", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwYTg0ZTA1MDA5MDQ3YmIxODAxMzYwNTEwYjJlYWUyYzRhMGFhOTA=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-10-27T22:29:31Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-10-27T22:30:46Z"}, "message": "Add some debug printouts to librustc_privacy", "tree": {"sha": "7a24c8fb119f9063826c3e5bf4be128afff7e8ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a24c8fb119f9063826c3e5bf4be128afff7e8ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0a84e05009047bb1801360510b2eae2c4a0aa90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0a84e05009047bb1801360510b2eae2c4a0aa90", "html_url": "https://github.com/rust-lang/rust/commit/d0a84e05009047bb1801360510b2eae2c4a0aa90", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0a84e05009047bb1801360510b2eae2c4a0aa90/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1e2a5538a33577f5845fc8bf56d06c452513245", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1e2a5538a33577f5845fc8bf56d06c452513245", "html_url": "https://github.com/rust-lang/rust/commit/a1e2a5538a33577f5845fc8bf56d06c452513245"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "bae963c77017c6a898949ef9bd498c4934b2d1fd", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d0a84e05009047bb1801360510b2eae2c4a0aa90/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0a84e05009047bb1801360510b2eae2c4a0aa90/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=d0a84e05009047bb1801360510b2eae2c4a0aa90", "patch": "@@ -389,6 +389,7 @@ struct PrivacyVisitor<'a, 'tcx: 'a> {\n     external_exports: ExternalExports,\n }\n \n+#[derive(Debug)]\n enum PrivacyResult {\n     Allowable,\n     ExternallyDenied,\n@@ -645,9 +646,17 @@ impl<'a, 'tcx> PrivacyVisitor<'a, 'tcx> {\n     /// Guarantee that a particular definition is public. Returns a CheckResult\n     /// which contains any errors found. These can be reported using `report_error`.\n     /// If the result is `None`, no errors were found.\n-    fn ensure_public(&self, span: Span, to_check: DefId,\n-                     source_did: Option<DefId>, msg: &str) -> CheckResult {\n-        let id = match self.def_privacy(to_check) {\n+    fn ensure_public(&self,\n+                     span: Span,\n+                     to_check: DefId,\n+                     source_did: Option<DefId>,\n+                     msg: &str)\n+                     -> CheckResult {\n+        debug!(\"ensure_public(span={:?}, to_check={:?}, source_did={:?}, msg={:?})\",\n+               span, to_check, source_did, msg);\n+        let def_privacy = self.def_privacy(to_check);\n+        debug!(\"ensure_public: def_privacy={:?}\", def_privacy);\n+        let id = match def_privacy {\n             ExternallyDenied => {\n                 return Some((span, format!(\"{} is private\", msg), None))\n             }"}]}