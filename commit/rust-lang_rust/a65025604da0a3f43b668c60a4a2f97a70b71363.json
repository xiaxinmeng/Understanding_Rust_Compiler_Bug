{"sha": "a65025604da0a3f43b668c60a4a2f97a70b71363", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2NTAyNTYwNGRhMGEzZjQzYjY2OGM2MGE0YTJmOTdhNzBiNzEzNjM=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2021-01-01T07:09:27Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2021-01-01T07:09:27Z"}, "message": "Fix deep syntax tree bug generated by proc-macro", "tree": {"sha": "4c6af6d0b9ab4fa148b05c70e8f15aa9699ab229", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c6af6d0b9ab4fa148b05c70e8f15aa9699ab229"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a65025604da0a3f43b668c60a4a2f97a70b71363", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a65025604da0a3f43b668c60a4a2f97a70b71363", "html_url": "https://github.com/rust-lang/rust/commit/a65025604da0a3f43b668c60a4a2f97a70b71363", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a65025604da0a3f43b668c60a4a2f97a70b71363/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9814fa9c037b0fafd30580a6e7682ed032d77e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9814fa9c037b0fafd30580a6e7682ed032d77e6", "html_url": "https://github.com/rust-lang/rust/commit/a9814fa9c037b0fafd30580a6e7682ed032d77e6"}], "stats": {"total": 50, "additions": 46, "deletions": 4}, "files": [{"sha": "d724d8962a1ebccfb0fdaa1351e6e9b515aba40c", "filename": "Cargo.lock", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/a65025604da0a3f43b668c60a4a2f97a70b71363/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/a65025604da0a3f43b668c60a4a2f97a70b71363/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=a65025604da0a3f43b668c60a4a2f97a70b71363", "patch": "@@ -1182,6 +1182,7 @@ dependencies = [\n  \"log\",\n  \"serde\",\n  \"serde_json\",\n+ \"serde_stacker\",\n  \"tt\",\n ]\n \n@@ -1239,6 +1240,15 @@ dependencies = [\n  \"toolchain\",\n ]\n \n+[[package]]\n+name = \"psm\"\n+version = \"0.1.12\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"3abf49e5417290756acfd26501536358560c4a5cc4a0934d390939acb3e7083a\"\n+dependencies = [\n+ \"cc\",\n+]\n+\n [[package]]\n name = \"pulldown-cmark\"\n version = \"0.8.0\"\n@@ -1557,6 +1567,16 @@ dependencies = [\n  \"syn\",\n ]\n \n+[[package]]\n+name = \"serde_stacker\"\n+version = \"0.1.4\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"f4c92391a63e3b83f77334d8beaaf11bac4c900f3769483e543bf76a81bf8ee2\"\n+dependencies = [\n+ \"serde\",\n+ \"stacker\",\n+]\n+\n [[package]]\n name = \"sharded-slab\"\n version = \"0.1.0\"\n@@ -1602,6 +1622,19 @@ dependencies = [\n  \"text_edit\",\n ]\n \n+[[package]]\n+name = \"stacker\"\n+version = \"0.1.12\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"21ccb4c06ec57bc82d0f610f1a2963d7648700e43a6f513e564b9c89f7991786\"\n+dependencies = [\n+ \"cc\",\n+ \"cfg-if 0.1.10\",\n+ \"libc\",\n+ \"psm\",\n+ \"winapi 0.3.9\",\n+]\n+\n [[package]]\n name = \"stdx\"\n version = \"0.0.0\""}, {"sha": "a8e128d5571e16ad8779929bc59e361acadd340a", "filename": "crates/proc_macro_api/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a65025604da0a3f43b668c60a4a2f97a70b71363/crates%2Fproc_macro_api%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/a65025604da0a3f43b668c60a4a2f97a70b71363/crates%2Fproc_macro_api%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_api%2FCargo.toml?ref=a65025604da0a3f43b668c60a4a2f97a70b71363", "patch": "@@ -12,6 +12,7 @@ doctest = false\n [dependencies]\n serde = { version = \"1.0\", features = [\"derive\"] }\n serde_json = \"1.0\"\n+serde_stacker = \"0.1\"\n log = \"0.4.8\"\n crossbeam-channel = \"0.5.0\"\n jod-thread = \"0.1.1\""}, {"sha": "43d13a764c1166a539419c6fa2ff68ace03ef17b", "filename": "crates/proc_macro_api/src/msg.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a65025604da0a3f43b668c60a4a2f97a70b71363/crates%2Fproc_macro_api%2Fsrc%2Fmsg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a65025604da0a3f43b668c60a4a2f97a70b71363/crates%2Fproc_macro_api%2Fsrc%2Fmsg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_api%2Fsrc%2Fmsg.rs?ref=a65025604da0a3f43b668c60a4a2f97a70b71363", "patch": "@@ -58,7 +58,14 @@ pub trait Message: Serialize + DeserializeOwned {\n     fn read(inp: &mut impl BufRead) -> io::Result<Option<Self>> {\n         Ok(match read_json(inp)? {\n             None => None,\n-            Some(text) => Some(serde_json::from_str(&text)?),\n+            Some(text) => {\n+                let mut deserializer = serde_json::Deserializer::from_str(&text);\n+                // Note that some proc-macro generate very deep syntax tree\n+                // We have to disable the current limit of serde here\n+                deserializer.disable_recursion_limit();\n+                let deserializer = serde_stacker::Deserializer::new(&mut deserializer);\n+                Some(Self::deserialize(deserializer)?)\n+            }\n         })\n     }\n     fn write(self, out: &mut impl Write) -> io::Result<()> {"}, {"sha": "6d6ab8888683964ae20bd42bf52e5eeb1d974283", "filename": "crates/proc_macro_api/src/process.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a65025604da0a3f43b668c60a4a2f97a70b71363/crates%2Fproc_macro_api%2Fsrc%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a65025604da0a3f43b668c60a4a2f97a70b71363/crates%2Fproc_macro_api%2Fsrc%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_api%2Fsrc%2Fprocess.rs?ref=a65025604da0a3f43b668c60a4a2f97a70b71363", "patch": "@@ -92,10 +92,11 @@ fn client_loop(task_rx: Receiver<Task>, mut process: Process) {\n     for Task { req, result_tx } in task_rx {\n         match send_request(&mut stdin, &mut stdout, req) {\n             Ok(res) => result_tx.send(res).unwrap(),\n-            Err(_err) => {\n+            Err(err) => {\n                 log::error!(\n-                    \"proc macro server crashed, server process state: {:?}\",\n-                    process.child.try_wait()\n+                    \"proc macro server crashed, server process state: {:?}, server request error: {:?}\",\n+                    process.child.try_wait(),\n+                    err\n                 );\n                 let res = Response::Error(ResponseError {\n                     code: ErrorCode::ServerErrorEnd,"}]}