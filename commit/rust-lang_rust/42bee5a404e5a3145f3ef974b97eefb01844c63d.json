{"sha": "42bee5a404e5a3145f3ef974b97eefb01844c63d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyYmVlNWE0MDRlNWEzMTQ1ZjNlZjk3NGI5N2VlZmIwMTg0NGM2M2Q=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-17T15:29:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-17T15:29:34Z"}, "message": "Auto merge of #84261 - Aaron1011:error-dup-revisions, r=Mark-Simulacrum\n\nError when compiletest is passed duplicate revisions\n\nCurrently, we allow the user to write things like\n'// revisions: rpass1 rpass1', which will not test what they were\nintending to test.", "tree": {"sha": "2502753113d6615944f9a02cf240217c87618e19", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2502753113d6615944f9a02cf240217c87618e19"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42bee5a404e5a3145f3ef974b97eefb01844c63d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42bee5a404e5a3145f3ef974b97eefb01844c63d", "html_url": "https://github.com/rust-lang/rust/commit/42bee5a404e5a3145f3ef974b97eefb01844c63d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42bee5a404e5a3145f3ef974b97eefb01844c63d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd9b30527e96969b7d6b5471e05ad5d4185e390f", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd9b30527e96969b7d6b5471e05ad5d4185e390f", "html_url": "https://github.com/rust-lang/rust/commit/cd9b30527e96969b7d6b5471e05ad5d4185e390f"}, {"sha": "4cfc7b3f73a1a813098f35d992ad94727d2a206b", "url": "https://api.github.com/repos/rust-lang/rust/commits/4cfc7b3f73a1a813098f35d992ad94727d2a206b", "html_url": "https://github.com/rust-lang/rust/commit/4cfc7b3f73a1a813098f35d992ad94727d2a206b"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "f31a24738df6c7bae1312e96f037b3bdab330df9", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/42bee5a404e5a3145f3ef974b97eefb01844c63d/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42bee5a404e5a3145f3ef974b97eefb01844c63d/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=42bee5a404e5a3145f3ef974b97eefb01844c63d", "patch": "@@ -136,9 +136,7 @@ impl EarlyProps {\n                 props.aux_crate.push(ac);\n             }\n \n-            if let Some(r) = config.parse_revisions(ln) {\n-                props.revisions.extend(r);\n-            }\n+            config.parse_and_update_revisions(ln, &mut props.revisions);\n \n             props.should_fail = props.should_fail || config.parse_name_directive(ln, \"should-fail\");\n         });\n@@ -432,9 +430,7 @@ impl TestProps {\n                     self.compile_flags.push(format!(\"--edition={}\", edition));\n                 }\n \n-                if let Some(r) = config.parse_revisions(ln) {\n-                    self.revisions.extend(r);\n-                }\n+                config.parse_and_update_revisions(ln, &mut self.revisions);\n \n                 if self.run_flags.is_none() {\n                     self.run_flags = config.parse_run_flags(ln);\n@@ -723,9 +719,16 @@ impl Config {\n         self.parse_name_value_directive(line, \"compile-flags\")\n     }\n \n-    fn parse_revisions(&self, line: &str) -> Option<Vec<String>> {\n-        self.parse_name_value_directive(line, \"revisions\")\n-            .map(|r| r.split_whitespace().map(|t| t.to_string()).collect())\n+    fn parse_and_update_revisions(&self, line: &str, existing: &mut Vec<String>) {\n+        if let Some(raw) = self.parse_name_value_directive(line, \"revisions\") {\n+            let mut duplicates: HashSet<_> = existing.iter().cloned().collect();\n+            for revision in raw.split_whitespace().map(|r| r.to_string()) {\n+                if !duplicates.insert(revision.clone()) {\n+                    panic!(\"Duplicate revision: `{}` in line `{}`\", revision, raw);\n+                }\n+                existing.push(revision);\n+            }\n+        }\n     }\n \n     fn parse_run_flags(&self, line: &str) -> Option<String> {"}, {"sha": "ca7458d255c3c2db552441697be297c115987d62", "filename": "src/tools/compiletest/src/header/tests.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/42bee5a404e5a3145f3ef974b97eefb01844c63d/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42bee5a404e5a3145f3ef974b97eefb01844c63d/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Ftests.rs?ref=42bee5a404e5a3145f3ef974b97eefb01844c63d", "patch": "@@ -248,3 +248,10 @@ fn test_extract_version_range() {\n     assert_eq!(extract_version_range(\"   - 4.5.6\", extract_llvm_version), None);\n     assert_eq!(extract_version_range(\"0  -\", extract_llvm_version), None);\n }\n+\n+#[test]\n+#[should_panic(expected = \"Duplicate revision: `rpass1` in line ` rpass1 rpass1`\")]\n+fn test_duplicate_revisions() {\n+    let config = config();\n+    parse_rs(&config, \"// revisions: rpass1 rpass1\");\n+}"}]}