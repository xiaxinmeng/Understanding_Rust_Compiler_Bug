{"sha": "c7ae44c0e2aad23e6ca74893a3e3ed1a060c0ff0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3YWU0NGMwZTJhYWQyM2U2Y2E3NDg5M2EzZTNlZDFhMDYwYzBmZjA=", "commit": {"author": {"name": "Alex Hamilton", "email": "alex.hamilton@ou.edu", "date": "2019-01-29T18:23:11Z"}, "committer": {"name": "Alex Hamilton", "email": "alex.hamilton@ou.edu", "date": "2019-01-29T21:33:04Z"}, "message": "wildcard_match_arm: format test.", "tree": {"sha": "6af3c2c3bddab790f061e2d451d25e7a4256f905", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6af3c2c3bddab790f061e2d451d25e7a4256f905"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7ae44c0e2aad23e6ca74893a3e3ed1a060c0ff0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7ae44c0e2aad23e6ca74893a3e3ed1a060c0ff0", "html_url": "https://github.com/rust-lang/rust/commit/c7ae44c0e2aad23e6ca74893a3e3ed1a060c0ff0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7ae44c0e2aad23e6ca74893a3e3ed1a060c0ff0/comments", "author": {"login": "Aehmlo", "id": 1622250, "node_id": "MDQ6VXNlcjE2MjIyNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1622250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aehmlo", "html_url": "https://github.com/Aehmlo", "followers_url": "https://api.github.com/users/Aehmlo/followers", "following_url": "https://api.github.com/users/Aehmlo/following{/other_user}", "gists_url": "https://api.github.com/users/Aehmlo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aehmlo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aehmlo/subscriptions", "organizations_url": "https://api.github.com/users/Aehmlo/orgs", "repos_url": "https://api.github.com/users/Aehmlo/repos", "events_url": "https://api.github.com/users/Aehmlo/events{/privacy}", "received_events_url": "https://api.github.com/users/Aehmlo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aehmlo", "id": 1622250, "node_id": "MDQ6VXNlcjE2MjIyNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1622250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aehmlo", "html_url": "https://github.com/Aehmlo", "followers_url": "https://api.github.com/users/Aehmlo/followers", "following_url": "https://api.github.com/users/Aehmlo/following{/other_user}", "gists_url": "https://api.github.com/users/Aehmlo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aehmlo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aehmlo/subscriptions", "organizations_url": "https://api.github.com/users/Aehmlo/orgs", "repos_url": "https://api.github.com/users/Aehmlo/repos", "events_url": "https://api.github.com/users/Aehmlo/events{/privacy}", "received_events_url": "https://api.github.com/users/Aehmlo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bc4416b2b41a9d655cef8de0ee3ef0d5632bbb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bc4416b2b41a9d655cef8de0ee3ef0d5632bbb1", "html_url": "https://github.com/rust-lang/rust/commit/6bc4416b2b41a9d655cef8de0ee3ef0d5632bbb1"}], "stats": {"total": 52, "additions": 26, "deletions": 26}, "files": [{"sha": "5d3a5ff2a75107d88b5958c1ef5039787491e770", "filename": "tests/ui/wildcard_match_arm.rs", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/c7ae44c0e2aad23e6ca74893a3e3ed1a060c0ff0/tests%2Fui%2Fwildcard_match_arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7ae44c0e2aad23e6ca74893a3e3ed1a060c0ff0/tests%2Fui%2Fwildcard_match_arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_match_arm.rs?ref=c7ae44c0e2aad23e6ca74893a3e3ed1a060c0ff0", "patch": "@@ -2,35 +2,35 @@\n \n #[derive(Clone, Copy, Debug, Eq, PartialEq)]\n enum Color {\n-\tRed,\n-\tGreen,\n-\tBlue,\n-\tRgb(u8, u8, u8),\n-\tCyan,\n+    Red,\n+    Green,\n+    Blue,\n+    Rgb(u8, u8, u8),\n+    Cyan,\n }\n \n impl Color {\n-\tfn is_monochrome(self) -> bool {\n-\t\tmatch self {\n-\t\t\tColor::Red | Color::Green | Color::Blue => true,\n-\t\t\tColor::Rgb(r, g, b) => r | g == 0 || r | b == 0 || g | b == 0,\n-\t\t\tColor::Cyan => false,\n-\t\t}\n-\t}\n+    fn is_monochrome(self) -> bool {\n+        match self {\n+            Color::Red | Color::Green | Color::Blue => true,\n+            Color::Rgb(r, g, b) => r | g == 0 || r | b == 0 || g | b == 0,\n+            Color::Cyan => false,\n+        }\n+    }\n }\n \n fn main() {\n-\tlet color = Color::Rgb(0, 0, 127);\n-\tmatch color {\n-\t\tColor::Red => println!(\"Red\"),\n-\t\t_ => eprintln!(\"Not red\"),\n-\t};\n-\tmatch color {\n-\t\tColor::Red => {},\n-\t\tColor::Green => {},\n-\t\tColor::Blue => {},\n-\t\tColor::Cyan => {},\n-\t\tc if c.is_monochrome() => {},\n-\t\tColor::Rgb(_, _, _) => {},\n-\t};\n-}\n\\ No newline at end of file\n+    let color = Color::Rgb(0, 0, 127);\n+    match color {\n+        Color::Red => println!(\"Red\"),\n+        _ => eprintln!(\"Not red\"),\n+    };\n+    match color {\n+        Color::Red => {},\n+        Color::Green => {},\n+        Color::Blue => {},\n+        Color::Cyan => {},\n+        c if c.is_monochrome() => {},\n+        Color::Rgb(_, _, _) => {},\n+    };\n+}"}]}