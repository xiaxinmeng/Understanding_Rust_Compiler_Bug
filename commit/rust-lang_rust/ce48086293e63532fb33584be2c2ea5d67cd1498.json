{"sha": "ce48086293e63532fb33584be2c2ea5d67cd1498", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlNDgwODYyOTNlNjM1MzJmYjMzNTg0YmUyYzJlYTVkNjdjZDE0OTg=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-09T04:13:11Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-15T17:18:09Z"}, "message": "enum-variant-generic-args-pats-pass: harden + describe.", "tree": {"sha": "65aca22248f05c2acbeed9addf695f9f4dadc2cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65aca22248f05c2acbeed9addf695f9f4dadc2cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce48086293e63532fb33584be2c2ea5d67cd1498", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce48086293e63532fb33584be2c2ea5d67cd1498", "html_url": "https://github.com/rust-lang/rust/commit/ce48086293e63532fb33584be2c2ea5d67cd1498", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce48086293e63532fb33584be2c2ea5d67cd1498/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86c74d3a86c2c001e4c1b9b8876f0ca474ae1a82", "url": "https://api.github.com/repos/rust-lang/rust/commits/86c74d3a86c2c001e4c1b9b8876f0ca474ae1a82", "html_url": "https://github.com/rust-lang/rust/commit/86c74d3a86c2c001e4c1b9b8876f0ca474ae1a82"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "af05dd1b7156e2910e60eb53cde73b4509d3e337", "filename": "src/test/ui/type-alias-enum-variants/enum-variant-generic-args-pats-pass.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ce48086293e63532fb33584be2c2ea5d67cd1498/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fenum-variant-generic-args-pats-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce48086293e63532fb33584be2c2ea5d67cd1498/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fenum-variant-generic-args-pats-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fenum-variant-generic-args-pats-pass.rs?ref=ce48086293e63532fb33584be2c2ea5d67cd1498", "patch": "@@ -1,15 +1,23 @@\n // run-pass\n \n+// Check that resolving, in the value namespace, to an `enum` variant\n+// through a type alias is well behaved in the presence of generics.\n+// We check for situations with:\n+// 1. a generic type `Alias<T>`, we can type-apply `Alias` when referring to a variant.\n+// 2. a monotype `AliasFixed` of generic `Enum<T>`, we can refer to variants\n+//    and the type-application of `T` in `AliasFixed` is kept.\n+\n #![allow(irrefutable_let_patterns)]\n \n #[allow(dead_code)]\n-enum Enum<T> { TSVariant(T), SVariant { v: T } }\n+enum Enum<T> { TSVariant(T), SVariant { v: T }, UVariant }\n type Alias<T> = Enum<T>;\n type AliasFixed = Enum<()>;\n \n macro_rules! is_variant {\n     (TSVariant, $expr:expr) => (is_variant!(@check TSVariant, (_), $expr));\n     (SVariant, $expr:expr) => (is_variant!(@check SVariant, { v: _ }, $expr));\n+    (UVariant, $expr:expr) => (is_variant!(@check UVariant, {}, $expr));\n     (@check $variant:ident, $matcher:tt, $expr:expr) => (\n         assert!(if let Enum::$variant::<()> $matcher = $expr { true } else { false },\n                 \"expr does not have correct type\");\n@@ -38,4 +46,15 @@ fn main() {\n     is_variant!(SVariant, Alias::<()>::SVariant { v: () });\n \n     is_variant!(SVariant, AliasFixed::SVariant { v: () });\n+\n+    // Unit variant\n+\n+    is_variant!(UVariant, Enum::UVariant);\n+    is_variant!(UVariant, Enum::UVariant::<()>);\n+    is_variant!(UVariant, Enum::<()>::UVariant);\n+\n+    is_variant!(UVariant, Alias::UVariant);\n+    is_variant!(UVariant, Alias::<()>::UVariant);\n+\n+    is_variant!(UVariant, AliasFixed::UVariant);\n }"}]}