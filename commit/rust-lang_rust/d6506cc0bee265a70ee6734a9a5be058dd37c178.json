{"sha": "d6506cc0bee265a70ee6734a9a5be058dd37c178", "node_id": "C_kwDOAAsO6NoAKGQ2NTA2Y2MwYmVlMjY1YTcwZWU2NzM0YTlhNWJlMDU4ZGQzN2MxNzg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-10-16T15:51:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-16T15:51:31Z"}, "message": "Rollup merge of #102953 - WaffleLapkin:better_docs_for_decorate_param, r=RalfJung\n\nImprove docs for `struct_lint_level` function.\n\nr? ``@RalfJung``\n\nDoes this answer your questions?", "tree": {"sha": "1f023b0264831694afdc02144fd09c582b047562", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f023b0264831694afdc02144fd09c582b047562"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6506cc0bee265a70ee6734a9a5be058dd37c178", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjTCiDCRBK7hj4Ov3rIwAAIFQIADieKMA46YcKUPqqExJDecDq\nhVB/XhfzDFGPI0uPRnBuBX2i4Nan1xOde2mo6y6I6ZVhAT4OJdjuGlTV/q4U4D1Z\nhwTmEKdS8I50OFkU1CiZ12VHSoamT3VkkZoUMO8HohXRm0Abq6aTKwNqVXB53US7\nZFi/VaMlU0efNwNtWi+o4w+aBObml9kGWo9atL77O/CFsARExeiKBAym7zeOa//i\ne+/nIULTBJuzg8opwQHFZmfPnlN1tHuZoK7LmUKgJaXvq+wLCYyJGXWUTHxY/LE8\nDJg35swvFNebpT1GTmUaAND/v3U72ymhfZ/LKslSdmi7gwCvxANb9XiOu+XojZg=\n=WNQ8\n-----END PGP SIGNATURE-----\n", "payload": "tree 1f023b0264831694afdc02144fd09c582b047562\nparent 91c7d02e69c3704ca283699fd4eeb9b09508e078\nparent 39375e14d7ed418478d459f98cff8c6bd4793189\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1665935491 +0200\ncommitter GitHub <noreply@github.com> 1665935491 +0200\n\nRollup merge of #102953 - WaffleLapkin:better_docs_for_decorate_param, r=RalfJung\n\nImprove docs for `struct_lint_level` function.\n\nr? ``@RalfJung``\n\nDoes this answer your questions?\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6506cc0bee265a70ee6734a9a5be058dd37c178", "html_url": "https://github.com/rust-lang/rust/commit/d6506cc0bee265a70ee6734a9a5be058dd37c178", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6506cc0bee265a70ee6734a9a5be058dd37c178/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91c7d02e69c3704ca283699fd4eeb9b09508e078", "url": "https://api.github.com/repos/rust-lang/rust/commits/91c7d02e69c3704ca283699fd4eeb9b09508e078", "html_url": "https://github.com/rust-lang/rust/commit/91c7d02e69c3704ca283699fd4eeb9b09508e078"}, {"sha": "39375e14d7ed418478d459f98cff8c6bd4793189", "url": "https://api.github.com/repos/rust-lang/rust/commits/39375e14d7ed418478d459f98cff8c6bd4793189", "html_url": "https://github.com/rust-lang/rust/commit/39375e14d7ed418478d459f98cff8c6bd4793189"}], "stats": {"total": 66, "additions": 66, "deletions": 0}, "files": [{"sha": "63a11877333ef64b81b962ba92b7dbdd8c5e85fe", "filename": "compiler/rustc_lint/src/context.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d6506cc0bee265a70ee6734a9a5be058dd37c178/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6506cc0bee265a70ee6734a9a5be058dd37c178/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs?ref=d6506cc0bee265a70ee6734a9a5be058dd37c178", "patch": "@@ -574,6 +574,11 @@ pub trait LintContext: Sized {\n     fn sess(&self) -> &Session;\n     fn lints(&self) -> &LintStore;\n \n+    /// Emit a lint at the appropriate level, with an optional associated span and an existing diagnostic.\n+    ///\n+    /// Return value of the `decorate` closure is ignored, see [`struct_lint_level`] for a detailed explanation.\n+    ///\n+    /// [`struct_lint_level`]: rustc_middle::lint::struct_lint_level#decorate-signature\n     fn lookup_with_diagnostics(\n         &self,\n         lint: &'static Lint,\n@@ -872,6 +877,11 @@ pub trait LintContext: Sized {\n \n     // FIXME: These methods should not take an Into<MultiSpan> -- instead, callers should need to\n     // set the span in their `decorate` function (preferably using set_span).\n+    /// Emit a lint at the appropriate level, with an optional associated span.\n+    ///\n+    /// Return value of the `decorate` closure is ignored, see [`struct_lint_level`] for a detailed explanation.\n+    ///\n+    /// [`struct_lint_level`]: rustc_middle::lint::struct_lint_level#decorate-signature\n     fn lookup<S: Into<MultiSpan>>(\n         &self,\n         lint: &'static Lint,\n@@ -893,6 +903,11 @@ pub trait LintContext: Sized {\n         self.lookup(lint, Some(span), decorator.msg(), |diag| decorator.decorate_lint(diag));\n     }\n \n+    /// Emit a lint at the appropriate level, with an associated span.\n+    ///\n+    /// Return value of the `decorate` closure is ignored, see [`struct_lint_level`] for a detailed explanation.\n+    ///\n+    /// [`struct_lint_level`]: rustc_middle::lint::struct_lint_level#decorate-signature\n     fn struct_span_lint<S: Into<MultiSpan>>(\n         &self,\n         lint: &'static Lint,\n@@ -914,6 +929,10 @@ pub trait LintContext: Sized {\n     }\n \n     /// Emit a lint at the appropriate level, with no associated span.\n+    ///\n+    /// Return value of the `decorate` closure is ignored, see [`struct_lint_level`] for a detailed explanation.\n+    ///\n+    /// [`struct_lint_level`]: rustc_middle::lint::struct_lint_level#decorate-signature\n     fn lint(\n         &self,\n         lint: &'static Lint,"}, {"sha": "d3879ff487de9c81df1adb64e7884816bffa6776", "filename": "compiler/rustc_lint/src/levels.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d6506cc0bee265a70ee6734a9a5be058dd37c178/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6506cc0bee265a70ee6734a9a5be058dd37c178/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flevels.rs?ref=d6506cc0bee265a70ee6734a9a5be058dd37c178", "patch": "@@ -1069,6 +1069,10 @@ impl<'s, P: LintLevelsProvider> LintLevelsBuilder<'s, P> {\n \n     /// Used to emit a lint-related diagnostic based on the current state of\n     /// this lint context.\n+    ///\n+    /// Return value of the `decorate` closure is ignored, see [`struct_lint_level`] for a detailed explanation.\n+    ///\n+    /// [`struct_lint_level`]: rustc_middle::lint::struct_lint_level#decorate-signature\n     pub(crate) fn struct_lint(\n         &self,\n         lint: &'static Lint,"}, {"sha": "79522bd0b2b2aeb84c1325cd1866eff3b393ac9e", "filename": "compiler/rustc_middle/src/lint.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/d6506cc0bee265a70ee6734a9a5be058dd37c178/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6506cc0bee265a70ee6734a9a5be058dd37c178/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Flint.rs?ref=d6506cc0bee265a70ee6734a9a5be058dd37c178", "patch": "@@ -274,6 +274,39 @@ pub fn explain_lint_level_source(\n     }\n }\n \n+/// The innermost function for emitting lints.\n+///\n+/// If you are loocking to implement a lint, look for higher level functions,\n+/// for example:\n+/// - [`TyCtxt::emit_spanned_lint`]\n+/// - [`TyCtxt::struct_span_lint_hir`]\n+/// - [`TyCtxt::emit_lint`]\n+/// - [`TyCtxt::struct_lint_node`]\n+/// - `LintContext::lookup`\n+///\n+/// ## `decorate` signature\n+///\n+/// The return value of `decorate` is ignored by this function. So what is the\n+/// point of returning `&'b mut DiagnosticBuilder<'a, ()>`?\n+///\n+/// There are 2 reasons for this signature.\n+///\n+/// First of all, it prevents accidental use of `.emit()` -- it's clear that the\n+/// builder will be later used and shouldn't be emitted right away (this is\n+/// especially important because the old API expected you to call `.emit()` in\n+/// the closure).\n+///\n+/// Second of all, it makes the most common case of adding just a single label\n+/// /suggestion much nicer, since [`DiagnosticBuilder`] methods return\n+/// `&mut DiagnosticBuilder`, you can just chain methods, without needed\n+/// awkward `{ ...; }`:\n+/// ```ignore pseudo-code\n+/// struct_lint_level(\n+///     ...,\n+///     |lint| lint.span_label(sp, \"lbl\")\n+///     //          ^^^^^^^^^^^^^^^^^^^^^ returns `&mut DiagnosticBuilder` by default\n+/// )\n+/// ```\n pub fn struct_lint_level(\n     sess: &Session,\n     lint: &'static Lint,"}, {"sha": "8636c4465d46f2163663aec2ac3edd5aef0b0d47", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d6506cc0bee265a70ee6734a9a5be058dd37c178/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6506cc0bee265a70ee6734a9a5be058dd37c178/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=d6506cc0bee265a70ee6734a9a5be058dd37c178", "patch": "@@ -2823,6 +2823,11 @@ impl<'tcx> TyCtxt<'tcx> {\n         })\n     }\n \n+    /// Emit a lint at the appropriate level for a hir node, with an associated span.\n+    ///\n+    /// Return value of the `decorate` closure is ignored, see [`struct_lint_level`] for a detailed explanation.\n+    ///\n+    /// [`struct_lint_level`]: rustc_middle::lint::struct_lint_level#decorate-signature\n     pub fn struct_span_lint_hir(\n         self,\n         lint: &'static Lint,\n@@ -2848,6 +2853,11 @@ impl<'tcx> TyCtxt<'tcx> {\n         self.struct_lint_node(lint, id, decorator.msg(), |diag| decorator.decorate_lint(diag))\n     }\n \n+    /// Emit a lint at the appropriate level for a hir node.\n+    ///\n+    /// Return value of the `decorate` closure is ignored, see [`struct_lint_level`] for a detailed explanation.\n+    ///\n+    /// [`struct_lint_level`]: rustc_middle::lint::struct_lint_level#decorate-signature\n     pub fn struct_lint_node(\n         self,\n         lint: &'static Lint,"}]}