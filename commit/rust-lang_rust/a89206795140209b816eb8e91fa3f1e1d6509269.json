{"sha": "a89206795140209b816eb8e91fa3f1e1d6509269", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4OTIwNjc5NTE0MDIwOWI4MTZlYjhlOTFmYTNmMWUxZDY1MDkyNjk=", "commit": {"author": {"name": "Jeremy Kolb", "email": "kjeremy@gmail.com", "date": "2019-01-26T15:35:23Z"}, "committer": {"name": "Jeremy Kolb", "email": "kjeremy@gmail.com", "date": "2019-01-26T15:35:23Z"}, "message": "Make doc comments optional", "tree": {"sha": "7706214d06fc902b5eb7e500815322ab6fa71420", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7706214d06fc902b5eb7e500815322ab6fa71420"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a89206795140209b816eb8e91fa3f1e1d6509269", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a89206795140209b816eb8e91fa3f1e1d6509269", "html_url": "https://github.com/rust-lang/rust/commit/a89206795140209b816eb8e91fa3f1e1d6509269", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a89206795140209b816eb8e91fa3f1e1d6509269/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9e0ea03986294f58c371d0329926709ae2f164c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9e0ea03986294f58c371d0329926709ae2f164c", "html_url": "https://github.com/rust-lang/rust/commit/e9e0ea03986294f58c371d0329926709ae2f164c"}], "stats": {"total": 46, "additions": 27, "deletions": 19}, "files": [{"sha": "5db72c08a3e7c39c90a5b133d474e722f14db483", "filename": "crates/ra_hir/src/docs.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a89206795140209b816eb8e91fa3f1e1d6509269/crates%2Fra_hir%2Fsrc%2Fdocs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a89206795140209b816eb8e91fa3f1e1d6509269/crates%2Fra_hir%2Fsrc%2Fdocs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fdocs.rs?ref=a89206795140209b816eb8e91fa3f1e1d6509269", "patch": "@@ -27,10 +27,5 @@ pub trait Docs {\n }\n \n pub(crate) fn docs_from_ast(node: &impl ast::DocCommentsOwner) -> Option<Documentation> {\n-    let comments = node.doc_comment_text();\n-    if comments.is_empty() {\n-        None\n-    } else {\n-        Some(Documentation::new(&comments))\n-    }\n+    node.doc_comment_text().map(|it| Documentation::new(&it))\n }"}, {"sha": "7554c4aeedaa43846b16f41be97e9b08231bd0b5", "filename": "crates/ra_ide_api/src/call_info.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a89206795140209b816eb8e91fa3f1e1d6509269/crates%2Fra_ide_api%2Fsrc%2Fcall_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a89206795140209b816eb8e91fa3f1e1d6509269/crates%2Fra_ide_api%2Fsrc%2Fcall_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcall_info.rs?ref=a89206795140209b816eb8e91fa3f1e1d6509269", "patch": "@@ -120,8 +120,7 @@ impl CallInfo {\n         };\n \n         let mut doc = None;\n-        let docs = node.doc_comment_text();\n-        if !docs.is_empty() {\n+        if let Some(docs) = node.doc_comment_text() {\n             // Massage markdown\n             let mut processed_lines = Vec::new();\n             let mut in_code_block = false;"}, {"sha": "f993a461c35cfa4991d783c7757f9dc66e542feb", "filename": "crates/ra_ide_api/src/hover.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a89206795140209b816eb8e91fa3f1e1d6509269/crates%2Fra_ide_api%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a89206795140209b816eb8e91fa3f1e1d6509269/crates%2Fra_ide_api%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fhover.rs?ref=a89206795140209b816eb8e91fa3f1e1d6509269", "patch": "@@ -100,12 +100,7 @@ impl NavigationTarget {\n     fn docs(&self, db: &RootDatabase) -> Option<String> {\n         let node = self.node(db)?;\n         fn doc_comments<N: ast::DocCommentsOwner>(node: &N) -> Option<String> {\n-            let comments = node.doc_comment_text();\n-            if comments.is_empty() {\n-                None\n-            } else {\n-                Some(comments)\n-            }\n+            node.doc_comment_text()\n         }\n \n         visitor()"}, {"sha": "d59890d9569efd18e5541ee99a915ad0d8b784a6", "filename": "crates/ra_syntax/src/ast.rs", "status": "modified", "additions": 24, "deletions": 5, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/a89206795140209b816eb8e91fa3f1e1d6509269/crates%2Fra_syntax%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a89206795140209b816eb8e91fa3f1e1d6509269/crates%2Fra_syntax%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast.rs?ref=a89206795140209b816eb8e91fa3f1e1d6509269", "patch": "@@ -117,8 +117,9 @@ pub trait DocCommentsOwner: AstNode {\n     /// Returns the textual content of a doc comment block as a single string.\n     /// That is, strips leading `///` (+ optional 1 character of whitespace)\n     /// and joins lines.\n-    fn doc_comment_text(&self) -> std::string::String {\n-        self.doc_comments()\n+    fn doc_comment_text(&self) -> Option<std::string::String> {\n+        let docs = self\n+            .doc_comments()\n             .filter(|comment| comment.is_doc_comment())\n             .map(|comment| {\n                 let prefix_len = comment.prefix().len();\n@@ -139,7 +140,13 @@ pub trait DocCommentsOwner: AstNode {\n \n                 line[pos..].to_owned()\n             })\n-            .join(\"\\n\")\n+            .join(\"\\n\");\n+\n+        if docs.is_empty() {\n+            None\n+        } else {\n+            Some(docs)\n+        }\n     }\n }\n \n@@ -699,6 +706,18 @@ impl BindPat {\n     }\n }\n \n+#[test]\n+fn test_doc_comment_none() {\n+    let file = SourceFile::parse(\n+        r#\"\n+        // non-doc\n+        mod foo {}\n+        \"#,\n+    );\n+    let module = file.syntax().descendants().find_map(Module::cast).unwrap();\n+    assert!(module.doc_comment_text().is_none());\n+}\n+\n #[test]\n fn test_doc_comment_of_items() {\n     let file = SourceFile::parse(\n@@ -709,7 +728,7 @@ fn test_doc_comment_of_items() {\n         \"#,\n     );\n     let module = file.syntax().descendants().find_map(Module::cast).unwrap();\n-    assert_eq!(\"doc\", module.doc_comment_text());\n+    assert_eq!(\"doc\", module.doc_comment_text().unwrap());\n }\n \n #[test]\n@@ -728,6 +747,6 @@ fn test_doc_comment_preserves_indents() {\n     let module = file.syntax().descendants().find_map(Module::cast).unwrap();\n     assert_eq!(\n         \"doc1\\n```\\nfn foo() {\\n    // ...\\n}\\n```\",\n-        module.doc_comment_text()\n+        module.doc_comment_text().unwrap()\n     );\n }"}]}