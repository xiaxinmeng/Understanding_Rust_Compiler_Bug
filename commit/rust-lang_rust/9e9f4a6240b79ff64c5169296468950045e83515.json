{"sha": "9e9f4a6240b79ff64c5169296468950045e83515", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllOWY0YTYyNDBiNzlmZjY0YzUxNjkyOTY0Njg5NTAwNDVlODM1MTU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-16T22:29:24Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-16T22:31:53Z"}, "message": "core: Remove str::init_elt\n\nThis was added based on my FIXME, but I no longer believe it has a place in\ncore::str, partly because it doesn't follow current naming conventions, and\npartly because it can be immitated with a one liner using str::from_chars and\nvec::from_elem. I have replaced the existing uses with said one-liner.", "tree": {"sha": "f5ea2245209a5fc37c153e5a115c1c0371fff9fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5ea2245209a5fc37c153e5a115c1c0371fff9fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e9f4a6240b79ff64c5169296468950045e83515", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e9f4a6240b79ff64c5169296468950045e83515", "html_url": "https://github.com/rust-lang/rust/commit/9e9f4a6240b79ff64c5169296468950045e83515", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e9f4a6240b79ff64c5169296468950045e83515/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1680ccce1ed1b89bc746c6c764173e8f0b233ca6", "url": "https://api.github.com/repos/rust-lang/rust/commits/1680ccce1ed1b89bc746c6c764173e8f0b233ca6", "html_url": "https://github.com/rust-lang/rust/commit/1680ccce1ed1b89bc746c6c764173e8f0b233ca6"}], "stats": {"total": 19, "additions": 4, "deletions": 15}, "files": [{"sha": "c184a5d4a285d7f2ac3d265c58c30e2b98060878", "filename": "src/libcore/extfmt.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9e9f4a6240b79ff64c5169296468950045e83515/src%2Flibcore%2Fextfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e9f4a6240b79ff64c5169296468950045e83515/src%2Flibcore%2Fextfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fextfmt.rs?ref=9e9f4a6240b79ff64c5169296468950045e83515", "patch": "@@ -373,7 +373,7 @@ mod rt {\n                 let len = str::char_len(s);\n                 if len < prec {\n                     let diff = prec - len;\n-                    let pad = str::init_elt(diff, '0');\n+                    let pad = str::from_chars(vec::from_elem(diff, '0'));\n                     pad + s\n                 } else { s }\n             };\n@@ -398,7 +398,7 @@ mod rt {\n         let mut padchar = ' ';\n         let diff = uwidth - strlen;\n         if have_flag(cv.flags, flag_left_justify) {\n-            let padstr = str::init_elt(diff, padchar);\n+            let padstr = str::from_chars(vec::from_elem(diff, padchar));\n             ret s + padstr;\n         }\n         let {might_zero_pad, signed} = alt mode {\n@@ -418,7 +418,7 @@ mod rt {\n                 false\n             }\n         };\n-        let padstr = str::init_elt(diff, padchar);\n+        let padstr = str::from_chars(vec::from_elem(diff, padchar));\n         // This is completely heinous. If we have a signed value then\n         // potentially rip apart the intermediate result and insert some\n         // zeros. It may make sense to convert zero padding to a precision\n@@ -427,7 +427,7 @@ mod rt {\n         if signed && zero_padding && str::len(s) > 0u {\n             let head = str::shift_char(s);\n             if head == '+' || head == '-' || head == ' ' {\n-                let headstr = str::init_elt(1u, head);\n+                let headstr = str::from_chars(vec::from_elem(1u, head));\n                 ret headstr + padstr + s;\n             }\n             else {"}, {"sha": "224b52aa695a431676625e8c4c2272dce8e18cf6", "filename": "src/libcore/str.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9e9f4a6240b79ff64c5169296468950045e83515/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e9f4a6240b79ff64c5169296468950045e83515/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=9e9f4a6240b79ff64c5169296468950045e83515", "patch": "@@ -20,7 +20,6 @@ export\n    push_char,\n    concat,\n    connect,\n-   init_elt,\n \n    // Reinterpretation\n    as_bytes,\n@@ -241,16 +240,6 @@ fn connect(v: [str], sep: str) -> str {\n     ret s;\n }\n \n-#[doc = \"Returns a string of <n_elts> repetitions of <c>, which must be \\\n-           UTF-8\"]\n-fn init_elt(n_elts: uint, c: char) -> str {\n-  let mut rslt = \"\";\n-  uint::range(0u, n_elts) {|_i|\n-      push_char(rslt, c);\n-  }\n-  rslt\n-}\n-\n /*\n Section: Adding to and removing from a string\n */"}]}