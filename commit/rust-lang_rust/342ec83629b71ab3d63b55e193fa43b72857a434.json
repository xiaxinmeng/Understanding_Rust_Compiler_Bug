{"sha": "342ec83629b71ab3d63b55e193fa43b72857a434", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0MmVjODM2MjliNzFhYjNkNjNiNTVlMTkzZmE0M2I3Mjg1N2E0MzQ=", "commit": {"author": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2021-03-02T19:33:28Z"}, "committer": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2021-03-02T19:33:28Z"}, "message": "nits", "tree": {"sha": "d94b7d482ec6665f8e2834fa9a76034cfff47399", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d94b7d482ec6665f8e2834fa9a76034cfff47399"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/342ec83629b71ab3d63b55e193fa43b72857a434", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/342ec83629b71ab3d63b55e193fa43b72857a434", "html_url": "https://github.com/rust-lang/rust/commit/342ec83629b71ab3d63b55e193fa43b72857a434", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/342ec83629b71ab3d63b55e193fa43b72857a434/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f97e075e92a068a66ff955ba64e1cf9066c9548b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f97e075e92a068a66ff955ba64e1cf9066c9548b", "html_url": "https://github.com/rust-lang/rust/commit/f97e075e92a068a66ff955ba64e1cf9066c9548b"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "7e0c74c8d2b1e4a4f27d1660d5b5305eb7e08855", "filename": "compiler/rustc_trait_selection/src/traits/const_evaluatable.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/342ec83629b71ab3d63b55e193fa43b72857a434/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/342ec83629b71ab3d63b55e193fa43b72857a434/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs?ref=342ec83629b71ab3d63b55e193fa43b72857a434", "patch": "@@ -108,7 +108,10 @@ pub fn is_const_evaluatable<'cx, 'tcx>(\n                     FailureKind::MentionsParam => {\n                         return Err(NotConstEvaluatable::MentionsParam);\n                     }\n-                    _ => (),\n+                    FailureKind::Concrete => {\n+                        // Dealt with below by the same code which handles this\n+                        // without the feature gate.\n+                    }\n                 }\n             }\n             None => {\n@@ -158,10 +161,12 @@ pub fn is_const_evaluatable<'cx, 'tcx>(\n \n     debug!(?concrete, \"is_const_evaluatable\");\n     match concrete {\n-        Err(ErrorHandled::TooGeneric) if !substs.has_infer_types_or_consts() => {\n-            Err(NotConstEvaluatable::MentionsParam)\n+        Err(ErrorHandled::TooGeneric) => {\n+            return Err(match substs.has_infer_types_or_consts() {\n+                true => NotConstEvaluatable::MentionsInfer,\n+                false => NotConstEvaluatable::MentionsParam,\n+            });\n         }\n-        Err(ErrorHandled::TooGeneric) => Err(NotConstEvaluatable::MentionsInfer),\n         Err(ErrorHandled::Linted) => {\n             infcx.tcx.sess.delay_span_bug(span, \"constant in type had error reported as lint\");\n             Err(NotConstEvaluatable::Error(ErrorReported))"}]}