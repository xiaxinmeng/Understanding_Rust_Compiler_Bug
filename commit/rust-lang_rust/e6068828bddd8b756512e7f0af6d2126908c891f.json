{"sha": "e6068828bddd8b756512e7f0af6d2126908c891f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2MDY4ODI4YmRkZDhiNzU2NTEyZTdmMGFmNmQyMTI2OTA4Yzg5MWY=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-08-16T16:13:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-08-16T16:13:20Z"}, "message": "Rollup merge of #53313 - llogiq:two-small-improvements, r=estebank\n\nTwo small improvements\n\nIn `librustc_apfloat/ieee.rs`, use the iterator.[r]find methods to simplify the code. In `libserialize/json.rs`, make use of the fact that `Vec.last` on an empty `Vec` returns `None` to simplify the code to a single match.", "tree": {"sha": "a092b6d81d7763121b805b8bec735b9b2c38c1c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a092b6d81d7763121b805b8bec735b9b2c38c1c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6068828bddd8b756512e7f0af6d2126908c891f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbdaKgCRBK7hj4Ov3rIwAAdHIIAFgCFHNNhUzzk7NVuhnlpbOD\nYhY1KLG3q7YZqvhPOkr9M1Y4ip19IxWZRqtSSKCgPYraf5pw+5TfoMRVZ6Hsn2g2\nw0hrGmXXaGMnuBQvxzKkht5JQc1wEwM6if6DbAzBMHdFMq7t97ewTYo8TwLn1Lv/\n8FUtTaNJYIa1GPOhpaK/qAhsofyp04l9nEZvnpaW0SCRUpSvVFGL3AaB+ubG6oLH\nSmz1I4fviOchC22UO665VlexHQfgWT75d3HWHX3LeuUMh7Bp86pWLG4+8gzUD4gk\neW4TlqEtMptxFnZJJGAHqmtIAiEtycspp3ASwWs3LUbLjUxCRkMueLM3IzaoQxc=\n=N8jo\n-----END PGP SIGNATURE-----\n", "payload": "tree a092b6d81d7763121b805b8bec735b9b2c38c1c9\nparent 07ce2a35180bf7c8ce05ac45993ee34f65612b65\nparent 4cae6650fd9f25c4fb1338c896783193392be1af\nauthor kennytm <kennytm@gmail.com> 1534436000 +0800\ncommitter GitHub <noreply@github.com> 1534436000 +0800\n\nRollup merge of #53313 - llogiq:two-small-improvements, r=estebank\n\nTwo small improvements\n\nIn `librustc_apfloat/ieee.rs`, use the iterator.[r]find methods to simplify the code. In `libserialize/json.rs`, make use of the fact that `Vec.last` on an empty `Vec` returns `None` to simplify the code to a single match.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6068828bddd8b756512e7f0af6d2126908c891f", "html_url": "https://github.com/rust-lang/rust/commit/e6068828bddd8b756512e7f0af6d2126908c891f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6068828bddd8b756512e7f0af6d2126908c891f/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07ce2a35180bf7c8ce05ac45993ee34f65612b65", "url": "https://api.github.com/repos/rust-lang/rust/commits/07ce2a35180bf7c8ce05ac45993ee34f65612b65", "html_url": "https://github.com/rust-lang/rust/commit/07ce2a35180bf7c8ce05ac45993ee34f65612b65"}, {"sha": "4cae6650fd9f25c4fb1338c896783193392be1af", "url": "https://api.github.com/repos/rust-lang/rust/commits/4cae6650fd9f25c4fb1338c896783193392be1af", "html_url": "https://github.com/rust-lang/rust/commit/4cae6650fd9f25c4fb1338c896783193392be1af"}], "stats": {"total": 25, "additions": 7, "deletions": 18}, "files": [{"sha": "87d59d2e763cbe89743452e59379e8888f639f3a", "filename": "src/librustc_apfloat/ieee.rs", "status": "modified", "additions": 4, "deletions": 14, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e6068828bddd8b756512e7f0af6d2126908c891f/src%2Flibrustc_apfloat%2Fieee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6068828bddd8b756512e7f0af6d2126908c891f/src%2Flibrustc_apfloat%2Fieee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_apfloat%2Fieee.rs?ref=e6068828bddd8b756512e7f0af6d2126908c891f", "patch": "@@ -2306,24 +2306,14 @@ mod sig {\n \n     /// One, not zero, based LSB. That is, returns 0 for a zeroed significand.\n     pub(super) fn olsb(limbs: &[Limb]) -> usize {\n-        for (i, &limb) in limbs.iter().enumerate() {\n-            if limb != 0 {\n-                return i * LIMB_BITS + limb.trailing_zeros() as usize + 1;\n-            }\n-        }\n-\n-        0\n+        limbs.iter().enumerate().find(|(_, &limb)| limb != 0).map_or(0,\n+            |(i, limb)| i * LIMB_BITS + limb.trailing_zeros() as usize + 1)\n     }\n \n     /// One, not zero, based MSB. That is, returns 0 for a zeroed significand.\n     pub(super) fn omsb(limbs: &[Limb]) -> usize {\n-        for (i, &limb) in limbs.iter().enumerate().rev() {\n-            if limb != 0 {\n-                return (i + 1) * LIMB_BITS - limb.leading_zeros() as usize;\n-            }\n-        }\n-\n-        0\n+        limbs.iter().enumerate().rfind(|(_, &limb)| limb != 0).map_or(0,\n+            |(i, limb)| (i + 1) * LIMB_BITS - limb.leading_zeros() as usize)\n     }\n \n     /// Comparison (unsigned) of two significands."}, {"sha": "35ef6327de5fd81f73c63b2092cf79fc6da36745", "filename": "src/libserialize/json.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e6068828bddd8b756512e7f0af6d2126908c891f/src%2Flibserialize%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6068828bddd8b756512e7f0af6d2126908c891f/src%2Flibserialize%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fjson.rs?ref=e6068828bddd8b756512e7f0af6d2126908c891f", "patch": "@@ -1390,10 +1390,9 @@ impl Stack {\n \n     // Used by Parser to test whether the top-most element is an index.\n     fn last_is_index(&self) -> bool {\n-        if let Some(InternalIndex(_)) = self.stack.last() {\n-            true\n-        } else {\n-            false\n+        match self.stack.last() {\n+            Some(InternalIndex(_)) => true,\n+            _ => false,\n         }\n     }\n "}]}