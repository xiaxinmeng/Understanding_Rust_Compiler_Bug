{"sha": "fa177a9db2d7c96ced985d018a0108de033f5ded", "node_id": "C_kwDOAAsO6NoAKGZhMTc3YTlkYjJkN2M5NmNlZDk4NWQwMThhMDEwOGRlMDMzZjVkZWQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-08-29T04:34:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-29T04:34:49Z"}, "message": "Rollup merge of #101116 - GuillaumeGomez:rm-attrs-ty-alias, r=notriddle\n\n[rustdoc] Remove Attrs type alias\n\nWhen working on https://github.com/rust-lang/rust/pull/101006, I was quite confused because of this type alias as I'm used to having rustdoc types into `clean/types.rs`. Anyway, considering how few uses of it we have, I simply removed it.\n\nr? `````@notriddle`````", "tree": {"sha": "3fad4be806a83896996c86943a7b7797fd9e3ea1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3fad4be806a83896996c86943a7b7797fd9e3ea1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa177a9db2d7c96ced985d018a0108de033f5ded", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjDEHpCRBK7hj4Ov3rIwAAHPQIAJFfCvKiApHpNwSIaLH7uaEU\n+Ety0r42gzhyvl/bx/44VC5tqJ0bCl4gI5VUIQJ/Vkmdb5lMIM4xh2+4vZCHFDLK\nTc300vPiw+6/wl1gJmXSNIvKxcywQ2IqKJNBSvZt4GYbwcV6t/wHAhryexguRz9b\ncNe9IavYUtQsX9Z/8J+fmFS46Uy5GaZ5Tpndgb8UbTfWz0WgAE7U1mP4qAP7Fq47\nBTMYQUkWliuw3Ly6gVH2br7FbAC/H+T9e3BDHzCO3Q0FQ3gaiE85IpA9M+S6RWQi\nztcBEAdlTvSZjedPyJoAzdO9/sFWumYp4KW41M6Vq1cciTAbjF4MlX6w2ZpgGvM=\n=Rvlk\n-----END PGP SIGNATURE-----\n", "payload": "tree 3fad4be806a83896996c86943a7b7797fd9e3ea1\nparent 3e5be57de86f3636c10ebb696d36dbe89861f383\nparent 1e005af31b078f584f7adbdebc505ba0cca52706\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1661747689 +0200\ncommitter GitHub <noreply@github.com> 1661747689 +0200\n\nRollup merge of #101116 - GuillaumeGomez:rm-attrs-ty-alias, r=notriddle\n\n[rustdoc] Remove Attrs type alias\n\nWhen working on https://github.com/rust-lang/rust/pull/101006, I was quite confused because of this type alias as I'm used to having rustdoc types into `clean/types.rs`. Anyway, considering how few uses of it we have, I simply removed it.\n\nr? `````@notriddle`````\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa177a9db2d7c96ced985d018a0108de033f5ded", "html_url": "https://github.com/rust-lang/rust/commit/fa177a9db2d7c96ced985d018a0108de033f5ded", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa177a9db2d7c96ced985d018a0108de033f5ded/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e5be57de86f3636c10ebb696d36dbe89861f383", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e5be57de86f3636c10ebb696d36dbe89861f383", "html_url": "https://github.com/rust-lang/rust/commit/3e5be57de86f3636c10ebb696d36dbe89861f383"}, {"sha": "1e005af31b078f584f7adbdebc505ba0cca52706", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e005af31b078f584f7adbdebc505ba0cca52706", "html_url": "https://github.com/rust-lang/rust/commit/1e005af31b078f584f7adbdebc505ba0cca52706"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "31b805f2ed7edf919a82ff6d41b064158010b6c6", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fa177a9db2d7c96ced985d018a0108de033f5ded/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa177a9db2d7c96ced985d018a0108de033f5ded/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=fa177a9db2d7c96ced985d018a0108de033f5ded", "patch": "@@ -24,8 +24,6 @@ use crate::clean::{\n use crate::core::DocContext;\n use crate::formats::item_type::ItemType;\n \n-type Attrs<'hir> = &'hir [ast::Attribute];\n-\n /// Attempt to inline a definition into this AST.\n ///\n /// This function will fetch the definition specified, and if it is\n@@ -46,7 +44,7 @@ pub(crate) fn try_inline(\n     import_def_id: Option<DefId>,\n     res: Res,\n     name: Symbol,\n-    attrs: Option<Attrs<'_>>,\n+    attrs: Option<&[ast::Attribute]>,\n     visited: &mut FxHashSet<DefId>,\n ) -> Option<Vec<clean::Item>> {\n     let did = res.opt_def_id()?;\n@@ -172,7 +170,7 @@ pub(crate) fn try_inline_glob(\n     }\n }\n \n-pub(crate) fn load_attrs<'hir>(cx: &DocContext<'hir>, did: DefId) -> Attrs<'hir> {\n+pub(crate) fn load_attrs<'hir>(cx: &DocContext<'hir>, did: DefId) -> &'hir [ast::Attribute] {\n     cx.tcx.get_attrs_unchecked(did)\n }\n \n@@ -287,7 +285,7 @@ pub(crate) fn build_impls(\n     cx: &mut DocContext<'_>,\n     parent_module: Option<DefId>,\n     did: DefId,\n-    attrs: Option<Attrs<'_>>,\n+    attrs: Option<&[ast::Attribute]>,\n     ret: &mut Vec<clean::Item>,\n ) {\n     let _prof_timer = cx.tcx.sess.prof.generic_activity(\"build_inherent_impls\");\n@@ -303,8 +301,8 @@ pub(crate) fn build_impls(\n pub(crate) fn merge_attrs(\n     cx: &mut DocContext<'_>,\n     parent_module: Option<DefId>,\n-    old_attrs: Attrs<'_>,\n-    new_attrs: Option<Attrs<'_>>,\n+    old_attrs: &[ast::Attribute],\n+    new_attrs: Option<&[ast::Attribute]>,\n ) -> (clean::Attributes, Option<Arc<clean::cfg::Cfg>>) {\n     // NOTE: If we have additional attributes (from a re-export),\n     // always insert them first. This ensure that re-export\n@@ -331,7 +329,7 @@ pub(crate) fn build_impl(\n     cx: &mut DocContext<'_>,\n     parent_module: Option<DefId>,\n     did: DefId,\n-    attrs: Option<Attrs<'_>>,\n+    attrs: Option<&[ast::Attribute]>,\n     ret: &mut Vec<clean::Item>,\n ) {\n     if !cx.inlined.insert(did.into()) {"}]}