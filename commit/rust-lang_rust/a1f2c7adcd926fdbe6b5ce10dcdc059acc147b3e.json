{"sha": "a1f2c7adcd926fdbe6b5ce10dcdc059acc147b3e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExZjJjN2FkY2Q5MjZmZGJlNmI1Y2UxMGRjZGMwNTlhY2MxNDdiM2U=", "commit": {"author": {"name": "Yoshua Wuyts", "email": "yoshuawuyts@gmail.com", "date": "2021-08-08T12:11:47Z"}, "committer": {"name": "Yoshua Wuyts", "email": "yoshuawuyts@gmail.com", "date": "2021-08-08T14:26:25Z"}, "message": "rename variables\n\nAccording to https://github.com/rust-analyzer/rust-analyzer/blob/master/docs/dev/style.md#variable-naming", "tree": {"sha": "e8951c29c64e03418cfb016265566c3abd2c4542", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8951c29c64e03418cfb016265566c3abd2c4542"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1f2c7adcd926fdbe6b5ce10dcdc059acc147b3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1f2c7adcd926fdbe6b5ce10dcdc059acc147b3e", "html_url": "https://github.com/rust-lang/rust/commit/a1f2c7adcd926fdbe6b5ce10dcdc059acc147b3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1f2c7adcd926fdbe6b5ce10dcdc059acc147b3e/comments", "author": {"login": "yoshuawuyts", "id": 2467194, "node_id": "MDQ6VXNlcjI0NjcxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2467194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshuawuyts", "html_url": "https://github.com/yoshuawuyts", "followers_url": "https://api.github.com/users/yoshuawuyts/followers", "following_url": "https://api.github.com/users/yoshuawuyts/following{/other_user}", "gists_url": "https://api.github.com/users/yoshuawuyts/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshuawuyts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshuawuyts/subscriptions", "organizations_url": "https://api.github.com/users/yoshuawuyts/orgs", "repos_url": "https://api.github.com/users/yoshuawuyts/repos", "events_url": "https://api.github.com/users/yoshuawuyts/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshuawuyts/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yoshuawuyts", "id": 2467194, "node_id": "MDQ6VXNlcjI0NjcxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2467194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshuawuyts", "html_url": "https://github.com/yoshuawuyts", "followers_url": "https://api.github.com/users/yoshuawuyts/followers", "following_url": "https://api.github.com/users/yoshuawuyts/following{/other_user}", "gists_url": "https://api.github.com/users/yoshuawuyts/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshuawuyts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshuawuyts/subscriptions", "organizations_url": "https://api.github.com/users/yoshuawuyts/orgs", "repos_url": "https://api.github.com/users/yoshuawuyts/repos", "events_url": "https://api.github.com/users/yoshuawuyts/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshuawuyts/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa09141a8a838a09815aa84668053cc0999f8873", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa09141a8a838a09815aa84668053cc0999f8873", "html_url": "https://github.com/rust-lang/rust/commit/aa09141a8a838a09815aa84668053cc0999f8873"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "e0319adccc61d29a2a640f6e901c53727966ef38", "filename": "crates/ide_assists/src/handlers/replace_derive_with_manual_impl.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a1f2c7adcd926fdbe6b5ce10dcdc059acc147b3e/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1f2c7adcd926fdbe6b5ce10dcdc059acc147b3e/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs?ref=a1f2c7adcd926fdbe6b5ce10dcdc059acc147b3e", "patch": "@@ -170,18 +170,18 @@ fn impl_def_from_trait(\n     let (impl_def, first_assoc_item) =\n         add_trait_assoc_items_to_impl(sema, trait_items, trait_, impl_def, target_scope);\n \n-    if let ast::AssocItem::Fn(fn_) = &first_assoc_item {\n+    if let ast::AssocItem::Fn(func) = &first_assoc_item {\n         if trait_path.segment().unwrap().name_ref().unwrap().text() == \"Debug\" {\n-            gen_debug_impl(adt, fn_, annotated_name);\n+            gen_debug_impl(adt, func, annotated_name);\n         }\n     }\n     Some((impl_def, first_assoc_item))\n }\n \n-fn gen_debug_impl(adt: &ast::Adt, fn_: &ast::Fn, annotated_name: &ast::Name) {\n+fn gen_debug_impl(adt: &ast::Adt, func: &ast::Fn, annotated_name: &ast::Name) {\n     match adt {\n         ast::Adt::Union(_) => {} // `Debug` cannot be derived for unions, so no default impl can be provided.\n-        ast::Adt::Enum(_) => {}  // TODO\n+        ast::Adt::Enum(enum_) => {} // TODO\n         ast::Adt::Struct(strukt) => match strukt.field_list() {\n             Some(ast::FieldList::RecordFieldList(field_list)) => {\n                 let name = format!(\"\\\"{}\\\"\", annotated_name);\n@@ -200,7 +200,7 @@ fn gen_debug_impl(adt: &ast::Adt, fn_: &ast::Fn, annotated_name: &ast::Name) {\n                 }\n                 let expr = make::expr_method_call(expr, \"finish\", make::arg_list(None));\n                 let body = make::block_expr(None, Some(expr)).indent(ast::edit::IndentLevel(1));\n-                ted::replace(fn_.body().unwrap().syntax(), body.clone_for_update().syntax());\n+                ted::replace(func.body().unwrap().syntax(), body.clone_for_update().syntax());\n             }\n             Some(ast::FieldList::TupleFieldList(field_list)) => {\n                 let name = format!(\"\\\"{}\\\"\", annotated_name);\n@@ -216,7 +216,7 @@ fn gen_debug_impl(adt: &ast::Adt, fn_: &ast::Fn, annotated_name: &ast::Name) {\n                 }\n                 let expr = make::expr_method_call(expr, \"finish\", make::arg_list(None));\n                 let body = make::block_expr(None, Some(expr)).indent(ast::edit::IndentLevel(1));\n-                ted::replace(fn_.body().unwrap().syntax(), body.clone_for_update().syntax());\n+                ted::replace(func.body().unwrap().syntax(), body.clone_for_update().syntax());\n             }\n             None => {\n                 let name = format!(\"\\\"{}\\\"\", annotated_name);\n@@ -225,7 +225,7 @@ fn gen_debug_impl(adt: &ast::Adt, fn_: &ast::Fn, annotated_name: &ast::Name) {\n                 let expr = make::expr_method_call(target, \"debug_struct\", args);\n                 let expr = make::expr_method_call(expr, \"finish\", make::arg_list(None));\n                 let body = make::block_expr(None, Some(expr)).indent(ast::edit::IndentLevel(1));\n-                ted::replace(fn_.body().unwrap().syntax(), body.clone_for_update().syntax());\n+                ted::replace(func.body().unwrap().syntax(), body.clone_for_update().syntax());\n             }\n         },\n     }"}]}