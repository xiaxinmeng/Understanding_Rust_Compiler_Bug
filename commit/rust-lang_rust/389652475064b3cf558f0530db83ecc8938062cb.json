{"sha": "389652475064b3cf558f0530db83ecc8938062cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4OTY1MjQ3NTA2NGIzY2Y1NThmMDUzMGRiODNlY2M4OTM4MDYyY2I=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-29T01:01:27Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-29T01:22:15Z"}, "message": "Drop the previous reference when receiving. Closes #763", "tree": {"sha": "4763fe3a5300123de8a110580b86f2568bc6e185", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4763fe3a5300123de8a110580b86f2568bc6e185"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/389652475064b3cf558f0530db83ecc8938062cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/389652475064b3cf558f0530db83ecc8938062cb", "html_url": "https://github.com/rust-lang/rust/commit/389652475064b3cf558f0530db83ecc8938062cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/389652475064b3cf558f0530db83ecc8938062cb/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf9957386018e0c7858052b131e9a898cd6ce3ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf9957386018e0c7858052b131e9a898cd6ce3ff", "html_url": "https://github.com/rust-lang/rust/commit/bf9957386018e0c7858052b131e9a898cd6ce3ff"}], "stats": {"total": 64, "additions": 56, "deletions": 8}, "files": [{"sha": "133e2a33c5918acfc021283df398d27090b2a756", "filename": "src/comp/middle/trans_comm.rs", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/389652475064b3cf558f0530db83ecc8938062cb/src%2Fcomp%2Fmiddle%2Ftrans_comm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/389652475064b3cf558f0530db83ecc8938062cb/src%2Fcomp%2Fmiddle%2Ftrans_comm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans_comm.rs?ref=389652475064b3cf558f0530db83ecc8938062cb", "patch": "@@ -229,19 +229,32 @@ fn trans_send(cx: &@block_ctxt, lhs: &@ast::expr, rhs: &@ast::expr,\n fn trans_recv(cx: &@block_ctxt, lhs: &@ast::expr, rhs: &@ast::expr,\n               id: ast::node_id) -> result {\n     let bcx = cx;\n-    let data = trans_lval(bcx, rhs);\n-    assert (data.is_mem);\n-    bcx = data.res.bcx;\n     // FIXME: calculate copy init-ness in typestate.\n \n+    let unit_ty = node_id_type(cx.fcx.lcx.ccx, id);\n+    let tmp_alloc = alloc_ty(bcx, unit_ty);\n+    bcx = tmp_alloc.bcx;\n+\n     let prt = trans_expr(bcx, lhs);\n     bcx = prt.bcx;\n-    let lldataptr = bcx.build.PointerCast(data.res.val, T_ptr(T_ptr(T_i8())));\n+    let lldataptr = bcx.build.PointerCast(tmp_alloc.val,\n+                                          T_ptr(T_ptr(T_i8())));\n     let llportptr = bcx.build.PointerCast(prt.val, T_opaque_port_ptr());\n     bcx.build.Call(bcx.fcx.lcx.ccx.upcalls.recv,\n                    ~[bcx.fcx.lltaskptr, lldataptr, llportptr]);\n \n-    ret rslt(bcx, data.res.val);\n+    let tmp = load_if_immediate(bcx, tmp_alloc.val, unit_ty);\n+\n+    let data = trans_lval(bcx, rhs);\n+    assert (data.is_mem);\n+    bcx = data.res.bcx;\n+\n+    let tmp_lval = lval_val(bcx, tmp);\n+\n+    let recv_res =\n+        move_val(bcx, DROP_EXISTING, data.res.val, tmp_lval, unit_ty);\n+\n+    ret rslt(recv_res.bcx, recv_res.val);\n }\n \n // Does a deep copy of a value. This is needed for passing arguments to child"}, {"sha": "c23b746ad2140fe4ee95789ab29373cef3492eb6", "filename": "src/test/run-pass/chan-leak.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/389652475064b3cf558f0530db83ecc8938062cb/src%2Ftest%2Frun-pass%2Fchan-leak.rs", "raw_url": "https://github.com/rust-lang/rust/raw/389652475064b3cf558f0530db83ecc8938062cb/src%2Ftest%2Frun-pass%2Fchan-leak.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fchan-leak.rs?ref=389652475064b3cf558f0530db83ecc8938062cb", "patch": "@@ -0,0 +1,36 @@\n+// Issue #763\n+\n+use std;\n+import std::task;\n+\n+tag request {\n+  quit;\n+  close(chan[bool]);\n+}\n+\n+type ctx = chan[request];\n+\n+fn request_task(c: chan[ctx]) {\n+    let p: port[request] = port();\n+    c <| chan(p);\n+    let req: request;\n+    p |> req;\n+    // Need to drop req before receiving it again\n+    p |> req;\n+}\n+\n+fn new() -> ctx {\n+    let p: port[ctx] = port();\n+    let t = spawn request_task(chan(p));\n+    let cx: ctx;\n+    p |> cx;\n+    ret cx;\n+}\n+\n+fn main() {\n+    let cx = new();\n+\n+    let p: port[bool] = port();\n+    cx <| close(chan(p));\n+    cx <| quit;\n+}"}, {"sha": "02c636f7c6342c714a915e875d4d688e93b78ab4", "filename": "src/test/run-pass/task-comm-10.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/389652475064b3cf558f0530db83ecc8938062cb/src%2Ftest%2Frun-pass%2Ftask-comm-10.rs", "raw_url": "https://github.com/rust-lang/rust/raw/389652475064b3cf558f0530db83ecc8938062cb/src%2Ftest%2Frun-pass%2Ftask-comm-10.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-10.rs?ref=389652475064b3cf558f0530db83ecc8938062cb", "patch": "@@ -6,15 +6,14 @@ import std::task;\n fn start(c: chan[chan[str]]) {\n     let p: port[str];\n \n+    let a;\n+    let b;\n     p = port();\n     c <| chan(p);\n     p |> a;\n     log_err a;\n     p |> b;\n     log_err b;\n-\n-    let a;\n-    let b;\n }\n \n fn main() {"}]}