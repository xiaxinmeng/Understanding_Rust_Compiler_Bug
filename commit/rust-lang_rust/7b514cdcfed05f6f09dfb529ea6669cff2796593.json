{"sha": "7b514cdcfed05f6f09dfb529ea6669cff2796593", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiNTE0Y2RjZmVkMDVmNmYwOWRmYjUyOWVhNjY2OWNmZjI3OTY1OTM=", "commit": {"author": {"name": "Jubilee", "email": "46493976+workingjubilee@users.noreply.github.com", "date": "2021-09-11T15:23:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-11T15:23:41Z"}, "message": "Rollup merge of #88668 - hvdijk:x32, r=joshtriplett\n\nChange more x64 size checks to not apply to x32.\n\nCommit 95e096d6 changed a bunch of size checks already, but more have\nbeen added, so this fixes the new ones the same way: the various size\nchecks that are conditional on target_arch = \"x86_64\" were not intended\nto apply to x86_64-unknown-linux-gnux32, so add\ntarget_pointer_width = \"64\" to the conditions.", "tree": {"sha": "06e253b1040e9ebc1da5e49e922e199b5fac6964", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06e253b1040e9ebc1da5e49e922e199b5fac6964"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b514cdcfed05f6f09dfb529ea6669cff2796593", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhPMn9CRBK7hj4Ov3rIwAAdegIAFi1mr8Wf8kJd+7sTzO++PbY\nxX1j0FC/yek4HQ4J9VEdHn4UtC7aBjgq+YdEyu2jAjO5AJiAYKJ6hhxr7KCFIZY+\naUiOF+gG4WnpamQuNeVxp56q47ZGCgDje+KRrxQK3iVSNSI14FVJasd6LgBnafcJ\n+4wMV3WiWgBd5cO9g5cNHINBZY8J+wfWyAGfxwVwqUht5mQ3Bju56H7dOdC4ffpO\nhemsL5XEHmJwjaW547LYp+pqCfqykh/NtHjOwP4psBHJYih5HZ/4eF8fw9TjgqIw\n1WyzOoNyFu3vhnfPWHvSx4NZCVwzlJY/+O/6scWgLsmfrj48D+2tEUvBvKpu2bA=\n=GQKI\n-----END PGP SIGNATURE-----\n", "payload": "tree 06e253b1040e9ebc1da5e49e922e199b5fac6964\nparent 3af42a897fbd205b3f8f36271cb0be9ff1bffe2c\nparent cd75af25e036301d7971f6f302cf6a5593b0a6b5\nauthor Jubilee <46493976+workingjubilee@users.noreply.github.com> 1631373821 -0700\ncommitter GitHub <noreply@github.com> 1631373821 -0700\n\nRollup merge of #88668 - hvdijk:x32, r=joshtriplett\n\nChange more x64 size checks to not apply to x32.\n\nCommit 95e096d6 changed a bunch of size checks already, but more have\nbeen added, so this fixes the new ones the same way: the various size\nchecks that are conditional on target_arch = \"x86_64\" were not intended\nto apply to x86_64-unknown-linux-gnux32, so add\ntarget_pointer_width = \"64\" to the conditions.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b514cdcfed05f6f09dfb529ea6669cff2796593", "html_url": "https://github.com/rust-lang/rust/commit/7b514cdcfed05f6f09dfb529ea6669cff2796593", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b514cdcfed05f6f09dfb529ea6669cff2796593/comments", "author": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3af42a897fbd205b3f8f36271cb0be9ff1bffe2c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3af42a897fbd205b3f8f36271cb0be9ff1bffe2c", "html_url": "https://github.com/rust-lang/rust/commit/3af42a897fbd205b3f8f36271cb0be9ff1bffe2c"}, {"sha": "cd75af25e036301d7971f6f302cf6a5593b0a6b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd75af25e036301d7971f6f302cf6a5593b0a6b5", "html_url": "https://github.com/rust-lang/rust/commit/cd75af25e036301d7971f6f302cf6a5593b0a6b5"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "e40227530cdefe331ba511dc78c03fe6d37e444e", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7b514cdcfed05f6f09dfb529ea6669cff2796593/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b514cdcfed05f6f09dfb529ea6669cff2796593/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=7b514cdcfed05f6f09dfb529ea6669cff2796593", "patch": "@@ -1736,7 +1736,7 @@ pub struct Place<'tcx> {\n     pub projection: &'tcx List<PlaceElem<'tcx>>,\n }\n \n-#[cfg(target_arch = \"x86_64\")]\n+#[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"64\"))]\n static_assert_size!(Place<'_>, 16);\n \n #[derive(Copy, Clone, Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]\n@@ -2062,7 +2062,7 @@ pub enum Operand<'tcx> {\n     Constant(Box<Constant<'tcx>>),\n }\n \n-#[cfg(target_arch = \"x86_64\")]\n+#[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"64\"))]\n static_assert_size!(Operand<'_>, 24);\n \n impl<'tcx> Debug for Operand<'tcx> {\n@@ -2200,7 +2200,7 @@ pub enum Rvalue<'tcx> {\n     Aggregate(Box<AggregateKind<'tcx>>, Vec<Operand<'tcx>>),\n }\n \n-#[cfg(target_arch = \"x86_64\")]\n+#[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"64\"))]\n static_assert_size!(Rvalue<'_>, 40);\n \n #[derive(Clone, Copy, Debug, PartialEq, Eq, TyEncodable, TyDecodable, Hash, HashStable)]\n@@ -2226,7 +2226,7 @@ pub enum AggregateKind<'tcx> {\n     Generator(DefId, SubstsRef<'tcx>, hir::Movability),\n }\n \n-#[cfg(target_arch = \"x86_64\")]\n+#[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"64\"))]\n static_assert_size!(AggregateKind<'_>, 48);\n \n #[derive(Copy, Clone, Debug, PartialEq, PartialOrd, Eq, TyEncodable, TyDecodable, Hash, HashStable)]"}, {"sha": "568682cc3e4e0498228dd4a1319ebc4ccf8a584b", "filename": "compiler/rustc_parse/src/parser/attr_wrapper.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7b514cdcfed05f6f09dfb529ea6669cff2796593/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fattr_wrapper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b514cdcfed05f6f09dfb529ea6669cff2796593/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fattr_wrapper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fattr_wrapper.rs?ref=7b514cdcfed05f6f09dfb529ea6669cff2796593", "patch": "@@ -34,7 +34,7 @@ pub struct AttrWrapper {\n \n // This struct is passed around very frequently,\n // so make sure it doesn't accidentally get larger\n-#[cfg(target_arch = \"x86_64\")]\n+#[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"64\"))]\n rustc_data_structures::static_assert_size!(AttrWrapper, 16);\n \n impl AttrWrapper {"}, {"sha": "34f9c0a8187a659f5602dd580755e5242398adbc", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7b514cdcfed05f6f09dfb529ea6669cff2796593/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b514cdcfed05f6f09dfb529ea6669cff2796593/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=7b514cdcfed05f6f09dfb529ea6669cff2796593", "patch": "@@ -69,7 +69,7 @@ crate struct Context<'tcx> {\n }\n \n // `Context` is cloned a lot, so we don't want the size to grow unexpectedly.\n-#[cfg(target_arch = \"x86_64\")]\n+#[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"64\"))]\n rustc_data_structures::static_assert_size!(Context<'_>, 104);\n \n /// Shared mutable state used in [`Context`] and elsewhere."}]}