{"sha": "26cca1c258a8946bfcd6d900077642d5f2be708c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2Y2NhMWMyNThhODk0NmJmY2Q2ZDkwMDA3NzY0MmQ1ZjJiZTcwOGM=", "commit": {"author": {"name": "Alisdair Owens", "email": "awo101@zepler.net", "date": "2015-08-14T20:33:40Z"}, "committer": {"name": "Alisdair Owens", "email": "awo101@zepler.net", "date": "2015-08-15T09:02:54Z"}, "message": "Add extended diagnostics for E0248", "tree": {"sha": "f65143ac070bfd3c79c0bbed1d418256e75b38b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f65143ac070bfd3c79c0bbed1d418256e75b38b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26cca1c258a8946bfcd6d900077642d5f2be708c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26cca1c258a8946bfcd6d900077642d5f2be708c", "html_url": "https://github.com/rust-lang/rust/commit/26cca1c258a8946bfcd6d900077642d5f2be708c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26cca1c258a8946bfcd6d900077642d5f2be708c/comments", "author": {"login": "AlisdairO", "id": 6296622, "node_id": "MDQ6VXNlcjYyOTY2MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6296622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlisdairO", "html_url": "https://github.com/AlisdairO", "followers_url": "https://api.github.com/users/AlisdairO/followers", "following_url": "https://api.github.com/users/AlisdairO/following{/other_user}", "gists_url": "https://api.github.com/users/AlisdairO/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlisdairO/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlisdairO/subscriptions", "organizations_url": "https://api.github.com/users/AlisdairO/orgs", "repos_url": "https://api.github.com/users/AlisdairO/repos", "events_url": "https://api.github.com/users/AlisdairO/events{/privacy}", "received_events_url": "https://api.github.com/users/AlisdairO/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AlisdairO", "id": 6296622, "node_id": "MDQ6VXNlcjYyOTY2MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6296622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlisdairO", "html_url": "https://github.com/AlisdairO", "followers_url": "https://api.github.com/users/AlisdairO/followers", "following_url": "https://api.github.com/users/AlisdairO/following{/other_user}", "gists_url": "https://api.github.com/users/AlisdairO/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlisdairO/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlisdairO/subscriptions", "organizations_url": "https://api.github.com/users/AlisdairO/orgs", "repos_url": "https://api.github.com/users/AlisdairO/repos", "events_url": "https://api.github.com/users/AlisdairO/events{/privacy}", "received_events_url": "https://api.github.com/users/AlisdairO/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e859498d1ca45f2719542f505eb0ba8b944e5668", "url": "https://api.github.com/repos/rust-lang/rust/commits/e859498d1ca45f2719542f505eb0ba8b944e5668", "html_url": "https://github.com/rust-lang/rust/commit/e859498d1ca45f2719542f505eb0ba8b944e5668"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "62804426df69f21beccd0a7bf709e9168cab7ef7", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/26cca1c258a8946bfcd6d900077642d5f2be708c/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26cca1c258a8946bfcd6d900077642d5f2be708c/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=26cca1c258a8946bfcd6d900077642d5f2be708c", "patch": "@@ -2365,6 +2365,25 @@ struct Bar<S, T> { x: Foo<S, T> }\n ```\n \"##,\n \n+E0248: r##\"\n+This error indicates an attempt to use a value where a type is expected. For\n+example:\n+\n+```\n+enum Foo {\n+    Bar(u32)\n+}\n+\n+fn do_something(x: Foo::Bar) { }\n+```\n+\n+In this example, we're attempting to take a type of `Foo::Bar` in the\n+do_something function. This is not legal: `Foo::Bar` is a value of type `Foo`,\n+not a distinct static type. Likewise, it's not legal to attempt to\n+`impl Foo::Bar`: instead, you must `impl Foo` and then pattern match to specify\n+behaviour for specific enum variants.\n+\"##,\n+\n E0249: r##\"\n This error indicates a constant expression for the array length was found, but\n it was not an integer (signed or unsigned) expression.\n@@ -2756,7 +2775,6 @@ register_diagnostics! {\n     E0245, // not a trait\n     E0246, // invalid recursive type\n     E0247, // found module name used as a type\n-    E0248, // found value name used as a type\n     E0319, // trait impls for defaulted traits allowed just for structs/enums\n     E0320, // recursive overflow during dropck\n     E0321, // extended coherence rules for defaulted traits violated"}]}