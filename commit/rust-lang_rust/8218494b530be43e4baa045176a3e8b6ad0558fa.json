{"sha": "8218494b530be43e4baa045176a3e8b6ad0558fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyMTg0OTRiNTMwYmU0M2U0YmFhMDQ1MTc2YTNlOGI2YWQwNTU4ZmE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-03-07T05:04:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-07T05:04:36Z"}, "message": "Merge #3508\n\n3508: Use a not so dummy implementation of env macro r=edwin0cheng a=edwin0cheng\n\nCurrently we have a dummy `env` macro implementation which expand to an empty string, such that a `include!(concat!(env!(\"OUT_DIR\"), \"/foo.rs\"))` will become `include!(\"/foo.rs\")`, and here may be a infinite loop. :)\r\n\r\nThis PR use a not so dummy version of `env` macro to prevent this infinite loop. \n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>", "tree": {"sha": "7b9a9b39256f829f7f2eb1961ed880833f0367d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b9a9b39256f829f7f2eb1961ed880833f0367d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8218494b530be43e4baa045176a3e8b6ad0558fa", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeYytkCRBK7hj4Ov3rIwAAdHIIADFn5IzXQQ3TgQ58bx/aLfdT\n2TbidvqtNZgLxpGPr4G5HVx5MndZ1gnmGSG2vwB4TuCRvBvqTNtGjSTOmrVn1Ccs\nl45UVo8SxFuclGZ8+zGiCXe4KBrGbSXGM+Dn1zYrTgaq+LRHvWqMaMQzAeony93X\n1S236yxUNG45/EF/n3wfCZMxuEE5inIqNWYLJoGbP1SwIxeWUhF9GKYjFFi6HTth\nbyQWF8mgSvcjsuTGRHfCfvtkj8wN8/RU/hk3EqtpOnPbB7puj7bkf+5MOdJjbJPa\nTXbaKpsKPB7YR1FdsV7n2w6cjcXhqcEgEy5aOR9nIKUFZ3RyBJEflSDJhBnsUAY=\n=HZH4\n-----END PGP SIGNATURE-----\n", "payload": "tree 7b9a9b39256f829f7f2eb1961ed880833f0367d6\nparent 48bb1c51721b7736b6d6f2e5cb82126c91934433\nparent 2e178b5475b156e1876e4e6971c0abd3bdf6c889\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1583557476 +0000\ncommitter GitHub <noreply@github.com> 1583557476 +0000\n\nMerge #3508\n\n3508: Use a not so dummy implementation of env macro r=edwin0cheng a=edwin0cheng\n\nCurrently we have a dummy `env` macro implementation which expand to an empty string, such that a `include!(concat!(env!(\"OUT_DIR\"), \"/foo.rs\"))` will become `include!(\"/foo.rs\")`, and here may be a infinite loop. :)\r\n\r\nThis PR use a not so dummy version of `env` macro to prevent this infinite loop. \n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8218494b530be43e4baa045176a3e8b6ad0558fa", "html_url": "https://github.com/rust-lang/rust/commit/8218494b530be43e4baa045176a3e8b6ad0558fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8218494b530be43e4baa045176a3e8b6ad0558fa/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48bb1c51721b7736b6d6f2e5cb82126c91934433", "url": "https://api.github.com/repos/rust-lang/rust/commits/48bb1c51721b7736b6d6f2e5cb82126c91934433", "html_url": "https://github.com/rust-lang/rust/commit/48bb1c51721b7736b6d6f2e5cb82126c91934433"}, {"sha": "2e178b5475b156e1876e4e6971c0abd3bdf6c889", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e178b5475b156e1876e4e6971c0abd3bdf6c889", "html_url": "https://github.com/rust-lang/rust/commit/2e178b5475b156e1876e4e6971c0abd3bdf6c889"}], "stats": {"total": 34, "additions": 32, "deletions": 2}, "files": [{"sha": "a57e9285fb3f172b1ad7c36d9f84cb5bc671586f", "filename": "crates/ra_hir_expand/src/builtin_macro.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8218494b530be43e4baa045176a3e8b6ad0558fa/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8218494b530be43e4baa045176a3e8b6ad0558fa/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs?ref=8218494b530be43e4baa045176a3e8b6ad0558fa", "patch": "@@ -142,7 +142,10 @@ fn env_expand(\n     _tt: &tt::Subtree,\n ) -> Result<tt::Subtree, mbe::ExpandError> {\n     // dummy implementation for type-checking purposes\n-    let expanded = quote! { \"\" };\n+    // we cannot use an empty string here, because for\n+    // `include!(concat!(env!(\"OUT_DIR\"), \"/foo.rs\"))` will become\n+    // `include!(\"foo.rs\"), which maybe infinite loop\n+    let expanded = quote! { \"__RA_UNIMPLEMENTATED__\" };\n \n     Ok(expanded)\n }\n@@ -394,7 +397,7 @@ mod tests {\n             \"#,\n         );\n \n-        assert_eq!(expanded, \"\\\"\\\"\");\n+        assert_eq!(expanded, \"\\\"__RA_UNIMPLEMENTATED__\\\"\");\n     }\n \n     #[test]"}, {"sha": "c86733ac31348a7917d5821399b6a1b6e3c29442", "filename": "crates/ra_hir_ty/src/tests/macros.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/8218494b530be43e4baa045176a3e8b6ad0558fa/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8218494b530be43e4baa045176a3e8b6ad0558fa/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fmacros.rs?ref=8218494b530be43e4baa045176a3e8b6ad0558fa", "patch": "@@ -483,6 +483,33 @@ fn bar() -> u32 {0}\n     assert_eq!(\"u32\", type_at_pos(&db, pos));\n }\n \n+#[test]\n+fn infer_builtin_macros_include_concat_with_bad_env_should_failed() {\n+    let (db, pos) = TestDB::with_position(\n+        r#\"\n+//- /main.rs \n+#[rustc_builtin_macro]\n+macro_rules! include {() => {}}\n+\n+#[rustc_builtin_macro]\n+macro_rules! concat {() => {}}\n+\n+#[rustc_builtin_macro]\n+macro_rules! env {() => {}}\n+\n+include!(concat!(env!(\"OUT_DIR\"), \"/foo.rs\"));\n+\n+fn main() {\n+    bar()<|>;\n+}\n+\n+//- /foo.rs\n+fn bar() -> u32 {0}\n+\"#,\n+    );\n+    assert_eq!(\"{unknown}\", type_at_pos(&db, pos));\n+}\n+\n #[test]\n fn infer_builtin_macros_concat_with_lazy() {\n     assert_snapshot!("}]}