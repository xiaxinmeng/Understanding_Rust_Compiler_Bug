{"sha": "3e57c6c3ba0d7bfb6ad85915052406be1f218dbc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlNTdjNmMzYmEwZDdiZmI2YWQ4NTkxNTA1MjQwNmJlMWYyMThkYmM=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-04-15T06:26:42Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-04-15T16:14:48Z"}, "message": "std: Fix thread_local! in non-PIE binaries\n\nOne of the parameters to the magical \"register a thread-local destructor\"\nfunction is called `__dso_handle` and largely just passed along (this seems to\nbe what other implementations do). Currently we pass the *value* of this symbol,\nbut apparently the correct piece of information to pass is the *address* of the\nsymbol.\n\nIn a PIE binary the symbol actually contains an address to itself which is why\nwe've gotten away with what we're doing as long as we have. In a non-PIE binary\nthe symbol contains the address `NULL`, causing a segfault in the runtime\nlibrary if it keeps going.\n\nCloses #24445", "tree": {"sha": "6b11b96495725558224877abab7574337e4a02a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b11b96495725558224877abab7574337e4a02a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e57c6c3ba0d7bfb6ad85915052406be1f218dbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e57c6c3ba0d7bfb6ad85915052406be1f218dbc", "html_url": "https://github.com/rust-lang/rust/commit/3e57c6c3ba0d7bfb6ad85915052406be1f218dbc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e57c6c3ba0d7bfb6ad85915052406be1f218dbc/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16e1fcead14628701e1b10b9d00c898d748db2ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/16e1fcead14628701e1b10b9d00c898d748db2ed", "html_url": "https://github.com/rust-lang/rust/commit/16e1fcead14628701e1b10b9d00c898d748db2ed"}], "stats": {"total": 55, "additions": 54, "deletions": 1}, "files": [{"sha": "6d8f1cba7091f0b3dbf2f567e56c9c55e9aaa69b", "filename": "src/libstd/thread/local.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e57c6c3ba0d7bfb6ad85915052406be1f218dbc/src%2Flibstd%2Fthread%2Flocal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e57c6c3ba0d7bfb6ad85915052406be1f218dbc/src%2Flibstd%2Fthread%2Flocal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Flocal.rs?ref=3e57c6c3ba0d7bfb6ad85915052406be1f218dbc", "patch": "@@ -373,7 +373,7 @@ mod imp {\n                                       arg: *mut u8,\n                                       dso_handle: *mut u8) -> libc::c_int;\n             mem::transmute::<*const (), F>(__cxa_thread_atexit_impl)\n-            (dtor, t, __dso_handle);\n+            (dtor, t, &__dso_handle as *const _ as *mut _);\n             return\n         }\n "}, {"sha": "7a0cbfcf517b7133664923a560be2dd6ba10a32a", "filename": "src/test/run-make/issue-24445/Makefile", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3e57c6c3ba0d7bfb6ad85915052406be1f218dbc/src%2Ftest%2Frun-make%2Fissue-24445%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/3e57c6c3ba0d7bfb6ad85915052406be1f218dbc/src%2Ftest%2Frun-make%2Fissue-24445%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-24445%2FMakefile?ref=3e57c6c3ba0d7bfb6ad85915052406be1f218dbc", "patch": "@@ -0,0 +1,12 @@\n+-include ../tools.mk\n+\n+ifeq ($(UNAME),Linux)\n+all:\n+\t$(RUSTC) foo.rs\n+\t$(CC) foo.c -lfoo -L $(TMPDIR) -Wl,--gc-sections -lpthread -o $(TMPDIR)/foo\n+\t$(call RUN,foo)\n+\t$(CC) foo.c -lfoo -L $(TMPDIR) -Wl,--gc-sections -lpthread -pie -fPIC -o $(TMPDIR)/foo\n+\t$(call RUN,foo)\n+else\n+all:\n+endif"}, {"sha": "775e151f2362d28037caac3d65529550b5cb2f06", "filename": "src/test/run-make/issue-24445/foo.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3e57c6c3ba0d7bfb6ad85915052406be1f218dbc/src%2Ftest%2Frun-make%2Fissue-24445%2Ffoo.c", "raw_url": "https://github.com/rust-lang/rust/raw/3e57c6c3ba0d7bfb6ad85915052406be1f218dbc/src%2Ftest%2Frun-make%2Fissue-24445%2Ffoo.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-24445%2Ffoo.c?ref=3e57c6c3ba0d7bfb6ad85915052406be1f218dbc", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+void foo();\n+\n+int main() {\n+    foo();\n+    return 0;\n+}"}, {"sha": "65e505df5ef17393e02663e395499adf2a1aa4d3", "filename": "src/test/run-make/issue-24445/foo.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/3e57c6c3ba0d7bfb6ad85915052406be1f218dbc/src%2Ftest%2Frun-make%2Fissue-24445%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e57c6c3ba0d7bfb6ad85915052406be1f218dbc/src%2Ftest%2Frun-make%2Fissue-24445%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-24445%2Ffoo.rs?ref=3e57c6c3ba0d7bfb6ad85915052406be1f218dbc", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"staticlib\"]\n+\n+struct Destroy;\n+impl Drop for Destroy {\n+    fn drop(&mut self) { println!(\"drop\"); }\n+}\n+\n+thread_local! {\n+    static X: Destroy = Destroy\n+}\n+\n+#[no_mangle]\n+pub extern \"C\" fn foo() {\n+    X.with(|_| ());\n+}"}]}