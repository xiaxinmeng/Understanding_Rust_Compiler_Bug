{"sha": "0913653e065896cbbacf164c36673fec48f947d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5MTM2NTNlMDY1ODk2Y2JiYWNmMTY0YzM2NjczZmVjNDhmOTQ3ZDE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-08-16T16:31:48Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-08-16T16:31:48Z"}, "message": "make sure we test panic of interpreter-impelemted align_offset", "tree": {"sha": "cd9cbcb666f97bca5a6f61ae908f4a9654b09fea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd9cbcb666f97bca5a6f61ae908f4a9654b09fea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0913653e065896cbbacf164c36673fec48f947d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0913653e065896cbbacf164c36673fec48f947d1", "html_url": "https://github.com/rust-lang/rust/commit/0913653e065896cbbacf164c36673fec48f947d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0913653e065896cbbacf164c36673fec48f947d1/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4e5943259de7573556711ed6496c409dd754ea3", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4e5943259de7573556711ed6496c409dd754ea3", "html_url": "https://github.com/rust-lang/rust/commit/d4e5943259de7573556711ed6496c409dd754ea3"}], "stats": {"total": 29, "additions": 16, "deletions": 13}, "files": [{"sha": "3afff1d36d36ee4b81cbe883b1b1955c213f7a03", "filename": "tests/run-pass/panic/catch_panic.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0913653e065896cbbacf164c36673fec48f947d1/tests%2Frun-pass%2Fpanic%2Fcatch_panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0913653e065896cbbacf164c36673fec48f947d1/tests%2Frun-pass%2Fpanic%2Fcatch_panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fpanic%2Fcatch_panic.rs?ref=0913653e065896cbbacf164c36673fec48f947d1", "patch": "@@ -1,4 +1,7 @@\n // normalize-stderr-test \"[^ ]*core/[a-z_/]+.rs[0-9:]*\" -> \"$$LOC\"\n+// normalize-stderr-test \"catch_panic\\.rs:[0-9]{2}\" -> \"catch_panic.rs:LL\"\n+// We test the `align_offset` panic below, make sure we test the interpreter impl and not the \"real\" one.\n+// compile-flags: -Zmiri-symbolic-alignment-check\n #![feature(never_type)]\n #![allow(unconditional_panic)]\n \n@@ -99,7 +102,7 @@ fn test(expect_msg: Option<&str>, do_panic: impl FnOnce(usize) -> !) {\n         eprintln!(\"Caught panic message (&str): {}\", s);\n         Some(*s)\n     } else {\n-        eprintln!(\"Failed get caught panic message.\");\n+        eprintln!(\"Failed to get caught panic message.\");\n         None\n     };\n     if let Some(expect_msg) = expect_msg {"}, {"sha": "c31f54aac729af9752f98badad1bac04282f8c11", "filename": "tests/run-pass/panic/catch_panic.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/0913653e065896cbbacf164c36673fec48f947d1/tests%2Frun-pass%2Fpanic%2Fcatch_panic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0913653e065896cbbacf164c36673fec48f947d1/tests%2Frun-pass%2Fpanic%2Fcatch_panic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fpanic%2Fcatch_panic.stderr?ref=0913653e065896cbbacf164c36673fec48f947d1", "patch": "@@ -1,26 +1,26 @@\n-thread 'main' panicked at 'Hello from panic: std', $DIR/catch_panic.rs:50:27\n+thread 'main' panicked at 'Hello from panic: std', $DIR/catch_panic.rs:LL:27\n Caught panic message (&str): Hello from panic: std\n-thread 'main' panicked at 'Hello from panic: 1', $DIR/catch_panic.rs:51:26\n+thread 'main' panicked at 'Hello from panic: 1', $DIR/catch_panic.rs:LL:26\n Caught panic message (String): Hello from panic: 1\n-thread 'main' panicked at 'Hello from panic: 2', $DIR/catch_panic.rs:52:26\n+thread 'main' panicked at 'Hello from panic: 2', $DIR/catch_panic.rs:LL:26\n Caught panic message (String): Hello from panic: 2\n-thread 'main' panicked at 'Box<Any>', $DIR/catch_panic.rs:53:27\n-Failed get caught panic message.\n-thread 'main' panicked at 'Hello from panic: core', $DIR/catch_panic.rs:56:27\n+thread 'main' panicked at 'Box<Any>', $DIR/catch_panic.rs:LL:27\n+Failed to get caught panic message.\n+thread 'main' panicked at 'Hello from panic: core', $DIR/catch_panic.rs:LL:27\n Caught panic message (String): Hello from panic: core\n-thread 'main' panicked at 'Hello from panic: 5', $DIR/catch_panic.rs:57:26\n+thread 'main' panicked at 'Hello from panic: 5', $DIR/catch_panic.rs:LL:26\n Caught panic message (String): Hello from panic: 5\n-thread 'main' panicked at 'Hello from panic: 6', $DIR/catch_panic.rs:58:26\n+thread 'main' panicked at 'Hello from panic: 6', $DIR/catch_panic.rs:LL:26\n Caught panic message (String): Hello from panic: 6\n-thread 'main' panicked at 'index out of bounds: the len is 3 but the index is 4', $DIR/catch_panic.rs:63:33\n+thread 'main' panicked at 'index out of bounds: the len is 3 but the index is 4', $DIR/catch_panic.rs:LL:33\n Caught panic message (String): index out of bounds: the len is 3 but the index is 4\n-thread 'main' panicked at 'attempt to divide by zero', $DIR/catch_panic.rs:67:33\n+thread 'main' panicked at 'attempt to divide by zero', $DIR/catch_panic.rs:LL:33\n Caught panic message (String): attempt to divide by zero\n thread 'main' panicked at 'align_offset: align is not a power-of-two', $LOC\n Caught panic message (String): align_offset: align is not a power-of-two\n-thread 'main' panicked at 'assertion failed: false', $DIR/catch_panic.rs:76:29\n+thread 'main' panicked at 'assertion failed: false', $DIR/catch_panic.rs:LL:29\n Caught panic message (&str): assertion failed: false\n-thread 'main' panicked at 'assertion failed: false', $DIR/catch_panic.rs:77:29\n+thread 'main' panicked at 'assertion failed: false', $DIR/catch_panic.rs:LL:29\n Caught panic message (&str): assertion failed: false\n thread 'main' panicked at 'called `Option::unwrap()` on a `None` value', $LOC\n Caught panic message (String): called `Option::unwrap()` on a `None` value"}]}