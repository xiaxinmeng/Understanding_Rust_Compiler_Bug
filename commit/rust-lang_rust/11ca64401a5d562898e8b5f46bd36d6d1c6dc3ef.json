{"sha": "11ca64401a5d562898e8b5f46bd36d6d1c6dc3ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExY2E2NDQwMWE1ZDU2Mjg5OGU4YjVmNDZiZDM2ZDZkMWM2ZGMzZWY=", "commit": {"author": {"name": "Ian Jackson", "email": "ijackson+github@slimy.greenend.org.uk", "date": "2021-03-09T10:53:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-09T10:53:03Z"}, "message": "Always compile the fragile wait status test cases, just run them conditionally\n\nCo-authored-by: David Tolnay <dtolnay@gmail.com>", "tree": {"sha": "61bddc912938bcf9e0bd1bf2512f8087473481b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61bddc912938bcf9e0bd1bf2512f8087473481b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11ca64401a5d562898e8b5f46bd36d6d1c6dc3ef", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgR1OPCRBK7hj4Ov3rIwAAdHIIACDDGmu57K9jdZLAr9lfNizX\nw/5vbvZ8WE1P069evRYmnJcmLbmFtB+2j9O38a/5iar1Ytt1RFyyYokcNv+e7ijr\nA/y7CVhtmIMjTVpS9KIgBK13x1RR2PRwpZW7MK+/G+tHL7hQc5zguBnuXUJ0lEFL\nmH4ky1JGGvHo27IygaFvaH/5H8gJ92UCYDZMQI2/9k0xvFjxm4RMzjGlMXwh4nfN\n1Ph/+YA3YoeVY8YmeO1ELS69c8mXDrQVhGZIuEpN6alz2xapVR/dQUSDmzanPbFv\ncTIHMl6KDk0qkIkqKeI7dyH1sNeId3mSbxNtkYa4ECY9T7vxMAvxPxhmJF80YKc=\n=YjGO\n-----END PGP SIGNATURE-----\n", "payload": "tree 61bddc912938bcf9e0bd1bf2512f8087473481b3\nparent 8e4433ab3e6a0fe8cc6f83379b30a48f94da4f33\nauthor Ian Jackson <ijackson+github@slimy.greenend.org.uk> 1615287183 +0000\ncommitter GitHub <noreply@github.com> 1615287183 +0000\n\nAlways compile the fragile wait status test cases, just run them conditionally\n\nCo-authored-by: David Tolnay <dtolnay@gmail.com>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11ca64401a5d562898e8b5f46bd36d6d1c6dc3ef", "html_url": "https://github.com/rust-lang/rust/commit/11ca64401a5d562898e8b5f46bd36d6d1c6dc3ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11ca64401a5d562898e8b5f46bd36d6d1c6dc3ef/comments", "author": {"login": "ijackson", "id": 2090772, "node_id": "MDQ6VXNlcjIwOTA3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2090772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijackson", "html_url": "https://github.com/ijackson", "followers_url": "https://api.github.com/users/ijackson/followers", "following_url": "https://api.github.com/users/ijackson/following{/other_user}", "gists_url": "https://api.github.com/users/ijackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijackson/subscriptions", "organizations_url": "https://api.github.com/users/ijackson/orgs", "repos_url": "https://api.github.com/users/ijackson/repos", "events_url": "https://api.github.com/users/ijackson/events{/privacy}", "received_events_url": "https://api.github.com/users/ijackson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e4433ab3e6a0fe8cc6f83379b30a48f94da4f33", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e4433ab3e6a0fe8cc6f83379b30a48f94da4f33", "html_url": "https://github.com/rust-lang/rust/commit/8e4433ab3e6a0fe8cc6f83379b30a48f94da4f33"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "5819d2c2a5a26944784b787c13356f7fea1be449", "filename": "library/std/src/sys/unix/process/process_unix/tests.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/11ca64401a5d562898e8b5f46bd36d6d1c6dc3ef/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11ca64401a5d562898e8b5f46bd36d6d1c6dc3ef/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix%2Ftests.rs?ref=11ca64401a5d562898e8b5f46bd36d6d1c6dc3ef", "patch": "@@ -16,14 +16,15 @@ fn exitstatus_display_tests() {\n     //   https://github.com/rust-lang/rust/pull/82749#issuecomment-790525956\n     // The purpose of this test is to test our string formatting, not our understanding of the wait\n     // status magic numbers.  So restrict these to Linux.\n-    #[cfg(target_os = \"linux\")]\n-    t(0x0137f, \"stopped (not terminated) by signal: 19\");\n-    #[cfg(target_os = \"linux\")]\n-    t(0x0ffff, \"continued (WIFCONTINUED)\");\n+    if cfg!(target_os = \"linux\") {\n+        t(0x0137f, \"stopped (not terminated) by signal: 19\");\n+        t(0x0ffff, \"continued (WIFCONTINUED)\");\n+    }\n \n     // Testing \"unrecognised wait status\" is hard because the wait.h macros typically\n     // assume that the value came from wait and isn't mad.  With the glibc I have here\n     // this works:\n-    #[cfg(all(target_os = \"linux\", target_env = \"gnu\"))]\n-    t(0x000ff, \"unrecognised wait status: 255 0xff\");\n+    if cfg!(all(target_os = \"linux\", target_env = \"gnu\")) {\n+        t(0x000ff, \"unrecognised wait status: 255 0xff\");\n+    }\n }"}]}