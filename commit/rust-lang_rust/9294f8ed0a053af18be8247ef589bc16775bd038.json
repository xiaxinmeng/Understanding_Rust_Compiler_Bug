{"sha": "9294f8ed0a053af18be8247ef589bc16775bd038", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyOTRmOGVkMGEwNTNhZjE4YmU4MjQ3ZWY1ODliYzE2Nzc1YmQwMzg=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-07-29T00:58:32Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-08-01T23:57:32Z"}, "message": "hash foreign items too", "tree": {"sha": "9317c24bab306bcdf0a4b76b41950a2f62e31790", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9317c24bab306bcdf0a4b76b41950a2f62e31790"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9294f8ed0a053af18be8247ef589bc16775bd038", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9294f8ed0a053af18be8247ef589bc16775bd038", "html_url": "https://github.com/rust-lang/rust/commit/9294f8ed0a053af18be8247ef589bc16775bd038", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9294f8ed0a053af18be8247ef589bc16775bd038/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28ce3e8a55b21a285f7075612d140a44b42eb889", "url": "https://api.github.com/repos/rust-lang/rust/commits/28ce3e8a55b21a285f7075612d140a44b42eb889", "html_url": "https://github.com/rust-lang/rust/commit/28ce3e8a55b21a285f7075612d140a44b42eb889"}], "stats": {"total": 54, "additions": 52, "deletions": 2}, "files": [{"sha": "af579fa10fb7b7301cd8488e33176e61cd931b9f", "filename": "src/librustc_incremental/calculate_svh.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9294f8ed0a053af18be8247ef589bc16775bd038/src%2Flibrustc_incremental%2Fcalculate_svh.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9294f8ed0a053af18be8247ef589bc16775bd038/src%2Flibrustc_incremental%2Fcalculate_svh.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fcalculate_svh.rs?ref=9294f8ed0a053af18be8247ef589bc16775bd038", "patch": "@@ -14,6 +14,7 @@\n use syntax::attr::AttributeMethods;\n use std::hash::{Hash, SipHasher, Hasher};\n use rustc::hir::def_id::{CRATE_DEF_INDEX, DefId};\n+use rustc::hir::map::{NodeItem, NodeForeignItem};\n use rustc::hir::svh::Svh;\n use rustc::ty::TyCtxt;\n use rustc::hir::intravisit::{self, Visitor};\n@@ -92,8 +93,12 @@ impl<'a, 'tcx> SvhCalculate for TyCtxt<'a, 'tcx, 'tcx> {\n                 intravisit::walk_crate(&mut visit, krate);\n             } else {\n                 let node_id = self.map.as_local_node_id(def_id).unwrap();\n-                let item = self.map.expect_item(node_id);\n-                visit.visit_item(item);\n+                match self.map.find(node_id) {\n+                    Some(NodeItem(item)) => visit.visit_item(item),\n+                    Some(NodeForeignItem(item)) => visit.visit_foreign_item(item),\n+                    r => bug!(\"calculate_item_hash: expected an item for node {} not {:?}\",\n+                              node_id, r),\n+                }\n             }\n         }\n "}, {"sha": "dbdebefaf310baa0d2f3bb34d010f1af459d14bc", "filename": "src/test/incremental/foreign.rs", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/9294f8ed0a053af18be8247ef589bc16775bd038/src%2Ftest%2Fincremental%2Fforeign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9294f8ed0a053af18be8247ef589bc16775bd038/src%2Ftest%2Fincremental%2Fforeign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fforeign.rs?ref=9294f8ed0a053af18be8247ef589bc16775bd038", "patch": "@@ -0,0 +1,45 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test what happens we save incremental compilation state that makes\n+// use of foreign items. This used to ICE (#34991).\n+\n+// revisions: rpass1\n+\n+#![feature(libc)]\n+\n+extern crate libc;\n+\n+use std::ffi::CString;\n+\n+mod mlibc {\n+    use libc::{c_char, c_long, c_longlong};\n+\n+    extern {\n+        pub fn atol(x: *const c_char) -> c_long;\n+        pub fn atoll(x: *const c_char) -> c_longlong;\n+    }\n+}\n+\n+fn atol(s: String) -> isize {\n+    let c = CString::new(s).unwrap();\n+    unsafe { mlibc::atol(c.as_ptr()) as isize }\n+}\n+\n+fn atoll(s: String) -> i64 {\n+    let c = CString::new(s).unwrap();\n+    unsafe { mlibc::atoll(c.as_ptr()) as i64 }\n+}\n+\n+pub fn main() {\n+    assert_eq!(atol(\"1024\".to_string()) * 10, atol(\"10240\".to_string()));\n+    assert_eq!((atoll(\"11111111111111111\".to_string()) * 10),\n+             atoll(\"111111111111111110\".to_string()));\n+}"}]}