{"sha": "ed1e3512dc5e0b25c693b95f39281c97c7bd3819", "node_id": "C_kwDOAAsO6NoAKGVkMWUzNTEyZGM1ZTBiMjVjNjkzYjk1ZjM5MjgxYzk3YzdiZDM4MTk", "commit": {"author": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-05-26T20:10:46Z"}, "committer": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-06-22T04:03:55Z"}, "message": "`impl<T: AsRawFd> for {Arc,Box}<T>`\n\nThis allows implementing traits that require a raw FD on Arc and Box.\n\nPreviously, you'd have to add the function to the trait itself:\n\n```rust\ntrait MyTrait {\n    fn as_raw_fd(&self) -> RawFd;\n}\n\nimpl<T: MyTrait> MyTrait for Arc<T> {\n    fn as_raw_fd(&self) -> RawFd {\n        (**self).as_raw_fd()\n    }\n}\n```", "tree": {"sha": "e8f9df643aa4186387a055baf38edfac75bcfe04", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8f9df643aa4186387a055baf38edfac75bcfe04"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed1e3512dc5e0b25c693b95f39281c97c7bd3819", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed1e3512dc5e0b25c693b95f39281c97c7bd3819", "html_url": "https://github.com/rust-lang/rust/commit/ed1e3512dc5e0b25c693b95f39281c97c7bd3819", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed1e3512dc5e0b25c693b95f39281c97c7bd3819/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a8b0144c82197a70e919ad371d56f82c2282833", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a8b0144c82197a70e919ad371d56f82c2282833", "html_url": "https://github.com/rust-lang/rust/commit/3a8b0144c82197a70e919ad371d56f82c2282833"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "7b6d2402aa9dbf840afbb8809fd115faa3021695", "filename": "library/std/src/os/fd/raw.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/ed1e3512dc5e0b25c693b95f39281c97c7bd3819/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed1e3512dc5e0b25c693b95f39281c97c7bd3819/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fraw.rs?ref=ed1e3512dc5e0b25c693b95f39281c97c7bd3819", "patch": "@@ -222,3 +222,35 @@ impl<'a> AsRawFd for io::StderrLock<'a> {\n         libc::STDERR_FILENO\n     }\n }\n+\n+#[stable(feature = \"asraw_ptrs\", since = \"1.63.0\")]\n+/// This blanket impl allows implementing custom traits that require `AsRawFd` on Arc.\n+/// ```\n+/// # #[cfg(any(unix, target_os = \"wasi\"))] mod group_cfg {\n+/// # #[cfg(target_os = \"wasi\")]\n+/// # use std::os::wasi::io::AsRawFd;\n+/// # #[cfg(unix)]\n+/// # use std::os::unix::io::AsRawFd;\n+/// use std::net::UdpSocket;\n+/// use std::sync::Arc;\n+/// trait MyTrait: AsRawFd {\n+/// }\n+/// impl MyTrait for Arc<UdpSocket> {}\n+/// impl MyTrait for Box<UdpSocket> {}\n+/// # }\n+/// ```\n+#[stable(feature = \"asrawfd_ptrs\", since = \"1.63.0\")]\n+impl<T: AsRawFd> AsRawFd for crate::sync::Arc<T> {\n+    #[inline]\n+    fn as_raw_fd(&self) -> RawFd {\n+        (**self).as_raw_fd()\n+    }\n+}\n+\n+#[stable(feature = \"asraw_ptrs\", since = \"1.63.0\")]\n+impl<T: AsRawFd> AsRawFd for Box<T> {\n+    #[inline]\n+    fn as_raw_fd(&self) -> RawFd {\n+        (**self).as_raw_fd()\n+    }\n+}"}]}