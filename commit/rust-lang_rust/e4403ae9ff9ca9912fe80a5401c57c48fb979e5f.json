{"sha": "e4403ae9ff9ca9912fe80a5401c57c48fb979e5f", "node_id": "C_kwDOAAsO6NoAKGU0NDAzYWU5ZmY5Y2E5OTEyZmU4MGE1NDAxYzU3YzQ4ZmI5NzllNWY", "commit": {"author": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2022-08-20T16:30:49Z"}, "committer": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2022-08-22T11:17:36Z"}, "message": "Move existing diagnostic struct to a new errors module", "tree": {"sha": "e39d6b13706d86e71568bfa7095d263d3023c0d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e39d6b13706d86e71568bfa7095d263d3023c0d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4403ae9ff9ca9912fe80a5401c57c48fb979e5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4403ae9ff9ca9912fe80a5401c57c48fb979e5f", "html_url": "https://github.com/rust-lang/rust/commit/e4403ae9ff9ca9912fe80a5401c57c48fb979e5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4403ae9ff9ca9912fe80a5401c57c48fb979e5f/comments", "author": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee8c31e64d229cac4eba6d8f03bb70e16f34a14b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee8c31e64d229cac4eba6d8f03bb70e16f34a14b", "html_url": "https://github.com/rust-lang/rust/commit/ee8c31e64d229cac4eba6d8f03bb70e16f34a14b"}], "stats": {"total": 41, "additions": 22, "deletions": 19}, "files": [{"sha": "62456d76d71681ade6715bc138deae86095da751", "filename": "compiler/rustc_interface/src/errors.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e4403ae9ff9ca9912fe80a5401c57c48fb979e5f/compiler%2Frustc_interface%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4403ae9ff9ca9912fe80a5401c57c48fb979e5f/compiler%2Frustc_interface%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Ferrors.rs?ref=e4403ae9ff9ca9912fe80a5401c57c48fb979e5f", "patch": "@@ -0,0 +1,19 @@\n+use rustc_macros::SessionDiagnostic;\n+use rustc_span::{Span, Symbol};\n+\n+#[derive(SessionDiagnostic)]\n+#[diag(interface::ferris_identifier)]\n+pub struct FerrisIdentifier {\n+    #[primary_span]\n+    pub spans: Vec<Span>,\n+    #[suggestion(code = \"ferris\", applicability = \"maybe-incorrect\")]\n+    pub first_span: Span,\n+}\n+\n+#[derive(SessionDiagnostic)]\n+#[diag(interface::emoji_identifier)]\n+pub struct EmojiIdentifier {\n+    #[primary_span]\n+    pub spans: Vec<Span>,\n+    pub ident: Symbol,\n+}"}, {"sha": "5ff1a952aefbcf80f147a582c18723a9376cb1d6", "filename": "compiler/rustc_interface/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e4403ae9ff9ca9912fe80a5401c57c48fb979e5f/compiler%2Frustc_interface%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4403ae9ff9ca9912fe80a5401c57c48fb979e5f/compiler%2Frustc_interface%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Flib.rs?ref=e4403ae9ff9ca9912fe80a5401c57c48fb979e5f", "patch": "@@ -7,6 +7,7 @@\n #![allow(rustc::potential_query_instability)]\n \n mod callbacks;\n+mod errors;\n pub mod interface;\n mod passes;\n mod proc_macro_decls;"}, {"sha": "759f9e0f0c9128560ac9870154d0d39d10fe9c61", "filename": "compiler/rustc_interface/src/passes.rs", "status": "modified", "additions": 2, "deletions": 19, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/e4403ae9ff9ca9912fe80a5401c57c48fb979e5f/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4403ae9ff9ca9912fe80a5401c57c48fb979e5f/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs?ref=e4403ae9ff9ca9912fe80a5401c57c48fb979e5f", "patch": "@@ -1,3 +1,4 @@\n+use crate::errors::{EmojiIdentifier, FerrisIdentifier};\n use crate::interface::{Compiler, Result};\n use crate::proc_macro_decls;\n use crate::util;\n@@ -13,7 +14,6 @@ use rustc_expand::base::{ExtCtxt, LintStoreExpand, ResolverExpand};\n use rustc_hir::def_id::StableCrateId;\n use rustc_hir::definitions::Definitions;\n use rustc_lint::{BufferedEarlyLint, EarlyCheckNode, LintStore};\n-use rustc_macros::SessionDiagnostic;\n use rustc_metadata::creader::CStore;\n use rustc_middle::arena::Arena;\n use rustc_middle::dep_graph::DepGraph;\n@@ -31,7 +31,7 @@ use rustc_session::output::filename_for_input;\n use rustc_session::search_paths::PathKind;\n use rustc_session::{Limit, Session};\n use rustc_span::symbol::{sym, Symbol};\n-use rustc_span::{FileName, Span};\n+use rustc_span::FileName;\n use rustc_trait_selection::traits;\n use rustc_typeck as typeck;\n use tracing::{info, warn};\n@@ -264,23 +264,6 @@ impl LintStoreExpand for LintStoreExpandImpl<'_> {\n     }\n }\n \n-#[derive(SessionDiagnostic)]\n-#[diag(interface::ferris_identifier)]\n-struct FerrisIdentifier {\n-    #[primary_span]\n-    spans: Vec<Span>,\n-    #[suggestion(code = \"ferris\", applicability = \"maybe-incorrect\")]\n-    first_span: Span,\n-}\n-\n-#[derive(SessionDiagnostic)]\n-#[diag(interface::emoji_identifier)]\n-struct EmojiIdentifier {\n-    #[primary_span]\n-    spans: Vec<Span>,\n-    ident: Symbol,\n-}\n-\n /// Runs the \"early phases\" of the compiler: initial `cfg` processing, loading compiler plugins,\n /// syntax expansion, secondary `cfg` expansion, synthesis of a test\n /// harness if one is to be provided, injection of a dependency on the"}]}