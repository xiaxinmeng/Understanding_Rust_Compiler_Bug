{"sha": "2802c3cf0b91e18de1f37e24929a406033df0cc0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4MDJjM2NmMGI5MWUxOGRlMWYzN2UyNDkyOWE0MDYwMzNkZjBjYzA=", "commit": {"author": {"name": "Elichai Turkel", "email": "elichai.turkel@gmail.com", "date": "2020-03-11T14:02:49Z"}, "committer": {"name": "Elichai Turkel", "email": "elichai.turkel@gmail.com", "date": "2020-03-11T14:02:49Z"}, "message": "Add tests for the new panic_if_any_invalid, panic_if_zero_invalid intrinsics", "tree": {"sha": "38cd4074bbd490d669fc526ba820472afbaaa7b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38cd4074bbd490d669fc526ba820472afbaaa7b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2802c3cf0b91e18de1f37e24929a406033df0cc0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJNBAABCAA3FiEEC5PUstyhDoo+NyfXk4PN6ejman8FAl5o74kZHGVsaWNoYWku\ndHVya2VsQGdtYWlsLmNvbQAKCRCTg83p6OZqf8gzD/9zrXQ1dHK3VK93Vkm//m07\neALvqzKn7JRlfX/QGqTYwkaMfhuWn5+7WXHYJDgGVeMePKYwsv6gL2RqC5c+ThZ8\nx1A1gyeJLlKD/B2cL9K1cul6Q91ktOr8vsuVfSc+rI+k9Di3TUS0kPfomYtTbRyo\nkdNaGq9zd/rfftBxUd7iDeTbjz/L3QOhsyM43A4wJ08lxZLgO5BJrEViivx/uWbO\nvw97j7uYX5FXbDXyeA/VsFtFJidcovzgNuD73RsxFybi34wg08PsNGcpSOVUGzaT\nU9pXhCIZSgEYLD2xzsXn197ODy7LKKBGf21ZGMBqpNPw8Eh5qtC6yU6ctgy8ZGRu\nes0yDtMxlowsRL99rKdFDq0wQGVtiC/lwZr8MEuRb3Nl/6c68IqG0Nappzzt82sp\nENZO2ONo4jJ6lk0w7VaZPdzzVPCo6bbyA5jRGa2r2cSZI8wjuf0Ibeh/WpROAZEl\nBnVNYY3m4OZG7fpcKCCkUIbZAA8x4UJVC5Q5vgxiRBHEYluNC00Kj8ay0U2X3dI/\nk80vBnmnkzh/ulk5hgOy5h2q5VIlqI3J89Sn10MnIcpstafR1RYiYfaP5I4iaYWt\nV3g5e7i3CfFOy3OTyGxf5mi2b+70F0s8P2x7O1KSHlPfHJWqne+Ip+yzFW4rtrqM\njRso+QX/8fi3cDNuqEPyJA==\n=Rzf8\n-----END PGP SIGNATURE-----", "payload": "tree 38cd4074bbd490d669fc526ba820472afbaaa7b3\nparent e81ebffa59929574c8ac8fa380e27eb9e612cff9\nauthor Elichai Turkel <elichai.turkel@gmail.com> 1583935369 +0200\ncommitter Elichai Turkel <elichai.turkel@gmail.com> 1583935369 +0200\n\nAdd tests for the new panic_if_any_invalid, panic_if_zero_invalid intrinsics\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2802c3cf0b91e18de1f37e24929a406033df0cc0", "html_url": "https://github.com/rust-lang/rust/commit/2802c3cf0b91e18de1f37e24929a406033df0cc0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2802c3cf0b91e18de1f37e24929a406033df0cc0/comments", "author": {"login": "elichai", "id": 2167860, "node_id": "MDQ6VXNlcjIxNjc4NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elichai", "html_url": "https://github.com/elichai", "followers_url": "https://api.github.com/users/elichai/followers", "following_url": "https://api.github.com/users/elichai/following{/other_user}", "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}", "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elichai/subscriptions", "organizations_url": "https://api.github.com/users/elichai/orgs", "repos_url": "https://api.github.com/users/elichai/repos", "events_url": "https://api.github.com/users/elichai/events{/privacy}", "received_events_url": "https://api.github.com/users/elichai/received_events", "type": "User", "site_admin": false}, "committer": {"login": "elichai", "id": 2167860, "node_id": "MDQ6VXNlcjIxNjc4NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elichai", "html_url": "https://github.com/elichai", "followers_url": "https://api.github.com/users/elichai/followers", "following_url": "https://api.github.com/users/elichai/following{/other_user}", "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}", "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elichai/subscriptions", "organizations_url": "https://api.github.com/users/elichai/orgs", "repos_url": "https://api.github.com/users/elichai/repos", "events_url": "https://api.github.com/users/elichai/events{/privacy}", "received_events_url": "https://api.github.com/users/elichai/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e81ebffa59929574c8ac8fa380e27eb9e612cff9", "url": "https://api.github.com/repos/rust-lang/rust/commits/e81ebffa59929574c8ac8fa380e27eb9e612cff9", "html_url": "https://github.com/rust-lang/rust/commit/e81ebffa59929574c8ac8fa380e27eb9e612cff9"}], "stats": {"total": 61, "additions": 53, "deletions": 8}, "files": [{"sha": "a406fd434a054b098933651b9d95f7ae9a39f8b4", "filename": "tests/run-pass/panic/catch_panic.rs", "status": "modified", "additions": 35, "deletions": 4, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/2802c3cf0b91e18de1f37e24929a406033df0cc0/tests%2Frun-pass%2Fpanic%2Fcatch_panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2802c3cf0b91e18de1f37e24929a406033df0cc0/tests%2Frun-pass%2Fpanic%2Fcatch_panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fpanic%2Fcatch_panic.rs?ref=2802c3cf0b91e18de1f37e24929a406033df0cc0", "patch": "@@ -69,10 +69,41 @@ fn main() {\n \n     // libcore panics from shims.\n     #[allow(deprecated, invalid_value)]\n-    test(\n-        Some(\"Attempted to instantiate uninhabited type !\"),\n-        |_old_val| unsafe { std::mem::uninitialized::<!>() },\n-    );\n+    {\n+        test(\n+            Some(\"attempted to instantiate uninhabited type !\"),\n+            |_old_val| unsafe { std::mem::uninitialized::<!>() },\n+        );\n+        test(\n+            Some(\"attempted to zero-initialize type `!`, which is invalid\"),\n+            |_old_val| unsafe { std::mem::zeroed::<!>() },\n+        );\n+        test(\n+            Some(\"attempted to leave type `fn()` uninitialized, which is invalid\"),\n+            |_old_val| unsafe { std::mem::uninitialized::<fn()>(); loop {} },\n+        );\n+        test(\n+            Some(\"attempted to zero-initialize type `fn()`, which is invalid\"),\n+            |_old_val| unsafe { std::mem::zeroed::<fn()>(); loop {} },\n+        );\n+        test(\n+            Some(\"attempted to leave type `*const dyn std::marker::Sync` uninitialized, which is invalid\"),\n+            |_old_val| unsafe { std::mem::uninitialized::<*const dyn Sync>(); loop {} },\n+        );\n+        test(\n+            Some(\"attempted to zero-initialize type `*mut dyn std::marker::Sync`, which is invalid\"),\n+            |_old_val| unsafe { std::mem::zeroed::<*mut dyn Sync>(); loop {} },\n+        );\n+        test(\n+            Some(\"attempted to leave type `&u8` uninitialized, which is invalid\"),\n+            |_old_val| unsafe { std::mem::uninitialized::<&u8>(); loop {} },\n+        );\n+        test(\n+            Some(\"attempted to zero-initialize type `&u8`, which is invalid\"),\n+            |_old_val| unsafe { std::mem::zeroed::<&u8>(); loop {} },\n+        );\n+    }\n+\n     test(\n         Some(\"align_offset: align is not a power-of-two\"),\n         |_old_val| { (0usize as *const u8).align_offset(3); loop {} },"}, {"sha": "1899ea3c684a72a6a8c6b1faf93cb89978d53543", "filename": "tests/run-pass/panic/catch_panic.stderr", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2802c3cf0b91e18de1f37e24929a406033df0cc0/tests%2Frun-pass%2Fpanic%2Fcatch_panic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2802c3cf0b91e18de1f37e24929a406033df0cc0/tests%2Frun-pass%2Fpanic%2Fcatch_panic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fpanic%2Fcatch_panic.stderr?ref=2802c3cf0b91e18de1f37e24929a406033df0cc0", "patch": "@@ -16,13 +16,27 @@ thread 'main' panicked at 'index out of bounds: the len is 3 but the index is 4'\n Caught panic message (String): index out of bounds: the len is 3 but the index is 4\n thread 'main' panicked at 'attempt to divide by zero', $DIR/catch_panic.rs:67:33\n Caught panic message (String): attempt to divide by zero\n-thread 'main' panicked at 'Attempted to instantiate uninhabited type !', $LOC\n-Caught panic message (String): Attempted to instantiate uninhabited type !\n+thread 'main' panicked at 'attempted to instantiate uninhabited type !', $LOC\n+Caught panic message (String): attempted to instantiate uninhabited type !\n+thread 'main' panicked at 'attempted to zero-initialize type `!`, which is invalid', $LOC\n+Caught panic message (String): attempted to zero-initialize type `!`, which is invalid\n+thread 'main' panicked at 'attempted to leave type `fn()` uninitialized, which is invalid', $LOC\n+Caught panic message (String): attempted to leave type `fn()` uninitialized, which is invalid\n+thread 'main' panicked at 'attempted to zero-initialize type `fn()`, which is invalid', $LOC\n+Caught panic message (String): attempted to zero-initialize type `fn()`, which is invalid\n+thread 'main' panicked at 'attempted to leave type `*const dyn std::marker::Sync` uninitialized, which is invalid', $LOC\n+Caught panic message (String): attempted to leave type `*const dyn std::marker::Sync` uninitialized, which is invalid\n+thread 'main' panicked at 'attempted to zero-initialize type `*mut dyn std::marker::Sync`, which is invalid', $LOC\n+Caught panic message (String): attempted to zero-initialize type `*mut dyn std::marker::Sync`, which is invalid\n+thread 'main' panicked at 'attempted to leave type `&u8` uninitialized, which is invalid', $LOC\n+Caught panic message (String): attempted to leave type `&u8` uninitialized, which is invalid\n+thread 'main' panicked at 'attempted to zero-initialize type `&u8`, which is invalid', $LOC\n+Caught panic message (String): attempted to zero-initialize type `&u8`, which is invalid\n thread 'main' panicked at 'align_offset: align is not a power-of-two', $LOC\n Caught panic message (String): align_offset: align is not a power-of-two\n-thread 'main' panicked at 'assertion failed: false', $DIR/catch_panic.rs:82:29\n+thread 'main' panicked at 'assertion failed: false', $DIR/catch_panic.rs:113:29\n Caught panic message (&str): assertion failed: false\n-thread 'main' panicked at 'assertion failed: false', $DIR/catch_panic.rs:83:29\n+thread 'main' panicked at 'assertion failed: false', $DIR/catch_panic.rs:114:29\n Caught panic message (&str): assertion failed: false\n thread 'main' panicked at 'attempt to copy from unaligned or null pointer', $LOC\n Caught panic message (String): attempt to copy from unaligned or null pointer"}]}