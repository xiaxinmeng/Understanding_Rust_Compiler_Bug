{"sha": "edcbb295c9827ce38cbef4093e2c3d184923f362", "node_id": "C_kwDOAAsO6NoAKGVkY2JiMjk1Yzk4MjdjZTM4Y2JlZjQwOTNlMmMzZDE4NDkyM2YzNjI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-14T05:57:33Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-14T05:57:33Z"}, "message": "Auto merge of #105007 - dlaugt:solaris-fs-link, r=ChrisDenton\n\nlinkat() not available in the system headers of Solaris 10\n\nI've installed rustup on x86_64-unknown-linux-gnu and would like to use the target sparcv9-sun-solaris. For this, I have built a gcc from the source code for cross-compiling to sparcv9-sun-solaris2.10 with system headers of Solaris 10.\n\nWith the following hello word example:\nmain.rs:\n```rust\nfn main() {\n    println!(\"Hello, world!\");\n}\n```\nI had a compilation error:\n```\n$ rustc -v --target sparcv9-sun-solaris -C linker=/opt/cross-solaris/gcc730/bin/sparcv9-sun-solaris2.10-gcc main.rs\nerror: linking with `/opt/cross-solaris/gcc730/bin/sparcv9-sun-solaris2.10-gcc` failed: exit status: 1\n  |\n  = note: \"/opt/cross-solaris/gcc730/bin/sparcv9-sun-solaris2.10-gcc\" \"-m64\" \"/tmp/rustcgebYgj/symbols.o\" \"main.main.89363361-cgu.0.rcgu.o\" \"main.main.89363361-cgu.1.rcgu.o\" \"main.main.89363361-cgu.2.rcgu.o\" \"main.main.89363361-cgu.3.rcgu.o\" \"main.main.89363361-cgu.4.rcgu.o\" \"main.main.89363361-cgu.5.rcgu.o\" \"main.csypsau9u2r8348.rcgu.o\" \"-Wl,-z,ignore\" \"-L\" \"/home/dlaugt/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/sparcv9-sun-solaris/lib\" \"-Wl,-Bstatic\" \"/home/dlaugt/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/sparcv9-sun-solaris/lib/libstd-fa47c8247d587714.rlib\" \"/home/dlaugt/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/sparcv9-sun-solaris/lib/libpanic_unwind-5c87bbe223e6c2a3.rlib\" \"/home/dlaugt/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/sparcv9-sun-solaris/lib/libobject-d484934062ff9fbb.rlib\" \"/home/dlaugt/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/sparcv9-sun-solaris/lib/libmemchr-e8dbd5835abcbf43.rlib\" \"/home/dlaugt/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/sparcv9-sun-solaris/lib/libaddr2line-909ad09329bde2f9.rlib\" \"/home/dlaugt/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/sparcv9-sun-solaris/lib/libgimli-4d74a3be929697ac.rlib\" \"/home/dlaugt/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/sparcv9-sun-solaris/lib/librustc_demangle-47cbe1d7f7271ae1.rlib\" \"/home/dlaugt/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/sparcv9-sun-solaris/lib/libstd_detect-239fd2d25fb32a00.rlib\" \"/home/dlaugt/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/sparcv9-sun-solaris/lib/libhashbrown-c4a7ce45fb9dec19.rlib\" \"/home/dlaugt/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/sparcv9-sun-solaris/lib/libminiz_oxide-fa6bc3d9bfb4e402.rlib\" \"/home/dlaugt/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/sparcv9-sun-solaris/lib/libadler-419f5a82ddd339a3.rlib\" \"/home/dlaugt/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/sparcv9-sun-solaris/lib/librustc_std_workspace_alloc-7672b378962c11be.rlib\" \"/home/dlaugt/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/sparcv9-sun-solaris/lib/libunwind-0f9e07f0a032c000.rlib\" \"/home/dlaugt/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/sparcv9-sun-solaris/lib/libcfg_if-ede7757c356dfb28.rlib\" \"/home/dlaugt/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/sparcv9-sun-solaris/lib/liblibc-808d56fbc668148a.rlib\" \"/home/dlaugt/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/sparcv9-sun-solaris/lib/liballoc-784767fe059ad3fe.rlib\" \"/home/dlaugt/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/sparcv9-sun-solaris/lib/librustc_std_workspace_core-aa31d7ef0556bbe1.rlib\" \"/home/dlaugt/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/sparcv9-sun-solaris/lib/libcore-81d07df07db18847.rlib\" \"/home/dlaugt/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/sparcv9-sun-solaris/lib/libcompiler_builtins-313a510e63006db2.rlib\" \"-Wl,-Bdynamic\" \"-lsocket\" \"-lposix4\" \"-lpthread\" \"-lresolv\" \"-lgcc_s\" \"-lc\" \"-lm\" \"-lrt\" \"-lpthread\" \"-lsendfile\" \"-llgrp\" \"-L\" \"/home/dlaugt/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/sparcv9-sun-solaris/lib\" \"-o\" \"main\" \"-nodefaultlibs\"\n  = note: /opt/cross-solaris/gcc730/lib/gcc/sparcv9-sun-solaris2.10/7.3.0/../../../../sparcv9-sun-solaris2.10/bin/ld: warning: -z ignore ignored.\n          /home/dlaugt/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/sparcv9-sun-solaris/lib/libstd-fa47c8247d587714.rlib(std-fa47c8247d587714.std.5c42d2c1-cgu.0.rcgu.o): In function `std::sys::unix::fs::link::h3683dfbfbb4995cb':\n          /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/sys/unix/fs.rs:1407: undefined reference to `linkat'\n          collect2: error: ld returned 1 exit status\n\n  = help: some `extern` functions couldn't be found; some native libraries may need to be installed or have their path specified\n  = note: use the `-l` flag to specify native libraries to link\n  = note: use the `cargo:rustc-link-lib` directive to specify the native libraries to link with Cargo (see https://doc.rust-lang.org/cargo/reference/build-scripts.html#cargorustc-link-libkindname)\n```\n\nlinkat() is not available in the system headers of Solaris 10. The hello word example works fine when I build/use rust with this PR change.", "tree": {"sha": "38cfac2f84c40baf726e5f5bfd0ea97d68b87649", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38cfac2f84c40baf726e5f5bfd0ea97d68b87649"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/edcbb295c9827ce38cbef4093e2c3d184923f362", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/edcbb295c9827ce38cbef4093e2c3d184923f362", "html_url": "https://github.com/rust-lang/rust/commit/edcbb295c9827ce38cbef4093e2c3d184923f362", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/edcbb295c9827ce38cbef4093e2c3d184923f362/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d558796beb400cceb2a2b8950f35aa518a58a586", "url": "https://api.github.com/repos/rust-lang/rust/commits/d558796beb400cceb2a2b8950f35aa518a58a586", "html_url": "https://github.com/rust-lang/rust/commit/d558796beb400cceb2a2b8950f35aa518a58a586"}, {"sha": "f0aa3c63540aa792408453881c59d2c10e1541d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0aa3c63540aa792408453881c59d2c10e1541d8", "html_url": "https://github.com/rust-lang/rust/commit/f0aa3c63540aa792408453881c59d2c10e1541d8"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "21ec1b5133df3a48f64af03c508daf25f0090db1", "filename": "library/std/src/sys/unix/fs.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/edcbb295c9827ce38cbef4093e2c3d184923f362/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edcbb295c9827ce38cbef4093e2c3d184923f362/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs?ref=edcbb295c9827ce38cbef4093e2c3d184923f362", "patch": "@@ -34,7 +34,7 @@ use crate::sys_common::{AsInner, AsInnerMut, FromInner, IntoInner};\n     target_os = \"watchos\",\n ))]\n use crate::sys::weak::syscall;\n-#[cfg(any(target_os = \"android\", target_os = \"macos\"))]\n+#[cfg(any(target_os = \"android\", target_os = \"macos\", target_os = \"solaris\"))]\n use crate::sys::weak::weak;\n \n use libc::{c_int, mode_t};\n@@ -43,6 +43,7 @@ use libc::{c_int, mode_t};\n     target_os = \"macos\",\n     target_os = \"ios\",\n     target_os = \"watchos\",\n+    target_os = \"solaris\",\n     all(target_os = \"linux\", target_env = \"gnu\")\n ))]\n use libc::c_char;\n@@ -1497,8 +1498,8 @@ pub fn link(original: &Path, link: &Path) -> io::Result<()> {\n                     // Android has `linkat` on newer versions, but we happen to know `link`\n                     // always has the correct behavior, so it's here as well.\n                     cvt(unsafe { libc::link(original.as_ptr(), link.as_ptr()) })?;\n-                } else if #[cfg(target_os = \"macos\")] {\n-                    // On MacOS, older versions (<=10.9) lack support for linkat while newer\n+                } else if #[cfg(any(target_os = \"macos\", target_os = \"solaris\"))] {\n+                    // MacOS (<=10.9) and Solaris 10 lack support for linkat while newer\n                     // versions have it. We want to use linkat if it is available, so we use weak!\n                     // to check. `linkat` is preferable to `link` because it gives us a flag to\n                     // specify how symlinks should be handled. We pass 0 as the flags argument,"}]}