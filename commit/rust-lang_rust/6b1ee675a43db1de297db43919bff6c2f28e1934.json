{"sha": "6b1ee675a43db1de297db43919bff6c2f28e1934", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiMWVlNjc1YTQzZGIxZGUyOTdkYjQzOTE5YmZmNmMyZjI4ZTE5MzQ=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2020-06-03T11:30:09Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2020-06-03T13:29:37Z"}, "message": "Ensure stack when building MIR for matches\n\nIn particular matching on complex types such as strings will cause\ndeep recursion to happen.\n\nFixes #72933", "tree": {"sha": "80963918f19206854b1b963818d0a34fb33a238b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80963918f19206854b1b963818d0a34fb33a238b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b1ee675a43db1de297db43919bff6c2f28e1934", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b1ee675a43db1de297db43919bff6c2f28e1934", "html_url": "https://github.com/rust-lang/rust/commit/6b1ee675a43db1de297db43919bff6c2f28e1934", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b1ee675a43db1de297db43919bff6c2f28e1934/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe10f1a49f5ca46e57261b95f46f519523f418fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe10f1a49f5ca46e57261b95f46f519523f418fe", "html_url": "https://github.com/rust-lang/rust/commit/fe10f1a49f5ca46e57261b95f46f519523f418fe"}], "stats": {"total": 5256, "additions": 5233, "deletions": 23}, "files": [{"sha": "70086d0f5684fdb0f8a52d87891b1c5cd3bd7d00", "filename": "src/librustc_mir_build/build/matches/mod.rs", "status": "modified", "additions": 25, "deletions": 23, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/6b1ee675a43db1de297db43919bff6c2f28e1934/src%2Flibrustc_mir_build%2Fbuild%2Fmatches%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b1ee675a43db1de297db43919bff6c2f28e1934/src%2Flibrustc_mir_build%2Fbuild%2Fmatches%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Fmatches%2Fmod.rs?ref=6b1ee675a43db1de297db43919bff6c2f28e1934", "patch": "@@ -10,7 +10,7 @@ use crate::build::ForGuard::{self, OutsideGuard, RefWithinGuard};\n use crate::build::{BlockAnd, BlockAndExtension, Builder};\n use crate::build::{GuardFrame, GuardFrameLocal, LocalsForNode};\n use crate::hair::{self, *};\n-use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n+use rustc_data_structures::{fx::{FxHashMap, FxHashSet}, stack::ensure_sufficient_stack};\n use rustc_hir::HirId;\n use rustc_index::bit_set::BitSet;\n use rustc_middle::middle::region;\n@@ -907,30 +907,32 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n             split_or_candidate |= self.simplify_candidate(candidate);\n         }\n \n-        if split_or_candidate {\n-            // At least one of the candidates has been split into subcandidates.\n-            // We need to change the candidate list to include those.\n-            let mut new_candidates = Vec::new();\n+        ensure_sufficient_stack(|| {\n+            if split_or_candidate {\n+                // At least one of the candidates has been split into subcandidates.\n+                // We need to change the candidate list to include those.\n+                let mut new_candidates = Vec::new();\n \n-            for candidate in candidates {\n-                candidate.visit_leaves(|leaf_candidate| new_candidates.push(leaf_candidate));\n+                for candidate in candidates {\n+                    candidate.visit_leaves(|leaf_candidate| new_candidates.push(leaf_candidate));\n+                }\n+                self.match_simplified_candidates(\n+                    span,\n+                    start_block,\n+                    otherwise_block,\n+                    &mut *new_candidates,\n+                    fake_borrows,\n+                );\n+            } else {\n+                self.match_simplified_candidates(\n+                    span,\n+                    start_block,\n+                    otherwise_block,\n+                    candidates,\n+                    fake_borrows,\n+                );\n             }\n-            self.match_simplified_candidates(\n-                span,\n-                start_block,\n-                otherwise_block,\n-                &mut *new_candidates,\n-                fake_borrows,\n-            );\n-        } else {\n-            self.match_simplified_candidates(\n-                span,\n-                start_block,\n-                otherwise_block,\n-                candidates,\n-                fake_borrows,\n-            );\n-        };\n+        });\n     }\n \n     fn match_simplified_candidates("}, {"sha": "aa796bcf5a0f38e2af8762400f77800d715f3452", "filename": "src/test/ui/issues/issue-72933-match-stack-overflow.rs", "status": "added", "additions": 5208, "deletions": 0, "changes": 5208, "blob_url": "https://github.com/rust-lang/rust/blob/6b1ee675a43db1de297db43919bff6c2f28e1934/src%2Ftest%2Fui%2Fissues%2Fissue-72933-match-stack-overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b1ee675a43db1de297db43919bff6c2f28e1934/src%2Ftest%2Fui%2Fissues%2Fissue-72933-match-stack-overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-72933-match-stack-overflow.rs?ref=6b1ee675a43db1de297db43919bff6c2f28e1934"}]}