{"sha": "9cdab67f6e3f249e677abf3580637fe42324a961", "node_id": "C_kwDOAAsO6NoAKDljZGFiNjdmNmUzZjI0OWU2NzdhYmYzNTgwNjM3ZmU0MjMyNGE5NjE", "commit": {"author": {"name": "Le\u00f3n Orell Valerian Liehr", "email": "liehr.exchange@gmx.net", "date": "2022-11-02T14:13:54Z"}, "committer": {"name": "Le\u00f3n Orell Valerian Liehr", "email": "liehr.exchange@gmx.net", "date": "2022-11-04T18:34:37Z"}, "message": "rustdoc: render unnamed arguments as underscores in cross-crate functions & function pointers\n\nfor consistency with the way we display local definitions (cleaned from HIR, not from rustc_middle).", "tree": {"sha": "13d5147870013a23651c95f2e83c054e01037e0d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13d5147870013a23651c95f2e83c054e01037e0d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9cdab67f6e3f249e677abf3580637fe42324a961", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9cdab67f6e3f249e677abf3580637fe42324a961", "html_url": "https://github.com/rust-lang/rust/commit/9cdab67f6e3f249e677abf3580637fe42324a961", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9cdab67f6e3f249e677abf3580637fe42324a961/comments", "author": {"login": "fmease", "id": 14913065, "node_id": "MDQ6VXNlcjE0OTEzMDY1", "avatar_url": "https://avatars.githubusercontent.com/u/14913065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmease", "html_url": "https://github.com/fmease", "followers_url": "https://api.github.com/users/fmease/followers", "following_url": "https://api.github.com/users/fmease/following{/other_user}", "gists_url": "https://api.github.com/users/fmease/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmease/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmease/subscriptions", "organizations_url": "https://api.github.com/users/fmease/orgs", "repos_url": "https://api.github.com/users/fmease/repos", "events_url": "https://api.github.com/users/fmease/events{/privacy}", "received_events_url": "https://api.github.com/users/fmease/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fmease", "id": 14913065, "node_id": "MDQ6VXNlcjE0OTEzMDY1", "avatar_url": "https://avatars.githubusercontent.com/u/14913065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmease", "html_url": "https://github.com/fmease", "followers_url": "https://api.github.com/users/fmease/followers", "following_url": "https://api.github.com/users/fmease/following{/other_user}", "gists_url": "https://api.github.com/users/fmease/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmease/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmease/subscriptions", "organizations_url": "https://api.github.com/users/fmease/orgs", "repos_url": "https://api.github.com/users/fmease/repos", "events_url": "https://api.github.com/users/fmease/events{/privacy}", "received_events_url": "https://api.github.com/users/fmease/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5965af701090591edad308e9877d72bbe2221b48", "url": "https://api.github.com/repos/rust-lang/rust/commits/5965af701090591edad308e9877d72bbe2221b48", "html_url": "https://github.com/rust-lang/rust/commit/5965af701090591edad308e9877d72bbe2221b48"}], "stats": {"total": 35, "additions": 19, "deletions": 16}, "files": [{"sha": "4a3337ffa1f1db987650686bb2d2510f045f5b5f", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/9cdab67f6e3f249e677abf3580637fe42324a961/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cdab67f6e3f249e677abf3580637fe42324a961/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=9cdab67f6e3f249e677abf3580637fe42324a961", "patch": "@@ -957,12 +957,14 @@ fn clean_args_from_types_and_names<'tcx>(\n         values: types\n             .iter()\n             .enumerate()\n-            .map(|(i, ty)| {\n-                let mut name = names.get(i).map_or(kw::Empty, |ident| ident.name);\n-                if name.is_empty() {\n-                    name = kw::Underscore;\n-                }\n-                Argument { name, type_: clean_ty(ty, cx), is_const: false }\n+            .map(|(i, ty)| Argument {\n+                type_: clean_ty(ty, cx),\n+                name: names\n+                    .get(i)\n+                    .map(|ident| ident.name)\n+                    .filter(|ident| !ident.is_empty())\n+                    .unwrap_or(kw::Underscore),\n+                is_const: false,\n             })\n             .collect(),\n     }\n@@ -1024,7 +1026,11 @@ fn clean_fn_decl_from_did_and_sig<'tcx>(\n                 .iter()\n                 .map(|t| Argument {\n                     type_: clean_middle_ty(*t, cx, None),\n-                    name: names.next().map_or(kw::Empty, |i| i.name),\n+                    name: names\n+                        .next()\n+                        .map(|i| i.name)\n+                        .filter(|i| !i.is_empty())\n+                        .unwrap_or(kw::Underscore),\n                     is_const: false,\n                 })\n                 .collect(),"}, {"sha": "a5c3d35b1b594ec9bcbc3ba401c23d7fccfb4944", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9cdab67f6e3f249e677abf3580637fe42324a961/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cdab67f6e3f249e677abf3580637fe42324a961/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=9cdab67f6e3f249e677abf3580637fe42324a961", "patch": "@@ -1232,9 +1232,8 @@ impl clean::Arguments {\n     ) -> impl fmt::Display + 'a + Captures<'tcx> {\n         display_fn(move |f| {\n             for (i, input) in self.values.iter().enumerate() {\n-                if !input.name.is_empty() {\n-                    write!(f, \"{}: \", input.name)?;\n-                }\n+                write!(f, \"{}: \", input.name)?;\n+\n                 if f.alternate() {\n                     write!(f, \"{:#}\", input.type_.print(cx))?;\n                 } else {\n@@ -1367,10 +1366,8 @@ impl clean::FnDecl {\n                     args.push_str(\"const \");\n                     args_plain.push_str(\"const \");\n                 }\n-                if !input.name.is_empty() {\n-                    write!(args, \"{}: \", input.name);\n-                    write!(args_plain, \"{}: \", input.name);\n-                }\n+                write!(args, \"{}: \", input.name);\n+                write!(args_plain, \"{}: \", input.name);\n \n                 if f.alternate() {\n                     write!(args, \"{:#}\", input.type_.print(cx));"}, {"sha": "b58605b9f1cb73adecab9257d3cd64fda97c0b37", "filename": "src/test/rustdoc/inline_cross/assoc_item_trait_bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9cdab67f6e3f249e677abf3580637fe42324a961/src%2Ftest%2Frustdoc%2Finline_cross%2Fassoc_item_trait_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cdab67f6e3f249e677abf3580637fe42324a961/src%2Ftest%2Frustdoc%2Finline_cross%2Fassoc_item_trait_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_cross%2Fassoc_item_trait_bounds.rs?ref=9cdab67f6e3f249e677abf3580637fe42324a961", "patch": "@@ -33,7 +33,7 @@ extern crate assoc_item_trait_bounds as aux;\n // @snapshot out9 - '//*[@id=\"associatedtype.Out9\"]/*[@class=\"code-header\"]'\n //\n // @has - '//*[@id=\"tymethod.make\"]' \\\n-// \"fn make<F>(F, impl FnMut(&str) -> bool)\\\n+// \"fn make<F>(_: F, _: impl FnMut(&str) -> bool)\\\n // where \\\n //     F: FnOnce(u32) -> String, \\\n //     Self::Out2<()>: Protocol<u8, Q0 = Self::Item, Q1 = ()>\""}, {"sha": "9c4f646592038e6ec62fe4036f2b47c4aef8f794", "filename": "src/test/rustdoc/inline_cross/impl_trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9cdab67f6e3f249e677abf3580637fe42324a961/src%2Ftest%2Frustdoc%2Finline_cross%2Fimpl_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cdab67f6e3f249e677abf3580637fe42324a961/src%2Ftest%2Frustdoc%2Finline_cross%2Fimpl_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_cross%2Fimpl_trait.rs?ref=9cdab67f6e3f249e677abf3580637fe42324a961", "patch": "@@ -29,7 +29,7 @@ pub use impl_trait_aux::func4;\n // @has impl_trait/fn.func5.html\n // @has - '//pre[@class=\"rust fn\"]' \"func5(\"\n // @has - '//pre[@class=\"rust fn\"]' \"_f: impl for<'any> Fn(&'any str, &'any str) -> bool + for<'r> Other<T<'r> = ()>,\"\n-// @has - '//pre[@class=\"rust fn\"]' \"_a: impl for<'alpha, 'beta> Auxiliary<'alpha, Item<'beta> = fn(&'beta ())>\"\n+// @has - '//pre[@class=\"rust fn\"]' \"_a: impl for<'alpha, 'beta> Auxiliary<'alpha, Item<'beta> = fn(_: &'beta ())>\"\n // @!has - '//pre[@class=\"rust fn\"]' 'where'\n pub use impl_trait_aux::func5;\n "}]}