{"sha": "82d6e07c867046ad3e6dd6211c22213a91210eab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyZDZlMDdjODY3MDQ2YWQzZTZkZDYyMTFjMjIyMTNhOTEyMTBlYWI=", "commit": {"author": {"name": "Ana-Maria Mihalache", "email": "mihalacheana.maria@yahoo.com", "date": "2020-04-08T18:58:49Z"}, "committer": {"name": "Ana-Maria Mihalache", "email": "mihalacheana.maria@yahoo.com", "date": "2020-04-08T18:58:49Z"}, "message": "Add ignore-wasm32-bare to mir-opt tests that need it.", "tree": {"sha": "0fcc803d751dcd7367996f888773e6d9978a7b07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0fcc803d751dcd7367996f888773e6d9978a7b07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/82d6e07c867046ad3e6dd6211c22213a91210eab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/82d6e07c867046ad3e6dd6211c22213a91210eab", "html_url": "https://github.com/rust-lang/rust/commit/82d6e07c867046ad3e6dd6211c22213a91210eab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/82d6e07c867046ad3e6dd6211c22213a91210eab/comments", "author": {"login": "anyska", "id": 13694484, "node_id": "MDQ6VXNlcjEzNjk0NDg0", "avatar_url": "https://avatars.githubusercontent.com/u/13694484?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anyska", "html_url": "https://github.com/anyska", "followers_url": "https://api.github.com/users/anyska/followers", "following_url": "https://api.github.com/users/anyska/following{/other_user}", "gists_url": "https://api.github.com/users/anyska/gists{/gist_id}", "starred_url": "https://api.github.com/users/anyska/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anyska/subscriptions", "organizations_url": "https://api.github.com/users/anyska/orgs", "repos_url": "https://api.github.com/users/anyska/repos", "events_url": "https://api.github.com/users/anyska/events{/privacy}", "received_events_url": "https://api.github.com/users/anyska/received_events", "type": "User", "site_admin": false}, "committer": {"login": "anyska", "id": 13694484, "node_id": "MDQ6VXNlcjEzNjk0NDg0", "avatar_url": "https://avatars.githubusercontent.com/u/13694484?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anyska", "html_url": "https://github.com/anyska", "followers_url": "https://api.github.com/users/anyska/followers", "following_url": "https://api.github.com/users/anyska/following{/other_user}", "gists_url": "https://api.github.com/users/anyska/gists{/gist_id}", "starred_url": "https://api.github.com/users/anyska/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anyska/subscriptions", "organizations_url": "https://api.github.com/users/anyska/orgs", "repos_url": "https://api.github.com/users/anyska/repos", "events_url": "https://api.github.com/users/anyska/events{/privacy}", "received_events_url": "https://api.github.com/users/anyska/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0e0f4021d10b546ebbb3b346296b36ec10ac957", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0e0f4021d10b546ebbb3b346296b36ec10ac957", "html_url": "https://github.com/rust-lang/rust/commit/d0e0f4021d10b546ebbb3b346296b36ec10ac957"}], "stats": {"total": 678, "additions": 340, "deletions": 338}, "files": [{"sha": "6caaa59d0af34334e3ae9640f4aab56873beeaa8", "filename": "src/test/mir-opt/issue-41888.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/82d6e07c867046ad3e6dd6211c22213a91210eab/src%2Ftest%2Fmir-opt%2Fissue-41888.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82d6e07c867046ad3e6dd6211c22213a91210eab/src%2Ftest%2Fmir-opt%2Fissue-41888.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue-41888.rs?ref=82d6e07c867046ad3e6dd6211c22213a91210eab", "patch": "@@ -1,3 +1,4 @@\n+// ignore-wasm32-bare compiled with panic=abort by default\n // check that we clear the \"ADT master drop flag\" even when there are\n // no fields to be dropped.\n "}, {"sha": "6cd3e2dec838caac2f8e1813aca2832ea035a591", "filename": "src/test/mir-opt/issue-41888/rustc.main.ElaborateDrops.after.mir", "status": "modified", "additions": 90, "deletions": 90, "changes": 180, "blob_url": "https://github.com/rust-lang/rust/blob/82d6e07c867046ad3e6dd6211c22213a91210eab/src%2Ftest%2Fmir-opt%2Fissue-41888%2Frustc.main.ElaborateDrops.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/82d6e07c867046ad3e6dd6211c22213a91210eab/src%2Ftest%2Fmir-opt%2Fissue-41888%2Frustc.main.ElaborateDrops.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue-41888%2Frustc.main.ElaborateDrops.after.mir?ref=82d6e07c867046ad3e6dd6211c22213a91210eab", "patch": "@@ -1,250 +1,250 @@\n // MIR for `main` after ElaborateDrops\n \n fn main() -> () {\n-    let mut _0: ();                      // return place in scope 0 at $DIR/issue-41888.rs:5:11: 5:11\n-    let _1: E;                           // in scope 0 at $DIR/issue-41888.rs:6:9: 6:10\n-    let mut _2: bool;                    // in scope 0 at $DIR/issue-41888.rs:7:8: 7:14\n-    let mut _3: E;                       // in scope 0 at $DIR/issue-41888.rs:8:13: 8:20\n-    let mut _4: K;                       // in scope 0 at $DIR/issue-41888.rs:8:18: 8:19\n-    let mut _5: isize;                   // in scope 0 at $DIR/issue-41888.rs:9:16: 9:24\n-    let mut _7: bool;                    // in scope 0 at $DIR/issue-41888.rs:14:1: 14:2\n-    let mut _8: bool;                    // in scope 0 at $DIR/issue-41888.rs:14:1: 14:2\n-    let mut _9: bool;                    // in scope 0 at $DIR/issue-41888.rs:14:1: 14:2\n-    let mut _10: isize;                  // in scope 0 at $DIR/issue-41888.rs:14:1: 14:2\n-    let mut _11: isize;                  // in scope 0 at $DIR/issue-41888.rs:14:1: 14:2\n+    let mut _0: ();                      // return place in scope 0 at $DIR/issue-41888.rs:6:11: 6:11\n+    let _1: E;                           // in scope 0 at $DIR/issue-41888.rs:7:9: 7:10\n+    let mut _2: bool;                    // in scope 0 at $DIR/issue-41888.rs:8:8: 8:14\n+    let mut _3: E;                       // in scope 0 at $DIR/issue-41888.rs:9:13: 9:20\n+    let mut _4: K;                       // in scope 0 at $DIR/issue-41888.rs:9:18: 9:19\n+    let mut _5: isize;                   // in scope 0 at $DIR/issue-41888.rs:10:16: 10:24\n+    let mut _7: bool;                    // in scope 0 at $DIR/issue-41888.rs:15:1: 15:2\n+    let mut _8: bool;                    // in scope 0 at $DIR/issue-41888.rs:15:1: 15:2\n+    let mut _9: bool;                    // in scope 0 at $DIR/issue-41888.rs:15:1: 15:2\n+    let mut _10: isize;                  // in scope 0 at $DIR/issue-41888.rs:15:1: 15:2\n+    let mut _11: isize;                  // in scope 0 at $DIR/issue-41888.rs:15:1: 15:2\n     scope 1 {\n-        debug e => _1;                   // in scope 1 at $DIR/issue-41888.rs:6:9: 6:10\n-        let _6: K;                       // in scope 1 at $DIR/issue-41888.rs:9:21: 9:23\n+        debug e => _1;                   // in scope 1 at $DIR/issue-41888.rs:7:9: 7:10\n+        let _6: K;                       // in scope 1 at $DIR/issue-41888.rs:10:21: 10:23\n         scope 2 {\n-            debug _k => _6;              // in scope 2 at $DIR/issue-41888.rs:9:21: 9:23\n+            debug _k => _6;              // in scope 2 at $DIR/issue-41888.rs:10:21: 10:23\n         }\n     }\n \n     bb0: {\n-        _9 = const false;                // bb0[0]: scope 0 at $DIR/issue-41888.rs:6:9: 6:10\n+        _9 = const false;                // bb0[0]: scope 0 at $DIR/issue-41888.rs:7:9: 7:10\n                                          // ty::Const\n                                          // + ty: bool\n                                          // + val: Value(Scalar(0x00))\n                                          // mir::Constant\n-                                         // + span: $DIR/issue-41888.rs:6:9: 6:10\n+                                         // + span: $DIR/issue-41888.rs:7:9: 7:10\n                                          // + literal: Const { ty: bool, val: Value(Scalar(0x00)) }\n-        _7 = const false;                // bb0[1]: scope 0 at $DIR/issue-41888.rs:6:9: 6:10\n+        _7 = const false;                // bb0[1]: scope 0 at $DIR/issue-41888.rs:7:9: 7:10\n                                          // ty::Const\n                                          // + ty: bool\n                                          // + val: Value(Scalar(0x00))\n                                          // mir::Constant\n-                                         // + span: $DIR/issue-41888.rs:6:9: 6:10\n+                                         // + span: $DIR/issue-41888.rs:7:9: 7:10\n                                          // + literal: Const { ty: bool, val: Value(Scalar(0x00)) }\n-        _8 = const false;                // bb0[2]: scope 0 at $DIR/issue-41888.rs:6:9: 6:10\n+        _8 = const false;                // bb0[2]: scope 0 at $DIR/issue-41888.rs:7:9: 7:10\n                                          // ty::Const\n                                          // + ty: bool\n                                          // + val: Value(Scalar(0x00))\n                                          // mir::Constant\n-                                         // + span: $DIR/issue-41888.rs:6:9: 6:10\n+                                         // + span: $DIR/issue-41888.rs:7:9: 7:10\n                                          // + literal: Const { ty: bool, val: Value(Scalar(0x00)) }\n-        StorageLive(_1);                 // bb0[3]: scope 0 at $DIR/issue-41888.rs:6:9: 6:10\n-        StorageLive(_2);                 // bb0[4]: scope 1 at $DIR/issue-41888.rs:7:8: 7:14\n-        _2 = const cond() -> [return: bb2, unwind: bb3]; // bb0[5]: scope 1 at $DIR/issue-41888.rs:7:8: 7:14\n+        StorageLive(_1);                 // bb0[3]: scope 0 at $DIR/issue-41888.rs:7:9: 7:10\n+        StorageLive(_2);                 // bb0[4]: scope 1 at $DIR/issue-41888.rs:8:8: 8:14\n+        _2 = const cond() -> [return: bb2, unwind: bb3]; // bb0[5]: scope 1 at $DIR/issue-41888.rs:8:8: 8:14\n                                          // ty::Const\n                                          // + ty: fn() -> bool {cond}\n                                          // + val: Value(Scalar(<ZST>))\n                                          // mir::Constant\n-                                         // + span: $DIR/issue-41888.rs:7:8: 7:12\n+                                         // + span: $DIR/issue-41888.rs:8:8: 8:12\n                                          // + literal: Const { ty: fn() -> bool {cond}, val: Value(Scalar(<ZST>)) }\n     }\n \n     bb1 (cleanup): {\n-        resume;                          // bb1[0]: scope 0 at $DIR/issue-41888.rs:5:1: 14:2\n+        resume;                          // bb1[0]: scope 0 at $DIR/issue-41888.rs:6:1: 15:2\n     }\n \n     bb2: {\n-        switchInt(_2) -> [false: bb4, otherwise: bb5]; // bb2[0]: scope 1 at $DIR/issue-41888.rs:7:5: 13:6\n+        switchInt(_2) -> [false: bb4, otherwise: bb5]; // bb2[0]: scope 1 at $DIR/issue-41888.rs:8:5: 14:6\n     }\n \n     bb3 (cleanup): {\n-        goto -> bb1;                     // bb3[0]: scope 0 at $DIR/issue-41888.rs:14:1: 14:2\n+        goto -> bb1;                     // bb3[0]: scope 0 at $DIR/issue-41888.rs:15:1: 15:2\n     }\n \n     bb4: {\n-        _0 = ();                         // bb4[0]: scope 1 at $DIR/issue-41888.rs:7:5: 13:6\n-        goto -> bb11;                    // bb4[1]: scope 1 at $DIR/issue-41888.rs:7:5: 13:6\n+        _0 = ();                         // bb4[0]: scope 1 at $DIR/issue-41888.rs:8:5: 14:6\n+        goto -> bb11;                    // bb4[1]: scope 1 at $DIR/issue-41888.rs:8:5: 14:6\n     }\n \n     bb5: {\n-        StorageLive(_3);                 // bb5[0]: scope 1 at $DIR/issue-41888.rs:8:13: 8:20\n-        StorageLive(_4);                 // bb5[1]: scope 1 at $DIR/issue-41888.rs:8:18: 8:19\n-        _4 = K;                          // bb5[2]: scope 1 at $DIR/issue-41888.rs:8:18: 8:19\n-        _3 = E::F(move _4,);             // bb5[3]: scope 1 at $DIR/issue-41888.rs:8:13: 8:20\n-        StorageDead(_4);                 // bb5[4]: scope 1 at $DIR/issue-41888.rs:8:19: 8:20\n-        goto -> bb14;                    // bb5[5]: scope 1 at $DIR/issue-41888.rs:8:9: 8:10\n+        StorageLive(_3);                 // bb5[0]: scope 1 at $DIR/issue-41888.rs:9:13: 9:20\n+        StorageLive(_4);                 // bb5[1]: scope 1 at $DIR/issue-41888.rs:9:18: 9:19\n+        _4 = K;                          // bb5[2]: scope 1 at $DIR/issue-41888.rs:9:18: 9:19\n+        _3 = E::F(move _4,);             // bb5[3]: scope 1 at $DIR/issue-41888.rs:9:13: 9:20\n+        StorageDead(_4);                 // bb5[4]: scope 1 at $DIR/issue-41888.rs:9:19: 9:20\n+        goto -> bb14;                    // bb5[5]: scope 1 at $DIR/issue-41888.rs:9:9: 9:10\n     }\n \n     bb6: {\n-        goto -> bb8;                     // bb6[0]: scope 1 at $DIR/issue-41888.rs:8:19: 8:20\n+        goto -> bb8;                     // bb6[0]: scope 1 at $DIR/issue-41888.rs:9:19: 9:20\n     }\n \n     bb7 (cleanup): {\n-        goto -> bb3;                     // bb7[0]: scope 1 at $DIR/issue-41888.rs:8:19: 8:20\n+        goto -> bb3;                     // bb7[0]: scope 1 at $DIR/issue-41888.rs:9:19: 9:20\n     }\n \n     bb8: {\n-        StorageDead(_3);                 // bb8[0]: scope 1 at $DIR/issue-41888.rs:8:19: 8:20\n-        _5 = discriminant(_1);           // bb8[1]: scope 1 at $DIR/issue-41888.rs:9:16: 9:24\n-        switchInt(move _5) -> [0isize: bb10, otherwise: bb9]; // bb8[2]: scope 1 at $DIR/issue-41888.rs:9:16: 9:24\n+        StorageDead(_3);                 // bb8[0]: scope 1 at $DIR/issue-41888.rs:9:19: 9:20\n+        _5 = discriminant(_1);           // bb8[1]: scope 1 at $DIR/issue-41888.rs:10:16: 10:24\n+        switchInt(move _5) -> [0isize: bb10, otherwise: bb9]; // bb8[2]: scope 1 at $DIR/issue-41888.rs:10:16: 10:24\n     }\n \n     bb9: {\n-        _0 = ();                         // bb9[0]: scope 1 at $DIR/issue-41888.rs:9:9: 12:10\n-        goto -> bb11;                    // bb9[1]: scope 1 at $DIR/issue-41888.rs:9:9: 12:10\n+        _0 = ();                         // bb9[0]: scope 1 at $DIR/issue-41888.rs:10:9: 13:10\n+        goto -> bb11;                    // bb9[1]: scope 1 at $DIR/issue-41888.rs:10:9: 13:10\n     }\n \n     bb10: {\n-        StorageLive(_6);                 // bb10[0]: scope 1 at $DIR/issue-41888.rs:9:21: 9:23\n-        _9 = const false;                // bb10[1]: scope 1 at $DIR/issue-41888.rs:9:21: 9:23\n+        StorageLive(_6);                 // bb10[0]: scope 1 at $DIR/issue-41888.rs:10:21: 10:23\n+        _9 = const false;                // bb10[1]: scope 1 at $DIR/issue-41888.rs:10:21: 10:23\n                                          // ty::Const\n                                          // + ty: bool\n                                          // + val: Value(Scalar(0x00))\n                                          // mir::Constant\n-                                         // + span: $DIR/issue-41888.rs:9:21: 9:23\n+                                         // + span: $DIR/issue-41888.rs:10:21: 10:23\n                                          // + literal: Const { ty: bool, val: Value(Scalar(0x00)) }\n-        _6 = move ((_1 as F).0: K);      // bb10[2]: scope 1 at $DIR/issue-41888.rs:9:21: 9:23\n-        _0 = ();                         // bb10[3]: scope 2 at $DIR/issue-41888.rs:9:29: 12:10\n-        StorageDead(_6);                 // bb10[4]: scope 1 at $DIR/issue-41888.rs:12:9: 12:10\n-        goto -> bb11;                    // bb10[5]: scope 1 at $DIR/issue-41888.rs:9:9: 12:10\n+        _6 = move ((_1 as F).0: K);      // bb10[2]: scope 1 at $DIR/issue-41888.rs:10:21: 10:23\n+        _0 = ();                         // bb10[3]: scope 2 at $DIR/issue-41888.rs:10:29: 13:10\n+        StorageDead(_6);                 // bb10[4]: scope 1 at $DIR/issue-41888.rs:13:9: 13:10\n+        goto -> bb11;                    // bb10[5]: scope 1 at $DIR/issue-41888.rs:10:9: 13:10\n     }\n \n     bb11: {\n-        goto -> bb21;                    // bb11[0]: scope 0 at $DIR/issue-41888.rs:14:1: 14:2\n+        goto -> bb21;                    // bb11[0]: scope 0 at $DIR/issue-41888.rs:15:1: 15:2\n     }\n \n     bb12: {\n-        _7 = const false;                // bb12[0]: scope 0 at $DIR/issue-41888.rs:14:1: 14:2\n+        _7 = const false;                // bb12[0]: scope 0 at $DIR/issue-41888.rs:15:1: 15:2\n                                          // ty::Const\n                                          // + ty: bool\n                                          // + val: Value(Scalar(0x00))\n                                          // mir::Constant\n-                                         // + span: $DIR/issue-41888.rs:14:1: 14:2\n+                                         // + span: $DIR/issue-41888.rs:15:1: 15:2\n                                          // + literal: Const { ty: bool, val: Value(Scalar(0x00)) }\n-        _8 = const false;                // bb12[1]: scope 0 at $DIR/issue-41888.rs:14:1: 14:2\n+        _8 = const false;                // bb12[1]: scope 0 at $DIR/issue-41888.rs:15:1: 15:2\n                                          // ty::Const\n                                          // + ty: bool\n                                          // + val: Value(Scalar(0x00))\n                                          // mir::Constant\n-                                         // + span: $DIR/issue-41888.rs:14:1: 14:2\n+                                         // + span: $DIR/issue-41888.rs:15:1: 15:2\n                                          // + literal: Const { ty: bool, val: Value(Scalar(0x00)) }\n-        _9 = const false;                // bb12[2]: scope 0 at $DIR/issue-41888.rs:14:1: 14:2\n+        _9 = const false;                // bb12[2]: scope 0 at $DIR/issue-41888.rs:15:1: 15:2\n                                          // ty::Const\n                                          // + ty: bool\n                                          // + val: Value(Scalar(0x00))\n                                          // mir::Constant\n-                                         // + span: $DIR/issue-41888.rs:14:1: 14:2\n+                                         // + span: $DIR/issue-41888.rs:15:1: 15:2\n                                          // + literal: Const { ty: bool, val: Value(Scalar(0x00)) }\n-        StorageDead(_1);                 // bb12[3]: scope 0 at $DIR/issue-41888.rs:14:1: 14:2\n-        StorageDead(_2);                 // bb12[4]: scope 0 at $DIR/issue-41888.rs:14:1: 14:2\n-        return;                          // bb12[5]: scope 0 at $DIR/issue-41888.rs:14:2: 14:2\n+        StorageDead(_1);                 // bb12[3]: scope 0 at $DIR/issue-41888.rs:15:1: 15:2\n+        StorageDead(_2);                 // bb12[4]: scope 0 at $DIR/issue-41888.rs:15:1: 15:2\n+        return;                          // bb12[5]: scope 0 at $DIR/issue-41888.rs:15:2: 15:2\n     }\n \n     bb13 (cleanup): {\n-        _7 = const true;                 // bb13[0]: scope 1 at $DIR/issue-41888.rs:8:9: 8:10\n+        _7 = const true;                 // bb13[0]: scope 1 at $DIR/issue-41888.rs:9:9: 9:10\n                                          // ty::Const\n                                          // + ty: bool\n                                          // + val: Value(Scalar(0x01))\n                                          // mir::Constant\n-                                         // + span: $DIR/issue-41888.rs:8:9: 8:10\n+                                         // + span: $DIR/issue-41888.rs:9:9: 9:10\n                                          // + literal: Const { ty: bool, val: Value(Scalar(0x01)) }\n-        _8 = const true;                 // bb13[1]: scope 1 at $DIR/issue-41888.rs:8:9: 8:10\n+        _8 = const true;                 // bb13[1]: scope 1 at $DIR/issue-41888.rs:9:9: 9:10\n                                          // ty::Const\n                                          // + ty: bool\n                                          // + val: Value(Scalar(0x01))\n                                          // mir::Constant\n-                                         // + span: $DIR/issue-41888.rs:8:9: 8:10\n+                                         // + span: $DIR/issue-41888.rs:9:9: 9:10\n                                          // + literal: Const { ty: bool, val: Value(Scalar(0x01)) }\n-        _9 = const true;                 // bb13[2]: scope 1 at $DIR/issue-41888.rs:8:9: 8:10\n+        _9 = const true;                 // bb13[2]: scope 1 at $DIR/issue-41888.rs:9:9: 9:10\n                                          // ty::Const\n                                          // + ty: bool\n                                          // + val: Value(Scalar(0x01))\n                                          // mir::Constant\n-                                         // + span: $DIR/issue-41888.rs:8:9: 8:10\n+                                         // + span: $DIR/issue-41888.rs:9:9: 9:10\n                                          // + literal: Const { ty: bool, val: Value(Scalar(0x01)) }\n-        _1 = move _3;                    // bb13[3]: scope 1 at $DIR/issue-41888.rs:8:9: 8:10\n-        goto -> bb7;                     // bb13[4]: scope 1 at $DIR/issue-41888.rs:8:9: 8:10\n+        _1 = move _3;                    // bb13[3]: scope 1 at $DIR/issue-41888.rs:9:9: 9:10\n+        goto -> bb7;                     // bb13[4]: scope 1 at $DIR/issue-41888.rs:9:9: 9:10\n     }\n \n     bb14: {\n-        _7 = const true;                 // bb14[0]: scope 1 at $DIR/issue-41888.rs:8:9: 8:10\n+        _7 = const true;                 // bb14[0]: scope 1 at $DIR/issue-41888.rs:9:9: 9:10\n                                          // ty::Const\n                                          // + ty: bool\n                                          // + val: Value(Scalar(0x01))\n                                          // mir::Constant\n-                                         // + span: $DIR/issue-41888.rs:8:9: 8:10\n+                                         // + span: $DIR/issue-41888.rs:9:9: 9:10\n                                          // + literal: Const { ty: bool, val: Value(Scalar(0x01)) }\n-        _8 = const true;                 // bb14[1]: scope 1 at $DIR/issue-41888.rs:8:9: 8:10\n+        _8 = const true;                 // bb14[1]: scope 1 at $DIR/issue-41888.rs:9:9: 9:10\n                                          // ty::Const\n                                          // + ty: bool\n                                          // + val: Value(Scalar(0x01))\n                                          // mir::Constant\n-                                         // + span: $DIR/issue-41888.rs:8:9: 8:10\n+                                         // + span: $DIR/issue-41888.rs:9:9: 9:10\n                                          // + literal: Const { ty: bool, val: Value(Scalar(0x01)) }\n-        _9 = const true;                 // bb14[2]: scope 1 at $DIR/issue-41888.rs:8:9: 8:10\n+        _9 = const true;                 // bb14[2]: scope 1 at $DIR/issue-41888.rs:9:9: 9:10\n                                          // ty::Const\n                                          // + ty: bool\n                                          // + val: Value(Scalar(0x01))\n                                          // mir::Constant\n-                                         // + span: $DIR/issue-41888.rs:8:9: 8:10\n+                                         // + span: $DIR/issue-41888.rs:9:9: 9:10\n                                          // + literal: Const { ty: bool, val: Value(Scalar(0x01)) }\n-        _1 = move _3;                    // bb14[3]: scope 1 at $DIR/issue-41888.rs:8:9: 8:10\n-        goto -> bb6;                     // bb14[4]: scope 1 at $DIR/issue-41888.rs:8:9: 8:10\n+        _1 = move _3;                    // bb14[3]: scope 1 at $DIR/issue-41888.rs:9:9: 9:10\n+        goto -> bb6;                     // bb14[4]: scope 1 at $DIR/issue-41888.rs:9:9: 9:10\n     }\n \n     bb15: {\n-        _7 = const false;                // bb15[0]: scope 0 at $DIR/issue-41888.rs:14:1: 14:2\n+        _7 = const false;                // bb15[0]: scope 0 at $DIR/issue-41888.rs:15:1: 15:2\n                                          // ty::Const\n                                          // + ty: bool\n                                          // + val: Value(Scalar(0x00))\n                                          // mir::Constant\n-                                         // + span: $DIR/issue-41888.rs:14:1: 14:2\n+                                         // + span: $DIR/issue-41888.rs:15:1: 15:2\n                                          // + literal: Const { ty: bool, val: Value(Scalar(0x00)) }\n-        goto -> bb12;                    // bb15[1]: scope 0 at $DIR/issue-41888.rs:14:1: 14:2\n+        goto -> bb12;                    // bb15[1]: scope 0 at $DIR/issue-41888.rs:15:1: 15:2\n     }\n \n     bb16 (cleanup): {\n-        _7 = const false;                // bb16[0]: scope 0 at $DIR/issue-41888.rs:14:1: 14:2\n+        _7 = const false;                // bb16[0]: scope 0 at $DIR/issue-41888.rs:15:1: 15:2\n                                          // ty::Const\n                                          // + ty: bool\n                                          // + val: Value(Scalar(0x00))\n                                          // mir::Constant\n-                                         // + span: $DIR/issue-41888.rs:14:1: 14:2\n+                                         // + span: $DIR/issue-41888.rs:15:1: 15:2\n                                          // + literal: Const { ty: bool, val: Value(Scalar(0x00)) }\n-        goto -> bb1;                     // bb16[1]: scope 0 at $DIR/issue-41888.rs:14:1: 14:2\n+        goto -> bb1;                     // bb16[1]: scope 0 at $DIR/issue-41888.rs:15:1: 15:2\n     }\n \n     bb17 (cleanup): {\n-        goto -> bb16;                    // bb17[0]: scope 0 at $DIR/issue-41888.rs:14:1: 14:2\n+        goto -> bb16;                    // bb17[0]: scope 0 at $DIR/issue-41888.rs:15:1: 15:2\n     }\n \n     bb18: {\n-        drop(_1) -> [return: bb15, unwind: bb16]; // bb18[0]: scope 0 at $DIR/issue-41888.rs:14:1: 14:2\n+        drop(_1) -> [return: bb15, unwind: bb16]; // bb18[0]: scope 0 at $DIR/issue-41888.rs:15:1: 15:2\n     }\n \n     bb19 (cleanup): {\n-        drop(_1) -> bb16;                // bb19[0]: scope 0 at $DIR/issue-41888.rs:14:1: 14:2\n+        drop(_1) -> bb16;                // bb19[0]: scope 0 at $DIR/issue-41888.rs:15:1: 15:2\n     }\n \n     bb20: {\n-        _10 = discriminant(_1);          // bb20[0]: scope 0 at $DIR/issue-41888.rs:14:1: 14:2\n-        switchInt(move _10) -> [0isize: bb15, otherwise: bb18]; // bb20[1]: scope 0 at $DIR/issue-41888.rs:14:1: 14:2\n+        _10 = discriminant(_1);          // bb20[0]: scope 0 at $DIR/issue-41888.rs:15:1: 15:2\n+        switchInt(move _10) -> [0isize: bb15, otherwise: bb18]; // bb20[1]: scope 0 at $DIR/issue-41888.rs:15:1: 15:2\n     }\n \n     bb21: {\n-        switchInt(_7) -> [false: bb15, otherwise: bb20]; // bb21[0]: scope 0 at $DIR/issue-41888.rs:14:1: 14:2\n+        switchInt(_7) -> [false: bb15, otherwise: bb20]; // bb21[0]: scope 0 at $DIR/issue-41888.rs:15:1: 15:2\n     }\n \n     bb22 (cleanup): {\n-        _11 = discriminant(_1);          // bb22[0]: scope 0 at $DIR/issue-41888.rs:14:1: 14:2\n-        switchInt(move _11) -> [0isize: bb17, otherwise: bb19]; // bb22[1]: scope 0 at $DIR/issue-41888.rs:14:1: 14:2\n+        _11 = discriminant(_1);          // bb22[0]: scope 0 at $DIR/issue-41888.rs:15:1: 15:2\n+        switchInt(move _11) -> [0isize: bb17, otherwise: bb19]; // bb22[1]: scope 0 at $DIR/issue-41888.rs:15:1: 15:2\n     }\n \n     bb23 (cleanup): {\n-        switchInt(_7) -> [false: bb16, otherwise: bb22]; // bb23[0]: scope 0 at $DIR/issue-41888.rs:14:1: 14:2\n+        switchInt(_7) -> [false: bb16, otherwise: bb22]; // bb23[0]: scope 0 at $DIR/issue-41888.rs:15:1: 15:2\n     }\n }"}, {"sha": "0e30a15671528437870fb905b0e0f1e671b41ff5", "filename": "src/test/mir-opt/match-arm-scopes.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/82d6e07c867046ad3e6dd6211c22213a91210eab/src%2Ftest%2Fmir-opt%2Fmatch-arm-scopes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82d6e07c867046ad3e6dd6211c22213a91210eab/src%2Ftest%2Fmir-opt%2Fmatch-arm-scopes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatch-arm-scopes.rs?ref=82d6e07c867046ad3e6dd6211c22213a91210eab", "patch": "@@ -1,3 +1,4 @@\n+// ignore-wasm32-bare compiled with panic=abort by default\n // Test that StorageDead and Drops are generated properly for bindings in\n // matches:\n // * The MIR should only contain a single drop of `s` and `t`: at the end"}, {"sha": "0b60f4f3321b6024fd125e2c979ef9ec0db44f8e", "filename": "src/test/mir-opt/match-arm-scopes/rustc.complicated_match.ElaborateDrops.after.mir", "status": "modified", "additions": 117, "deletions": 117, "changes": 234, "blob_url": "https://github.com/rust-lang/rust/blob/82d6e07c867046ad3e6dd6211c22213a91210eab/src%2Ftest%2Fmir-opt%2Fmatch-arm-scopes%2Frustc.complicated_match.ElaborateDrops.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/82d6e07c867046ad3e6dd6211c22213a91210eab/src%2Ftest%2Fmir-opt%2Fmatch-arm-scopes%2Frustc.complicated_match.ElaborateDrops.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatch-arm-scopes%2Frustc.complicated_match.ElaborateDrops.after.mir?ref=82d6e07c867046ad3e6dd6211c22213a91210eab", "patch": "@@ -1,235 +1,235 @@\n // MIR for `complicated_match` after ElaborateDrops\n \n fn complicated_match(_1: bool, _2: (bool, bool, std::string::String)) -> i32 {\n-    debug cond => _1;                    // in scope 0 at $DIR/match-arm-scopes.rs:13:22: 13:26\n-    debug items => _2;                   // in scope 0 at $DIR/match-arm-scopes.rs:13:34: 13:39\n-    let mut _0: i32;                     // return place in scope 0 at $DIR/match-arm-scopes.rs:13:66: 13:69\n-    let mut _3: &bool;                   // in scope 0 at $DIR/match-arm-scopes.rs:14:11: 14:16\n-    let mut _4: &bool;                   // in scope 0 at $DIR/match-arm-scopes.rs:14:11: 14:16\n-    let _5: bool;                        // in scope 0 at $DIR/match-arm-scopes.rs:15:17: 15:18\n-    let _6: &bool;                       // in scope 0 at $DIR/match-arm-scopes.rs:15:17: 15:18\n-    let _7: std::string::String;         // in scope 0 at $DIR/match-arm-scopes.rs:15:20: 15:21\n-    let _8: &std::string::String;        // in scope 0 at $DIR/match-arm-scopes.rs:15:20: 15:21\n-    let mut _9: bool;                    // in scope 0 at $DIR/match-arm-scopes.rs:15:42: 15:73\n-    let mut _10: bool;                   // in scope 0 at $DIR/match-arm-scopes.rs:15:45: 15:49\n-    let mut _11: !;                      // in scope 0 at $DIR/match-arm-scopes.rs:15:52: 15:60\n-    let mut _12: bool;                   // in scope 0 at $DIR/match-arm-scopes.rs:15:42: 15:73\n-    let mut _13: bool;                   // in scope 0 at $DIR/match-arm-scopes.rs:15:45: 15:49\n-    let mut _14: !;                      // in scope 0 at $DIR/match-arm-scopes.rs:15:52: 15:60\n-    let _15: bool;                       // in scope 0 at $DIR/match-arm-scopes.rs:16:16: 16:17\n-    let _16: std::string::String;        // in scope 0 at $DIR/match-arm-scopes.rs:16:19: 16:20\n+    debug cond => _1;                    // in scope 0 at $DIR/match-arm-scopes.rs:14:22: 14:26\n+    debug items => _2;                   // in scope 0 at $DIR/match-arm-scopes.rs:14:34: 14:39\n+    let mut _0: i32;                     // return place in scope 0 at $DIR/match-arm-scopes.rs:14:66: 14:69\n+    let mut _3: &bool;                   // in scope 0 at $DIR/match-arm-scopes.rs:15:11: 15:16\n+    let mut _4: &bool;                   // in scope 0 at $DIR/match-arm-scopes.rs:15:11: 15:16\n+    let _5: bool;                        // in scope 0 at $DIR/match-arm-scopes.rs:16:17: 16:18\n+    let _6: &bool;                       // in scope 0 at $DIR/match-arm-scopes.rs:16:17: 16:18\n+    let _7: std::string::String;         // in scope 0 at $DIR/match-arm-scopes.rs:16:20: 16:21\n+    let _8: &std::string::String;        // in scope 0 at $DIR/match-arm-scopes.rs:16:20: 16:21\n+    let mut _9: bool;                    // in scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n+    let mut _10: bool;                   // in scope 0 at $DIR/match-arm-scopes.rs:16:45: 16:49\n+    let mut _11: !;                      // in scope 0 at $DIR/match-arm-scopes.rs:16:52: 16:60\n+    let mut _12: bool;                   // in scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n+    let mut _13: bool;                   // in scope 0 at $DIR/match-arm-scopes.rs:16:45: 16:49\n+    let mut _14: !;                      // in scope 0 at $DIR/match-arm-scopes.rs:16:52: 16:60\n+    let _15: bool;                       // in scope 0 at $DIR/match-arm-scopes.rs:17:16: 17:17\n+    let _16: std::string::String;        // in scope 0 at $DIR/match-arm-scopes.rs:17:19: 17:20\n     scope 1 {\n-        debug a => _5;                   // in scope 1 at $DIR/match-arm-scopes.rs:15:17: 15:18\n-        debug a => _6;                   // in scope 1 at $DIR/match-arm-scopes.rs:15:17: 15:18\n-        debug s => _7;                   // in scope 1 at $DIR/match-arm-scopes.rs:15:20: 15:21\n-        debug s => _8;                   // in scope 1 at $DIR/match-arm-scopes.rs:15:20: 15:21\n+        debug a => _5;                   // in scope 1 at $DIR/match-arm-scopes.rs:16:17: 16:18\n+        debug a => _6;                   // in scope 1 at $DIR/match-arm-scopes.rs:16:17: 16:18\n+        debug s => _7;                   // in scope 1 at $DIR/match-arm-scopes.rs:16:20: 16:21\n+        debug s => _8;                   // in scope 1 at $DIR/match-arm-scopes.rs:16:20: 16:21\n     }\n     scope 2 {\n-        debug b => _15;                  // in scope 2 at $DIR/match-arm-scopes.rs:16:16: 16:17\n-        debug t => _16;                  // in scope 2 at $DIR/match-arm-scopes.rs:16:19: 16:20\n+        debug b => _15;                  // in scope 2 at $DIR/match-arm-scopes.rs:17:16: 17:17\n+        debug t => _16;                  // in scope 2 at $DIR/match-arm-scopes.rs:17:19: 17:20\n     }\n \n     bb0: {\n-        switchInt((_2.0: bool)) -> [false: bb6, otherwise: bb2]; // bb0[0]: scope 0 at $DIR/match-arm-scopes.rs:15:10: 15:15\n+        switchInt((_2.0: bool)) -> [false: bb6, otherwise: bb2]; // bb0[0]: scope 0 at $DIR/match-arm-scopes.rs:16:10: 16:15\n     }\n \n     bb1 (cleanup): {\n-        resume;                          // bb1[0]: scope 0 at $DIR/match-arm-scopes.rs:13:1: 18:2\n+        resume;                          // bb1[0]: scope 0 at $DIR/match-arm-scopes.rs:14:1: 19:2\n     }\n \n     bb2: {\n-        switchInt((_2.1: bool)) -> [false: bb14, otherwise: bb3]; // bb2[0]: scope 0 at $DIR/match-arm-scopes.rs:15:29: 15:34\n+        switchInt((_2.1: bool)) -> [false: bb14, otherwise: bb3]; // bb2[0]: scope 0 at $DIR/match-arm-scopes.rs:16:29: 16:34\n     }\n \n     bb3: {\n-        switchInt((_2.0: bool)) -> [false: bb4, otherwise: bb21]; // bb3[0]: scope 0 at $DIR/match-arm-scopes.rs:16:10: 16:14\n+        switchInt((_2.0: bool)) -> [false: bb4, otherwise: bb21]; // bb3[0]: scope 0 at $DIR/match-arm-scopes.rs:17:10: 17:14\n     }\n \n     bb4: {\n-        StorageLive(_15);                // bb4[0]: scope 0 at $DIR/match-arm-scopes.rs:16:32: 16:33\n-        _15 = (_2.1: bool);              // bb4[1]: scope 0 at $DIR/match-arm-scopes.rs:16:32: 16:33\n-        StorageLive(_16);                // bb4[2]: scope 0 at $DIR/match-arm-scopes.rs:16:35: 16:36\n-        _16 = move (_2.2: std::string::String); // bb4[3]: scope 0 at $DIR/match-arm-scopes.rs:16:35: 16:36\n-        goto -> bb20;                    // bb4[4]: scope 0 at $DIR/match-arm-scopes.rs:14:5: 17:6\n+        StorageLive(_15);                // bb4[0]: scope 0 at $DIR/match-arm-scopes.rs:17:32: 17:33\n+        _15 = (_2.1: bool);              // bb4[1]: scope 0 at $DIR/match-arm-scopes.rs:17:32: 17:33\n+        StorageLive(_16);                // bb4[2]: scope 0 at $DIR/match-arm-scopes.rs:17:35: 17:36\n+        _16 = move (_2.2: std::string::String); // bb4[3]: scope 0 at $DIR/match-arm-scopes.rs:17:35: 17:36\n+        goto -> bb20;                    // bb4[4]: scope 0 at $DIR/match-arm-scopes.rs:15:5: 18:6\n     }\n \n     bb5: {\n-        _0 = const 1i32;                 // bb5[0]: scope 1 at $DIR/match-arm-scopes.rs:15:77: 15:78\n+        _0 = const 1i32;                 // bb5[0]: scope 1 at $DIR/match-arm-scopes.rs:16:77: 16:78\n                                          // ty::Const\n                                          // + ty: i32\n                                          // + val: Value(Scalar(0x00000001))\n                                          // mir::Constant\n-                                         // + span: $DIR/match-arm-scopes.rs:15:77: 15:78\n+                                         // + span: $DIR/match-arm-scopes.rs:16:77: 16:78\n                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000001)) }\n-        drop(_7) -> [return: bb19, unwind: bb10]; // bb5[1]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n+        drop(_7) -> [return: bb19, unwind: bb10]; // bb5[1]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n     }\n \n     bb6: {\n-        StorageLive(_6);                 // bb6[0]: scope 0 at $DIR/match-arm-scopes.rs:15:17: 15:18\n-        _6 = &(_2.1: bool);              // bb6[1]: scope 0 at $DIR/match-arm-scopes.rs:15:17: 15:18\n-        StorageLive(_8);                 // bb6[2]: scope 0 at $DIR/match-arm-scopes.rs:15:20: 15:21\n-        _8 = &(_2.2: std::string::String); // bb6[3]: scope 0 at $DIR/match-arm-scopes.rs:15:20: 15:21\n-        StorageLive(_9);                 // bb6[4]: scope 0 at $DIR/match-arm-scopes.rs:15:42: 15:73\n-        StorageLive(_10);                // bb6[5]: scope 0 at $DIR/match-arm-scopes.rs:15:45: 15:49\n-        _10 = _1;                        // bb6[6]: scope 0 at $DIR/match-arm-scopes.rs:15:45: 15:49\n-        switchInt(_10) -> [false: bb7, otherwise: bb8]; // bb6[7]: scope 0 at $DIR/match-arm-scopes.rs:15:42: 15:73\n+        StorageLive(_6);                 // bb6[0]: scope 0 at $DIR/match-arm-scopes.rs:16:17: 16:18\n+        _6 = &(_2.1: bool);              // bb6[1]: scope 0 at $DIR/match-arm-scopes.rs:16:17: 16:18\n+        StorageLive(_8);                 // bb6[2]: scope 0 at $DIR/match-arm-scopes.rs:16:20: 16:21\n+        _8 = &(_2.2: std::string::String); // bb6[3]: scope 0 at $DIR/match-arm-scopes.rs:16:20: 16:21\n+        StorageLive(_9);                 // bb6[4]: scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n+        StorageLive(_10);                // bb6[5]: scope 0 at $DIR/match-arm-scopes.rs:16:45: 16:49\n+        _10 = _1;                        // bb6[6]: scope 0 at $DIR/match-arm-scopes.rs:16:45: 16:49\n+        switchInt(_10) -> [false: bb7, otherwise: bb8]; // bb6[7]: scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n     }\n \n     bb7: {\n-        _9 = (*_6);                      // bb7[0]: scope 0 at $DIR/match-arm-scopes.rs:15:70: 15:71\n-        StorageDead(_10);                // bb7[1]: scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n-        switchInt(move _9) -> [false: bb13, otherwise: bb12]; // bb7[2]: scope 0 at $DIR/match-arm-scopes.rs:15:42: 15:73\n+        _9 = (*_6);                      // bb7[0]: scope 0 at $DIR/match-arm-scopes.rs:16:70: 16:71\n+        StorageDead(_10);                // bb7[1]: scope 0 at $DIR/match-arm-scopes.rs:16:72: 16:73\n+        switchInt(move _9) -> [false: bb13, otherwise: bb12]; // bb7[2]: scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n     }\n \n     bb8: {\n-        _0 = const 3i32;                 // bb8[0]: scope 0 at $DIR/match-arm-scopes.rs:15:59: 15:60\n+        _0 = const 3i32;                 // bb8[0]: scope 0 at $DIR/match-arm-scopes.rs:16:59: 16:60\n                                          // ty::Const\n                                          // + ty: i32\n                                          // + val: Value(Scalar(0x00000003))\n                                          // mir::Constant\n-                                         // + span: $DIR/match-arm-scopes.rs:15:59: 15:60\n+                                         // + span: $DIR/match-arm-scopes.rs:16:59: 16:60\n                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000003)) }\n-        StorageDead(_10);                // bb8[1]: scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n-        StorageDead(_9);                 // bb8[2]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        StorageDead(_8);                 // bb8[3]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        StorageDead(_6);                 // bb8[4]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        goto -> bb11;                    // bb8[5]: scope 0 at $DIR/match-arm-scopes.rs:15:52: 15:60\n+        StorageDead(_10);                // bb8[1]: scope 0 at $DIR/match-arm-scopes.rs:16:72: 16:73\n+        StorageDead(_9);                 // bb8[2]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_8);                 // bb8[3]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_6);                 // bb8[4]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        goto -> bb11;                    // bb8[5]: scope 0 at $DIR/match-arm-scopes.rs:16:52: 16:60\n     }\n \n     bb9: {\n-        return;                          // bb9[0]: scope 0 at $DIR/match-arm-scopes.rs:18:2: 18:2\n+        return;                          // bb9[0]: scope 0 at $DIR/match-arm-scopes.rs:19:2: 19:2\n     }\n \n     bb10 (cleanup): {\n-        goto -> bb25;                    // bb10[0]: scope 0 at $DIR/match-arm-scopes.rs:18:1: 18:2\n+        goto -> bb25;                    // bb10[0]: scope 0 at $DIR/match-arm-scopes.rs:19:1: 19:2\n     }\n \n     bb11: {\n-        drop(_2) -> [return: bb9, unwind: bb1]; // bb11[0]: scope 0 at $DIR/match-arm-scopes.rs:18:1: 18:2\n+        drop(_2) -> [return: bb9, unwind: bb1]; // bb11[0]: scope 0 at $DIR/match-arm-scopes.rs:19:1: 19:2\n     }\n \n     bb12: {\n-        StorageDead(_9);                 // bb12[0]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        StorageLive(_5);                 // bb12[1]: scope 0 at $DIR/match-arm-scopes.rs:15:17: 15:18\n-        _5 = (_2.1: bool);               // bb12[2]: scope 0 at $DIR/match-arm-scopes.rs:15:17: 15:18\n-        StorageLive(_7);                 // bb12[3]: scope 0 at $DIR/match-arm-scopes.rs:15:20: 15:21\n-        _7 = move (_2.2: std::string::String); // bb12[4]: scope 0 at $DIR/match-arm-scopes.rs:15:20: 15:21\n-        goto -> bb5;                     // bb12[5]: scope 0 at $DIR/match-arm-scopes.rs:14:5: 17:6\n+        StorageDead(_9);                 // bb12[0]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageLive(_5);                 // bb12[1]: scope 0 at $DIR/match-arm-scopes.rs:16:17: 16:18\n+        _5 = (_2.1: bool);               // bb12[2]: scope 0 at $DIR/match-arm-scopes.rs:16:17: 16:18\n+        StorageLive(_7);                 // bb12[3]: scope 0 at $DIR/match-arm-scopes.rs:16:20: 16:21\n+        _7 = move (_2.2: std::string::String); // bb12[4]: scope 0 at $DIR/match-arm-scopes.rs:16:20: 16:21\n+        goto -> bb5;                     // bb12[5]: scope 0 at $DIR/match-arm-scopes.rs:15:5: 18:6\n     }\n \n     bb13: {\n-        StorageDead(_9);                 // bb13[0]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        StorageDead(_8);                 // bb13[1]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        StorageDead(_6);                 // bb13[2]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        goto -> bb2;                     // bb13[3]: scope 0 at $DIR/match-arm-scopes.rs:15:42: 15:73\n+        StorageDead(_9);                 // bb13[0]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_8);                 // bb13[1]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_6);                 // bb13[2]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        goto -> bb2;                     // bb13[3]: scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n     }\n \n     bb14: {\n-        StorageLive(_6);                 // bb14[0]: scope 0 at $DIR/match-arm-scopes.rs:15:26: 15:27\n-        _6 = &(_2.0: bool);              // bb14[1]: scope 0 at $DIR/match-arm-scopes.rs:15:26: 15:27\n-        StorageLive(_8);                 // bb14[2]: scope 0 at $DIR/match-arm-scopes.rs:15:36: 15:37\n-        _8 = &(_2.2: std::string::String); // bb14[3]: scope 0 at $DIR/match-arm-scopes.rs:15:36: 15:37\n-        StorageLive(_12);                // bb14[4]: scope 0 at $DIR/match-arm-scopes.rs:15:42: 15:73\n-        StorageLive(_13);                // bb14[5]: scope 0 at $DIR/match-arm-scopes.rs:15:45: 15:49\n-        _13 = _1;                        // bb14[6]: scope 0 at $DIR/match-arm-scopes.rs:15:45: 15:49\n-        switchInt(_13) -> [false: bb15, otherwise: bb16]; // bb14[7]: scope 0 at $DIR/match-arm-scopes.rs:15:42: 15:73\n+        StorageLive(_6);                 // bb14[0]: scope 0 at $DIR/match-arm-scopes.rs:16:26: 16:27\n+        _6 = &(_2.0: bool);              // bb14[1]: scope 0 at $DIR/match-arm-scopes.rs:16:26: 16:27\n+        StorageLive(_8);                 // bb14[2]: scope 0 at $DIR/match-arm-scopes.rs:16:36: 16:37\n+        _8 = &(_2.2: std::string::String); // bb14[3]: scope 0 at $DIR/match-arm-scopes.rs:16:36: 16:37\n+        StorageLive(_12);                // bb14[4]: scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n+        StorageLive(_13);                // bb14[5]: scope 0 at $DIR/match-arm-scopes.rs:16:45: 16:49\n+        _13 = _1;                        // bb14[6]: scope 0 at $DIR/match-arm-scopes.rs:16:45: 16:49\n+        switchInt(_13) -> [false: bb15, otherwise: bb16]; // bb14[7]: scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n     }\n \n     bb15: {\n-        _12 = (*_6);                     // bb15[0]: scope 0 at $DIR/match-arm-scopes.rs:15:70: 15:71\n-        StorageDead(_13);                // bb15[1]: scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n-        switchInt(move _12) -> [false: bb18, otherwise: bb17]; // bb15[2]: scope 0 at $DIR/match-arm-scopes.rs:15:42: 15:73\n+        _12 = (*_6);                     // bb15[0]: scope 0 at $DIR/match-arm-scopes.rs:16:70: 16:71\n+        StorageDead(_13);                // bb15[1]: scope 0 at $DIR/match-arm-scopes.rs:16:72: 16:73\n+        switchInt(move _12) -> [false: bb18, otherwise: bb17]; // bb15[2]: scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n     }\n \n     bb16: {\n-        _0 = const 3i32;                 // bb16[0]: scope 0 at $DIR/match-arm-scopes.rs:15:59: 15:60\n+        _0 = const 3i32;                 // bb16[0]: scope 0 at $DIR/match-arm-scopes.rs:16:59: 16:60\n                                          // ty::Const\n                                          // + ty: i32\n                                          // + val: Value(Scalar(0x00000003))\n                                          // mir::Constant\n-                                         // + span: $DIR/match-arm-scopes.rs:15:59: 15:60\n+                                         // + span: $DIR/match-arm-scopes.rs:16:59: 16:60\n                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000003)) }\n-        StorageDead(_13);                // bb16[1]: scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n-        StorageDead(_12);                // bb16[2]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        StorageDead(_8);                 // bb16[3]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        StorageDead(_6);                 // bb16[4]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        goto -> bb11;                    // bb16[5]: scope 0 at $DIR/match-arm-scopes.rs:15:52: 15:60\n+        StorageDead(_13);                // bb16[1]: scope 0 at $DIR/match-arm-scopes.rs:16:72: 16:73\n+        StorageDead(_12);                // bb16[2]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_8);                 // bb16[3]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_6);                 // bb16[4]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        goto -> bb11;                    // bb16[5]: scope 0 at $DIR/match-arm-scopes.rs:16:52: 16:60\n     }\n \n     bb17: {\n-        StorageDead(_12);                // bb17[0]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        StorageLive(_5);                 // bb17[1]: scope 0 at $DIR/match-arm-scopes.rs:15:26: 15:27\n-        _5 = (_2.0: bool);               // bb17[2]: scope 0 at $DIR/match-arm-scopes.rs:15:26: 15:27\n-        StorageLive(_7);                 // bb17[3]: scope 0 at $DIR/match-arm-scopes.rs:15:36: 15:37\n-        _7 = move (_2.2: std::string::String); // bb17[4]: scope 0 at $DIR/match-arm-scopes.rs:15:36: 15:37\n-        goto -> bb5;                     // bb17[5]: scope 0 at $DIR/match-arm-scopes.rs:14:5: 17:6\n+        StorageDead(_12);                // bb17[0]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageLive(_5);                 // bb17[1]: scope 0 at $DIR/match-arm-scopes.rs:16:26: 16:27\n+        _5 = (_2.0: bool);               // bb17[2]: scope 0 at $DIR/match-arm-scopes.rs:16:26: 16:27\n+        StorageLive(_7);                 // bb17[3]: scope 0 at $DIR/match-arm-scopes.rs:16:36: 16:37\n+        _7 = move (_2.2: std::string::String); // bb17[4]: scope 0 at $DIR/match-arm-scopes.rs:16:36: 16:37\n+        goto -> bb5;                     // bb17[5]: scope 0 at $DIR/match-arm-scopes.rs:15:5: 18:6\n     }\n \n     bb18: {\n-        StorageDead(_12);                // bb18[0]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        StorageDead(_8);                 // bb18[1]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        StorageDead(_6);                 // bb18[2]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        goto -> bb3;                     // bb18[3]: scope 0 at $DIR/match-arm-scopes.rs:15:42: 15:73\n+        StorageDead(_12);                // bb18[0]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_8);                 // bb18[1]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_6);                 // bb18[2]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        goto -> bb3;                     // bb18[3]: scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n     }\n \n     bb19: {\n-        StorageDead(_7);                 // bb19[0]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        StorageDead(_5);                 // bb19[1]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        StorageDead(_8);                 // bb19[2]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        StorageDead(_6);                 // bb19[3]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        goto -> bb23;                    // bb19[4]: scope 0 at $DIR/match-arm-scopes.rs:14:5: 17:6\n+        StorageDead(_7);                 // bb19[0]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_5);                 // bb19[1]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_8);                 // bb19[2]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_6);                 // bb19[3]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        goto -> bb23;                    // bb19[4]: scope 0 at $DIR/match-arm-scopes.rs:15:5: 18:6\n     }\n \n     bb20: {\n-        _0 = const 2i32;                 // bb20[0]: scope 2 at $DIR/match-arm-scopes.rs:16:41: 16:42\n+        _0 = const 2i32;                 // bb20[0]: scope 2 at $DIR/match-arm-scopes.rs:17:41: 17:42\n                                          // ty::Const\n                                          // + ty: i32\n                                          // + val: Value(Scalar(0x00000002))\n                                          // mir::Constant\n-                                         // + span: $DIR/match-arm-scopes.rs:16:41: 16:42\n+                                         // + span: $DIR/match-arm-scopes.rs:17:41: 17:42\n                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000002)) }\n-        drop(_16) -> [return: bb22, unwind: bb10]; // bb20[1]: scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:43\n+        drop(_16) -> [return: bb22, unwind: bb10]; // bb20[1]: scope 0 at $DIR/match-arm-scopes.rs:17:42: 17:43\n     }\n \n     bb21: {\n-        StorageLive(_15);                // bb21[0]: scope 0 at $DIR/match-arm-scopes.rs:16:16: 16:17\n-        _15 = (_2.1: bool);              // bb21[1]: scope 0 at $DIR/match-arm-scopes.rs:16:16: 16:17\n-        StorageLive(_16);                // bb21[2]: scope 0 at $DIR/match-arm-scopes.rs:16:19: 16:20\n-        _16 = move (_2.2: std::string::String); // bb21[3]: scope 0 at $DIR/match-arm-scopes.rs:16:19: 16:20\n-        goto -> bb20;                    // bb21[4]: scope 0 at $DIR/match-arm-scopes.rs:14:5: 17:6\n+        StorageLive(_15);                // bb21[0]: scope 0 at $DIR/match-arm-scopes.rs:17:16: 17:17\n+        _15 = (_2.1: bool);              // bb21[1]: scope 0 at $DIR/match-arm-scopes.rs:17:16: 17:17\n+        StorageLive(_16);                // bb21[2]: scope 0 at $DIR/match-arm-scopes.rs:17:19: 17:20\n+        _16 = move (_2.2: std::string::String); // bb21[3]: scope 0 at $DIR/match-arm-scopes.rs:17:19: 17:20\n+        goto -> bb20;                    // bb21[4]: scope 0 at $DIR/match-arm-scopes.rs:15:5: 18:6\n     }\n \n     bb22: {\n-        StorageDead(_16);                // bb22[0]: scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:43\n-        StorageDead(_15);                // bb22[1]: scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:43\n-        goto -> bb23;                    // bb22[2]: scope 0 at $DIR/match-arm-scopes.rs:14:5: 17:6\n+        StorageDead(_16);                // bb22[0]: scope 0 at $DIR/match-arm-scopes.rs:17:42: 17:43\n+        StorageDead(_15);                // bb22[1]: scope 0 at $DIR/match-arm-scopes.rs:17:42: 17:43\n+        goto -> bb23;                    // bb22[2]: scope 0 at $DIR/match-arm-scopes.rs:15:5: 18:6\n     }\n \n     bb23: {\n-        goto -> bb29;                    // bb23[0]: scope 0 at $DIR/match-arm-scopes.rs:18:1: 18:2\n+        goto -> bb29;                    // bb23[0]: scope 0 at $DIR/match-arm-scopes.rs:19:1: 19:2\n     }\n \n     bb24 (cleanup): {\n-        goto -> bb1;                     // bb24[0]: scope 0 at $DIR/match-arm-scopes.rs:18:1: 18:2\n+        goto -> bb1;                     // bb24[0]: scope 0 at $DIR/match-arm-scopes.rs:19:1: 19:2\n     }\n \n     bb25 (cleanup): {\n-        goto -> bb24;                    // bb25[0]: scope 0 at $DIR/match-arm-scopes.rs:18:1: 18:2\n+        goto -> bb24;                    // bb25[0]: scope 0 at $DIR/match-arm-scopes.rs:19:1: 19:2\n     }\n \n     bb26: {\n-        goto -> bb9;                     // bb26[0]: scope 0 at $DIR/match-arm-scopes.rs:18:1: 18:2\n+        goto -> bb9;                     // bb26[0]: scope 0 at $DIR/match-arm-scopes.rs:19:1: 19:2\n     }\n \n     bb27 (cleanup): {\n-        goto -> bb1;                     // bb27[0]: scope 0 at $DIR/match-arm-scopes.rs:18:1: 18:2\n+        goto -> bb1;                     // bb27[0]: scope 0 at $DIR/match-arm-scopes.rs:19:1: 19:2\n     }\n \n     bb28 (cleanup): {\n-        goto -> bb27;                    // bb28[0]: scope 0 at $DIR/match-arm-scopes.rs:18:1: 18:2\n+        goto -> bb27;                    // bb28[0]: scope 0 at $DIR/match-arm-scopes.rs:19:1: 19:2\n     }\n \n     bb29: {\n-        goto -> bb26;                    // bb29[0]: scope 0 at $DIR/match-arm-scopes.rs:18:1: 18:2\n+        goto -> bb26;                    // bb29[0]: scope 0 at $DIR/match-arm-scopes.rs:19:1: 19:2\n     }\n }"}, {"sha": "80ce94a7f3c61955d87c89c106e1bcab41953bb2", "filename": "src/test/mir-opt/match-arm-scopes/rustc.complicated_match.SimplifyCfg-initial.after.mir", "status": "modified", "additions": 131, "deletions": 131, "changes": 262, "blob_url": "https://github.com/rust-lang/rust/blob/82d6e07c867046ad3e6dd6211c22213a91210eab/src%2Ftest%2Fmir-opt%2Fmatch-arm-scopes%2Frustc.complicated_match.SimplifyCfg-initial.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/82d6e07c867046ad3e6dd6211c22213a91210eab/src%2Ftest%2Fmir-opt%2Fmatch-arm-scopes%2Frustc.complicated_match.SimplifyCfg-initial.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatch-arm-scopes%2Frustc.complicated_match.SimplifyCfg-initial.after.mir?ref=82d6e07c867046ad3e6dd6211c22213a91210eab", "patch": "@@ -1,246 +1,246 @@\n // MIR for `complicated_match` after SimplifyCfg-initial\n \n fn complicated_match(_1: bool, _2: (bool, bool, std::string::String)) -> i32 {\n-    debug cond => _1;                    // in scope 0 at $DIR/match-arm-scopes.rs:13:22: 13:26\n-    debug items => _2;                   // in scope 0 at $DIR/match-arm-scopes.rs:13:34: 13:39\n-    let mut _0: i32;                     // return place in scope 0 at $DIR/match-arm-scopes.rs:13:66: 13:69\n-    let mut _3: &bool;                   // in scope 0 at $DIR/match-arm-scopes.rs:14:11: 14:16\n-    let mut _4: &bool;                   // in scope 0 at $DIR/match-arm-scopes.rs:14:11: 14:16\n-    let _5: bool;                        // in scope 0 at $DIR/match-arm-scopes.rs:15:17: 15:18\n-    let _6: &bool;                       // in scope 0 at $DIR/match-arm-scopes.rs:15:17: 15:18\n-    let _7: std::string::String;         // in scope 0 at $DIR/match-arm-scopes.rs:15:20: 15:21\n-    let _8: &std::string::String;        // in scope 0 at $DIR/match-arm-scopes.rs:15:20: 15:21\n-    let mut _9: bool;                    // in scope 0 at $DIR/match-arm-scopes.rs:15:42: 15:73\n-    let mut _10: bool;                   // in scope 0 at $DIR/match-arm-scopes.rs:15:45: 15:49\n-    let mut _11: !;                      // in scope 0 at $DIR/match-arm-scopes.rs:15:52: 15:60\n-    let mut _12: bool;                   // in scope 0 at $DIR/match-arm-scopes.rs:15:42: 15:73\n-    let mut _13: bool;                   // in scope 0 at $DIR/match-arm-scopes.rs:15:45: 15:49\n-    let mut _14: !;                      // in scope 0 at $DIR/match-arm-scopes.rs:15:52: 15:60\n-    let _15: bool;                       // in scope 0 at $DIR/match-arm-scopes.rs:16:16: 16:17\n-    let _16: std::string::String;        // in scope 0 at $DIR/match-arm-scopes.rs:16:19: 16:20\n+    debug cond => _1;                    // in scope 0 at $DIR/match-arm-scopes.rs:14:22: 14:26\n+    debug items => _2;                   // in scope 0 at $DIR/match-arm-scopes.rs:14:34: 14:39\n+    let mut _0: i32;                     // return place in scope 0 at $DIR/match-arm-scopes.rs:14:66: 14:69\n+    let mut _3: &bool;                   // in scope 0 at $DIR/match-arm-scopes.rs:15:11: 15:16\n+    let mut _4: &bool;                   // in scope 0 at $DIR/match-arm-scopes.rs:15:11: 15:16\n+    let _5: bool;                        // in scope 0 at $DIR/match-arm-scopes.rs:16:17: 16:18\n+    let _6: &bool;                       // in scope 0 at $DIR/match-arm-scopes.rs:16:17: 16:18\n+    let _7: std::string::String;         // in scope 0 at $DIR/match-arm-scopes.rs:16:20: 16:21\n+    let _8: &std::string::String;        // in scope 0 at $DIR/match-arm-scopes.rs:16:20: 16:21\n+    let mut _9: bool;                    // in scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n+    let mut _10: bool;                   // in scope 0 at $DIR/match-arm-scopes.rs:16:45: 16:49\n+    let mut _11: !;                      // in scope 0 at $DIR/match-arm-scopes.rs:16:52: 16:60\n+    let mut _12: bool;                   // in scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n+    let mut _13: bool;                   // in scope 0 at $DIR/match-arm-scopes.rs:16:45: 16:49\n+    let mut _14: !;                      // in scope 0 at $DIR/match-arm-scopes.rs:16:52: 16:60\n+    let _15: bool;                       // in scope 0 at $DIR/match-arm-scopes.rs:17:16: 17:17\n+    let _16: std::string::String;        // in scope 0 at $DIR/match-arm-scopes.rs:17:19: 17:20\n     scope 1 {\n-        debug a => _5;                   // in scope 1 at $DIR/match-arm-scopes.rs:15:17: 15:18\n-        debug a => _6;                   // in scope 1 at $DIR/match-arm-scopes.rs:15:17: 15:18\n-        debug s => _7;                   // in scope 1 at $DIR/match-arm-scopes.rs:15:20: 15:21\n-        debug s => _8;                   // in scope 1 at $DIR/match-arm-scopes.rs:15:20: 15:21\n+        debug a => _5;                   // in scope 1 at $DIR/match-arm-scopes.rs:16:17: 16:18\n+        debug a => _6;                   // in scope 1 at $DIR/match-arm-scopes.rs:16:17: 16:18\n+        debug s => _7;                   // in scope 1 at $DIR/match-arm-scopes.rs:16:20: 16:21\n+        debug s => _8;                   // in scope 1 at $DIR/match-arm-scopes.rs:16:20: 16:21\n     }\n     scope 2 {\n-        debug b => _15;                  // in scope 2 at $DIR/match-arm-scopes.rs:16:16: 16:17\n-        debug t => _16;                  // in scope 2 at $DIR/match-arm-scopes.rs:16:19: 16:20\n+        debug b => _15;                  // in scope 2 at $DIR/match-arm-scopes.rs:17:16: 17:17\n+        debug t => _16;                  // in scope 2 at $DIR/match-arm-scopes.rs:17:19: 17:20\n     }\n \n     bb0: {\n-        FakeRead(ForMatchedPlace, _2);   // bb0[0]: scope 0 at $DIR/match-arm-scopes.rs:14:11: 14:16\n-        switchInt((_2.0: bool)) -> [false: bb2, otherwise: bb3]; // bb0[1]: scope 0 at $DIR/match-arm-scopes.rs:15:10: 15:15\n+        FakeRead(ForMatchedPlace, _2);   // bb0[0]: scope 0 at $DIR/match-arm-scopes.rs:15:11: 15:16\n+        switchInt((_2.0: bool)) -> [false: bb2, otherwise: bb3]; // bb0[1]: scope 0 at $DIR/match-arm-scopes.rs:16:10: 16:15\n     }\n \n     bb1 (cleanup): {\n-        resume;                          // bb1[0]: scope 0 at $DIR/match-arm-scopes.rs:13:1: 18:2\n+        resume;                          // bb1[0]: scope 0 at $DIR/match-arm-scopes.rs:14:1: 19:2\n     }\n \n     bb2: {\n-        falseEdges -> [real: bb9, imaginary: bb4]; // bb2[0]: scope 0 at $DIR/match-arm-scopes.rs:15:9: 15:22\n+        falseEdges -> [real: bb9, imaginary: bb4]; // bb2[0]: scope 0 at $DIR/match-arm-scopes.rs:16:9: 16:22\n     }\n \n     bb3: {\n-        switchInt((_2.1: bool)) -> [false: bb4, otherwise: bb5]; // bb3[0]: scope 0 at $DIR/match-arm-scopes.rs:15:29: 15:34\n+        switchInt((_2.1: bool)) -> [false: bb4, otherwise: bb5]; // bb3[0]: scope 0 at $DIR/match-arm-scopes.rs:16:29: 16:34\n     }\n \n     bb4: {\n-        falseEdges -> [real: bb18, imaginary: bb6]; // bb4[0]: scope 0 at $DIR/match-arm-scopes.rs:15:25: 15:38\n+        falseEdges -> [real: bb18, imaginary: bb6]; // bb4[0]: scope 0 at $DIR/match-arm-scopes.rs:16:25: 16:38\n     }\n \n     bb5: {\n-        switchInt((_2.0: bool)) -> [false: bb7, otherwise: bb6]; // bb5[0]: scope 0 at $DIR/match-arm-scopes.rs:16:10: 16:14\n+        switchInt((_2.0: bool)) -> [false: bb7, otherwise: bb6]; // bb5[0]: scope 0 at $DIR/match-arm-scopes.rs:17:10: 17:14\n     }\n \n     bb6: {\n-        falseEdges -> [real: bb26, imaginary: bb7]; // bb6[0]: scope 0 at $DIR/match-arm-scopes.rs:16:9: 16:21\n+        falseEdges -> [real: bb26, imaginary: bb7]; // bb6[0]: scope 0 at $DIR/match-arm-scopes.rs:17:9: 17:21\n     }\n \n     bb7: {\n-        StorageLive(_15);                // bb7[0]: scope 0 at $DIR/match-arm-scopes.rs:16:32: 16:33\n-        _15 = (_2.1: bool);              // bb7[1]: scope 0 at $DIR/match-arm-scopes.rs:16:32: 16:33\n-        StorageLive(_16);                // bb7[2]: scope 0 at $DIR/match-arm-scopes.rs:16:35: 16:36\n-        _16 = move (_2.2: std::string::String); // bb7[3]: scope 0 at $DIR/match-arm-scopes.rs:16:35: 16:36\n-        goto -> bb25;                    // bb7[4]: scope 0 at $DIR/match-arm-scopes.rs:14:5: 17:6\n+        StorageLive(_15);                // bb7[0]: scope 0 at $DIR/match-arm-scopes.rs:17:32: 17:33\n+        _15 = (_2.1: bool);              // bb7[1]: scope 0 at $DIR/match-arm-scopes.rs:17:32: 17:33\n+        StorageLive(_16);                // bb7[2]: scope 0 at $DIR/match-arm-scopes.rs:17:35: 17:36\n+        _16 = move (_2.2: std::string::String); // bb7[3]: scope 0 at $DIR/match-arm-scopes.rs:17:35: 17:36\n+        goto -> bb25;                    // bb7[4]: scope 0 at $DIR/match-arm-scopes.rs:15:5: 18:6\n     }\n \n     bb8: {\n-        _0 = const 1i32;                 // bb8[0]: scope 1 at $DIR/match-arm-scopes.rs:15:77: 15:78\n+        _0 = const 1i32;                 // bb8[0]: scope 1 at $DIR/match-arm-scopes.rs:16:77: 16:78\n                                          // ty::Const\n                                          // + ty: i32\n                                          // + val: Value(Scalar(0x00000001))\n                                          // mir::Constant\n-                                         // + span: $DIR/match-arm-scopes.rs:15:77: 15:78\n+                                         // + span: $DIR/match-arm-scopes.rs:16:77: 16:78\n                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000001)) }\n-        drop(_7) -> [return: bb24, unwind: bb14]; // bb8[1]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n+        drop(_7) -> [return: bb24, unwind: bb14]; // bb8[1]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n     }\n \n     bb9: {\n-        StorageLive(_6);                 // bb9[0]: scope 0 at $DIR/match-arm-scopes.rs:15:17: 15:18\n-        _6 = &(_2.1: bool);              // bb9[1]: scope 0 at $DIR/match-arm-scopes.rs:15:17: 15:18\n-        StorageLive(_8);                 // bb9[2]: scope 0 at $DIR/match-arm-scopes.rs:15:20: 15:21\n-        _8 = &(_2.2: std::string::String); // bb9[3]: scope 0 at $DIR/match-arm-scopes.rs:15:20: 15:21\n-        _3 = &shallow (_2.0: bool);      // bb9[4]: scope 0 at $DIR/match-arm-scopes.rs:14:11: 14:16\n-        _4 = &shallow (_2.1: bool);      // bb9[5]: scope 0 at $DIR/match-arm-scopes.rs:14:11: 14:16\n-        StorageLive(_9);                 // bb9[6]: scope 0 at $DIR/match-arm-scopes.rs:15:42: 15:73\n-        StorageLive(_10);                // bb9[7]: scope 0 at $DIR/match-arm-scopes.rs:15:45: 15:49\n-        _10 = _1;                        // bb9[8]: scope 0 at $DIR/match-arm-scopes.rs:15:45: 15:49\n-        FakeRead(ForMatchedPlace, _10);  // bb9[9]: scope 0 at $DIR/match-arm-scopes.rs:15:45: 15:49\n-        switchInt(_10) -> [false: bb11, otherwise: bb10]; // bb9[10]: scope 0 at $DIR/match-arm-scopes.rs:15:42: 15:73\n+        StorageLive(_6);                 // bb9[0]: scope 0 at $DIR/match-arm-scopes.rs:16:17: 16:18\n+        _6 = &(_2.1: bool);              // bb9[1]: scope 0 at $DIR/match-arm-scopes.rs:16:17: 16:18\n+        StorageLive(_8);                 // bb9[2]: scope 0 at $DIR/match-arm-scopes.rs:16:20: 16:21\n+        _8 = &(_2.2: std::string::String); // bb9[3]: scope 0 at $DIR/match-arm-scopes.rs:16:20: 16:21\n+        _3 = &shallow (_2.0: bool);      // bb9[4]: scope 0 at $DIR/match-arm-scopes.rs:15:11: 15:16\n+        _4 = &shallow (_2.1: bool);      // bb9[5]: scope 0 at $DIR/match-arm-scopes.rs:15:11: 15:16\n+        StorageLive(_9);                 // bb9[6]: scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n+        StorageLive(_10);                // bb9[7]: scope 0 at $DIR/match-arm-scopes.rs:16:45: 16:49\n+        _10 = _1;                        // bb9[8]: scope 0 at $DIR/match-arm-scopes.rs:16:45: 16:49\n+        FakeRead(ForMatchedPlace, _10);  // bb9[9]: scope 0 at $DIR/match-arm-scopes.rs:16:45: 16:49\n+        switchInt(_10) -> [false: bb11, otherwise: bb10]; // bb9[10]: scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n     }\n \n     bb10: {\n-        falseEdges -> [real: bb12, imaginary: bb11]; // bb10[0]: scope 0 at $DIR/match-arm-scopes.rs:15:42: 15:73\n+        falseEdges -> [real: bb12, imaginary: bb11]; // bb10[0]: scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n     }\n \n     bb11: {\n-        _9 = (*_6);                      // bb11[0]: scope 0 at $DIR/match-arm-scopes.rs:15:70: 15:71\n-        StorageDead(_10);                // bb11[1]: scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n-        switchInt(move _9) -> [false: bb17, otherwise: bb16]; // bb11[2]: scope 0 at $DIR/match-arm-scopes.rs:15:42: 15:73\n+        _9 = (*_6);                      // bb11[0]: scope 0 at $DIR/match-arm-scopes.rs:16:70: 16:71\n+        StorageDead(_10);                // bb11[1]: scope 0 at $DIR/match-arm-scopes.rs:16:72: 16:73\n+        switchInt(move _9) -> [false: bb17, otherwise: bb16]; // bb11[2]: scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n     }\n \n     bb12: {\n-        _0 = const 3i32;                 // bb12[0]: scope 0 at $DIR/match-arm-scopes.rs:15:59: 15:60\n+        _0 = const 3i32;                 // bb12[0]: scope 0 at $DIR/match-arm-scopes.rs:16:59: 16:60\n                                          // ty::Const\n                                          // + ty: i32\n                                          // + val: Value(Scalar(0x00000003))\n                                          // mir::Constant\n-                                         // + span: $DIR/match-arm-scopes.rs:15:59: 15:60\n+                                         // + span: $DIR/match-arm-scopes.rs:16:59: 16:60\n                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000003)) }\n-        StorageDead(_10);                // bb12[1]: scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n-        StorageDead(_9);                 // bb12[2]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        StorageDead(_8);                 // bb12[3]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        StorageDead(_6);                 // bb12[4]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        goto -> bb15;                    // bb12[5]: scope 0 at $DIR/match-arm-scopes.rs:15:52: 15:60\n+        StorageDead(_10);                // bb12[1]: scope 0 at $DIR/match-arm-scopes.rs:16:72: 16:73\n+        StorageDead(_9);                 // bb12[2]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_8);                 // bb12[3]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_6);                 // bb12[4]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        goto -> bb15;                    // bb12[5]: scope 0 at $DIR/match-arm-scopes.rs:16:52: 16:60\n     }\n \n     bb13: {\n-        return;                          // bb13[0]: scope 0 at $DIR/match-arm-scopes.rs:18:2: 18:2\n+        return;                          // bb13[0]: scope 0 at $DIR/match-arm-scopes.rs:19:2: 19:2\n     }\n \n     bb14 (cleanup): {\n-        drop(_2) -> bb1;                 // bb14[0]: scope 0 at $DIR/match-arm-scopes.rs:18:1: 18:2\n+        drop(_2) -> bb1;                 // bb14[0]: scope 0 at $DIR/match-arm-scopes.rs:19:1: 19:2\n     }\n \n     bb15: {\n-        drop(_2) -> [return: bb13, unwind: bb1]; // bb15[0]: scope 0 at $DIR/match-arm-scopes.rs:18:1: 18:2\n+        drop(_2) -> [return: bb13, unwind: bb1]; // bb15[0]: scope 0 at $DIR/match-arm-scopes.rs:19:1: 19:2\n     }\n \n     bb16: {\n-        StorageDead(_9);                 // bb16[0]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        FakeRead(ForMatchGuard, _3);     // bb16[1]: scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n-        FakeRead(ForMatchGuard, _4);     // bb16[2]: scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n-        FakeRead(ForGuardBinding, _6);   // bb16[3]: scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n-        FakeRead(ForGuardBinding, _8);   // bb16[4]: scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n-        StorageLive(_5);                 // bb16[5]: scope 0 at $DIR/match-arm-scopes.rs:15:17: 15:18\n-        _5 = (_2.1: bool);               // bb16[6]: scope 0 at $DIR/match-arm-scopes.rs:15:17: 15:18\n-        StorageLive(_7);                 // bb16[7]: scope 0 at $DIR/match-arm-scopes.rs:15:20: 15:21\n-        _7 = move (_2.2: std::string::String); // bb16[8]: scope 0 at $DIR/match-arm-scopes.rs:15:20: 15:21\n-        goto -> bb8;                     // bb16[9]: scope 0 at $DIR/match-arm-scopes.rs:14:5: 17:6\n+        StorageDead(_9);                 // bb16[0]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        FakeRead(ForMatchGuard, _3);     // bb16[1]: scope 0 at $DIR/match-arm-scopes.rs:16:72: 16:73\n+        FakeRead(ForMatchGuard, _4);     // bb16[2]: scope 0 at $DIR/match-arm-scopes.rs:16:72: 16:73\n+        FakeRead(ForGuardBinding, _6);   // bb16[3]: scope 0 at $DIR/match-arm-scopes.rs:16:72: 16:73\n+        FakeRead(ForGuardBinding, _8);   // bb16[4]: scope 0 at $DIR/match-arm-scopes.rs:16:72: 16:73\n+        StorageLive(_5);                 // bb16[5]: scope 0 at $DIR/match-arm-scopes.rs:16:17: 16:18\n+        _5 = (_2.1: bool);               // bb16[6]: scope 0 at $DIR/match-arm-scopes.rs:16:17: 16:18\n+        StorageLive(_7);                 // bb16[7]: scope 0 at $DIR/match-arm-scopes.rs:16:20: 16:21\n+        _7 = move (_2.2: std::string::String); // bb16[8]: scope 0 at $DIR/match-arm-scopes.rs:16:20: 16:21\n+        goto -> bb8;                     // bb16[9]: scope 0 at $DIR/match-arm-scopes.rs:15:5: 18:6\n     }\n \n     bb17: {\n-        StorageDead(_9);                 // bb17[0]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        StorageDead(_8);                 // bb17[1]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        StorageDead(_6);                 // bb17[2]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        falseEdges -> [real: bb3, imaginary: bb4]; // bb17[3]: scope 0 at $DIR/match-arm-scopes.rs:15:42: 15:73\n+        StorageDead(_9);                 // bb17[0]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_8);                 // bb17[1]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_6);                 // bb17[2]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        falseEdges -> [real: bb3, imaginary: bb4]; // bb17[3]: scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n     }\n \n     bb18: {\n-        StorageLive(_6);                 // bb18[0]: scope 0 at $DIR/match-arm-scopes.rs:15:26: 15:27\n-        _6 = &(_2.0: bool);              // bb18[1]: scope 0 at $DIR/match-arm-scopes.rs:15:26: 15:27\n-        StorageLive(_8);                 // bb18[2]: scope 0 at $DIR/match-arm-scopes.rs:15:36: 15:37\n-        _8 = &(_2.2: std::string::String); // bb18[3]: scope 0 at $DIR/match-arm-scopes.rs:15:36: 15:37\n-        _3 = &shallow (_2.0: bool);      // bb18[4]: scope 0 at $DIR/match-arm-scopes.rs:14:11: 14:16\n-        _4 = &shallow (_2.1: bool);      // bb18[5]: scope 0 at $DIR/match-arm-scopes.rs:14:11: 14:16\n-        StorageLive(_12);                // bb18[6]: scope 0 at $DIR/match-arm-scopes.rs:15:42: 15:73\n-        StorageLive(_13);                // bb18[7]: scope 0 at $DIR/match-arm-scopes.rs:15:45: 15:49\n-        _13 = _1;                        // bb18[8]: scope 0 at $DIR/match-arm-scopes.rs:15:45: 15:49\n-        FakeRead(ForMatchedPlace, _13);  // bb18[9]: scope 0 at $DIR/match-arm-scopes.rs:15:45: 15:49\n-        switchInt(_13) -> [false: bb20, otherwise: bb19]; // bb18[10]: scope 0 at $DIR/match-arm-scopes.rs:15:42: 15:73\n+        StorageLive(_6);                 // bb18[0]: scope 0 at $DIR/match-arm-scopes.rs:16:26: 16:27\n+        _6 = &(_2.0: bool);              // bb18[1]: scope 0 at $DIR/match-arm-scopes.rs:16:26: 16:27\n+        StorageLive(_8);                 // bb18[2]: scope 0 at $DIR/match-arm-scopes.rs:16:36: 16:37\n+        _8 = &(_2.2: std::string::String); // bb18[3]: scope 0 at $DIR/match-arm-scopes.rs:16:36: 16:37\n+        _3 = &shallow (_2.0: bool);      // bb18[4]: scope 0 at $DIR/match-arm-scopes.rs:15:11: 15:16\n+        _4 = &shallow (_2.1: bool);      // bb18[5]: scope 0 at $DIR/match-arm-scopes.rs:15:11: 15:16\n+        StorageLive(_12);                // bb18[6]: scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n+        StorageLive(_13);                // bb18[7]: scope 0 at $DIR/match-arm-scopes.rs:16:45: 16:49\n+        _13 = _1;                        // bb18[8]: scope 0 at $DIR/match-arm-scopes.rs:16:45: 16:49\n+        FakeRead(ForMatchedPlace, _13);  // bb18[9]: scope 0 at $DIR/match-arm-scopes.rs:16:45: 16:49\n+        switchInt(_13) -> [false: bb20, otherwise: bb19]; // bb18[10]: scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n     }\n \n     bb19: {\n-        falseEdges -> [real: bb21, imaginary: bb20]; // bb19[0]: scope 0 at $DIR/match-arm-scopes.rs:15:42: 15:73\n+        falseEdges -> [real: bb21, imaginary: bb20]; // bb19[0]: scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n     }\n \n     bb20: {\n-        _12 = (*_6);                     // bb20[0]: scope 0 at $DIR/match-arm-scopes.rs:15:70: 15:71\n-        StorageDead(_13);                // bb20[1]: scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n-        switchInt(move _12) -> [false: bb23, otherwise: bb22]; // bb20[2]: scope 0 at $DIR/match-arm-scopes.rs:15:42: 15:73\n+        _12 = (*_6);                     // bb20[0]: scope 0 at $DIR/match-arm-scopes.rs:16:70: 16:71\n+        StorageDead(_13);                // bb20[1]: scope 0 at $DIR/match-arm-scopes.rs:16:72: 16:73\n+        switchInt(move _12) -> [false: bb23, otherwise: bb22]; // bb20[2]: scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n     }\n \n     bb21: {\n-        _0 = const 3i32;                 // bb21[0]: scope 0 at $DIR/match-arm-scopes.rs:15:59: 15:60\n+        _0 = const 3i32;                 // bb21[0]: scope 0 at $DIR/match-arm-scopes.rs:16:59: 16:60\n                                          // ty::Const\n                                          // + ty: i32\n                                          // + val: Value(Scalar(0x00000003))\n                                          // mir::Constant\n-                                         // + span: $DIR/match-arm-scopes.rs:15:59: 15:60\n+                                         // + span: $DIR/match-arm-scopes.rs:16:59: 16:60\n                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000003)) }\n-        StorageDead(_13);                // bb21[1]: scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n-        StorageDead(_12);                // bb21[2]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        StorageDead(_8);                 // bb21[3]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        StorageDead(_6);                 // bb21[4]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        goto -> bb15;                    // bb21[5]: scope 0 at $DIR/match-arm-scopes.rs:15:52: 15:60\n+        StorageDead(_13);                // bb21[1]: scope 0 at $DIR/match-arm-scopes.rs:16:72: 16:73\n+        StorageDead(_12);                // bb21[2]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_8);                 // bb21[3]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_6);                 // bb21[4]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        goto -> bb15;                    // bb21[5]: scope 0 at $DIR/match-arm-scopes.rs:16:52: 16:60\n     }\n \n     bb22: {\n-        StorageDead(_12);                // bb22[0]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        FakeRead(ForMatchGuard, _3);     // bb22[1]: scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n-        FakeRead(ForMatchGuard, _4);     // bb22[2]: scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n-        FakeRead(ForGuardBinding, _6);   // bb22[3]: scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n-        FakeRead(ForGuardBinding, _8);   // bb22[4]: scope 0 at $DIR/match-arm-scopes.rs:15:72: 15:73\n-        StorageLive(_5);                 // bb22[5]: scope 0 at $DIR/match-arm-scopes.rs:15:26: 15:27\n-        _5 = (_2.0: bool);               // bb22[6]: scope 0 at $DIR/match-arm-scopes.rs:15:26: 15:27\n-        StorageLive(_7);                 // bb22[7]: scope 0 at $DIR/match-arm-scopes.rs:15:36: 15:37\n-        _7 = move (_2.2: std::string::String); // bb22[8]: scope 0 at $DIR/match-arm-scopes.rs:15:36: 15:37\n-        goto -> bb8;                     // bb22[9]: scope 0 at $DIR/match-arm-scopes.rs:14:5: 17:6\n+        StorageDead(_12);                // bb22[0]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        FakeRead(ForMatchGuard, _3);     // bb22[1]: scope 0 at $DIR/match-arm-scopes.rs:16:72: 16:73\n+        FakeRead(ForMatchGuard, _4);     // bb22[2]: scope 0 at $DIR/match-arm-scopes.rs:16:72: 16:73\n+        FakeRead(ForGuardBinding, _6);   // bb22[3]: scope 0 at $DIR/match-arm-scopes.rs:16:72: 16:73\n+        FakeRead(ForGuardBinding, _8);   // bb22[4]: scope 0 at $DIR/match-arm-scopes.rs:16:72: 16:73\n+        StorageLive(_5);                 // bb22[5]: scope 0 at $DIR/match-arm-scopes.rs:16:26: 16:27\n+        _5 = (_2.0: bool);               // bb22[6]: scope 0 at $DIR/match-arm-scopes.rs:16:26: 16:27\n+        StorageLive(_7);                 // bb22[7]: scope 0 at $DIR/match-arm-scopes.rs:16:36: 16:37\n+        _7 = move (_2.2: std::string::String); // bb22[8]: scope 0 at $DIR/match-arm-scopes.rs:16:36: 16:37\n+        goto -> bb8;                     // bb22[9]: scope 0 at $DIR/match-arm-scopes.rs:15:5: 18:6\n     }\n \n     bb23: {\n-        StorageDead(_12);                // bb23[0]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        StorageDead(_8);                 // bb23[1]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        StorageDead(_6);                 // bb23[2]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        falseEdges -> [real: bb5, imaginary: bb6]; // bb23[3]: scope 0 at $DIR/match-arm-scopes.rs:15:42: 15:73\n+        StorageDead(_12);                // bb23[0]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_8);                 // bb23[1]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_6);                 // bb23[2]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        falseEdges -> [real: bb5, imaginary: bb6]; // bb23[3]: scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:73\n     }\n \n     bb24: {\n-        StorageDead(_7);                 // bb24[0]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        StorageDead(_5);                 // bb24[1]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        StorageDead(_8);                 // bb24[2]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        StorageDead(_6);                 // bb24[3]: scope 0 at $DIR/match-arm-scopes.rs:15:78: 15:79\n-        goto -> bb28;                    // bb24[4]: scope 0 at $DIR/match-arm-scopes.rs:14:5: 17:6\n+        StorageDead(_7);                 // bb24[0]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_5);                 // bb24[1]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_8);                 // bb24[2]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        StorageDead(_6);                 // bb24[3]: scope 0 at $DIR/match-arm-scopes.rs:16:78: 16:79\n+        goto -> bb28;                    // bb24[4]: scope 0 at $DIR/match-arm-scopes.rs:15:5: 18:6\n     }\n \n     bb25: {\n-        _0 = const 2i32;                 // bb25[0]: scope 2 at $DIR/match-arm-scopes.rs:16:41: 16:42\n+        _0 = const 2i32;                 // bb25[0]: scope 2 at $DIR/match-arm-scopes.rs:17:41: 17:42\n                                          // ty::Const\n                                          // + ty: i32\n                                          // + val: Value(Scalar(0x00000002))\n                                          // mir::Constant\n-                                         // + span: $DIR/match-arm-scopes.rs:16:41: 16:42\n+                                         // + span: $DIR/match-arm-scopes.rs:17:41: 17:42\n                                          // + literal: Const { ty: i32, val: Value(Scalar(0x00000002)) }\n-        drop(_16) -> [return: bb27, unwind: bb14]; // bb25[1]: scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:43\n+        drop(_16) -> [return: bb27, unwind: bb14]; // bb25[1]: scope 0 at $DIR/match-arm-scopes.rs:17:42: 17:43\n     }\n \n     bb26: {\n-        StorageLive(_15);                // bb26[0]: scope 0 at $DIR/match-arm-scopes.rs:16:16: 16:17\n-        _15 = (_2.1: bool);              // bb26[1]: scope 0 at $DIR/match-arm-scopes.rs:16:16: 16:17\n-        StorageLive(_16);                // bb26[2]: scope 0 at $DIR/match-arm-scopes.rs:16:19: 16:20\n-        _16 = move (_2.2: std::string::String); // bb26[3]: scope 0 at $DIR/match-arm-scopes.rs:16:19: 16:20\n-        goto -> bb25;                    // bb26[4]: scope 0 at $DIR/match-arm-scopes.rs:14:5: 17:6\n+        StorageLive(_15);                // bb26[0]: scope 0 at $DIR/match-arm-scopes.rs:17:16: 17:17\n+        _15 = (_2.1: bool);              // bb26[1]: scope 0 at $DIR/match-arm-scopes.rs:17:16: 17:17\n+        StorageLive(_16);                // bb26[2]: scope 0 at $DIR/match-arm-scopes.rs:17:19: 17:20\n+        _16 = move (_2.2: std::string::String); // bb26[3]: scope 0 at $DIR/match-arm-scopes.rs:17:19: 17:20\n+        goto -> bb25;                    // bb26[4]: scope 0 at $DIR/match-arm-scopes.rs:15:5: 18:6\n     }\n \n     bb27: {\n-        StorageDead(_16);                // bb27[0]: scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:43\n-        StorageDead(_15);                // bb27[1]: scope 0 at $DIR/match-arm-scopes.rs:16:42: 16:43\n-        goto -> bb28;                    // bb27[2]: scope 0 at $DIR/match-arm-scopes.rs:14:5: 17:6\n+        StorageDead(_16);                // bb27[0]: scope 0 at $DIR/match-arm-scopes.rs:17:42: 17:43\n+        StorageDead(_15);                // bb27[1]: scope 0 at $DIR/match-arm-scopes.rs:17:42: 17:43\n+        goto -> bb28;                    // bb27[2]: scope 0 at $DIR/match-arm-scopes.rs:15:5: 18:6\n     }\n \n     bb28: {\n-        drop(_2) -> [return: bb13, unwind: bb1]; // bb28[0]: scope 0 at $DIR/match-arm-scopes.rs:18:1: 18:2\n+        drop(_2) -> [return: bb13, unwind: bb1]; // bb28[0]: scope 0 at $DIR/match-arm-scopes.rs:19:1: 19:2\n     }\n }"}]}