{"sha": "2fb20985a000a8f1cd891ef484f7265a55c1612f", "node_id": "C_kwDOAAsO6NoAKDJmYjIwOTg1YTAwMGE4ZjFjZDg5MWVmNDg0ZjcyNjVhNTVjMTYxMmY", "commit": {"author": {"name": "whtahy", "email": "whtahy@users.noreply.github.com", "date": "2023-04-18T23:42:48Z"}, "committer": {"name": "whtahy", "email": "whtahy@users.noreply.github.com", "date": "2023-04-22T04:47:07Z"}, "message": "add known-bug test for unsound issue 49206", "tree": {"sha": "547ba84b3dc4060bea8feeaa652e7a3e082acdbb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/547ba84b3dc4060bea8feeaa652e7a3e082acdbb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2fb20985a000a8f1cd891ef484f7265a55c1612f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2fb20985a000a8f1cd891ef484f7265a55c1612f", "html_url": "https://github.com/rust-lang/rust/commit/2fb20985a000a8f1cd891ef484f7265a55c1612f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2fb20985a000a8f1cd891ef484f7265a55c1612f/comments", "author": {"login": "whtahy", "id": 19783477, "node_id": "MDQ6VXNlcjE5NzgzNDc3", "avatar_url": "https://avatars.githubusercontent.com/u/19783477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whtahy", "html_url": "https://github.com/whtahy", "followers_url": "https://api.github.com/users/whtahy/followers", "following_url": "https://api.github.com/users/whtahy/following{/other_user}", "gists_url": "https://api.github.com/users/whtahy/gists{/gist_id}", "starred_url": "https://api.github.com/users/whtahy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whtahy/subscriptions", "organizations_url": "https://api.github.com/users/whtahy/orgs", "repos_url": "https://api.github.com/users/whtahy/repos", "events_url": "https://api.github.com/users/whtahy/events{/privacy}", "received_events_url": "https://api.github.com/users/whtahy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "whtahy", "id": 19783477, "node_id": "MDQ6VXNlcjE5NzgzNDc3", "avatar_url": "https://avatars.githubusercontent.com/u/19783477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whtahy", "html_url": "https://github.com/whtahy", "followers_url": "https://api.github.com/users/whtahy/followers", "following_url": "https://api.github.com/users/whtahy/following{/other_user}", "gists_url": "https://api.github.com/users/whtahy/gists{/gist_id}", "starred_url": "https://api.github.com/users/whtahy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whtahy/subscriptions", "organizations_url": "https://api.github.com/users/whtahy/orgs", "repos_url": "https://api.github.com/users/whtahy/repos", "events_url": "https://api.github.com/users/whtahy/events{/privacy}", "received_events_url": "https://api.github.com/users/whtahy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "adb5ded7a71911f66e20dd3a85dd39fb236c476d", "url": "https://api.github.com/repos/rust-lang/rust/commits/adb5ded7a71911f66e20dd3a85dd39fb236c476d", "html_url": "https://github.com/rust-lang/rust/commit/adb5ded7a71911f66e20dd3a85dd39fb236c476d"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "0f668b8d469032f7196687685ac05ec6043492df", "filename": "tests/ui/consts/non-sync-references-in-const.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/2fb20985a000a8f1cd891ef484f7265a55c1612f/tests%2Fui%2Fconsts%2Fnon-sync-references-in-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fb20985a000a8f1cd891ef484f7265a55c1612f/tests%2Fui%2Fconsts%2Fnon-sync-references-in-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconsts%2Fnon-sync-references-in-const.rs?ref=2fb20985a000a8f1cd891ef484f7265a55c1612f", "patch": "@@ -0,0 +1,38 @@\n+// check-pass\n+// known-bug: #49206\n+\n+// Should fail. Compiles and prints 2 identical addresses, which shows 2 threads\n+// with the same `'static` reference to non-`Sync` struct. The problem is that\n+// promotion to static does not check if the type is `Sync`.\n+\n+#[allow(dead_code)]\n+#[derive(Debug)]\n+struct Foo {\n+    value: u32,\n+}\n+\n+// stable negative impl trick from https://crates.io/crates/negative-impl\n+// see https://github.com/taiki-e/pin-project/issues/102#issuecomment-540472282\n+// for details.\n+struct Wrapper<'a, T>(::std::marker::PhantomData<&'a ()>, T);\n+unsafe impl<T> Sync for Wrapper<'_, T> where T: Sync {}\n+unsafe impl<'a> std::marker::Sync for Foo where Wrapper<'a, *const ()>: Sync {}\n+fn _assert_sync<T: Sync>() {}\n+\n+fn inspect() {\n+    let foo: &'static Foo = &Foo { value: 1 };\n+    println!(\n+        \"I am in thread {:?}, address: {:p}\",\n+        std::thread::current().id(),\n+        foo as *const Foo,\n+    );\n+}\n+\n+fn main() {\n+    // _assert_sync::<Foo>(); // uncomment this line causes compile error\n+    // \"`*const ()` cannot be shared between threads safely\"\n+\n+    let handle = std::thread::spawn(inspect);\n+    inspect();\n+    handle.join().unwrap();\n+}"}]}