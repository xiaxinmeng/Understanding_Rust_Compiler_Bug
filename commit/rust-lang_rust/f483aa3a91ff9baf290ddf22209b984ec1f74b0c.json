{"sha": "f483aa3a91ff9baf290ddf22209b984ec1f74b0c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0ODNhYTNhOTFmZjliYWYyOTBkZGYyMjIwOWI5ODRlYzFmNzRiMGM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-05-11T21:51:46Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-05-11T21:51:46Z"}, "message": "auto merge of #14102 : moonglum/rust/slice-clarification-in-readme, r=kballard\n\nThere are no arrays in Rust, they are slices. Especially in the tutorial beginners should not be confused with wrong terminology. It helps to know the right names for things when you want to find something in the documentation.\r\n\r\n@erickt explained that today to me and it helped me a lot when getting started :wink: Maybe we should also explain what a slice and what a vector is in the tutorial. If you like that, I will try to do that and attach that to the pull request :wink:", "tree": {"sha": "5fb01256f8e39c85a9871cee26fa4aa1392ba46d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5fb01256f8e39c85a9871cee26fa4aa1392ba46d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f483aa3a91ff9baf290ddf22209b984ec1f74b0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f483aa3a91ff9baf290ddf22209b984ec1f74b0c", "html_url": "https://github.com/rust-lang/rust/commit/f483aa3a91ff9baf290ddf22209b984ec1f74b0c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f483aa3a91ff9baf290ddf22209b984ec1f74b0c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20356e4cc3f73648807dc56827102fbaff9061c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/20356e4cc3f73648807dc56827102fbaff9061c6", "html_url": "https://github.com/rust-lang/rust/commit/20356e4cc3f73648807dc56827102fbaff9061c6"}, {"sha": "1895ad269ca7d4c8a258fb6188fac5f1d97c55ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/1895ad269ca7d4c8a258fb6188fac5f1d97c55ff", "html_url": "https://github.com/rust-lang/rust/commit/1895ad269ca7d4c8a258fb6188fac5f1d97c55ff"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "b7122944ced6681bf792ff1f065b33b6fd5e8dba", "filename": "src/doc/tutorial.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f483aa3a91ff9baf290ddf22209b984ec1f74b0c/src%2Fdoc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/f483aa3a91ff9baf290ddf22209b984ec1f74b0c/src%2Fdoc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftutorial.md?ref=f483aa3a91ff9baf290ddf22209b984ec1f74b0c", "patch": "@@ -2385,7 +2385,7 @@ fn print_all<T: Printable>(printable_things: ~[T]) {\n Declaring `T` as conforming to the `Printable` trait (as we earlier\n did with `Clone`) makes it possible to call methods from that trait\n on values of type `T` inside the function. It will also cause a\n-compile-time error when anyone tries to call `print_all` on an array\n+compile-time error when anyone tries to call `print_all` on a vector\n whose element type does not have a `Printable` implementation.\n \n Type parameters can have multiple bounds by separating them with `+`,\n@@ -2428,9 +2428,9 @@ fn draw_all<T: Drawable>(shapes: ~[T]) {\n # draw_all(~[c]);\n ~~~~\n \n-You can call that on an array of circles, or an array of rectangles\n+You can call that on a vector of circles, or a vector of rectangles\n (assuming those have suitable `Drawable` traits defined), but not on\n-an array containing both circles and rectangles. When such behavior is\n+a vector containing both circles and rectangles. When such behavior is\n needed, a trait name can alternately be used as a type, called\n an _object_.\n "}]}