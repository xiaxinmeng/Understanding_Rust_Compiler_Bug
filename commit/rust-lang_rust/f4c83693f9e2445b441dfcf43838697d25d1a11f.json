{"sha": "f4c83693f9e2445b441dfcf43838697d25d1a11f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0YzgzNjkzZjllMjQ0NWI0NDFkZmNmNDM4Mzg2OTdkMjVkMWExMWY=", "commit": {"author": {"name": "Peter Atashian", "email": "retep998@gmail.com", "date": "2018-02-03T06:45:58Z"}, "committer": {"name": "Peter Atashian", "email": "retep998@gmail.com", "date": "2018-02-03T06:45:58Z"}, "message": "Go back to files directories and symlinks being mutually exclusive\nBe smarter about what a symlink is however", "tree": {"sha": "847cb7696a10863253a5a1df27892c7861457443", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/847cb7696a10863253a5a1df27892c7861457443"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4c83693f9e2445b441dfcf43838697d25d1a11f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQEcBAABCAAGBQJadVqqAAoJEN4E2eJ1WbyKt5EH/3g2FkMEcDGvW43fdZ9ToyLv\n1CYxMwEe3zJDG+e3cDfsy3D8Ghkr6iCuqWFKn9k1jVjkj4AyoCg1CEgTaJfQAZYQ\nLzcJ7vb5uVssRX1P6k956SzyLkFISPQ8tR7CNqbN7GCRh+wSCglZ4t+gAIfNMlhW\n27Nox68KX6Y1JqMnyNMVqNuAJheY1SnSJ0bJRpYD7n6oD47nz6EGueK0VA0NjczA\n3kD/mfOBhw3ISJZWjE8Mqm6fnS2QZ2CXcKIeXerWff3JGL8JbLcyE1Ftl37zegZ0\naursclJ5N1Rco6oX6m8Yr6VHxcrgfaHupoX6rSOWRx0JGHLFH3x8xabnkEAn5Os=\n=GdEv\n-----END PGP SIGNATURE-----", "payload": "tree 847cb7696a10863253a5a1df27892c7861457443\nparent 259b0329d42ea9ce971c0c8c9ff72f8496a73b9e\nauthor Peter Atashian <retep998@gmail.com> 1517640358 -0500\ncommitter Peter Atashian <retep998@gmail.com> 1517640358 -0500\n\nGo back to files directories and symlinks being mutually exclusive\nBe smarter about what a symlink is however\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4c83693f9e2445b441dfcf43838697d25d1a11f", "html_url": "https://github.com/rust-lang/rust/commit/f4c83693f9e2445b441dfcf43838697d25d1a11f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4c83693f9e2445b441dfcf43838697d25d1a11f/comments", "author": {"login": "retep998", "id": 666308, "node_id": "MDQ6VXNlcjY2NjMwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/666308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retep998", "html_url": "https://github.com/retep998", "followers_url": "https://api.github.com/users/retep998/followers", "following_url": "https://api.github.com/users/retep998/following{/other_user}", "gists_url": "https://api.github.com/users/retep998/gists{/gist_id}", "starred_url": "https://api.github.com/users/retep998/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retep998/subscriptions", "organizations_url": "https://api.github.com/users/retep998/orgs", "repos_url": "https://api.github.com/users/retep998/repos", "events_url": "https://api.github.com/users/retep998/events{/privacy}", "received_events_url": "https://api.github.com/users/retep998/received_events", "type": "User", "site_admin": false}, "committer": {"login": "retep998", "id": 666308, "node_id": "MDQ6VXNlcjY2NjMwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/666308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retep998", "html_url": "https://github.com/retep998", "followers_url": "https://api.github.com/users/retep998/followers", "following_url": "https://api.github.com/users/retep998/following{/other_user}", "gists_url": "https://api.github.com/users/retep998/gists{/gist_id}", "starred_url": "https://api.github.com/users/retep998/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retep998/subscriptions", "organizations_url": "https://api.github.com/users/retep998/orgs", "repos_url": "https://api.github.com/users/retep998/repos", "events_url": "https://api.github.com/users/retep998/events{/privacy}", "received_events_url": "https://api.github.com/users/retep998/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "259b0329d42ea9ce971c0c8c9ff72f8496a73b9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/259b0329d42ea9ce971c0c8c9ff72f8496a73b9e", "html_url": "https://github.com/rust-lang/rust/commit/259b0329d42ea9ce971c0c8c9ff72f8496a73b9e"}], "stats": {"total": 30, "additions": 17, "deletions": 13}, "files": [{"sha": "512c9cb838c0b842cc96fb2636297f1a7b01fb57", "filename": "src/libstd/sys/windows/fs.rs", "status": "modified", "additions": 17, "deletions": 13, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/f4c83693f9e2445b441dfcf43838697d25d1a11f/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4c83693f9e2445b441dfcf43838697d25d1a11f/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs?ref=f4c83693f9e2445b441dfcf43838697d25d1a11f", "patch": "@@ -522,21 +522,27 @@ impl FileType {\n             reparse_tag: reparse_tag,\n         }\n     }\n-\n     pub fn is_dir(&self) -> bool {\n-        self.attributes & c::FILE_ATTRIBUTE_DIRECTORY != 0\n+        !self.is_symlink() && self.is_directory()\n     }\n     pub fn is_file(&self) -> bool {\n-        self.attributes & c::FILE_ATTRIBUTE_DIRECTORY == 0\n+        !self.is_symlink() && !self.is_directory()\n     }\n     pub fn is_symlink(&self) -> bool {\n-        self.is_reparse_point() && (\n-            self.reparse_tag == c::IO_REPARSE_TAG_SYMLINK ||\n-            self.reparse_tag == c::IO_REPARSE_TAG_MOUNT_POINT)\n+        self.is_reparse_point() && self.is_reparse_tag_name_surrogate()\n+    }\n+    pub fn is_symlink_dir(&self) -> bool {\n+        self.is_symlink() && self.is_directory()\n+    }\n+    fn is_directory(&self) -> bool {\n+        self.attributes & c::FILE_ATTRIBUTE_DIRECTORY != 0\n     }\n-    pub fn is_reparse_point(&self) -> bool {\n+    fn is_reparse_point(&self) -> bool {\n         self.attributes & c::FILE_ATTRIBUTE_REPARSE_POINT != 0\n     }\n+    fn is_reparse_tag_name_surrogate(&self) -> bool {\n+        self.reparse_tag & 0x20000000 != 0\n+    }\n }\n \n impl DirBuilder {\n@@ -607,12 +613,10 @@ fn remove_dir_all_recursive(path: &Path) -> io::Result<()> {\n     for child in readdir(path)? {\n         let child = child?;\n         let child_type = child.file_type()?;\n-        if child_type.is_dir() {\n-            if child_type.is_reparse_point() {\n-                rmdir(&child.path())?;\n-            } else {\n-                remove_dir_all_recursive(&child.path())?;\n-            }\n+        if child_type.is_symlink_dir() {\n+            rmdir(&child.path())?;\n+        } else if child_type.is_dir() {\n+            remove_dir_all_recursive(&child.path())?;\n         } else {\n             unlink(&child.path())?;\n         }"}]}