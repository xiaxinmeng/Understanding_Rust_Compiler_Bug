{"sha": "83cece468e8e5b785fce0dad25807841b91f3321", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzY2VjZTQ2OGU4ZTViNzg1ZmNlMGRhZDI1ODA3ODQxYjkxZjMzMjE=", "commit": {"author": {"name": "Rune Tynan", "email": "runetynan@gmail.com", "date": "2021-03-05T00:08:06Z"}, "committer": {"name": "Rune Tynan", "email": "runetynan@gmail.com", "date": "2021-03-06T20:50:29Z"}, "message": "Move tests to own file", "tree": {"sha": "a6ab0128d5dadfeeabdb2dc5a9dce9459dae2bb9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6ab0128d5dadfeeabdb2dc5a9dce9459dae2bb9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83cece468e8e5b785fce0dad25807841b91f3321", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEETdpCnQmiF6hBYUqdfsyTL4sscx4FAmBD6xUACgkQfsyTL4ss\ncx4Dbw//dFEiHkja42pydLc58is4S5i6DgnD6ODB+B53uG79tDuimHMqIRw3VU15\n7CsHyryFX2xFfNMafU2ROppeSQfrCSjDOp5owGu1RIT/9uhKmwA8wpbF8udC+kTh\nKebl+yLIupLPRA7YTSQ8tITlaZH2IeYDMk8xqhvIi37UoByav2Kpq4mFFi4uw670\nC4gazkx0vbznb26YVm1mG/Sm5b6Bm/28SzAddEp6kvd46Tr8180uz7SWc0yNh0qM\n1Iphq5mddaQq2Tetq9m0bJ4qaT+x+KdYvGdqNNlL4wSHYDCwVtK0+ClmISqYQPax\n1yLtWMoeEHZMwUxR7kxsKe9wjUxBGvni3T+e2kfuhJU9YUsO+9q85gLPTKFzu52V\nPes/g/fshZGqL1yItcLVSWfmJcepBNeVg3j50ygaWHto0wGBzzmd/CKalv8R7KzW\njFW0RG84N3LgcFSyGcKa+BtEe/Lz0ZAW4vvX0C5a1xqmkbV3Wb2GRZnquwcwbvoK\nG945YC81G1j2KEexeQlxigiHeNdqhZl+y2Jwrb+g8BBc5B9kIpocGdghohyCeh+r\nSTbE9yz4Xa8+rjr4Tta32nzzjLOVvI1THIu4mxGsgEkTjZUlZlcD6DXUMygwbhNh\nRWDVKvJ7kX3uGIqCxe0GciaMAkXj8KUn6haezgp7ZqqsLAUJOgI=\n=cmNN\n-----END PGP SIGNATURE-----", "payload": "tree a6ab0128d5dadfeeabdb2dc5a9dce9459dae2bb9\nparent ca48d1566ed54b7dd1718dfe877ef24711078538\nauthor Rune Tynan <runetynan@gmail.com> 1614902886 -0500\ncommitter Rune Tynan <runetynan@gmail.com> 1615063829 -0500\n\nMove tests to own file\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83cece468e8e5b785fce0dad25807841b91f3321", "html_url": "https://github.com/rust-lang/rust/commit/83cece468e8e5b785fce0dad25807841b91f3321", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83cece468e8e5b785fce0dad25807841b91f3321/comments", "author": {"login": "CraftSpider", "id": 13342132, "node_id": "MDQ6VXNlcjEzMzQyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/13342132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraftSpider", "html_url": "https://github.com/CraftSpider", "followers_url": "https://api.github.com/users/CraftSpider/followers", "following_url": "https://api.github.com/users/CraftSpider/following{/other_user}", "gists_url": "https://api.github.com/users/CraftSpider/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraftSpider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraftSpider/subscriptions", "organizations_url": "https://api.github.com/users/CraftSpider/orgs", "repos_url": "https://api.github.com/users/CraftSpider/repos", "events_url": "https://api.github.com/users/CraftSpider/events{/privacy}", "received_events_url": "https://api.github.com/users/CraftSpider/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CraftSpider", "id": 13342132, "node_id": "MDQ6VXNlcjEzMzQyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/13342132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraftSpider", "html_url": "https://github.com/CraftSpider", "followers_url": "https://api.github.com/users/CraftSpider/followers", "following_url": "https://api.github.com/users/CraftSpider/following{/other_user}", "gists_url": "https://api.github.com/users/CraftSpider/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraftSpider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraftSpider/subscriptions", "organizations_url": "https://api.github.com/users/CraftSpider/orgs", "repos_url": "https://api.github.com/users/CraftSpider/repos", "events_url": "https://api.github.com/users/CraftSpider/events{/privacy}", "received_events_url": "https://api.github.com/users/CraftSpider/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca48d1566ed54b7dd1718dfe877ef24711078538", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca48d1566ed54b7dd1718dfe877ef24711078538", "html_url": "https://github.com/rust-lang/rust/commit/ca48d1566ed54b7dd1718dfe877ef24711078538"}], "stats": {"total": 83, "additions": 41, "deletions": 42}, "files": [{"sha": "4e7794fe610646e43e577aa42a044fa9624a4456", "filename": "src/rustdoc-json-types/lib.rs", "status": "modified", "additions": 1, "deletions": 42, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/83cece468e8e5b785fce0dad25807841b91f3321/src%2Frustdoc-json-types%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83cece468e8e5b785fce0dad25807841b91f3321/src%2Frustdoc-json-types%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc-json-types%2Flib.rs?ref=83cece468e8e5b785fce0dad25807841b91f3321", "patch": "@@ -510,45 +510,4 @@ pub struct Static {\n }\n \n #[cfg(test)]\n-mod tests {\n-    use super::*;\n-\n-    #[test]\n-    fn test_struct_info_roundtrip() {\n-        let s = ItemEnum::Struct(Struct {\n-            struct_type: StructType::Plain,\n-            generics: Generics {\n-                params: vec![],\n-                where_predicates: vec![]\n-            },\n-            fields_stripped: false,\n-            fields: vec![],\n-            impls: vec![],\n-        });\n-\n-        let struct_json = serde_json::to_string(&s).unwrap();\n-\n-        let de_s = serde_json::from_str(&struct_json).unwrap();\n-\n-        assert_eq!(s, de_s);\n-    }\n-\n-    #[test]\n-    fn test_union_info_roundtrip() {\n-        let u = ItemEnum::Union(Union {\n-            generics: Generics {\n-                params: vec![],\n-                where_predicates: vec![]\n-            },\n-            fields_stripped: false,\n-            fields: vec![],\n-            impls: vec![],\n-        });\n-\n-        let union_json = serde_json::to_string(&u).unwrap();\n-\n-        let de_u = serde_json::from_str(&union_json).unwrap();\n-\n-        assert_eq!(u, de_u);\n-    }\n-}\n+mod tests;"}, {"sha": "4a5994f4c087c578ffde6c4dad6ec84bd33cafdf", "filename": "src/rustdoc-json-types/tests.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/83cece468e8e5b785fce0dad25807841b91f3321/src%2Frustdoc-json-types%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83cece468e8e5b785fce0dad25807841b91f3321/src%2Frustdoc-json-types%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc-json-types%2Ftests.rs?ref=83cece468e8e5b785fce0dad25807841b91f3321", "patch": "@@ -0,0 +1,40 @@\n+use super::*;\n+\n+#[test]\n+fn test_struct_info_roundtrip() {\n+    let s = ItemEnum::Struct(Struct {\n+        struct_type: StructType::Plain,\n+        generics: Generics {\n+            params: vec![],\n+            where_predicates: vec![]\n+        },\n+        fields_stripped: false,\n+        fields: vec![],\n+        impls: vec![],\n+    });\n+\n+    let struct_json = serde_json::to_string(&s).unwrap();\n+\n+    let de_s = serde_json::from_str(&struct_json).unwrap();\n+\n+    assert_eq!(s, de_s);\n+}\n+\n+#[test]\n+fn test_union_info_roundtrip() {\n+    let u = ItemEnum::Union(Union {\n+        generics: Generics {\n+            params: vec![],\n+            where_predicates: vec![]\n+        },\n+        fields_stripped: false,\n+        fields: vec![],\n+        impls: vec![],\n+    });\n+\n+    let union_json = serde_json::to_string(&u).unwrap();\n+\n+    let de_u = serde_json::from_str(&union_json).unwrap();\n+\n+    assert_eq!(u, de_u);\n+}\n\\ No newline at end of file"}]}