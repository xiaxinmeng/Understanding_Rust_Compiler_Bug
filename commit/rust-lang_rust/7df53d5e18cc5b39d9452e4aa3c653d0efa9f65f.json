{"sha": "7df53d5e18cc5b39d9452e4aa3c653d0efa9f65f", "node_id": "C_kwDOAAsO6NoAKDdkZjUzZDVlMThjYzViMzlkOTQ1MmU0YWEzYzY1M2QwZWZhOWY2NWY", "commit": {"author": {"name": "Rune Tynan", "email": "runetynan@gmail.com", "date": "2023-02-13T18:39:28Z"}, "committer": {"name": "Rune Tynan", "email": "runetynan@gmail.com", "date": "2023-02-20T18:38:27Z"}, "message": "Fix metadata encoding and decoding to use the right length", "tree": {"sha": "923060a4663cf44d3ca381ba9d727ef145739fdf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/923060a4663cf44d3ca381ba9d727ef145739fdf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7df53d5e18cc5b39d9452e4aa3c653d0efa9f65f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEETdpCnQmiF6hBYUqdfsyTL4sscx4FAmPzviMACgkQfsyTL4ss\ncx4vQg//QDXQRT6Z5OWs8+pSlccNfEoWxhzYf1C4X82Z4P7f52frLSoNYZI3m7s3\ngXRz6ukAvNIZqyj9CHnjBcZIfHTyYrLX8V2PrzK7rMI9WrEptd5kmtOqYm58N0K1\nYdKzvVyA9cDzPD1laIqNPnRrdxGav8jU1cfZ4+Mql8EF3QytK76WSjFXVwnHPZ46\nEya1q2bSDcjFtMZ/sbWyOIA8DyiCuEHdV4JLYgSklDYppoMz3vFF16baN4Aol00d\nUTweYY4LqZYpmGVHdSE2eDFhHAkfTfKVf3XOoAAceun36H61knCgJsrharJQ9xZB\nG87uZrpg9QK6Drx6CNJc53iILJVEsI/Mo0J/Vq1Q9heqiGGr3hG8rEgekAjlqD/9\n9Lq/ukuC4JUWgY0YiJsG1cqrSnZ2yJrk67crM0rSKUEhE2Gk1FmcqSyqz2M6ijuw\nlC0wGX4zDMw7Y3sjfeNPH6bP/ONuwG8tj0BYplS3jCoqbcsuX/g1YJOTf/x/DFXU\n4Odbl/iNhm6EnMW/iNHoG5ciiL/7JOJqyB9xCzAynG4dPX50G3oN9EdDfUpxmCAD\nsi5XYiSSGlWbzgmuIrQjtF4ORBzh4X7tD5kkiuQ3o9/zaw44LoGH0mYqvHz3Goj0\nFN0/XO/3DC38Yd67c+lWYT8ASR9QmET6oIxQm6EzxqnAjxVe2J4=\n=ekMw\n-----END PGP SIGNATURE-----", "payload": "tree 923060a4663cf44d3ca381ba9d727ef145739fdf\nparent dce3947110a73efebb756242d5c775a3ddad32a9\nauthor Rune Tynan <runetynan@gmail.com> 1676313568 -0500\ncommitter Rune Tynan <runetynan@gmail.com> 1676918307 -0500\n\nFix metadata encoding and decoding to use the right length\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7df53d5e18cc5b39d9452e4aa3c653d0efa9f65f", "html_url": "https://github.com/rust-lang/rust/commit/7df53d5e18cc5b39d9452e4aa3c653d0efa9f65f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7df53d5e18cc5b39d9452e4aa3c653d0efa9f65f/comments", "author": {"login": "CraftSpider", "id": 13342132, "node_id": "MDQ6VXNlcjEzMzQyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/13342132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraftSpider", "html_url": "https://github.com/CraftSpider", "followers_url": "https://api.github.com/users/CraftSpider/followers", "following_url": "https://api.github.com/users/CraftSpider/following{/other_user}", "gists_url": "https://api.github.com/users/CraftSpider/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraftSpider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraftSpider/subscriptions", "organizations_url": "https://api.github.com/users/CraftSpider/orgs", "repos_url": "https://api.github.com/users/CraftSpider/repos", "events_url": "https://api.github.com/users/CraftSpider/events{/privacy}", "received_events_url": "https://api.github.com/users/CraftSpider/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CraftSpider", "id": 13342132, "node_id": "MDQ6VXNlcjEzMzQyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/13342132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraftSpider", "html_url": "https://github.com/CraftSpider", "followers_url": "https://api.github.com/users/CraftSpider/followers", "following_url": "https://api.github.com/users/CraftSpider/following{/other_user}", "gists_url": "https://api.github.com/users/CraftSpider/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraftSpider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraftSpider/subscriptions", "organizations_url": "https://api.github.com/users/CraftSpider/orgs", "repos_url": "https://api.github.com/users/CraftSpider/repos", "events_url": "https://api.github.com/users/CraftSpider/events{/privacy}", "received_events_url": "https://api.github.com/users/CraftSpider/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dce3947110a73efebb756242d5c775a3ddad32a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/dce3947110a73efebb756242d5c775a3ddad32a9", "html_url": "https://github.com/rust-lang/rust/commit/dce3947110a73efebb756242d5c775a3ddad32a9"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "75daf33db3047ded4cc261f22d5765ffefbf6e04", "filename": "compiler/rustc_codegen_ssa/src/back/metadata.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7df53d5e18cc5b39d9452e4aa3c653d0efa9f65f/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7df53d5e18cc5b39d9452e4aa3c653d0efa9f65f/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fmetadata.rs?ref=7df53d5e18cc5b39d9452e4aa3c653d0efa9f65f", "patch": "@@ -305,8 +305,13 @@ pub fn create_compressed_metadata_file(\n     symbol_name: &str,\n ) -> Vec<u8> {\n     let mut compressed = rustc_metadata::METADATA_HEADER.to_vec();\n-    compressed.write_all(&(metadata.raw_data().len() as u32).to_be_bytes()).unwrap();\n+    // Our length will be backfilled once we're done writing\n+    compressed.write_all(&[0; 4]).unwrap();\n     FrameEncoder::new(&mut compressed).write_all(metadata.raw_data()).unwrap();\n+    let meta_len = rustc_metadata::METADATA_HEADER.len();\n+    let data_len = (compressed.len() - meta_len - 4) as u32;\n+    compressed[meta_len..meta_len + 4].copy_from_slice(&data_len.to_be_bytes());\n+\n     let Some(mut file) = create_object_file(sess) else {\n         return compressed.to_vec();\n     };"}, {"sha": "ea1ba8a9eda943c95b844c813af18c3af6512b3d", "filename": "compiler/rustc_metadata/src/locator.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7df53d5e18cc5b39d9452e4aa3c653d0efa9f65f/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7df53d5e18cc5b39d9452e4aa3c653d0efa9f65f/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs?ref=7df53d5e18cc5b39d9452e4aa3c653d0efa9f65f", "patch": "@@ -799,14 +799,14 @@ fn get_metadata_section<'p>(\n             }\n \n             // Length of the compressed stream - this allows linkers to pad the section if they want\n-            let usize_len = core::mem::size_of::<u32>();\n-            let Ok(len_bytes) = <[u8; 4]>::try_from(&buf[header_len..cmp::min(header_len + usize_len, buf.len())]) else {\n+            let u32_len = core::mem::size_of::<u32>();\n+            let Ok(len_bytes) = <[u8; 4]>::try_from(&buf[header_len..cmp::min(header_len + u32_len, buf.len())]) else {\n                 return Err(MetadataError::LoadFailure(\"invalid metadata length found\".to_string()));\n             };\n             let compressed_len = u32::from_be_bytes(len_bytes) as usize;\n \n             // Header is okay -> inflate the actual metadata\n-            let compressed_bytes = &buf[header_len..compressed_len + header_len];\n+            let compressed_bytes = &buf[(header_len + u32_len)..(compressed_len + header_len + u32_len)];\n             debug!(\"inflating {} bytes of compressed metadata\", compressed_bytes.len());\n             // Assume the decompressed data will be at least the size of the compressed data, so we\n             // don't have to grow the buffer as much."}]}