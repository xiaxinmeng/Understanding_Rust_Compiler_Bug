{"sha": "bd2f72f398fa6b609a005cea8ebe16e093937936", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkMmY3MmYzOThmYTZiNjA5YTAwNWNlYThlYmUxNmUwOTM5Mzc5MzY=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-07-17T15:55:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-17T15:55:57Z"}, "message": "Merge pull request #1187 from bjorn3/feature_gating\n\nPreparations for building as part of rustc", "tree": {"sha": "c57b02417e5dba7b425bdaefc41a96c135ccef0d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c57b02417e5dba7b425bdaefc41a96c135ccef0d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd2f72f398fa6b609a005cea8ebe16e093937936", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg8v2NCRBK7hj4Ov3rIwAAGyYIAGtSctiMPgioPBj5/aj1mLDk\ncpmS3UReryKrWbHahvOUQMKXgXwKJtiGtnU5tvYGGFazYdSXATQ5bwPHfDaw9NX9\nRb3VdeHXvpT2wLWG4g7+Wgc8YhLn0S8SSv2RQ8HW1kda2BO3yVk74vJiL487SxAo\n6gpu/FxW3KGvpC0xRDQLitu1+LQMjI0xUinTcFf4pKaElf0YEpf1QdkHgMoVMxGO\nfnbZw9fE8Crd9SGShB2Luk0cCT3kC2dhtxOHxF5cbZcNFThxxbg71JQlllTfZHlY\nvfeuhA3zRltDlyvXd/MKCNqG9v4oLbhqAPKGGwyvkrSwpPG40HVyuwFCcjFXhQE=\n=NFCU\n-----END PGP SIGNATURE-----\n", "payload": "tree c57b02417e5dba7b425bdaefc41a96c135ccef0d\nparent 60340d44d84dedd7112d2773bf949b606b40cb4a\nparent c2a9839686c538eb3cf850bb8947ebfe6f28141d\nauthor bjorn3 <bjorn3@users.noreply.github.com> 1626537357 +0200\ncommitter GitHub <noreply@github.com> 1626537357 +0200\n\nMerge pull request #1187 from bjorn3/feature_gating\n\nPreparations for building as part of rustc"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd2f72f398fa6b609a005cea8ebe16e093937936", "html_url": "https://github.com/rust-lang/rust/commit/bd2f72f398fa6b609a005cea8ebe16e093937936", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd2f72f398fa6b609a005cea8ebe16e093937936/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60340d44d84dedd7112d2773bf949b606b40cb4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/60340d44d84dedd7112d2773bf949b606b40cb4a", "html_url": "https://github.com/rust-lang/rust/commit/60340d44d84dedd7112d2773bf949b606b40cb4a"}, {"sha": "c2a9839686c538eb3cf850bb8947ebfe6f28141d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2a9839686c538eb3cf850bb8947ebfe6f28141d", "html_url": "https://github.com/rust-lang/rust/commit/c2a9839686c538eb3cf850bb8947ebfe6f28141d"}], "stats": {"total": 34, "additions": 23, "deletions": 11}, "files": [{"sha": "02098b135f75bdca671c9fcadea9378a4160129c", "filename": "Cargo.toml", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bd2f72f398fa6b609a005cea8ebe16e093937936/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/bd2f72f398fa6b609a005cea8ebe16e093937936/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=bd2f72f398fa6b609a005cea8ebe16e093937936", "patch": "@@ -37,7 +37,8 @@ smallvec = \"1.6.1\"\n #gimli = { path = \"../\" }\n \n [features]\n-default = [\"jit\", \"inline_asm\"]\n+# Enable features not ready to be enabled when compiling as part of rustc\n+unstable-features = [\"jit\", \"inline_asm\"]\n jit = [\"cranelift-jit\", \"libloading\"]\n inline_asm = []\n "}, {"sha": "150b6d01a6b30858091fec5b0f6cdd1b07a20ad9", "filename": "build_system/build_backend.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bd2f72f398fa6b609a005cea8ebe16e093937936/build_system%2Fbuild_backend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd2f72f398fa6b609a005cea8ebe16e093937936/build_system%2Fbuild_backend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fbuild_backend.rs?ref=bd2f72f398fa6b609a005cea8ebe16e093937936", "patch": "@@ -4,7 +4,7 @@ use std::process::Command;\n \n pub(crate) fn build_backend(channel: &str, host_triple: &str) -> PathBuf {\n     let mut cmd = Command::new(\"cargo\");\n-    cmd.arg(\"build\").arg(\"--target\").arg(host_triple);\n+    cmd.arg(\"build\").arg(\"--target\").arg(host_triple).arg(\"--features\").arg(\"unstable-features\");\n \n     match channel {\n         \"debug\" => {}"}, {"sha": "87eec0e818bb2407695c4fa6b82ff49eada037a1", "filename": "docs/usage.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bd2f72f398fa6b609a005cea8ebe16e093937936/docs%2Fusage.md", "raw_url": "https://github.com/rust-lang/rust/raw/bd2f72f398fa6b609a005cea8ebe16e093937936/docs%2Fusage.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fusage.md?ref=bd2f72f398fa6b609a005cea8ebe16e093937936", "patch": "@@ -36,7 +36,7 @@ $ $cg_clif_dir/build/cargo jit\n or\n \n ```bash\n-$ $cg_clif_dir/build/bin/cg_clif -Cllvm-args=mode=jit -Cprefer-dynamic my_crate.rs\n+$ $cg_clif_dir/build/bin/cg_clif -Zunstable-features -Cllvm-args=mode=jit -Cprefer-dynamic my_crate.rs\n ```\n \n There is also an experimental lazy jit mode. In this mode functions are only compiled once they are\n@@ -52,7 +52,7 @@ These are a few functions that allow you to easily run rust code from the shell\n \n ```bash\n function jit_naked() {\n-    echo \"$@\" | $cg_clif_dir/build/bin/cg_clif - -Cllvm-args=mode=jit -Cprefer-dynamic\n+    echo \"$@\" | $cg_clif_dir/build/bin/cg_clif - -Zunstable-features -Cllvm-args=mode=jit -Cprefer-dynamic\n }\n \n function jit() {"}, {"sha": "89ec8da77d3ec5f6a1ade1ba67fe7aeb7500bac6", "filename": "scripts/cargo.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bd2f72f398fa6b609a005cea8ebe16e093937936/scripts%2Fcargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd2f72f398fa6b609a005cea8ebe16e093937936/scripts%2Fcargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/scripts%2Fcargo.rs?ref=bd2f72f398fa6b609a005cea8ebe16e093937936", "patch": "@@ -44,7 +44,11 @@ fn main() {\n             );\n             std::array::IntoIter::new([\"rustc\".to_string()])\n                 .chain(env::args().skip(2))\n-                .chain([\"--\".to_string(), \"-Cllvm-args=mode=jit\".to_string()])\n+                .chain([\n+                    \"--\".to_string(),\n+                    \"-Zunstable-features\".to_string(),\n+                    \"-Cllvm-args=mode=jit\".to_string(),\n+                ])\n                 .collect()\n         }\n         Some(\"lazy-jit\") => {\n@@ -54,7 +58,11 @@ fn main() {\n             );\n             std::array::IntoIter::new([\"rustc\".to_string()])\n                 .chain(env::args().skip(2))\n-                .chain([\"--\".to_string(), \"-Cllvm-args=mode=jit-lazy\".to_string()])\n+                .chain([\n+                    \"--\".to_string(),\n+                    \"-Zunstable-features\".to_string(),\n+                    \"-Cllvm-args=mode=jit-lazy\".to_string(),\n+                ])\n                 .collect()\n         }\n         _ => env::args().skip(1).collect(),"}, {"sha": "c4801a0a87b886feef8df77275caf0113f7c8f72", "filename": "scripts/filter_profile.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bd2f72f398fa6b609a005cea8ebe16e093937936/scripts%2Ffilter_profile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd2f72f398fa6b609a005cea8ebe16e093937936/scripts%2Ffilter_profile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/scripts%2Ffilter_profile.rs?ref=bd2f72f398fa6b609a005cea8ebe16e093937936", "patch": "@@ -5,7 +5,7 @@ pushd $(dirname \"$0\")/../\n source scripts/config.sh\n RUSTC=\"$(pwd)/build/bin/cg_clif\"\n popd\n-PROFILE=$1 OUTPUT=$2 exec $RUSTC -Cllvm-args=mode=jit -Cprefer-dynamic $0\n+PROFILE=$1 OUTPUT=$2 exec $RUSTC -Zunstable-options -Cllvm-args=mode=jit -Cprefer-dynamic $0\n #*/\n \n //! This program filters away uninteresting samples and trims uninteresting frames for stackcollapse"}, {"sha": "08c07dfad428e34d032ca8510f13753c6d839df5", "filename": "scripts/tests.sh", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bd2f72f398fa6b609a005cea8ebe16e093937936/scripts%2Ftests.sh", "raw_url": "https://github.com/rust-lang/rust/raw/bd2f72f398fa6b609a005cea8ebe16e093937936/scripts%2Ftests.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/scripts%2Ftests.sh?ref=bd2f72f398fa6b609a005cea8ebe16e093937936", "patch": "@@ -16,10 +16,10 @@ function no_sysroot_tests() {\n \n     if [[ \"$JIT_SUPPORTED\" = \"1\" ]]; then\n         echo \"[JIT] mini_core_hello_world\"\n-        CG_CLIF_JIT_ARGS=\"abc bcd\" $MY_RUSTC -Cllvm-args=mode=jit -Cprefer-dynamic example/mini_core_hello_world.rs --cfg jit --target \"$HOST_TRIPLE\"\n+        CG_CLIF_JIT_ARGS=\"abc bcd\" $MY_RUSTC -Zunstable-options -Cllvm-args=mode=jit -Cprefer-dynamic example/mini_core_hello_world.rs --cfg jit --target \"$HOST_TRIPLE\"\n \n         echo \"[JIT-lazy] mini_core_hello_world\"\n-        CG_CLIF_JIT_ARGS=\"abc bcd\" $MY_RUSTC -Cllvm-args=mode=jit-lazy -Cprefer-dynamic example/mini_core_hello_world.rs --cfg jit --target \"$HOST_TRIPLE\"\n+        CG_CLIF_JIT_ARGS=\"abc bcd\" $MY_RUSTC -Zunstable-options -Cllvm-args=mode=jit-lazy -Cprefer-dynamic example/mini_core_hello_world.rs --cfg jit --target \"$HOST_TRIPLE\"\n     else\n         echo \"[JIT] mini_core_hello_world (skipped)\"\n     fi\n@@ -44,10 +44,10 @@ function base_sysroot_tests() {\n \n     if [[ \"$JIT_SUPPORTED\" = \"1\" ]]; then\n         echo \"[JIT] std_example\"\n-        $MY_RUSTC -Cllvm-args=mode=jit -Cprefer-dynamic example/std_example.rs --target \"$HOST_TRIPLE\"\n+        $MY_RUSTC -Zunstable-options -Cllvm-args=mode=jit -Cprefer-dynamic example/std_example.rs --target \"$HOST_TRIPLE\"\n \n         echo \"[JIT-lazy] std_example\"\n-        $MY_RUSTC -Cllvm-args=mode=jit-lazy -Cprefer-dynamic example/std_example.rs --target \"$HOST_TRIPLE\"\n+        $MY_RUSTC -Zunstable-options -Cllvm-args=mode=jit-lazy -Cprefer-dynamic example/std_example.rs --target \"$HOST_TRIPLE\"\n     else\n         echo \"[JIT] std_example (skipped)\"\n     fi"}, {"sha": "366b9a7e24c5aaeab8c087ca76866a71182e499d", "filename": "src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bd2f72f398fa6b609a005cea8ebe16e093937936/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd2f72f398fa6b609a005cea8ebe16e093937936/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=bd2f72f398fa6b609a005cea8ebe16e093937936", "patch": "@@ -184,6 +184,9 @@ impl CodegenBackend for CraneliftCodegenBackend {\n         let config = if let Some(config) = self.config.clone() {\n             config\n         } else {\n+            if !tcx.sess.unstable_options() && !tcx.sess.opts.cg.llvm_args.is_empty() {\n+                tcx.sess.fatal(\"`-Z unstable-options` must be passed to allow configuring cg_clif\");\n+            }\n             BackendConfig::from_opts(&tcx.sess.opts.cg.llvm_args)\n                 .unwrap_or_else(|err| tcx.sess.fatal(&err))\n         };"}]}