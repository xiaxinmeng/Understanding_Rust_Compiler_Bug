{"sha": "eb3970285b8993b0f154839056ff7b3daba37840", "node_id": "C_kwDOAAsO6NoAKGViMzk3MDI4NWI4OTkzYjBmMTU0ODM5MDU2ZmY3YjNkYWJhMzc4NDA", "commit": {"author": {"name": "Yuri Astrakhan", "email": "YuriAstrakhan@gmail.com", "date": "2022-10-02T19:13:22Z"}, "committer": {"name": "Yuri Astrakhan", "email": "YuriAstrakhan@gmail.com", "date": "2022-10-02T19:13:22Z"}, "message": "fallout: fix tests to allow uninlined_format_args\n\nIn order to switch `clippy::uninlined_format_args` from pedantic to\nstyle, all existing tests must not raise a warning. I did not want to\nchange the actual tests, so this is a relatively minor change that:\n\n* add `#![allow(clippy::uninlined_format_args)]` where needed\n* normalizes all allow/deny/warn attributes\n   * all allow attributes are grouped together\n   * sorted alphabetically\n   * the `clippy::*` attributes are listed separate from the other ones.\n   * deny and warn attributes are listed before the allowed ones\n\nchangelog: none", "tree": {"sha": "ba22fbe4b1891bacc098f97328bd3db6c13fd8db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba22fbe4b1891bacc098f97328bd3db6c13fd8db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb3970285b8993b0f154839056ff7b3daba37840", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb3970285b8993b0f154839056ff7b3daba37840", "html_url": "https://github.com/rust-lang/rust/commit/eb3970285b8993b0f154839056ff7b3daba37840", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb3970285b8993b0f154839056ff7b3daba37840/comments", "author": {"login": "nyurik", "id": 1641515, "node_id": "MDQ6VXNlcjE2NDE1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1641515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nyurik", "html_url": "https://github.com/nyurik", "followers_url": "https://api.github.com/users/nyurik/followers", "following_url": "https://api.github.com/users/nyurik/following{/other_user}", "gists_url": "https://api.github.com/users/nyurik/gists{/gist_id}", "starred_url": "https://api.github.com/users/nyurik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nyurik/subscriptions", "organizations_url": "https://api.github.com/users/nyurik/orgs", "repos_url": "https://api.github.com/users/nyurik/repos", "events_url": "https://api.github.com/users/nyurik/events{/privacy}", "received_events_url": "https://api.github.com/users/nyurik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nyurik", "id": 1641515, "node_id": "MDQ6VXNlcjE2NDE1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1641515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nyurik", "html_url": "https://github.com/nyurik", "followers_url": "https://api.github.com/users/nyurik/followers", "following_url": "https://api.github.com/users/nyurik/following{/other_user}", "gists_url": "https://api.github.com/users/nyurik/gists{/gist_id}", "starred_url": "https://api.github.com/users/nyurik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nyurik/subscriptions", "organizations_url": "https://api.github.com/users/nyurik/orgs", "repos_url": "https://api.github.com/users/nyurik/repos", "events_url": "https://api.github.com/users/nyurik/events{/privacy}", "received_events_url": "https://api.github.com/users/nyurik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8ba19287dc4710fef7e63b0c75071ff6ea7d642", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8ba19287dc4710fef7e63b0c75071ff6ea7d642", "html_url": "https://github.com/rust-lang/rust/commit/f8ba19287dc4710fef7e63b0c75071ff6ea7d642"}], "stats": {"total": 2005, "additions": 1021, "deletions": 984}, "files": [{"sha": "7f1c512d7c97bc655a785b38ff4056fd490effb6", "filename": "tests/ui-toml/conf_deprecated_key/conf_deprecated_key.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui-toml%2Fconf_deprecated_key%2Fconf_deprecated_key.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui-toml%2Fconf_deprecated_key%2Fconf_deprecated_key.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fconf_deprecated_key%2Fconf_deprecated_key.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,3 +1,5 @@\n+#![allow(clippy::uninlined_format_args)]\n+\n fn main() {}\n \n #[warn(clippy::cognitive_complexity)]"}, {"sha": "fe6303717b593c841af5ea2f5ef3695afb0fd0fc", "filename": "tests/ui-toml/conf_deprecated_key/conf_deprecated_key.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui-toml%2Fconf_deprecated_key%2Fconf_deprecated_key.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui-toml%2Fconf_deprecated_key%2Fconf_deprecated_key.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fconf_deprecated_key%2Fconf_deprecated_key.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -3,7 +3,7 @@ warning: error reading Clippy's configuration file `$DIR/clippy.toml`: deprecate\n warning: error reading Clippy's configuration file `$DIR/clippy.toml`: deprecated field `blacklisted-names`. Please use `disallowed-names` instead\n \n error: the function has a cognitive complexity of (3/2)\n-  --> $DIR/conf_deprecated_key.rs:4:4\n+  --> $DIR/conf_deprecated_key.rs:6:4\n    |\n LL | fn cognitive_complexity() {\n    |    ^^^^^^^^^^^^^^^^^^^^"}, {"sha": "2c876a96c55daa8732eb882c7dcde8278c246356", "filename": "tests/ui/assign_ops2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fassign_ops2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fassign_ops2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassign_ops2.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,3 +1,5 @@\n+#![allow(clippy::uninlined_format_args)]\n+\n #[allow(unused_assignments)]\n #[warn(clippy::misrefactored_assign_op, clippy::assign_op_pattern)]\n fn main() {"}, {"sha": "25e74602244df64e24dfe201235ddfd9658b8e6b", "filename": "tests/ui/assign_ops2.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fassign_ops2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fassign_ops2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassign_ops2.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:5:5\n+  --> $DIR/assign_ops2.rs:7:5\n    |\n LL |     a += a + 1;\n    |     ^^^^^^^^^^\n@@ -15,7 +15,7 @@ LL |     a = a + a + 1;\n    |     ~~~~~~~~~~~~~\n \n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:6:5\n+  --> $DIR/assign_ops2.rs:8:5\n    |\n LL |     a += 1 + a;\n    |     ^^^^^^^^^^\n@@ -30,7 +30,7 @@ LL |     a = a + 1 + a;\n    |     ~~~~~~~~~~~~~\n \n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:7:5\n+  --> $DIR/assign_ops2.rs:9:5\n    |\n LL |     a -= a - 1;\n    |     ^^^^^^^^^^\n@@ -45,7 +45,7 @@ LL |     a = a - (a - 1);\n    |     ~~~~~~~~~~~~~~~\n \n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:8:5\n+  --> $DIR/assign_ops2.rs:10:5\n    |\n LL |     a *= a * 99;\n    |     ^^^^^^^^^^^\n@@ -60,7 +60,7 @@ LL |     a = a * a * 99;\n    |     ~~~~~~~~~~~~~~\n \n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:9:5\n+  --> $DIR/assign_ops2.rs:11:5\n    |\n LL |     a *= 42 * a;\n    |     ^^^^^^^^^^^\n@@ -75,7 +75,7 @@ LL |     a = a * 42 * a;\n    |     ~~~~~~~~~~~~~~\n \n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:10:5\n+  --> $DIR/assign_ops2.rs:12:5\n    |\n LL |     a /= a / 2;\n    |     ^^^^^^^^^^\n@@ -90,7 +90,7 @@ LL |     a = a / (a / 2);\n    |     ~~~~~~~~~~~~~~~\n \n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:11:5\n+  --> $DIR/assign_ops2.rs:13:5\n    |\n LL |     a %= a % 5;\n    |     ^^^^^^^^^^\n@@ -105,7 +105,7 @@ LL |     a = a % (a % 5);\n    |     ~~~~~~~~~~~~~~~\n \n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:12:5\n+  --> $DIR/assign_ops2.rs:14:5\n    |\n LL |     a &= a & 1;\n    |     ^^^^^^^^^^\n@@ -120,7 +120,7 @@ LL |     a = a & a & 1;\n    |     ~~~~~~~~~~~~~\n \n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:13:5\n+  --> $DIR/assign_ops2.rs:15:5\n    |\n LL |     a *= a * a;\n    |     ^^^^^^^^^^\n@@ -135,7 +135,7 @@ LL |     a = a * a * a;\n    |     ~~~~~~~~~~~~~\n \n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops2.rs:50:5\n+  --> $DIR/assign_ops2.rs:52:5\n    |\n LL |     buf = buf + cows.clone();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `buf += cows.clone()`"}, {"sha": "4914f14b58ff7f30765705ddc15a9e2107e76d5a", "filename": "tests/ui/auxiliary/proc_macro_attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fauxiliary%2Fproc_macro_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fauxiliary%2Fproc_macro_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauxiliary%2Fproc_macro_attr.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -4,7 +4,7 @@\n #![crate_type = \"proc-macro\"]\n #![feature(repr128, proc_macro_hygiene, proc_macro_quote, box_patterns)]\n #![allow(incomplete_features)]\n-#![allow(clippy::useless_conversion)]\n+#![allow(clippy::useless_conversion, clippy::uninlined_format_args)]\n \n extern crate proc_macro;\n extern crate quote;"}, {"sha": "d94e2ac6072d41404888b28d7d28dd3859dd4b36", "filename": "tests/ui/bind_instead_of_map.fixed", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fbind_instead_of_map.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fbind_instead_of_map.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbind_instead_of_map.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,6 @@\n // run-rustfix\n #![deny(clippy::bind_instead_of_map)]\n+#![allow(clippy::uninlined_format_args)]\n \n // need a main anyway, use it get rid of unused warnings too\n pub fn main() {"}, {"sha": "86f31f58284aabb7fea9380360ff7e2a3bd9f439", "filename": "tests/ui/bind_instead_of_map.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fbind_instead_of_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fbind_instead_of_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbind_instead_of_map.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,6 @@\n // run-rustfix\n #![deny(clippy::bind_instead_of_map)]\n+#![allow(clippy::uninlined_format_args)]\n \n // need a main anyway, use it get rid of unused warnings too\n pub fn main() {"}, {"sha": "b6a81d21bb20009c767a2f6ca2236692868821f2", "filename": "tests/ui/bind_instead_of_map.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fbind_instead_of_map.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fbind_instead_of_map.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbind_instead_of_map.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: using `Option.and_then(Some)`, which is a no-op\n-  --> $DIR/bind_instead_of_map.rs:8:13\n+  --> $DIR/bind_instead_of_map.rs:9:13\n    |\n LL |     let _ = x.and_then(Some);\n    |             ^^^^^^^^^^^^^^^^ help: use the expression directly: `x`\n@@ -11,13 +11,13 @@ LL | #![deny(clippy::bind_instead_of_map)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: using `Option.and_then(|x| Some(y))`, which is more succinctly expressed as `map(|x| y)`\n-  --> $DIR/bind_instead_of_map.rs:9:13\n+  --> $DIR/bind_instead_of_map.rs:10:13\n    |\n LL |     let _ = x.and_then(|o| Some(o + 1));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `x.map(|o| o + 1)`\n \n error: using `Result.and_then(Ok)`, which is a no-op\n-  --> $DIR/bind_instead_of_map.rs:15:13\n+  --> $DIR/bind_instead_of_map.rs:16:13\n    |\n LL |     let _ = x.and_then(Ok);\n    |             ^^^^^^^^^^^^^^ help: use the expression directly: `x`"}, {"sha": "3b5b6bf4c950222f3f35f2bb084622f011075818", "filename": "tests/ui/borrow_box.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fborrow_box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fborrow_box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrow_box.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,7 +1,6 @@\n #![deny(clippy::borrowed_box)]\n-#![allow(clippy::disallowed_names)]\n-#![allow(unused_variables)]\n-#![allow(dead_code)]\n+#![allow(dead_code, unused_variables)]\n+#![allow(clippy::uninlined_format_args, clippy::disallowed_names)]\n \n use std::fmt::Display;\n "}, {"sha": "99cb60a1ead9b1009c6b6e93794c64c4b3f08fd7", "filename": "tests/ui/borrow_box.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fborrow_box.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fborrow_box.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrow_box.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n-  --> $DIR/borrow_box.rs:21:14\n+  --> $DIR/borrow_box.rs:20:14\n    |\n LL |     let foo: &Box<bool>;\n    |              ^^^^^^^^^^ help: try: `&bool`\n@@ -11,55 +11,55 @@ LL | #![deny(clippy::borrowed_box)]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n-  --> $DIR/borrow_box.rs:25:10\n+  --> $DIR/borrow_box.rs:24:10\n    |\n LL |     foo: &'a Box<bool>,\n    |          ^^^^^^^^^^^^^ help: try: `&'a bool`\n \n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n-  --> $DIR/borrow_box.rs:29:17\n+  --> $DIR/borrow_box.rs:28:17\n    |\n LL |     fn test4(a: &Box<bool>);\n    |                 ^^^^^^^^^^ help: try: `&bool`\n \n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n-  --> $DIR/borrow_box.rs:95:25\n+  --> $DIR/borrow_box.rs:94:25\n    |\n LL | pub fn test14(_display: &Box<dyn Display>) {}\n    |                         ^^^^^^^^^^^^^^^^^ help: try: `&dyn Display`\n \n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n-  --> $DIR/borrow_box.rs:96:25\n+  --> $DIR/borrow_box.rs:95:25\n    |\n LL | pub fn test15(_display: &Box<dyn Display + Send>) {}\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&(dyn Display + Send)`\n \n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n-  --> $DIR/borrow_box.rs:97:29\n+  --> $DIR/borrow_box.rs:96:29\n    |\n LL | pub fn test16<'a>(_display: &'a Box<dyn Display + 'a>) {}\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&'a (dyn Display + 'a)`\n \n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n-  --> $DIR/borrow_box.rs:99:25\n+  --> $DIR/borrow_box.rs:98:25\n    |\n LL | pub fn test17(_display: &Box<impl Display>) {}\n    |                         ^^^^^^^^^^^^^^^^^^ help: try: `&impl Display`\n \n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n-  --> $DIR/borrow_box.rs:100:25\n+  --> $DIR/borrow_box.rs:99:25\n    |\n LL | pub fn test18(_display: &Box<impl Display + Send>) {}\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&(impl Display + Send)`\n \n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n-  --> $DIR/borrow_box.rs:101:29\n+  --> $DIR/borrow_box.rs:100:29\n    |\n LL | pub fn test19<'a>(_display: &'a Box<impl Display + 'a>) {}\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&'a (impl Display + 'a)`\n \n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n-  --> $DIR/borrow_box.rs:106:25\n+  --> $DIR/borrow_box.rs:105:25\n    |\n LL | pub fn test20(_display: &Box<(dyn Display + Send)>) {}\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&(dyn Display + Send)`"}, {"sha": "6a63008b5a74b7d904e66b44553ef2043caccc06", "filename": "tests/ui/branches_sharing_code/shared_at_bottom.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_bottom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_bottom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_bottom.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,6 @@\n-#![allow(dead_code, clippy::equatable_if_let)]\n #![deny(clippy::if_same_then_else, clippy::branches_sharing_code)]\n+#![allow(dead_code)]\n+#![allow(clippy::equatable_if_let, clippy::uninlined_format_args)]\n \n // This tests the branches_sharing_code lint at the end of blocks\n "}, {"sha": "a6d6c0c93ab5c359c555fa4a99db244139ed95e0", "filename": "tests/ui/branches_sharing_code/shared_at_bottom.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_bottom.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_bottom.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_bottom.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: all if blocks contain the same code at the end\n-  --> $DIR/shared_at_bottom.rs:30:5\n+  --> $DIR/shared_at_bottom.rs:31:5\n    |\n LL | /         let result = false;\n LL | |         println!(\"Block end!\");\n@@ -8,7 +8,7 @@ LL | |     };\n    | |_____^\n    |\n note: the lint level is defined here\n-  --> $DIR/shared_at_bottom.rs:2:36\n+  --> $DIR/shared_at_bottom.rs:1:36\n    |\n LL | #![deny(clippy::if_same_then_else, clippy::branches_sharing_code)]\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -22,7 +22,7 @@ LL ~     result;\n    |\n \n error: all if blocks contain the same code at the end\n-  --> $DIR/shared_at_bottom.rs:48:5\n+  --> $DIR/shared_at_bottom.rs:49:5\n    |\n LL | /         println!(\"Same end of block\");\n LL | |     }\n@@ -35,7 +35,7 @@ LL +     println!(\"Same end of block\");\n    |\n \n error: all if blocks contain the same code at the end\n-  --> $DIR/shared_at_bottom.rs:65:5\n+  --> $DIR/shared_at_bottom.rs:66:5\n    |\n LL | /         println!(\n LL | |             \"I'm moveable because I know: `outer_scope_value`: '{}'\",\n@@ -54,7 +54,7 @@ LL +     );\n    |\n \n error: all if blocks contain the same code at the end\n-  --> $DIR/shared_at_bottom.rs:77:9\n+  --> $DIR/shared_at_bottom.rs:78:9\n    |\n LL | /             println!(\"Hello World\");\n LL | |         }\n@@ -67,7 +67,7 @@ LL +         println!(\"Hello World\");\n    |\n \n error: all if blocks contain the same code at the end\n-  --> $DIR/shared_at_bottom.rs:93:5\n+  --> $DIR/shared_at_bottom.rs:94:5\n    |\n LL | /         let later_used_value = \"A string value\";\n LL | |         println!(\"{}\", later_used_value);\n@@ -84,7 +84,7 @@ LL +     println!(\"{}\", later_used_value);\n    |\n \n error: all if blocks contain the same code at the end\n-  --> $DIR/shared_at_bottom.rs:106:5\n+  --> $DIR/shared_at_bottom.rs:107:5\n    |\n LL | /         let simple_examples = \"I now identify as a &str :)\";\n LL | |         println!(\"This is the new simple_example: {}\", simple_examples);\n@@ -100,7 +100,7 @@ LL +     println!(\"This is the new simple_example: {}\", simple_examples);\n    |\n \n error: all if blocks contain the same code at the end\n-  --> $DIR/shared_at_bottom.rs:171:5\n+  --> $DIR/shared_at_bottom.rs:172:5\n    |\n LL | /         x << 2\n LL | |     };\n@@ -114,7 +114,7 @@ LL ~     x << 2;\n    |\n \n error: all if blocks contain the same code at the end\n-  --> $DIR/shared_at_bottom.rs:178:5\n+  --> $DIR/shared_at_bottom.rs:179:5\n    |\n LL | /         x * 4\n LL | |     }\n@@ -128,7 +128,7 @@ LL +     x * 4\n    |\n \n error: all if blocks contain the same code at the end\n-  --> $DIR/shared_at_bottom.rs:190:44\n+  --> $DIR/shared_at_bottom.rs:191:44\n    |\n LL |     if x == 17 { b = 1; a = 0x99; } else { a = 0x99; }\n    |                                            ^^^^^^^^^^^"}, {"sha": "9e0b99f166651bfdf69b1dfae5d2eb130dc5eda9", "filename": "tests/ui/branches_sharing_code/shared_at_top.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,6 @@\n-#![allow(dead_code, clippy::mixed_read_write_in_expression)]\n-#![deny(clippy::if_same_then_else, clippy::branches_sharing_code)]\n+#![deny(clippy::branches_sharing_code, clippy::if_same_then_else)]\n+#![allow(dead_code)]\n+#![allow(clippy::mixed_read_write_in_expression, clippy::uninlined_format_args)]\n \n // This tests the branches_sharing_code lint at the start of blocks\n "}, {"sha": "fe912ab7560d5d6830abb4983717ec68d13adb7d", "filename": "tests/ui/branches_sharing_code/shared_at_top.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,23 +1,23 @@\n error: all if blocks contain the same code at the start\n-  --> $DIR/shared_at_top.rs:10:5\n+  --> $DIR/shared_at_top.rs:11:5\n    |\n LL | /     if true {\n LL | |         println!(\"Hello World!\");\n    | |_________________________________^\n    |\n note: the lint level is defined here\n-  --> $DIR/shared_at_top.rs:2:36\n+  --> $DIR/shared_at_top.rs:1:9\n    |\n-LL | #![deny(clippy::if_same_then_else, clippy::branches_sharing_code)]\n-   |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(clippy::branches_sharing_code, clippy::if_same_then_else)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n help: consider moving these statements before the if\n    |\n LL ~     println!(\"Hello World!\");\n LL +     if true {\n    |\n \n error: all if blocks contain the same code at the start\n-  --> $DIR/shared_at_top.rs:19:5\n+  --> $DIR/shared_at_top.rs:20:5\n    |\n LL | /     if x == 0 {\n LL | |         let y = 9;\n@@ -35,7 +35,7 @@ LL +     if x == 0 {\n    |\n \n error: all if blocks contain the same code at the start\n-  --> $DIR/shared_at_top.rs:40:5\n+  --> $DIR/shared_at_top.rs:41:5\n    |\n LL | /     let _ = if x == 7 {\n LL | |         let y = 16;\n@@ -48,7 +48,7 @@ LL +     let _ = if x == 7 {\n    |\n \n error: all if blocks contain the same code at the start\n-  --> $DIR/shared_at_top.rs:58:5\n+  --> $DIR/shared_at_top.rs:59:5\n    |\n LL | /     if x == 10 {\n LL | |         let used_value_name = \"Different type\";\n@@ -64,7 +64,7 @@ LL +     if x == 10 {\n    |\n \n error: all if blocks contain the same code at the start\n-  --> $DIR/shared_at_top.rs:72:5\n+  --> $DIR/shared_at_top.rs:73:5\n    |\n LL | /     if x == 11 {\n LL | |         let can_be_overridden = \"Move me\";\n@@ -80,7 +80,7 @@ LL +     if x == 11 {\n    |\n \n error: all if blocks contain the same code at the start\n-  --> $DIR/shared_at_top.rs:88:5\n+  --> $DIR/shared_at_top.rs:89:5\n    |\n LL | /     if x == 2020 {\n LL | |         println!(\"This should trigger the `SHARED_CODE_IN_IF_BLOCKS` lint.\");\n@@ -95,7 +95,7 @@ LL +     if x == 2020 {\n    |\n \n error: this `if` has identical blocks\n-  --> $DIR/shared_at_top.rs:96:18\n+  --> $DIR/shared_at_top.rs:97:18\n    |\n LL |       if x == 2019 {\n    |  __________________^\n@@ -104,12 +104,12 @@ LL | |     } else {\n    | |_____^\n    |\n note: the lint level is defined here\n-  --> $DIR/shared_at_top.rs:2:9\n+  --> $DIR/shared_at_top.rs:1:40\n    |\n-LL | #![deny(clippy::if_same_then_else, clippy::branches_sharing_code)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(clippy::branches_sharing_code, clippy::if_same_then_else)]\n+   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\n note: same as this\n-  --> $DIR/shared_at_top.rs:98:12\n+  --> $DIR/shared_at_top.rs:99:12\n    |\n LL |       } else {\n    |  ____________^"}, {"sha": "93b8c6e10dae6fa873cba2aa867857ef2f9324fb", "filename": "tests/ui/branches_sharing_code/shared_at_top_and_bottom.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top_and_bottom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top_and_bottom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top_and_bottom.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,6 @@\n+#![deny(clippy::branches_sharing_code, clippy::if_same_then_else)]\n #![allow(dead_code)]\n-#![deny(clippy::if_same_then_else, clippy::branches_sharing_code)]\n+#![allow(clippy::uninlined_format_args)]\n \n // branches_sharing_code at the top and bottom of the if blocks\n "}, {"sha": "d36a2b67900c0cd96b0c60c64f3fbe9219deb37d", "filename": "tests/ui/branches_sharing_code/shared_at_top_and_bottom.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top_and_bottom.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top_and_bottom.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top_and_bottom.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: all if blocks contain the same code at both the start and the end\n-  --> $DIR/shared_at_top_and_bottom.rs:16:5\n+  --> $DIR/shared_at_top_and_bottom.rs:17:5\n    |\n LL | /     if x == 7 {\n LL | |         let t = 7;\n@@ -8,12 +8,12 @@ LL | |         let _overlap_end = 2 * t;\n    | |_________________________________^\n    |\n note: the lint level is defined here\n-  --> $DIR/shared_at_top_and_bottom.rs:2:36\n+  --> $DIR/shared_at_top_and_bottom.rs:1:9\n    |\n-LL | #![deny(clippy::if_same_then_else, clippy::branches_sharing_code)]\n-   |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(clippy::branches_sharing_code, clippy::if_same_then_else)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n note: this code is shared at the end\n-  --> $DIR/shared_at_top_and_bottom.rs:28:5\n+  --> $DIR/shared_at_top_and_bottom.rs:29:5\n    |\n LL | /         let _u = 9;\n LL | |     }\n@@ -32,7 +32,7 @@ LL +     let _u = 9;\n    |\n \n error: all if blocks contain the same code at both the start and the end\n-  --> $DIR/shared_at_top_and_bottom.rs:32:5\n+  --> $DIR/shared_at_top_and_bottom.rs:33:5\n    |\n LL | /     if x == 99 {\n LL | |         let r = 7;\n@@ -41,7 +41,7 @@ LL | |         let _overlap_middle = r * r;\n    | |____________________________________^\n    |\n note: this code is shared at the end\n-  --> $DIR/shared_at_top_and_bottom.rs:43:5\n+  --> $DIR/shared_at_top_and_bottom.rs:44:5\n    |\n LL | /         let _overlap_end = r * r * r;\n LL | |         let z = \"end\";\n@@ -63,7 +63,7 @@ LL +     let z = \"end\";\n    |\n \n error: all if blocks contain the same code at both the start and the end\n-  --> $DIR/shared_at_top_and_bottom.rs:61:5\n+  --> $DIR/shared_at_top_and_bottom.rs:62:5\n    |\n LL | /     if (x > 7 && y < 13) || (x + y) % 2 == 1 {\n LL | |         let a = 0xcafe;\n@@ -72,7 +72,7 @@ LL | |         let e_id = gen_id(a, b);\n    | |________________________________^\n    |\n note: this code is shared at the end\n-  --> $DIR/shared_at_top_and_bottom.rs:81:5\n+  --> $DIR/shared_at_top_and_bottom.rs:82:5\n    |\n LL | /         let pack = DataPack {\n LL | |             id: e_id,\n@@ -102,14 +102,14 @@ LL +     process_data(pack);\n    |\n \n error: all if blocks contain the same code at both the start and the end\n-  --> $DIR/shared_at_top_and_bottom.rs:94:5\n+  --> $DIR/shared_at_top_and_bottom.rs:95:5\n    |\n LL | /     let _ = if x == 7 {\n LL | |         let _ = 19;\n    | |___________________^\n    |\n note: this code is shared at the end\n-  --> $DIR/shared_at_top_and_bottom.rs:103:5\n+  --> $DIR/shared_at_top_and_bottom.rs:104:5\n    |\n LL | /         x << 2\n LL | |     };\n@@ -127,14 +127,14 @@ LL ~     x << 2;\n    |\n \n error: all if blocks contain the same code at both the start and the end\n-  --> $DIR/shared_at_top_and_bottom.rs:106:5\n+  --> $DIR/shared_at_top_and_bottom.rs:107:5\n    |\n LL | /     if x == 9 {\n LL | |         let _ = 17;\n    | |___________________^\n    |\n note: this code is shared at the end\n-  --> $DIR/shared_at_top_and_bottom.rs:115:5\n+  --> $DIR/shared_at_top_and_bottom.rs:116:5\n    |\n LL | /         x * 4\n LL | |     }"}, {"sha": "2d6055eb6c422ddbd36c68235b324f12d9264306", "filename": "tests/ui/branches_sharing_code/valid_if_blocks.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fbranches_sharing_code%2Fvalid_if_blocks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fbranches_sharing_code%2Fvalid_if_blocks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbranches_sharing_code%2Fvalid_if_blocks.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,6 @@\n-#![allow(dead_code, clippy::mixed_read_write_in_expression)]\n-#![deny(clippy::if_same_then_else, clippy::branches_sharing_code)]\n+#![deny(clippy::branches_sharing_code, clippy::if_same_then_else)]\n+#![allow(dead_code)]\n+#![allow(clippy::mixed_read_write_in_expression, clippy::uninlined_format_args)]\n \n // This tests valid if blocks that shouldn't trigger the lint\n "}, {"sha": "95fee9efcfb5a6bbe5ac28a45450ae76ebde1b24", "filename": "tests/ui/branches_sharing_code/valid_if_blocks.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fbranches_sharing_code%2Fvalid_if_blocks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fbranches_sharing_code%2Fvalid_if_blocks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbranches_sharing_code%2Fvalid_if_blocks.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,26 +1,26 @@\n error: this `if` has identical blocks\n-  --> $DIR/valid_if_blocks.rs:104:14\n+  --> $DIR/valid_if_blocks.rs:105:14\n    |\n LL |       if false {\n    |  ______________^\n LL | |     } else {\n    | |_____^\n    |\n note: the lint level is defined here\n-  --> $DIR/valid_if_blocks.rs:2:9\n+  --> $DIR/valid_if_blocks.rs:1:40\n    |\n-LL | #![deny(clippy::if_same_then_else, clippy::branches_sharing_code)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(clippy::branches_sharing_code, clippy::if_same_then_else)]\n+   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\n note: same as this\n-  --> $DIR/valid_if_blocks.rs:105:12\n+  --> $DIR/valid_if_blocks.rs:106:12\n    |\n LL |       } else {\n    |  ____________^\n LL | |     }\n    | |_____^\n \n error: this `if` has identical blocks\n-  --> $DIR/valid_if_blocks.rs:115:15\n+  --> $DIR/valid_if_blocks.rs:116:15\n    |\n LL |       if x == 0 {\n    |  _______________^\n@@ -31,7 +31,7 @@ LL | |     } else {\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/valid_if_blocks.rs:119:12\n+  --> $DIR/valid_if_blocks.rs:120:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -42,19 +42,19 @@ LL | |     }\n    | |_____^\n \n error: this `if` has identical blocks\n-  --> $DIR/valid_if_blocks.rs:126:23\n+  --> $DIR/valid_if_blocks.rs:127:23\n    |\n LL |     let _ = if x == 6 { 7 } else { 7 };\n    |                       ^^^^^\n    |\n note: same as this\n-  --> $DIR/valid_if_blocks.rs:126:34\n+  --> $DIR/valid_if_blocks.rs:127:34\n    |\n LL |     let _ = if x == 6 { 7 } else { 7 };\n    |                                  ^^^^^\n \n error: this `if` has identical blocks\n-  --> $DIR/valid_if_blocks.rs:132:23\n+  --> $DIR/valid_if_blocks.rs:133:23\n    |\n LL |       } else if x == 68 {\n    |  _______________________^\n@@ -66,7 +66,7 @@ LL | |     } else {\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/valid_if_blocks.rs:137:12\n+  --> $DIR/valid_if_blocks.rs:138:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -78,7 +78,7 @@ LL | |     };\n    | |_____^\n \n error: this `if` has identical blocks\n-  --> $DIR/valid_if_blocks.rs:146:23\n+  --> $DIR/valid_if_blocks.rs:147:23\n    |\n LL |       } else if x == 68 {\n    |  _______________________^\n@@ -88,7 +88,7 @@ LL | |     } else {\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/valid_if_blocks.rs:149:12\n+  --> $DIR/valid_if_blocks.rs:150:12\n    |\n LL |       } else {\n    |  ____________^"}, {"sha": "a37f3fec20f1ed2eabddd868ea3af2d89052f820", "filename": "tests/ui/cast_abs_to_unsigned.fixed", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fcast_abs_to_unsigned.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fcast_abs_to_unsigned.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_abs_to_unsigned.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,6 @@\n // run-rustfix\n #![warn(clippy::cast_abs_to_unsigned)]\n+#![allow(clippy::uninlined_format_args)]\n \n fn main() {\n     let x: i32 = -42;"}, {"sha": "5706930af5a05ec87b43b0471be6bd2f3e8ccfb1", "filename": "tests/ui/cast_abs_to_unsigned.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fcast_abs_to_unsigned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fcast_abs_to_unsigned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_abs_to_unsigned.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,6 @@\n // run-rustfix\n #![warn(clippy::cast_abs_to_unsigned)]\n+#![allow(clippy::uninlined_format_args)]\n \n fn main() {\n     let x: i32 = -42;"}, {"sha": "7cea11c183d236fbf229e606e2689a3a0923a96e", "filename": "tests/ui/cast_abs_to_unsigned.stderr", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fcast_abs_to_unsigned.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fcast_abs_to_unsigned.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_abs_to_unsigned.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,103 +1,103 @@\n error: casting the result of `i32::abs()` to u32\n-  --> $DIR/cast_abs_to_unsigned.rs:6:18\n+  --> $DIR/cast_abs_to_unsigned.rs:7:18\n    |\n LL |     let y: u32 = x.abs() as u32;\n    |                  ^^^^^^^^^^^^^^ help: replace with: `x.unsigned_abs()`\n    |\n    = note: `-D clippy::cast-abs-to-unsigned` implied by `-D warnings`\n \n error: casting the result of `i32::abs()` to usize\n-  --> $DIR/cast_abs_to_unsigned.rs:10:20\n+  --> $DIR/cast_abs_to_unsigned.rs:11:20\n    |\n LL |     let _: usize = a.abs() as usize;\n    |                    ^^^^^^^ help: replace with: `a.unsigned_abs()`\n \n error: casting the result of `i32::abs()` to usize\n-  --> $DIR/cast_abs_to_unsigned.rs:11:20\n+  --> $DIR/cast_abs_to_unsigned.rs:12:20\n    |\n LL |     let _: usize = a.abs() as _;\n    |                    ^^^^^^^ help: replace with: `a.unsigned_abs()`\n \n error: casting the result of `i32::abs()` to usize\n-  --> $DIR/cast_abs_to_unsigned.rs:12:13\n+  --> $DIR/cast_abs_to_unsigned.rs:13:13\n    |\n LL |     let _ = a.abs() as usize;\n    |             ^^^^^^^ help: replace with: `a.unsigned_abs()`\n \n error: casting the result of `i64::abs()` to usize\n-  --> $DIR/cast_abs_to_unsigned.rs:15:13\n+  --> $DIR/cast_abs_to_unsigned.rs:16:13\n    |\n LL |     let _ = a.abs() as usize;\n    |             ^^^^^^^ help: replace with: `a.unsigned_abs()`\n \n error: casting the result of `i64::abs()` to u8\n-  --> $DIR/cast_abs_to_unsigned.rs:16:13\n+  --> $DIR/cast_abs_to_unsigned.rs:17:13\n    |\n LL |     let _ = a.abs() as u8;\n    |             ^^^^^^^ help: replace with: `a.unsigned_abs()`\n \n error: casting the result of `i64::abs()` to u16\n-  --> $DIR/cast_abs_to_unsigned.rs:17:13\n+  --> $DIR/cast_abs_to_unsigned.rs:18:13\n    |\n LL |     let _ = a.abs() as u16;\n    |             ^^^^^^^ help: replace with: `a.unsigned_abs()`\n \n error: casting the result of `i64::abs()` to u32\n-  --> $DIR/cast_abs_to_unsigned.rs:18:13\n+  --> $DIR/cast_abs_to_unsigned.rs:19:13\n    |\n LL |     let _ = a.abs() as u32;\n    |             ^^^^^^^ help: replace with: `a.unsigned_abs()`\n \n error: casting the result of `i64::abs()` to u64\n-  --> $DIR/cast_abs_to_unsigned.rs:19:13\n+  --> $DIR/cast_abs_to_unsigned.rs:20:13\n    |\n LL |     let _ = a.abs() as u64;\n    |             ^^^^^^^^^^^^^^ help: replace with: `a.unsigned_abs()`\n \n error: casting the result of `i64::abs()` to u128\n-  --> $DIR/cast_abs_to_unsigned.rs:20:13\n+  --> $DIR/cast_abs_to_unsigned.rs:21:13\n    |\n LL |     let _ = a.abs() as u128;\n    |             ^^^^^^^ help: replace with: `a.unsigned_abs()`\n \n error: casting the result of `isize::abs()` to usize\n-  --> $DIR/cast_abs_to_unsigned.rs:23:13\n+  --> $DIR/cast_abs_to_unsigned.rs:24:13\n    |\n LL |     let _ = a.abs() as usize;\n    |             ^^^^^^^^^^^^^^^^ help: replace with: `a.unsigned_abs()`\n \n error: casting the result of `isize::abs()` to u8\n-  --> $DIR/cast_abs_to_unsigned.rs:24:13\n+  --> $DIR/cast_abs_to_unsigned.rs:25:13\n    |\n LL |     let _ = a.abs() as u8;\n    |             ^^^^^^^ help: replace with: `a.unsigned_abs()`\n \n error: casting the result of `isize::abs()` to u16\n-  --> $DIR/cast_abs_to_unsigned.rs:25:13\n+  --> $DIR/cast_abs_to_unsigned.rs:26:13\n    |\n LL |     let _ = a.abs() as u16;\n    |             ^^^^^^^ help: replace with: `a.unsigned_abs()`\n \n error: casting the result of `isize::abs()` to u32\n-  --> $DIR/cast_abs_to_unsigned.rs:26:13\n+  --> $DIR/cast_abs_to_unsigned.rs:27:13\n    |\n LL |     let _ = a.abs() as u32;\n    |             ^^^^^^^ help: replace with: `a.unsigned_abs()`\n \n error: casting the result of `isize::abs()` to u64\n-  --> $DIR/cast_abs_to_unsigned.rs:27:13\n+  --> $DIR/cast_abs_to_unsigned.rs:28:13\n    |\n LL |     let _ = a.abs() as u64;\n    |             ^^^^^^^ help: replace with: `a.unsigned_abs()`\n \n error: casting the result of `isize::abs()` to u128\n-  --> $DIR/cast_abs_to_unsigned.rs:28:13\n+  --> $DIR/cast_abs_to_unsigned.rs:29:13\n    |\n LL |     let _ = a.abs() as u128;\n    |             ^^^^^^^ help: replace with: `a.unsigned_abs()`\n \n error: casting the result of `i64::abs()` to u32\n-  --> $DIR/cast_abs_to_unsigned.rs:30:13\n+  --> $DIR/cast_abs_to_unsigned.rs:31:13\n    |\n LL |     let _ = (x as i64 - y as i64).abs() as u32;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `(x as i64 - y as i64).unsigned_abs()`"}, {"sha": "7d53e08345d30244d5a67ab62523934ba7aa101e", "filename": "tests/ui/collapsible_match.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fcollapsible_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fcollapsible_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcollapsible_match.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,9 +1,10 @@\n #![warn(clippy::collapsible_match)]\n #![allow(\n+    clippy::equatable_if_let,\n     clippy::needless_return,\n     clippy::no_effect,\n     clippy::single_match,\n-    clippy::equatable_if_let\n+    clippy::uninlined_format_args\n )]\n \n fn lint_cases(opt_opt: Option<Option<u32>>, res_opt: Result<Option<u32>, String>) {"}, {"sha": "ba2b2e777a10c8e7b2b4e5622f68cf99310cc35a", "filename": "tests/ui/collapsible_match.stderr", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fcollapsible_match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fcollapsible_match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcollapsible_match.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: this `match` can be collapsed into the outer `match`\n-  --> $DIR/collapsible_match.rs:12:20\n+  --> $DIR/collapsible_match.rs:13:20\n    |\n LL |           Ok(val) => match val {\n    |  ____________________^\n@@ -10,15 +10,15 @@ LL | |         },\n    |\n    = note: `-D clippy::collapsible-match` implied by `-D warnings`\n help: the outer pattern can be modified to include the inner pattern\n-  --> $DIR/collapsible_match.rs:12:12\n+  --> $DIR/collapsible_match.rs:13:12\n    |\n LL |         Ok(val) => match val {\n    |            ^^^ replace this binding\n LL |             Some(n) => foo(n),\n    |             ^^^^^^^ with this pattern\n \n error: this `match` can be collapsed into the outer `match`\n-  --> $DIR/collapsible_match.rs:21:20\n+  --> $DIR/collapsible_match.rs:22:20\n    |\n LL |           Ok(val) => match val {\n    |  ____________________^\n@@ -28,31 +28,31 @@ LL | |         },\n    | |_________^\n    |\n help: the outer pattern can be modified to include the inner pattern\n-  --> $DIR/collapsible_match.rs:21:12\n+  --> $DIR/collapsible_match.rs:22:12\n    |\n LL |         Ok(val) => match val {\n    |            ^^^ replace this binding\n LL |             Some(n) => foo(n),\n    |             ^^^^^^^ with this pattern\n \n error: this `if let` can be collapsed into the outer `if let`\n-  --> $DIR/collapsible_match.rs:30:9\n+  --> $DIR/collapsible_match.rs:31:9\n    |\n LL | /         if let Some(n) = val {\n LL | |             take(n);\n LL | |         }\n    | |_________^\n    |\n help: the outer pattern can be modified to include the inner pattern\n-  --> $DIR/collapsible_match.rs:29:15\n+  --> $DIR/collapsible_match.rs:30:15\n    |\n LL |     if let Ok(val) = res_opt {\n    |               ^^^ replace this binding\n LL |         if let Some(n) = val {\n    |                ^^^^^^^ with this pattern\n \n error: this `if let` can be collapsed into the outer `if let`\n-  --> $DIR/collapsible_match.rs:37:9\n+  --> $DIR/collapsible_match.rs:38:9\n    |\n LL | /         if let Some(n) = val {\n LL | |             take(n);\n@@ -62,15 +62,15 @@ LL | |         }\n    | |_________^\n    |\n help: the outer pattern can be modified to include the inner pattern\n-  --> $DIR/collapsible_match.rs:36:15\n+  --> $DIR/collapsible_match.rs:37:15\n    |\n LL |     if let Ok(val) = res_opt {\n    |               ^^^ replace this binding\n LL |         if let Some(n) = val {\n    |                ^^^^^^^ with this pattern\n \n error: this `match` can be collapsed into the outer `if let`\n-  --> $DIR/collapsible_match.rs:48:9\n+  --> $DIR/collapsible_match.rs:49:9\n    |\n LL | /         match val {\n LL | |             Some(n) => foo(n),\n@@ -79,7 +79,7 @@ LL | |         }\n    | |_________^\n    |\n help: the outer pattern can be modified to include the inner pattern\n-  --> $DIR/collapsible_match.rs:47:15\n+  --> $DIR/collapsible_match.rs:48:15\n    |\n LL |     if let Ok(val) = res_opt {\n    |               ^^^ replace this binding\n@@ -88,23 +88,23 @@ LL |             Some(n) => foo(n),\n    |             ^^^^^^^ with this pattern\n \n error: this `if let` can be collapsed into the outer `match`\n-  --> $DIR/collapsible_match.rs:57:13\n+  --> $DIR/collapsible_match.rs:58:13\n    |\n LL | /             if let Some(n) = val {\n LL | |                 take(n);\n LL | |             }\n    | |_____________^\n    |\n help: the outer pattern can be modified to include the inner pattern\n-  --> $DIR/collapsible_match.rs:56:12\n+  --> $DIR/collapsible_match.rs:57:12\n    |\n LL |         Ok(val) => {\n    |            ^^^ replace this binding\n LL |             if let Some(n) = val {\n    |                    ^^^^^^^ with this pattern\n \n error: this `match` can be collapsed into the outer `if let`\n-  --> $DIR/collapsible_match.rs:66:9\n+  --> $DIR/collapsible_match.rs:67:9\n    |\n LL | /         match val {\n LL | |             Some(n) => foo(n),\n@@ -113,7 +113,7 @@ LL | |         }\n    | |_________^\n    |\n help: the outer pattern can be modified to include the inner pattern\n-  --> $DIR/collapsible_match.rs:65:15\n+  --> $DIR/collapsible_match.rs:66:15\n    |\n LL |     if let Ok(val) = res_opt {\n    |               ^^^ replace this binding\n@@ -122,7 +122,7 @@ LL |             Some(n) => foo(n),\n    |             ^^^^^^^ with this pattern\n \n error: this `if let` can be collapsed into the outer `match`\n-  --> $DIR/collapsible_match.rs:77:13\n+  --> $DIR/collapsible_match.rs:78:13\n    |\n LL | /             if let Some(n) = val {\n LL | |                 take(n);\n@@ -132,15 +132,15 @@ LL | |             }\n    | |_____________^\n    |\n help: the outer pattern can be modified to include the inner pattern\n-  --> $DIR/collapsible_match.rs:76:12\n+  --> $DIR/collapsible_match.rs:77:12\n    |\n LL |         Ok(val) => {\n    |            ^^^ replace this binding\n LL |             if let Some(n) = val {\n    |                    ^^^^^^^ with this pattern\n \n error: this `match` can be collapsed into the outer `match`\n-  --> $DIR/collapsible_match.rs:88:20\n+  --> $DIR/collapsible_match.rs:89:20\n    |\n LL |           Ok(val) => match val {\n    |  ____________________^\n@@ -150,15 +150,15 @@ LL | |         },\n    | |_________^\n    |\n help: the outer pattern can be modified to include the inner pattern\n-  --> $DIR/collapsible_match.rs:88:12\n+  --> $DIR/collapsible_match.rs:89:12\n    |\n LL |         Ok(val) => match val {\n    |            ^^^ replace this binding\n LL |             Some(n) => foo(n),\n    |             ^^^^^^^ with this pattern\n \n error: this `match` can be collapsed into the outer `match`\n-  --> $DIR/collapsible_match.rs:97:22\n+  --> $DIR/collapsible_match.rs:98:22\n    |\n LL |           Some(val) => match val {\n    |  ______________________^\n@@ -168,7 +168,7 @@ LL | |         },\n    | |_________^\n    |\n help: the outer pattern can be modified to include the inner pattern\n-  --> $DIR/collapsible_match.rs:97:14\n+  --> $DIR/collapsible_match.rs:98:14\n    |\n LL |         Some(val) => match val {\n    |              ^^^ replace this binding"}, {"sha": "f693aafd1cbb6df7d271b641e9d49c8797f47e96", "filename": "tests/ui/crashes/ice-4775.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fcrashes%2Fice-4775.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fcrashes%2Fice-4775.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-4775.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,3 +1,5 @@\n+#![allow(clippy::uninlined_format_args)]\n+\n pub struct ArrayWrapper<const N: usize>([usize; N]);\n \n impl<const N: usize> ArrayWrapper<{ N }> {"}, {"sha": "b34997d4ee0ba73e8a35d57dad46fe39dda7195a", "filename": "tests/ui/crashes/regressions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fcrashes%2Fregressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fcrashes%2Fregressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fregressions.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,4 +1,4 @@\n-#![allow(clippy::disallowed_names)]\n+#![allow(clippy::disallowed_names, clippy::uninlined_format_args)]\n \n pub fn foo(bar: *const u8) {\n     println!(\"{:#p}\", bar);"}, {"sha": "eedd43619392d67aca02d6877574188cea1e8239", "filename": "tests/ui/default_trait_access.fixed", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fdefault_trait_access.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fdefault_trait_access.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdefault_trait_access.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,8 +1,8 @@\n // run-rustfix\n // aux-build: proc_macro_with_span.rs\n-\n-#![allow(unused_imports, dead_code)]\n #![deny(clippy::default_trait_access)]\n+#![allow(dead_code, unused_imports)]\n+#![allow(clippy::uninlined_format_args)]\n \n extern crate proc_macro_with_span;\n "}, {"sha": "11d4bc5c5f022ee4d28bff5e829117fea9b2ecff", "filename": "tests/ui/default_trait_access.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fdefault_trait_access.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fdefault_trait_access.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdefault_trait_access.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,8 +1,8 @@\n // run-rustfix\n // aux-build: proc_macro_with_span.rs\n-\n-#![allow(unused_imports, dead_code)]\n #![deny(clippy::default_trait_access)]\n+#![allow(dead_code, unused_imports)]\n+#![allow(clippy::uninlined_format_args)]\n \n extern crate proc_macro_with_span;\n "}, {"sha": "49b2dde3f1e8c9e29183085da6850cc6f6c67e11", "filename": "tests/ui/default_trait_access.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fdefault_trait_access.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fdefault_trait_access.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdefault_trait_access.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -5,7 +5,7 @@ LL |     let s1: String = Default::default();\n    |                      ^^^^^^^^^^^^^^^^^^ help: try: `std::string::String::default()`\n    |\n note: the lint level is defined here\n-  --> $DIR/default_trait_access.rs:5:9\n+  --> $DIR/default_trait_access.rs:3:9\n    |\n LL | #![deny(clippy::default_trait_access)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "a9cc80aaaf623c81f85c79be05c1c8b93b6b6ecf", "filename": "tests/ui/eta.fixed", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Feta.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Feta.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feta.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,14 +1,14 @@\n // run-rustfix\n-\n+#![warn(clippy::redundant_closure, clippy::redundant_closure_for_method_calls)]\n+#![allow(unused)]\n #![allow(\n-    unused,\n-    clippy::no_effect,\n-    clippy::redundant_closure_call,\n+    clippy::needless_borrow,\n     clippy::needless_pass_by_value,\n+    clippy::no_effect,\n     clippy::option_map_unit_fn,\n-    clippy::needless_borrow\n+    clippy::redundant_closure_call,\n+    clippy::uninlined_format_args\n )]\n-#![warn(clippy::redundant_closure, clippy::redundant_closure_for_method_calls)]\n \n use std::path::{Path, PathBuf};\n "}, {"sha": "cc99906ccd6677e29488c732a9a5998842c7b542", "filename": "tests/ui/eta.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Feta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Feta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feta.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,14 +1,14 @@\n // run-rustfix\n-\n+#![warn(clippy::redundant_closure, clippy::redundant_closure_for_method_calls)]\n+#![allow(unused)]\n #![allow(\n-    unused,\n-    clippy::no_effect,\n-    clippy::redundant_closure_call,\n+    clippy::needless_borrow,\n     clippy::needless_pass_by_value,\n+    clippy::no_effect,\n     clippy::option_map_unit_fn,\n-    clippy::needless_borrow\n+    clippy::redundant_closure_call,\n+    clippy::uninlined_format_args\n )]\n-#![warn(clippy::redundant_closure, clippy::redundant_closure_for_method_calls)]\n \n use std::path::{Path, PathBuf};\n "}, {"sha": "c118403b77320c0d185b0854a8a24410e6a440d8", "filename": "tests/ui/expect_fun_call.fixed", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fexpect_fun_call.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fexpect_fun_call.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexpect_fun_call.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,7 +1,6 @@\n // run-rustfix\n-\n #![warn(clippy::expect_fun_call)]\n-#![allow(clippy::to_string_in_format_args)]\n+#![allow(clippy::to_string_in_format_args, clippy::uninlined_format_args)]\n \n /// Checks implementation of the `EXPECT_FUN_CALL` lint\n "}, {"sha": "7f4a8bc7aa68df97926346257e6004400e386230", "filename": "tests/ui/expect_fun_call.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fexpect_fun_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fexpect_fun_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexpect_fun_call.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,7 +1,6 @@\n // run-rustfix\n-\n #![warn(clippy::expect_fun_call)]\n-#![allow(clippy::to_string_in_format_args)]\n+#![allow(clippy::to_string_in_format_args, clippy::uninlined_format_args)]\n \n /// Checks implementation of the `EXPECT_FUN_CALL` lint\n "}, {"sha": "e76c03ecf16eff8278fccc9aca77b9e3999a030c", "filename": "tests/ui/expect_fun_call.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fexpect_fun_call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fexpect_fun_call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexpect_fun_call.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,79 +1,79 @@\n error: use of `expect` followed by a function call\n-  --> $DIR/expect_fun_call.rs:35:26\n+  --> $DIR/expect_fun_call.rs:34:26\n    |\n LL |     with_none_and_format.expect(&format!(\"Error {}: fake error\", error_code));\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| panic!(\"Error {}: fake error\", error_code))`\n    |\n    = note: `-D clippy::expect-fun-call` implied by `-D warnings`\n \n error: use of `expect` followed by a function call\n-  --> $DIR/expect_fun_call.rs:38:26\n+  --> $DIR/expect_fun_call.rs:37:26\n    |\n LL |     with_none_and_as_str.expect(format!(\"Error {}: fake error\", error_code).as_str());\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| panic!(\"Error {}: fake error\", error_code))`\n \n error: use of `expect` followed by a function call\n-  --> $DIR/expect_fun_call.rs:41:37\n+  --> $DIR/expect_fun_call.rs:40:37\n    |\n LL |     with_none_and_format_with_macro.expect(format!(\"Error {}: fake error\", one!()).as_str());\n    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| panic!(\"Error {}: fake error\", one!()))`\n \n error: use of `expect` followed by a function call\n-  --> $DIR/expect_fun_call.rs:51:25\n+  --> $DIR/expect_fun_call.rs:50:25\n    |\n LL |     with_err_and_format.expect(&format!(\"Error {}: fake error\", error_code));\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|_| panic!(\"Error {}: fake error\", error_code))`\n \n error: use of `expect` followed by a function call\n-  --> $DIR/expect_fun_call.rs:54:25\n+  --> $DIR/expect_fun_call.rs:53:25\n    |\n LL |     with_err_and_as_str.expect(format!(\"Error {}: fake error\", error_code).as_str());\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|_| panic!(\"Error {}: fake error\", error_code))`\n \n error: use of `expect` followed by a function call\n-  --> $DIR/expect_fun_call.rs:66:17\n+  --> $DIR/expect_fun_call.rs:65:17\n    |\n LL |     Some(\"foo\").expect(format!(\"{} {}\", 1, 2).as_ref());\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| panic!(\"{} {}\", 1, 2))`\n \n error: use of `expect` followed by a function call\n-  --> $DIR/expect_fun_call.rs:87:21\n+  --> $DIR/expect_fun_call.rs:86:21\n    |\n LL |         Some(\"foo\").expect(&get_string());\n    |                     ^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| { panic!(\"{}\", get_string()) })`\n \n error: use of `expect` followed by a function call\n-  --> $DIR/expect_fun_call.rs:88:21\n+  --> $DIR/expect_fun_call.rs:87:21\n    |\n LL |         Some(\"foo\").expect(get_string().as_ref());\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| { panic!(\"{}\", get_string()) })`\n \n error: use of `expect` followed by a function call\n-  --> $DIR/expect_fun_call.rs:89:21\n+  --> $DIR/expect_fun_call.rs:88:21\n    |\n LL |         Some(\"foo\").expect(get_string().as_str());\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| { panic!(\"{}\", get_string()) })`\n \n error: use of `expect` followed by a function call\n-  --> $DIR/expect_fun_call.rs:91:21\n+  --> $DIR/expect_fun_call.rs:90:21\n    |\n LL |         Some(\"foo\").expect(get_static_str());\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| { panic!(\"{}\", get_static_str()) })`\n \n error: use of `expect` followed by a function call\n-  --> $DIR/expect_fun_call.rs:92:21\n+  --> $DIR/expect_fun_call.rs:91:21\n    |\n LL |         Some(\"foo\").expect(get_non_static_str(&0));\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| { panic!(\"{}\", get_non_static_str(&0).to_string()) })`\n \n error: use of `expect` followed by a function call\n-  --> $DIR/expect_fun_call.rs:96:16\n+  --> $DIR/expect_fun_call.rs:95:16\n    |\n LL |     Some(true).expect(&format!(\"key {}, {}\", 1, 2));\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| panic!(\"key {}, {}\", 1, 2))`\n \n error: use of `expect` followed by a function call\n-  --> $DIR/expect_fun_call.rs:102:17\n+  --> $DIR/expect_fun_call.rs:101:17\n    |\n LL |         opt_ref.expect(&format!(\"{:?}\", opt_ref));\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| panic!(\"{:?}\", opt_ref))`"}, {"sha": "6eddc01e2c471215af0fa4584f5083e5a1eec796", "filename": "tests/ui/explicit_counter_loop.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fexplicit_counter_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fexplicit_counter_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_counter_loop.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,4 +1,5 @@\n #![warn(clippy::explicit_counter_loop)]\n+#![allow(clippy::uninlined_format_args)]\n \n fn main() {\n     let mut vec = vec![1, 2, 3, 4];"}, {"sha": "d3f3c626bbdfd4c96036fda93cbc46485c1ddbce", "filename": "tests/ui/explicit_counter_loop.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fexplicit_counter_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fexplicit_counter_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_counter_loop.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,55 +1,55 @@\n error: the variable `_index` is used as a loop counter\n-  --> $DIR/explicit_counter_loop.rs:6:5\n+  --> $DIR/explicit_counter_loop.rs:7:5\n    |\n LL |     for _v in &vec {\n    |     ^^^^^^^^^^^^^^ help: consider using: `for (_index, _v) in vec.iter().enumerate()`\n    |\n    = note: `-D clippy::explicit-counter-loop` implied by `-D warnings`\n \n error: the variable `_index` is used as a loop counter\n-  --> $DIR/explicit_counter_loop.rs:12:5\n+  --> $DIR/explicit_counter_loop.rs:13:5\n    |\n LL |     for _v in &vec {\n    |     ^^^^^^^^^^^^^^ help: consider using: `for (_index, _v) in vec.iter().enumerate()`\n \n error: the variable `_index` is used as a loop counter\n-  --> $DIR/explicit_counter_loop.rs:17:5\n+  --> $DIR/explicit_counter_loop.rs:18:5\n    |\n LL |     for _v in &mut vec {\n    |     ^^^^^^^^^^^^^^^^^^ help: consider using: `for (_index, _v) in vec.iter_mut().enumerate()`\n \n error: the variable `_index` is used as a loop counter\n-  --> $DIR/explicit_counter_loop.rs:22:5\n+  --> $DIR/explicit_counter_loop.rs:23:5\n    |\n LL |     for _v in vec {\n    |     ^^^^^^^^^^^^^ help: consider using: `for (_index, _v) in vec.into_iter().enumerate()`\n \n error: the variable `count` is used as a loop counter\n-  --> $DIR/explicit_counter_loop.rs:61:9\n+  --> $DIR/explicit_counter_loop.rs:62:9\n    |\n LL |         for ch in text.chars() {\n    |         ^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `for (count, ch) in text.chars().enumerate()`\n \n error: the variable `count` is used as a loop counter\n-  --> $DIR/explicit_counter_loop.rs:72:9\n+  --> $DIR/explicit_counter_loop.rs:73:9\n    |\n LL |         for ch in text.chars() {\n    |         ^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `for (count, ch) in text.chars().enumerate()`\n \n error: the variable `count` is used as a loop counter\n-  --> $DIR/explicit_counter_loop.rs:130:9\n+  --> $DIR/explicit_counter_loop.rs:131:9\n    |\n LL |         for _i in 3..10 {\n    |         ^^^^^^^^^^^^^^^ help: consider using: `for (count, _i) in (3..10).enumerate()`\n \n error: the variable `idx_usize` is used as a loop counter\n-  --> $DIR/explicit_counter_loop.rs:170:9\n+  --> $DIR/explicit_counter_loop.rs:171:9\n    |\n LL |         for _item in slice {\n    |         ^^^^^^^^^^^^^^^^^^ help: consider using: `for (idx_usize, _item) in slice.iter().enumerate()`\n \n error: the variable `idx_u32` is used as a loop counter\n-  --> $DIR/explicit_counter_loop.rs:182:9\n+  --> $DIR/explicit_counter_loop.rs:183:9\n    |\n LL |         for _item in slice {\n    |         ^^^^^^^^^^^^^^^^^^ help: consider using: `for (idx_u32, _item) in (0_u32..).zip(slice.iter())`"}, {"sha": "6d32bbece1e57ad96397b0269d391c0e39edbed9", "filename": "tests/ui/explicit_deref_methods.fixed", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fexplicit_deref_methods.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fexplicit_deref_methods.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_deref_methods.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,13 +1,13 @@\n // run-rustfix\n-\n+#![warn(clippy::explicit_deref_methods)]\n+#![allow(unused_variables)]\n #![allow(\n-    unused_variables,\n+    clippy::borrow_deref_ref,\n     clippy::clone_double_ref,\n+    clippy::explicit_auto_deref,\n     clippy::needless_borrow,\n-    clippy::borrow_deref_ref,\n-    clippy::explicit_auto_deref\n+    clippy::uninlined_format_args\n )]\n-#![warn(clippy::explicit_deref_methods)]\n \n use std::ops::{Deref, DerefMut};\n "}, {"sha": "779909e42380c79b6464e37773a474f8604136bf", "filename": "tests/ui/explicit_deref_methods.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fexplicit_deref_methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fexplicit_deref_methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_deref_methods.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,13 +1,13 @@\n // run-rustfix\n-\n+#![warn(clippy::explicit_deref_methods)]\n+#![allow(unused_variables)]\n #![allow(\n-    unused_variables,\n+    clippy::borrow_deref_ref,\n     clippy::clone_double_ref,\n+    clippy::explicit_auto_deref,\n     clippy::needless_borrow,\n-    clippy::borrow_deref_ref,\n-    clippy::explicit_auto_deref\n+    clippy::uninlined_format_args\n )]\n-#![warn(clippy::explicit_deref_methods)]\n \n use std::ops::{Deref, DerefMut};\n "}, {"sha": "862c3fea9ee82aa9baf2448904469ce806e05537", "filename": "tests/ui/explicit_write.fixed", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fexplicit_write.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fexplicit_write.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_write.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,6 +1,7 @@\n // run-rustfix\n-#![allow(unused_imports)]\n #![warn(clippy::explicit_write)]\n+#![allow(unused_imports)]\n+#![allow(clippy::uninlined_format_args)]\n \n fn stdout() -> String {\n     String::new()"}, {"sha": "41d7c2255738c79f8b380cbbfb928e9e085961c1", "filename": "tests/ui/explicit_write.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fexplicit_write.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fexplicit_write.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_write.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,6 +1,7 @@\n // run-rustfix\n-#![allow(unused_imports)]\n #![warn(clippy::explicit_write)]\n+#![allow(unused_imports)]\n+#![allow(clippy::uninlined_format_args)]\n \n fn stdout() -> String {\n     String::new()"}, {"sha": "457e9c6271809a9820bed648c1f2c5533ac05610", "filename": "tests/ui/explicit_write.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fexplicit_write.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fexplicit_write.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_write.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,79 +1,79 @@\n error: use of `write!(stdout(), ...).unwrap()`\n-  --> $DIR/explicit_write.rs:23:9\n+  --> $DIR/explicit_write.rs:24:9\n    |\n LL |         write!(std::io::stdout(), \"test\").unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `print!(\"test\")`\n    |\n    = note: `-D clippy::explicit-write` implied by `-D warnings`\n \n error: use of `write!(stderr(), ...).unwrap()`\n-  --> $DIR/explicit_write.rs:24:9\n+  --> $DIR/explicit_write.rs:25:9\n    |\n LL |         write!(std::io::stderr(), \"test\").unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `eprint!(\"test\")`\n \n error: use of `writeln!(stdout(), ...).unwrap()`\n-  --> $DIR/explicit_write.rs:25:9\n+  --> $DIR/explicit_write.rs:26:9\n    |\n LL |         writeln!(std::io::stdout(), \"test\").unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `println!(\"test\")`\n \n error: use of `writeln!(stderr(), ...).unwrap()`\n-  --> $DIR/explicit_write.rs:26:9\n+  --> $DIR/explicit_write.rs:27:9\n    |\n LL |         writeln!(std::io::stderr(), \"test\").unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `eprintln!(\"test\")`\n \n error: use of `stdout().write_fmt(...).unwrap()`\n-  --> $DIR/explicit_write.rs:27:9\n+  --> $DIR/explicit_write.rs:28:9\n    |\n LL |         std::io::stdout().write_fmt(format_args!(\"test\")).unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `print!(\"test\")`\n \n error: use of `stderr().write_fmt(...).unwrap()`\n-  --> $DIR/explicit_write.rs:28:9\n+  --> $DIR/explicit_write.rs:29:9\n    |\n LL |         std::io::stderr().write_fmt(format_args!(\"test\")).unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `eprint!(\"test\")`\n \n error: use of `writeln!(stdout(), ...).unwrap()`\n-  --> $DIR/explicit_write.rs:31:9\n+  --> $DIR/explicit_write.rs:32:9\n    |\n LL |         writeln!(std::io::stdout(), \"test/ntest\").unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `println!(\"test/ntest\")`\n \n error: use of `writeln!(stderr(), ...).unwrap()`\n-  --> $DIR/explicit_write.rs:32:9\n+  --> $DIR/explicit_write.rs:33:9\n    |\n LL |         writeln!(std::io::stderr(), \"test/ntest\").unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `eprintln!(\"test/ntest\")`\n \n error: use of `writeln!(stderr(), ...).unwrap()`\n-  --> $DIR/explicit_write.rs:35:9\n+  --> $DIR/explicit_write.rs:36:9\n    |\n LL |         writeln!(std::io::stderr(), \"with {}\", value).unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `eprintln!(\"with {}\", value)`\n \n error: use of `writeln!(stderr(), ...).unwrap()`\n-  --> $DIR/explicit_write.rs:36:9\n+  --> $DIR/explicit_write.rs:37:9\n    |\n LL |         writeln!(std::io::stderr(), \"with {} {}\", 2, value).unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `eprintln!(\"with {} {}\", 2, value)`\n \n error: use of `writeln!(stderr(), ...).unwrap()`\n-  --> $DIR/explicit_write.rs:37:9\n+  --> $DIR/explicit_write.rs:38:9\n    |\n LL |         writeln!(std::io::stderr(), \"with {value}\").unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `eprintln!(\"with {value}\")`\n \n error: use of `writeln!(stderr(), ...).unwrap()`\n-  --> $DIR/explicit_write.rs:38:9\n+  --> $DIR/explicit_write.rs:39:9\n    |\n LL |         writeln!(std::io::stderr(), \"macro arg {}\", one!()).unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `eprintln!(\"macro arg {}\", one!())`\n \n error: use of `writeln!(stderr(), ...).unwrap()`\n-  --> $DIR/explicit_write.rs:40:9\n+  --> $DIR/explicit_write.rs:41:9\n    |\n LL |         writeln!(std::io::stderr(), \"{:w$}\", value, w = width).unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `eprintln!(\"{:w$}\", value, w = width)`"}, {"sha": "fb6e8ec706b17b478214f015a4670b0f5ff9f54c", "filename": "tests/ui/fallible_impl_from.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Ffallible_impl_from.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Ffallible_impl_from.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffallible_impl_from.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,4 +1,5 @@\n #![deny(clippy::fallible_impl_from)]\n+#![allow(clippy::uninlined_format_args)]\n \n // docs example\n struct Foo(i32);"}, {"sha": "47bdd4e84c839d884cda55ace02db2b6a878f8c7", "filename": "tests/ui/fallible_impl_from.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Ffallible_impl_from.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Ffallible_impl_from.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffallible_impl_from.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: consider implementing `TryFrom` instead\n-  --> $DIR/fallible_impl_from.rs:5:1\n+  --> $DIR/fallible_impl_from.rs:6:1\n    |\n LL | / impl From<String> for Foo {\n LL | |     fn from(s: String) -> Self {\n@@ -15,13 +15,13 @@ LL | #![deny(clippy::fallible_impl_from)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: `From` is intended for infallible conversions only. Use `TryFrom` if there's a possibility for the conversion to fail\n note: potential failure(s)\n-  --> $DIR/fallible_impl_from.rs:7:13\n+  --> $DIR/fallible_impl_from.rs:8:13\n    |\n LL |         Foo(s.parse().unwrap())\n    |             ^^^^^^^^^^^^^^^^^^\n \n error: consider implementing `TryFrom` instead\n-  --> $DIR/fallible_impl_from.rs:26:1\n+  --> $DIR/fallible_impl_from.rs:27:1\n    |\n LL | / impl From<usize> for Invalid {\n LL | |     fn from(i: usize) -> Invalid {\n@@ -34,14 +34,14 @@ LL | | }\n    |\n    = help: `From` is intended for infallible conversions only. Use `TryFrom` if there's a possibility for the conversion to fail\n note: potential failure(s)\n-  --> $DIR/fallible_impl_from.rs:29:13\n+  --> $DIR/fallible_impl_from.rs:30:13\n    |\n LL |             panic!();\n    |             ^^^^^^^^\n    = note: this error originates in the macro `$crate::panic::panic_2021` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: consider implementing `TryFrom` instead\n-  --> $DIR/fallible_impl_from.rs:35:1\n+  --> $DIR/fallible_impl_from.rs:36:1\n    |\n LL | / impl From<Option<String>> for Invalid {\n LL | |     fn from(s: Option<String>) -> Invalid {\n@@ -54,7 +54,7 @@ LL | | }\n    |\n    = help: `From` is intended for infallible conversions only. Use `TryFrom` if there's a possibility for the conversion to fail\n note: potential failure(s)\n-  --> $DIR/fallible_impl_from.rs:37:17\n+  --> $DIR/fallible_impl_from.rs:38:17\n    |\n LL |         let s = s.unwrap();\n    |                 ^^^^^^^^^^\n@@ -68,7 +68,7 @@ LL |             panic!(\"{:?}\", s);\n    = note: this error originates in the macro `$crate::panic::panic_2021` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: consider implementing `TryFrom` instead\n-  --> $DIR/fallible_impl_from.rs:53:1\n+  --> $DIR/fallible_impl_from.rs:54:1\n    |\n LL | / impl<'a> From<&'a mut <Box<u32> as ProjStrTrait>::ProjString> for Invalid {\n LL | |     fn from(s: &'a mut <Box<u32> as ProjStrTrait>::ProjString) -> Invalid {\n@@ -81,7 +81,7 @@ LL | | }\n    |\n    = help: `From` is intended for infallible conversions only. Use `TryFrom` if there's a possibility for the conversion to fail\n note: potential failure(s)\n-  --> $DIR/fallible_impl_from.rs:55:12\n+  --> $DIR/fallible_impl_from.rs:56:12\n    |\n LL |         if s.parse::<u32>().ok().unwrap() != 42 {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "e9dd38fe40e65bf5c87201f24a77784a7152ee3d", "filename": "tests/ui/for_loop_fixable.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Ffor_loop_fixable.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Ffor_loop_fixable.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loop_fixable.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,6 +1,6 @@\n // run-rustfix\n-\n #![allow(dead_code, unused)]\n+#![allow(clippy::uninlined_format_args)]\n \n use std::collections::*;\n "}, {"sha": "534fb4dd4ef288111a352c80c7cbbc482bb24189", "filename": "tests/ui/for_loop_fixable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Ffor_loop_fixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Ffor_loop_fixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loop_fixable.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,6 +1,6 @@\n // run-rustfix\n-\n #![allow(dead_code, unused)]\n+#![allow(clippy::uninlined_format_args)]\n \n use std::collections::*;\n "}, {"sha": "4b2a9297d084eba02835154bcc81789962cb3f03", "filename": "tests/ui/for_loops_over_fallibles.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Ffor_loops_over_fallibles.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Ffor_loops_over_fallibles.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loops_over_fallibles.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,4 +1,5 @@\n #![warn(clippy::for_loops_over_fallibles)]\n+#![allow(clippy::uninlined_format_args)]\n \n fn for_loops_over_fallibles() {\n     let option = Some(1);"}, {"sha": "5f5a81d24cfde5173762ad93882d5ba667200984", "filename": "tests/ui/for_loops_over_fallibles.stderr", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Ffor_loops_over_fallibles.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Ffor_loops_over_fallibles.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loops_over_fallibles.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: for loop over `option`, which is an `Option`. This is more readably written as an `if let` statement\n-  --> $DIR/for_loops_over_fallibles.rs:9:14\n+  --> $DIR/for_loops_over_fallibles.rs:10:14\n    |\n LL |     for x in option {\n    |              ^^^^^^\n@@ -8,71 +8,71 @@ LL |     for x in option {\n    = help: consider replacing `for x in option` with `if let Some(x) = option`\n \n error: for loop over `option`, which is an `Option`. This is more readably written as an `if let` statement\n-  --> $DIR/for_loops_over_fallibles.rs:14:14\n+  --> $DIR/for_loops_over_fallibles.rs:15:14\n    |\n LL |     for x in option.iter() {\n    |              ^^^^^^\n    |\n    = help: consider replacing `for x in option.iter()` with `if let Some(x) = option`\n \n error: for loop over `result`, which is a `Result`. This is more readably written as an `if let` statement\n-  --> $DIR/for_loops_over_fallibles.rs:19:14\n+  --> $DIR/for_loops_over_fallibles.rs:20:14\n    |\n LL |     for x in result {\n    |              ^^^^^^\n    |\n    = help: consider replacing `for x in result` with `if let Ok(x) = result`\n \n error: for loop over `result`, which is a `Result`. This is more readably written as an `if let` statement\n-  --> $DIR/for_loops_over_fallibles.rs:24:14\n+  --> $DIR/for_loops_over_fallibles.rs:25:14\n    |\n LL |     for x in result.iter_mut() {\n    |              ^^^^^^\n    |\n    = help: consider replacing `for x in result.iter_mut()` with `if let Ok(x) = result`\n \n error: for loop over `result`, which is a `Result`. This is more readably written as an `if let` statement\n-  --> $DIR/for_loops_over_fallibles.rs:29:14\n+  --> $DIR/for_loops_over_fallibles.rs:30:14\n    |\n LL |     for x in result.into_iter() {\n    |              ^^^^^^\n    |\n    = help: consider replacing `for x in result.into_iter()` with `if let Ok(x) = result`\n \n error: for loop over `option.ok_or(\"x not found\")`, which is a `Result`. This is more readably written as an `if let` statement\n-  --> $DIR/for_loops_over_fallibles.rs:33:14\n+  --> $DIR/for_loops_over_fallibles.rs:34:14\n    |\n LL |     for x in option.ok_or(\"x not found\") {\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider replacing `for x in option.ok_or(\"x not found\")` with `if let Ok(x) = option.ok_or(\"x not found\")`\n \n error: you are iterating over `Iterator::next()` which is an Option; this will compile but is probably not what you want\n-  --> $DIR/for_loops_over_fallibles.rs:39:14\n+  --> $DIR/for_loops_over_fallibles.rs:40:14\n    |\n LL |     for x in v.iter().next() {\n    |              ^^^^^^^^^^^^^^^\n    |\n    = note: `#[deny(clippy::iter_next_loop)]` on by default\n \n error: for loop over `v.iter().next().and(Some(0))`, which is an `Option`. This is more readably written as an `if let` statement\n-  --> $DIR/for_loops_over_fallibles.rs:44:14\n+  --> $DIR/for_loops_over_fallibles.rs:45:14\n    |\n LL |     for x in v.iter().next().and(Some(0)) {\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider replacing `for x in v.iter().next().and(Some(0))` with `if let Some(x) = v.iter().next().and(Some(0))`\n \n error: for loop over `v.iter().next().ok_or(\"x not found\")`, which is a `Result`. This is more readably written as an `if let` statement\n-  --> $DIR/for_loops_over_fallibles.rs:48:14\n+  --> $DIR/for_loops_over_fallibles.rs:49:14\n    |\n LL |     for x in v.iter().next().ok_or(\"x not found\") {\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider replacing `for x in v.iter().next().ok_or(\"x not found\")` with `if let Ok(x) = v.iter().next().ok_or(\"x not found\")`\n \n error: this loop never actually loops\n-  --> $DIR/for_loops_over_fallibles.rs:60:5\n+  --> $DIR/for_loops_over_fallibles.rs:61:5\n    |\n LL | /     while let Some(x) = option {\n LL | |         println!(\"{}\", x);\n@@ -83,7 +83,7 @@ LL | |     }\n    = note: `#[deny(clippy::never_loop)]` on by default\n \n error: this loop never actually loops\n-  --> $DIR/for_loops_over_fallibles.rs:66:5\n+  --> $DIR/for_loops_over_fallibles.rs:67:5\n    |\n LL | /     while let Ok(x) = result {\n LL | |         println!(\"{}\", x);"}, {"sha": "beedf2c1db292bf15364c86ca10947781493ba10", "filename": "tests/ui/format.fixed", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fformat.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fformat.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,13 +1,13 @@\n // run-rustfix\n-\n+#![warn(clippy::useless_format)]\n #![allow(\n     unused_tuple_struct_fields,\n     clippy::print_literal,\n     clippy::redundant_clone,\n     clippy::to_string_in_format_args,\n-    clippy::needless_borrow\n+    clippy::needless_borrow,\n+    clippy::uninlined_format_args\n )]\n-#![warn(clippy::useless_format)]\n \n struct Foo(pub String);\n "}, {"sha": "e805f18188989167cf0b7ed0aab8c7613c8e3fae", "filename": "tests/ui/format.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,13 +1,13 @@\n // run-rustfix\n-\n+#![warn(clippy::useless_format)]\n #![allow(\n     unused_tuple_struct_fields,\n     clippy::print_literal,\n     clippy::redundant_clone,\n     clippy::to_string_in_format_args,\n-    clippy::needless_borrow\n+    clippy::needless_borrow,\n+    clippy::uninlined_format_args\n )]\n-#![warn(clippy::useless_format)]\n \n struct Foo(pub String);\n "}, {"sha": "24cf0847dd5884fbb1cbf3b99b5550a3ef99d05c", "filename": "tests/ui/format_args.fixed", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fformat_args.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fformat_args.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat_args.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,10 +1,12 @@\n // run-rustfix\n-\n-#![allow(unused)]\n-#![allow(clippy::assertions_on_constants)]\n-#![allow(clippy::eq_op)]\n-#![allow(clippy::print_literal)]\n #![warn(clippy::to_string_in_format_args)]\n+#![allow(unused)]\n+#![allow(\n+    clippy::assertions_on_constants,\n+    clippy::eq_op,\n+    clippy::print_literal,\n+    clippy::uninlined_format_args\n+)]\n \n use std::io::{stdout, Write};\n use std::ops::Deref;"}, {"sha": "753babf0afdc74365c1dba75ad77d56b090b6323", "filename": "tests/ui/format_args.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fformat_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fformat_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat_args.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,10 +1,12 @@\n // run-rustfix\n-\n-#![allow(unused)]\n-#![allow(clippy::assertions_on_constants)]\n-#![allow(clippy::eq_op)]\n-#![allow(clippy::print_literal)]\n #![warn(clippy::to_string_in_format_args)]\n+#![allow(unused)]\n+#![allow(\n+    clippy::assertions_on_constants,\n+    clippy::eq_op,\n+    clippy::print_literal,\n+    clippy::uninlined_format_args\n+)]\n \n use std::io::{stdout, Write};\n use std::ops::Deref;"}, {"sha": "68b0bb9e089e1b83e50f1ce59fb0d279111c752f", "filename": "tests/ui/format_args.stderr", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fformat_args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fformat_args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat_args.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,139 +1,139 @@\n error: `to_string` applied to a type that implements `Display` in `format!` args\n-  --> $DIR/format_args.rs:74:72\n+  --> $DIR/format_args.rs:76:72\n    |\n LL |     let _ = format!(\"error: something failed at {}\", Location::caller().to_string());\n    |                                                                        ^^^^^^^^^^^^ help: remove this\n    |\n    = note: `-D clippy::to-string-in-format-args` implied by `-D warnings`\n \n error: `to_string` applied to a type that implements `Display` in `write!` args\n-  --> $DIR/format_args.rs:78:27\n+  --> $DIR/format_args.rs:80:27\n    |\n LL |         Location::caller().to_string()\n    |                           ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `writeln!` args\n-  --> $DIR/format_args.rs:83:27\n+  --> $DIR/format_args.rs:85:27\n    |\n LL |         Location::caller().to_string()\n    |                           ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `print!` args\n-  --> $DIR/format_args.rs:85:63\n+  --> $DIR/format_args.rs:87:63\n    |\n LL |     print!(\"error: something failed at {}\", Location::caller().to_string());\n    |                                                               ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `println!` args\n-  --> $DIR/format_args.rs:86:65\n+  --> $DIR/format_args.rs:88:65\n    |\n LL |     println!(\"error: something failed at {}\", Location::caller().to_string());\n    |                                                                 ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `eprint!` args\n-  --> $DIR/format_args.rs:87:64\n+  --> $DIR/format_args.rs:89:64\n    |\n LL |     eprint!(\"error: something failed at {}\", Location::caller().to_string());\n    |                                                                ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `eprintln!` args\n-  --> $DIR/format_args.rs:88:66\n+  --> $DIR/format_args.rs:90:66\n    |\n LL |     eprintln!(\"error: something failed at {}\", Location::caller().to_string());\n    |                                                                  ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `format_args!` args\n-  --> $DIR/format_args.rs:89:77\n+  --> $DIR/format_args.rs:91:77\n    |\n LL |     let _ = format_args!(\"error: something failed at {}\", Location::caller().to_string());\n    |                                                                             ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `assert!` args\n-  --> $DIR/format_args.rs:90:70\n+  --> $DIR/format_args.rs:92:70\n    |\n LL |     assert!(true, \"error: something failed at {}\", Location::caller().to_string());\n    |                                                                      ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `assert_eq!` args\n-  --> $DIR/format_args.rs:91:73\n+  --> $DIR/format_args.rs:93:73\n    |\n LL |     assert_eq!(0, 0, \"error: something failed at {}\", Location::caller().to_string());\n    |                                                                         ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `assert_ne!` args\n-  --> $DIR/format_args.rs:92:73\n+  --> $DIR/format_args.rs:94:73\n    |\n LL |     assert_ne!(0, 0, \"error: something failed at {}\", Location::caller().to_string());\n    |                                                                         ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `panic!` args\n-  --> $DIR/format_args.rs:93:63\n+  --> $DIR/format_args.rs:95:63\n    |\n LL |     panic!(\"error: something failed at {}\", Location::caller().to_string());\n    |                                                               ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `println!` args\n-  --> $DIR/format_args.rs:94:20\n+  --> $DIR/format_args.rs:96:20\n    |\n LL |     println!(\"{}\", X(1).to_string());\n    |                    ^^^^^^^^^^^^^^^^ help: use this: `*X(1)`\n \n error: `to_string` applied to a type that implements `Display` in `println!` args\n-  --> $DIR/format_args.rs:95:20\n+  --> $DIR/format_args.rs:97:20\n    |\n LL |     println!(\"{}\", Y(&X(1)).to_string());\n    |                    ^^^^^^^^^^^^^^^^^^^^ help: use this: `***Y(&X(1))`\n \n error: `to_string` applied to a type that implements `Display` in `println!` args\n-  --> $DIR/format_args.rs:96:24\n+  --> $DIR/format_args.rs:98:24\n    |\n LL |     println!(\"{}\", Z(1).to_string());\n    |                        ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `println!` args\n-  --> $DIR/format_args.rs:97:20\n+  --> $DIR/format_args.rs:99:20\n    |\n LL |     println!(\"{}\", x.to_string());\n    |                    ^^^^^^^^^^^^^ help: use this: `**x`\n \n error: `to_string` applied to a type that implements `Display` in `println!` args\n-  --> $DIR/format_args.rs:98:20\n+  --> $DIR/format_args.rs:100:20\n    |\n LL |     println!(\"{}\", x_ref.to_string());\n    |                    ^^^^^^^^^^^^^^^^^ help: use this: `***x_ref`\n \n error: `to_string` applied to a type that implements `Display` in `println!` args\n-  --> $DIR/format_args.rs:100:39\n+  --> $DIR/format_args.rs:102:39\n    |\n LL |     println!(\"{foo}{bar}\", foo = \"foo\".to_string(), bar = \"bar\");\n    |                                       ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `println!` args\n-  --> $DIR/format_args.rs:101:52\n+  --> $DIR/format_args.rs:103:52\n    |\n LL |     println!(\"{foo}{bar}\", foo = \"foo\", bar = \"bar\".to_string());\n    |                                                    ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `println!` args\n-  --> $DIR/format_args.rs:102:39\n+  --> $DIR/format_args.rs:104:39\n    |\n LL |     println!(\"{foo}{bar}\", bar = \"bar\".to_string(), foo = \"foo\");\n    |                                       ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `println!` args\n-  --> $DIR/format_args.rs:103:52\n+  --> $DIR/format_args.rs:105:52\n    |\n LL |     println!(\"{foo}{bar}\", bar = \"bar\", foo = \"foo\".to_string());\n    |                                                    ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `format!` args\n-  --> $DIR/format_args.rs:142:38\n+  --> $DIR/format_args.rs:144:38\n    |\n LL |         let x = format!(\"{} {}\", a, b.to_string());\n    |                                      ^^^^^^^^^^^^ help: remove this\n \n error: `to_string` applied to a type that implements `Display` in `println!` args\n-  --> $DIR/format_args.rs:156:24\n+  --> $DIR/format_args.rs:158:24\n    |\n LL |         println!(\"{}\", original[..10].to_string());\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use this: `&original[..10]`"}, {"sha": "eb0ac15bfbf12b2896a4860cded03014b43fcb1d", "filename": "tests/ui/format_args_unfixable.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fformat_args_unfixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fformat_args_unfixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat_args_unfixable.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,7 +1,5 @@\n-#![allow(clippy::assertions_on_constants)]\n-#![allow(clippy::eq_op)]\n-#![warn(clippy::format_in_format_args)]\n-#![warn(clippy::to_string_in_format_args)]\n+#![warn(clippy::format_in_format_args, clippy::to_string_in_format_args)]\n+#![allow(clippy::assertions_on_constants, clippy::eq_op, clippy::uninlined_format_args)]\n \n use std::io::{stdout, Error, ErrorKind, Write};\n use std::ops::Deref;"}, {"sha": "10e03b6975df43e07843a830cbb606dc4d9d7032", "filename": "tests/ui/format_args_unfixable.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fformat_args_unfixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fformat_args_unfixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat_args_unfixable.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: `format!` in `println!` args\n-  --> $DIR/format_args_unfixable.rs:27:5\n+  --> $DIR/format_args_unfixable.rs:25:5\n    |\n LL |     println!(\"error: {}\", format!(\"something failed at {}\", Location::caller()));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -9,7 +9,7 @@ LL |     println!(\"error: {}\", format!(\"something failed at {}\", Location::calle\n    = help: or consider changing `format!` to `format_args!`\n \n error: `format!` in `println!` args\n-  --> $DIR/format_args_unfixable.rs:28:5\n+  --> $DIR/format_args_unfixable.rs:26:5\n    |\n LL |     println!(\"{}: {}\", error, format!(\"something failed at {}\", Location::caller()));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -18,7 +18,7 @@ LL |     println!(\"{}: {}\", error, format!(\"something failed at {}\", Location::c\n    = help: or consider changing `format!` to `format_args!`\n \n error: `format!` in `println!` args\n-  --> $DIR/format_args_unfixable.rs:29:5\n+  --> $DIR/format_args_unfixable.rs:27:5\n    |\n LL |     println!(\"{:?}: {}\", error, format!(\"something failed at {}\", Location::caller()));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -27,7 +27,7 @@ LL |     println!(\"{:?}: {}\", error, format!(\"something failed at {}\", Location:\n    = help: or consider changing `format!` to `format_args!`\n \n error: `format!` in `println!` args\n-  --> $DIR/format_args_unfixable.rs:30:5\n+  --> $DIR/format_args_unfixable.rs:28:5\n    |\n LL |     println!(\"{{}}: {}\", format!(\"something failed at {}\", Location::caller()));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -36,7 +36,7 @@ LL |     println!(\"{{}}: {}\", format!(\"something failed at {}\", Location::caller\n    = help: or consider changing `format!` to `format_args!`\n \n error: `format!` in `println!` args\n-  --> $DIR/format_args_unfixable.rs:31:5\n+  --> $DIR/format_args_unfixable.rs:29:5\n    |\n LL |     println!(r#\"error: \"{}\"\"#, format!(\"something failed at {}\", Location::caller()));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -45,7 +45,7 @@ LL |     println!(r#\"error: \"{}\"\"#, format!(\"something failed at {}\", Location::\n    = help: or consider changing `format!` to `format_args!`\n \n error: `format!` in `println!` args\n-  --> $DIR/format_args_unfixable.rs:32:5\n+  --> $DIR/format_args_unfixable.rs:30:5\n    |\n LL |     println!(\"error: {}\", format!(r#\"something failed at \"{}\"\"#, Location::caller()));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -54,7 +54,7 @@ LL |     println!(\"error: {}\", format!(r#\"something failed at \"{}\"\"#, Location::\n    = help: or consider changing `format!` to `format_args!`\n \n error: `format!` in `println!` args\n-  --> $DIR/format_args_unfixable.rs:33:5\n+  --> $DIR/format_args_unfixable.rs:31:5\n    |\n LL |     println!(\"error: {}\", format!(\"something failed at {} {0}\", Location::caller()));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -63,7 +63,7 @@ LL |     println!(\"error: {}\", format!(\"something failed at {} {0}\", Location::c\n    = help: or consider changing `format!` to `format_args!`\n \n error: `format!` in `format!` args\n-  --> $DIR/format_args_unfixable.rs:34:13\n+  --> $DIR/format_args_unfixable.rs:32:13\n    |\n LL |     let _ = format!(\"error: {}\", format!(\"something failed at {}\", Location::caller()));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -72,7 +72,7 @@ LL |     let _ = format!(\"error: {}\", format!(\"something failed at {}\", Location\n    = help: or consider changing `format!` to `format_args!`\n \n error: `format!` in `write!` args\n-  --> $DIR/format_args_unfixable.rs:35:13\n+  --> $DIR/format_args_unfixable.rs:33:13\n    |\n LL |       let _ = write!(\n    |  _____________^\n@@ -86,7 +86,7 @@ LL | |     );\n    = help: or consider changing `format!` to `format_args!`\n \n error: `format!` in `writeln!` args\n-  --> $DIR/format_args_unfixable.rs:40:13\n+  --> $DIR/format_args_unfixable.rs:38:13\n    |\n LL |       let _ = writeln!(\n    |  _____________^\n@@ -100,7 +100,7 @@ LL | |     );\n    = help: or consider changing `format!` to `format_args!`\n \n error: `format!` in `print!` args\n-  --> $DIR/format_args_unfixable.rs:45:5\n+  --> $DIR/format_args_unfixable.rs:43:5\n    |\n LL |     print!(\"error: {}\", format!(\"something failed at {}\", Location::caller()));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -109,7 +109,7 @@ LL |     print!(\"error: {}\", format!(\"something failed at {}\", Location::caller(\n    = help: or consider changing `format!` to `format_args!`\n \n error: `format!` in `eprint!` args\n-  --> $DIR/format_args_unfixable.rs:46:5\n+  --> $DIR/format_args_unfixable.rs:44:5\n    |\n LL |     eprint!(\"error: {}\", format!(\"something failed at {}\", Location::caller()));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -118,7 +118,7 @@ LL |     eprint!(\"error: {}\", format!(\"something failed at {}\", Location::caller\n    = help: or consider changing `format!` to `format_args!`\n \n error: `format!` in `eprintln!` args\n-  --> $DIR/format_args_unfixable.rs:47:5\n+  --> $DIR/format_args_unfixable.rs:45:5\n    |\n LL |     eprintln!(\"error: {}\", format!(\"something failed at {}\", Location::caller()));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -127,7 +127,7 @@ LL |     eprintln!(\"error: {}\", format!(\"something failed at {}\", Location::call\n    = help: or consider changing `format!` to `format_args!`\n \n error: `format!` in `format_args!` args\n-  --> $DIR/format_args_unfixable.rs:48:13\n+  --> $DIR/format_args_unfixable.rs:46:13\n    |\n LL |     let _ = format_args!(\"error: {}\", format!(\"something failed at {}\", Location::caller()));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -136,7 +136,7 @@ LL |     let _ = format_args!(\"error: {}\", format!(\"something failed at {}\", Loc\n    = help: or consider changing `format!` to `format_args!`\n \n error: `format!` in `assert!` args\n-  --> $DIR/format_args_unfixable.rs:49:5\n+  --> $DIR/format_args_unfixable.rs:47:5\n    |\n LL |     assert!(true, \"error: {}\", format!(\"something failed at {}\", Location::caller()));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -145,7 +145,7 @@ LL |     assert!(true, \"error: {}\", format!(\"something failed at {}\", Location::\n    = help: or consider changing `format!` to `format_args!`\n \n error: `format!` in `assert_eq!` args\n-  --> $DIR/format_args_unfixable.rs:50:5\n+  --> $DIR/format_args_unfixable.rs:48:5\n    |\n LL |     assert_eq!(0, 0, \"error: {}\", format!(\"something failed at {}\", Location::caller()));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -154,7 +154,7 @@ LL |     assert_eq!(0, 0, \"error: {}\", format!(\"something failed at {}\", Locatio\n    = help: or consider changing `format!` to `format_args!`\n \n error: `format!` in `assert_ne!` args\n-  --> $DIR/format_args_unfixable.rs:51:5\n+  --> $DIR/format_args_unfixable.rs:49:5\n    |\n LL |     assert_ne!(0, 0, \"error: {}\", format!(\"something failed at {}\", Location::caller()));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -163,7 +163,7 @@ LL |     assert_ne!(0, 0, \"error: {}\", format!(\"something failed at {}\", Locatio\n    = help: or consider changing `format!` to `format_args!`\n \n error: `format!` in `panic!` args\n-  --> $DIR/format_args_unfixable.rs:52:5\n+  --> $DIR/format_args_unfixable.rs:50:5\n    |\n LL |     panic!(\"error: {}\", format!(\"something failed at {}\", Location::caller()));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "18149bfbc3fe0c4da555de4ff6edb0ceafbebfad", "filename": "tests/ui/functions.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffunctions.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,6 +1,6 @@\n #![warn(clippy::all)]\n-#![allow(dead_code)]\n-#![allow(unused_unsafe, clippy::missing_safety_doc)]\n+#![allow(dead_code, unused_unsafe)]\n+#![allow(clippy::missing_safety_doc, clippy::uninlined_format_args)]\n \n // TOO_MANY_ARGUMENTS\n fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}"}, {"sha": "e7b9a78c5dbc3e3fdf95f0aa971f8c128b672e23", "filename": "tests/ui/identity_op.fixed", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fidentity_op.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fidentity_op.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fidentity_op.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,13 +1,13 @@\n // run-rustfix\n-\n #![warn(clippy::identity_op)]\n+#![allow(unused)]\n #![allow(\n     clippy::eq_op,\n     clippy::no_effect,\n     clippy::unnecessary_operation,\n     clippy::op_ref,\n     clippy::double_parens,\n-    unused\n+    clippy::uninlined_format_args\n )]\n \n use std::fmt::Write as _;"}, {"sha": "9a435cdbb753f34dca293efde32429b27817e88f", "filename": "tests/ui/identity_op.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fidentity_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fidentity_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fidentity_op.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,13 +1,13 @@\n // run-rustfix\n-\n #![warn(clippy::identity_op)]\n+#![allow(unused)]\n #![allow(\n     clippy::eq_op,\n     clippy::no_effect,\n     clippy::unnecessary_operation,\n     clippy::op_ref,\n     clippy::double_parens,\n-    unused\n+    clippy::uninlined_format_args\n )]\n \n use std::fmt::Write as _;"}, {"sha": "0a3374d11b03fa7c0e51a60391cd50e264715904", "filename": "tests/ui/index_refutable_slice/if_let_slice_binding.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Findex_refutable_slice%2Fif_let_slice_binding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Findex_refutable_slice%2Fif_let_slice_binding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Findex_refutable_slice%2Fif_let_slice_binding.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,4 +1,5 @@\n #![deny(clippy::index_refutable_slice)]\n+#![allow(clippy::uninlined_format_args)]\n \n enum SomeEnum<T> {\n     One(T),"}, {"sha": "0a13ac1354e57b1cc209daccfa5368a53dbc57e7", "filename": "tests/ui/index_refutable_slice/if_let_slice_binding.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Findex_refutable_slice%2Fif_let_slice_binding.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Findex_refutable_slice%2Fif_let_slice_binding.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Findex_refutable_slice%2Fif_let_slice_binding.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: this binding can be a slice pattern to avoid indexing\n-  --> $DIR/if_let_slice_binding.rs:13:17\n+  --> $DIR/if_let_slice_binding.rs:14:17\n    |\n LL |     if let Some(slice) = slice {\n    |                 ^^^^^\n@@ -19,7 +19,7 @@ LL |         println!(\"{}\", slice_0);\n    |                        ~~~~~~~\n \n error: this binding can be a slice pattern to avoid indexing\n-  --> $DIR/if_let_slice_binding.rs:19:17\n+  --> $DIR/if_let_slice_binding.rs:20:17\n    |\n LL |     if let Some(slice) = slice {\n    |                 ^^^^^\n@@ -34,7 +34,7 @@ LL |         println!(\"{}\", slice_0);\n    |                        ~~~~~~~\n \n error: this binding can be a slice pattern to avoid indexing\n-  --> $DIR/if_let_slice_binding.rs:25:17\n+  --> $DIR/if_let_slice_binding.rs:26:17\n    |\n LL |     if let Some(slice) = slice {\n    |                 ^^^^^\n@@ -50,7 +50,7 @@ LL ~         println!(\"{}\", slice_0);\n    |\n \n error: this binding can be a slice pattern to avoid indexing\n-  --> $DIR/if_let_slice_binding.rs:32:26\n+  --> $DIR/if_let_slice_binding.rs:33:26\n    |\n LL |     if let SomeEnum::One(slice) | SomeEnum::Three(slice) = slice_wrapped {\n    |                          ^^^^^\n@@ -65,7 +65,7 @@ LL |         println!(\"{}\", slice_0);\n    |                        ~~~~~~~\n \n error: this binding can be a slice pattern to avoid indexing\n-  --> $DIR/if_let_slice_binding.rs:39:29\n+  --> $DIR/if_let_slice_binding.rs:40:29\n    |\n LL |     if let (SomeEnum::Three(a), Some(b)) = (a_wrapped, b_wrapped) {\n    |                             ^\n@@ -80,7 +80,7 @@ LL |         println!(\"{} -> {}\", a_2, b[1]);\n    |                              ~~~\n \n error: this binding can be a slice pattern to avoid indexing\n-  --> $DIR/if_let_slice_binding.rs:39:38\n+  --> $DIR/if_let_slice_binding.rs:40:38\n    |\n LL |     if let (SomeEnum::Three(a), Some(b)) = (a_wrapped, b_wrapped) {\n    |                                      ^\n@@ -95,7 +95,7 @@ LL |         println!(\"{} -> {}\", a[2], b_1);\n    |                                    ~~~\n \n error: this binding can be a slice pattern to avoid indexing\n-  --> $DIR/if_let_slice_binding.rs:46:21\n+  --> $DIR/if_let_slice_binding.rs:47:21\n    |\n LL |     if let Some(ref slice) = slice {\n    |                     ^^^^^\n@@ -110,7 +110,7 @@ LL |         println!(\"{:?}\", slice_1);\n    |                          ~~~~~~~\n \n error: this binding can be a slice pattern to avoid indexing\n-  --> $DIR/if_let_slice_binding.rs:54:17\n+  --> $DIR/if_let_slice_binding.rs:55:17\n    |\n LL |     if let Some(slice) = &slice {\n    |                 ^^^^^\n@@ -125,7 +125,7 @@ LL |         println!(\"{:?}\", slice_0);\n    |                          ~~~~~~~\n \n error: this binding can be a slice pattern to avoid indexing\n-  --> $DIR/if_let_slice_binding.rs:123:17\n+  --> $DIR/if_let_slice_binding.rs:124:17\n    |\n LL |     if let Some(slice) = wrap.inner {\n    |                 ^^^^^\n@@ -140,7 +140,7 @@ LL |             println!(\"This is awesome! {}\", slice_0);\n    |                                             ~~~~~~~\n \n error: this binding can be a slice pattern to avoid indexing\n-  --> $DIR/if_let_slice_binding.rs:130:17\n+  --> $DIR/if_let_slice_binding.rs:131:17\n    |\n LL |     if let Some(slice) = wrap.inner {\n    |                 ^^^^^"}, {"sha": "622644f675d3537a336a11a8713e119811940230", "filename": "tests/ui/infinite_iter.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Finfinite_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Finfinite_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfinite_iter.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,3 +1,5 @@\n+#![allow(clippy::uninlined_format_args)]\n+\n use std::iter::repeat;\n fn square_is_lower_64(x: &u32) -> bool {\n     x * x < 64"}, {"sha": "b911163f715e75e1838b365b371b81c907b4804a", "filename": "tests/ui/infinite_iter.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Finfinite_iter.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Finfinite_iter.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfinite_iter.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,29 +1,29 @@\n error: infinite iteration detected\n-  --> $DIR/infinite_iter.rs:9:5\n+  --> $DIR/infinite_iter.rs:11:5\n    |\n LL |     repeat(0_u8).collect::<Vec<_>>(); // infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: the lint level is defined here\n-  --> $DIR/infinite_iter.rs:7:8\n+  --> $DIR/infinite_iter.rs:9:8\n    |\n LL | #[deny(clippy::infinite_iter)]\n    |        ^^^^^^^^^^^^^^^^^^^^^\n \n error: infinite iteration detected\n-  --> $DIR/infinite_iter.rs:10:5\n+  --> $DIR/infinite_iter.rs:12:5\n    |\n LL |     (0..8_u32).take_while(square_is_lower_64).cycle().count(); // infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: infinite iteration detected\n-  --> $DIR/infinite_iter.rs:11:5\n+  --> $DIR/infinite_iter.rs:13:5\n    |\n LL |     (0..8_u64).chain(0..).max(); // infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: infinite iteration detected\n-  --> $DIR/infinite_iter.rs:16:5\n+  --> $DIR/infinite_iter.rs:18:5\n    |\n LL | /     (0..8_u32)\n LL | |         .rev()\n@@ -33,37 +33,37 @@ LL | |         .for_each(|x| println!(\"{}\", x)); // infinite iter\n    | |________________________________________^\n \n error: infinite iteration detected\n-  --> $DIR/infinite_iter.rs:22:5\n+  --> $DIR/infinite_iter.rs:24:5\n    |\n LL |     (0_usize..).flat_map(|x| 0..x).product::<usize>(); // infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: infinite iteration detected\n-  --> $DIR/infinite_iter.rs:23:5\n+  --> $DIR/infinite_iter.rs:25:5\n    |\n LL |     (0_u64..).filter(|x| x % 2 == 0).last(); // infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: possible infinite iteration detected\n-  --> $DIR/infinite_iter.rs:30:5\n+  --> $DIR/infinite_iter.rs:32:5\n    |\n LL |     (0..).zip((0..).take_while(square_is_lower_64)).count(); // maybe infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: the lint level is defined here\n-  --> $DIR/infinite_iter.rs:28:8\n+  --> $DIR/infinite_iter.rs:30:8\n    |\n LL | #[deny(clippy::maybe_infinite_iter)]\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: possible infinite iteration detected\n-  --> $DIR/infinite_iter.rs:31:5\n+  --> $DIR/infinite_iter.rs:33:5\n    |\n LL |     repeat(42).take_while(|x| *x == 42).chain(0..42).max(); // maybe infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: possible infinite iteration detected\n-  --> $DIR/infinite_iter.rs:32:5\n+  --> $DIR/infinite_iter.rs:34:5\n    |\n LL | /     (1..)\n LL | |         .scan(0, |state, x| {\n@@ -74,31 +74,31 @@ LL | |         .min(); // maybe infinite iter\n    | |______________^\n \n error: possible infinite iteration detected\n-  --> $DIR/infinite_iter.rs:38:5\n+  --> $DIR/infinite_iter.rs:40:5\n    |\n LL |     (0..).find(|x| *x == 24); // maybe infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: possible infinite iteration detected\n-  --> $DIR/infinite_iter.rs:39:5\n+  --> $DIR/infinite_iter.rs:41:5\n    |\n LL |     (0..).position(|x| x == 24); // maybe infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: possible infinite iteration detected\n-  --> $DIR/infinite_iter.rs:40:5\n+  --> $DIR/infinite_iter.rs:42:5\n    |\n LL |     (0..).any(|x| x == 24); // maybe infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: possible infinite iteration detected\n-  --> $DIR/infinite_iter.rs:41:5\n+  --> $DIR/infinite_iter.rs:43:5\n    |\n LL |     (0..).all(|x| x == 24); // maybe infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: infinite iteration detected\n-  --> $DIR/infinite_iter.rs:63:31\n+  --> $DIR/infinite_iter.rs:65:31\n    |\n LL |         let _: HashSet<i32> = (0..).collect(); // Infinite iter\n    |                               ^^^^^^^^^^^^^^^"}, {"sha": "a73ee0fb2e5948386b34d2d45ac439d9c2dea95f", "filename": "tests/ui/issue_2356.fixed", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fissue_2356.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fissue_2356.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissue_2356.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,6 +1,7 @@\n // run-rustfix\n #![deny(clippy::while_let_on_iterator)]\n #![allow(unused_mut)]\n+#![allow(clippy::uninlined_format_args)]\n \n use std::iter::Iterator;\n "}, {"sha": "9dd9069609b1445462a796b634c3e21b0b61232f", "filename": "tests/ui/issue_2356.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fissue_2356.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fissue_2356.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissue_2356.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,6 +1,7 @@\n // run-rustfix\n #![deny(clippy::while_let_on_iterator)]\n #![allow(unused_mut)]\n+#![allow(clippy::uninlined_format_args)]\n \n use std::iter::Iterator;\n "}, {"sha": "a24b0b32e470875a7fe477882be0fa16253559b2", "filename": "tests/ui/issue_2356.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fissue_2356.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fissue_2356.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissue_2356.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: this loop could be written as a `for` loop\n-  --> $DIR/issue_2356.rs:17:9\n+  --> $DIR/issue_2356.rs:18:9\n    |\n LL |         while let Some(e) = it.next() {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for e in it`"}, {"sha": "8e0620e52b65fd6f5eb1c8f346ed264aad75d79a", "filename": "tests/ui/issue_4266.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fissue_4266.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fissue_4266.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissue_4266.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,4 +1,5 @@\n #![allow(dead_code)]\n+#![allow(clippy::uninlined_format_args)]\n \n async fn sink1<'a>(_: &'a str) {} // lint\n async fn sink1_elided(_: &str) {} // ok"}, {"sha": "a61253c641e081ad7ee1265315ec0258a1eecb07", "filename": "tests/ui/issue_4266.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fissue_4266.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fissue_4266.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissue_4266.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,19 +1,19 @@\n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-  --> $DIR/issue_4266.rs:3:1\n+  --> $DIR/issue_4266.rs:4:1\n    |\n LL | async fn sink1<'a>(_: &'a str) {} // lint\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::needless-lifetimes` implied by `-D warnings`\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-  --> $DIR/issue_4266.rs:7:1\n+  --> $DIR/issue_4266.rs:8:1\n    |\n LL | async fn one_to_one<'a>(s: &'a str) -> &'a str {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: methods called `new` usually take no `self`\n-  --> $DIR/issue_4266.rs:27:22\n+  --> $DIR/issue_4266.rs:28:22\n    |\n LL |     pub async fn new(&mut self) -> Self {\n    |                      ^^^^^^^^^"}, {"sha": "5e92dcab1f5a23eb8611d7dfaeb5e3e76f4cd094", "filename": "tests/ui/item_after_statement.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fitem_after_statement.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fitem_after_statement.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fitem_after_statement.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,4 +1,5 @@\n #![warn(clippy::items_after_statements)]\n+#![allow(clippy::uninlined_format_args)]\n \n fn ok() {\n     fn foo() {"}, {"sha": "2523c53ac53a184709542fdfa29f3519aceb5381", "filename": "tests/ui/item_after_statement.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fitem_after_statement.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fitem_after_statement.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fitem_after_statement.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: adding items after statements is confusing, since items exist from the start of the scope\n-  --> $DIR/item_after_statement.rs:12:5\n+  --> $DIR/item_after_statement.rs:13:5\n    |\n LL | /     fn foo() {\n LL | |         println!(\"foo\");\n@@ -9,15 +9,15 @@ LL | |     }\n    = note: `-D clippy::items-after-statements` implied by `-D warnings`\n \n error: adding items after statements is confusing, since items exist from the start of the scope\n-  --> $DIR/item_after_statement.rs:19:5\n+  --> $DIR/item_after_statement.rs:20:5\n    |\n LL | /     fn foo() {\n LL | |         println!(\"foo\");\n LL | |     }\n    | |_____^\n \n error: adding items after statements is confusing, since items exist from the start of the scope\n-  --> $DIR/item_after_statement.rs:32:13\n+  --> $DIR/item_after_statement.rs:33:13\n    |\n LL | /             fn say_something() {\n LL | |                 println!(\"something\");"}, {"sha": "26e3b8f63e700e2a53f579df14bbaf5ac5728452", "filename": "tests/ui/manual_assert.edition2018.fixed", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmanual_assert.edition2018.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmanual_assert.edition2018.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_assert.edition2018.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -4,7 +4,8 @@\n // run-rustfix\n \n #![warn(clippy::manual_assert)]\n-#![allow(dead_code, unused_doc_comments, clippy::nonminimal_bool)]\n+#![allow(dead_code, unused_doc_comments)]\n+#![allow(clippy::nonminimal_bool, clippy::uninlined_format_args)]\n \n macro_rules! one {\n     () => {"}, {"sha": "7718588fdf6f42395bda4442d713c20e8dfb18b5", "filename": "tests/ui/manual_assert.edition2018.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmanual_assert.edition2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmanual_assert.edition2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_assert.edition2018.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:30:5\n+  --> $DIR/manual_assert.rs:31:5\n    |\n LL | /     if !a.is_empty() {\n LL | |         panic!(\"qaqaq{:?}\", a);\n@@ -13,7 +13,7 @@ LL |     assert!(a.is_empty(), \"qaqaq{:?}\", a);\n    |\n \n error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:33:5\n+  --> $DIR/manual_assert.rs:34:5\n    |\n LL | /     if !a.is_empty() {\n LL | |         panic!(\"qwqwq\");\n@@ -26,7 +26,7 @@ LL |     assert!(a.is_empty(), \"qwqwq\");\n    |\n \n error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:50:5\n+  --> $DIR/manual_assert.rs:51:5\n    |\n LL | /     if b.is_empty() {\n LL | |         panic!(\"panic1\");\n@@ -39,7 +39,7 @@ LL |     assert!(!b.is_empty(), \"panic1\");\n    |\n \n error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:53:5\n+  --> $DIR/manual_assert.rs:54:5\n    |\n LL | /     if b.is_empty() && a.is_empty() {\n LL | |         panic!(\"panic2\");\n@@ -52,7 +52,7 @@ LL |     assert!(!(b.is_empty() && a.is_empty()), \"panic2\");\n    |\n \n error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:56:5\n+  --> $DIR/manual_assert.rs:57:5\n    |\n LL | /     if a.is_empty() && !b.is_empty() {\n LL | |         panic!(\"panic3\");\n@@ -65,7 +65,7 @@ LL |     assert!(!(a.is_empty() && !b.is_empty()), \"panic3\");\n    |\n \n error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:59:5\n+  --> $DIR/manual_assert.rs:60:5\n    |\n LL | /     if b.is_empty() || a.is_empty() {\n LL | |         panic!(\"panic4\");\n@@ -78,7 +78,7 @@ LL |     assert!(!(b.is_empty() || a.is_empty()), \"panic4\");\n    |\n \n error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:62:5\n+  --> $DIR/manual_assert.rs:63:5\n    |\n LL | /     if a.is_empty() || !b.is_empty() {\n LL | |         panic!(\"panic5\");\n@@ -91,7 +91,7 @@ LL |     assert!(!(a.is_empty() || !b.is_empty()), \"panic5\");\n    |\n \n error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:65:5\n+  --> $DIR/manual_assert.rs:66:5\n    |\n LL | /     if a.is_empty() {\n LL | |         panic!(\"with expansion {}\", one!())\n@@ -104,7 +104,7 @@ LL |     assert!(!a.is_empty(), \"with expansion {}\", one!());\n    |\n \n error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:72:5\n+  --> $DIR/manual_assert.rs:73:5\n    |\n LL | /     if a > 2 {\n LL | |         // comment"}, {"sha": "26e3b8f63e700e2a53f579df14bbaf5ac5728452", "filename": "tests/ui/manual_assert.edition2021.fixed", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmanual_assert.edition2021.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmanual_assert.edition2021.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_assert.edition2021.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -4,7 +4,8 @@\n // run-rustfix\n \n #![warn(clippy::manual_assert)]\n-#![allow(dead_code, unused_doc_comments, clippy::nonminimal_bool)]\n+#![allow(dead_code, unused_doc_comments)]\n+#![allow(clippy::nonminimal_bool, clippy::uninlined_format_args)]\n \n macro_rules! one {\n     () => {"}, {"sha": "7718588fdf6f42395bda4442d713c20e8dfb18b5", "filename": "tests/ui/manual_assert.edition2021.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmanual_assert.edition2021.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmanual_assert.edition2021.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_assert.edition2021.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:30:5\n+  --> $DIR/manual_assert.rs:31:5\n    |\n LL | /     if !a.is_empty() {\n LL | |         panic!(\"qaqaq{:?}\", a);\n@@ -13,7 +13,7 @@ LL |     assert!(a.is_empty(), \"qaqaq{:?}\", a);\n    |\n \n error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:33:5\n+  --> $DIR/manual_assert.rs:34:5\n    |\n LL | /     if !a.is_empty() {\n LL | |         panic!(\"qwqwq\");\n@@ -26,7 +26,7 @@ LL |     assert!(a.is_empty(), \"qwqwq\");\n    |\n \n error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:50:5\n+  --> $DIR/manual_assert.rs:51:5\n    |\n LL | /     if b.is_empty() {\n LL | |         panic!(\"panic1\");\n@@ -39,7 +39,7 @@ LL |     assert!(!b.is_empty(), \"panic1\");\n    |\n \n error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:53:5\n+  --> $DIR/manual_assert.rs:54:5\n    |\n LL | /     if b.is_empty() && a.is_empty() {\n LL | |         panic!(\"panic2\");\n@@ -52,7 +52,7 @@ LL |     assert!(!(b.is_empty() && a.is_empty()), \"panic2\");\n    |\n \n error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:56:5\n+  --> $DIR/manual_assert.rs:57:5\n    |\n LL | /     if a.is_empty() && !b.is_empty() {\n LL | |         panic!(\"panic3\");\n@@ -65,7 +65,7 @@ LL |     assert!(!(a.is_empty() && !b.is_empty()), \"panic3\");\n    |\n \n error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:59:5\n+  --> $DIR/manual_assert.rs:60:5\n    |\n LL | /     if b.is_empty() || a.is_empty() {\n LL | |         panic!(\"panic4\");\n@@ -78,7 +78,7 @@ LL |     assert!(!(b.is_empty() || a.is_empty()), \"panic4\");\n    |\n \n error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:62:5\n+  --> $DIR/manual_assert.rs:63:5\n    |\n LL | /     if a.is_empty() || !b.is_empty() {\n LL | |         panic!(\"panic5\");\n@@ -91,7 +91,7 @@ LL |     assert!(!(a.is_empty() || !b.is_empty()), \"panic5\");\n    |\n \n error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:65:5\n+  --> $DIR/manual_assert.rs:66:5\n    |\n LL | /     if a.is_empty() {\n LL | |         panic!(\"with expansion {}\", one!())\n@@ -104,7 +104,7 @@ LL |     assert!(!a.is_empty(), \"with expansion {}\", one!());\n    |\n \n error: only a `panic!` in `if`-then statement\n-  --> $DIR/manual_assert.rs:72:5\n+  --> $DIR/manual_assert.rs:73:5\n    |\n LL | /     if a > 2 {\n LL | |         // comment"}, {"sha": "8c37753071dfb9b393d0183b2e3ebbd8b475fbe3", "filename": "tests/ui/manual_assert.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmanual_assert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmanual_assert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_assert.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -4,7 +4,8 @@\n // run-rustfix\n \n #![warn(clippy::manual_assert)]\n-#![allow(dead_code, unused_doc_comments, clippy::nonminimal_bool)]\n+#![allow(dead_code, unused_doc_comments)]\n+#![allow(clippy::nonminimal_bool, clippy::uninlined_format_args)]\n \n macro_rules! one {\n     () => {"}, {"sha": "2bce6e624c90da753c5e2f6b37ba560cf53e2bb6", "filename": "tests/ui/manual_find_fixable.fixed", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmanual_find_fixable.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmanual_find_fixable.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_find_fixable.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,7 +1,7 @@\n // run-rustfix\n-\n-#![allow(unused, clippy::needless_return)]\n #![warn(clippy::manual_find)]\n+#![allow(unused)]\n+#![allow(clippy::needless_return, clippy::uninlined_format_args)]\n \n use std::collections::HashMap;\n "}, {"sha": "f5c6de37a257f040410a4e9f18b4af73dcee86dc", "filename": "tests/ui/manual_find_fixable.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmanual_find_fixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmanual_find_fixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_find_fixable.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,7 +1,7 @@\n // run-rustfix\n-\n-#![allow(unused, clippy::needless_return)]\n #![warn(clippy::manual_find)]\n+#![allow(unused)]\n+#![allow(clippy::needless_return, clippy::uninlined_format_args)]\n \n use std::collections::HashMap;\n "}, {"sha": "96cd87c0e19a7079f0940975ebd69241f19dd5b8", "filename": "tests/ui/manual_flatten.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmanual_flatten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmanual_flatten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_flatten.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n #![warn(clippy::manual_flatten)]\n-#![allow(clippy::useless_vec)]\n+#![allow(clippy::useless_vec, clippy::uninlined_format_args)]\n \n fn main() {\n     // Test for loop over implicitly adjusted `Iterator` with `if let` expression"}, {"sha": "5429fb4e454e3b429bf2f5d895b8a602d4da2d49", "filename": "tests/ui/map_unwrap_or.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmap_unwrap_or.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmap_unwrap_or.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmap_unwrap_or.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,6 +1,6 @@\n // aux-build:option_helpers.rs\n-\n #![warn(clippy::map_unwrap_or)]\n+#![allow(clippy::uninlined_format_args)]\n \n #[macro_use]\n extern crate option_helpers;"}, {"sha": "cf37fc6dc90a1090ae0dc0874c12ebb696e009a7", "filename": "tests/ui/match_ref_pats.fixed", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmatch_ref_pats.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmatch_ref_pats.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_ref_pats.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,6 +1,7 @@\n // run-rustfix\n #![warn(clippy::match_ref_pats)]\n-#![allow(dead_code, unused_variables, clippy::equatable_if_let, clippy::enum_variant_names)]\n+#![allow(dead_code, unused_variables)]\n+#![allow(clippy::enum_variant_names, clippy::equatable_if_let, clippy::uninlined_format_args)]\n \n fn ref_pats() {\n     {"}, {"sha": "3220b97d1b51182afb5066fd1c867c5d0a1c49e2", "filename": "tests/ui/match_ref_pats.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmatch_ref_pats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmatch_ref_pats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_ref_pats.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,6 +1,7 @@\n // run-rustfix\n #![warn(clippy::match_ref_pats)]\n-#![allow(dead_code, unused_variables, clippy::equatable_if_let, clippy::enum_variant_names)]\n+#![allow(dead_code, unused_variables)]\n+#![allow(clippy::enum_variant_names, clippy::equatable_if_let, clippy::uninlined_format_args)]\n \n fn ref_pats() {\n     {"}, {"sha": "7d9646c842ee85bc2c34e2d7e97d680a4f65ade0", "filename": "tests/ui/match_ref_pats.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmatch_ref_pats.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmatch_ref_pats.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_ref_pats.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: you don't need to add `&` to all patterns\n-  --> $DIR/match_ref_pats.rs:8:9\n+  --> $DIR/match_ref_pats.rs:9:9\n    |\n LL | /         match v {\n LL | |             &Some(v) => println!(\"{:?}\", v),\n@@ -16,7 +16,7 @@ LL ~             None => println!(\"none\"),\n    |\n \n error: you don't need to add `&` to both the expression and the patterns\n-  --> $DIR/match_ref_pats.rs:25:5\n+  --> $DIR/match_ref_pats.rs:26:5\n    |\n LL | /     match &w {\n LL | |         &Some(v) => println!(\"{:?}\", v),\n@@ -32,21 +32,21 @@ LL ~         None => println!(\"none\"),\n    |\n \n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/match_ref_pats.rs:37:12\n+  --> $DIR/match_ref_pats.rs:38:12\n    |\n LL |     if let &None = a {\n    |     -------^^^^^---- help: try this: `if a.is_none()`\n    |\n    = note: `-D clippy::redundant-pattern-matching` implied by `-D warnings`\n \n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/match_ref_pats.rs:42:12\n+  --> $DIR/match_ref_pats.rs:43:12\n    |\n LL |     if let &None = &b {\n    |     -------^^^^^----- help: try this: `if b.is_none()`\n \n error: you don't need to add `&` to all patterns\n-  --> $DIR/match_ref_pats.rs:102:9\n+  --> $DIR/match_ref_pats.rs:103:9\n    |\n LL | /         match foobar_variant!(0) {\n LL | |             &FooBar::Foo => println!(\"Foo\"),"}, {"sha": "8b91b9854a040667693fb0e2911beb0635e635b1", "filename": "tests/ui/match_result_ok.fixed", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmatch_result_ok.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmatch_result_ok.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_result_ok.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,8 +1,7 @@\n // run-rustfix\n-\n #![warn(clippy::match_result_ok)]\n-#![allow(clippy::boxed_local)]\n #![allow(dead_code)]\n+#![allow(clippy::boxed_local, clippy::uninlined_format_args)]\n \n // Checking `if` cases\n "}, {"sha": "bc2c4b50e2729571a38d2e36f2ba70ba124b349d", "filename": "tests/ui/match_result_ok.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmatch_result_ok.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmatch_result_ok.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_result_ok.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,8 +1,7 @@\n // run-rustfix\n-\n #![warn(clippy::match_result_ok)]\n-#![allow(clippy::boxed_local)]\n #![allow(dead_code)]\n+#![allow(clippy::boxed_local, clippy::uninlined_format_args)]\n \n // Checking `if` cases\n "}, {"sha": "98a95705ca59a9447d4374bf6671a444b9d38693", "filename": "tests/ui/match_result_ok.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmatch_result_ok.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmatch_result_ok.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_result_ok.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: matching on `Some` with `ok()` is redundant\n-  --> $DIR/match_result_ok.rs:10:5\n+  --> $DIR/match_result_ok.rs:9:5\n    |\n LL |     if let Some(y) = x.parse().ok() { y } else { 0 }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -11,7 +11,7 @@ LL |     if let Ok(y) = x.parse() { y } else { 0 }\n    |     ~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: matching on `Some` with `ok()` is redundant\n-  --> $DIR/match_result_ok.rs:20:9\n+  --> $DIR/match_result_ok.rs:19:9\n    |\n LL |         if let Some(y) = x   .   parse()   .   ok   ()    {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -22,7 +22,7 @@ LL |         if let Ok(y) = x   .   parse()       {\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: matching on `Some` with `ok()` is redundant\n-  --> $DIR/match_result_ok.rs:46:5\n+  --> $DIR/match_result_ok.rs:45:5\n    |\n LL |     while let Some(a) = wat.next().ok() {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "82b2c433d99e23d98498e808c798188dc7b6d917", "filename": "tests/ui/match_same_arms2.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmatch_same_arms2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmatch_same_arms2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_same_arms2.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,9 @@\n #![warn(clippy::match_same_arms)]\n-#![allow(clippy::disallowed_names, clippy::diverging_sub_expression)]\n+#![allow(\n+    clippy::disallowed_names,\n+    clippy::diverging_sub_expression,\n+    clippy::uninlined_format_args\n+)]\n \n fn bar<T>(_: T) {}\n fn foo() -> bool {"}, {"sha": "9d73e571788256a14f524c28f0a563c0f95db038", "filename": "tests/ui/match_same_arms2.stderr", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmatch_same_arms2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmatch_same_arms2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_same_arms2.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: this match arm has an identical body to the `_` wildcard arm\n-  --> $DIR/match_same_arms2.rs:11:9\n+  --> $DIR/match_same_arms2.rs:15:9\n    |\n LL | /         42 => {\n LL | |             foo();\n@@ -13,7 +13,7 @@ LL | |         },\n    = note: `-D clippy::match-same-arms` implied by `-D warnings`\n    = help: or try changing either arm body\n note: `_` wildcard arm here\n-  --> $DIR/match_same_arms2.rs:20:9\n+  --> $DIR/match_same_arms2.rs:24:9\n    |\n LL | /         _ => {\n LL | |             //~ ERROR match arms have same body\n@@ -25,7 +25,7 @@ LL | |         },\n    | |_________^\n \n error: this match arm has an identical body to another arm\n-  --> $DIR/match_same_arms2.rs:34:9\n+  --> $DIR/match_same_arms2.rs:38:9\n    |\n LL |         51 => foo(), //~ ERROR match arms have same body\n    |         --^^^^^^^^^\n@@ -34,13 +34,13 @@ LL |         51 => foo(), //~ ERROR match arms have same body\n    |\n    = help: or try changing either arm body\n note: other arm here\n-  --> $DIR/match_same_arms2.rs:33:9\n+  --> $DIR/match_same_arms2.rs:37:9\n    |\n LL |         42 => foo(),\n    |         ^^^^^^^^^^^\n \n error: this match arm has an identical body to another arm\n-  --> $DIR/match_same_arms2.rs:40:9\n+  --> $DIR/match_same_arms2.rs:44:9\n    |\n LL |         None => 24, //~ ERROR match arms have same body\n    |         ----^^^^^^\n@@ -49,13 +49,13 @@ LL |         None => 24, //~ ERROR match arms have same body\n    |\n    = help: or try changing either arm body\n note: other arm here\n-  --> $DIR/match_same_arms2.rs:39:9\n+  --> $DIR/match_same_arms2.rs:43:9\n    |\n LL |         Some(_) => 24,\n    |         ^^^^^^^^^^^^^\n \n error: this match arm has an identical body to another arm\n-  --> $DIR/match_same_arms2.rs:62:9\n+  --> $DIR/match_same_arms2.rs:66:9\n    |\n LL |         (None, Some(a)) => bar(a), //~ ERROR match arms have same body\n    |         ---------------^^^^^^^^^^\n@@ -64,13 +64,13 @@ LL |         (None, Some(a)) => bar(a), //~ ERROR match arms have same body\n    |\n    = help: or try changing either arm body\n note: other arm here\n-  --> $DIR/match_same_arms2.rs:61:9\n+  --> $DIR/match_same_arms2.rs:65:9\n    |\n LL |         (Some(a), None) => bar(a),\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this match arm has an identical body to another arm\n-  --> $DIR/match_same_arms2.rs:67:9\n+  --> $DIR/match_same_arms2.rs:71:9\n    |\n LL |         (Some(a), ..) => bar(a),\n    |         -------------^^^^^^^^^^\n@@ -79,13 +79,13 @@ LL |         (Some(a), ..) => bar(a),\n    |\n    = help: or try changing either arm body\n note: other arm here\n-  --> $DIR/match_same_arms2.rs:68:9\n+  --> $DIR/match_same_arms2.rs:72:9\n    |\n LL |         (.., Some(a)) => bar(a), //~ ERROR match arms have same body\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this match arm has an identical body to another arm\n-  --> $DIR/match_same_arms2.rs:101:9\n+  --> $DIR/match_same_arms2.rs:105:9\n    |\n LL |         (Ok(x), Some(_)) => println!(\"ok {}\", x),\n    |         ----------------^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -94,13 +94,13 @@ LL |         (Ok(x), Some(_)) => println!(\"ok {}\", x),\n    |\n    = help: or try changing either arm body\n note: other arm here\n-  --> $DIR/match_same_arms2.rs:102:9\n+  --> $DIR/match_same_arms2.rs:106:9\n    |\n LL |         (Ok(_), Some(x)) => println!(\"ok {}\", x),\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this match arm has an identical body to another arm\n-  --> $DIR/match_same_arms2.rs:117:9\n+  --> $DIR/match_same_arms2.rs:121:9\n    |\n LL |         Ok(_) => println!(\"ok\"),\n    |         -----^^^^^^^^^^^^^^^^^^\n@@ -109,13 +109,13 @@ LL |         Ok(_) => println!(\"ok\"),\n    |\n    = help: or try changing either arm body\n note: other arm here\n-  --> $DIR/match_same_arms2.rs:116:9\n+  --> $DIR/match_same_arms2.rs:120:9\n    |\n LL |         Ok(3) => println!(\"ok\"),\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this match arm has an identical body to another arm\n-  --> $DIR/match_same_arms2.rs:144:9\n+  --> $DIR/match_same_arms2.rs:148:9\n    |\n LL |           1 => {\n    |           ^ help: try merging the arm patterns: `1 | 0`\n@@ -127,15 +127,15 @@ LL | |         },\n    |\n    = help: or try changing either arm body\n note: other arm here\n-  --> $DIR/match_same_arms2.rs:141:9\n+  --> $DIR/match_same_arms2.rs:145:9\n    |\n LL | /         0 => {\n LL | |             empty!(0);\n LL | |         },\n    | |_________^\n \n error: match expression looks like `matches!` macro\n-  --> $DIR/match_same_arms2.rs:162:16\n+  --> $DIR/match_same_arms2.rs:166:16\n    |\n LL |       let _ans = match x {\n    |  ________________^\n@@ -148,7 +148,7 @@ LL | |     };\n    = note: `-D clippy::match-like-matches-macro` implied by `-D warnings`\n \n error: this match arm has an identical body to another arm\n-  --> $DIR/match_same_arms2.rs:194:9\n+  --> $DIR/match_same_arms2.rs:198:9\n    |\n LL |         Foo::X(0) => 1,\n    |         ---------^^^^^\n@@ -157,13 +157,13 @@ LL |         Foo::X(0) => 1,\n    |\n    = help: or try changing either arm body\n note: other arm here\n-  --> $DIR/match_same_arms2.rs:196:9\n+  --> $DIR/match_same_arms2.rs:200:9\n    |\n LL |         Foo::Z(_) => 1,\n    |         ^^^^^^^^^^^^^^\n \n error: this match arm has an identical body to another arm\n-  --> $DIR/match_same_arms2.rs:204:9\n+  --> $DIR/match_same_arms2.rs:208:9\n    |\n LL |         Foo::Z(_) => 1,\n    |         ---------^^^^^\n@@ -172,13 +172,13 @@ LL |         Foo::Z(_) => 1,\n    |\n    = help: or try changing either arm body\n note: other arm here\n-  --> $DIR/match_same_arms2.rs:202:9\n+  --> $DIR/match_same_arms2.rs:206:9\n    |\n LL |         Foo::X(0) => 1,\n    |         ^^^^^^^^^^^^^^\n \n error: this match arm has an identical body to another arm\n-  --> $DIR/match_same_arms2.rs:227:9\n+  --> $DIR/match_same_arms2.rs:231:9\n    |\n LL |         Some(Bar { y: 0, x: 5, .. }) => 1,\n    |         ----------------------------^^^^^\n@@ -187,7 +187,7 @@ LL |         Some(Bar { y: 0, x: 5, .. }) => 1,\n    |\n    = help: or try changing either arm body\n note: other arm here\n-  --> $DIR/match_same_arms2.rs:224:9\n+  --> $DIR/match_same_arms2.rs:228:9\n    |\n LL |         Some(Bar { x: 0, y: 5, .. }) => 1,\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "951f552eb32b63adb3dc3bd95d6988b4ef88c664", "filename": "tests/ui/match_single_binding.fixed", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmatch_single_binding.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmatch_single_binding.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_single_binding.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,7 +1,7 @@\n // run-rustfix\n-\n #![warn(clippy::match_single_binding)]\n-#![allow(unused_variables, clippy::toplevel_ref_arg)]\n+#![allow(unused_variables)]\n+#![allow(clippy::toplevel_ref_arg, clippy::uninlined_format_args)]\n \n struct Point {\n     x: i32,"}, {"sha": "19c0fee8fd688aa15942a326ddfa4475b3fbc04a", "filename": "tests/ui/match_single_binding.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmatch_single_binding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmatch_single_binding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_single_binding.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,7 +1,7 @@\n // run-rustfix\n-\n #![warn(clippy::match_single_binding)]\n-#![allow(unused_variables, clippy::toplevel_ref_arg)]\n+#![allow(unused_variables)]\n+#![allow(clippy::toplevel_ref_arg, clippy::uninlined_format_args)]\n \n struct Point {\n     x: i32,"}, {"sha": "6a7db67e311a588b6d3b5ed599f6f6ee3031a4ca", "filename": "tests/ui/match_single_binding2.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmatch_single_binding2.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmatch_single_binding2.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_single_binding2.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,7 +1,7 @@\n // run-rustfix\n-\n #![warn(clippy::match_single_binding)]\n #![allow(unused_variables)]\n+#![allow(clippy::uninlined_format_args)]\n \n fn main() {\n     // Lint (additional curly braces needed, see #6572)"}, {"sha": "5a4bb8441fffc5676422e282c922adbcad7ee180", "filename": "tests/ui/match_single_binding2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmatch_single_binding2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmatch_single_binding2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_single_binding2.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,7 +1,7 @@\n // run-rustfix\n-\n #![warn(clippy::match_single_binding)]\n #![allow(unused_variables)]\n+#![allow(clippy::uninlined_format_args)]\n \n fn main() {\n     // Lint (additional curly braces needed, see #6572)"}, {"sha": "ac8fd9d8fb0937c841491f15e995af378c3b25e3", "filename": "tests/ui/mut_mut.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmut_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fmut_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmut_mut.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,7 +1,7 @@\n // aux-build:macro_rules.rs\n-\n-#![allow(unused, clippy::no_effect, clippy::unnecessary_operation)]\n #![warn(clippy::mut_mut)]\n+#![allow(unused)]\n+#![allow(clippy::no_effect, clippy::uninlined_format_args, clippy::unnecessary_operation)]\n \n #[macro_use]\n extern crate macro_rules;"}, {"sha": "aa2687159ef47bfd25f4654075a5d8afecc2e0cc", "filename": "tests/ui/needless_borrow.fixed", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_borrow.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_borrow.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,9 +1,9 @@\n // run-rustfix\n-\n #![feature(custom_inner_attributes, lint_reasons)]\n \n #[warn(clippy::all, clippy::needless_borrow)]\n-#[allow(unused_variables, clippy::unnecessary_mut_passed)]\n+#[allow(unused_variables)]\n+#[allow(clippy::uninlined_format_args, clippy::unnecessary_mut_passed)]\n fn main() {\n     let a = 5;\n     let ref_a = &a;"}, {"sha": "d41251e8f6aac604f0ebd1e9bdc0db9474f2ba91", "filename": "tests/ui/needless_borrow.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,9 +1,9 @@\n // run-rustfix\n-\n #![feature(custom_inner_attributes, lint_reasons)]\n \n #[warn(clippy::all, clippy::needless_borrow)]\n-#[allow(unused_variables, clippy::unnecessary_mut_passed)]\n+#[allow(unused_variables)]\n+#[allow(clippy::uninlined_format_args, clippy::unnecessary_mut_passed)]\n fn main() {\n     let a = 5;\n     let ref_a = &a;"}, {"sha": "6d213b46c20cb2f424e93f70f38e64e721ff49fe", "filename": "tests/ui/needless_collect_indirect.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_collect_indirect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_collect_indirect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_collect_indirect.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,3 +1,5 @@\n+#![allow(clippy::uninlined_format_args)]\n+\n use std::collections::{BinaryHeap, HashMap, HashSet, LinkedList, VecDeque};\n \n fn main() {"}, {"sha": "99e1b91d8fea2bd2022424c2b7c88ae2d1d3286f", "filename": "tests/ui/needless_collect_indirect.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_collect_indirect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_collect_indirect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_collect_indirect.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:5:39\n+  --> $DIR/needless_collect_indirect.rs:7:39\n    |\n LL |     let indirect_iter = sample.iter().collect::<Vec<_>>();\n    |                                       ^^^^^^^\n@@ -14,7 +14,7 @@ LL ~     sample.iter().map(|x| (x, x + 1)).collect::<HashMap<_, _>>();\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:7:38\n+  --> $DIR/needless_collect_indirect.rs:9:38\n    |\n LL |     let indirect_len = sample.iter().collect::<VecDeque<_>>();\n    |                                      ^^^^^^^\n@@ -28,7 +28,7 @@ LL ~     sample.iter().count();\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:9:40\n+  --> $DIR/needless_collect_indirect.rs:11:40\n    |\n LL |     let indirect_empty = sample.iter().collect::<VecDeque<_>>();\n    |                                        ^^^^^^^\n@@ -42,7 +42,7 @@ LL ~     sample.iter().next().is_none();\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:11:43\n+  --> $DIR/needless_collect_indirect.rs:13:43\n    |\n LL |     let indirect_contains = sample.iter().collect::<VecDeque<_>>();\n    |                                           ^^^^^^^\n@@ -56,7 +56,7 @@ LL ~     sample.iter().any(|x| x == &5);\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:23:48\n+  --> $DIR/needless_collect_indirect.rs:25:48\n    |\n LL |     let non_copy_contains = sample.into_iter().collect::<Vec<_>>();\n    |                                                ^^^^^^^\n@@ -70,7 +70,7 @@ LL ~     sample.into_iter().any(|x| x == a);\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:52:51\n+  --> $DIR/needless_collect_indirect.rs:54:51\n    |\n LL |         let buffer: Vec<&str> = string.split('/').collect();\n    |                                                   ^^^^^^^\n@@ -84,7 +84,7 @@ LL ~         string.split('/').count()\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:57:55\n+  --> $DIR/needless_collect_indirect.rs:59:55\n    |\n LL |         let indirect_len: VecDeque<_> = sample.iter().collect();\n    |                                                       ^^^^^^^\n@@ -98,7 +98,7 @@ LL ~         sample.iter().count()\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:62:57\n+  --> $DIR/needless_collect_indirect.rs:64:57\n    |\n LL |         let indirect_len: LinkedList<_> = sample.iter().collect();\n    |                                                         ^^^^^^^\n@@ -112,7 +112,7 @@ LL ~         sample.iter().count()\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:67:57\n+  --> $DIR/needless_collect_indirect.rs:69:57\n    |\n LL |         let indirect_len: BinaryHeap<_> = sample.iter().collect();\n    |                                                         ^^^^^^^\n@@ -126,7 +126,7 @@ LL ~         sample.iter().count()\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:127:59\n+  --> $DIR/needless_collect_indirect.rs:129:59\n    |\n LL |             let y: Vec<usize> = vec.iter().map(|k| k * k).collect();\n    |                                                           ^^^^^^^\n@@ -143,7 +143,7 @@ LL ~             vec.iter().map(|k| k * k).any(|x| x == i);\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:152:59\n+  --> $DIR/needless_collect_indirect.rs:154:59\n    |\n LL |             let y: Vec<usize> = vec.iter().map(|k| k * k).collect();\n    |                                                           ^^^^^^^\n@@ -160,7 +160,7 @@ LL ~             vec.iter().map(|k| k * k).any(|x| x == n);\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:181:63\n+  --> $DIR/needless_collect_indirect.rs:183:63\n    |\n LL |                 let y: Vec<usize> = vec.iter().map(|k| k * k).collect();\n    |                                                               ^^^^^^^\n@@ -177,7 +177,7 @@ LL ~                 vec.iter().map(|k| k * k).any(|x| x == n);\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:217:59\n+  --> $DIR/needless_collect_indirect.rs:219:59\n    |\n LL |             let y: Vec<usize> = vec.iter().map(|k| k * k).collect();\n    |                                                           ^^^^^^^\n@@ -195,7 +195,7 @@ LL ~                 vec.iter().map(|k| k * k).any(|x| x == n);\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:242:26\n+  --> $DIR/needless_collect_indirect.rs:244:26\n    |\n LL |         let w = v.iter().collect::<Vec<_>>();\n    |                          ^^^^^^^\n@@ -211,7 +211,7 @@ LL ~         for _ in 0..v.iter().count() {\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:264:30\n+  --> $DIR/needless_collect_indirect.rs:266:30\n    |\n LL |         let mut w = v.iter().collect::<Vec<_>>();\n    |                              ^^^^^^^\n@@ -227,7 +227,7 @@ LL ~         while 1 == v.iter().count() {\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:286:30\n+  --> $DIR/needless_collect_indirect.rs:288:30\n    |\n LL |         let mut w = v.iter().collect::<Vec<_>>();\n    |                              ^^^^^^^"}, {"sha": "c891c9de3aeca8bc9ebfa92df29b8d16e8688aaa", "filename": "tests/ui/needless_continue.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_continue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_continue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_continue.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,4 +1,5 @@\n #![warn(clippy::needless_continue)]\n+#![allow(clippy::uninlined_format_args)]\n \n macro_rules! zero {\n     ($x:expr) => {"}, {"sha": "44ca3cb97f1052cb4ff748f07d6b44e348ef38b3", "filename": "tests/ui/needless_continue.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_continue.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_continue.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_continue.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: this `else` block is redundant\n-  --> $DIR/needless_continue.rs:29:16\n+  --> $DIR/needless_continue.rs:30:16\n    |\n LL |           } else {\n    |  ________________^\n@@ -35,7 +35,7 @@ LL | |         }\n                    }\n \n error: there is no need for an explicit `else` block for this `if` expression\n-  --> $DIR/needless_continue.rs:44:9\n+  --> $DIR/needless_continue.rs:45:9\n    |\n LL | /         if (zero!(i % 2) || nonzero!(i % 5)) && i % 3 != 0 {\n LL | |             continue;\n@@ -55,39 +55,39 @@ LL | |         }\n                    }\n \n error: this `continue` expression is redundant\n-  --> $DIR/needless_continue.rs:57:9\n+  --> $DIR/needless_continue.rs:58:9\n    |\n LL |         continue; // should lint here\n    |         ^^^^^^^^^\n    |\n    = help: consider dropping the `continue` expression\n \n error: this `continue` expression is redundant\n-  --> $DIR/needless_continue.rs:64:9\n+  --> $DIR/needless_continue.rs:65:9\n    |\n LL |         continue; // should lint here\n    |         ^^^^^^^^^\n    |\n    = help: consider dropping the `continue` expression\n \n error: this `continue` expression is redundant\n-  --> $DIR/needless_continue.rs:71:9\n+  --> $DIR/needless_continue.rs:72:9\n    |\n LL |         continue // should lint here\n    |         ^^^^^^^^\n    |\n    = help: consider dropping the `continue` expression\n \n error: this `continue` expression is redundant\n-  --> $DIR/needless_continue.rs:79:9\n+  --> $DIR/needless_continue.rs:80:9\n    |\n LL |         continue // should lint here\n    |         ^^^^^^^^\n    |\n    = help: consider dropping the `continue` expression\n \n error: this `else` block is redundant\n-  --> $DIR/needless_continue.rs:129:24\n+  --> $DIR/needless_continue.rs:130:24\n    |\n LL |                   } else {\n    |  ________________________^\n@@ -110,7 +110,7 @@ LL | |                 }\n                            }\n \n error: there is no need for an explicit `else` block for this `if` expression\n-  --> $DIR/needless_continue.rs:135:17\n+  --> $DIR/needless_continue.rs:136:17\n    |\n LL | /                 if condition() {\n LL | |                     continue; // should lint here"}, {"sha": "09e671b88e1aa489f8c1b9b4b212ef58ed692139", "filename": "tests/ui/needless_for_each_fixable.fixed", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_for_each_fixable.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_for_each_fixable.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_for_each_fixable.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,10 +1,11 @@\n // run-rustfix\n #![warn(clippy::needless_for_each)]\n+#![allow(unused)]\n #![allow(\n-    unused,\n-    clippy::needless_return,\n+    clippy::let_unit_value,\n     clippy::match_single_binding,\n-    clippy::let_unit_value\n+    clippy::needless_return,\n+    clippy::uninlined_format_args\n )]\n \n use std::collections::HashMap;"}, {"sha": "abb4045b9197ddfa0f42262625284065933f535c", "filename": "tests/ui/needless_for_each_fixable.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_for_each_fixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_for_each_fixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_for_each_fixable.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,10 +1,11 @@\n // run-rustfix\n #![warn(clippy::needless_for_each)]\n+#![allow(unused)]\n #![allow(\n-    unused,\n-    clippy::needless_return,\n+    clippy::let_unit_value,\n     clippy::match_single_binding,\n-    clippy::let_unit_value\n+    clippy::needless_return,\n+    clippy::uninlined_format_args\n )]\n \n use std::collections::HashMap;"}, {"sha": "aebb762cc22831c1af185c24d2748c770ca4c8f6", "filename": "tests/ui/needless_for_each_fixable.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_for_each_fixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_for_each_fixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_for_each_fixable.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: needless use of `for_each`\n-  --> $DIR/needless_for_each_fixable.rs:15:5\n+  --> $DIR/needless_for_each_fixable.rs:16:5\n    |\n LL | /     v.iter().for_each(|elem| {\n LL | |         acc += elem;\n@@ -15,7 +15,7 @@ LL +     }\n    |\n \n error: needless use of `for_each`\n-  --> $DIR/needless_for_each_fixable.rs:18:5\n+  --> $DIR/needless_for_each_fixable.rs:19:5\n    |\n LL | /     v.into_iter().for_each(|elem| {\n LL | |         acc += elem;\n@@ -30,7 +30,7 @@ LL +     }\n    |\n \n error: needless use of `for_each`\n-  --> $DIR/needless_for_each_fixable.rs:22:5\n+  --> $DIR/needless_for_each_fixable.rs:23:5\n    |\n LL | /     [1, 2, 3].iter().for_each(|elem| {\n LL | |         acc += elem;\n@@ -45,7 +45,7 @@ LL +     }\n    |\n \n error: needless use of `for_each`\n-  --> $DIR/needless_for_each_fixable.rs:27:5\n+  --> $DIR/needless_for_each_fixable.rs:28:5\n    |\n LL | /     hash_map.iter().for_each(|(k, v)| {\n LL | |         acc += k + v;\n@@ -60,7 +60,7 @@ LL +     }\n    |\n \n error: needless use of `for_each`\n-  --> $DIR/needless_for_each_fixable.rs:30:5\n+  --> $DIR/needless_for_each_fixable.rs:31:5\n    |\n LL | /     hash_map.iter_mut().for_each(|(k, v)| {\n LL | |         acc += *k + *v;\n@@ -75,7 +75,7 @@ LL +     }\n    |\n \n error: needless use of `for_each`\n-  --> $DIR/needless_for_each_fixable.rs:33:5\n+  --> $DIR/needless_for_each_fixable.rs:34:5\n    |\n LL | /     hash_map.keys().for_each(|k| {\n LL | |         acc += k;\n@@ -90,7 +90,7 @@ LL +     }\n    |\n \n error: needless use of `for_each`\n-  --> $DIR/needless_for_each_fixable.rs:36:5\n+  --> $DIR/needless_for_each_fixable.rs:37:5\n    |\n LL | /     hash_map.values().for_each(|v| {\n LL | |         acc += v;\n@@ -105,7 +105,7 @@ LL +     }\n    |\n \n error: needless use of `for_each`\n-  --> $DIR/needless_for_each_fixable.rs:43:5\n+  --> $DIR/needless_for_each_fixable.rs:44:5\n    |\n LL | /     my_vec().iter().for_each(|elem| {\n LL | |         acc += elem;"}, {"sha": "282c72881d5104e0bf106fbc388f7c3c8605e2e2", "filename": "tests/ui/needless_for_each_unfixable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_for_each_unfixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_for_each_unfixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_for_each_unfixable.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n #![warn(clippy::needless_for_each)]\n-#![allow(clippy::needless_return)]\n+#![allow(clippy::needless_return, clippy::uninlined_format_args)]\n \n fn main() {\n     let v: Vec<i32> = Vec::new();"}, {"sha": "17f2227ba91c450d4cdf672f134e477bdd68e81a", "filename": "tests/ui/needless_late_init.fixed", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_late_init.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_late_init.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_late_init.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,12 +1,13 @@\n // run-rustfix\n #![feature(let_chains)]\n+#![allow(unused)]\n #![allow(\n-    unused,\n     clippy::assign_op_pattern,\n     clippy::blocks_in_if_conditions,\n     clippy::let_and_return,\n     clippy::let_unit_value,\n-    clippy::nonminimal_bool\n+    clippy::nonminimal_bool,\n+    clippy::uninlined_format_args\n )]\n \n use std::collections::{BTreeMap, BTreeSet, HashMap, HashSet};"}, {"sha": "d84457a2987539f617d04cd1a671980e1810492c", "filename": "tests/ui/needless_late_init.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_late_init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_late_init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_late_init.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,12 +1,13 @@\n // run-rustfix\n #![feature(let_chains)]\n+#![allow(unused)]\n #![allow(\n-    unused,\n     clippy::assign_op_pattern,\n     clippy::blocks_in_if_conditions,\n     clippy::let_and_return,\n     clippy::let_unit_value,\n-    clippy::nonminimal_bool\n+    clippy::nonminimal_bool,\n+    clippy::uninlined_format_args\n )]\n \n use std::collections::{BTreeMap, BTreeSet, HashMap, HashSet};"}, {"sha": "0a256fb4a131c700b2a6711adb6fb3470bb0031a", "filename": "tests/ui/needless_late_init.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_late_init.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_late_init.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_late_init.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: unneeded late initialization\n-  --> $DIR/needless_late_init.rs:23:5\n+  --> $DIR/needless_late_init.rs:24:5\n    |\n LL |     let a;\n    |     ^^^^^^ created here\n@@ -13,7 +13,7 @@ LL |     let a = \"zero\";\n    |     ~~~~~\n \n error: unneeded late initialization\n-  --> $DIR/needless_late_init.rs:26:5\n+  --> $DIR/needless_late_init.rs:27:5\n    |\n LL |     let b;\n    |     ^^^^^^ created here\n@@ -27,7 +27,7 @@ LL |     let b = 1;\n    |     ~~~~~\n \n error: unneeded late initialization\n-  --> $DIR/needless_late_init.rs:27:5\n+  --> $DIR/needless_late_init.rs:28:5\n    |\n LL |     let c;\n    |     ^^^^^^ created here\n@@ -41,7 +41,7 @@ LL |     let c = 2;\n    |     ~~~~~\n \n error: unneeded late initialization\n-  --> $DIR/needless_late_init.rs:31:5\n+  --> $DIR/needless_late_init.rs:32:5\n    |\n LL |     let d: usize;\n    |     ^^^^^^^^^^^^^ created here\n@@ -54,7 +54,7 @@ LL |     let d: usize = 1;\n    |     ~~~~~~~~~~~~\n \n error: unneeded late initialization\n-  --> $DIR/needless_late_init.rs:34:5\n+  --> $DIR/needless_late_init.rs:35:5\n    |\n LL |     let e;\n    |     ^^^^^^ created here\n@@ -67,7 +67,7 @@ LL |     let e = format!(\"{}\", d);\n    |     ~~~~~\n \n error: unneeded late initialization\n-  --> $DIR/needless_late_init.rs:39:5\n+  --> $DIR/needless_late_init.rs:40:5\n    |\n LL |     let a;\n    |     ^^^^^^\n@@ -88,7 +88,7 @@ LL |     };\n    |      +\n \n error: unneeded late initialization\n-  --> $DIR/needless_late_init.rs:48:5\n+  --> $DIR/needless_late_init.rs:49:5\n    |\n LL |     let b;\n    |     ^^^^^^\n@@ -109,7 +109,7 @@ LL |     };\n    |      +\n \n error: unneeded late initialization\n-  --> $DIR/needless_late_init.rs:55:5\n+  --> $DIR/needless_late_init.rs:56:5\n    |\n LL |     let d;\n    |     ^^^^^^\n@@ -130,7 +130,7 @@ LL |     };\n    |      +\n \n error: unneeded late initialization\n-  --> $DIR/needless_late_init.rs:63:5\n+  --> $DIR/needless_late_init.rs:64:5\n    |\n LL |     let e;\n    |     ^^^^^^\n@@ -151,7 +151,7 @@ LL |     };\n    |      +\n \n error: unneeded late initialization\n-  --> $DIR/needless_late_init.rs:70:5\n+  --> $DIR/needless_late_init.rs:71:5\n    |\n LL |     let f;\n    |     ^^^^^^\n@@ -167,7 +167,7 @@ LL +         1 => \"three\",\n    |\n \n error: unneeded late initialization\n-  --> $DIR/needless_late_init.rs:76:5\n+  --> $DIR/needless_late_init.rs:77:5\n    |\n LL |     let g: usize;\n    |     ^^^^^^^^^^^^^\n@@ -187,7 +187,7 @@ LL |     };\n    |      +\n \n error: unneeded late initialization\n-  --> $DIR/needless_late_init.rs:84:5\n+  --> $DIR/needless_late_init.rs:85:5\n    |\n LL |     let x;\n    |     ^^^^^^ created here\n@@ -201,7 +201,7 @@ LL |     let x = 1;\n    |     ~~~~~\n \n error: unneeded late initialization\n-  --> $DIR/needless_late_init.rs:88:5\n+  --> $DIR/needless_late_init.rs:89:5\n    |\n LL |     let x;\n    |     ^^^^^^ created here\n@@ -215,7 +215,7 @@ LL |     let x = SignificantDrop;\n    |     ~~~~~\n \n error: unneeded late initialization\n-  --> $DIR/needless_late_init.rs:92:5\n+  --> $DIR/needless_late_init.rs:93:5\n    |\n LL |     let x;\n    |     ^^^^^^ created here\n@@ -229,7 +229,7 @@ LL |     let x = SignificantDrop;\n    |     ~~~~~\n \n error: unneeded late initialization\n-  --> $DIR/needless_late_init.rs:111:5\n+  --> $DIR/needless_late_init.rs:112:5\n    |\n LL |     let a;\n    |     ^^^^^^\n@@ -250,7 +250,7 @@ LL |     };\n    |      +\n \n error: unneeded late initialization\n-  --> $DIR/needless_late_init.rs:128:5\n+  --> $DIR/needless_late_init.rs:129:5\n    |\n LL |     let a;\n    |     ^^^^^^"}, {"sha": "d79ad86b1948caa3eff6b7516b2b9f4ec6d2a453", "filename": "tests/ui/needless_pass_by_value.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_pass_by_value.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,10 +1,11 @@\n #![warn(clippy::needless_pass_by_value)]\n+#![allow(dead_code)]\n #![allow(\n-    dead_code,\n-    clippy::single_match,\n-    clippy::redundant_pattern_matching,\n     clippy::option_option,\n-    clippy::redundant_clone\n+    clippy::redundant_clone,\n+    clippy::redundant_pattern_matching,\n+    clippy::single_match,\n+    clippy::uninlined_format_args\n )]\n \n use std::borrow::Borrow;"}, {"sha": "0e660a77dc0cc54f1a602c775273b99abaadc19b", "filename": "tests/ui/needless_pass_by_value.stderr", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_pass_by_value.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_pass_by_value.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_pass_by_value.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,61 +1,61 @@\n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:17:23\n+  --> $DIR/needless_pass_by_value.rs:18:23\n    |\n LL | fn foo<T: Default>(v: Vec<T>, w: Vec<T>, mut x: Vec<T>, y: Vec<T>) -> Vec<T> {\n    |                       ^^^^^^ help: consider changing the type to: `&[T]`\n    |\n    = note: `-D clippy::needless-pass-by-value` implied by `-D warnings`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:31:11\n+  --> $DIR/needless_pass_by_value.rs:32:11\n    |\n LL | fn bar(x: String, y: Wrapper) {\n    |           ^^^^^^ help: consider changing the type to: `&str`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:31:22\n+  --> $DIR/needless_pass_by_value.rs:32:22\n    |\n LL | fn bar(x: String, y: Wrapper) {\n    |                      ^^^^^^^ help: consider taking a reference instead: `&Wrapper`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:37:71\n+  --> $DIR/needless_pass_by_value.rs:38:71\n    |\n LL | fn test_borrow_trait<T: Borrow<str>, U: AsRef<str>, V>(t: T, u: U, v: V) {\n    |                                                                       ^ help: consider taking a reference instead: `&V`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:49:18\n+  --> $DIR/needless_pass_by_value.rs:50:18\n    |\n LL | fn test_match(x: Option<Option<String>>, y: Option<Option<String>>) {\n    |                  ^^^^^^^^^^^^^^^^^^^^^^ help: consider taking a reference instead: `&Option<Option<String>>`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:62:24\n+  --> $DIR/needless_pass_by_value.rs:63:24\n    |\n LL | fn test_destructure(x: Wrapper, y: Wrapper, z: Wrapper) {\n    |                        ^^^^^^^ help: consider taking a reference instead: `&Wrapper`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:62:36\n+  --> $DIR/needless_pass_by_value.rs:63:36\n    |\n LL | fn test_destructure(x: Wrapper, y: Wrapper, z: Wrapper) {\n    |                                    ^^^^^^^ help: consider taking a reference instead: `&Wrapper`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:78:49\n+  --> $DIR/needless_pass_by_value.rs:79:49\n    |\n LL | fn test_blanket_ref<T: Foo, S: Serialize>(_foo: T, _serializable: S) {}\n    |                                                 ^ help: consider taking a reference instead: `&T`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:80:18\n+  --> $DIR/needless_pass_by_value.rs:81:18\n    |\n LL | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n    |                  ^^^^^^ help: consider taking a reference instead: `&String`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:80:29\n+  --> $DIR/needless_pass_by_value.rs:81:29\n    |\n LL | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n    |                             ^^^^^^\n@@ -70,13 +70,13 @@ LL |     let _ = t.to_string();\n    |             ~~~~~~~~~~~~~\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:80:40\n+  --> $DIR/needless_pass_by_value.rs:81:40\n    |\n LL | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n    |                                        ^^^^^^^^ help: consider taking a reference instead: `&Vec<i32>`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:80:53\n+  --> $DIR/needless_pass_by_value.rs:81:53\n    |\n LL | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n    |                                                     ^^^^^^^^\n@@ -91,85 +91,85 @@ LL |     let _ = v.to_owned();\n    |             ~~~~~~~~~~~~\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:93:12\n+  --> $DIR/needless_pass_by_value.rs:94:12\n    |\n LL |         s: String,\n    |            ^^^^^^ help: consider changing the type to: `&str`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:94:12\n+  --> $DIR/needless_pass_by_value.rs:95:12\n    |\n LL |         t: String,\n    |            ^^^^^^ help: consider taking a reference instead: `&String`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:103:23\n+  --> $DIR/needless_pass_by_value.rs:104:23\n    |\n LL |     fn baz(&self, _u: U, _s: Self) {}\n    |                       ^ help: consider taking a reference instead: `&U`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:103:30\n+  --> $DIR/needless_pass_by_value.rs:104:30\n    |\n LL |     fn baz(&self, _u: U, _s: Self) {}\n    |                              ^^^^ help: consider taking a reference instead: `&Self`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:125:24\n+  --> $DIR/needless_pass_by_value.rs:126:24\n    |\n LL | fn bar_copy(x: u32, y: CopyWrapper) {\n    |                        ^^^^^^^^^^^ help: consider taking a reference instead: `&CopyWrapper`\n    |\n help: consider marking this type as `Copy`\n-  --> $DIR/needless_pass_by_value.rs:123:1\n+  --> $DIR/needless_pass_by_value.rs:124:1\n    |\n LL | struct CopyWrapper(u32);\n    | ^^^^^^^^^^^^^^^^^^\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:131:29\n+  --> $DIR/needless_pass_by_value.rs:132:29\n    |\n LL | fn test_destructure_copy(x: CopyWrapper, y: CopyWrapper, z: CopyWrapper) {\n    |                             ^^^^^^^^^^^ help: consider taking a reference instead: `&CopyWrapper`\n    |\n help: consider marking this type as `Copy`\n-  --> $DIR/needless_pass_by_value.rs:123:1\n+  --> $DIR/needless_pass_by_value.rs:124:1\n    |\n LL | struct CopyWrapper(u32);\n    | ^^^^^^^^^^^^^^^^^^\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:131:45\n+  --> $DIR/needless_pass_by_value.rs:132:45\n    |\n LL | fn test_destructure_copy(x: CopyWrapper, y: CopyWrapper, z: CopyWrapper) {\n    |                                             ^^^^^^^^^^^ help: consider taking a reference instead: `&CopyWrapper`\n    |\n help: consider marking this type as `Copy`\n-  --> $DIR/needless_pass_by_value.rs:123:1\n+  --> $DIR/needless_pass_by_value.rs:124:1\n    |\n LL | struct CopyWrapper(u32);\n    | ^^^^^^^^^^^^^^^^^^\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:131:61\n+  --> $DIR/needless_pass_by_value.rs:132:61\n    |\n LL | fn test_destructure_copy(x: CopyWrapper, y: CopyWrapper, z: CopyWrapper) {\n    |                                                             ^^^^^^^^^^^ help: consider taking a reference instead: `&CopyWrapper`\n    |\n help: consider marking this type as `Copy`\n-  --> $DIR/needless_pass_by_value.rs:123:1\n+  --> $DIR/needless_pass_by_value.rs:124:1\n    |\n LL | struct CopyWrapper(u32);\n    | ^^^^^^^^^^^^^^^^^^\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:143:40\n+  --> $DIR/needless_pass_by_value.rs:144:40\n    |\n LL | fn some_fun<'b, S: Bar<'b, ()>>(_item: S) {}\n    |                                        ^ help: consider taking a reference instead: `&S`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:148:20\n+  --> $DIR/needless_pass_by_value.rs:149:20\n    |\n LL | fn more_fun(_item: impl Club<'static, i32>) {}\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^ help: consider taking a reference instead: `&impl Club<'static, i32>`"}, {"sha": "921801138a9b6f1179f1901f58258c517af12e59", "filename": "tests/ui/needless_range_loop.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_range_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_range_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_range_loop.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,4 +1,5 @@\n #![warn(clippy::needless_range_loop)]\n+#![allow(clippy::uninlined_format_args)]\n \n static STATIC: [usize; 4] = [0, 1, 8, 16];\n const CONST: [usize; 4] = [0, 1, 8, 16];"}, {"sha": "b31544ec334a6e199514feccbcf47320096ca691", "filename": "tests/ui/needless_range_loop.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_range_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fneedless_range_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_range_loop.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: the loop variable `i` is only used to index `vec`\n-  --> $DIR/needless_range_loop.rs:10:14\n+  --> $DIR/needless_range_loop.rs:11:14\n    |\n LL |     for i in 0..vec.len() {\n    |              ^^^^^^^^^^^^\n@@ -11,7 +11,7 @@ LL |     for <item> in &vec {\n    |         ~~~~~~    ~~~~\n \n error: the loop variable `i` is only used to index `vec`\n-  --> $DIR/needless_range_loop.rs:19:14\n+  --> $DIR/needless_range_loop.rs:20:14\n    |\n LL |     for i in 0..vec.len() {\n    |              ^^^^^^^^^^^^\n@@ -22,7 +22,7 @@ LL |     for <item> in &vec {\n    |         ~~~~~~    ~~~~\n \n error: the loop variable `j` is only used to index `STATIC`\n-  --> $DIR/needless_range_loop.rs:24:14\n+  --> $DIR/needless_range_loop.rs:25:14\n    |\n LL |     for j in 0..4 {\n    |              ^^^^\n@@ -33,7 +33,7 @@ LL |     for <item> in &STATIC {\n    |         ~~~~~~    ~~~~~~~\n \n error: the loop variable `j` is only used to index `CONST`\n-  --> $DIR/needless_range_loop.rs:28:14\n+  --> $DIR/needless_range_loop.rs:29:14\n    |\n LL |     for j in 0..4 {\n    |              ^^^^\n@@ -44,7 +44,7 @@ LL |     for <item> in &CONST {\n    |         ~~~~~~    ~~~~~~\n \n error: the loop variable `i` is used to index `vec`\n-  --> $DIR/needless_range_loop.rs:32:14\n+  --> $DIR/needless_range_loop.rs:33:14\n    |\n LL |     for i in 0..vec.len() {\n    |              ^^^^^^^^^^^^\n@@ -55,7 +55,7 @@ LL |     for (i, <item>) in vec.iter().enumerate() {\n    |         ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~\n \n error: the loop variable `i` is only used to index `vec2`\n-  --> $DIR/needless_range_loop.rs:40:14\n+  --> $DIR/needless_range_loop.rs:41:14\n    |\n LL |     for i in 0..vec.len() {\n    |              ^^^^^^^^^^^^\n@@ -66,7 +66,7 @@ LL |     for <item> in vec2.iter().take(vec.len()) {\n    |         ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: the loop variable `i` is only used to index `vec`\n-  --> $DIR/needless_range_loop.rs:44:14\n+  --> $DIR/needless_range_loop.rs:45:14\n    |\n LL |     for i in 5..vec.len() {\n    |              ^^^^^^^^^^^^\n@@ -77,7 +77,7 @@ LL |     for <item> in vec.iter().skip(5) {\n    |         ~~~~~~    ~~~~~~~~~~~~~~~~~~\n \n error: the loop variable `i` is only used to index `vec`\n-  --> $DIR/needless_range_loop.rs:48:14\n+  --> $DIR/needless_range_loop.rs:49:14\n    |\n LL |     for i in 0..MAX_LEN {\n    |              ^^^^^^^^^^\n@@ -88,7 +88,7 @@ LL |     for <item> in vec.iter().take(MAX_LEN) {\n    |         ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: the loop variable `i` is only used to index `vec`\n-  --> $DIR/needless_range_loop.rs:52:14\n+  --> $DIR/needless_range_loop.rs:53:14\n    |\n LL |     for i in 0..=MAX_LEN {\n    |              ^^^^^^^^^^^\n@@ -99,7 +99,7 @@ LL |     for <item> in vec.iter().take(MAX_LEN + 1) {\n    |         ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: the loop variable `i` is only used to index `vec`\n-  --> $DIR/needless_range_loop.rs:56:14\n+  --> $DIR/needless_range_loop.rs:57:14\n    |\n LL |     for i in 5..10 {\n    |              ^^^^^\n@@ -110,7 +110,7 @@ LL |     for <item> in vec.iter().take(10).skip(5) {\n    |         ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: the loop variable `i` is only used to index `vec`\n-  --> $DIR/needless_range_loop.rs:60:14\n+  --> $DIR/needless_range_loop.rs:61:14\n    |\n LL |     for i in 5..=10 {\n    |              ^^^^^^\n@@ -121,7 +121,7 @@ LL |     for <item> in vec.iter().take(10 + 1).skip(5) {\n    |         ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: the loop variable `i` is used to index `vec`\n-  --> $DIR/needless_range_loop.rs:64:14\n+  --> $DIR/needless_range_loop.rs:65:14\n    |\n LL |     for i in 5..vec.len() {\n    |              ^^^^^^^^^^^^\n@@ -132,7 +132,7 @@ LL |     for (i, <item>) in vec.iter().enumerate().skip(5) {\n    |         ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: the loop variable `i` is used to index `vec`\n-  --> $DIR/needless_range_loop.rs:68:14\n+  --> $DIR/needless_range_loop.rs:69:14\n    |\n LL |     for i in 5..10 {\n    |              ^^^^^\n@@ -143,7 +143,7 @@ LL |     for (i, <item>) in vec.iter().enumerate().take(10).skip(5) {\n    |         ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: the loop variable `i` is used to index `vec`\n-  --> $DIR/needless_range_loop.rs:73:14\n+  --> $DIR/needless_range_loop.rs:74:14\n    |\n LL |     for i in 0..vec.len() {\n    |              ^^^^^^^^^^^^"}, {"sha": "f08eb092e6b21f3486e5abeec5907a9f12ac2a13", "filename": "tests/ui/no_effect.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fno_effect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fno_effect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fno_effect.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,9 +1,7 @@\n #![feature(box_syntax, fn_traits, unboxed_closures)]\n #![warn(clippy::no_effect_underscore_binding)]\n-#![allow(dead_code)]\n-#![allow(path_statements)]\n-#![allow(clippy::deref_addrof)]\n-#![allow(clippy::redundant_field_names)]\n+#![allow(dead_code, path_statements)]\n+#![allow(clippy::deref_addrof, clippy::redundant_field_names, clippy::uninlined_format_args)]\n \n struct Unit;\n struct Tuple(i32);"}, {"sha": "6a1e636f9a61b00d8062c25efcee9ca1ffea889d", "filename": "tests/ui/no_effect.stderr", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fno_effect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fno_effect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fno_effect.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,183 +1,183 @@\n error: statement with no effect\n-  --> $DIR/no_effect.rs:94:5\n+  --> $DIR/no_effect.rs:92:5\n    |\n LL |     0;\n    |     ^^\n    |\n    = note: `-D clippy::no-effect` implied by `-D warnings`\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:95:5\n+  --> $DIR/no_effect.rs:93:5\n    |\n LL |     s2;\n    |     ^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:96:5\n+  --> $DIR/no_effect.rs:94:5\n    |\n LL |     Unit;\n    |     ^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:97:5\n+  --> $DIR/no_effect.rs:95:5\n    |\n LL |     Tuple(0);\n    |     ^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:98:5\n+  --> $DIR/no_effect.rs:96:5\n    |\n LL |     Struct { field: 0 };\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:99:5\n+  --> $DIR/no_effect.rs:97:5\n    |\n LL |     Struct { ..s };\n    |     ^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:100:5\n+  --> $DIR/no_effect.rs:98:5\n    |\n LL |     Union { a: 0 };\n    |     ^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:101:5\n+  --> $DIR/no_effect.rs:99:5\n    |\n LL |     Enum::Tuple(0);\n    |     ^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:102:5\n+  --> $DIR/no_effect.rs:100:5\n    |\n LL |     Enum::Struct { field: 0 };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:103:5\n+  --> $DIR/no_effect.rs:101:5\n    |\n LL |     5 + 6;\n    |     ^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:104:5\n+  --> $DIR/no_effect.rs:102:5\n    |\n LL |     *&42;\n    |     ^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:105:5\n+  --> $DIR/no_effect.rs:103:5\n    |\n LL |     &6;\n    |     ^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:106:5\n+  --> $DIR/no_effect.rs:104:5\n    |\n LL |     (5, 6, 7);\n    |     ^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:107:5\n+  --> $DIR/no_effect.rs:105:5\n    |\n LL |     box 42;\n    |     ^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:108:5\n+  --> $DIR/no_effect.rs:106:5\n    |\n LL |     ..;\n    |     ^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:109:5\n+  --> $DIR/no_effect.rs:107:5\n    |\n LL |     5..;\n    |     ^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:110:5\n+  --> $DIR/no_effect.rs:108:5\n    |\n LL |     ..5;\n    |     ^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:111:5\n+  --> $DIR/no_effect.rs:109:5\n    |\n LL |     5..6;\n    |     ^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:112:5\n+  --> $DIR/no_effect.rs:110:5\n    |\n LL |     5..=6;\n    |     ^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:113:5\n+  --> $DIR/no_effect.rs:111:5\n    |\n LL |     [42, 55];\n    |     ^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:114:5\n+  --> $DIR/no_effect.rs:112:5\n    |\n LL |     [42, 55][1];\n    |     ^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:115:5\n+  --> $DIR/no_effect.rs:113:5\n    |\n LL |     (42, 55).1;\n    |     ^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:116:5\n+  --> $DIR/no_effect.rs:114:5\n    |\n LL |     [42; 55];\n    |     ^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:117:5\n+  --> $DIR/no_effect.rs:115:5\n    |\n LL |     [42; 55][13];\n    |     ^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:119:5\n+  --> $DIR/no_effect.rs:117:5\n    |\n LL |     || x += 5;\n    |     ^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:121:5\n+  --> $DIR/no_effect.rs:119:5\n    |\n LL |     FooString { s: s };\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: binding to `_` prefixed variable with no side-effect\n-  --> $DIR/no_effect.rs:122:5\n+  --> $DIR/no_effect.rs:120:5\n    |\n LL |     let _unused = 1;\n    |     ^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::no-effect-underscore-binding` implied by `-D warnings`\n \n error: binding to `_` prefixed variable with no side-effect\n-  --> $DIR/no_effect.rs:123:5\n+  --> $DIR/no_effect.rs:121:5\n    |\n LL |     let _penguin = || println!(\"Some helpful closure\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: binding to `_` prefixed variable with no side-effect\n-  --> $DIR/no_effect.rs:124:5\n+  --> $DIR/no_effect.rs:122:5\n    |\n LL |     let _duck = Struct { field: 0 };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: binding to `_` prefixed variable with no side-effect\n-  --> $DIR/no_effect.rs:125:5\n+  --> $DIR/no_effect.rs:123:5\n    |\n LL |     let _cat = [2, 4, 6, 8][2];\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "00264dcceaa8d624e6a4fcf7aaf908f2e1c6da14", "filename": "tests/ui/option_map_unit_fn_fixable.fixed", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Foption_map_unit_fn_fixable.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Foption_map_unit_fn_fixable.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_map_unit_fn_fixable.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,8 +1,7 @@\n // run-rustfix\n-\n #![warn(clippy::option_map_unit_fn)]\n #![allow(unused)]\n-#![allow(clippy::unnecessary_wraps)]\n+#![allow(clippy::uninlined_format_args, clippy::unnecessary_wraps)]\n \n fn do_nothing<T>(_: T) {}\n "}, {"sha": "f3363ebce54e251e2b5ce9b30d38619203874e1e", "filename": "tests/ui/option_map_unit_fn_fixable.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Foption_map_unit_fn_fixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Foption_map_unit_fn_fixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_map_unit_fn_fixable.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,8 +1,7 @@\n // run-rustfix\n-\n #![warn(clippy::option_map_unit_fn)]\n #![allow(unused)]\n-#![allow(clippy::unnecessary_wraps)]\n+#![allow(clippy::uninlined_format_args, clippy::unnecessary_wraps)]\n \n fn do_nothing<T>(_: T) {}\n "}, {"sha": "0305387b9f8ae7c3e97fbed18a10aa3d831fd1d9", "filename": "tests/ui/option_map_unit_fn_fixable.stderr", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Foption_map_unit_fn_fixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Foption_map_unit_fn_fixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_map_unit_fn_fixable.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: called `map(f)` on an `Option` value where `f` is a function that returns the unit type `()`\n-  --> $DIR/option_map_unit_fn_fixable.rs:39:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:38:5\n    |\n LL |     x.field.map(do_nothing);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^-\n@@ -9,143 +9,143 @@ LL |     x.field.map(do_nothing);\n    = note: `-D clippy::option-map-unit-fn` implied by `-D warnings`\n \n error: called `map(f)` on an `Option` value where `f` is a function that returns the unit type `()`\n-  --> $DIR/option_map_unit_fn_fixable.rs:41:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:40:5\n    |\n LL |     x.field.map(do_nothing);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(x_field) = x.field { do_nothing(x_field) }`\n \n error: called `map(f)` on an `Option` value where `f` is a function that returns the unit type `()`\n-  --> $DIR/option_map_unit_fn_fixable.rs:43:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:42:5\n    |\n LL |     x.field.map(diverge);\n    |     ^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(x_field) = x.field { diverge(x_field) }`\n \n error: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n-  --> $DIR/option_map_unit_fn_fixable.rs:49:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:48:5\n    |\n LL |     x.field.map(|value| x.do_option_nothing(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { x.do_option_nothing(value + captured) }`\n \n error: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n-  --> $DIR/option_map_unit_fn_fixable.rs:51:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:50:5\n    |\n LL |     x.field.map(|value| { x.do_option_plus_one(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { x.do_option_plus_one(value + captured); }`\n \n error: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n-  --> $DIR/option_map_unit_fn_fixable.rs:54:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:53:5\n    |\n LL |     x.field.map(|value| do_nothing(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { do_nothing(value + captured) }`\n \n error: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n-  --> $DIR/option_map_unit_fn_fixable.rs:56:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:55:5\n    |\n LL |     x.field.map(|value| { do_nothing(value + captured) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { do_nothing(value + captured) }`\n \n error: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n-  --> $DIR/option_map_unit_fn_fixable.rs:58:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:57:5\n    |\n LL |     x.field.map(|value| { do_nothing(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { do_nothing(value + captured); }`\n \n error: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n-  --> $DIR/option_map_unit_fn_fixable.rs:60:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:59:5\n    |\n LL |     x.field.map(|value| { { do_nothing(value + captured); } });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { do_nothing(value + captured); }`\n \n error: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n-  --> $DIR/option_map_unit_fn_fixable.rs:63:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:62:5\n    |\n LL |     x.field.map(|value| diverge(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { diverge(value + captured) }`\n \n error: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n-  --> $DIR/option_map_unit_fn_fixable.rs:65:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:64:5\n    |\n LL |     x.field.map(|value| { diverge(value + captured) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { diverge(value + captured) }`\n \n error: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n-  --> $DIR/option_map_unit_fn_fixable.rs:67:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:66:5\n    |\n LL |     x.field.map(|value| { diverge(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { diverge(value + captured); }`\n \n error: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n-  --> $DIR/option_map_unit_fn_fixable.rs:69:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:68:5\n    |\n LL |     x.field.map(|value| { { diverge(value + captured); } });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { diverge(value + captured); }`\n \n error: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n-  --> $DIR/option_map_unit_fn_fixable.rs:74:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:73:5\n    |\n LL |     x.field.map(|value| { let y = plus_one(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { let y = plus_one(value + captured); }`\n \n error: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n-  --> $DIR/option_map_unit_fn_fixable.rs:76:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:75:5\n    |\n LL |     x.field.map(|value| { plus_one(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { plus_one(value + captured); }`\n \n error: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n-  --> $DIR/option_map_unit_fn_fixable.rs:78:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:77:5\n    |\n LL |     x.field.map(|value| { { plus_one(value + captured); } });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { plus_one(value + captured); }`\n \n error: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n-  --> $DIR/option_map_unit_fn_fixable.rs:81:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:80:5\n    |\n LL |     x.field.map(|ref value| { do_nothing(value + captured) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(ref value) = x.field { do_nothing(value + captured) }`\n \n error: called `map(f)` on an `Option` value where `f` is a function that returns the unit type `()`\n-  --> $DIR/option_map_unit_fn_fixable.rs:83:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:82:5\n    |\n LL |     option().map(do_nothing);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(a) = option() { do_nothing(a) }`\n \n error: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n-  --> $DIR/option_map_unit_fn_fixable.rs:85:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:84:5\n    |\n LL |     option().map(|value| println!(\"{:?}\", value));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-"}, {"sha": "896430780ea80918dca8fb2e4ac8f0e2e3254508", "filename": "tests/ui/or_fun_call.fixed", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2For_fun_call.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2For_fun_call.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2For_fun_call.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,8 +1,7 @@\n // run-rustfix\n-\n #![warn(clippy::or_fun_call)]\n #![allow(dead_code)]\n-#![allow(clippy::unnecessary_wraps, clippy::borrow_as_ptr)]\n+#![allow(clippy::borrow_as_ptr, clippy::uninlined_format_args, clippy::unnecessary_wraps)]\n \n use std::collections::BTreeMap;\n use std::collections::HashMap;"}, {"sha": "2473163d4fd2f4e74752d1f1178d079525ba8c78", "filename": "tests/ui/or_fun_call.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2For_fun_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2For_fun_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2For_fun_call.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,8 +1,7 @@\n // run-rustfix\n-\n #![warn(clippy::or_fun_call)]\n #![allow(dead_code)]\n-#![allow(clippy::unnecessary_wraps, clippy::borrow_as_ptr)]\n+#![allow(clippy::borrow_as_ptr, clippy::uninlined_format_args, clippy::unnecessary_wraps)]\n \n use std::collections::BTreeMap;\n use std::collections::HashMap;"}, {"sha": "113ba150c619276469b6886fb7495ac46f2a20f7", "filename": "tests/ui/or_fun_call.stderr", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2For_fun_call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2For_fun_call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2For_fun_call.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,157 +1,157 @@\n error: use of `unwrap_or` followed by a function call\n-  --> $DIR/or_fun_call.rs:49:22\n+  --> $DIR/or_fun_call.rs:48:22\n    |\n LL |     with_constructor.unwrap_or(make());\n    |                      ^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(make)`\n    |\n    = note: `-D clippy::or-fun-call` implied by `-D warnings`\n \n error: use of `unwrap_or` followed by a call to `new`\n-  --> $DIR/or_fun_call.rs:52:14\n+  --> $DIR/or_fun_call.rs:51:14\n    |\n LL |     with_new.unwrap_or(Vec::new());\n    |              ^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_default()`\n \n error: use of `unwrap_or` followed by a function call\n-  --> $DIR/or_fun_call.rs:55:21\n+  --> $DIR/or_fun_call.rs:54:21\n    |\n LL |     with_const_args.unwrap_or(Vec::with_capacity(12));\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| Vec::with_capacity(12))`\n \n error: use of `unwrap_or` followed by a function call\n-  --> $DIR/or_fun_call.rs:58:14\n+  --> $DIR/or_fun_call.rs:57:14\n    |\n LL |     with_err.unwrap_or(make());\n    |              ^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|_| make())`\n \n error: use of `unwrap_or` followed by a function call\n-  --> $DIR/or_fun_call.rs:61:19\n+  --> $DIR/or_fun_call.rs:60:19\n    |\n LL |     with_err_args.unwrap_or(Vec::with_capacity(12));\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|_| Vec::with_capacity(12))`\n \n error: use of `unwrap_or` followed by a call to `default`\n-  --> $DIR/or_fun_call.rs:64:24\n+  --> $DIR/or_fun_call.rs:63:24\n    |\n LL |     with_default_trait.unwrap_or(Default::default());\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_default()`\n \n error: use of `unwrap_or` followed by a call to `default`\n-  --> $DIR/or_fun_call.rs:67:23\n+  --> $DIR/or_fun_call.rs:66:23\n    |\n LL |     with_default_type.unwrap_or(u64::default());\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_default()`\n \n error: use of `unwrap_or` followed by a function call\n-  --> $DIR/or_fun_call.rs:70:18\n+  --> $DIR/or_fun_call.rs:69:18\n    |\n LL |     self_default.unwrap_or(<FakeDefault>::default());\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(<FakeDefault>::default)`\n \n error: use of `unwrap_or` followed by a call to `default`\n-  --> $DIR/or_fun_call.rs:73:18\n+  --> $DIR/or_fun_call.rs:72:18\n    |\n LL |     real_default.unwrap_or(<FakeDefault as Default>::default());\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_default()`\n \n error: use of `unwrap_or` followed by a call to `new`\n-  --> $DIR/or_fun_call.rs:76:14\n+  --> $DIR/or_fun_call.rs:75:14\n    |\n LL |     with_vec.unwrap_or(vec![]);\n    |              ^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_default()`\n \n error: use of `unwrap_or` followed by a function call\n-  --> $DIR/or_fun_call.rs:79:21\n+  --> $DIR/or_fun_call.rs:78:21\n    |\n LL |     without_default.unwrap_or(Foo::new());\n    |                     ^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(Foo::new)`\n \n error: use of `or_insert` followed by a call to `new`\n-  --> $DIR/or_fun_call.rs:82:19\n+  --> $DIR/or_fun_call.rs:81:19\n    |\n LL |     map.entry(42).or_insert(String::new());\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `or_default()`\n \n error: use of `or_insert` followed by a call to `new`\n-  --> $DIR/or_fun_call.rs:85:23\n+  --> $DIR/or_fun_call.rs:84:23\n    |\n LL |     map_vec.entry(42).or_insert(vec![]);\n    |                       ^^^^^^^^^^^^^^^^^ help: try this: `or_default()`\n \n error: use of `or_insert` followed by a call to `new`\n-  --> $DIR/or_fun_call.rs:88:21\n+  --> $DIR/or_fun_call.rs:87:21\n    |\n LL |     btree.entry(42).or_insert(String::new());\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `or_default()`\n \n error: use of `or_insert` followed by a call to `new`\n-  --> $DIR/or_fun_call.rs:91:25\n+  --> $DIR/or_fun_call.rs:90:25\n    |\n LL |     btree_vec.entry(42).or_insert(vec![]);\n    |                         ^^^^^^^^^^^^^^^^^ help: try this: `or_default()`\n \n error: use of `unwrap_or` followed by a call to `new`\n-  --> $DIR/or_fun_call.rs:94:21\n+  --> $DIR/or_fun_call.rs:93:21\n    |\n LL |     let _ = stringy.unwrap_or(String::new());\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_default()`\n \n error: use of `unwrap_or` followed by a function call\n-  --> $DIR/or_fun_call.rs:102:21\n+  --> $DIR/or_fun_call.rs:101:21\n    |\n LL |     let _ = Some(1).unwrap_or(map[&1]);\n    |                     ^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| map[&1])`\n \n error: use of `unwrap_or` followed by a function call\n-  --> $DIR/or_fun_call.rs:104:21\n+  --> $DIR/or_fun_call.rs:103:21\n    |\n LL |     let _ = Some(1).unwrap_or(map[&1]);\n    |                     ^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| map[&1])`\n \n error: use of `or` followed by a function call\n-  --> $DIR/or_fun_call.rs:128:35\n+  --> $DIR/or_fun_call.rs:127:35\n    |\n LL |     let _ = Some(\"a\".to_string()).or(Some(\"b\".to_string()));\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `or_else(|| Some(\"b\".to_string()))`\n \n error: use of `unwrap_or` followed by a function call\n-  --> $DIR/or_fun_call.rs:167:14\n+  --> $DIR/or_fun_call.rs:166:14\n    |\n LL |         None.unwrap_or(ptr_to_ref(s));\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| ptr_to_ref(s))`\n \n error: use of `unwrap_or` followed by a function call\n-  --> $DIR/or_fun_call.rs:173:14\n+  --> $DIR/or_fun_call.rs:172:14\n    |\n LL |         None.unwrap_or(unsafe { ptr_to_ref(s) });\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| unsafe { ptr_to_ref(s) })`\n \n error: use of `unwrap_or` followed by a function call\n-  --> $DIR/or_fun_call.rs:175:14\n+  --> $DIR/or_fun_call.rs:174:14\n    |\n LL |         None.unwrap_or( unsafe { ptr_to_ref(s) }    );\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| unsafe { ptr_to_ref(s) })`\n \n error: use of `unwrap_or` followed by a call to `new`\n-  --> $DIR/or_fun_call.rs:189:14\n+  --> $DIR/or_fun_call.rs:188:14\n    |\n LL |             .unwrap_or(String::new());\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_default()`\n \n error: use of `unwrap_or` followed by a call to `new`\n-  --> $DIR/or_fun_call.rs:202:14\n+  --> $DIR/or_fun_call.rs:201:14\n    |\n LL |             .unwrap_or(String::new());\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_default()`\n \n error: use of `unwrap_or` followed by a call to `new`\n-  --> $DIR/or_fun_call.rs:214:14\n+  --> $DIR/or_fun_call.rs:213:14\n    |\n LL |             .unwrap_or(String::new());\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_default()`\n \n error: use of `unwrap_or` followed by a call to `new`\n-  --> $DIR/or_fun_call.rs:225:10\n+  --> $DIR/or_fun_call.rs:224:10\n    |\n LL |         .unwrap_or(String::new());\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_default()`"}, {"sha": "08ab4d8681edd891b671ebabc3725a5d61e1bc6e", "filename": "tests/ui/panic_in_result_fn_assertions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fpanic_in_result_fn_assertions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fpanic_in_result_fn_assertions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpanic_in_result_fn_assertions.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n #![warn(clippy::panic_in_result_fn)]\n-#![allow(clippy::unnecessary_wraps)]\n+#![allow(clippy::uninlined_format_args, clippy::unnecessary_wraps)]\n \n struct A;\n "}, {"sha": "df89d8c50246ada3e655803377b6ed51b0c455f9", "filename": "tests/ui/panic_in_result_fn_debug_assertions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fpanic_in_result_fn_debug_assertions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fpanic_in_result_fn_debug_assertions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpanic_in_result_fn_debug_assertions.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n #![warn(clippy::panic_in_result_fn)]\n-#![allow(clippy::unnecessary_wraps)]\n+#![allow(clippy::uninlined_format_args, clippy::unnecessary_wraps)]\n \n // debug_assert should never trigger the `panic_in_result_fn` lint\n "}, {"sha": "cd69014326ebb464bfdc5a1939cce8d641f1f1f8", "filename": "tests/ui/patterns.fixed", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fpatterns.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fpatterns.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpatterns.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,6 +1,7 @@\n // run-rustfix\n-#![allow(unused)]\n #![warn(clippy::all)]\n+#![allow(unused)]\n+#![allow(clippy::uninlined_format_args)]\n \n fn main() {\n     let v = Some(true);"}, {"sha": "9128da420c0d3aca88a414bb691045a440d49278", "filename": "tests/ui/patterns.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpatterns.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,6 +1,7 @@\n // run-rustfix\n-#![allow(unused)]\n #![warn(clippy::all)]\n+#![allow(unused)]\n+#![allow(clippy::uninlined_format_args)]\n \n fn main() {\n     let v = Some(true);"}, {"sha": "2c46b4eb593e3b665d82cb1d2d94bcc7125dd5fa", "filename": "tests/ui/patterns.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fpatterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fpatterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpatterns.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,19 +1,19 @@\n error: the `y @ _` pattern can be written as just `y`\n-  --> $DIR/patterns.rs:10:9\n+  --> $DIR/patterns.rs:11:9\n    |\n LL |         y @ _ => (),\n    |         ^^^^^ help: try: `y`\n    |\n    = note: `-D clippy::redundant-pattern` implied by `-D warnings`\n \n error: the `x @ _` pattern can be written as just `x`\n-  --> $DIR/patterns.rs:25:9\n+  --> $DIR/patterns.rs:26:9\n    |\n LL |         ref mut x @ _ => {\n    |         ^^^^^^^^^^^^^ help: try: `ref mut x`\n \n error: the `x @ _` pattern can be written as just `x`\n-  --> $DIR/patterns.rs:33:9\n+  --> $DIR/patterns.rs:34:9\n    |\n LL |         ref x @ _ => println!(\"vec: {:?}\", x),\n    |         ^^^^^^^^^ help: try: `ref x`"}, {"sha": "86f908f66b8f3358c9c1a9a5230a4b66b2c21b7f", "filename": "tests/ui/print_literal.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fprint_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fprint_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprint_literal.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,4 +1,5 @@\n #![warn(clippy::print_literal)]\n+#![allow(clippy::uninlined_format_args)]\n \n fn main() {\n     // these should be fine"}, {"sha": "6404dacdafa56bbe0a88c8d691c2e2dfe45085ad", "filename": "tests/ui/print_literal.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fprint_literal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fprint_literal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprint_literal.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: literal with an empty format string\n-  --> $DIR/print_literal.rs:26:24\n+  --> $DIR/print_literal.rs:27:24\n    |\n LL |     print!(\"Hello {}\", \"world\");\n    |                        ^^^^^^^\n@@ -12,7 +12,7 @@ LL +     print!(\"Hello world\");\n    |\n \n error: literal with an empty format string\n-  --> $DIR/print_literal.rs:27:36\n+  --> $DIR/print_literal.rs:28:36\n    |\n LL |     println!(\"Hello {} {}\", world, \"world\");\n    |                                    ^^^^^^^\n@@ -24,7 +24,7 @@ LL +     println!(\"Hello {} world\", world);\n    |\n \n error: literal with an empty format string\n-  --> $DIR/print_literal.rs:28:26\n+  --> $DIR/print_literal.rs:29:26\n    |\n LL |     println!(\"Hello {}\", \"world\");\n    |                          ^^^^^^^\n@@ -36,7 +36,7 @@ LL +     println!(\"Hello world\");\n    |\n \n error: literal with an empty format string\n-  --> $DIR/print_literal.rs:29:26\n+  --> $DIR/print_literal.rs:30:26\n    |\n LL |     println!(\"{} {:.4}\", \"a literal\", 5);\n    |                          ^^^^^^^^^^^\n@@ -48,7 +48,7 @@ LL +     println!(\"a literal {:.4}\", 5);\n    |\n \n error: literal with an empty format string\n-  --> $DIR/print_literal.rs:34:25\n+  --> $DIR/print_literal.rs:35:25\n    |\n LL |     println!(\"{0} {1}\", \"hello\", \"world\");\n    |                         ^^^^^^^\n@@ -60,7 +60,7 @@ LL +     println!(\"hello {1}\", \"world\");\n    |\n \n error: literal with an empty format string\n-  --> $DIR/print_literal.rs:34:34\n+  --> $DIR/print_literal.rs:35:34\n    |\n LL |     println!(\"{0} {1}\", \"hello\", \"world\");\n    |                                  ^^^^^^^\n@@ -72,7 +72,7 @@ LL +     println!(\"{0} world\", \"hello\");\n    |\n \n error: literal with an empty format string\n-  --> $DIR/print_literal.rs:35:34\n+  --> $DIR/print_literal.rs:36:34\n    |\n LL |     println!(\"{1} {0}\", \"hello\", \"world\");\n    |                                  ^^^^^^^\n@@ -84,7 +84,7 @@ LL +     println!(\"world {0}\", \"hello\");\n    |\n \n error: literal with an empty format string\n-  --> $DIR/print_literal.rs:35:25\n+  --> $DIR/print_literal.rs:36:25\n    |\n LL |     println!(\"{1} {0}\", \"hello\", \"world\");\n    |                         ^^^^^^^\n@@ -96,7 +96,7 @@ LL +     println!(\"{1} hello\", \"world\");\n    |\n \n error: literal with an empty format string\n-  --> $DIR/print_literal.rs:38:35\n+  --> $DIR/print_literal.rs:39:35\n    |\n LL |     println!(\"{foo} {bar}\", foo = \"hello\", bar = \"world\");\n    |                                   ^^^^^^^\n@@ -108,7 +108,7 @@ LL +     println!(\"hello {bar}\", bar = \"world\");\n    |\n \n error: literal with an empty format string\n-  --> $DIR/print_literal.rs:38:50\n+  --> $DIR/print_literal.rs:39:50\n    |\n LL |     println!(\"{foo} {bar}\", foo = \"hello\", bar = \"world\");\n    |                                                  ^^^^^^^\n@@ -120,7 +120,7 @@ LL +     println!(\"{foo} world\", foo = \"hello\");\n    |\n \n error: literal with an empty format string\n-  --> $DIR/print_literal.rs:39:50\n+  --> $DIR/print_literal.rs:40:50\n    |\n LL |     println!(\"{bar} {foo}\", foo = \"hello\", bar = \"world\");\n    |                                                  ^^^^^^^\n@@ -132,7 +132,7 @@ LL +     println!(\"world {foo}\", foo = \"hello\");\n    |\n \n error: literal with an empty format string\n-  --> $DIR/print_literal.rs:39:35\n+  --> $DIR/print_literal.rs:40:35\n    |\n LL |     println!(\"{bar} {foo}\", foo = \"hello\", bar = \"world\");\n    |                                   ^^^^^^^"}, {"sha": "b92490b4c5234cef7ba253f8a56a474bfe1ff550", "filename": "tests/ui/recursive_format_impl.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Frecursive_format_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Frecursive_format_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frecursive_format_impl.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,9 +1,10 @@\n #![warn(clippy::recursive_format_impl)]\n #![allow(\n+    clippy::borrow_deref_ref,\n+    clippy::deref_addrof,\n     clippy::inherent_to_string_shadow_display,\n     clippy::to_string_in_format_args,\n-    clippy::deref_addrof,\n-    clippy::borrow_deref_ref\n+    clippy::uninlined_format_args\n )]\n \n use std::fmt;"}, {"sha": "8a58b9a3b178bd866bed602faa8502738e16c72f", "filename": "tests/ui/recursive_format_impl.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Frecursive_format_impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Frecursive_format_impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frecursive_format_impl.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,77 +1,77 @@\n error: using `self.to_string` in `fmt::Display` implementation will cause infinite recursion\n-  --> $DIR/recursive_format_impl.rs:30:25\n+  --> $DIR/recursive_format_impl.rs:31:25\n    |\n LL |         write!(f, \"{}\", self.to_string())\n    |                         ^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::recursive-format-impl` implied by `-D warnings`\n \n error: using `self` as `Display` in `impl Display` will cause infinite recursion\n-  --> $DIR/recursive_format_impl.rs:74:9\n+  --> $DIR/recursive_format_impl.rs:75:9\n    |\n LL |         write!(f, \"{}\", self)\n    |         ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `write` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: using `self` as `Display` in `impl Display` will cause infinite recursion\n-  --> $DIR/recursive_format_impl.rs:83:9\n+  --> $DIR/recursive_format_impl.rs:84:9\n    |\n LL |         write!(f, \"{}\", &self)\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `write` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: using `self` as `Debug` in `impl Debug` will cause infinite recursion\n-  --> $DIR/recursive_format_impl.rs:89:9\n+  --> $DIR/recursive_format_impl.rs:90:9\n    |\n LL |         write!(f, \"{:?}\", &self)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `write` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: using `self` as `Display` in `impl Display` will cause infinite recursion\n-  --> $DIR/recursive_format_impl.rs:98:9\n+  --> $DIR/recursive_format_impl.rs:99:9\n    |\n LL |         write!(f, \"{}\", &&&self)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `write` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: using `self` as `Display` in `impl Display` will cause infinite recursion\n-  --> $DIR/recursive_format_impl.rs:172:9\n+  --> $DIR/recursive_format_impl.rs:173:9\n    |\n LL |         write!(f, \"{}\", &*self)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `write` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: using `self` as `Debug` in `impl Debug` will cause infinite recursion\n-  --> $DIR/recursive_format_impl.rs:178:9\n+  --> $DIR/recursive_format_impl.rs:179:9\n    |\n LL |         write!(f, \"{:?}\", &*self)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `write` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: using `self` as `Display` in `impl Display` will cause infinite recursion\n-  --> $DIR/recursive_format_impl.rs:194:9\n+  --> $DIR/recursive_format_impl.rs:195:9\n    |\n LL |         write!(f, \"{}\", *self)\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `write` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: using `self` as `Display` in `impl Display` will cause infinite recursion\n-  --> $DIR/recursive_format_impl.rs:210:9\n+  --> $DIR/recursive_format_impl.rs:211:9\n    |\n LL |         write!(f, \"{}\", **&&*self)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `write` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: using `self` as `Display` in `impl Display` will cause infinite recursion\n-  --> $DIR/recursive_format_impl.rs:226:9\n+  --> $DIR/recursive_format_impl.rs:227:9\n    |\n LL |         write!(f, \"{}\", &&**&&*self)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "00b427450935d5077a7ff947a78da65c5221ef2b", "filename": "tests/ui/redundant_clone.fixed", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fredundant_clone.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fredundant_clone.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_clone.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,8 +1,8 @@\n // run-rustfix\n // rustfix-only-machine-applicable\n-\n #![feature(lint_reasons)]\n-#![allow(clippy::implicit_clone, clippy::drop_non_drop)]\n+#![allow(clippy::drop_non_drop, clippy::implicit_clone, clippy::uninlined_format_args)]\n+\n use std::ffi::OsString;\n use std::path::Path;\n "}, {"sha": "f899127db8d04674fab4e5d5282106da2e7721d8", "filename": "tests/ui/redundant_clone.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fredundant_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fredundant_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_clone.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,8 +1,8 @@\n // run-rustfix\n // rustfix-only-machine-applicable\n-\n #![feature(lint_reasons)]\n-#![allow(clippy::implicit_clone, clippy::drop_non_drop)]\n+#![allow(clippy::drop_non_drop, clippy::implicit_clone, clippy::uninlined_format_args)]\n+\n use std::ffi::OsString;\n use std::path::Path;\n "}, {"sha": "21bae909555ca7af2c6ed6a64f60d098a18dc398", "filename": "tests/ui/redundant_pattern_matching_ipaddr.fixed", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fredundant_pattern_matching_ipaddr.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fredundant_pattern_matching_ipaddr.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_ipaddr.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,8 +1,11 @@\n // run-rustfix\n-\n-#![warn(clippy::all)]\n-#![warn(clippy::redundant_pattern_matching)]\n-#![allow(unused_must_use, clippy::needless_bool, clippy::match_like_matches_macro)]\n+#![warn(clippy::all, clippy::redundant_pattern_matching)]\n+#![allow(unused_must_use)]\n+#![allow(\n+    clippy::match_like_matches_macro,\n+    clippy::needless_bool,\n+    clippy::uninlined_format_args\n+)]\n \n use std::net::{\n     IpAddr::{self, V4, V6},"}, {"sha": "4dd9171677ec20b27d9b130e74e8f87d5887558a", "filename": "tests/ui/redundant_pattern_matching_ipaddr.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fredundant_pattern_matching_ipaddr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fredundant_pattern_matching_ipaddr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_ipaddr.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,8 +1,11 @@\n // run-rustfix\n-\n-#![warn(clippy::all)]\n-#![warn(clippy::redundant_pattern_matching)]\n-#![allow(unused_must_use, clippy::needless_bool, clippy::match_like_matches_macro)]\n+#![warn(clippy::all, clippy::redundant_pattern_matching)]\n+#![allow(unused_must_use)]\n+#![allow(\n+    clippy::match_like_matches_macro,\n+    clippy::needless_bool,\n+    clippy::uninlined_format_args\n+)]\n \n use std::net::{\n     IpAddr::{self, V4, V6},"}, {"sha": "536b589de54c0971d2b4d1e82363059a46fe2b8e", "filename": "tests/ui/redundant_pattern_matching_ipaddr.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fredundant_pattern_matching_ipaddr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fredundant_pattern_matching_ipaddr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_ipaddr.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,37 +1,37 @@\n error: redundant pattern matching, consider using `is_ipv4()`\n-  --> $DIR/redundant_pattern_matching_ipaddr.rs:14:12\n+  --> $DIR/redundant_pattern_matching_ipaddr.rs:17:12\n    |\n LL |     if let V4(_) = &ipaddr {}\n    |     -------^^^^^---------- help: try this: `if ipaddr.is_ipv4()`\n    |\n    = note: `-D clippy::redundant-pattern-matching` implied by `-D warnings`\n \n error: redundant pattern matching, consider using `is_ipv4()`\n-  --> $DIR/redundant_pattern_matching_ipaddr.rs:16:12\n+  --> $DIR/redundant_pattern_matching_ipaddr.rs:19:12\n    |\n LL |     if let V4(_) = V4(Ipv4Addr::LOCALHOST) {}\n    |     -------^^^^^-------------------------- help: try this: `if V4(Ipv4Addr::LOCALHOST).is_ipv4()`\n \n error: redundant pattern matching, consider using `is_ipv6()`\n-  --> $DIR/redundant_pattern_matching_ipaddr.rs:18:12\n+  --> $DIR/redundant_pattern_matching_ipaddr.rs:21:12\n    |\n LL |     if let V6(_) = V6(Ipv6Addr::LOCALHOST) {}\n    |     -------^^^^^-------------------------- help: try this: `if V6(Ipv6Addr::LOCALHOST).is_ipv6()`\n \n error: redundant pattern matching, consider using `is_ipv4()`\n-  --> $DIR/redundant_pattern_matching_ipaddr.rs:20:15\n+  --> $DIR/redundant_pattern_matching_ipaddr.rs:23:15\n    |\n LL |     while let V4(_) = V4(Ipv4Addr::LOCALHOST) {}\n    |     ----------^^^^^-------------------------- help: try this: `while V4(Ipv4Addr::LOCALHOST).is_ipv4()`\n \n error: redundant pattern matching, consider using `is_ipv6()`\n-  --> $DIR/redundant_pattern_matching_ipaddr.rs:22:15\n+  --> $DIR/redundant_pattern_matching_ipaddr.rs:25:15\n    |\n LL |     while let V6(_) = V6(Ipv6Addr::LOCALHOST) {}\n    |     ----------^^^^^-------------------------- help: try this: `while V6(Ipv6Addr::LOCALHOST).is_ipv6()`\n \n error: redundant pattern matching, consider using `is_ipv4()`\n-  --> $DIR/redundant_pattern_matching_ipaddr.rs:32:5\n+  --> $DIR/redundant_pattern_matching_ipaddr.rs:35:5\n    |\n LL | /     match V4(Ipv4Addr::LOCALHOST) {\n LL | |         V4(_) => true,\n@@ -40,7 +40,7 @@ LL | |     };\n    | |_____^ help: try this: `V4(Ipv4Addr::LOCALHOST).is_ipv4()`\n \n error: redundant pattern matching, consider using `is_ipv6()`\n-  --> $DIR/redundant_pattern_matching_ipaddr.rs:37:5\n+  --> $DIR/redundant_pattern_matching_ipaddr.rs:40:5\n    |\n LL | /     match V4(Ipv4Addr::LOCALHOST) {\n LL | |         V4(_) => false,\n@@ -49,7 +49,7 @@ LL | |     };\n    | |_____^ help: try this: `V4(Ipv4Addr::LOCALHOST).is_ipv6()`\n \n error: redundant pattern matching, consider using `is_ipv6()`\n-  --> $DIR/redundant_pattern_matching_ipaddr.rs:42:5\n+  --> $DIR/redundant_pattern_matching_ipaddr.rs:45:5\n    |\n LL | /     match V6(Ipv6Addr::LOCALHOST) {\n LL | |         V4(_) => false,\n@@ -58,7 +58,7 @@ LL | |     };\n    | |_____^ help: try this: `V6(Ipv6Addr::LOCALHOST).is_ipv6()`\n \n error: redundant pattern matching, consider using `is_ipv4()`\n-  --> $DIR/redundant_pattern_matching_ipaddr.rs:47:5\n+  --> $DIR/redundant_pattern_matching_ipaddr.rs:50:5\n    |\n LL | /     match V6(Ipv6Addr::LOCALHOST) {\n LL | |         V4(_) => true,\n@@ -67,49 +67,49 @@ LL | |     };\n    | |_____^ help: try this: `V6(Ipv6Addr::LOCALHOST).is_ipv4()`\n \n error: redundant pattern matching, consider using `is_ipv4()`\n-  --> $DIR/redundant_pattern_matching_ipaddr.rs:52:20\n+  --> $DIR/redundant_pattern_matching_ipaddr.rs:55:20\n    |\n LL |     let _ = if let V4(_) = V4(Ipv4Addr::LOCALHOST) {\n    |             -------^^^^^-------------------------- help: try this: `if V4(Ipv4Addr::LOCALHOST).is_ipv4()`\n \n error: redundant pattern matching, consider using `is_ipv4()`\n-  --> $DIR/redundant_pattern_matching_ipaddr.rs:60:20\n+  --> $DIR/redundant_pattern_matching_ipaddr.rs:63:20\n    |\n LL |     let _ = if let V4(_) = gen_ipaddr() {\n    |             -------^^^^^--------------- help: try this: `if gen_ipaddr().is_ipv4()`\n \n error: redundant pattern matching, consider using `is_ipv6()`\n-  --> $DIR/redundant_pattern_matching_ipaddr.rs:62:19\n+  --> $DIR/redundant_pattern_matching_ipaddr.rs:65:19\n    |\n LL |     } else if let V6(_) = gen_ipaddr() {\n    |            -------^^^^^--------------- help: try this: `if gen_ipaddr().is_ipv6()`\n \n error: redundant pattern matching, consider using `is_ipv4()`\n-  --> $DIR/redundant_pattern_matching_ipaddr.rs:74:12\n+  --> $DIR/redundant_pattern_matching_ipaddr.rs:77:12\n    |\n LL |     if let V4(_) = V4(Ipv4Addr::LOCALHOST) {}\n    |     -------^^^^^-------------------------- help: try this: `if V4(Ipv4Addr::LOCALHOST).is_ipv4()`\n \n error: redundant pattern matching, consider using `is_ipv6()`\n-  --> $DIR/redundant_pattern_matching_ipaddr.rs:76:12\n+  --> $DIR/redundant_pattern_matching_ipaddr.rs:79:12\n    |\n LL |     if let V6(_) = V6(Ipv6Addr::LOCALHOST) {}\n    |     -------^^^^^-------------------------- help: try this: `if V6(Ipv6Addr::LOCALHOST).is_ipv6()`\n \n error: redundant pattern matching, consider using `is_ipv4()`\n-  --> $DIR/redundant_pattern_matching_ipaddr.rs:78:15\n+  --> $DIR/redundant_pattern_matching_ipaddr.rs:81:15\n    |\n LL |     while let V4(_) = V4(Ipv4Addr::LOCALHOST) {}\n    |     ----------^^^^^-------------------------- help: try this: `while V4(Ipv4Addr::LOCALHOST).is_ipv4()`\n \n error: redundant pattern matching, consider using `is_ipv6()`\n-  --> $DIR/redundant_pattern_matching_ipaddr.rs:80:15\n+  --> $DIR/redundant_pattern_matching_ipaddr.rs:83:15\n    |\n LL |     while let V6(_) = V6(Ipv6Addr::LOCALHOST) {}\n    |     ----------^^^^^-------------------------- help: try this: `while V6(Ipv6Addr::LOCALHOST).is_ipv6()`\n \n error: redundant pattern matching, consider using `is_ipv4()`\n-  --> $DIR/redundant_pattern_matching_ipaddr.rs:82:5\n+  --> $DIR/redundant_pattern_matching_ipaddr.rs:85:5\n    |\n LL | /     match V4(Ipv4Addr::LOCALHOST) {\n LL | |         V4(_) => true,\n@@ -118,7 +118,7 @@ LL | |     };\n    | |_____^ help: try this: `V4(Ipv4Addr::LOCALHOST).is_ipv4()`\n \n error: redundant pattern matching, consider using `is_ipv6()`\n-  --> $DIR/redundant_pattern_matching_ipaddr.rs:87:5\n+  --> $DIR/redundant_pattern_matching_ipaddr.rs:90:5\n    |\n LL | /     match V6(Ipv6Addr::LOCALHOST) {\n LL | |         V4(_) => false,"}, {"sha": "b88c5d0bec82e14b29b2ac0aa5f97e910c199be8", "filename": "tests/ui/redundant_pattern_matching_result.fixed", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fredundant_pattern_matching_result.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fredundant_pattern_matching_result.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_result.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,14 +1,13 @@\n // run-rustfix\n-\n #![warn(clippy::all)]\n #![warn(clippy::redundant_pattern_matching)]\n+#![allow(deprecated, unused_must_use)]\n #![allow(\n-    unused_must_use,\n-    clippy::needless_bool,\n+    clippy::if_same_then_else,\n     clippy::match_like_matches_macro,\n-    clippy::unnecessary_wraps,\n-    deprecated,\n-    clippy::if_same_then_else\n+    clippy::needless_bool,\n+    clippy::uninlined_format_args,\n+    clippy::unnecessary_wraps\n )]\n \n fn main() {"}, {"sha": "5949cb2271c6265951b9c0e98f92fbfced566eb3", "filename": "tests/ui/redundant_pattern_matching_result.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fredundant_pattern_matching_result.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fredundant_pattern_matching_result.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_result.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,14 +1,13 @@\n // run-rustfix\n-\n #![warn(clippy::all)]\n #![warn(clippy::redundant_pattern_matching)]\n+#![allow(deprecated, unused_must_use)]\n #![allow(\n-    unused_must_use,\n-    clippy::needless_bool,\n+    clippy::if_same_then_else,\n     clippy::match_like_matches_macro,\n-    clippy::unnecessary_wraps,\n-    deprecated,\n-    clippy::if_same_then_else\n+    clippy::needless_bool,\n+    clippy::uninlined_format_args,\n+    clippy::unnecessary_wraps\n )]\n \n fn main() {"}, {"sha": "e6afe9eb78eaa27219127559e7888d263442eb09", "filename": "tests/ui/redundant_pattern_matching_result.stderr", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fredundant_pattern_matching_result.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fredundant_pattern_matching_result.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_result.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,37 +1,37 @@\n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching_result.rs:16:12\n+  --> $DIR/redundant_pattern_matching_result.rs:15:12\n    |\n LL |     if let Ok(_) = &result {}\n    |     -------^^^^^---------- help: try this: `if result.is_ok()`\n    |\n    = note: `-D clippy::redundant-pattern-matching` implied by `-D warnings`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching_result.rs:18:12\n+  --> $DIR/redundant_pattern_matching_result.rs:17:12\n    |\n LL |     if let Ok(_) = Ok::<i32, i32>(42) {}\n    |     -------^^^^^--------------------- help: try this: `if Ok::<i32, i32>(42).is_ok()`\n \n error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/redundant_pattern_matching_result.rs:20:12\n+  --> $DIR/redundant_pattern_matching_result.rs:19:12\n    |\n LL |     if let Err(_) = Err::<i32, i32>(42) {}\n    |     -------^^^^^^---------------------- help: try this: `if Err::<i32, i32>(42).is_err()`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching_result.rs:22:15\n+  --> $DIR/redundant_pattern_matching_result.rs:21:15\n    |\n LL |     while let Ok(_) = Ok::<i32, i32>(10) {}\n    |     ----------^^^^^--------------------- help: try this: `while Ok::<i32, i32>(10).is_ok()`\n \n error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/redundant_pattern_matching_result.rs:24:15\n+  --> $DIR/redundant_pattern_matching_result.rs:23:15\n    |\n LL |     while let Err(_) = Ok::<i32, i32>(10) {}\n    |     ----------^^^^^^--------------------- help: try this: `while Ok::<i32, i32>(10).is_err()`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching_result.rs:34:5\n+  --> $DIR/redundant_pattern_matching_result.rs:33:5\n    |\n LL | /     match Ok::<i32, i32>(42) {\n LL | |         Ok(_) => true,\n@@ -40,7 +40,7 @@ LL | |     };\n    | |_____^ help: try this: `Ok::<i32, i32>(42).is_ok()`\n \n error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/redundant_pattern_matching_result.rs:39:5\n+  --> $DIR/redundant_pattern_matching_result.rs:38:5\n    |\n LL | /     match Ok::<i32, i32>(42) {\n LL | |         Ok(_) => false,\n@@ -49,7 +49,7 @@ LL | |     };\n    | |_____^ help: try this: `Ok::<i32, i32>(42).is_err()`\n \n error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/redundant_pattern_matching_result.rs:44:5\n+  --> $DIR/redundant_pattern_matching_result.rs:43:5\n    |\n LL | /     match Err::<i32, i32>(42) {\n LL | |         Ok(_) => false,\n@@ -58,7 +58,7 @@ LL | |     };\n    | |_____^ help: try this: `Err::<i32, i32>(42).is_err()`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching_result.rs:49:5\n+  --> $DIR/redundant_pattern_matching_result.rs:48:5\n    |\n LL | /     match Err::<i32, i32>(42) {\n LL | |         Ok(_) => true,\n@@ -67,73 +67,73 @@ LL | |     };\n    | |_____^ help: try this: `Err::<i32, i32>(42).is_ok()`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching_result.rs:54:20\n+  --> $DIR/redundant_pattern_matching_result.rs:53:20\n    |\n LL |     let _ = if let Ok(_) = Ok::<usize, ()>(4) { true } else { false };\n    |             -------^^^^^--------------------- help: try this: `if Ok::<usize, ()>(4).is_ok()`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching_result.rs:60:20\n+  --> $DIR/redundant_pattern_matching_result.rs:59:20\n    |\n LL |     let _ = if let Ok(_) = gen_res() {\n    |             -------^^^^^------------ help: try this: `if gen_res().is_ok()`\n \n error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/redundant_pattern_matching_result.rs:62:19\n+  --> $DIR/redundant_pattern_matching_result.rs:61:19\n    |\n LL |     } else if let Err(_) = gen_res() {\n    |            -------^^^^^^------------ help: try this: `if gen_res().is_err()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching_result.rs:85:19\n+  --> $DIR/redundant_pattern_matching_result.rs:84:19\n    |\n LL |         while let Some(_) = r#try!(result_opt()) {}\n    |         ----------^^^^^^^----------------------- help: try this: `while (r#try!(result_opt())).is_some()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching_result.rs:86:16\n+  --> $DIR/redundant_pattern_matching_result.rs:85:16\n    |\n LL |         if let Some(_) = r#try!(result_opt()) {}\n    |         -------^^^^^^^----------------------- help: try this: `if (r#try!(result_opt())).is_some()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching_result.rs:92:12\n+  --> $DIR/redundant_pattern_matching_result.rs:91:12\n    |\n LL |     if let Some(_) = m!() {}\n    |     -------^^^^^^^------- help: try this: `if m!().is_some()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching_result.rs:93:15\n+  --> $DIR/redundant_pattern_matching_result.rs:92:15\n    |\n LL |     while let Some(_) = m!() {}\n    |     ----------^^^^^^^------- help: try this: `while m!().is_some()`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching_result.rs:111:12\n+  --> $DIR/redundant_pattern_matching_result.rs:110:12\n    |\n LL |     if let Ok(_) = Ok::<i32, i32>(42) {}\n    |     -------^^^^^--------------------- help: try this: `if Ok::<i32, i32>(42).is_ok()`\n \n error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/redundant_pattern_matching_result.rs:113:12\n+  --> $DIR/redundant_pattern_matching_result.rs:112:12\n    |\n LL |     if let Err(_) = Err::<i32, i32>(42) {}\n    |     -------^^^^^^---------------------- help: try this: `if Err::<i32, i32>(42).is_err()`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching_result.rs:115:15\n+  --> $DIR/redundant_pattern_matching_result.rs:114:15\n    |\n LL |     while let Ok(_) = Ok::<i32, i32>(10) {}\n    |     ----------^^^^^--------------------- help: try this: `while Ok::<i32, i32>(10).is_ok()`\n \n error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/redundant_pattern_matching_result.rs:117:15\n+  --> $DIR/redundant_pattern_matching_result.rs:116:15\n    |\n LL |     while let Err(_) = Ok::<i32, i32>(10) {}\n    |     ----------^^^^^^--------------------- help: try this: `while Ok::<i32, i32>(10).is_err()`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching_result.rs:119:5\n+  --> $DIR/redundant_pattern_matching_result.rs:118:5\n    |\n LL | /     match Ok::<i32, i32>(42) {\n LL | |         Ok(_) => true,\n@@ -142,7 +142,7 @@ LL | |     };\n    | |_____^ help: try this: `Ok::<i32, i32>(42).is_ok()`\n \n error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/redundant_pattern_matching_result.rs:124:5\n+  --> $DIR/redundant_pattern_matching_result.rs:123:5\n    |\n LL | /     match Err::<i32, i32>(42) {\n LL | |         Ok(_) => false,"}, {"sha": "d8b56237e9832f24685d28c10b7d2fccd2e03b97", "filename": "tests/ui/result_map_unit_fn_fixable.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fresult_map_unit_fn_fixable.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fresult_map_unit_fn_fixable.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fresult_map_unit_fn_fixable.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,7 +1,7 @@\n // run-rustfix\n-\n #![warn(clippy::result_map_unit_fn)]\n #![allow(unused)]\n+#![allow(clippy::uninlined_format_args)]\n \n fn do_nothing<T>(_: T) {}\n "}, {"sha": "44f50d21109cddefefd4cd41f12dab76dd965f74", "filename": "tests/ui/result_map_unit_fn_fixable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fresult_map_unit_fn_fixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fresult_map_unit_fn_fixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fresult_map_unit_fn_fixable.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,7 +1,7 @@\n // run-rustfix\n-\n #![warn(clippy::result_map_unit_fn)]\n #![allow(unused)]\n+#![allow(clippy::uninlined_format_args)]\n \n fn do_nothing<T>(_: T) {}\n "}, {"sha": "c67edb36c67adeb9e12e1a42e6aca78fad2a24d4", "filename": "tests/ui/reversed_empty_ranges_fixable.fixed", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Freversed_empty_ranges_fixable.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Freversed_empty_ranges_fixable.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Freversed_empty_ranges_fixable.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,6 @@\n // run-rustfix\n #![warn(clippy::reversed_empty_ranges)]\n+#![allow(clippy::uninlined_format_args)]\n \n const ANSWER: i32 = 42;\n "}, {"sha": "0a4fef5bfe87bcc2c9edf835407eaf938d5da482", "filename": "tests/ui/reversed_empty_ranges_fixable.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Freversed_empty_ranges_fixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Freversed_empty_ranges_fixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Freversed_empty_ranges_fixable.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,6 @@\n // run-rustfix\n #![warn(clippy::reversed_empty_ranges)]\n+#![allow(clippy::uninlined_format_args)]\n \n const ANSWER: i32 = 42;\n "}, {"sha": "c2495ea95f9758f9d75fae0673738de968f6cd86", "filename": "tests/ui/reversed_empty_ranges_fixable.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Freversed_empty_ranges_fixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Freversed_empty_ranges_fixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Freversed_empty_ranges_fixable.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: this range is empty so it will yield no values\n-  --> $DIR/reversed_empty_ranges_fixable.rs:9:5\n+  --> $DIR/reversed_empty_ranges_fixable.rs:10:5\n    |\n LL |     (42..=21).for_each(|x| println!(\"{}\", x));\n    |     ^^^^^^^^^\n@@ -11,7 +11,7 @@ LL |     (21..=42).rev().for_each(|x| println!(\"{}\", x));\n    |     ~~~~~~~~~~~~~~~\n \n error: this range is empty so it will yield no values\n-  --> $DIR/reversed_empty_ranges_fixable.rs:10:13\n+  --> $DIR/reversed_empty_ranges_fixable.rs:11:13\n    |\n LL |     let _ = (ANSWER..21).filter(|x| x % 2 == 0).take(10).collect::<Vec<_>>();\n    |             ^^^^^^^^^^^^\n@@ -22,7 +22,7 @@ LL |     let _ = (21..ANSWER).rev().filter(|x| x % 2 == 0).take(10).collect::<Ve\n    |             ~~~~~~~~~~~~~~~~~~\n \n error: this range is empty so it will yield no values\n-  --> $DIR/reversed_empty_ranges_fixable.rs:12:14\n+  --> $DIR/reversed_empty_ranges_fixable.rs:13:14\n    |\n LL |     for _ in -21..=-42 {}\n    |              ^^^^^^^^^\n@@ -33,7 +33,7 @@ LL |     for _ in (-42..=-21).rev() {}\n    |              ~~~~~~~~~~~~~~~~~\n \n error: this range is empty so it will yield no values\n-  --> $DIR/reversed_empty_ranges_fixable.rs:13:14\n+  --> $DIR/reversed_empty_ranges_fixable.rs:14:14\n    |\n LL |     for _ in 42u32..21u32 {}\n    |              ^^^^^^^^^^^^"}, {"sha": "78401e463d50d8c7c195a2291d0aabd69cce5a65", "filename": "tests/ui/reversed_empty_ranges_loops_fixable.fixed", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Freversed_empty_ranges_loops_fixable.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Freversed_empty_ranges_loops_fixable.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Freversed_empty_ranges_loops_fixable.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,6 @@\n // run-rustfix\n #![warn(clippy::reversed_empty_ranges)]\n+#![allow(clippy::uninlined_format_args)]\n \n fn main() {\n     const MAX_LEN: usize = 42;"}, {"sha": "f9e0f7fcd6dbf058f660760c1b94974a60bd2472", "filename": "tests/ui/reversed_empty_ranges_loops_fixable.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Freversed_empty_ranges_loops_fixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Freversed_empty_ranges_loops_fixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Freversed_empty_ranges_loops_fixable.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,6 @@\n // run-rustfix\n #![warn(clippy::reversed_empty_ranges)]\n+#![allow(clippy::uninlined_format_args)]\n \n fn main() {\n     const MAX_LEN: usize = 42;"}, {"sha": "dfc52e64c751561551c187462ec897aa4885b378", "filename": "tests/ui/reversed_empty_ranges_loops_fixable.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Freversed_empty_ranges_loops_fixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Freversed_empty_ranges_loops_fixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Freversed_empty_ranges_loops_fixable.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: this range is empty so it will yield no values\n-  --> $DIR/reversed_empty_ranges_loops_fixable.rs:7:14\n+  --> $DIR/reversed_empty_ranges_loops_fixable.rs:8:14\n    |\n LL |     for i in 10..0 {\n    |              ^^^^^\n@@ -11,7 +11,7 @@ LL |     for i in (0..10).rev() {\n    |              ~~~~~~~~~~~~~\n \n error: this range is empty so it will yield no values\n-  --> $DIR/reversed_empty_ranges_loops_fixable.rs:11:14\n+  --> $DIR/reversed_empty_ranges_loops_fixable.rs:12:14\n    |\n LL |     for i in 10..=0 {\n    |              ^^^^^^\n@@ -22,7 +22,7 @@ LL |     for i in (0..=10).rev() {\n    |              ~~~~~~~~~~~~~~\n \n error: this range is empty so it will yield no values\n-  --> $DIR/reversed_empty_ranges_loops_fixable.rs:15:14\n+  --> $DIR/reversed_empty_ranges_loops_fixable.rs:16:14\n    |\n LL |     for i in MAX_LEN..0 {\n    |              ^^^^^^^^^^\n@@ -33,7 +33,7 @@ LL |     for i in (0..MAX_LEN).rev() {\n    |              ~~~~~~~~~~~~~~~~~~\n \n error: this range is empty so it will yield no values\n-  --> $DIR/reversed_empty_ranges_loops_fixable.rs:34:14\n+  --> $DIR/reversed_empty_ranges_loops_fixable.rs:35:14\n    |\n LL |     for i in (10..0).map(|x| x * 2) {\n    |              ^^^^^^^\n@@ -44,7 +44,7 @@ LL |     for i in (0..10).rev().map(|x| x * 2) {\n    |              ~~~~~~~~~~~~~\n \n error: this range is empty so it will yield no values\n-  --> $DIR/reversed_empty_ranges_loops_fixable.rs:39:14\n+  --> $DIR/reversed_empty_ranges_loops_fixable.rs:40:14\n    |\n LL |     for i in 10..5 + 4 {\n    |              ^^^^^^^^^\n@@ -55,7 +55,7 @@ LL |     for i in (5 + 4..10).rev() {\n    |              ~~~~~~~~~~~~~~~~~\n \n error: this range is empty so it will yield no values\n-  --> $DIR/reversed_empty_ranges_loops_fixable.rs:43:14\n+  --> $DIR/reversed_empty_ranges_loops_fixable.rs:44:14\n    |\n LL |     for i in (5 + 2)..(3 - 1) {\n    |              ^^^^^^^^^^^^^^^^"}, {"sha": "50264ef68cc0642001ccc5d5a0f705a2cc3961f6", "filename": "tests/ui/reversed_empty_ranges_loops_unfixable.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Freversed_empty_ranges_loops_unfixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Freversed_empty_ranges_loops_unfixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Freversed_empty_ranges_loops_unfixable.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,4 +1,5 @@\n #![warn(clippy::reversed_empty_ranges)]\n+#![allow(clippy::uninlined_format_args)]\n \n fn main() {\n     for i in 5..5 {"}, {"sha": "4490ff35f5a693ea1701a3eb4212a3cdcd516918", "filename": "tests/ui/reversed_empty_ranges_loops_unfixable.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Freversed_empty_ranges_loops_unfixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Freversed_empty_ranges_loops_unfixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Freversed_empty_ranges_loops_unfixable.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,13 +1,13 @@\n error: this range is empty so it will yield no values\n-  --> $DIR/reversed_empty_ranges_loops_unfixable.rs:4:14\n+  --> $DIR/reversed_empty_ranges_loops_unfixable.rs:5:14\n    |\n LL |     for i in 5..5 {\n    |              ^^^^\n    |\n    = note: `-D clippy::reversed-empty-ranges` implied by `-D warnings`\n \n error: this range is empty so it will yield no values\n-  --> $DIR/reversed_empty_ranges_loops_unfixable.rs:8:14\n+  --> $DIR/reversed_empty_ranges_loops_unfixable.rs:9:14\n    |\n LL |     for i in (5 + 2)..(8 - 1) {\n    |              ^^^^^^^^^^^^^^^^"}, {"sha": "e6198a1bc9a07cd01a8a0d65fcbf636407f467ff", "filename": "tests/ui/same_functions_in_if_condition.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fsame_functions_in_if_condition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fsame_functions_in_if_condition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsame_functions_in_if_condition.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,8 +1,14 @@\n #![feature(adt_const_params)]\n-#![allow(incomplete_features)]\n #![warn(clippy::same_functions_in_if_condition)]\n-#![allow(clippy::ifs_same_cond)] // This warning is different from `ifs_same_cond`.\n-#![allow(clippy::if_same_then_else, clippy::comparison_chain)] // all empty blocks\n+// ifs_same_cond warning is different from `ifs_same_cond`.\n+// clippy::if_same_then_else, clippy::comparison_chain -- all empty blocks\n+#![allow(incomplete_features)]\n+#![allow(\n+    clippy::comparison_chain,\n+    clippy::if_same_then_else,\n+    clippy::ifs_same_cond,\n+    clippy::uninlined_format_args\n+)]\n \n fn function() -> bool {\n     true"}, {"sha": "cab044ba3ef432cea0d5112498746c9ea52ad842", "filename": "tests/ui/same_functions_in_if_condition.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fsame_functions_in_if_condition.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fsame_functions_in_if_condition.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsame_functions_in_if_condition.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,72 +1,72 @@\n error: this `if` has the same function call as a previous `if`\n-  --> $DIR/same_functions_in_if_condition.rs:31:15\n+  --> $DIR/same_functions_in_if_condition.rs:37:15\n    |\n LL |     } else if function() {\n    |               ^^^^^^^^^^\n    |\n    = note: `-D clippy::same-functions-in-if-condition` implied by `-D warnings`\n note: same as this\n-  --> $DIR/same_functions_in_if_condition.rs:30:8\n+  --> $DIR/same_functions_in_if_condition.rs:36:8\n    |\n LL |     if function() {\n    |        ^^^^^^^^^^\n \n error: this `if` has the same function call as a previous `if`\n-  --> $DIR/same_functions_in_if_condition.rs:36:15\n+  --> $DIR/same_functions_in_if_condition.rs:42:15\n    |\n LL |     } else if fn_arg(a) {\n    |               ^^^^^^^^^\n    |\n note: same as this\n-  --> $DIR/same_functions_in_if_condition.rs:35:8\n+  --> $DIR/same_functions_in_if_condition.rs:41:8\n    |\n LL |     if fn_arg(a) {\n    |        ^^^^^^^^^\n \n error: this `if` has the same function call as a previous `if`\n-  --> $DIR/same_functions_in_if_condition.rs:41:15\n+  --> $DIR/same_functions_in_if_condition.rs:47:15\n    |\n LL |     } else if obj.method() {\n    |               ^^^^^^^^^^^^\n    |\n note: same as this\n-  --> $DIR/same_functions_in_if_condition.rs:40:8\n+  --> $DIR/same_functions_in_if_condition.rs:46:8\n    |\n LL |     if obj.method() {\n    |        ^^^^^^^^^^^^\n \n error: this `if` has the same function call as a previous `if`\n-  --> $DIR/same_functions_in_if_condition.rs:46:15\n+  --> $DIR/same_functions_in_if_condition.rs:52:15\n    |\n LL |     } else if obj.method_arg(a) {\n    |               ^^^^^^^^^^^^^^^^^\n    |\n note: same as this\n-  --> $DIR/same_functions_in_if_condition.rs:45:8\n+  --> $DIR/same_functions_in_if_condition.rs:51:8\n    |\n LL |     if obj.method_arg(a) {\n    |        ^^^^^^^^^^^^^^^^^\n \n error: this `if` has the same function call as a previous `if`\n-  --> $DIR/same_functions_in_if_condition.rs:53:15\n+  --> $DIR/same_functions_in_if_condition.rs:59:15\n    |\n LL |     } else if v.pop().is_none() {\n    |               ^^^^^^^^^^^^^^^^^\n    |\n note: same as this\n-  --> $DIR/same_functions_in_if_condition.rs:51:8\n+  --> $DIR/same_functions_in_if_condition.rs:57:8\n    |\n LL |     if v.pop().is_none() {\n    |        ^^^^^^^^^^^^^^^^^\n \n error: this `if` has the same function call as a previous `if`\n-  --> $DIR/same_functions_in_if_condition.rs:58:15\n+  --> $DIR/same_functions_in_if_condition.rs:64:15\n    |\n LL |     } else if v.len() == 42 {\n    |               ^^^^^^^^^^^^^\n    |\n note: same as this\n-  --> $DIR/same_functions_in_if_condition.rs:56:8\n+  --> $DIR/same_functions_in_if_condition.rs:62:8\n    |\n LL |     if v.len() == 42 {\n    |        ^^^^^^^^^^^^^"}, {"sha": "4ab7dbab59cf0237486a9160934446dbd89643e3", "filename": "tests/ui/semicolon_if_nothing_returned.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fsemicolon_if_nothing_returned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fsemicolon_if_nothing_returned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsemicolon_if_nothing_returned.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n #![warn(clippy::semicolon_if_nothing_returned)]\n-#![allow(clippy::redundant_closure)]\n+#![allow(clippy::redundant_closure, clippy::uninlined_format_args)]\n \n fn get_unit() {}\n "}, {"sha": "c65df9ece38c44c168d45395d6c7353c244647b3", "filename": "tests/ui/significant_drop_in_scrutinee.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fsignificant_drop_in_scrutinee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fsignificant_drop_in_scrutinee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsignificant_drop_in_scrutinee.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,11 +1,8 @@\n // FIXME: Ideally these suggestions would be fixed via rustfix. Blocked by rust-lang/rust#53934\n // // run-rustfix\n-\n #![warn(clippy::significant_drop_in_scrutinee)]\n-#![allow(clippy::single_match)]\n-#![allow(clippy::match_single_binding)]\n-#![allow(unused_assignments)]\n-#![allow(dead_code)]\n+#![allow(dead_code, unused_assignments)]\n+#![allow(clippy::match_single_binding, clippy::single_match, clippy::uninlined_format_args)]\n \n use std::num::ParseIntError;\n use std::ops::Deref;"}, {"sha": "179ac72564a05cc0e7f9cddee69f9f2483621445", "filename": "tests/ui/significant_drop_in_scrutinee.stderr", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fsignificant_drop_in_scrutinee.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fsignificant_drop_in_scrutinee.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsignificant_drop_in_scrutinee.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n-  --> $DIR/significant_drop_in_scrutinee.rs:59:11\n+  --> $DIR/significant_drop_in_scrutinee.rs:56:11\n    |\n LL |     match mutex.lock().unwrap().foo() {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -19,7 +19,7 @@ LL ~     match value {\n    |\n \n error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n-  --> $DIR/significant_drop_in_scrutinee.rs:145:11\n+  --> $DIR/significant_drop_in_scrutinee.rs:142:11\n    |\n LL |     match s.lock_m().get_the_value() {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -38,7 +38,7 @@ LL ~     match value {\n    |\n \n error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n-  --> $DIR/significant_drop_in_scrutinee.rs:166:11\n+  --> $DIR/significant_drop_in_scrutinee.rs:163:11\n    |\n LL |     match s.lock_m_m().get_the_value() {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -57,7 +57,7 @@ LL ~     match value {\n    |\n \n error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n-  --> $DIR/significant_drop_in_scrutinee.rs:214:11\n+  --> $DIR/significant_drop_in_scrutinee.rs:211:11\n    |\n LL |     match counter.temp_increment().len() {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -73,7 +73,7 @@ LL ~     match value {\n    |\n \n error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n-  --> $DIR/significant_drop_in_scrutinee.rs:237:16\n+  --> $DIR/significant_drop_in_scrutinee.rs:234:16\n    |\n LL |         match (mutex1.lock().unwrap().s.len(), true) {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -92,7 +92,7 @@ LL ~         match (value, true) {\n    |\n \n error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n-  --> $DIR/significant_drop_in_scrutinee.rs:246:22\n+  --> $DIR/significant_drop_in_scrutinee.rs:243:22\n    |\n LL |         match (true, mutex1.lock().unwrap().s.len(), true) {\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -111,7 +111,7 @@ LL ~         match (true, value, true) {\n    |\n \n error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n-  --> $DIR/significant_drop_in_scrutinee.rs:256:16\n+  --> $DIR/significant_drop_in_scrutinee.rs:253:16\n    |\n LL |         match (mutex1.lock().unwrap().s.len(), true, mutex2.lock().unwrap().s.len()) {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -132,7 +132,7 @@ LL ~         match (value, true, mutex2.lock().unwrap().s.len()) {\n    |\n \n error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n-  --> $DIR/significant_drop_in_scrutinee.rs:256:54\n+  --> $DIR/significant_drop_in_scrutinee.rs:253:54\n    |\n LL |         match (mutex1.lock().unwrap().s.len(), true, mutex2.lock().unwrap().s.len()) {\n    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -153,7 +153,7 @@ LL ~         match (mutex1.lock().unwrap().s.len(), true, value) {\n    |\n \n error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n-  --> $DIR/significant_drop_in_scrutinee.rs:267:15\n+  --> $DIR/significant_drop_in_scrutinee.rs:264:15\n    |\n LL |         match mutex3.lock().unwrap().s.as_str() {\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -169,7 +169,7 @@ LL |         };\n    = note: this might lead to deadlocks or other unexpected behavior\n \n error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n-  --> $DIR/significant_drop_in_scrutinee.rs:277:22\n+  --> $DIR/significant_drop_in_scrutinee.rs:274:22\n    |\n LL |         match (true, mutex3.lock().unwrap().s.as_str()) {\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -185,7 +185,7 @@ LL |         };\n    = note: this might lead to deadlocks or other unexpected behavior\n \n error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n-  --> $DIR/significant_drop_in_scrutinee.rs:296:11\n+  --> $DIR/significant_drop_in_scrutinee.rs:293:11\n    |\n LL |     match mutex.lock().unwrap().s.len() > 1 {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -204,7 +204,7 @@ LL ~     match value {\n    |\n \n error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n-  --> $DIR/significant_drop_in_scrutinee.rs:303:11\n+  --> $DIR/significant_drop_in_scrutinee.rs:300:11\n    |\n LL |     match 1 < mutex.lock().unwrap().s.len() {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -223,7 +223,7 @@ LL ~     match value {\n    |\n \n error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n-  --> $DIR/significant_drop_in_scrutinee.rs:321:11\n+  --> $DIR/significant_drop_in_scrutinee.rs:318:11\n    |\n LL |     match mutex1.lock().unwrap().s.len() < mutex2.lock().unwrap().s.len() {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -244,7 +244,7 @@ LL ~     match value {\n    |\n \n error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n-  --> $DIR/significant_drop_in_scrutinee.rs:332:11\n+  --> $DIR/significant_drop_in_scrutinee.rs:329:11\n    |\n LL |     match mutex1.lock().unwrap().s.len() >= mutex2.lock().unwrap().s.len() {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -265,7 +265,7 @@ LL ~     match value {\n    |\n \n error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n-  --> $DIR/significant_drop_in_scrutinee.rs:367:11\n+  --> $DIR/significant_drop_in_scrutinee.rs:364:11\n    |\n LL |     match get_mutex_guard().s.len() > 1 {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -284,7 +284,7 @@ LL ~     match value {\n    |\n \n error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n-  --> $DIR/significant_drop_in_scrutinee.rs:384:11\n+  --> $DIR/significant_drop_in_scrutinee.rs:381:11\n    |\n LL |       match match i {\n    |  ___________^\n@@ -316,7 +316,7 @@ LL ~     match value\n    |\n \n error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n-  --> $DIR/significant_drop_in_scrutinee.rs:410:11\n+  --> $DIR/significant_drop_in_scrutinee.rs:407:11\n    |\n LL |       match if i > 1 {\n    |  ___________^\n@@ -349,7 +349,7 @@ LL ~     match value\n    |\n \n error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n-  --> $DIR/significant_drop_in_scrutinee.rs:464:11\n+  --> $DIR/significant_drop_in_scrutinee.rs:461:11\n    |\n LL |     match s.lock().deref().deref() {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -367,7 +367,7 @@ LL ~     match value {\n    |\n \n error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n-  --> $DIR/significant_drop_in_scrutinee.rs:492:11\n+  --> $DIR/significant_drop_in_scrutinee.rs:489:11\n    |\n LL |     match s.lock().deref().deref() {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -380,7 +380,7 @@ LL |     };\n    = note: this might lead to deadlocks or other unexpected behavior\n \n error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n-  --> $DIR/significant_drop_in_scrutinee.rs:511:11\n+  --> $DIR/significant_drop_in_scrutinee.rs:508:11\n    |\n LL |     match mutex.lock().unwrap().i = i {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -399,7 +399,7 @@ LL ~     match () {\n    |\n \n error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n-  --> $DIR/significant_drop_in_scrutinee.rs:517:11\n+  --> $DIR/significant_drop_in_scrutinee.rs:514:11\n    |\n LL |     match i = mutex.lock().unwrap().i {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -418,7 +418,7 @@ LL ~     match () {\n    |\n \n error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n-  --> $DIR/significant_drop_in_scrutinee.rs:523:11\n+  --> $DIR/significant_drop_in_scrutinee.rs:520:11\n    |\n LL |     match mutex.lock().unwrap().i += 1 {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -437,7 +437,7 @@ LL ~     match () {\n    |\n \n error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n-  --> $DIR/significant_drop_in_scrutinee.rs:529:11\n+  --> $DIR/significant_drop_in_scrutinee.rs:526:11\n    |\n LL |     match i += mutex.lock().unwrap().i {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -456,7 +456,7 @@ LL ~     match () {\n    |\n \n error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n-  --> $DIR/significant_drop_in_scrutinee.rs:592:11\n+  --> $DIR/significant_drop_in_scrutinee.rs:589:11\n    |\n LL |     match rwlock.read().unwrap().to_number() {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -467,7 +467,7 @@ LL |     };\n    = note: this might lead to deadlocks or other unexpected behavior\n \n error: temporary with significant `Drop` in `for` loop condition will live until the end of the `for` expression\n-  --> $DIR/significant_drop_in_scrutinee.rs:602:14\n+  --> $DIR/significant_drop_in_scrutinee.rs:599:14\n    |\n LL |     for s in rwlock.read().unwrap().iter() {\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -478,7 +478,7 @@ LL |     }\n    = note: this might lead to deadlocks or other unexpected behavior\n \n error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n-  --> $DIR/significant_drop_in_scrutinee.rs:617:11\n+  --> $DIR/significant_drop_in_scrutinee.rs:614:11\n    |\n LL |     match mutex.lock().unwrap().foo() {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "d0c9b7b5663e7138bd2ff5298ca8cd8e94666383", "filename": "tests/ui/single_match.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fsingle_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fsingle_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_match.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,4 +1,5 @@\n #![warn(clippy::single_match)]\n+#![allow(clippy::uninlined_format_args)]\n \n fn dummy() {}\n "}, {"sha": "7cecc1b73950643d7c81fc216b8af94b84434be3", "filename": "tests/ui/single_match.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fsingle_match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fsingle_match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_match.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/single_match.rs:8:5\n+  --> $DIR/single_match.rs:9:5\n    |\n LL | /     match x {\n LL | |         Some(y) => {\n@@ -18,7 +18,7 @@ LL ~     };\n    |\n \n error: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/single_match.rs:16:5\n+  --> $DIR/single_match.rs:17:5\n    |\n LL | /     match x {\n LL | |         // Note the missing block braces.\n@@ -30,7 +30,7 @@ LL | |     }\n    | |_____^ help: try this: `if let Some(y) = x { println!(\"{:?}\", y) }`\n \n error: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/single_match.rs:25:5\n+  --> $DIR/single_match.rs:26:5\n    |\n LL | /     match z {\n LL | |         (2..=3, 7..=9) => dummy(),\n@@ -39,7 +39,7 @@ LL | |     };\n    | |_____^ help: try this: `if let (2..=3, 7..=9) = z { dummy() }`\n \n error: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/single_match.rs:54:5\n+  --> $DIR/single_match.rs:55:5\n    |\n LL | /     match x {\n LL | |         Some(y) => dummy(),\n@@ -48,7 +48,7 @@ LL | |     };\n    | |_____^ help: try this: `if let Some(y) = x { dummy() }`\n \n error: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/single_match.rs:59:5\n+  --> $DIR/single_match.rs:60:5\n    |\n LL | /     match y {\n LL | |         Ok(y) => dummy(),\n@@ -57,7 +57,7 @@ LL | |     };\n    | |_____^ help: try this: `if let Ok(y) = y { dummy() }`\n \n error: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/single_match.rs:66:5\n+  --> $DIR/single_match.rs:67:5\n    |\n LL | /     match c {\n LL | |         Cow::Borrowed(..) => dummy(),\n@@ -66,7 +66,7 @@ LL | |     };\n    | |_____^ help: try this: `if let Cow::Borrowed(..) = c { dummy() }`\n \n error: you seem to be trying to use `match` for an equality check. Consider using `if`\n-  --> $DIR/single_match.rs:87:5\n+  --> $DIR/single_match.rs:88:5\n    |\n LL | /     match x {\n LL | |         \"test\" => println!(),\n@@ -75,7 +75,7 @@ LL | |     }\n    | |_____^ help: try this: `if x == \"test\" { println!() }`\n \n error: you seem to be trying to use `match` for an equality check. Consider using `if`\n-  --> $DIR/single_match.rs:100:5\n+  --> $DIR/single_match.rs:101:5\n    |\n LL | /     match x {\n LL | |         Foo::A => println!(),\n@@ -84,7 +84,7 @@ LL | |     }\n    | |_____^ help: try this: `if x == Foo::A { println!() }`\n \n error: you seem to be trying to use `match` for an equality check. Consider using `if`\n-  --> $DIR/single_match.rs:106:5\n+  --> $DIR/single_match.rs:107:5\n    |\n LL | /     match x {\n LL | |         FOO_C => println!(),\n@@ -93,7 +93,7 @@ LL | |     }\n    | |_____^ help: try this: `if x == FOO_C { println!() }`\n \n error: you seem to be trying to use `match` for an equality check. Consider using `if`\n-  --> $DIR/single_match.rs:111:5\n+  --> $DIR/single_match.rs:112:5\n    |\n LL | /     match &&x {\n LL | |         Foo::A => println!(),\n@@ -102,7 +102,7 @@ LL | |     }\n    | |_____^ help: try this: `if x == Foo::A { println!() }`\n \n error: you seem to be trying to use `match` for an equality check. Consider using `if`\n-  --> $DIR/single_match.rs:117:5\n+  --> $DIR/single_match.rs:118:5\n    |\n LL | /     match &x {\n LL | |         Foo::A => println!(),\n@@ -111,7 +111,7 @@ LL | |     }\n    | |_____^ help: try this: `if x == &Foo::A { println!() }`\n \n error: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/single_match.rs:134:5\n+  --> $DIR/single_match.rs:135:5\n    |\n LL | /     match x {\n LL | |         Bar::A => println!(),\n@@ -120,7 +120,7 @@ LL | |     }\n    | |_____^ help: try this: `if let Bar::A = x { println!() }`\n \n error: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/single_match.rs:142:5\n+  --> $DIR/single_match.rs:143:5\n    |\n LL | /     match x {\n LL | |         None => println!(),\n@@ -129,7 +129,7 @@ LL | |     };\n    | |_____^ help: try this: `if let None = x { println!() }`\n \n error: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/single_match.rs:164:5\n+  --> $DIR/single_match.rs:165:5\n    |\n LL | /     match x {\n LL | |         (Some(_), _) => {},\n@@ -138,7 +138,7 @@ LL | |     }\n    | |_____^ help: try this: `if let (Some(_), _) = x {}`\n \n error: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/single_match.rs:170:5\n+  --> $DIR/single_match.rs:171:5\n    |\n LL | /     match x {\n LL | |         (Some(E::V), _) => todo!(),\n@@ -147,7 +147,7 @@ LL | |     }\n    | |_____^ help: try this: `if let (Some(E::V), _) = x { todo!() }`\n \n error: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/single_match.rs:176:5\n+  --> $DIR/single_match.rs:177:5\n    |\n LL | /     match (Some(42), Some(E::V), Some(42)) {\n LL | |         (.., Some(E::V), _) => {},"}, {"sha": "5d03f77e9326e311dceba750ace4662429d4964d", "filename": "tests/ui/single_match_else.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fsingle_match_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fsingle_match_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_match_else.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,8 +1,6 @@\n // aux-build: proc_macro_with_span.rs\n-\n #![warn(clippy::single_match_else)]\n-#![allow(clippy::needless_return)]\n-#![allow(clippy::no_effect)]\n+#![allow(clippy::needless_return, clippy::no_effect, clippy::uninlined_format_args)]\n \n extern crate proc_macro_with_span;\n use proc_macro_with_span::with_span;"}, {"sha": "62876a55dc6165f531f460bbb1ed9efd61386b51", "filename": "tests/ui/single_match_else.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fsingle_match_else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fsingle_match_else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_match_else.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/single_match_else.rs:19:13\n+  --> $DIR/single_match_else.rs:17:13\n    |\n LL |       let _ = match ExprNode::Butterflies {\n    |  _____________^\n@@ -21,7 +21,7 @@ LL ~     };\n    |\n \n error: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/single_match_else.rs:84:5\n+  --> $DIR/single_match_else.rs:82:5\n    |\n LL | /     match Some(1) {\n LL | |         Some(a) => println!(\"${:?}\", a),\n@@ -41,7 +41,7 @@ LL +     }\n    |\n \n error: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/single_match_else.rs:93:5\n+  --> $DIR/single_match_else.rs:91:5\n    |\n LL | /     match Some(1) {\n LL | |         Some(a) => println!(\"${:?}\", a),\n@@ -61,7 +61,7 @@ LL +     }\n    |\n \n error: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/single_match_else.rs:103:5\n+  --> $DIR/single_match_else.rs:101:5\n    |\n LL | /     match Result::<i32, Infallible>::Ok(1) {\n LL | |         Ok(a) => println!(\"${:?}\", a),\n@@ -81,7 +81,7 @@ LL +     }\n    |\n \n error: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/single_match_else.rs:112:5\n+  --> $DIR/single_match_else.rs:110:5\n    |\n LL | /     match Cow::from(\"moo\") {\n LL | |         Cow::Owned(a) => println!(\"${:?}\", a),"}, {"sha": "09fb66ca37e04e44f4ebdeff8cf488fcdca54506", "filename": "tests/ui/toplevel_ref_arg.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Ftoplevel_ref_arg.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Ftoplevel_ref_arg.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftoplevel_ref_arg.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,7 +1,7 @@\n // run-rustfix\n // aux-build:macro_rules.rs\n-\n #![warn(clippy::toplevel_ref_arg)]\n+#![allow(clippy::uninlined_format_args)]\n \n #[macro_use]\n extern crate macro_rules;"}, {"sha": "9d1f2f810983a6647e6442d6719b8c041966e920", "filename": "tests/ui/toplevel_ref_arg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Ftoplevel_ref_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Ftoplevel_ref_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftoplevel_ref_arg.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,7 +1,7 @@\n // run-rustfix\n // aux-build:macro_rules.rs\n-\n #![warn(clippy::toplevel_ref_arg)]\n+#![allow(clippy::uninlined_format_args)]\n \n #[macro_use]\n extern crate macro_rules;"}, {"sha": "af4f3b18443bdeeee4da62135941e2ea67f40aba", "filename": "tests/ui/trivially_copy_pass_by_ref.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Ftrivially_copy_pass_by_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Ftrivially_copy_pass_by_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftrivially_copy_pass_by_ref.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,8 +1,11 @@\n // normalize-stderr-test \"\\(\\d+ byte\\)\" -> \"(N byte)\"\n // normalize-stderr-test \"\\(limit: \\d+ byte\\)\" -> \"(limit: N byte)\"\n-\n #![deny(clippy::trivially_copy_pass_by_ref)]\n-#![allow(clippy::disallowed_names, clippy::redundant_field_names)]\n+#![allow(\n+    clippy::disallowed_names,\n+    clippy::redundant_field_names,\n+    clippy::uninlined_format_args\n+)]\n \n #[derive(Copy, Clone)]\n struct Foo(u32);"}, {"sha": "6a8eca9655343a6e57bac72cdfb7b8c59afc4e94", "filename": "tests/ui/trivially_copy_pass_by_ref.stderr", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Ftrivially_copy_pass_by_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Ftrivially_copy_pass_by_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftrivially_copy_pass_by_ref.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,113 +1,113 @@\n error: this argument (N byte) is passed by reference, but would be more efficient if passed by value (limit: N byte)\n-  --> $DIR/trivially_copy_pass_by_ref.rs:47:11\n+  --> $DIR/trivially_copy_pass_by_ref.rs:50:11\n    |\n LL | fn bad(x: &u32, y: &Foo, z: &Baz) {}\n    |           ^^^^ help: consider passing by value instead: `u32`\n    |\n note: the lint level is defined here\n-  --> $DIR/trivially_copy_pass_by_ref.rs:4:9\n+  --> $DIR/trivially_copy_pass_by_ref.rs:3:9\n    |\n LL | #![deny(clippy::trivially_copy_pass_by_ref)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this argument (N byte) is passed by reference, but would be more efficient if passed by value (limit: N byte)\n-  --> $DIR/trivially_copy_pass_by_ref.rs:47:20\n+  --> $DIR/trivially_copy_pass_by_ref.rs:50:20\n    |\n LL | fn bad(x: &u32, y: &Foo, z: &Baz) {}\n    |                    ^^^^ help: consider passing by value instead: `Foo`\n \n error: this argument (N byte) is passed by reference, but would be more efficient if passed by value (limit: N byte)\n-  --> $DIR/trivially_copy_pass_by_ref.rs:47:29\n+  --> $DIR/trivially_copy_pass_by_ref.rs:50:29\n    |\n LL | fn bad(x: &u32, y: &Foo, z: &Baz) {}\n    |                             ^^^^ help: consider passing by value instead: `Baz`\n \n error: this argument (N byte) is passed by reference, but would be more efficient if passed by value (limit: N byte)\n-  --> $DIR/trivially_copy_pass_by_ref.rs:54:12\n+  --> $DIR/trivially_copy_pass_by_ref.rs:57:12\n    |\n LL |     fn bad(&self, x: &u32, y: &Foo, z: &Baz) {}\n    |            ^^^^^ help: consider passing by value instead: `self`\n \n error: this argument (N byte) is passed by reference, but would be more efficient if passed by value (limit: N byte)\n-  --> $DIR/trivially_copy_pass_by_ref.rs:54:22\n+  --> $DIR/trivially_copy_pass_by_ref.rs:57:22\n    |\n LL |     fn bad(&self, x: &u32, y: &Foo, z: &Baz) {}\n    |                      ^^^^ help: consider passing by value instead: `u32`\n \n error: this argument (N byte) is passed by reference, but would be more efficient if passed by value (limit: N byte)\n-  --> $DIR/trivially_copy_pass_by_ref.rs:54:31\n+  --> $DIR/trivially_copy_pass_by_ref.rs:57:31\n    |\n LL |     fn bad(&self, x: &u32, y: &Foo, z: &Baz) {}\n    |                               ^^^^ help: consider passing by value instead: `Foo`\n \n error: this argument (N byte) is passed by reference, but would be more efficient if passed by value (limit: N byte)\n-  --> $DIR/trivially_copy_pass_by_ref.rs:54:40\n+  --> $DIR/trivially_copy_pass_by_ref.rs:57:40\n    |\n LL |     fn bad(&self, x: &u32, y: &Foo, z: &Baz) {}\n    |                                        ^^^^ help: consider passing by value instead: `Baz`\n \n error: this argument (N byte) is passed by reference, but would be more efficient if passed by value (limit: N byte)\n-  --> $DIR/trivially_copy_pass_by_ref.rs:56:16\n+  --> $DIR/trivially_copy_pass_by_ref.rs:59:16\n    |\n LL |     fn bad2(x: &u32, y: &Foo, z: &Baz) {}\n    |                ^^^^ help: consider passing by value instead: `u32`\n \n error: this argument (N byte) is passed by reference, but would be more efficient if passed by value (limit: N byte)\n-  --> $DIR/trivially_copy_pass_by_ref.rs:56:25\n+  --> $DIR/trivially_copy_pass_by_ref.rs:59:25\n    |\n LL |     fn bad2(x: &u32, y: &Foo, z: &Baz) {}\n    |                         ^^^^ help: consider passing by value instead: `Foo`\n \n error: this argument (N byte) is passed by reference, but would be more efficient if passed by value (limit: N byte)\n-  --> $DIR/trivially_copy_pass_by_ref.rs:56:34\n+  --> $DIR/trivially_copy_pass_by_ref.rs:59:34\n    |\n LL |     fn bad2(x: &u32, y: &Foo, z: &Baz) {}\n    |                                  ^^^^ help: consider passing by value instead: `Baz`\n \n error: this argument (N byte) is passed by reference, but would be more efficient if passed by value (limit: N byte)\n-  --> $DIR/trivially_copy_pass_by_ref.rs:58:35\n+  --> $DIR/trivially_copy_pass_by_ref.rs:61:35\n    |\n LL |     fn bad_issue7518(self, other: &Self) {}\n    |                                   ^^^^^ help: consider passing by value instead: `Self`\n \n error: this argument (N byte) is passed by reference, but would be more efficient if passed by value (limit: N byte)\n-  --> $DIR/trivially_copy_pass_by_ref.rs:70:16\n+  --> $DIR/trivially_copy_pass_by_ref.rs:73:16\n    |\n LL |     fn bad2(x: &u32, y: &Foo, z: &Baz) {}\n    |                ^^^^ help: consider passing by value instead: `u32`\n \n error: this argument (N byte) is passed by reference, but would be more efficient if passed by value (limit: N byte)\n-  --> $DIR/trivially_copy_pass_by_ref.rs:70:25\n+  --> $DIR/trivially_copy_pass_by_ref.rs:73:25\n    |\n LL |     fn bad2(x: &u32, y: &Foo, z: &Baz) {}\n    |                         ^^^^ help: consider passing by value instead: `Foo`\n \n error: this argument (N byte) is passed by reference, but would be more efficient if passed by value (limit: N byte)\n-  --> $DIR/trivially_copy_pass_by_ref.rs:70:34\n+  --> $DIR/trivially_copy_pass_by_ref.rs:73:34\n    |\n LL |     fn bad2(x: &u32, y: &Foo, z: &Baz) {}\n    |                                  ^^^^ help: consider passing by value instead: `Baz`\n \n error: this argument (N byte) is passed by reference, but would be more efficient if passed by value (limit: N byte)\n-  --> $DIR/trivially_copy_pass_by_ref.rs:74:34\n+  --> $DIR/trivially_copy_pass_by_ref.rs:77:34\n    |\n LL |     fn trait_method(&self, _foo: &Foo);\n    |                                  ^^^^ help: consider passing by value instead: `Foo`\n \n error: this argument (N byte) is passed by reference, but would be more efficient if passed by value (limit: N byte)\n-  --> $DIR/trivially_copy_pass_by_ref.rs:106:21\n+  --> $DIR/trivially_copy_pass_by_ref.rs:109:21\n    |\n LL |     fn foo_never(x: &i32) {\n    |                     ^^^^ help: consider passing by value instead: `i32`\n \n error: this argument (N byte) is passed by reference, but would be more efficient if passed by value (limit: N byte)\n-  --> $DIR/trivially_copy_pass_by_ref.rs:111:15\n+  --> $DIR/trivially_copy_pass_by_ref.rs:114:15\n    |\n LL |     fn foo(x: &i32) {\n    |               ^^^^ help: consider passing by value instead: `i32`\n \n error: this argument (N byte) is passed by reference, but would be more efficient if passed by value (limit: N byte)\n-  --> $DIR/trivially_copy_pass_by_ref.rs:138:37\n+  --> $DIR/trivially_copy_pass_by_ref.rs:141:37\n    |\n LL | fn _unrelated_lifetimes<'a, 'b>(_x: &'a u32, y: &'b u32) -> &'b u32 {\n    |                                     ^^^^^^^ help: consider passing by value instead: `u32`"}, {"sha": "931916819ce2e3009457126c5f2e04d4791c9ec9", "filename": "tests/ui/uninlined_format_args.fixed", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Funinlined_format_args.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Funinlined_format_args.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funinlined_format_args.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,12 +1,8 @@\n // run-rustfix\n-\n-#![allow(clippy::eq_op)]\n-#![allow(clippy::format_in_format_args)]\n-#![allow(clippy::print_literal)]\n-#![allow(named_arguments_used_positionally)]\n-#![allow(unused_variables, unused_imports, unused_macros)]\n-#![warn(clippy::uninlined_format_args)]\n #![feature(custom_inner_attributes)]\n+#![warn(clippy::uninlined_format_args)]\n+#![allow(named_arguments_used_positionally, unused_imports, unused_macros, unused_variables)]\n+#![allow(clippy::eq_op, clippy::format_in_format_args, clippy::print_literal)]\n \n macro_rules! no_param_str {\n     () => {"}, {"sha": "0a9086775143b9353c306e8697083fedc3876534", "filename": "tests/ui/uninlined_format_args.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Funinlined_format_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Funinlined_format_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funinlined_format_args.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,12 +1,8 @@\n // run-rustfix\n-\n-#![allow(clippy::eq_op)]\n-#![allow(clippy::format_in_format_args)]\n-#![allow(clippy::print_literal)]\n-#![allow(named_arguments_used_positionally)]\n-#![allow(unused_variables, unused_imports, unused_macros)]\n-#![warn(clippy::uninlined_format_args)]\n #![feature(custom_inner_attributes)]\n+#![warn(clippy::uninlined_format_args)]\n+#![allow(named_arguments_used_positionally, unused_imports, unused_macros, unused_variables)]\n+#![allow(clippy::eq_op, clippy::format_in_format_args, clippy::print_literal)]\n \n macro_rules! no_param_str {\n     () => {"}, {"sha": "6c8f3f4334807d9cc326239540b64673b17a053f", "filename": "tests/ui/uninlined_format_args.stderr", "status": "modified", "additions": 71, "deletions": 71, "changes": 142, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Funinlined_format_args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Funinlined_format_args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funinlined_format_args.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:47:5\n+  --> $DIR/uninlined_format_args.rs:43:5\n    |\n LL |     println!(\"val='{}'\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -12,7 +12,7 @@ LL +     println!(\"val='{local_i32}'\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:48:5\n+  --> $DIR/uninlined_format_args.rs:44:5\n    |\n LL |     println!(\"val='{   }'\", local_i32); // 3 spaces\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -24,7 +24,7 @@ LL +     println!(\"val='{local_i32}'\"); // 3 spaces\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:49:5\n+  --> $DIR/uninlined_format_args.rs:45:5\n    |\n LL |     println!(\"val='{    }'\", local_i32); // tab\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -36,7 +36,7 @@ LL +     println!(\"val='{local_i32}'\"); // tab\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:50:5\n+  --> $DIR/uninlined_format_args.rs:46:5\n    |\n LL |     println!(\"val='{     }'\", local_i32); // space+tab\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -48,7 +48,7 @@ LL +     println!(\"val='{local_i32}'\"); // space+tab\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:51:5\n+  --> $DIR/uninlined_format_args.rs:47:5\n    |\n LL |     println!(\"val='{     }'\", local_i32); // tab+space\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -60,7 +60,7 @@ LL +     println!(\"val='{local_i32}'\"); // tab+space\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:52:5\n+  --> $DIR/uninlined_format_args.rs:48:5\n    |\n LL | /     println!(\n LL | |         \"val='{\n@@ -76,7 +76,7 @@ LL +         \"val='{local_i32}'\"\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:57:5\n+  --> $DIR/uninlined_format_args.rs:53:5\n    |\n LL |     println!(\"{}\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -88,7 +88,7 @@ LL +     println!(\"{local_i32}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:58:5\n+  --> $DIR/uninlined_format_args.rs:54:5\n    |\n LL |     println!(\"{}\", fn_arg);\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n@@ -100,7 +100,7 @@ LL +     println!(\"{fn_arg}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:59:5\n+  --> $DIR/uninlined_format_args.rs:55:5\n    |\n LL |     println!(\"{:?}\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -112,7 +112,7 @@ LL +     println!(\"{local_i32:?}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:60:5\n+  --> $DIR/uninlined_format_args.rs:56:5\n    |\n LL |     println!(\"{:#?}\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -124,7 +124,7 @@ LL +     println!(\"{local_i32:#?}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:61:5\n+  --> $DIR/uninlined_format_args.rs:57:5\n    |\n LL |     println!(\"{:4}\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -136,7 +136,7 @@ LL +     println!(\"{local_i32:4}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:62:5\n+  --> $DIR/uninlined_format_args.rs:58:5\n    |\n LL |     println!(\"{:04}\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -148,7 +148,7 @@ LL +     println!(\"{local_i32:04}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:63:5\n+  --> $DIR/uninlined_format_args.rs:59:5\n    |\n LL |     println!(\"{:<3}\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -160,7 +160,7 @@ LL +     println!(\"{local_i32:<3}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:64:5\n+  --> $DIR/uninlined_format_args.rs:60:5\n    |\n LL |     println!(\"{:#010x}\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -172,7 +172,7 @@ LL +     println!(\"{local_i32:#010x}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:65:5\n+  --> $DIR/uninlined_format_args.rs:61:5\n    |\n LL |     println!(\"{:.1}\", local_f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -184,7 +184,7 @@ LL +     println!(\"{local_f64:.1}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:66:5\n+  --> $DIR/uninlined_format_args.rs:62:5\n    |\n LL |     println!(\"Hello {} is {:.*}\", \"x\", local_i32, local_f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -196,7 +196,7 @@ LL +     println!(\"Hello {} is {local_f64:.local_i32$}\", \"x\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:67:5\n+  --> $DIR/uninlined_format_args.rs:63:5\n    |\n LL |     println!(\"Hello {} is {:.*}\", local_i32, 5, local_f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -208,7 +208,7 @@ LL +     println!(\"Hello {local_i32} is {local_f64:.*}\", 5);\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:68:5\n+  --> $DIR/uninlined_format_args.rs:64:5\n    |\n LL |     println!(\"Hello {} is {2:.*}\", local_i32, 5, local_f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -220,7 +220,7 @@ LL +     println!(\"Hello {local_i32} is {local_f64:.*}\", 5);\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:69:5\n+  --> $DIR/uninlined_format_args.rs:65:5\n    |\n LL |     println!(\"{} {}\", local_i32, local_f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -232,7 +232,7 @@ LL +     println!(\"{local_i32} {local_f64}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:70:5\n+  --> $DIR/uninlined_format_args.rs:66:5\n    |\n LL |     println!(\"{}, {}\", local_i32, local_opt.unwrap());\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -244,7 +244,7 @@ LL +     println!(\"{local_i32}, {}\", local_opt.unwrap());\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:71:5\n+  --> $DIR/uninlined_format_args.rs:67:5\n    |\n LL |     println!(\"{}\", val);\n    |     ^^^^^^^^^^^^^^^^^^^\n@@ -256,7 +256,7 @@ LL +     println!(\"{val}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:72:5\n+  --> $DIR/uninlined_format_args.rs:68:5\n    |\n LL |     println!(\"{}\", v = val);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n@@ -268,7 +268,7 @@ LL +     println!(\"{val}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:74:5\n+  --> $DIR/uninlined_format_args.rs:70:5\n    |\n LL |     println!(\"val='{/t }'\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -280,7 +280,7 @@ LL +     println!(\"val='{local_i32}'\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:75:5\n+  --> $DIR/uninlined_format_args.rs:71:5\n    |\n LL |     println!(\"val='{/n }'\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -292,7 +292,7 @@ LL +     println!(\"val='{local_i32}'\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:76:5\n+  --> $DIR/uninlined_format_args.rs:72:5\n    |\n LL |     println!(\"val='{local_i32}'\", local_i32 = local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -304,7 +304,7 @@ LL +     println!(\"val='{local_i32}'\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:77:5\n+  --> $DIR/uninlined_format_args.rs:73:5\n    |\n LL |     println!(\"val='{local_i32}'\", local_i32 = fn_arg);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -316,7 +316,7 @@ LL +     println!(\"val='{fn_arg}'\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:78:5\n+  --> $DIR/uninlined_format_args.rs:74:5\n    |\n LL |     println!(\"{0}\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -328,7 +328,7 @@ LL +     println!(\"{local_i32}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:79:5\n+  --> $DIR/uninlined_format_args.rs:75:5\n    |\n LL |     println!(\"{0:?}\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -340,7 +340,7 @@ LL +     println!(\"{local_i32:?}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:80:5\n+  --> $DIR/uninlined_format_args.rs:76:5\n    |\n LL |     println!(\"{0:#?}\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -352,7 +352,7 @@ LL +     println!(\"{local_i32:#?}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:81:5\n+  --> $DIR/uninlined_format_args.rs:77:5\n    |\n LL |     println!(\"{0:04}\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -364,7 +364,7 @@ LL +     println!(\"{local_i32:04}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:82:5\n+  --> $DIR/uninlined_format_args.rs:78:5\n    |\n LL |     println!(\"{0:<3}\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -376,7 +376,7 @@ LL +     println!(\"{local_i32:<3}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:83:5\n+  --> $DIR/uninlined_format_args.rs:79:5\n    |\n LL |     println!(\"{0:#010x}\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -388,7 +388,7 @@ LL +     println!(\"{local_i32:#010x}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:84:5\n+  --> $DIR/uninlined_format_args.rs:80:5\n    |\n LL |     println!(\"{0:.1}\", local_f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -400,7 +400,7 @@ LL +     println!(\"{local_f64:.1}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:85:5\n+  --> $DIR/uninlined_format_args.rs:81:5\n    |\n LL |     println!(\"{0} {0}\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -412,7 +412,7 @@ LL +     println!(\"{local_i32} {local_i32}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:86:5\n+  --> $DIR/uninlined_format_args.rs:82:5\n    |\n LL |     println!(\"{1} {} {0} {}\", local_i32, local_f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -424,7 +424,7 @@ LL +     println!(\"{local_f64} {local_i32} {local_i32} {local_f64}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:87:5\n+  --> $DIR/uninlined_format_args.rs:83:5\n    |\n LL |     println!(\"{0} {1}\", local_i32, local_f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -436,7 +436,7 @@ LL +     println!(\"{local_i32} {local_f64}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:88:5\n+  --> $DIR/uninlined_format_args.rs:84:5\n    |\n LL |     println!(\"{1} {0}\", local_i32, local_f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -448,7 +448,7 @@ LL +     println!(\"{local_f64} {local_i32}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:89:5\n+  --> $DIR/uninlined_format_args.rs:85:5\n    |\n LL |     println!(\"{1} {0} {1} {0}\", local_i32, local_f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -460,7 +460,7 @@ LL +     println!(\"{local_f64} {local_i32} {local_f64} {local_i32}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:91:5\n+  --> $DIR/uninlined_format_args.rs:87:5\n    |\n LL |     println!(\"{v}\", v = local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -472,7 +472,7 @@ LL +     println!(\"{local_i32}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:92:5\n+  --> $DIR/uninlined_format_args.rs:88:5\n    |\n LL |     println!(\"{local_i32:0$}\", width);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -484,7 +484,7 @@ LL +     println!(\"{local_i32:width$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:93:5\n+  --> $DIR/uninlined_format_args.rs:89:5\n    |\n LL |     println!(\"{local_i32:w$}\", w = width);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -496,7 +496,7 @@ LL +     println!(\"{local_i32:width$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:94:5\n+  --> $DIR/uninlined_format_args.rs:90:5\n    |\n LL |     println!(\"{local_i32:.0$}\", prec);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -508,7 +508,7 @@ LL +     println!(\"{local_i32:.prec$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:95:5\n+  --> $DIR/uninlined_format_args.rs:91:5\n    |\n LL |     println!(\"{local_i32:.p$}\", p = prec);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -520,7 +520,7 @@ LL +     println!(\"{local_i32:.prec$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:96:5\n+  --> $DIR/uninlined_format_args.rs:92:5\n    |\n LL |     println!(\"{:0$}\", v = val);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -532,7 +532,7 @@ LL +     println!(\"{val:val$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:97:5\n+  --> $DIR/uninlined_format_args.rs:93:5\n    |\n LL |     println!(\"{0:0$}\", v = val);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -544,7 +544,7 @@ LL +     println!(\"{val:val$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:98:5\n+  --> $DIR/uninlined_format_args.rs:94:5\n    |\n LL |     println!(\"{:0$.0$}\", v = val);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -556,7 +556,7 @@ LL +     println!(\"{val:val$.val$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:99:5\n+  --> $DIR/uninlined_format_args.rs:95:5\n    |\n LL |     println!(\"{0:0$.0$}\", v = val);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -568,7 +568,7 @@ LL +     println!(\"{val:val$.val$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:100:5\n+  --> $DIR/uninlined_format_args.rs:96:5\n    |\n LL |     println!(\"{0:0$.v$}\", v = val);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -580,7 +580,7 @@ LL +     println!(\"{val:val$.val$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:101:5\n+  --> $DIR/uninlined_format_args.rs:97:5\n    |\n LL |     println!(\"{0:v$.0$}\", v = val);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -592,7 +592,7 @@ LL +     println!(\"{val:val$.val$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:102:5\n+  --> $DIR/uninlined_format_args.rs:98:5\n    |\n LL |     println!(\"{v:0$.0$}\", v = val);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -604,7 +604,7 @@ LL +     println!(\"{val:val$.val$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:103:5\n+  --> $DIR/uninlined_format_args.rs:99:5\n    |\n LL |     println!(\"{v:v$.0$}\", v = val);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -616,7 +616,7 @@ LL +     println!(\"{val:val$.val$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:104:5\n+  --> $DIR/uninlined_format_args.rs:100:5\n    |\n LL |     println!(\"{v:0$.v$}\", v = val);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -628,7 +628,7 @@ LL +     println!(\"{val:val$.val$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:105:5\n+  --> $DIR/uninlined_format_args.rs:101:5\n    |\n LL |     println!(\"{v:v$.v$}\", v = val);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -640,7 +640,7 @@ LL +     println!(\"{val:val$.val$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:106:5\n+  --> $DIR/uninlined_format_args.rs:102:5\n    |\n LL |     println!(\"{:0$}\", width);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -652,7 +652,7 @@ LL +     println!(\"{width:width$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:107:5\n+  --> $DIR/uninlined_format_args.rs:103:5\n    |\n LL |     println!(\"{:1$}\", local_i32, width);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -664,7 +664,7 @@ LL +     println!(\"{local_i32:width$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:108:5\n+  --> $DIR/uninlined_format_args.rs:104:5\n    |\n LL |     println!(\"{:w$}\", w = width);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -676,7 +676,7 @@ LL +     println!(\"{width:width$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:109:5\n+  --> $DIR/uninlined_format_args.rs:105:5\n    |\n LL |     println!(\"{:w$}\", local_i32, w = width);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -688,7 +688,7 @@ LL +     println!(\"{local_i32:width$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:110:5\n+  --> $DIR/uninlined_format_args.rs:106:5\n    |\n LL |     println!(\"{:.0$}\", prec);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -700,7 +700,7 @@ LL +     println!(\"{prec:.prec$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:111:5\n+  --> $DIR/uninlined_format_args.rs:107:5\n    |\n LL |     println!(\"{:.1$}\", local_i32, prec);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -712,7 +712,7 @@ LL +     println!(\"{local_i32:.prec$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:112:5\n+  --> $DIR/uninlined_format_args.rs:108:5\n    |\n LL |     println!(\"{:.p$}\", p = prec);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -724,7 +724,7 @@ LL +     println!(\"{prec:.prec$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:113:5\n+  --> $DIR/uninlined_format_args.rs:109:5\n    |\n LL |     println!(\"{:.p$}\", local_i32, p = prec);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -736,7 +736,7 @@ LL +     println!(\"{local_i32:.prec$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:114:5\n+  --> $DIR/uninlined_format_args.rs:110:5\n    |\n LL |     println!(\"{:0$.1$}\", width, prec);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -748,7 +748,7 @@ LL +     println!(\"{width:width$.prec$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:115:5\n+  --> $DIR/uninlined_format_args.rs:111:5\n    |\n LL |     println!(\"{:0$.w$}\", width, w = prec);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -760,7 +760,7 @@ LL +     println!(\"{width:width$.prec$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:116:5\n+  --> $DIR/uninlined_format_args.rs:112:5\n    |\n LL |     println!(\"{:1$.2$}\", local_f64, width, prec);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -772,7 +772,7 @@ LL +     println!(\"{local_f64:width$.prec$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:117:5\n+  --> $DIR/uninlined_format_args.rs:113:5\n    |\n LL |     println!(\"{:1$.2$} {0} {1} {2}\", local_f64, width, prec);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -784,7 +784,7 @@ LL +     println!(\"{local_f64:width$.prec$} {local_f64} {width} {prec}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:118:5\n+  --> $DIR/uninlined_format_args.rs:114:5\n    |\n LL | /     println!(\n LL | |         \"{0:1$.2$} {0:2$.1$} {1:0$.2$} {1:2$.0$} {2:0$.1$} {2:1$.0$}\",\n@@ -803,7 +803,7 @@ LL ~         \"{0:1$.2$} {0:2$.1$} {1:0$.2$} {1:2$.0$} {2:0$.1$} {2:1$.0$}\",\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:129:5\n+  --> $DIR/uninlined_format_args.rs:125:5\n    |\n LL |     println!(\"Width = {}, value with width = {:0$}\", local_i32, local_f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -815,7 +815,7 @@ LL +     println!(\"Width = {local_i32}, value with width = {local_f64:local_i32$\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:130:5\n+  --> $DIR/uninlined_format_args.rs:126:5\n    |\n LL |     println!(\"{:w$.p$}\", local_i32, w = width, p = prec);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -827,7 +827,7 @@ LL +     println!(\"{local_i32:width$.prec$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:131:5\n+  --> $DIR/uninlined_format_args.rs:127:5\n    |\n LL |     println!(\"{:w$.p$}\", w = width, p = prec);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -839,7 +839,7 @@ LL +     println!(\"{width:width$.prec$}\");\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:132:20\n+  --> $DIR/uninlined_format_args.rs:128:20\n    |\n LL |     println!(\"{}\", format!(\"{}\", local_i32));\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -851,7 +851,7 @@ LL +     println!(\"{}\", format!(\"{local_i32}\"));\n    |\n \n error: variables can be used directly in the `format!` string\n-  --> $DIR/uninlined_format_args.rs:170:5\n+  --> $DIR/uninlined_format_args.rs:166:5\n    |\n LL |     println!(\"expand='{}'\", local_i32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "07e70873a8132e4e3c07740d0e8000ee57dec249", "filename": "tests/ui/unit_arg.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Funit_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Funit_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_arg.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,17 +1,16 @@\n // aux-build: proc_macro_with_span.rs\n-\n #![warn(clippy::unit_arg)]\n+#![allow(unused_must_use, unused_variables)]\n #![allow(\n+    clippy::let_unit_value,\n+    clippy::needless_question_mark,\n+    clippy::never_loop,\n     clippy::no_effect,\n-    unused_must_use,\n-    unused_variables,\n-    clippy::unused_unit,\n-    clippy::unnecessary_wraps,\n     clippy::or_fun_call,\n-    clippy::needless_question_mark,\n     clippy::self_named_constructors,\n-    clippy::let_unit_value,\n-    clippy::never_loop\n+    clippy::uninlined_format_args,\n+    clippy::unnecessary_wraps,\n+    clippy::unused_unit\n )]\n \n extern crate proc_macro_with_span;"}, {"sha": "74d4d2f4052f7dde1a6e94a4cfbfaad533a249cf", "filename": "tests/ui/unit_arg.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Funit_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Funit_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_arg.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:63:5\n+  --> $DIR/unit_arg.rs:62:5\n    |\n LL | /     foo({\n LL | |         1;\n@@ -20,7 +20,7 @@ LL ~     foo(());\n    |\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:66:5\n+  --> $DIR/unit_arg.rs:65:5\n    |\n LL |     foo(foo(1));\n    |     ^^^^^^^^^^^\n@@ -32,7 +32,7 @@ LL ~     foo(());\n    |\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:67:5\n+  --> $DIR/unit_arg.rs:66:5\n    |\n LL | /     foo({\n LL | |         foo(1);\n@@ -54,7 +54,7 @@ LL ~     foo(());\n    |\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:72:5\n+  --> $DIR/unit_arg.rs:71:5\n    |\n LL | /     b.bar({\n LL | |         1;\n@@ -74,7 +74,7 @@ LL ~     b.bar(());\n    |\n \n error: passing unit values to a function\n-  --> $DIR/unit_arg.rs:75:5\n+  --> $DIR/unit_arg.rs:74:5\n    |\n LL |     taking_multiple_units(foo(0), foo(1));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -87,7 +87,7 @@ LL ~     taking_multiple_units((), ());\n    |\n \n error: passing unit values to a function\n-  --> $DIR/unit_arg.rs:76:5\n+  --> $DIR/unit_arg.rs:75:5\n    |\n LL | /     taking_multiple_units(foo(0), {\n LL | |         foo(1);\n@@ -110,7 +110,7 @@ LL ~     taking_multiple_units((), ());\n    |\n \n error: passing unit values to a function\n-  --> $DIR/unit_arg.rs:80:5\n+  --> $DIR/unit_arg.rs:79:5\n    |\n LL | /     taking_multiple_units(\n LL | |         {\n@@ -146,7 +146,7 @@ LL ~     );\n    |\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:91:13\n+  --> $DIR/unit_arg.rs:90:13\n    |\n LL |     None.or(Some(foo(2)));\n    |             ^^^^^^^^^^^^\n@@ -160,7 +160,7 @@ LL ~     });\n    |\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:94:5\n+  --> $DIR/unit_arg.rs:93:5\n    |\n LL |     foo(foo(()));\n    |     ^^^^^^^^^^^^\n@@ -172,7 +172,7 @@ LL ~     foo(());\n    |\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:131:5\n+  --> $DIR/unit_arg.rs:130:5\n    |\n LL |     Some(foo(1))\n    |     ^^^^^^^^^^^^"}, {"sha": "5787471a32caaee7ecc9bde19415a9cfc1c6635b", "filename": "tests/ui/unit_arg_empty_blocks.fixed", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Funit_arg_empty_blocks.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Funit_arg_empty_blocks.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_arg_empty_blocks.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,6 +1,7 @@\n // run-rustfix\n #![warn(clippy::unit_arg)]\n-#![allow(clippy::no_effect, unused_must_use, unused_variables)]\n+#![allow(unused_must_use, unused_variables)]\n+#![allow(clippy::no_effect, clippy::uninlined_format_args)]\n \n use std::fmt::Debug;\n "}, {"sha": "6a42c2ccf42b3e88be5d097927d05c01461d41bc", "filename": "tests/ui/unit_arg_empty_blocks.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Funit_arg_empty_blocks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Funit_arg_empty_blocks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_arg_empty_blocks.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,6 +1,7 @@\n // run-rustfix\n #![warn(clippy::unit_arg)]\n-#![allow(clippy::no_effect, unused_must_use, unused_variables)]\n+#![allow(unused_must_use, unused_variables)]\n+#![allow(clippy::no_effect, clippy::uninlined_format_args)]\n \n use std::fmt::Debug;\n "}, {"sha": "c697dfb1efa26f7cdeea94f88033dacb178dd794", "filename": "tests/ui/unit_arg_empty_blocks.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Funit_arg_empty_blocks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Funit_arg_empty_blocks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_arg_empty_blocks.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: passing a unit value to a function\n-  --> $DIR/unit_arg_empty_blocks.rs:16:5\n+  --> $DIR/unit_arg_empty_blocks.rs:17:5\n    |\n LL |     foo({});\n    |     ^^^^--^\n@@ -9,15 +9,15 @@ LL |     foo({});\n    = note: `-D clippy::unit-arg` implied by `-D warnings`\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg_empty_blocks.rs:17:5\n+  --> $DIR/unit_arg_empty_blocks.rs:18:5\n    |\n LL |     foo3({}, 2, 2);\n    |     ^^^^^--^^^^^^^\n    |          |\n    |          help: use a unit literal instead: `()`\n \n error: passing unit values to a function\n-  --> $DIR/unit_arg_empty_blocks.rs:18:5\n+  --> $DIR/unit_arg_empty_blocks.rs:19:5\n    |\n LL |     taking_two_units({}, foo(0));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -29,7 +29,7 @@ LL ~     taking_two_units((), ());\n    |\n \n error: passing unit values to a function\n-  --> $DIR/unit_arg_empty_blocks.rs:19:5\n+  --> $DIR/unit_arg_empty_blocks.rs:20:5\n    |\n LL |     taking_three_units({}, foo(0), foo(1));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "8b1629b19a76900e9e4ab001df47bfa34d99ac54", "filename": "tests/ui/unnecessary_clone.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Funnecessary_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Funnecessary_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_clone.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,7 +1,7 @@\n // does not test any rustfixable lints\n-\n #![warn(clippy::clone_on_ref_ptr)]\n-#![allow(unused, clippy::redundant_clone, clippy::unnecessary_wraps)]\n+#![allow(unused)]\n+#![allow(clippy::redundant_clone, clippy::uninlined_format_args, clippy::unnecessary_wraps)]\n \n use std::cell::RefCell;\n use std::rc::{self, Rc};"}, {"sha": "3479539602575c8ddc8a3cddc4fed9ae545c2577", "filename": "tests/ui/unnecessary_join.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Funnecessary_join.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Funnecessary_join.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_join.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,6 +1,6 @@\n // run-rustfix\n-\n #![warn(clippy::unnecessary_join)]\n+#![allow(clippy::uninlined_format_args)]\n \n fn main() {\n     // should be linted"}, {"sha": "344918cd2a2ecbf1c060c0472afa2930879b47da", "filename": "tests/ui/unnecessary_join.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Funnecessary_join.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Funnecessary_join.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_join.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,6 +1,6 @@\n // run-rustfix\n-\n #![warn(clippy::unnecessary_join)]\n+#![allow(clippy::uninlined_format_args)]\n \n fn main() {\n     // should be linted"}, {"sha": "8c29e15b145927e2941b181b84d271c584bd7f28", "filename": "tests/ui/used_underscore_binding.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fused_underscore_binding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fused_underscore_binding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fused_underscore_binding.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,9 +1,8 @@\n // aux-build:proc_macro_derive.rs\n-\n #![feature(rustc_private)]\n #![warn(clippy::all)]\n-#![allow(clippy::disallowed_names, clippy::eq_op)]\n #![warn(clippy::used_underscore_binding)]\n+#![allow(clippy::disallowed_names, clippy::eq_op, clippy::uninlined_format_args)]\n \n #[macro_use]\n extern crate proc_macro_derive;"}, {"sha": "875fafe438a137f1d374b5e4ecccb9de536bf28d", "filename": "tests/ui/used_underscore_binding.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fused_underscore_binding.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fused_underscore_binding.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fused_underscore_binding.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,37 +1,37 @@\n error: used binding `_foo` which is prefixed with an underscore. A leading underscore signals that a binding will not be used\n-  --> $DIR/used_underscore_binding.rs:25:5\n+  --> $DIR/used_underscore_binding.rs:24:5\n    |\n LL |     _foo + 1\n    |     ^^^^\n    |\n    = note: `-D clippy::used-underscore-binding` implied by `-D warnings`\n \n error: used binding `_foo` which is prefixed with an underscore. A leading underscore signals that a binding will not be used\n-  --> $DIR/used_underscore_binding.rs:30:20\n+  --> $DIR/used_underscore_binding.rs:29:20\n    |\n LL |     println!(\"{}\", _foo);\n    |                    ^^^^\n \n error: used binding `_foo` which is prefixed with an underscore. A leading underscore signals that a binding will not be used\n-  --> $DIR/used_underscore_binding.rs:31:16\n+  --> $DIR/used_underscore_binding.rs:30:16\n    |\n LL |     assert_eq!(_foo, _foo);\n    |                ^^^^\n \n error: used binding `_foo` which is prefixed with an underscore. A leading underscore signals that a binding will not be used\n-  --> $DIR/used_underscore_binding.rs:31:22\n+  --> $DIR/used_underscore_binding.rs:30:22\n    |\n LL |     assert_eq!(_foo, _foo);\n    |                      ^^^^\n \n error: used binding `_underscore_field` which is prefixed with an underscore. A leading underscore signals that a binding will not be used\n-  --> $DIR/used_underscore_binding.rs:44:5\n+  --> $DIR/used_underscore_binding.rs:43:5\n    |\n LL |     s._underscore_field += 1;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: used binding `_i` which is prefixed with an underscore. A leading underscore signals that a binding will not be used\n-  --> $DIR/used_underscore_binding.rs:105:16\n+  --> $DIR/used_underscore_binding.rs:104:16\n    |\n LL |         uses_i(_i);\n    |                ^^"}, {"sha": "38e4b9201e6de31fb4066686b0ae956857b996de", "filename": "tests/ui/useless_asref.fixed", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fuseless_asref.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fuseless_asref.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_asref.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,7 +1,6 @@\n // run-rustfix\n-\n #![deny(clippy::useless_asref)]\n-#![allow(clippy::explicit_auto_deref)]\n+#![allow(clippy::explicit_auto_deref, clippy::uninlined_format_args)]\n \n use std::fmt::Debug;\n "}, {"sha": "f1e83f9d396cd130fb5a4e532d1638e957df91ac", "filename": "tests/ui/useless_asref.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fuseless_asref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fuseless_asref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_asref.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,7 +1,6 @@\n // run-rustfix\n-\n #![deny(clippy::useless_asref)]\n-#![allow(clippy::explicit_auto_deref)]\n+#![allow(clippy::explicit_auto_deref, clippy::uninlined_format_args)]\n \n use std::fmt::Debug;\n "}, {"sha": "67ce8b64e0e3d21613b1a31099c04931336746c6", "filename": "tests/ui/useless_asref.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fuseless_asref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fuseless_asref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_asref.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,71 +1,71 @@\n error: this call to `as_ref` does nothing\n-  --> $DIR/useless_asref.rs:44:18\n+  --> $DIR/useless_asref.rs:43:18\n    |\n LL |         foo_rstr(rstr.as_ref());\n    |                  ^^^^^^^^^^^^^ help: try this: `rstr`\n    |\n note: the lint level is defined here\n-  --> $DIR/useless_asref.rs:3:9\n+  --> $DIR/useless_asref.rs:2:9\n    |\n LL | #![deny(clippy::useless_asref)]\n    |         ^^^^^^^^^^^^^^^^^^^^^\n \n error: this call to `as_ref` does nothing\n-  --> $DIR/useless_asref.rs:46:20\n+  --> $DIR/useless_asref.rs:45:20\n    |\n LL |         foo_rslice(rslice.as_ref());\n    |                    ^^^^^^^^^^^^^^^ help: try this: `rslice`\n \n error: this call to `as_mut` does nothing\n-  --> $DIR/useless_asref.rs:50:21\n+  --> $DIR/useless_asref.rs:49:21\n    |\n LL |         foo_mrslice(mrslice.as_mut());\n    |                     ^^^^^^^^^^^^^^^^ help: try this: `mrslice`\n \n error: this call to `as_ref` does nothing\n-  --> $DIR/useless_asref.rs:52:20\n+  --> $DIR/useless_asref.rs:51:20\n    |\n LL |         foo_rslice(mrslice.as_ref());\n    |                    ^^^^^^^^^^^^^^^^ help: try this: `mrslice`\n \n error: this call to `as_ref` does nothing\n-  --> $DIR/useless_asref.rs:59:20\n+  --> $DIR/useless_asref.rs:58:20\n    |\n LL |         foo_rslice(rrrrrslice.as_ref());\n    |                    ^^^^^^^^^^^^^^^^^^^ help: try this: `rrrrrslice`\n \n error: this call to `as_ref` does nothing\n-  --> $DIR/useless_asref.rs:61:18\n+  --> $DIR/useless_asref.rs:60:18\n    |\n LL |         foo_rstr(rrrrrstr.as_ref());\n    |                  ^^^^^^^^^^^^^^^^^ help: try this: `rrrrrstr`\n \n error: this call to `as_mut` does nothing\n-  --> $DIR/useless_asref.rs:66:21\n+  --> $DIR/useless_asref.rs:65:21\n    |\n LL |         foo_mrslice(mrrrrrslice.as_mut());\n    |                     ^^^^^^^^^^^^^^^^^^^^ help: try this: `mrrrrrslice`\n \n error: this call to `as_ref` does nothing\n-  --> $DIR/useless_asref.rs:68:20\n+  --> $DIR/useless_asref.rs:67:20\n    |\n LL |         foo_rslice(mrrrrrslice.as_ref());\n    |                    ^^^^^^^^^^^^^^^^^^^^ help: try this: `mrrrrrslice`\n \n error: this call to `as_ref` does nothing\n-  --> $DIR/useless_asref.rs:72:16\n+  --> $DIR/useless_asref.rs:71:16\n    |\n LL |     foo_rrrrmr((&&&&MoreRef).as_ref());\n    |                ^^^^^^^^^^^^^^^^^^^^^^ help: try this: `(&&&&MoreRef)`\n \n error: this call to `as_mut` does nothing\n-  --> $DIR/useless_asref.rs:122:13\n+  --> $DIR/useless_asref.rs:121:13\n    |\n LL |     foo_mrt(mrt.as_mut());\n    |             ^^^^^^^^^^^^ help: try this: `mrt`\n \n error: this call to `as_ref` does nothing\n-  --> $DIR/useless_asref.rs:124:12\n+  --> $DIR/useless_asref.rs:123:12\n    |\n LL |     foo_rt(mrt.as_ref());\n    |            ^^^^^^^^^^^^ help: try this: `mrt`"}, {"sha": "2518d8049150001173b8c17f1401babb426162c3", "filename": "tests/ui/vec.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fvec.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fvec.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fvec.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,6 +1,6 @@\n // run-rustfix\n-#![allow(clippy::nonstandard_macro_braces)]\n #![warn(clippy::useless_vec)]\n+#![allow(clippy::nonstandard_macro_braces, clippy::uninlined_format_args)]\n \n #[derive(Debug)]\n struct NonCopy;"}, {"sha": "e1492e2f3aef0d9480de8aeca7040887225cd513", "filename": "tests/ui/vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fvec.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,6 +1,6 @@\n // run-rustfix\n-#![allow(clippy::nonstandard_macro_braces)]\n #![warn(clippy::useless_vec)]\n+#![allow(clippy::nonstandard_macro_braces, clippy::uninlined_format_args)]\n \n #[derive(Debug)]\n struct NonCopy;"}, {"sha": "5b8075731cb798c778ffe95550930d3a5e8d6db6", "filename": "tests/ui/while_let_loop.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fwhile_let_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fwhile_let_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwhile_let_loop.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,4 +1,5 @@\n #![warn(clippy::while_let_loop)]\n+#![allow(clippy::uninlined_format_args)]\n \n fn main() {\n     let y = Some(true);"}, {"sha": "04808c0b3adaf98dc236200968a40db73d72a114", "filename": "tests/ui/while_let_loop.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fwhile_let_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fwhile_let_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwhile_let_loop.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n error: this loop could be written as a `while let` loop\n-  --> $DIR/while_let_loop.rs:5:5\n+  --> $DIR/while_let_loop.rs:6:5\n    |\n LL | /     loop {\n LL | |         if let Some(_x) = y {\n@@ -13,7 +13,7 @@ LL | |     }\n    = note: `-D clippy::while-let-loop` implied by `-D warnings`\n \n error: this loop could be written as a `while let` loop\n-  --> $DIR/while_let_loop.rs:22:5\n+  --> $DIR/while_let_loop.rs:23:5\n    |\n LL | /     loop {\n LL | |         match y {\n@@ -24,7 +24,7 @@ LL | |     }\n    | |_____^ help: try: `while let Some(_x) = y { .. }`\n \n error: this loop could be written as a `while let` loop\n-  --> $DIR/while_let_loop.rs:29:5\n+  --> $DIR/while_let_loop.rs:30:5\n    |\n LL | /     loop {\n LL | |         let x = match y {\n@@ -36,7 +36,7 @@ LL | |     }\n    | |_____^ help: try: `while let Some(x) = y { .. }`\n \n error: this loop could be written as a `while let` loop\n-  --> $DIR/while_let_loop.rs:38:5\n+  --> $DIR/while_let_loop.rs:39:5\n    |\n LL | /     loop {\n LL | |         let x = match y {\n@@ -48,7 +48,7 @@ LL | |     }\n    | |_____^ help: try: `while let Some(x) = y { .. }`\n \n error: this loop could be written as a `while let` loop\n-  --> $DIR/while_let_loop.rs:68:5\n+  --> $DIR/while_let_loop.rs:69:5\n    |\n LL | /     loop {\n LL | |         let (e, l) = match \"\".split_whitespace().next() {"}, {"sha": "5afa0a89f82c87ae4a7a08585e2de03ef9650bca", "filename": "tests/ui/while_let_on_iterator.fixed", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fwhile_let_on_iterator.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fwhile_let_on_iterator.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwhile_let_on_iterator.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,14 +1,12 @@\n // run-rustfix\n-\n #![warn(clippy::while_let_on_iterator)]\n+#![allow(dead_code, unreachable_code, unused_mut)]\n #![allow(\n-    clippy::never_loop,\n-    unreachable_code,\n-    unused_mut,\n-    dead_code,\n     clippy::equatable_if_let,\n     clippy::manual_find,\n-    clippy::redundant_closure_call\n+    clippy::never_loop,\n+    clippy::redundant_closure_call,\n+    clippy::uninlined_format_args\n )]\n \n fn base() {"}, {"sha": "3de586c9d8fd4b10a75fdbee0e9f24c24169f339", "filename": "tests/ui/while_let_on_iterator.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fwhile_let_on_iterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fwhile_let_on_iterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwhile_let_on_iterator.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,14 +1,12 @@\n // run-rustfix\n-\n #![warn(clippy::while_let_on_iterator)]\n+#![allow(dead_code, unreachable_code, unused_mut)]\n #![allow(\n-    clippy::never_loop,\n-    unreachable_code,\n-    unused_mut,\n-    dead_code,\n     clippy::equatable_if_let,\n     clippy::manual_find,\n-    clippy::redundant_closure_call\n+    clippy::never_loop,\n+    clippy::redundant_closure_call,\n+    clippy::uninlined_format_args\n )]\n \n fn base() {"}, {"sha": "4d98666190d67ae43e41b6fcf575b734b2689ece", "filename": "tests/ui/while_let_on_iterator.stderr", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fwhile_let_on_iterator.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fwhile_let_on_iterator.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwhile_let_on_iterator.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,157 +1,157 @@\n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:16:5\n+  --> $DIR/while_let_on_iterator.rs:14:5\n    |\n LL |     while let Option::Some(x) = iter.next() {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for x in iter`\n    |\n    = note: `-D clippy::while-let-on-iterator` implied by `-D warnings`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:21:5\n+  --> $DIR/while_let_on_iterator.rs:19:5\n    |\n LL |     while let Some(x) = iter.next() {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for x in iter`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:26:5\n+  --> $DIR/while_let_on_iterator.rs:24:5\n    |\n LL |     while let Some(_) = iter.next() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for _ in iter`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:102:9\n+  --> $DIR/while_let_on_iterator.rs:100:9\n    |\n LL |         while let Some([..]) = it.next() {}\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for [..] in it`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:109:9\n+  --> $DIR/while_let_on_iterator.rs:107:9\n    |\n LL |         while let Some([_x]) = it.next() {}\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for [_x] in it`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:122:9\n+  --> $DIR/while_let_on_iterator.rs:120:9\n    |\n LL |         while let Some(x @ [_]) = it.next() {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for x @ [_] in it`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:142:9\n+  --> $DIR/while_let_on_iterator.rs:140:9\n    |\n LL |         while let Some(_) = y.next() {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for _ in y`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:199:9\n+  --> $DIR/while_let_on_iterator.rs:197:9\n    |\n LL |         while let Some(m) = it.next() {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for m in it.by_ref()`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:210:5\n+  --> $DIR/while_let_on_iterator.rs:208:5\n    |\n LL |     while let Some(n) = it.next() {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for n in it`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:212:9\n+  --> $DIR/while_let_on_iterator.rs:210:9\n    |\n LL |         while let Some(m) = it.next() {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for m in it`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:221:9\n+  --> $DIR/while_let_on_iterator.rs:219:9\n    |\n LL |         while let Some(m) = it.next() {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for m in it`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:230:9\n+  --> $DIR/while_let_on_iterator.rs:228:9\n    |\n LL |         while let Some(m) = it.next() {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for m in it.by_ref()`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:247:9\n+  --> $DIR/while_let_on_iterator.rs:245:9\n    |\n LL |         while let Some(m) = it.next() {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for m in it.by_ref()`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:262:13\n+  --> $DIR/while_let_on_iterator.rs:260:13\n    |\n LL |             while let Some(i) = self.0.next() {\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for i in self.0.by_ref()`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:294:13\n+  --> $DIR/while_let_on_iterator.rs:292:13\n    |\n LL |             while let Some(i) = self.0.0.0.next() {\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for i in self.0.0.0.by_ref()`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:323:5\n+  --> $DIR/while_let_on_iterator.rs:321:5\n    |\n LL |     while let Some(n) = it.next() {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for n in it.by_ref()`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:335:9\n+  --> $DIR/while_let_on_iterator.rs:333:9\n    |\n LL |         while let Some(x) = it.next() {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for x in it.by_ref()`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:349:5\n+  --> $DIR/while_let_on_iterator.rs:347:5\n    |\n LL |     while let Some(x) = it.next() {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for x in it.by_ref()`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:360:5\n+  --> $DIR/while_let_on_iterator.rs:358:5\n    |\n LL |     while let Some(x) = it.0.next() {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for x in it.0.by_ref()`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:395:5\n+  --> $DIR/while_let_on_iterator.rs:393:5\n    |\n LL |     while let Some(x) = s.x.next() {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for x in s.x.by_ref()`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:402:5\n+  --> $DIR/while_let_on_iterator.rs:400:5\n    |\n LL |     while let Some(x) = x[0].next() {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for x in x[0].by_ref()`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:410:9\n+  --> $DIR/while_let_on_iterator.rs:408:9\n    |\n LL |         while let Some(x) = it.next() {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for x in it`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:420:9\n+  --> $DIR/while_let_on_iterator.rs:418:9\n    |\n LL |         while let Some(x) = it.next() {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for x in it`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:430:9\n+  --> $DIR/while_let_on_iterator.rs:428:9\n    |\n LL |         while let Some(x) = it.next() {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for x in it.by_ref()`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:440:9\n+  --> $DIR/while_let_on_iterator.rs:438:9\n    |\n LL |         while let Some(x) = it.next() {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for x in it`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_let_on_iterator.rs:450:5\n+  --> $DIR/while_let_on_iterator.rs:448:5\n    |\n LL |     while let Some(..) = it.next() {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for _ in it`"}, {"sha": "23607497841e4d9ba95385ead80174ef6649f3b4", "filename": "tests/ui/wildcard_enum_match_arm.fixed", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fwildcard_enum_match_arm.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fwildcard_enum_match_arm.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_enum_match_arm.fixed?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,15 +1,13 @@\n // run-rustfix\n // aux-build:non-exhaustive-enum.rs\n-\n #![deny(clippy::wildcard_enum_match_arm)]\n+#![allow(dead_code, unreachable_code, unused_variables)]\n #![allow(\n-    unreachable_code,\n-    unused_variables,\n-    dead_code,\n+    clippy::diverging_sub_expression,\n     clippy::single_match,\n-    clippy::wildcard_in_or_patterns,\n+    clippy::uninlined_format_args,\n     clippy::unnested_or_patterns,\n-    clippy::diverging_sub_expression\n+    clippy::wildcard_in_or_patterns\n )]\n \n extern crate non_exhaustive_enum;"}, {"sha": "decd86165f3a413379febcdc3493a46ef5447098", "filename": "tests/ui/wildcard_enum_match_arm.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fwildcard_enum_match_arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fwildcard_enum_match_arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_enum_match_arm.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,15 +1,13 @@\n // run-rustfix\n // aux-build:non-exhaustive-enum.rs\n-\n #![deny(clippy::wildcard_enum_match_arm)]\n+#![allow(dead_code, unreachable_code, unused_variables)]\n #![allow(\n-    unreachable_code,\n-    unused_variables,\n-    dead_code,\n+    clippy::diverging_sub_expression,\n     clippy::single_match,\n-    clippy::wildcard_in_or_patterns,\n+    clippy::uninlined_format_args,\n     clippy::unnested_or_patterns,\n-    clippy::diverging_sub_expression\n+    clippy::wildcard_in_or_patterns\n )]\n \n extern crate non_exhaustive_enum;"}, {"sha": "efecc9576cc7b0a9f527b15f0a3048cc76764a8c", "filename": "tests/ui/wildcard_enum_match_arm.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fwildcard_enum_match_arm.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fwildcard_enum_match_arm.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_enum_match_arm.stderr?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,41 +1,41 @@\n error: wildcard match will also match any future added variants\n-  --> $DIR/wildcard_enum_match_arm.rs:42:9\n+  --> $DIR/wildcard_enum_match_arm.rs:40:9\n    |\n LL |         _ => eprintln!(\"Not red\"),\n    |         ^ help: try this: `Color::Green | Color::Blue | Color::Rgb(..) | Color::Cyan`\n    |\n note: the lint level is defined here\n-  --> $DIR/wildcard_enum_match_arm.rs:4:9\n+  --> $DIR/wildcard_enum_match_arm.rs:3:9\n    |\n LL | #![deny(clippy::wildcard_enum_match_arm)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: wildcard match will also match any future added variants\n-  --> $DIR/wildcard_enum_match_arm.rs:46:9\n+  --> $DIR/wildcard_enum_match_arm.rs:44:9\n    |\n LL |         _not_red => eprintln!(\"Not red\"),\n    |         ^^^^^^^^ help: try this: `_not_red @ Color::Green | _not_red @ Color::Blue | _not_red @ Color::Rgb(..) | _not_red @ Color::Cyan`\n \n error: wildcard match will also match any future added variants\n-  --> $DIR/wildcard_enum_match_arm.rs:50:9\n+  --> $DIR/wildcard_enum_match_arm.rs:48:9\n    |\n LL |         not_red => format!(\"{:?}\", not_red),\n    |         ^^^^^^^ help: try this: `not_red @ Color::Green | not_red @ Color::Blue | not_red @ Color::Rgb(..) | not_red @ Color::Cyan`\n \n error: wildcard match will also match any future added variants\n-  --> $DIR/wildcard_enum_match_arm.rs:66:9\n+  --> $DIR/wildcard_enum_match_arm.rs:64:9\n    |\n LL |         _ => \"No red\",\n    |         ^ help: try this: `Color::Red | Color::Green | Color::Blue | Color::Rgb(..) | Color::Cyan`\n \n error: wildcard matches known variants and will also match future added variants\n-  --> $DIR/wildcard_enum_match_arm.rs:83:9\n+  --> $DIR/wildcard_enum_match_arm.rs:81:9\n    |\n LL |         _ => {},\n    |         ^ help: try this: `ErrorKind::PermissionDenied | _`\n \n error: wildcard matches known variants and will also match future added variants\n-  --> $DIR/wildcard_enum_match_arm.rs:101:13\n+  --> $DIR/wildcard_enum_match_arm.rs:99:13\n    |\n LL |             _ => (),\n    |             ^ help: try this: `Enum::B | _`"}, {"sha": "218385ea1296656b9af99d7549084df80164a0cc", "filename": "tests/ui/write_literal.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fwrite_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3970285b8993b0f154839056ff7b3daba37840/tests%2Fui%2Fwrite_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwrite_literal.rs?ref=eb3970285b8993b0f154839056ff7b3daba37840", "patch": "@@ -1,5 +1,5 @@\n-#![allow(unused_must_use)]\n #![warn(clippy::write_literal)]\n+#![allow(clippy::uninlined_format_args, unused_must_use)]\n \n use std::io::Write;\n "}]}