{"sha": "177b3b27c46cddeb6f80bfebabe1a70328c1a9fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3N2IzYjI3YzQ2Y2RkZWI2ZjgwYmZlYmFiZTFhNzAzMjhjMWE5ZmM=", "commit": {"author": {"name": "daxpedda", "email": "daxpedda@users.noreply.github.com", "date": "2019-03-14T17:32:39Z"}, "committer": {"name": "daxpedda", "email": "daxpedda@users.noreply.github.com", "date": "2019-03-14T17:32:39Z"}, "message": "Add `doc(include = ...)` detection to `missing_docs_in_private_items`", "tree": {"sha": "518685832b16f0bee1dd19fe4c01aa1cd9eff966", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/518685832b16f0bee1dd19fe4c01aa1cd9eff966"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/177b3b27c46cddeb6f80bfebabe1a70328c1a9fc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJWBAABCABAFiEEtfVYniVMfR+YKQUSxyLctqGR7qsFAlyKkDciHGRheHBlZGRh\nQHVzZXJzLm5vcmVwbHkuZ2l0aHViLmNvbQAKCRDHIty2oZHuq8COD/9NwoQ1FlTj\n5q3v6wBoLJEh3hsZMFnzFs/Mq+QwAbag8Hv6fDWsNauIJVt3UTf7WDJuXBqcy8Xy\nq4s/jbZEIMy4eYJ7/lpBloBYMhnJgyWFyz0TxmAUUQO+I9v3UqeU+wdyXgEoXxFM\nmZdNX0WyRgFCLC4iyCvsl7S/XxcvGLxNH4r/HZC/vD4Cd71n3sLJl8M6LVlXCk+f\nU/i20w4oxDT/Luy8Qacd4SUMbuv+2lfCGnr/wZYi6At+0iEGMyy0L9A9wS8/ivv8\nzEiZ5oj3Z+kyFdASYyughrXRENI9eFebRgSdNip8ZinSQT9U2+VAQd5wjRrW/GA1\nXc0F+2QhxwZcL6ZIjDq042YdAVT0bFqbC2NkUAtSejBXDQvhovzB9vgvBfS8MLvQ\nsbVaMpxjZsjsoIddK0nMdvCPPI14vyco4WyTwy0cf7qYlBvPixrjBqjU0+EJAJwN\nIOfeRpPtYD9RseNZ+68uCUBiCivGQbTjXCJtXoZgpuOmyj1xXVMxc1nES5cZ/s3g\njIGAFWBxDNsIOFd31WXf1mY1KqE4cfZwr86xDtX6vuH732xRgs7zfayU7PxfoHaP\nRSguOqmVj3dAw943XkH4+PU08dguKjGLG66NSq+V4FZ67fxlfJWRsMp+Whj6axxC\nk5QgieVTrVyoe82ZHcw7vcUWBG0dDREqjQ==\n=/O50\n-----END PGP SIGNATURE-----", "payload": "tree 518685832b16f0bee1dd19fe4c01aa1cd9eff966\nparent 729892961c9e3b00919fd13d7ea2a704d03dd6a8\nauthor daxpedda <daxpedda@users.noreply.github.com> 1552584759 +0100\ncommitter daxpedda <daxpedda@users.noreply.github.com> 1552584759 +0100\n\nAdd `doc(include = ...)` detection to `missing_docs_in_private_items`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/177b3b27c46cddeb6f80bfebabe1a70328c1a9fc", "html_url": "https://github.com/rust-lang/rust/commit/177b3b27c46cddeb6f80bfebabe1a70328c1a9fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/177b3b27c46cddeb6f80bfebabe1a70328c1a9fc/comments", "author": {"login": "daxpedda", "id": 1645124, "node_id": "MDQ6VXNlcjE2NDUxMjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1645124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daxpedda", "html_url": "https://github.com/daxpedda", "followers_url": "https://api.github.com/users/daxpedda/followers", "following_url": "https://api.github.com/users/daxpedda/following{/other_user}", "gists_url": "https://api.github.com/users/daxpedda/gists{/gist_id}", "starred_url": "https://api.github.com/users/daxpedda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daxpedda/subscriptions", "organizations_url": "https://api.github.com/users/daxpedda/orgs", "repos_url": "https://api.github.com/users/daxpedda/repos", "events_url": "https://api.github.com/users/daxpedda/events{/privacy}", "received_events_url": "https://api.github.com/users/daxpedda/received_events", "type": "User", "site_admin": false}, "committer": {"login": "daxpedda", "id": 1645124, "node_id": "MDQ6VXNlcjE2NDUxMjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1645124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daxpedda", "html_url": "https://github.com/daxpedda", "followers_url": "https://api.github.com/users/daxpedda/followers", "following_url": "https://api.github.com/users/daxpedda/following{/other_user}", "gists_url": "https://api.github.com/users/daxpedda/gists{/gist_id}", "starred_url": "https://api.github.com/users/daxpedda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daxpedda/subscriptions", "organizations_url": "https://api.github.com/users/daxpedda/orgs", "repos_url": "https://api.github.com/users/daxpedda/repos", "events_url": "https://api.github.com/users/daxpedda/events{/privacy}", "received_events_url": "https://api.github.com/users/daxpedda/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "729892961c9e3b00919fd13d7ea2a704d03dd6a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/729892961c9e3b00919fd13d7ea2a704d03dd6a8", "html_url": "https://github.com/rust-lang/rust/commit/729892961c9e3b00919fd13d7ea2a704d03dd6a8"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "5c3fa68620cceb6f359a7ddb3134fac856907c5f", "filename": "clippy_lints/src/missing_doc.rs", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/177b3b27c46cddeb6f80bfebabe1a70328c1a9fc/clippy_lints%2Fsrc%2Fmissing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/177b3b27c46cddeb6f80bfebabe1a70328c1a9fc/clippy_lints%2Fsrc%2Fmissing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_doc.rs?ref=177b3b27c46cddeb6f80bfebabe1a70328c1a9fc", "patch": "@@ -6,11 +6,12 @@\n //\n \n use crate::utils::{in_macro, span_lint};\n+use if_chain::if_chain;\n use rustc::hir;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintContext, LintPass};\n use rustc::ty;\n use rustc::{declare_tool_lint, lint_array};\n-use syntax::ast;\n+use syntax::ast::{self, MetaItem, MetaItemKind};\n use syntax::attr;\n use syntax::source_map::Span;\n \n@@ -52,6 +53,22 @@ impl MissingDoc {\n         *self.doc_hidden_stack.last().expect(\"empty doc_hidden_stack\")\n     }\n \n+    #[allow(clippy::needless_bool)]\n+    fn has_include(meta: Option<MetaItem>) -> bool {\n+        if_chain! {\n+            if let Some(meta) = meta;\n+            if let MetaItemKind::List(list) = meta.node;\n+            if let Some(meta) = list.get(0);\n+            if let Some(name) = meta.name();\n+            if name == \"include\";\n+            then {\n+                true\n+            } else {\n+                false\n+            }\n+        }\n+    }\n+\n     fn check_missing_docs_attrs(\n         &self,\n         cx: &LateContext<'_, '_>,\n@@ -74,7 +91,9 @@ impl MissingDoc {\n             return;\n         }\n \n-        let has_doc = attrs.iter().any(|a| a.is_value_str() && a.name() == \"doc\");\n+        let has_doc = attrs\n+            .iter()\n+            .any(|a| a.name() == \"doc\" && (a.is_value_str() || Self::has_include(a.meta())));\n         if !has_doc {\n             span_lint(\n                 cx,"}]}