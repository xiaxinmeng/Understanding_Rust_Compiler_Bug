{"sha": "c0fd452840c7cc53b3396268f62ed2a0a2e8fef7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwZmQ0NTI4NDBjN2NjNTNiMzM5NjI2OGY2MmVkMmEwYTJlOGZlZjc=", "commit": {"author": {"name": "Robert Sedlacek", "email": "rs@474.at", "date": "2020-07-03T16:23:36Z"}, "committer": {"name": "Robert Sedlacek", "email": "rs@474.at", "date": "2020-07-03T16:23:36Z"}, "message": "fmt fix", "tree": {"sha": "6815fd080ed19b3f57296cdcb9a9385e72697ee2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6815fd080ed19b3f57296cdcb9a9385e72697ee2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0fd452840c7cc53b3396268f62ed2a0a2e8fef7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0fd452840c7cc53b3396268f62ed2a0a2e8fef7", "html_url": "https://github.com/rust-lang/rust/commit/c0fd452840c7cc53b3396268f62ed2a0a2e8fef7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0fd452840c7cc53b3396268f62ed2a0a2e8fef7/comments", "author": {"login": "phaylon", "id": 41822, "node_id": "MDQ6VXNlcjQxODIy", "avatar_url": "https://avatars.githubusercontent.com/u/41822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phaylon", "html_url": "https://github.com/phaylon", "followers_url": "https://api.github.com/users/phaylon/followers", "following_url": "https://api.github.com/users/phaylon/following{/other_user}", "gists_url": "https://api.github.com/users/phaylon/gists{/gist_id}", "starred_url": "https://api.github.com/users/phaylon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phaylon/subscriptions", "organizations_url": "https://api.github.com/users/phaylon/orgs", "repos_url": "https://api.github.com/users/phaylon/repos", "events_url": "https://api.github.com/users/phaylon/events{/privacy}", "received_events_url": "https://api.github.com/users/phaylon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phaylon", "id": 41822, "node_id": "MDQ6VXNlcjQxODIy", "avatar_url": "https://avatars.githubusercontent.com/u/41822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phaylon", "html_url": "https://github.com/phaylon", "followers_url": "https://api.github.com/users/phaylon/followers", "following_url": "https://api.github.com/users/phaylon/following{/other_user}", "gists_url": "https://api.github.com/users/phaylon/gists{/gist_id}", "starred_url": "https://api.github.com/users/phaylon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phaylon/subscriptions", "organizations_url": "https://api.github.com/users/phaylon/orgs", "repos_url": "https://api.github.com/users/phaylon/repos", "events_url": "https://api.github.com/users/phaylon/events{/privacy}", "received_events_url": "https://api.github.com/users/phaylon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa4bee228f23b3e1a1d91ed3a4606af3c6b60895", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa4bee228f23b3e1a1d91ed3a4606af3c6b60895", "html_url": "https://github.com/rust-lang/rust/commit/aa4bee228f23b3e1a1d91ed3a4606af3c6b60895"}], "stats": {"total": 7, "additions": 1, "deletions": 6}, "files": [{"sha": "a49dc87c0b47f5697b2d5c28bbc58714aad030b5", "filename": "clippy_lints/src/pattern_type_mismatch.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c0fd452840c7cc53b3396268f62ed2a0a2e8fef7/clippy_lints%2Fsrc%2Fpattern_type_mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0fd452840c7cc53b3396268f62ed2a0a2e8fef7/clippy_lints%2Fsrc%2Fpattern_type_mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpattern_type_mismatch.rs?ref=c0fd452840c7cc53b3396268f62ed2a0a2e8fef7", "patch": "@@ -146,12 +146,7 @@ enum DerefPossible {\n     Impossible,\n }\n \n-fn apply_lint<'tcx>(\n-    cx: &LateContext<'tcx>,\n-    pat: &Pat<'_>,\n-    expr_ty: Ty<'tcx>,\n-    deref_possible: DerefPossible,\n-) -> bool {\n+fn apply_lint<'tcx>(cx: &LateContext<'tcx>, pat: &Pat<'_>, expr_ty: Ty<'tcx>, deref_possible: DerefPossible) -> bool {\n     let maybe_mismatch = find_first_mismatch(cx, pat, expr_ty, Level::Top);\n     if let Some((span, mutability, level)) = maybe_mismatch {\n         span_lint_and_help("}]}