{"sha": "23ffa3ca0485bcdf1b0c553dbc134f33f16c7036", "node_id": "C_kwDOAAsO6NoAKDIzZmZhM2NhMDQ4NWJjZGYxYjBjNTUzZGJjMTM0ZjMzZjE2YzcwMzY", "commit": {"author": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2021-12-25T12:11:54Z"}, "committer": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2021-12-25T12:11:54Z"}, "message": "fix an ICE on unwrapping a None", "tree": {"sha": "8ccb4994480ffb710d53f8b69c45158c85d87180", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ccb4994480ffb710d53f8b69c45158c85d87180"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23ffa3ca0485bcdf1b0c553dbc134f33f16c7036", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23ffa3ca0485bcdf1b0c553dbc134f33f16c7036", "html_url": "https://github.com/rust-lang/rust/commit/23ffa3ca0485bcdf1b0c553dbc134f33f16c7036", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23ffa3ca0485bcdf1b0c553dbc134f33f16c7036/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8529b2a0561dcee254ee1447aa6bd5d69812b697", "url": "https://api.github.com/repos/rust-lang/rust/commits/8529b2a0561dcee254ee1447aa6bd5d69812b697", "html_url": "https://github.com/rust-lang/rust/commit/8529b2a0561dcee254ee1447aa6bd5d69812b697"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "1915d990c126c1e4b990104b1fce603afac4fa53", "filename": "clippy_lints/src/casts/unnecessary_cast.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/23ffa3ca0485bcdf1b0c553dbc134f33f16c7036/clippy_lints%2Fsrc%2Fcasts%2Funnecessary_cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23ffa3ca0485bcdf1b0c553dbc134f33f16c7036/clippy_lints%2Fsrc%2Fcasts%2Funnecessary_cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcasts%2Funnecessary_cast.rs?ref=23ffa3ca0485bcdf1b0c553dbc134f33f16c7036", "patch": "@@ -49,8 +49,9 @@ pub(super) fn check(\n                 if cast_from.kind() == cast_to.kind() =>\n             {\n                 if let Some(src) = snippet_opt(cx, lit.span) {\n-                    let num_lit = NumericLiteral::from_lit_kind(&src, &lit.node).unwrap();\n-                    lint_unnecessary_cast(cx, expr, num_lit.integer, cast_from, cast_to);\n+                    if let Some(num_lit) = NumericLiteral::from_lit_kind(&src, &lit.node) {\n+                        lint_unnecessary_cast(cx, expr, num_lit.integer, cast_from, cast_to);\n+                    }\n                 }\n             },\n             _ => {"}]}