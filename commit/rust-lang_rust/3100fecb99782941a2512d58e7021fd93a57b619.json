{"sha": "3100fecb99782941a2512d58e7021fd93a57b619", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxMDBmZWNiOTk3ODI5NDFhMjUxMmQ1OGU3MDIxZmQ5M2E1N2I2MTk=", "commit": {"author": {"name": "rhysd", "email": "lin90162@yahoo.co.jp", "date": "2019-02-03T09:28:42Z"}, "committer": {"name": "rhysd", "email": "lin90162@yahoo.co.jp", "date": "2019-02-03T09:28:42Z"}, "message": "use snippet for making a suggestion if possible", "tree": {"sha": "b05f7cc9e490e9d3ac989618c6834610369d50f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b05f7cc9e490e9d3ac989618c6834610369d50f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3100fecb99782941a2512d58e7021fd93a57b619", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3100fecb99782941a2512d58e7021fd93a57b619", "html_url": "https://github.com/rust-lang/rust/commit/3100fecb99782941a2512d58e7021fd93a57b619", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3100fecb99782941a2512d58e7021fd93a57b619/comments", "author": {"login": "rhysd", "id": 823277, "node_id": "MDQ6VXNlcjgyMzI3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/823277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rhysd", "html_url": "https://github.com/rhysd", "followers_url": "https://api.github.com/users/rhysd/followers", "following_url": "https://api.github.com/users/rhysd/following{/other_user}", "gists_url": "https://api.github.com/users/rhysd/gists{/gist_id}", "starred_url": "https://api.github.com/users/rhysd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rhysd/subscriptions", "organizations_url": "https://api.github.com/users/rhysd/orgs", "repos_url": "https://api.github.com/users/rhysd/repos", "events_url": "https://api.github.com/users/rhysd/events{/privacy}", "received_events_url": "https://api.github.com/users/rhysd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rhysd", "id": 823277, "node_id": "MDQ6VXNlcjgyMzI3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/823277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rhysd", "html_url": "https://github.com/rhysd", "followers_url": "https://api.github.com/users/rhysd/followers", "following_url": "https://api.github.com/users/rhysd/following{/other_user}", "gists_url": "https://api.github.com/users/rhysd/gists{/gist_id}", "starred_url": "https://api.github.com/users/rhysd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rhysd/subscriptions", "organizations_url": "https://api.github.com/users/rhysd/orgs", "repos_url": "https://api.github.com/users/rhysd/repos", "events_url": "https://api.github.com/users/rhysd/events{/privacy}", "received_events_url": "https://api.github.com/users/rhysd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54d49af3ff1f23e8e8b580483e6b3a4f708285bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/54d49af3ff1f23e8e8b580483e6b3a4f708285bd", "html_url": "https://github.com/rust-lang/rust/commit/54d49af3ff1f23e8e8b580483e6b3a4f708285bd"}], "stats": {"total": 74, "additions": 59, "deletions": 15}, "files": [{"sha": "228d31bd554b5e17dd9f116c11bd99e08d418945", "filename": "clippy_lints/src/dbg_macro.rs", "status": "modified", "additions": 37, "deletions": 8, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/3100fecb99782941a2512d58e7021fd93a57b619/clippy_lints%2Fsrc%2Fdbg_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3100fecb99782941a2512d58e7021fd93a57b619/clippy_lints%2Fsrc%2Fdbg_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdbg_macro.rs?ref=3100fecb99782941a2512d58e7021fd93a57b619", "patch": "@@ -1,7 +1,10 @@\n-use crate::utils::span_help_and_lint;\n+use crate::utils::{span_help_and_lint, span_lint_and_sugg, snippet_opt};\n use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n use rustc::{declare_tool_lint, lint_array};\n use syntax::ast;\n+use rustc_errors::Applicability;\n+use syntax::tokenstream::TokenStream;\n+use syntax::source_map::Span;\n \n /// **What it does:** Checks for usage of dbg!() macro.\n ///\n@@ -40,13 +43,39 @@ impl LintPass for Pass {\n impl EarlyLintPass for Pass {\n     fn check_mac(&mut self, cx: &EarlyContext<'_>, mac: &ast::Mac) {\n         if mac.node.path == \"dbg\" {\n-            span_help_and_lint(\n-                cx,\n-                DBG_MACRO,\n-                mac.span,\n-                \"`dbg!` macro is intended as a debugging tool\",\n-                \"ensure to avoid having uses of it in version control\",\n-            );\n+            match tts_span(mac.node.tts.clone()).and_then(|span| snippet_opt(cx, span)) {\n+                Some(sugg) => {\n+                    span_lint_and_sugg(\n+                        cx,\n+                        DBG_MACRO,\n+                        mac.span,\n+                        \"`dbg!` macro is intended as a debugging tool\",\n+                        \"ensure to avoid having uses of it in version control\",\n+                        sugg,\n+                        Applicability::MaybeIncorrect,\n+                    );\n+                }\n+                None => {\n+                    span_help_and_lint(\n+                        cx,\n+                        DBG_MACRO,\n+                        mac.span,\n+                        \"`dbg!` macro is intended as a debugging tool\",\n+                        \"ensure to avoid having uses of it in version control\",\n+                    );\n+                }\n+            };\n         }\n     }\n }\n+\n+// Get span enclosing entire the token stream.\n+fn tts_span(tts: TokenStream) -> Option<Span> {\n+    let mut cursor = tts.into_trees();\n+    let first = cursor.next()?.span();\n+    let span = match cursor.last() {\n+        Some(tree) => first.to(tree.span()),\n+        None => first,\n+    };\n+    Some(span)\n+}"}, {"sha": "43a60180f9644a97bd126311cab4fec3ad29c438", "filename": "tests/ui/dbg_macro.stderr", "status": "modified", "additions": 22, "deletions": 7, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/3100fecb99782941a2512d58e7021fd93a57b619/tests%2Fui%2Fdbg_macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3100fecb99782941a2512d58e7021fd93a57b619/tests%2Fui%2Fdbg_macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdbg_macro.stderr?ref=3100fecb99782941a2512d58e7021fd93a57b619", "patch": "@@ -5,55 +5,70 @@ LL |     if let Some(n) = dbg!(n.checked_sub(4)) {\n    |                      ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::dbg-macro` implied by `-D warnings`\n-   = help: ensure to avoid having uses of it in version control\n+help: ensure to avoid having uses of it in version control\n+   |\n+LL |     if let Some(n) = n.checked_sub(4) {\n+   |                      ^^^^^^^^^^^^^^^^\n \n error: `dbg!` macro is intended as a debugging tool\n   --> $DIR/dbg_macro.rs:12:8\n    |\n LL |     if dbg!(n <= 1) {\n    |        ^^^^^^^^^^^^\n+help: ensure to avoid having uses of it in version control\n    |\n-   = help: ensure to avoid having uses of it in version control\n+LL |     if n <= 1 {\n+   |        ^^^^^^\n \n error: `dbg!` macro is intended as a debugging tool\n   --> $DIR/dbg_macro.rs:13:9\n    |\n LL |         dbg!(1)\n    |         ^^^^^^^\n+help: ensure to avoid having uses of it in version control\n+   |\n+LL |         1\n    |\n-   = help: ensure to avoid having uses of it in version control\n \n error: `dbg!` macro is intended as a debugging tool\n   --> $DIR/dbg_macro.rs:15:9\n    |\n LL |         dbg!(n * factorial(n - 1))\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+help: ensure to avoid having uses of it in version control\n+   |\n+LL |         n * factorial(n - 1)\n    |\n-   = help: ensure to avoid having uses of it in version control\n \n error: `dbg!` macro is intended as a debugging tool\n   --> $DIR/dbg_macro.rs:20:5\n    |\n LL |     dbg!(42);\n    |     ^^^^^^^^\n+help: ensure to avoid having uses of it in version control\n    |\n-   = help: ensure to avoid having uses of it in version control\n+LL |     42;\n+   |     ^^\n \n error: `dbg!` macro is intended as a debugging tool\n   --> $DIR/dbg_macro.rs:21:5\n    |\n LL |     dbg!(dbg!(dbg!(42)));\n    |     ^^^^^^^^^^^^^^^^^^^^\n+help: ensure to avoid having uses of it in version control\n    |\n-   = help: ensure to avoid having uses of it in version control\n+LL |     dbg!(dbg!(42));\n+   |     ^^^^^^^^^^^^^^\n \n error: `dbg!` macro is intended as a debugging tool\n   --> $DIR/dbg_macro.rs:22:14\n    |\n LL |     foo(3) + dbg!(factorial(4));\n    |              ^^^^^^^^^^^^^^^^^^\n+help: ensure to avoid having uses of it in version control\n    |\n-   = help: ensure to avoid having uses of it in version control\n+LL |     foo(3) + factorial(4);\n+   |              ^^^^^^^^^^^^\n \n error: aborting due to 7 previous errors\n "}]}