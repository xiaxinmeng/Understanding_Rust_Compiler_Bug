{"sha": "9d625bc9724fcaef8cc74055c576dec6457a4b70", "node_id": "C_kwDOAAsO6NoAKDlkNjI1YmM5NzI0ZmNhZWY4Y2M3NDA1NWM1NzZkZWM2NDU3YTRiNzA", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-01-07T22:16:56Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-01-07T22:16:56Z"}, "message": "Fix accidental undo of 5e1972eba7e95e68f6fc05b07dec15fb1e553e1b", "tree": {"sha": "e9ebffa65f9e494f2f7fcfafe043a7c8ff297221", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9ebffa65f9e494f2f7fcfafe043a7c8ff297221"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d625bc9724fcaef8cc74055c576dec6457a4b70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d625bc9724fcaef8cc74055c576dec6457a4b70", "html_url": "https://github.com/rust-lang/rust/commit/9d625bc9724fcaef8cc74055c576dec6457a4b70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d625bc9724fcaef8cc74055c576dec6457a4b70/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e5f23e2a66f78b3c4884e4c926d7ca5d2fe67f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e5f23e2a66f78b3c4884e4c926d7ca5d2fe67f4", "html_url": "https://github.com/rust-lang/rust/commit/9e5f23e2a66f78b3c4884e4c926d7ca5d2fe67f4"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "dcf42e1aefebc7457e176f1baa41cb09d01b7e39", "filename": "compiler/rustc_typeck/src/check/check.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9d625bc9724fcaef8cc74055c576dec6457a4b70/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d625bc9724fcaef8cc74055c576dec6457a4b70/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs?ref=9d625bc9724fcaef8cc74055c576dec6457a4b70", "patch": "@@ -931,8 +931,9 @@ fn check_impl_items_against_trait<'tcx>(\n             tcx.sess.delay_span_bug(impl_item.span, \"missing associated item in trait\");\n             continue;\n         };\n-        match impl_item.kind {\n-            hir::AssocItemKind::Const => {\n+        let impl_item_full = tcx.hir().impl_item(impl_item.id);\n+        match impl_item_full.kind {\n+            hir::ImplItemKind::Const(..) => {\n                 // Find associated const definition.\n                 compare_const_impl(\n                     tcx,\n@@ -942,7 +943,7 @@ fn check_impl_items_against_trait<'tcx>(\n                     impl_trait_ref,\n                 );\n             }\n-            hir::AssocItemKind::Fn { .. } => {\n+            hir::ImplItemKind::Fn(..) => {\n                 let opt_trait_span = tcx.hir().span_if_local(ty_trait_item.def_id);\n                 compare_impl_method(\n                     tcx,\n@@ -953,12 +954,12 @@ fn check_impl_items_against_trait<'tcx>(\n                     opt_trait_span,\n                 );\n             }\n-            hir::AssocItemKind::Type => {\n+            hir::ImplItemKind::TyAlias(impl_ty) => {\n                 let opt_trait_span = tcx.hir().span_if_local(ty_trait_item.def_id);\n                 compare_ty_impl(\n                     tcx,\n                     &ty_impl_item,\n-                    impl_item.span,\n+                    impl_ty.span,\n                     &ty_trait_item,\n                     impl_trait_ref,\n                     opt_trait_span,"}]}