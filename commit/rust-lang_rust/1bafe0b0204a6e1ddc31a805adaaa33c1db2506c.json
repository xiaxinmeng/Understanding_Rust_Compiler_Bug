{"sha": "1bafe0b0204a6e1ddc31a805adaaa33c1db2506c", "node_id": "C_kwDOAAsO6NoAKDFiYWZlMGIwMjA0YTZlMWRkYzMxYTgwNWFkYWFhMzNjMWRiMjUwNmM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-09-01T19:37:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-01T19:37:21Z"}, "message": "Rollup merge of #101285 - TaKO8Ki:do-not-suggest-adding-move-when-closure-is-already-marked-as-move, r=oli-obk\n\nDo not suggest adding `move` to closure when `move` is already used\n\nFixes #101227", "tree": {"sha": "a3db177bf1b29cac8666601dae8634012aef0057", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3db177bf1b29cac8666601dae8634012aef0057"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1bafe0b0204a6e1ddc31a805adaaa33c1db2506c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjEQnxCRBK7hj4Ov3rIwAAzXAIACibRi4MPfj3w47LQ//vNRQt\noRgcDCQSVmhcsSnGLoCrco/ys4ExoyAjSskgCzztk4SnTI9c8MKt4djMfCysVdFA\nsEAXkMz30orLiMl0K1TQ6mppFza2gxcFsd82PqZ0pUVLGOzVKee+aC5TDyJGZU5T\nhVz9EsSI9jWRUeBDl/J1L6M6+9bMtqyhOsFAi6NxaSnd9CQfKUs8++N/ByKp8HWd\neVoGs3eZxuhay74yWMovaDLNjWJkcwoVPq6v8oUNB2UlihHF8kSmApIh1Tj8Lliz\nzfSvnRL6fNGZHOn93eo68Mjl/S1iJtKw2cSuS6vHdRQJbhZR0/c8n8FEG1a7lrg=\n=ZRzh\n-----END PGP SIGNATURE-----\n", "payload": "tree a3db177bf1b29cac8666601dae8634012aef0057\nparent 8f8a5d2723f061aa863d2897c2b6cecae2b0ceba\nparent 78e9bea598a1e9a87236e9bf437baa8f9ecb8294\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1662061041 +0200\ncommitter GitHub <noreply@github.com> 1662061041 +0200\n\nRollup merge of #101285 - TaKO8Ki:do-not-suggest-adding-move-when-closure-is-already-marked-as-move, r=oli-obk\n\nDo not suggest adding `move` to closure when `move` is already used\n\nFixes #101227\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1bafe0b0204a6e1ddc31a805adaaa33c1db2506c", "html_url": "https://github.com/rust-lang/rust/commit/1bafe0b0204a6e1ddc31a805adaaa33c1db2506c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1bafe0b0204a6e1ddc31a805adaaa33c1db2506c/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f8a5d2723f061aa863d2897c2b6cecae2b0ceba", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f8a5d2723f061aa863d2897c2b6cecae2b0ceba", "html_url": "https://github.com/rust-lang/rust/commit/8f8a5d2723f061aa863d2897c2b6cecae2b0ceba"}, {"sha": "78e9bea598a1e9a87236e9bf437baa8f9ecb8294", "url": "https://api.github.com/repos/rust-lang/rust/commits/78e9bea598a1e9a87236e9bf437baa8f9ecb8294", "html_url": "https://github.com/rust-lang/rust/commit/78e9bea598a1e9a87236e9bf437baa8f9ecb8294"}], "stats": {"total": 40, "additions": 37, "deletions": 3}, "files": [{"sha": "082dd86902354843822df54b8cee1b6dd56b63a3", "filename": "compiler/rustc_borrowck/src/diagnostics/region_errors.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1bafe0b0204a6e1ddc31a805adaaa33c1db2506c/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fregion_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1bafe0b0204a6e1ddc31a805adaaa33c1db2506c/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fregion_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fregion_errors.rs?ref=1bafe0b0204a6e1ddc31a805adaaa33c1db2506c", "patch": "@@ -902,7 +902,11 @@ impl<'a, 'tcx> MirBorrowckCtxt<'a, 'tcx> {\n             hir::ExprKind::MethodCall(.., args, _) => {\n                 // only the first closre parameter of the method. args[0] is MethodCall PathSegment\n                 for i in 1..args.len() {\n-                    if let hir::ExprKind::Closure(..) = args[i].kind {\n+                    if let hir::ExprKind::Closure(hir::Closure {\n+                        capture_clause: hir::CaptureBy::Ref,\n+                        ..\n+                    }) = args[i].kind\n+                    {\n                         closure_span = Some(args[i].span.shrink_to_lo());\n                         break;\n                     }\n@@ -911,7 +915,11 @@ impl<'a, 'tcx> MirBorrowckCtxt<'a, 'tcx> {\n             hir::ExprKind::Block(blk, _) => {\n                 if let Some(ref expr) = blk.expr {\n                     // only when the block is a closure\n-                    if let hir::ExprKind::Closure(..) = expr.kind {\n+                    if let hir::ExprKind::Closure(hir::Closure {\n+                        capture_clause: hir::CaptureBy::Ref,\n+                        ..\n+                    }) = expr.kind\n+                    {\n                         closure_span = Some(expr.span.shrink_to_lo());\n                     }\n                 }\n@@ -921,7 +929,7 @@ impl<'a, 'tcx> MirBorrowckCtxt<'a, 'tcx> {\n         if let Some(closure_span) = closure_span {\n             diag.span_suggestion_verbose(\n                 closure_span,\n-                format!(\"consider adding 'move' keyword before the nested closure\"),\n+                \"consider adding 'move' keyword before the nested closure\",\n                 \"move \",\n                 Applicability::MaybeIncorrect,\n             );"}, {"sha": "524459291f85353470b45ab532544dd54f44f953", "filename": "src/test/ui/borrowck/do-not-suggest-adding-move-when-closure-is-already-marked-as-move.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1bafe0b0204a6e1ddc31a805adaaa33c1db2506c/src%2Ftest%2Fui%2Fborrowck%2Fdo-not-suggest-adding-move-when-closure-is-already-marked-as-move.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1bafe0b0204a6e1ddc31a805adaaa33c1db2506c/src%2Ftest%2Fui%2Fborrowck%2Fdo-not-suggest-adding-move-when-closure-is-already-marked-as-move.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fdo-not-suggest-adding-move-when-closure-is-already-marked-as-move.rs?ref=1bafe0b0204a6e1ddc31a805adaaa33c1db2506c", "patch": "@@ -0,0 +1,8 @@\n+fn main() {\n+    let mut vec: Vec<i32> = Vec::new();\n+    let closure = move || {\n+        vec.clear();\n+        let mut iter = vec.iter();\n+        move || { iter.next() } //~ ERROR captured variable cannot escape `FnMut` closure bod\n+    };\n+}"}, {"sha": "78ca090feb72245bcef8d36e5e95b9de9b639eaf", "filename": "src/test/ui/borrowck/do-not-suggest-adding-move-when-closure-is-already-marked-as-move.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/1bafe0b0204a6e1ddc31a805adaaa33c1db2506c/src%2Ftest%2Fui%2Fborrowck%2Fdo-not-suggest-adding-move-when-closure-is-already-marked-as-move.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1bafe0b0204a6e1ddc31a805adaaa33c1db2506c/src%2Ftest%2Fui%2Fborrowck%2Fdo-not-suggest-adding-move-when-closure-is-already-marked-as-move.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fdo-not-suggest-adding-move-when-closure-is-already-marked-as-move.stderr?ref=1bafe0b0204a6e1ddc31a805adaaa33c1db2506c", "patch": "@@ -0,0 +1,18 @@\n+error: captured variable cannot escape `FnMut` closure body\n+  --> $DIR/do-not-suggest-adding-move-when-closure-is-already-marked-as-move.rs:6:9\n+   |\n+LL |     let mut vec: Vec<i32> = Vec::new();\n+   |         ------- variable defined here\n+LL |     let closure = move || {\n+   |                         - inferred to be a `FnMut` closure\n+LL |         vec.clear();\n+   |         --- variable captured here\n+LL |         let mut iter = vec.iter();\n+LL |         move || { iter.next() }\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^ returns a closure that contains a reference to a captured variable, which then escapes the closure body\n+   |\n+   = note: `FnMut` closures only have access to their captured variables while they are executing...\n+   = note: ...therefore, they cannot allow references to captured variables to escape\n+\n+error: aborting due to previous error\n+"}]}