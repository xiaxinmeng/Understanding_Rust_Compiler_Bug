{"sha": "63b82238bbe54643c63a8693299d6a9f4c0b0358", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzYjgyMjM4YmJlNTQ2NDNjNjNhODY5MzI5OWQ2YTlmNGMwYjAzNTg=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-07-24T11:16:36Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-07-26T09:30:39Z"}, "message": "Implement 128bit checked add and sub", "tree": {"sha": "06d7c44095f40107fe0aaa321f096a86fb5731d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06d7c44095f40107fe0aaa321f096a86fb5731d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63b82238bbe54643c63a8693299d6a9f4c0b0358", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63b82238bbe54643c63a8693299d6a9f4c0b0358", "html_url": "https://github.com/rust-lang/rust/commit/63b82238bbe54643c63a8693299d6a9f4c0b0358", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63b82238bbe54643c63a8693299d6a9f4c0b0358/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d35be684da8c82ac699093132bda4a5292f9578", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d35be684da8c82ac699093132bda4a5292f9578", "html_url": "https://github.com/rust-lang/rust/commit/4d35be684da8c82ac699093132bda4a5292f9578"}], "stats": {"total": 46, "additions": 17, "deletions": 29}, "files": [{"sha": "221cdb3e863de261ca42aa82c62392cb19e2d764", "filename": "example/mini_core.rs", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/63b82238bbe54643c63a8693299d6a9f4c0b0358/example%2Fmini_core.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63b82238bbe54643c63a8693299d6a9f4c0b0358/example%2Fmini_core.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/example%2Fmini_core.rs?ref=63b82238bbe54643c63a8693299d6a9f4c0b0358", "patch": "@@ -44,12 +44,10 @@ unsafe impl Copy for u8 {}\n unsafe impl Copy for u16 {}\n unsafe impl Copy for u32 {}\n unsafe impl Copy for u64 {}\n-unsafe impl Copy for u128 {}\n unsafe impl Copy for usize {}\n unsafe impl Copy for i8 {}\n unsafe impl Copy for i16 {}\n unsafe impl Copy for i32 {}\n-unsafe impl Copy for i128 {}\n unsafe impl Copy for isize {}\n unsafe impl Copy for char {}\n unsafe impl<'a, T: ?Sized> Copy for &'a T {}\n@@ -146,22 +144,6 @@ impl Add for usize {\n     }\n }\n \n-impl Add for u128 {\n-    type Output = Self;\n-\n-    fn add(self, rhs: Self) -> Self {\n-        self + rhs\n-    }\n-}\n-\n-impl Add for i128 {\n-    type Output = Self;\n-\n-    fn add(self, rhs: Self) -> Self {\n-        self + rhs\n-    }\n-}\n-\n #[lang = \"sub\"]\n pub trait Sub<RHS = Self> {\n     type Output;\n@@ -286,15 +268,6 @@ impl PartialEq for i32 {\n     }\n }\n \n-impl PartialEq for i128 {\n-    fn eq(&self, other: &i128) -> bool {\n-        (*self) == (*other)\n-    }\n-    fn ne(&self, other: &i128) -> bool {\n-        (*self) != (*other)\n-    }\n-}\n-\n impl PartialEq for isize {\n     fn eq(&self, other: &isize) -> bool {\n         (*self) == (*other)"}, {"sha": "f9fc1f2cde3264928f146e4b40d0bb6a67d7615c", "filename": "example/std_example.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/63b82238bbe54643c63a8693299d6a9f4c0b0358/example%2Fstd_example.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63b82238bbe54643c63a8693299d6a9f4c0b0358/example%2Fstd_example.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/example%2Fstd_example.rs?ref=63b82238bbe54643c63a8693299d6a9f4c0b0358", "patch": "@@ -23,6 +23,9 @@ fn main() {\n     checked_div_u128(0u128, 2u128);\n     assert_eq!(1u128 + 2, 3);\n \n+    // overflow panic\n+    // 0xFEDCBA987654321123456789ABCDEFu128 + 0xFEDCBA987654321123456789ABCDEFu128;\n+\n     println!(\"{}\", 0b100010000000000000000000000000000u128 >> 10);\n     println!(\"{}\", 0xFEDCBA987654321123456789ABCDEFu128 >> 64);\n     println!(\"{} >> 64 == {}\", 0xFEDCBA987654321123456789ABCDEFu128 as i128, 0xFEDCBA987654321123456789ABCDEFu128 as i128 >> 64);"}, {"sha": "9cd6bc8c78687a2d7f1a5bfa1c5adf70d46f2815", "filename": "src/codegen_i128.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/63b82238bbe54643c63a8693299d6a9f4c0b0358/src%2Fcodegen_i128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63b82238bbe54643c63a8693299d6a9f4c0b0358/src%2Fcodegen_i128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcodegen_i128.rs?ref=63b82238bbe54643c63a8693299d6a9f4c0b0358", "patch": "@@ -23,8 +23,20 @@ pub fn maybe_codegen<'a, 'tcx>(\n             assert!(!checked);\n             return None;\n         }\n-        BinOp::Add | BinOp::Sub => {\n-            return None; // FIXME implement checked versions\n+        BinOp::Add | BinOp::Sub if !checked => return None,\n+        BinOp::Add => {\n+            return Some(if is_signed {\n+                fx.easy_call(\"__rust_i128_addo\", &[lhs, rhs], out_ty)\n+            } else {\n+                fx.easy_call(\"__rust_u128_addo\", &[lhs, rhs], out_ty)\n+            })\n+        }\n+        BinOp::Sub => {\n+            return Some(if is_signed {\n+                fx.easy_call(\"__rust_i128_subo\", &[lhs, rhs], out_ty)\n+            } else {\n+                fx.easy_call(\"__rust_u128_subo\", &[lhs, rhs], out_ty)\n+            })\n         }\n         BinOp::Offset => unreachable!(\"offset should only be used on pointers, not 128bit ints\"),\n         BinOp::Mul => {"}]}