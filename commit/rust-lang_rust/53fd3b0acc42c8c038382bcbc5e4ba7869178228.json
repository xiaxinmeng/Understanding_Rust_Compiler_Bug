{"sha": "53fd3b0acc42c8c038382bcbc5e4ba7869178228", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzZmQzYjBhY2M0MmM4YzAzODM4MmJjYmM1ZTRiYTc4NjkxNzgyMjg=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-10-08T00:30:24Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-10-10T09:35:25Z"}, "message": "Avoid quadratic complexity.", "tree": {"sha": "f4c5b90d6f01f8ae1a0372aa4e4769cb79ff15aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4c5b90d6f01f8ae1a0372aa4e4769cb79ff15aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53fd3b0acc42c8c038382bcbc5e4ba7869178228", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53fd3b0acc42c8c038382bcbc5e4ba7869178228", "html_url": "https://github.com/rust-lang/rust/commit/53fd3b0acc42c8c038382bcbc5e4ba7869178228", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53fd3b0acc42c8c038382bcbc5e4ba7869178228/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fbc96e18ad0c2a3f5be7e4ef003c720146b0a52d", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbc96e18ad0c2a3f5be7e4ef003c720146b0a52d", "html_url": "https://github.com/rust-lang/rust/commit/fbc96e18ad0c2a3f5be7e4ef003c720146b0a52d"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "4ee07036edb7fcf639ef93dbea1250e8e9a8378a", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/53fd3b0acc42c8c038382bcbc5e4ba7869178228/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53fd3b0acc42c8c038382bcbc5e4ba7869178228/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=53fd3b0acc42c8c038382bcbc5e4ba7869178228", "patch": "@@ -60,6 +60,19 @@ pub enum LegacyScope<'a> {\n     Binding(&'a LegacyBinding<'a>),\n }\n \n+impl<'a> LegacyScope<'a> {\n+    fn simplify_expansion(mut invoc: &'a InvocationData<'a>) -> Self {\n+        while let LegacyScope::Invocation(_) = invoc.expansion.get() {\n+            match invoc.legacy_scope.get() {\n+                LegacyScope::Expansion(new_invoc) => invoc = new_invoc,\n+                LegacyScope::Binding(_) => break,\n+                scope @ _ => return scope,\n+            }\n+        }\n+        LegacyScope::Expansion(invoc)\n+    }\n+}\n+\n pub struct LegacyBinding<'a> {\n     parent: LegacyScope<'a>,\n     kind: LegacyBindingKind,\n@@ -175,8 +188,11 @@ impl<'a> base::Resolver for Resolver<'a> {\n             InvocationKind::Attr { ref attr, .. } => (intern(&*attr.name()), attr.span),\n         };\n \n-        let scope = self.invocations[&scope].legacy_scope.get();\n-        self.resolve_macro_name(scope, name, true).or_else(|| {\n+        let invocation = self.invocations[&scope];\n+        if let LegacyScope::Expansion(parent) = invocation.legacy_scope.get() {\n+            invocation.legacy_scope.set(LegacyScope::simplify_expansion(parent));\n+        }\n+        self.resolve_macro_name(invocation.legacy_scope.get(), name, true).or_else(|| {\n             let mut err =\n                 self.session.struct_span_err(span, &format!(\"macro undefined: '{}!'\", name));\n             self.suggest_macro_name(&name.as_str(), &mut err);"}]}