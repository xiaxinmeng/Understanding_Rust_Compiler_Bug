{"sha": "4fbd71c94324965f5a3bcf01845b6da0d51076b7", "node_id": "C_kwDOAAsO6NoAKDRmYmQ3MWM5NDMyNDk2NWY1YTNiY2YwMTg0NWI2ZGEwZDUxMDc2Yjc", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-03-17T11:27:20Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-03-23T13:53:59Z"}, "message": "Return timeout status in futex_wait.", "tree": {"sha": "3fc7eeacb1a6e812e61e8dbc31177204cc5ebe9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3fc7eeacb1a6e812e61e8dbc31177204cc5ebe9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4fbd71c94324965f5a3bcf01845b6da0d51076b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4fbd71c94324965f5a3bcf01845b6da0d51076b7", "html_url": "https://github.com/rust-lang/rust/commit/4fbd71c94324965f5a3bcf01845b6da0d51076b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4fbd71c94324965f5a3bcf01845b6da0d51076b7/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd2da4da379b060de7cb95e631e40e2227c1992b", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd2da4da379b060de7cb95e631e40e2227c1992b", "html_url": "https://github.com/rust-lang/rust/commit/cd2da4da379b060de7cb95e631e40e2227c1992b"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "22ba1a57fef2de54c0491d7a03c1552a7e05aef3", "filename": "library/std/src/sys/unix/futex.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4fbd71c94324965f5a3bcf01845b6da0d51076b7/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fbd71c94324965f5a3bcf01845b6da0d51076b7/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffutex.rs?ref=4fbd71c94324965f5a3bcf01845b6da0d51076b7", "patch": "@@ -12,7 +12,7 @@ use crate::sync::atomic::AtomicI32;\n use crate::time::Duration;\n \n #[cfg(any(target_os = \"linux\", target_os = \"android\"))]\n-pub fn futex_wait(futex: &AtomicI32, expected: i32, timeout: Option<Duration>) {\n+pub fn futex_wait(futex: &AtomicI32, expected: i32, timeout: Option<Duration>) -> bool {\n     let timespec = timeout.and_then(|d| {\n         Some(libc::timespec {\n             // Sleep forever if the timeout is longer than fits in a timespec.\n@@ -21,15 +21,16 @@ pub fn futex_wait(futex: &AtomicI32, expected: i32, timeout: Option<Duration>) {\n             tv_nsec: d.subsec_nanos() as _,\n         })\n     });\n-    unsafe {\n+    let r = unsafe {\n         libc::syscall(\n             libc::SYS_futex,\n             futex as *const AtomicI32,\n             libc::FUTEX_WAIT | libc::FUTEX_PRIVATE_FLAG,\n             expected,\n             timespec.as_ref().map_or(null(), |d| d as *const libc::timespec),\n-        );\n-    }\n+        )\n+    };\n+    !(r < 0 && super::os::errno() == libc::ETIMEDOUT)\n }\n \n #[cfg(target_os = \"emscripten\")]"}]}