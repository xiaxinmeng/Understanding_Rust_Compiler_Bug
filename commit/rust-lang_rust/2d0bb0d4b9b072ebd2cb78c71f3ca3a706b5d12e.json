{"sha": "2d0bb0d4b9b072ebd2cb78c71f3ca3a706b5d12e", "node_id": "C_kwDOAAsO6NoAKDJkMGJiMGQ0YjliMDcyZWJkMmNiNzhjNzFmM2NhM2E3MDZiNWQxMmU", "commit": {"author": {"name": "Nixon Enraght-Moony", "email": "nixon.emoony@gmail.com", "date": "2022-02-04T19:47:34Z"}, "committer": {"name": "Nixon Enraght-Moony", "email": "nixon.emoony@gmail.com", "date": "2022-02-09T16:10:58Z"}, "message": "jsondocck: Improved error messages for invalid json value and failed @count check", "tree": {"sha": "ed225384b5bc6069fcc7dce87de96e8a987d6597", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed225384b5bc6069fcc7dce87de96e8a987d6597"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d0bb0d4b9b072ebd2cb78c71f3ca3a706b5d12e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d0bb0d4b9b072ebd2cb78c71f3ca3a706b5d12e", "html_url": "https://github.com/rust-lang/rust/commit/2d0bb0d4b9b072ebd2cb78c71f3ca3a706b5d12e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d0bb0d4b9b072ebd2cb78c71f3ca3a706b5d12e/comments", "author": {"login": "aDotInTheVoid", "id": 28781354, "node_id": "MDQ6VXNlcjI4NzgxMzU0", "avatar_url": "https://avatars.githubusercontent.com/u/28781354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aDotInTheVoid", "html_url": "https://github.com/aDotInTheVoid", "followers_url": "https://api.github.com/users/aDotInTheVoid/followers", "following_url": "https://api.github.com/users/aDotInTheVoid/following{/other_user}", "gists_url": "https://api.github.com/users/aDotInTheVoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/aDotInTheVoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aDotInTheVoid/subscriptions", "organizations_url": "https://api.github.com/users/aDotInTheVoid/orgs", "repos_url": "https://api.github.com/users/aDotInTheVoid/repos", "events_url": "https://api.github.com/users/aDotInTheVoid/events{/privacy}", "received_events_url": "https://api.github.com/users/aDotInTheVoid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aDotInTheVoid", "id": 28781354, "node_id": "MDQ6VXNlcjI4NzgxMzU0", "avatar_url": "https://avatars.githubusercontent.com/u/28781354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aDotInTheVoid", "html_url": "https://github.com/aDotInTheVoid", "followers_url": "https://api.github.com/users/aDotInTheVoid/followers", "following_url": "https://api.github.com/users/aDotInTheVoid/following{/other_user}", "gists_url": "https://api.github.com/users/aDotInTheVoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/aDotInTheVoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aDotInTheVoid/subscriptions", "organizations_url": "https://api.github.com/users/aDotInTheVoid/orgs", "repos_url": "https://api.github.com/users/aDotInTheVoid/repos", "events_url": "https://api.github.com/users/aDotInTheVoid/events{/privacy}", "received_events_url": "https://api.github.com/users/aDotInTheVoid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e8fb743ccbec27344b2dd42de7057f41d4ebfdd", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e8fb743ccbec27344b2dd42de7057f41d4ebfdd", "html_url": "https://github.com/rust-lang/rust/commit/4e8fb743ccbec27344b2dd42de7057f41d4ebfdd"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "d0f476955e1f79dbd2ded1263c3b2c67c8d80897", "filename": "src/tools/jsondocck/src/main.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/2d0bb0d4b9b072ebd2cb78c71f3ca3a706b5d12e/src%2Ftools%2Fjsondocck%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d0bb0d4b9b072ebd2cb78c71f3ca3a706b5d12e/src%2Ftools%2Fjsondocck%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fjsondocck%2Fsrc%2Fmain.rs?ref=2d0bb0d4b9b072ebd2cb78c71f3ca3a706b5d12e", "patch": "@@ -231,7 +231,21 @@ fn check_command(command: Command, cache: &mut Cache) -> Result<(), CkError> {\n \n             let val = cache.get_value(&command.args[0])?;\n             let results = select(&val, &command.args[1]).unwrap();\n-            results.len() == expected\n+            let eq = results.len() == expected;\n+            if !command.negated && !eq {\n+                return Err(CkError::FailedCheck(\n+                    format!(\n+                        \"`{}` matched to `{:?}` with length {}, but expected length {}\",\n+                        &command.args[1],\n+                        results,\n+                        results.len(),\n+                        expected\n+                    ),\n+                    command,\n+                ));\n+            } else {\n+                eq\n+            }\n         }\n         CommandKind::Is => {\n             // @has <path> <jsonpath> <value> = check *exactly one* item matched by path, and it equals value\n@@ -317,6 +331,6 @@ fn string_to_value<'a>(s: &str, cache: &'a Cache) -> Cow<'a, Value> {\n             panic!(\"No variable: `{}`. Current state: `{:?}`\", &s[1..], cache.variables)\n         }))\n     } else {\n-        Cow::Owned(serde_json::from_str(s).unwrap())\n+        Cow::Owned(serde_json::from_str(s).expect(&format!(\"Cannot convert `{}` to json\", s)))\n     }\n }"}]}