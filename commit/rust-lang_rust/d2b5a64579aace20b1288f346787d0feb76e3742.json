{"sha": "d2b5a64579aace20b1288f346787d0feb76e3742", "node_id": "C_kwDOAAsO6NoAKGQyYjVhNjQ1NzlhYWNlMjBiMTI4OGYzNDY3ODdkMGZlYjc2ZTM3NDI", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-04-16T04:01:43Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-04-16T04:19:50Z"}, "message": "Simplify `CloneLiftImpls` and `TrivialTypeTraversalImpls`.\n\nThey both allow for a lifetime other than `'tcx`, but this isn't needed.", "tree": {"sha": "e9f44d84f491d2a65d1f60fd1041b5ed6159420e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9f44d84f491d2a65d1f60fd1041b5ed6159420e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2b5a64579aace20b1288f346787d0feb76e3742", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2b5a64579aace20b1288f346787d0feb76e3742", "html_url": "https://github.com/rust-lang/rust/commit/d2b5a64579aace20b1288f346787d0feb76e3742", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2b5a64579aace20b1288f346787d0feb76e3742/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32f6e7a38ebc635493f83054f7826140798a1c6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/32f6e7a38ebc635493f83054f7826140798a1c6c", "html_url": "https://github.com/rust-lang/rust/commit/32f6e7a38ebc635493f83054f7826140798a1c6c"}], "stats": {"total": 61, "additions": 20, "deletions": 41}, "files": [{"sha": "bec8e7565a463ca26dbb1a4a8d8848bd1bd70409", "filename": "compiler/rustc_middle/src/infer/canonical.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d2b5a64579aace20b1288f346787d0feb76e3742/compiler%2Frustc_middle%2Fsrc%2Finfer%2Fcanonical.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2b5a64579aace20b1288f346787d0feb76e3742/compiler%2Frustc_middle%2Fsrc%2Finfer%2Fcanonical.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Finfer%2Fcanonical.rs?ref=d2b5a64579aace20b1288f346787d0feb76e3742", "patch": "@@ -400,10 +400,8 @@ pub type QueryOutlivesConstraint<'tcx> =\n     (ty::OutlivesPredicate<GenericArg<'tcx>, Region<'tcx>>, ConstraintCategory<'tcx>);\n \n TrivialTypeTraversalAndLiftImpls! {\n-    for <'tcx> {\n-        crate::infer::canonical::Certainty,\n-        crate::infer::canonical::CanonicalTyVarKind,\n-    }\n+    crate::infer::canonical::Certainty,\n+    crate::infer::canonical::CanonicalTyVarKind,\n }\n \n impl<'tcx> CanonicalVarValues<'tcx> {"}, {"sha": "cd1c6c330bc1e239ca46c5f23535e002210ca959", "filename": "compiler/rustc_middle/src/macros.rs", "status": "modified", "additions": 9, "deletions": 25, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/d2b5a64579aace20b1288f346787d0feb76e3742/compiler%2Frustc_middle%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2b5a64579aace20b1288f346787d0feb76e3742/compiler%2Frustc_middle%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmacros.rs?ref=d2b5a64579aace20b1288f346787d0feb76e3742", "patch": "@@ -43,52 +43,44 @@ macro_rules! span_bug {\n \n #[macro_export]\n macro_rules! CloneLiftImpls {\n-    (for <$tcx:lifetime> { $($ty:ty,)+ }) => {\n+    ($($ty:ty,)+) => {\n         $(\n-            impl<$tcx> $crate::ty::Lift<$tcx> for $ty {\n+            impl<'tcx> $crate::ty::Lift<'tcx> for $ty {\n                 type Lifted = Self;\n-                fn lift_to_tcx(self, _: $crate::ty::TyCtxt<$tcx>) -> Option<Self> {\n+                fn lift_to_tcx(self, _: $crate::ty::TyCtxt<'tcx>) -> Option<Self> {\n                     Some(self)\n                 }\n             }\n         )+\n     };\n-\n-    ($($ty:ty,)+) => {\n-        CloneLiftImpls! {\n-            for <'tcx> {\n-                $($ty,)+\n-            }\n-        }\n-    };\n }\n \n /// Used for types that are `Copy` and which **do not care arena\n /// allocated data** (i.e., don't need to be folded).\n #[macro_export]\n macro_rules! TrivialTypeTraversalImpls {\n-    (for <$tcx:lifetime> { $($ty:ty,)+ }) => {\n+    ($($ty:ty,)+) => {\n         $(\n-            impl<$tcx> $crate::ty::fold::TypeFoldable<$crate::ty::TyCtxt<$tcx>> for $ty {\n-                fn try_fold_with<F: $crate::ty::fold::FallibleTypeFolder<$crate::ty::TyCtxt<$tcx>>>(\n+            impl<'tcx> $crate::ty::fold::TypeFoldable<$crate::ty::TyCtxt<'tcx>> for $ty {\n+                fn try_fold_with<F: $crate::ty::fold::FallibleTypeFolder<$crate::ty::TyCtxt<'tcx>>>(\n                     self,\n                     _: &mut F,\n                 ) -> ::std::result::Result<Self, F::Error> {\n                     Ok(self)\n                 }\n \n                 #[inline]\n-                fn fold_with<F: $crate::ty::fold::TypeFolder<$crate::ty::TyCtxt<$tcx>>>(\n+                fn fold_with<F: $crate::ty::fold::TypeFolder<$crate::ty::TyCtxt<'tcx>>>(\n                     self,\n                     _: &mut F,\n                 ) -> Self {\n                     self\n                 }\n             }\n \n-            impl<$tcx> $crate::ty::visit::TypeVisitable<$crate::ty::TyCtxt<$tcx>> for $ty {\n+            impl<'tcx> $crate::ty::visit::TypeVisitable<$crate::ty::TyCtxt<'tcx>> for $ty {\n                 #[inline]\n-                fn visit_with<F: $crate::ty::visit::TypeVisitor<$crate::ty::TyCtxt<$tcx>>>(\n+                fn visit_with<F: $crate::ty::visit::TypeVisitor<$crate::ty::TyCtxt<'tcx>>>(\n                     &self,\n                     _: &mut F)\n                     -> ::std::ops::ControlFlow<F::BreakTy>\n@@ -98,14 +90,6 @@ macro_rules! TrivialTypeTraversalImpls {\n             }\n         )+\n     };\n-\n-    ($($ty:ty,)+) => {\n-        TrivialTypeTraversalImpls! {\n-            for<'tcx> {\n-                $($ty,)+\n-            }\n-        }\n-    };\n }\n \n #[macro_export]"}, {"sha": "f985aae9a2255ad3f1f9db5bff1f407773304e23", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d2b5a64579aace20b1288f346787d0feb76e3742/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2b5a64579aace20b1288f346787d0feb76e3742/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=d2b5a64579aace20b1288f346787d0feb76e3742", "patch": "@@ -714,9 +714,7 @@ pub enum BindingForm<'tcx> {\n }\n \n TrivialTypeTraversalAndLiftImpls! {\n-    for<'tcx> {\n-        BindingForm<'tcx>,\n-    }\n+    BindingForm<'tcx>,\n }\n \n mod binding_form_impl {"}, {"sha": "ace856b9f95e021b703ba3993b0c37ccbe6a60a8", "filename": "compiler/rustc_middle/src/mir/type_foldable.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d2b5a64579aace20b1288f346787d0feb76e3742/compiler%2Frustc_middle%2Fsrc%2Fmir%2Ftype_foldable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2b5a64579aace20b1288f346787d0feb76e3742/compiler%2Frustc_middle%2Fsrc%2Fmir%2Ftype_foldable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Ftype_foldable.rs?ref=d2b5a64579aace20b1288f346787d0feb76e3742", "patch": "@@ -25,9 +25,7 @@ TrivialTypeTraversalAndLiftImpls! {\n }\n \n TrivialTypeTraversalImpls! {\n-    for <'tcx> {\n-        ConstValue<'tcx>,\n-    }\n+    ConstValue<'tcx>,\n }\n \n impl<'tcx> TypeFoldable<TyCtxt<'tcx>> for &'tcx [InlineAsmTemplatePiece] {"}, {"sha": "e5356581e6e1de8b5a9192c0f2df26fb3a08c9fa", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d2b5a64579aace20b1288f346787d0feb76e3742/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2b5a64579aace20b1288f346787d0feb76e3742/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=d2b5a64579aace20b1288f346787d0feb76e3742", "patch": "@@ -1329,9 +1329,12 @@ nop_list_lift! {bound_variable_kinds; ty::BoundVariableKind => ty::BoundVariable\n // This is the impl for `&'a InternalSubsts<'a>`.\n nop_list_lift! {substs; GenericArg<'a> => GenericArg<'tcx>}\n \n-CloneLiftImpls! { for<'tcx> {\n-    Constness, traits::WellFormedLoc, ImplPolarity, crate::mir::ReturnConstraint,\n-} }\n+CloneLiftImpls! {\n+    Constness,\n+    traits::WellFormedLoc,\n+    ImplPolarity,\n+    crate::mir::ReturnConstraint,\n+}\n \n macro_rules! sty_debug_print {\n     ($fmt: expr, $ctxt: expr, $($variant: ident),*) => {{"}, {"sha": "59c05739b3cef83987eab7cd6e292f3b906d5a82", "filename": "compiler/rustc_middle/src/ty/structural_impls.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d2b5a64579aace20b1288f346787d0feb76e3742/compiler%2Frustc_middle%2Fsrc%2Fty%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2b5a64579aace20b1288f346787d0feb76e3742/compiler%2Frustc_middle%2Fsrc%2Fty%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fstructural_impls.rs?ref=d2b5a64579aace20b1288f346787d0feb76e3742", "patch": "@@ -276,9 +276,7 @@ TrivialTypeTraversalAndLiftImpls! {\n }\n \n TrivialTypeTraversalAndLiftImpls! {\n-    for<'tcx> {\n-        ty::ValTree<'tcx>,\n-    }\n+    ty::ValTree<'tcx>,\n }\n \n ///////////////////////////////////////////////////////////////////////////"}]}