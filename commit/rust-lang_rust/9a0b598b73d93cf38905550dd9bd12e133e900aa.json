{"sha": "9a0b598b73d93cf38905550dd9bd12e133e900aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhMGI1OThiNzNkOTNjZjM4OTA1NTUwZGQ5YmQxMmUxMzNlOTAwYWE=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-08-24T07:23:06Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-08-24T08:38:45Z"}, "message": "Split up cmp_owned tests, add run-rustfix\n\nSome of the cmp_owned tests emitted non-machine-applicable suggestions,\nso I moved them to `tests/ui/cmp_owned/without_suggestion.rs` and added\n`// run-rustfix` to the other half.\n\ncc #3630", "tree": {"sha": "299630f27e8ec87b262024d02835ffbf05e41b8f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/299630f27e8ec87b262024d02835ffbf05e41b8f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a0b598b73d93cf38905550dd9bd12e133e900aa", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJEBAABCgAuFiEEj4U0bmbiMSg/mWqvgqphyqETl+YFAl1g95YQHGRldkBwaGFu\nc2NoLm5ldAAKCRCCqmHKoROX5tAhD/9ZykHb/Fd4D2vaoJG+zxnSO0sV1XRDkjD3\nYXR3+Mnd/rTTtI1lAfMYoR2NP+bbE2h/JBnrTZZjASjBkKqPq1tG1ZV8bka7vVF7\nsL8doNCGfREG+6azQb178yyMm+1DunsBhok4dMqCe282ALwj3hTlI/SV0fG+Sq8C\nkgW6UTyptVXCPwjkGciM/QmlDdw8d41d21DawQ4/pniaNuuxkywjdP1WZDUDiz7x\n3jYoLVh6Nrrt/EcyJQ9oNN2SmOKCCm4r0e5PWyOvsEqXUjd+W0rVVbtAVzboone7\ne3U+se2H8Ju0VAVH2DZeRYbNth9eYMQlkp7ronQ263EsA2sX5Py7Jvbyvn+JCfjZ\nX+6DrBsxIqnnNzBQGza1hu3/6cI5rrx5AQitoHDuY6yJYglVi/btlnDsR0yK8j5U\nR9uWQtS6BI2V4ppSDwRO5v5sFvxqBj7tDrVSSGy22C04N6WOJoFkUehGsbdcI0Bb\n7VMoeKFr+lKwnO7FURJ7WQH7SNlBnPRrBk/D0NYCxko9rahexXY4Q1JvkljgGTN6\nbZhpy8W/BT9fGYLljXpUoEKLKGWBpKp+tfBPmbWnj7fJd1Mw7pX97/7nMUnSxRDB\nclF0dD7H1iSegjEpowtUSQIy59GJhKlCgQHeA4LrlstkQKtkYdwKiKB1Ufu0NIa0\nCn9JNucH/w==\n=NNvf\n-----END PGP SIGNATURE-----", "payload": "tree 299630f27e8ec87b262024d02835ffbf05e41b8f\nparent 6d9ee9e5eba16612bb2fc253f77673b823812b8a\nauthor Philipp Hansch <dev@phansch.net> 1566631386 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1566635925 +0200\n\nSplit up cmp_owned tests, add run-rustfix\n\nSome of the cmp_owned tests emitted non-machine-applicable suggestions,\nso I moved them to `tests/ui/cmp_owned/without_suggestion.rs` and added\n`// run-rustfix` to the other half.\n\ncc #3630\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a0b598b73d93cf38905550dd9bd12e133e900aa", "html_url": "https://github.com/rust-lang/rust/commit/9a0b598b73d93cf38905550dd9bd12e133e900aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a0b598b73d93cf38905550dd9bd12e133e900aa/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d9ee9e5eba16612bb2fc253f77673b823812b8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d9ee9e5eba16612bb2fc253f77673b823812b8a", "html_url": "https://github.com/rust-lang/rust/commit/6d9ee9e5eba16612bb2fc253f77673b823812b8a"}], "stats": {"total": 196, "additions": 160, "deletions": 36}, "files": [{"sha": "0323b2905bf5b0602901b50fe759fd4eb37b7be7", "filename": "tests/ui/cmp_owned/with_suggestion.fixed", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/9a0b598b73d93cf38905550dd9bd12e133e900aa/tests%2Fui%2Fcmp_owned%2Fwith_suggestion.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/9a0b598b73d93cf38905550dd9bd12e133e900aa/tests%2Fui%2Fcmp_owned%2Fwith_suggestion.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_owned%2Fwith_suggestion.fixed?ref=9a0b598b73d93cf38905550dd9bd12e133e900aa", "patch": "@@ -0,0 +1,72 @@\n+// run-rustfix\n+\n+#[warn(clippy::cmp_owned)]\n+#[allow(clippy::unnecessary_operation, clippy::no_effect, unused_must_use, clippy::eq_op)]\n+fn main() {\n+    fn with_to_string(x: &str) {\n+        x != \"foo\";\n+\n+        \"foo\" != x;\n+    }\n+\n+    let x = \"oh\";\n+\n+    with_to_string(x);\n+\n+    x != \"foo\";\n+\n+    x != \"foo\";\n+\n+    42.to_string() == \"42\";\n+\n+    Foo == Foo;\n+\n+    \"abc\".chars().filter(|c| *c != 'X');\n+\n+    \"abc\".chars().filter(|c| *c != 'X');\n+}\n+\n+struct Foo;\n+\n+impl PartialEq for Foo {\n+    // Allow this here, because it emits the lint\n+    // without a suggestion. This is tested in\n+    // `tests/ui/cmp_owned_without_suggestion.rs`\n+    #[allow(clippy::cmp_owned)]\n+    fn eq(&self, other: &Self) -> bool {\n+        self.to_owned() == *other\n+    }\n+}\n+\n+impl ToOwned for Foo {\n+    type Owned = Bar;\n+    fn to_owned(&self) -> Bar {\n+        Bar\n+    }\n+}\n+\n+#[derive(PartialEq)]\n+struct Bar;\n+\n+impl PartialEq<Foo> for Bar {\n+    fn eq(&self, _: &Foo) -> bool {\n+        true\n+    }\n+}\n+\n+impl std::borrow::Borrow<Foo> for Bar {\n+    fn borrow(&self) -> &Foo {\n+        static FOO: Foo = Foo;\n+        &FOO\n+    }\n+}\n+\n+#[derive(PartialEq)]\n+struct Baz;\n+\n+impl ToOwned for Baz {\n+    type Owned = Baz;\n+    fn to_owned(&self) -> Baz {\n+        Baz\n+    }\n+}"}, {"sha": "ecfdffc8c9780aed4275b6c8a7f221319ac74c7a", "filename": "tests/ui/cmp_owned/with_suggestion.rs", "status": "renamed", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9a0b598b73d93cf38905550dd9bd12e133e900aa/tests%2Fui%2Fcmp_owned%2Fwith_suggestion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a0b598b73d93cf38905550dd9bd12e133e900aa/tests%2Fui%2Fcmp_owned%2Fwith_suggestion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_owned%2Fwith_suggestion.rs?ref=9a0b598b73d93cf38905550dd9bd12e133e900aa", "patch": "@@ -1,5 +1,7 @@\n+// run-rustfix\n+\n #[warn(clippy::cmp_owned)]\n-#[allow(clippy::unnecessary_operation)]\n+#[allow(clippy::unnecessary_operation, clippy::no_effect, unused_must_use, clippy::eq_op)]\n fn main() {\n     fn with_to_string(x: &str) {\n         x != \"foo\".to_string();\n@@ -22,21 +24,15 @@ fn main() {\n     \"abc\".chars().filter(|c| c.to_owned() != 'X');\n \n     \"abc\".chars().filter(|c| *c != 'X');\n-\n-    let x = &Baz;\n-    let y = &Baz;\n-\n-    y.to_owned() == *x;\n-\n-    let x = &&Baz;\n-    let y = &Baz;\n-\n-    y.to_owned() == **x;\n }\n \n struct Foo;\n \n impl PartialEq for Foo {\n+    // Allow this here, because it emits the lint\n+    // without a suggestion. This is tested in\n+    // `tests/ui/cmp_owned_without_suggestion.rs`\n+    #[allow(clippy::cmp_owned)]\n     fn eq(&self, other: &Self) -> bool {\n         self.to_owned() == *other\n     }", "previous_filename": "tests/ui/cmp_owned.rs"}, {"sha": "2f333e6ea8ecbda9d0338ff7cbfa131b518a690c", "filename": "tests/ui/cmp_owned/with_suggestion.stderr", "status": "renamed", "additions": 7, "deletions": 25, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/9a0b598b73d93cf38905550dd9bd12e133e900aa/tests%2Fui%2Fcmp_owned%2Fwith_suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9a0b598b73d93cf38905550dd9bd12e133e900aa/tests%2Fui%2Fcmp_owned%2Fwith_suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_owned%2Fwith_suggestion.stderr?ref=9a0b598b73d93cf38905550dd9bd12e133e900aa", "patch": "@@ -1,58 +1,40 @@\n error: this creates an owned instance just for comparison\n-  --> $DIR/cmp_owned.rs:5:14\n+  --> $DIR/with_suggestion.rs:7:14\n    |\n LL |         x != \"foo\".to_string();\n    |              ^^^^^^^^^^^^^^^^^ help: try: `\"foo\"`\n    |\n    = note: `-D clippy::cmp-owned` implied by `-D warnings`\n \n error: this creates an owned instance just for comparison\n-  --> $DIR/cmp_owned.rs:7:9\n+  --> $DIR/with_suggestion.rs:9:9\n    |\n LL |         \"foo\".to_string() != x;\n    |         ^^^^^^^^^^^^^^^^^ help: try: `\"foo\"`\n \n error: this creates an owned instance just for comparison\n-  --> $DIR/cmp_owned.rs:14:10\n+  --> $DIR/with_suggestion.rs:16:10\n    |\n LL |     x != \"foo\".to_owned();\n    |          ^^^^^^^^^^^^^^^^ help: try: `\"foo\"`\n \n error: this creates an owned instance just for comparison\n-  --> $DIR/cmp_owned.rs:16:10\n+  --> $DIR/with_suggestion.rs:18:10\n    |\n LL |     x != String::from(\"foo\");\n    |          ^^^^^^^^^^^^^^^^^^^ help: try: `\"foo\"`\n \n error: this creates an owned instance just for comparison\n-  --> $DIR/cmp_owned.rs:20:5\n+  --> $DIR/with_suggestion.rs:22:5\n    |\n LL |     Foo.to_owned() == Foo;\n    |     ^^^^^^^^^^^^^^ help: try: `Foo`\n \n error: this creates an owned instance just for comparison\n-  --> $DIR/cmp_owned.rs:22:30\n+  --> $DIR/with_suggestion.rs:24:30\n    |\n LL |     \"abc\".chars().filter(|c| c.to_owned() != 'X');\n    |                              ^^^^^^^^^^^^ help: try: `*c`\n \n-error: this creates an owned instance just for comparison\n-  --> $DIR/cmp_owned.rs:29:5\n-   |\n-LL |     y.to_owned() == *x;\n-   |     ^^^^^^^^^^^^^^^^^^ try implementing the comparison without allocating\n-\n-error: this creates an owned instance just for comparison\n-  --> $DIR/cmp_owned.rs:34:5\n-   |\n-LL |     y.to_owned() == **x;\n-   |     ^^^^^^^^^^^^^^^^^^^ try implementing the comparison without allocating\n-\n-error: this creates an owned instance just for comparison\n-  --> $DIR/cmp_owned.rs:41:9\n-   |\n-LL |         self.to_owned() == *other\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^ try implementing the comparison without allocating\n-\n-error: aborting due to 9 previous errors\n+error: aborting due to 6 previous errors\n ", "previous_filename": "tests/ui/cmp_owned.stderr"}, {"sha": "9ab8795474c674912f3f42c4fe1f5a266b814e9e", "filename": "tests/ui/cmp_owned/without_suggestion.rs", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/9a0b598b73d93cf38905550dd9bd12e133e900aa/tests%2Fui%2Fcmp_owned%2Fwithout_suggestion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a0b598b73d93cf38905550dd9bd12e133e900aa/tests%2Fui%2Fcmp_owned%2Fwithout_suggestion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_owned%2Fwithout_suggestion.rs?ref=9a0b598b73d93cf38905550dd9bd12e133e900aa", "patch": "@@ -0,0 +1,52 @@\n+#[allow(clippy::unnecessary_operation)]\n+\n+fn main() {\n+    let x = &Baz;\n+    let y = &Baz;\n+    y.to_owned() == *x;\n+\n+    let x = &&Baz;\n+    let y = &Baz;\n+    y.to_owned() == **x;\n+}\n+\n+struct Foo;\n+\n+impl PartialEq for Foo {\n+    fn eq(&self, other: &Self) -> bool {\n+        self.to_owned() == *other\n+    }\n+}\n+\n+impl ToOwned for Foo {\n+    type Owned = Bar;\n+    fn to_owned(&self) -> Bar {\n+        Bar\n+    }\n+}\n+\n+#[derive(PartialEq)]\n+struct Baz;\n+\n+impl ToOwned for Baz {\n+    type Owned = Baz;\n+    fn to_owned(&self) -> Baz {\n+        Baz\n+    }\n+}\n+\n+#[derive(PartialEq)]\n+struct Bar;\n+\n+impl PartialEq<Foo> for Bar {\n+    fn eq(&self, _: &Foo) -> bool {\n+        true\n+    }\n+}\n+\n+impl std::borrow::Borrow<Foo> for Bar {\n+    fn borrow(&self) -> &Foo {\n+        static FOO: Foo = Foo;\n+        &FOO\n+    }\n+}"}, {"sha": "6e8a5ad2a17b5a6c02ae1dce0815da9c22b4dfa6", "filename": "tests/ui/cmp_owned/without_suggestion.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/9a0b598b73d93cf38905550dd9bd12e133e900aa/tests%2Fui%2Fcmp_owned%2Fwithout_suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9a0b598b73d93cf38905550dd9bd12e133e900aa/tests%2Fui%2Fcmp_owned%2Fwithout_suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_owned%2Fwithout_suggestion.stderr?ref=9a0b598b73d93cf38905550dd9bd12e133e900aa", "patch": "@@ -0,0 +1,22 @@\n+error: this creates an owned instance just for comparison\n+  --> $DIR/without_suggestion.rs:6:5\n+   |\n+LL |     y.to_owned() == *x;\n+   |     ^^^^^^^^^^^^^^^^^^ try implementing the comparison without allocating\n+   |\n+   = note: `-D clippy::cmp-owned` implied by `-D warnings`\n+\n+error: this creates an owned instance just for comparison\n+  --> $DIR/without_suggestion.rs:10:5\n+   |\n+LL |     y.to_owned() == **x;\n+   |     ^^^^^^^^^^^^^^^^^^^ try implementing the comparison without allocating\n+\n+error: this creates an owned instance just for comparison\n+  --> $DIR/without_suggestion.rs:17:9\n+   |\n+LL |         self.to_owned() == *other\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^ try implementing the comparison without allocating\n+\n+error: aborting due to 3 previous errors\n+"}]}