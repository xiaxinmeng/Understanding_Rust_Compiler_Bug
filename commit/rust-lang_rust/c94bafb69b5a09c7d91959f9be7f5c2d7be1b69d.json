{"sha": "c94bafb69b5a09c7d91959f9be7f5c2d7be1b69d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5NGJhZmI2OWI1YTA5YzdkOTE5NTlmOWJlN2Y1YzJkN2JlMWI2OWQ=", "commit": {"author": {"name": "Smitty", "email": "me@smitop.com", "date": "2021-06-29T23:17:14Z"}, "committer": {"name": "Smitty", "email": "me@smitop.com", "date": "2021-06-29T23:17:14Z"}, "message": "fix sess error\n\nThis passed x.py check locally, not sure why it wasn't rebased right...", "tree": {"sha": "1bbf812f4a7e2dc5349414286f45cef203a4c6ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1bbf812f4a7e2dc5349414286f45cef203a4c6ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c94bafb69b5a09c7d91959f9be7f5c2d7be1b69d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c94bafb69b5a09c7d91959f9be7f5c2d7be1b69d", "html_url": "https://github.com/rust-lang/rust/commit/c94bafb69b5a09c7d91959f9be7f5c2d7be1b69d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c94bafb69b5a09c7d91959f9be7f5c2d7be1b69d/comments", "author": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab66c3fbd4ca7d3ec3e677c94a8fc65e633aa7f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab66c3fbd4ca7d3ec3e677c94a8fc65e633aa7f4", "html_url": "https://github.com/rust-lang/rust/commit/ab66c3fbd4ca7d3ec3e677c94a8fc65e633aa7f4"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "7ee34b23e46f7485b8b961f29e87c79ea8b3bd56", "filename": "compiler/rustc_codegen_cranelift/src/vtable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c94bafb69b5a09c7d91959f9be7f5c2d7be1b69d/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fvtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c94bafb69b5a09c7d91959f9be7f5c2d7be1b69d/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fvtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fvtable.rs?ref=c94bafb69b5a09c7d91959f9be7f5c2d7be1b69d", "patch": "@@ -74,7 +74,7 @@ pub(crate) fn get_vtable<'tcx>(\n     } else {\n         let vtable_alloc_id = match fx.tcx.vtable_allocation(ty, trait_ref) {\n             Ok(alloc) => alloc,\n-            Err(_) => fx.tcx.sess().fatal(\"allocation of constant vtable failed\"),\n+            Err(_) => fx.tcx.sess.fatal(\"allocation of constant vtable failed\"),\n         };\n         let vtable_allocation = fx.tcx.global_alloc(vtable_alloc_id).unwrap_memory();\n         let vtable_ptr = pointer_for_allocation(fx, vtable_allocation);"}]}