{"sha": "7d4a98e61aef8622ab4fa0cec0810171cf17b1bf", "node_id": "C_kwDOAAsO6NoAKDdkNGE5OGU2MWFlZjg2MjJhYjRmYTBjZWMwODEwMTcxY2YxN2IxYmY", "commit": {"author": {"name": "Daniil Belov", "email": "belov.dv@phystech.edu", "date": "2022-07-19T09:00:28Z"}, "committer": {"name": "Daniil Belov", "email": "belov.dv@phystech.edu", "date": "2022-07-26T10:55:27Z"}, "message": "Lib kind -l link-arg:\narbitrary link argument like -C link-arg, but respecting relative order to other `-l` options, unstable", "tree": {"sha": "5b86a093fccc2504f4fc907569eec38055c9ffc6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b86a093fccc2504f4fc907569eec38055c9ffc6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf", "html_url": "https://github.com/rust-lang/rust/commit/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/comments", "author": {"login": "belovdv", "id": 70999565, "node_id": "MDQ6VXNlcjcwOTk5NTY1", "avatar_url": "https://avatars.githubusercontent.com/u/70999565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/belovdv", "html_url": "https://github.com/belovdv", "followers_url": "https://api.github.com/users/belovdv/followers", "following_url": "https://api.github.com/users/belovdv/following{/other_user}", "gists_url": "https://api.github.com/users/belovdv/gists{/gist_id}", "starred_url": "https://api.github.com/users/belovdv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/belovdv/subscriptions", "organizations_url": "https://api.github.com/users/belovdv/orgs", "repos_url": "https://api.github.com/users/belovdv/repos", "events_url": "https://api.github.com/users/belovdv/events{/privacy}", "received_events_url": "https://api.github.com/users/belovdv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "belovdv", "id": 70999565, "node_id": "MDQ6VXNlcjcwOTk5NTY1", "avatar_url": "https://avatars.githubusercontent.com/u/70999565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/belovdv", "html_url": "https://github.com/belovdv", "followers_url": "https://api.github.com/users/belovdv/followers", "following_url": "https://api.github.com/users/belovdv/following{/other_user}", "gists_url": "https://api.github.com/users/belovdv/gists{/gist_id}", "starred_url": "https://api.github.com/users/belovdv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/belovdv/subscriptions", "organizations_url": "https://api.github.com/users/belovdv/orgs", "repos_url": "https://api.github.com/users/belovdv/repos", "events_url": "https://api.github.com/users/belovdv/events{/privacy}", "received_events_url": "https://api.github.com/users/belovdv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ed0bf9f2bd63933785fb8a380c177d2d70e88ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ed0bf9f2bd63933785fb8a380c177d2d70e88ec", "html_url": "https://github.com/rust-lang/rust/commit/9ed0bf9f2bd63933785fb8a380c177d2d70e88ec"}], "stats": {"total": 135, "additions": 115, "deletions": 20}, "files": [{"sha": "663a6f3a277565586ab81be8f240bd0467c20362", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 29, "deletions": 9, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=7d4a98e61aef8622ab4fa0cec0810171cf17b1bf", "patch": "@@ -336,6 +336,7 @@ fn link_rlib<'a, B: ArchiveBuilder<'a>>(\n             | NativeLibKind::Dylib { .. }\n             | NativeLibKind::Framework { .. }\n             | NativeLibKind::RawDylib\n+            | NativeLibKind::LinkArg\n             | NativeLibKind::Unspecified => continue,\n         }\n         if let Some(name) = lib.name {\n@@ -1287,6 +1288,7 @@ fn print_native_static_libs(sess: &Session, all_native_libs: &[NativeLib]) {\n                 }\n                 // These are included, no need to print them\n                 NativeLibKind::Static { bundle: None | Some(true), .. }\n+                | NativeLibKind::LinkArg\n                 | NativeLibKind::RawDylib => None,\n             }\n         })\n@@ -2225,6 +2227,9 @@ fn add_local_native_libraries(\n                 // FIXME(#58713): Proper handling for raw dylibs.\n                 bug!(\"raw_dylib feature not yet implemented\");\n             }\n+            NativeLibKind::LinkArg => {\n+                cmd.arg(name);\n+            }\n         }\n     }\n }\n@@ -2362,19 +2367,34 @@ fn add_upstream_rust_crates<'a, B: ArchiveBuilder<'a>>(\n                             (lib.name, lib.kind, lib.verbatim)\n                         };\n \n-                        if let NativeLibKind::Static { bundle: Some(false), whole_archive } =\n-                            lib.kind\n-                        {\n-                            let verbatim = lib.verbatim.unwrap_or(false);\n-                            if whole_archive == Some(true) {\n+                        match lib.kind {\n+                            NativeLibKind::Static {\n+                                bundle: Some(false),\n+                                whole_archive: Some(true),\n+                            } => {\n                                 cmd.link_whole_staticlib(\n                                     name,\n-                                    verbatim,\n+                                    lib.verbatim.unwrap_or(false),\n                                     search_path.get_or_init(|| archive_search_paths(sess)),\n                                 );\n-                            } else {\n-                                cmd.link_staticlib(name, verbatim);\n                             }\n+                            NativeLibKind::Static {\n+                                bundle: Some(false),\n+                                whole_archive: Some(false) | None,\n+                            } => {\n+                                cmd.link_staticlib(name, lib.verbatim.unwrap_or(false));\n+                            }\n+                            NativeLibKind::LinkArg => {\n+                                cmd.arg(name);\n+                            }\n+                            NativeLibKind::Dylib { .. }\n+                            | NativeLibKind::Framework { .. }\n+                            | NativeLibKind::Unspecified\n+                            | NativeLibKind::RawDylib => {}\n+                            NativeLibKind::Static {\n+                                bundle: Some(true) | None,\n+                                whole_archive: _,\n+                            } => {}\n                         }\n                     }\n                 }\n@@ -2565,7 +2585,7 @@ fn add_upstream_native_libraries(\n                 // already included them in add_local_native_libraries and\n                 // add_upstream_rust_crates\n                 NativeLibKind::Static { .. } => {}\n-                NativeLibKind::RawDylib => {}\n+                NativeLibKind::RawDylib | NativeLibKind::LinkArg => {}\n             }\n         }\n     }"}, {"sha": "0c3322a795377fb51e7843657cf9de8d27ff000a", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=7d4a98e61aef8622ab4fa0cec0810171cf17b1bf", "patch": "@@ -1942,9 +1942,22 @@ fn parse_native_lib_kind(\n         \"static\" => NativeLibKind::Static { bundle: None, whole_archive: None },\n         \"dylib\" => NativeLibKind::Dylib { as_needed: None },\n         \"framework\" => NativeLibKind::Framework { as_needed: None },\n+        \"link-arg\" => {\n+            if !nightly_options::is_unstable_enabled(matches) {\n+                let why = if nightly_options::match_is_nightly_build(matches) {\n+                    \" and only accepted on the nightly compiler\"\n+                } else {\n+                    \", the `-Z unstable-options` flag must also be passed to use it\"\n+                };\n+                early_error(error_format, &format!(\"library kind `link-arg` is unstable{why}\"))\n+            }\n+            NativeLibKind::LinkArg\n+        }\n         _ => early_error(\n             error_format,\n-            &format!(\"unknown library kind `{kind}`, expected one of: static, dylib, framework\"),\n+            &format!(\n+                \"unknown library kind `{kind}`, expected one of: static, dylib, framework, link-arg\"\n+            ),\n         ),\n     };\n     match modifiers {\n@@ -2043,7 +2056,7 @@ fn parse_libs(matches: &getopts::Matches, error_format: ErrorOutputType) -> Vec<\n         .into_iter()\n         .map(|s| {\n             // Parse string of the form \"[KIND[:MODIFIERS]=]lib[:new_name]\",\n-            // where KIND is one of \"dylib\", \"framework\", \"static\" and\n+            // where KIND is one of \"dylib\", \"framework\", \"static\", \"link-arg\" and\n             // where MODIFIERS are  a comma separated list of supported modifiers\n             // (bundle, verbatim, whole-archive, as-needed). Each modifier is prefixed\n             // with either + or - to indicate whether it is enabled or disabled."}, {"sha": "9a4f6f9f9ef0cc3a2c04abdc7faf192335eed493", "filename": "compiler/rustc_session/src/utils.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/compiler%2Frustc_session%2Fsrc%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/compiler%2Frustc_session%2Fsrc%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Futils.rs?ref=7d4a98e61aef8622ab4fa0cec0810171cf17b1bf", "patch": "@@ -34,6 +34,9 @@ pub enum NativeLibKind {\n         /// Whether the framework will be linked only if it satisfies some undefined symbols\n         as_needed: Option<bool>,\n     },\n+    /// Argument which is passed to linker, relative order with libraries and other arguments\n+    /// is preserved\n+    LinkArg,\n     /// The library kind wasn't specified, `Dylib` is currently used as a default.\n     Unspecified,\n }\n@@ -47,7 +50,7 @@ impl NativeLibKind {\n             NativeLibKind::Dylib { as_needed } | NativeLibKind::Framework { as_needed } => {\n                 as_needed.is_some()\n             }\n-            NativeLibKind::RawDylib | NativeLibKind::Unspecified => false,\n+            NativeLibKind::RawDylib | NativeLibKind::Unspecified | NativeLibKind::LinkArg => false,\n         }\n     }\n }"}, {"sha": "365216b4c35bbb99dab4b45a8ea37ead02246e76", "filename": "src/test/run-make/pass-linker-flags-from-dep/Makefile", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Frun-make%2Fpass-linker-flags-from-dep%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Frun-make%2Fpass-linker-flags-from-dep%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fpass-linker-flags-from-dep%2FMakefile?ref=7d4a98e61aef8622ab4fa0cec0810171cf17b1bf", "patch": "@@ -0,0 +1,10 @@\n+-include ../../run-make-fulldeps/tools.mk\n+\n+all:\n+\t# Build deps\n+\t$(RUSTC) native_dep_1.rs --crate-type=staticlib\n+\t$(RUSTC) native_dep_2.rs --crate-type=staticlib\n+\t$(RUSTC) rust_dep.rs -l static:-bundle=native_dep_1 -l link-arg=some_flag -l static:-bundle=native_dep_2 --crate-type=lib -Z unstable-options\n+\n+\t# Check sequence of linker args\n+\t$(RUSTC) main.rs --extern lib=$(TMPDIR)/librust_dep.rlib --crate-type=bin --print link-args | $(CGREP) -e 'native_dep_1.*some_flag.*native_dep_2'"}, {"sha": "40952fb22b1f58ccf163c9dc6885b3ee2a31dab6", "filename": "src/test/run-make/pass-linker-flags-from-dep/main.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Frun-make%2Fpass-linker-flags-from-dep%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Frun-make%2Fpass-linker-flags-from-dep%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fpass-linker-flags-from-dep%2Fmain.rs?ref=7d4a98e61aef8622ab4fa0cec0810171cf17b1bf", "patch": "@@ -0,0 +1,3 @@\n+fn main() {\n+    lib::f();\n+}"}, {"sha": "fdb2d9ca68e63f99ed4d0cfb3e173fd072aebf2b", "filename": "src/test/run-make/pass-linker-flags-from-dep/native_dep_1.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Frun-make%2Fpass-linker-flags-from-dep%2Fnative_dep_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Frun-make%2Fpass-linker-flags-from-dep%2Fnative_dep_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fpass-linker-flags-from-dep%2Fnative_dep_1.rs?ref=7d4a98e61aef8622ab4fa0cec0810171cf17b1bf", "patch": "@@ -0,0 +1 @@\n+pub fn f1() {}"}, {"sha": "f788b77118461231d4b52a1bc1bab48d2300a4fd", "filename": "src/test/run-make/pass-linker-flags-from-dep/native_dep_2.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Frun-make%2Fpass-linker-flags-from-dep%2Fnative_dep_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Frun-make%2Fpass-linker-flags-from-dep%2Fnative_dep_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fpass-linker-flags-from-dep%2Fnative_dep_2.rs?ref=7d4a98e61aef8622ab4fa0cec0810171cf17b1bf", "patch": "@@ -0,0 +1 @@\n+pub fn f2() {}"}, {"sha": "7f5df1139342f61c3f822503a79ef84e67744334", "filename": "src/test/run-make/pass-linker-flags-from-dep/rust_dep.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Frun-make%2Fpass-linker-flags-from-dep%2Frust_dep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Frun-make%2Fpass-linker-flags-from-dep%2Frust_dep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fpass-linker-flags-from-dep%2Frust_dep.rs?ref=7d4a98e61aef8622ab4fa0cec0810171cf17b1bf", "patch": "@@ -0,0 +1,9 @@\n+extern \"C\" {\n+    pub fn foo();\n+}\n+\n+pub fn f() {\n+    unsafe {\n+        foo();\n+    }\n+}"}, {"sha": "02b1e2179e189903a4b6c710edcc391ac21de09c", "filename": "src/test/run-make/pass-linker-flags/Makefile", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Frun-make%2Fpass-linker-flags%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Frun-make%2Fpass-linker-flags%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fpass-linker-flags%2FMakefile?ref=7d4a98e61aef8622ab4fa0cec0810171cf17b1bf", "patch": "@@ -0,0 +1,4 @@\n+-include ../../run-make-fulldeps/tools.mk\n+\n+all:\n+\t$(RUSTC) rs.rs -Z unstable-options -l static=l1 -l link-arg=a1 -l static=l2 -l link-arg=a2 -l dylib=d1 -l link-arg=a3 --print link-args | $(CGREP) -e 'l1.*a1.*l2.*a2.*d1.*a3'"}, {"sha": "f328e4d9d04c31d0d70d16d21a07d1613be9d577", "filename": "src/test/run-make/pass-linker-flags/rs.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Frun-make%2Fpass-linker-flags%2Frs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Frun-make%2Fpass-linker-flags%2Frs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fpass-linker-flags%2Frs.rs?ref=7d4a98e61aef8622ab4fa0cec0810171cf17b1bf", "patch": "@@ -0,0 +1 @@\n+fn main() {}"}, {"sha": "c50a6c034b5934f2754c35716dc88c72a19b6f50", "filename": "src/test/ui/manual/manual-link-bad-kind.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Fui%2Fmanual%2Fmanual-link-bad-kind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Fui%2Fmanual%2Fmanual-link-bad-kind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmanual%2Fmanual-link-bad-kind.rs?ref=7d4a98e61aef8622ab4fa0cec0810171cf17b1bf", "patch": "@@ -1,5 +1,5 @@\n // compile-flags:-l bar=foo\n-// error-pattern: unknown library kind `bar`, expected one of: static, dylib, framework\n+// error-pattern: unknown library kind `bar`, expected one of: static, dylib, framework, link-arg\n \n fn main() {\n }"}, {"sha": "647c4c61e0212fc683e6427772cc4c1a82e9722d", "filename": "src/test/ui/manual/manual-link-bad-kind.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Fui%2Fmanual%2Fmanual-link-bad-kind.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Fui%2Fmanual%2Fmanual-link-bad-kind.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmanual%2Fmanual-link-bad-kind.stderr?ref=7d4a98e61aef8622ab4fa0cec0810171cf17b1bf", "patch": "@@ -1,2 +1,2 @@\n-error: unknown library kind `bar`, expected one of: static, dylib, framework\n+error: unknown library kind `bar`, expected one of: static, dylib, framework, link-arg\n "}, {"sha": "b8ec575a455ff021dc5d3f25b8521bd4c6dd3f71", "filename": "src/test/ui/manual/manual-link-unsupported-kind.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Fui%2Fmanual%2Fmanual-link-unsupported-kind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Fui%2Fmanual%2Fmanual-link-unsupported-kind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmanual%2Fmanual-link-unsupported-kind.rs?ref=7d4a98e61aef8622ab4fa0cec0810171cf17b1bf", "patch": "@@ -1,5 +1,5 @@\n // compile-flags:-l raw-dylib=foo\n-// error-pattern: unknown library kind `raw-dylib`, expected one of: static, dylib, framework\n+// error-pattern: unknown library kind `raw-dylib`, expected one of: static, dylib, framework, link-arg\n \n fn main() {\n }"}, {"sha": "ae4a1ec9a959bb19ea778eb19d4aa8ac460b666d", "filename": "src/test/ui/manual/manual-link-unsupported-kind.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Fui%2Fmanual%2Fmanual-link-unsupported-kind.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Fui%2Fmanual%2Fmanual-link-unsupported-kind.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmanual%2Fmanual-link-unsupported-kind.stderr?ref=7d4a98e61aef8622ab4fa0cec0810171cf17b1bf", "patch": "@@ -1,2 +1,2 @@\n-error: unknown library kind `raw-dylib`, expected one of: static, dylib, framework\n+error: unknown library kind `raw-dylib`, expected one of: static, dylib, framework, link-arg\n "}, {"sha": "18937856d20d3aaf295dced01726f6b2c6da8018", "filename": "src/test/ui/native-library-link-flags/empty-kind-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fempty-kind-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fempty-kind-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fempty-kind-1.rs?ref=7d4a98e61aef8622ab4fa0cec0810171cf17b1bf", "patch": "@@ -1,6 +1,6 @@\n // Unspecified kind should fail with an error\n \n // compile-flags: -l =mylib\n-// error-pattern: unknown library kind ``, expected one of: static, dylib, framework\n+// error-pattern: unknown library kind ``, expected one of: static, dylib, framework, link-arg\n \n fn main() {}"}, {"sha": "3e5b054933999ea89155d8ca028b9ce56aac60d2", "filename": "src/test/ui/native-library-link-flags/empty-kind-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fempty-kind-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fempty-kind-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fempty-kind-1.stderr?ref=7d4a98e61aef8622ab4fa0cec0810171cf17b1bf", "patch": "@@ -1,2 +1,2 @@\n-error: unknown library kind ``, expected one of: static, dylib, framework\n+error: unknown library kind ``, expected one of: static, dylib, framework, link-arg\n "}, {"sha": "851eb63fcd8b8840022e65a14f832ce62dc0e434", "filename": "src/test/ui/native-library-link-flags/empty-kind-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fempty-kind-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fempty-kind-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fempty-kind-2.rs?ref=7d4a98e61aef8622ab4fa0cec0810171cf17b1bf", "patch": "@@ -1,6 +1,6 @@\n // Unspecified kind should fail with an error\n \n // compile-flags: -l :+bundle=mylib\n-// error-pattern: unknown library kind ``, expected one of: static, dylib, framework\n+// error-pattern: unknown library kind ``, expected one of: static, dylib, framework, link-arg\n \n fn main() {}"}, {"sha": "3e5b054933999ea89155d8ca028b9ce56aac60d2", "filename": "src/test/ui/native-library-link-flags/empty-kind-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fempty-kind-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fempty-kind-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fempty-kind-2.stderr?ref=7d4a98e61aef8622ab4fa0cec0810171cf17b1bf", "patch": "@@ -1,2 +1,2 @@\n-error: unknown library kind ``, expected one of: static, dylib, framework\n+error: unknown library kind ``, expected one of: static, dylib, framework, link-arg\n "}, {"sha": "e041650d024f4b56eb7eaf1c227a74efa131f3c5", "filename": "src/test/ui/native-library-link-flags/link-arg-error.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Fui%2Fnative-library-link-flags%2Flink-arg-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Fui%2Fnative-library-link-flags%2Flink-arg-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnative-library-link-flags%2Flink-arg-error.rs?ref=7d4a98e61aef8622ab4fa0cec0810171cf17b1bf", "patch": "@@ -0,0 +1,4 @@\n+// compile-flags: -l link-arg:+bundle=arg -Z unstable-options\n+// error-pattern: linking modifier `bundle` is only compatible with `static` linking kind\n+\n+fn main() {}"}, {"sha": "e1d01e141527468eb195c44af85942ac6da0c821", "filename": "src/test/ui/native-library-link-flags/link-arg-error.stderr", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Fui%2Fnative-library-link-flags%2Flink-arg-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Fui%2Fnative-library-link-flags%2Flink-arg-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnative-library-link-flags%2Flink-arg-error.stderr?ref=7d4a98e61aef8622ab4fa0cec0810171cf17b1bf", "patch": "@@ -0,0 +1,2 @@\n+error: linking modifier `bundle` is only compatible with `static` linking kind\n+"}, {"sha": "075e4d9e79e469b53346468fe0f3d2a0933917e4", "filename": "src/test/ui/native-library-link-flags/link-arg-from-rs.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Fui%2Fnative-library-link-flags%2Flink-arg-from-rs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Fui%2Fnative-library-link-flags%2Flink-arg-from-rs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnative-library-link-flags%2Flink-arg-from-rs.rs?ref=7d4a98e61aef8622ab4fa0cec0810171cf17b1bf", "patch": "@@ -0,0 +1,8 @@\n+// link-arg is not supposed to be usable in #[link] attributes\n+\n+// compile-flags:\n+// error-pattern: error[E0458]: unknown link kind `link-arg`, expected one of: static, dylib, framework, raw-dylib\n+\n+#[link(kind = \"link-arg\")]\n+extern \"C\" {}\n+pub fn main() {}"}, {"sha": "69a7825c0b10575224e880ef0304f8e6d725d87a", "filename": "src/test/ui/native-library-link-flags/link-arg-from-rs.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Fui%2Fnative-library-link-flags%2Flink-arg-from-rs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7d4a98e61aef8622ab4fa0cec0810171cf17b1bf/src%2Ftest%2Fui%2Fnative-library-link-flags%2Flink-arg-from-rs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnative-library-link-flags%2Flink-arg-from-rs.stderr?ref=7d4a98e61aef8622ab4fa0cec0810171cf17b1bf", "patch": "@@ -0,0 +1,16 @@\n+error[E0458]: unknown link kind `link-arg`, expected one of: static, dylib, framework, raw-dylib\n+  --> $DIR/link-arg-from-rs.rs:6:15\n+   |\n+LL | #[link(kind = \"link-arg\")]\n+   |               ^^^^^^^^^^ unknown link kind\n+\n+error[E0459]: `#[link]` attribute requires a `name = \"string\"` argument\n+  --> $DIR/link-arg-from-rs.rs:6:1\n+   |\n+LL | #[link(kind = \"link-arg\")]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `name` argument\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors have detailed explanations: E0458, E0459.\n+For more information about an error, try `rustc --explain E0458`."}]}