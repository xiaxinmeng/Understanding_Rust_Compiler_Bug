{"sha": "f26821c96948dbb2c6a4a8f17ba4b0634d3d2034", "node_id": "C_kwDOAAsO6NoAKGYyNjgyMWM5Njk0OGRiYjJjNmE0YThmMTdiYTRiMDYzNGQzZDIwMzQ", "commit": {"author": {"name": "vallentin", "email": "mail@vallentin.dev", "date": "2021-12-02T17:07:28Z"}, "committer": {"name": "vallentin", "email": "mail@vallentin.dev", "date": "2021-12-02T17:25:09Z"}, "message": "Fixed same_name_method description", "tree": {"sha": "def85f3e9cc815f799116e266b175b7f99258b37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/def85f3e9cc815f799116e266b175b7f99258b37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f26821c96948dbb2c6a4a8f17ba4b0634d3d2034", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEETIeGdYyegSB45/6SxSDAc0pQk0oFAmGpAXUACgkQxSDAc0pQ\nk0qF8g//WNlJDRZwxRaLTGGbmViE6njgs9qG04AHRenyqCNz2JQRXK9RhtZMQu/y\nEBh13BV/lqWZXpj926LX/1uQCTTxhwGcnUlF/Mx34bTEp1vCl34RXi0bPk34H5jb\nfFnrfSFQwdQ7YgjpPwtKcfipdyvOqXqR0cW93ttvag0o0DDTrpCfdvg4u3ZzJ9Jm\nMJAAvJMLZLfh7s8GwA/GY9DYJ2KmHbEMqucp8S/Wa5pjtBEX8wypemGjo6OfvdX8\nVfPBNbMQN/zY91IITOpggFdI2/ilggAkW/XQqe3mb/rZVenCcY2Gxzjd0FyR2Mj0\nvFu+DSKTPFoHkWA96dgbZXAPsFeQqIpdtcjuh1qmIcvUWvJd9pHrWp7wa/j8t4Zs\nLceN514y7SQXFcpBq63tT3rOHbJb1VAqwqVjP+S5noMj+Nkzdqh0iN7o+PUV9VyP\nwqpL71snpsDYJDbWxvzQNtCkhrV3YjcqP07JgufXDt3kDBzihuKOIBJt2z4UgK3T\n3uA3YWfBddclH7x/6pLARHilFX6fqoooRe8k9HB6FPfCCPx5LTgctye0g/qX9MBM\n7wUStzbpV6A0nJIpYQgcQrBJHz/OJ4xVsbeTsFfeVeEX5vUdq7MblXGnW2Wi4K/G\nZ68VOEOlu/mb/T/v+DM3gcAi0cHPWKlqluJwfwITyVdkhxdN1EQ=\n=CfDF\n-----END PGP SIGNATURE-----", "payload": "tree def85f3e9cc815f799116e266b175b7f99258b37\nparent 392b0c5c25ddbd36e4dc480afcf70ed01dce352d\nauthor vallentin <mail@vallentin.dev> 1638464848 +0100\ncommitter vallentin <mail@vallentin.dev> 1638465909 +0100\n\nFixed same_name_method description\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f26821c96948dbb2c6a4a8f17ba4b0634d3d2034", "html_url": "https://github.com/rust-lang/rust/commit/f26821c96948dbb2c6a4a8f17ba4b0634d3d2034", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f26821c96948dbb2c6a4a8f17ba4b0634d3d2034/comments", "author": {"login": "vallentin", "id": 17464404, "node_id": "MDQ6VXNlcjE3NDY0NDA0", "avatar_url": "https://avatars.githubusercontent.com/u/17464404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vallentin", "html_url": "https://github.com/vallentin", "followers_url": "https://api.github.com/users/vallentin/followers", "following_url": "https://api.github.com/users/vallentin/following{/other_user}", "gists_url": "https://api.github.com/users/vallentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/vallentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vallentin/subscriptions", "organizations_url": "https://api.github.com/users/vallentin/orgs", "repos_url": "https://api.github.com/users/vallentin/repos", "events_url": "https://api.github.com/users/vallentin/events{/privacy}", "received_events_url": "https://api.github.com/users/vallentin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vallentin", "id": 17464404, "node_id": "MDQ6VXNlcjE3NDY0NDA0", "avatar_url": "https://avatars.githubusercontent.com/u/17464404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vallentin", "html_url": "https://github.com/vallentin", "followers_url": "https://api.github.com/users/vallentin/followers", "following_url": "https://api.github.com/users/vallentin/following{/other_user}", "gists_url": "https://api.github.com/users/vallentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/vallentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vallentin/subscriptions", "organizations_url": "https://api.github.com/users/vallentin/orgs", "repos_url": "https://api.github.com/users/vallentin/repos", "events_url": "https://api.github.com/users/vallentin/events{/privacy}", "received_events_url": "https://api.github.com/users/vallentin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "392b0c5c25ddbd36e4dc480afcf70ed01dce352d", "url": "https://api.github.com/repos/rust-lang/rust/commits/392b0c5c25ddbd36e4dc480afcf70ed01dce352d", "html_url": "https://github.com/rust-lang/rust/commit/392b0c5c25ddbd36e4dc480afcf70ed01dce352d"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "1bbaa104e60b17e8ab591e51c6c47fd27e45b258", "filename": "clippy_lints/src/same_name_method.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f26821c96948dbb2c6a4a8f17ba4b0634d3d2034/clippy_lints%2Fsrc%2Fsame_name_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f26821c96948dbb2c6a4a8f17ba4b0634d3d2034/clippy_lints%2Fsrc%2Fsame_name_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsame_name_method.rs?ref=f26821c96948dbb2c6a4a8f17ba4b0634d3d2034", "patch": "@@ -11,7 +11,7 @@ use std::collections::{BTreeMap, BTreeSet};\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// It lints if a struct has two method with same time:\n+    /// It lints if a struct has two methods with the same name:\n     /// one from a trait, another not from trait.\n     ///\n     /// ### Why is this bad?\n@@ -100,7 +100,7 @@ impl<'tcx> LateLintPass<'tcx> for SameNameMethod {\n                                         cx,\n                                         SAME_NAME_METHOD,\n                                         *impl_span,\n-                                        \"method's name is same to an existing method in a trait\",\n+                                        \"method's name is the same as an existing method in a trait\",\n                                         |diag| {\n                                             diag.span_note(\n                                                 trait_method_span,\n@@ -139,7 +139,7 @@ impl<'tcx> LateLintPass<'tcx> for SameNameMethod {\n                                         cx,\n                                         SAME_NAME_METHOD,\n                                         impl_span,\n-                                        \"method's name is same to an existing method in a trait\",\n+                                        \"method's name is the same as an existing method in a trait\",\n                                         |diag| {\n                                             // TODO should we `span_note` on every trait?\n                                             // iterate on trait_spans?"}, {"sha": "c32c3dd9880f6af59f7578462a76149179560f54", "filename": "tests/ui/same_name_method.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f26821c96948dbb2c6a4a8f17ba4b0634d3d2034/tests%2Fui%2Fsame_name_method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f26821c96948dbb2c6a4a8f17ba4b0634d3d2034/tests%2Fui%2Fsame_name_method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsame_name_method.stderr?ref=f26821c96948dbb2c6a4a8f17ba4b0634d3d2034", "patch": "@@ -1,4 +1,4 @@\n-error: method's name is same to an existing method in a trait\n+error: method's name is the same as an existing method in a trait\n   --> $DIR/same_name_method.rs:20:13\n    |\n LL |             fn foo() {}\n@@ -11,7 +11,7 @@ note: existing `foo` defined here\n LL |             fn foo() {}\n    |             ^^^^^^^^^^^\n \n-error: method's name is same to an existing method in a trait\n+error: method's name is the same as an existing method in a trait\n   --> $DIR/same_name_method.rs:44:13\n    |\n LL |             fn foo() {}\n@@ -23,7 +23,7 @@ note: existing `foo` defined here\n LL |             fn foo() {}\n    |             ^^^^^^^^^^^\n \n-error: method's name is same to an existing method in a trait\n+error: method's name is the same as an existing method in a trait\n   --> $DIR/same_name_method.rs:58:13\n    |\n LL |             fn foo() {}\n@@ -35,7 +35,7 @@ note: existing `foo` defined here\n LL |         impl T1 for S {}\n    |         ^^^^^^^^^^^^^^^^\n \n-error: method's name is same to an existing method in a trait\n+error: method's name is the same as an existing method in a trait\n   --> $DIR/same_name_method.rs:70:13\n    |\n LL |             fn foo() {}\n@@ -47,7 +47,7 @@ note: existing `foo` defined here\n LL |         impl T1 for S {}\n    |         ^^^^^^^^^^^^^^^^\n \n-error: method's name is same to an existing method in a trait\n+error: method's name is the same as an existing method in a trait\n   --> $DIR/same_name_method.rs:34:13\n    |\n LL |             fn clone() {}"}]}