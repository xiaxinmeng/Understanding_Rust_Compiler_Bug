{"sha": "b1f766b37bb65bd6a1ae57300df7e47dfd81f7de", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxZjc2NmIzN2JiNjViZDZhMWFlNTczMDBkZjdlNDdkZmQ4MWY3ZGU=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2017-02-17T12:23:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-02-17T12:23:19Z"}, "message": "fix dogfood tests", "tree": {"sha": "9d5eb6e088a38dceeee282d1704b7ca9aa77f741", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d5eb6e088a38dceeee282d1704b7ca9aa77f741"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1f766b37bb65bd6a1ae57300df7e47dfd81f7de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1f766b37bb65bd6a1ae57300df7e47dfd81f7de", "html_url": "https://github.com/rust-lang/rust/commit/b1f766b37bb65bd6a1ae57300df7e47dfd81f7de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1f766b37bb65bd6a1ae57300df7e47dfd81f7de/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05a6945adc9047b36fa0f98b82ba64ac5b9dbeb8", "url": "https://api.github.com/repos/rust-lang/rust/commits/05a6945adc9047b36fa0f98b82ba64ac5b9dbeb8", "html_url": "https://github.com/rust-lang/rust/commit/05a6945adc9047b36fa0f98b82ba64ac5b9dbeb8"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "0d7459e1892633b7cf395bcbe5b0e599ec22e3a3", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b1f766b37bb65bd6a1ae57300df7e47dfd81f7de/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1f766b37bb65bd6a1ae57300df7e47dfd81f7de/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=b1f766b37bb65bd6a1ae57300df7e47dfd81f7de", "patch": "@@ -531,8 +531,8 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for CastPass {\n             if let ExprLit(ref lit) = ex.node {\n                 use syntax::ast::{LitKind, LitIntType};\n                 match lit.node {\n-                    LitKind::Int(_, LitIntType::Unsuffixed) => (),\n-                    LitKind::FloatUnsuffixed(_) => (),\n+                    LitKind::Int(_, LitIntType::Unsuffixed) |\n+                    LitKind::FloatUnsuffixed(_) => {},\n                     _ => {\n                         if cast_from.sty == cast_to.sty && !in_external_macro(cx, expr.span) {\n                             span_lint(cx,"}]}