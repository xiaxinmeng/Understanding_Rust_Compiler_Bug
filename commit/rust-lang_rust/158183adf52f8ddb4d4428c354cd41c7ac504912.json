{"sha": "158183adf52f8ddb4d4428c354cd41c7ac504912", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1ODE4M2FkZjUyZjhkZGI0ZDQ0MjhjMzU0Y2Q0MWM3YWM1MDQ5MTI=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-06-05T19:38:15Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-06-05T19:46:48Z"}, "message": "Fix false-positive in `USELESS_LET_IF_SEQ`", "tree": {"sha": "71ea9072176308ec1e55a9474b9752b0569331a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71ea9072176308ec1e55a9474b9752b0569331a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/158183adf52f8ddb4d4428c354cd41c7ac504912", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJXVIGtAAoJEF5CfHlMukXoBYEP/0NUWHWR+yY5VmoGxReE2W4n\nnOAEMclXEgZY9RtMxS9W+VULvOP4pcTH54fXu+/JLBxxNWk/pwVGmBq6zhFVAPDW\nd/D+M2VGY9JQ+cazDPW4si8BaU88hJ+JVMcfjCT3CjGddPmB1IrWywfsbiWiKZNE\nKrbTJzdBQJgUuoL5GHYzQdV/i0ayBynGlZuvsEKv6rKKxtys5pqSFxhM3OogePo0\nH87PkIT0Mk7CHIjTybcJ/EUFKqrTxVjObqAFESFStV4ligEVcXp5OOag3OcgxBdI\nhwCGwHAGZ/OnZT/MouxzJhtnHoeSDyWmRxqsytt1zqhCj22s4+c/vstvYh1+AZkU\n2K7uqz7XUDm7AZEcMrYUHw6qdB5Fs1ir9iR41SCD9XkULQJkq8cWKfxyXvP7QJ51\ntMMQZwrGPCAEo02ZWp9Ho9525kC9GE7AlVH1PubvAOKMAiF3YtRKzX4Rajid5RoS\ntIb5Opu85sSRksJzpzYygEPh0SCHtLI2n5kQoh7SDrCOBUd+eZXPdBgP6nOWM0pe\nI64E9cZAgS5dYTNZTupW8wulNmLvoDPMn/etL768riYRAGBrHQ8/qGNe3dmz9mPn\nvMN9CZElbUYGFVk16cnp5R/jHLIZ8PVL7Im3h0uk2la8c5hw1RPA/efaVDQl/Wy4\nRpBDYmY7kkIWlo3qwvts\n=kY+3\n-----END PGP SIGNATURE-----", "payload": "tree 71ea9072176308ec1e55a9474b9752b0569331a7\nparent 3436699ed6249e655bd8da4fd4630b646db2f93f\nauthor mcarton <cartonmartin+git@gmail.com> 1465155495 +0200\ncommitter mcarton <cartonmartin+git@gmail.com> 1465156008 +0200\n\nFix false-positive in `USELESS_LET_IF_SEQ`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/158183adf52f8ddb4d4428c354cd41c7ac504912", "html_url": "https://github.com/rust-lang/rust/commit/158183adf52f8ddb4d4428c354cd41c7ac504912", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/158183adf52f8ddb4d4428c354cd41c7ac504912/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3436699ed6249e655bd8da4fd4630b646db2f93f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3436699ed6249e655bd8da4fd4630b646db2f93f", "html_url": "https://github.com/rust-lang/rust/commit/3436699ed6249e655bd8da4fd4630b646db2f93f"}], "stats": {"total": 40, "additions": 35, "deletions": 5}, "files": [{"sha": "a85cb52f2dc6e0d4687750474fb0ca879710c2e9", "filename": "clippy_lints/src/let_if_seq.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/158183adf52f8ddb4d4428c354cd41c7ac504912/clippy_lints%2Fsrc%2Flet_if_seq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/158183adf52f8ddb4d4428c354cd41c7ac504912/clippy_lints%2Fsrc%2Flet_if_seq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flet_if_seq.rs?ref=158183adf52f8ddb4d4428c354cd41c7ac504912", "patch": "@@ -69,12 +69,9 @@ impl LateLintPass for LetIfSeq {\n                 let Some(def) = cx.tcx.def_map.borrow().get(&decl.pat.id),\n                 let hir::StmtExpr(ref if_, _) = expr.node,\n                 let hir::ExprIf(ref cond, ref then, ref else_) = if_.node,\n-                {\n-                    let mut v = UsedVisitor { cx: cx, id: def.def_id(), used: false };\n-                    hir::intravisit::walk_expr(&mut v, cond);\n-                    !v.used\n-                },\n+                !used_in_expr(cx, def.def_id(), cond),\n                 let Some(value) = check_assign(cx, def.def_id(), then),\n+                !used_in_expr(cx, def.def_id(), value),\n             ], {\n                 let span = codemap::mk_sp(stmt.span.lo, if_.span.hi);\n \n@@ -179,3 +176,13 @@ fn check_assign<'e>(cx: &LateContext, decl: hir::def_id::DefId, block: &'e hir::\n \n     None\n }\n+\n+fn used_in_expr(cx: &LateContext, id: hir::def_id::DefId, expr: &hir::Expr) -> bool {\n+    let mut v = UsedVisitor {\n+        cx: cx,\n+        id: id,\n+        used: false\n+    };\n+    hir::intravisit::walk_expr(&mut v, expr);\n+    v.used\n+}"}, {"sha": "0b086faf077d45ed565f96baa8a616e87f3b5116", "filename": "tests/compile-fail/let_if_seq.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/158183adf52f8ddb4d4428c354cd41c7ac504912/tests%2Fcompile-fail%2Flet_if_seq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/158183adf52f8ddb4d4428c354cd41c7ac504912/tests%2Fcompile-fail%2Flet_if_seq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Flet_if_seq.rs?ref=158183adf52f8ddb4d4428c354cd41c7ac504912", "patch": "@@ -5,6 +5,27 @@\n #![deny(useless_let_if_seq)]\n \n fn f() -> bool { true }\n+fn g(x: i32) -> i32 { x + 1 }\n+\n+fn issue985() -> i32 {\n+    let mut x = 42;\n+    if f() {\n+        x = g(x);\n+    }\n+\n+    x\n+}\n+\n+fn issue985_alt() -> i32 {\n+    let mut x = 42;\n+    if f() {\n+        f();\n+    } else {\n+        x = g(x);\n+    }\n+\n+    x\n+}\n \n fn issue975() -> String {\n     let mut udn = \"dummy\".to_string();\n@@ -30,6 +51,8 @@ fn early_return() -> u8 {\n fn main() {\n     early_return();\n     issue975();\n+    issue985();\n+    issue985_alt();\n \n     let mut foo = 0;\n     //~^ ERROR `if _ { .. } else { .. }` is an expression"}]}