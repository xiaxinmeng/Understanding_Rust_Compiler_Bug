{"sha": "bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmMTU0MzhhYjQ5ZTZmNjg0NmI2MmJmNjQ1MTNjNzRmZjFhYzNkODg=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-11-14T00:50:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-11-14T00:50:43Z"}, "message": "Merge pull request #2147 from topecongiro/audit-options/indent_style\n\nUse 'indent_style' for all indent related settings", "tree": {"sha": "6083e427b51abcd6aadc43f424e2316e36556038", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6083e427b51abcd6aadc43f424e2316e36556038"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaCj3jCRBK7hj4Ov3rIwAAdHIIAIkGIPTniJoaW/S+fqN85fJu\nuHnhrtKg7GC2g2MxAY3S6Y9A/LGQpSxOmmIwvxcheXcvZkQREZz6ejbxWPPkeiQH\nq55MkOQep50LcxiH7H9WaZI72EFN6aKLmrcRpFAp4A18B/HAj2qWSRI0Ncr0j3il\n1TLAOMN16v4gt2weI8sijg75kUZIBGj+/wdZESgi5yhdQ+bu5BPrSsXAAITaYsgB\nCMsFkOXezmJppS/RUoIx/ZCGJ/gVevq9jTdEccDCIC6Iwis49ViKhmI0liCbgOpv\nm6doOeBe/wU0u4XTUNbvNLCQrZZy0vgP5fVoBF0N784JHRUJ4kAqCWZQDOeZN+w=\n=In2n\n-----END PGP SIGNATURE-----\n", "payload": "tree 6083e427b51abcd6aadc43f424e2316e36556038\nparent 8a27a2da622dc51d4cea7378bf95c79ce99ba21e\nparent 9a58741f29b32c08be8f5a36fd0a3fcbf2a460a2\nauthor Nick Cameron <nrc@ncameron.org> 1510620643 +1300\ncommitter GitHub <noreply@github.com> 1510620643 +1300\n\nMerge pull request #2147 from topecongiro/audit-options/indent_style\n\nUse 'indent_style' for all indent related settings"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "html_url": "https://github.com/rust-lang/rust/commit/bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a27a2da622dc51d4cea7378bf95c79ce99ba21e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a27a2da622dc51d4cea7378bf95c79ce99ba21e", "html_url": "https://github.com/rust-lang/rust/commit/8a27a2da622dc51d4cea7378bf95c79ce99ba21e"}, {"sha": "9a58741f29b32c08be8f5a36fd0a3fcbf2a460a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a58741f29b32c08be8f5a36fd0a3fcbf2a460a2", "html_url": "https://github.com/rust-lang/rust/commit/9a58741f29b32c08be8f5a36fd0a3fcbf2a460a2"}], "stats": {"total": 987, "additions": 429, "deletions": 558}, "files": [{"sha": "6516784c481fb59a495bfef022eee93d66838b59", "filename": "Configurations.md", "status": "modified", "additions": 209, "deletions": 276, "changes": 485, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -5,7 +5,7 @@ Rustfmt is designed to be very configurable. You can create a TOML file called `\n A possible content of `rustfmt.toml` or `.rustfmt.toml` might look like this:\n \n ```toml\n-array_indent = \"Block\"\n+indent_style = \"Block\"\n array_width = 80\n reorder_imported_names = true\n ```\n@@ -22,7 +22,7 @@ Use this option to prevent a huge array from being vertically formatted.\n - **Default value**: `0`\n - **Possible values**: any positive integer\n \n-**Note:** A value of `0` results in [`array_indent`](#array_indent) being applied regardless of a line's width.\n+**Note:** A value of `0` results in [`indent_style`](#indent_style) being applied regardless of a line's width.\n \n #### `0` (default):\n \n@@ -50,13 +50,15 @@ let a = vec![\n ];\n ```\n \n-## `array_indent`\n+## `indent_style`\n \n-Indent on arrays\n+Indent on expressions or items.\n \n - **Default value**: `\"Block\"`\n - **Possible values**: `\"Block\"`, `\"Visual\"`\n \n+### Array\n+\n #### `\"Block\"` (default):\n \n ```rust\n@@ -83,22 +85,216 @@ let lorem = vec![\"ipsum\",\n                  \"elit\"];\n ```\n \n+### Control flow\n+\n+#### `\"Block\"` (default):\n+\n+```rust\n+if lorem_ipsum &&\n+    dolor_sit &&\n+    amet_consectetur\n+{\n+    // ...\n+}\n+```\n+\n+#### `\"Visual\"`:\n+\n+```rust\n+if lorem_ipsum &&\n+   dolor_sit &&\n+   amet_consectetur {\n+    // ...\n+}\n+```\n+\n+See also: [`control_brace_style`](#control_brace_style).\n+\n+### Function arguments\n+\n+#### `\"Block\"` (default):\n+\n+```rust\n+fn lorem() {}\n+\n+fn lorem(ipsum: usize) {}\n+\n+fn lorem(\n+    ipsum: usize,\n+    dolor: usize,\n+    sit: usize,\n+    amet: usize,\n+    consectetur: usize,\n+    adipiscing: usize,\n+    elit: usize,\n+) {\n+    // body\n+}\n+```\n+\n+#### `\"Visual\"`:\n+\n+```rust\n+fn lorem() {}\n+\n+fn lorem(ipsum: usize) {}\n+\n+fn lorem(ipsum: usize,\n+         dolor: usize,\n+         sit: usize,\n+         amet: usize,\n+         consectetur: usize,\n+         adipiscing: usize,\n+         elit: usize) {\n+    // body\n+}\n+```\n+\n+### Functaion calls\n+\n+#### `\"Block\"` (default):\n+\n+```rust\n+lorem(\n+    \"lorem\",\n+    \"ipsum\",\n+    \"dolor\",\n+    \"sit\",\n+    \"amet\",\n+    \"consectetur\",\n+    \"adipiscing\",\n+    \"elit\",\n+);\n+```\n+\n+#### `\"Visual\"`:\n+\n+```rust\n+lorem(\"lorem\",\n+      \"ipsum\",\n+      \"dolor\",\n+      \"sit\",\n+      \"amet\",\n+      \"consectetur\",\n+      \"adipiscing\",\n+      \"elit\");\n+```\n+\n+### Generics\n+\n+#### `\"Block\"` (default):\n+\n+```rust\n+fn lorem<\n+    Ipsum: Eq = usize,\n+    Dolor: Eq = usize,\n+    Sit: Eq = usize,\n+    Amet: Eq = usize,\n+    Adipiscing: Eq = usize,\n+    Consectetur: Eq = usize,\n+    Elit: Eq = usize\n+>(\n+    ipsum: Ipsum,\n+    dolor: Dolor,\n+    sit: Sit,\n+    amet: Amet,\n+    adipiscing: Adipiscing,\n+    consectetur: Consectetur,\n+    elit: Elit,\n+) -> T {\n+    // body\n+}\n+```\n+\n+#### `\"Visual\"`:\n+\n+```rust\n+fn lorem<Ipsum: Eq = usize,\n+         Dolor: Eq = usize,\n+         Sit: Eq = usize,\n+         Amet: Eq = usize,\n+         Adipiscing: Eq = usize,\n+         Consectetur: Eq = usize,\n+         Elit: Eq = usize>\n+    (ipsum: Ipsum,\n+     dolor: Dolor,\n+     sit: Sit,\n+     amet: Amet,\n+     adipiscing: Adipiscing,\n+     consectetur: Consectetur,\n+     elit: Elit)\n+     -> T {\n+    // body\n+}\n+```\n+\n+#### Struct\n+\n+#### `\"Block\"` (default):\n+\n+```rust\n+let lorem = Lorem {\n+    ipsum: dolor,\n+    sit: amet,\n+};\n+```\n+\n+#### `\"Visual\"`:\n+\n+```rust\n+let lorem = Lorem { ipsum: dolor,\n+                    sit: amet, };\n+```\n+\n+See also: [`struct_lit_multiline_style`](#struct_lit_multiline_style), [`indent_style`](#indent_style).\n+\n+### Where predicates\n+\n+#### `\"Block\"` (default):\n+\n+```rust\n+fn lorem<Ipsum, Dolor, Sit, Amet>() -> T\n+where \n+    Ipsum: Eq,\n+    Dolor: Eq,\n+    Sit: Eq,\n+    Amet: Eq\n+{\n+    // body\n+}\n+```\n+\n+#### `\"Visual\"`:\n+\n+```rust\n+fn lorem<Ipsum, Dolor, Sit, Amet>() -> T\n+    where Ipsum: Eq,\n+          Dolor: Eq,\n+          Sit: Eq,\n+          Amet: Eq\n+{\n+    // body\n+}\n+```\n+\n+See also: [`where_density`](#where_density), [`where_layout`](#where_layout).\n+\n ## `array_width`\n \n Maximum width of an array literal before falling back to vertical formatting\n \n - **Default value**: `60`\n - **Possible values**: any positive integer\n \n-**Note:** A value of `0` results in [`array_indent`](#array_indent) being applied regardless of a line's width.\n+**Note:** A value of `0` results in [`indent_style`](#indent_style) being applied regardless of a line's width.\n \n #### Lines shorter than `array_width`:\n ```rust\n let lorem = vec![\"ipsum\", \"dolor\", \"sit\", \"amet\", \"consectetur\", \"adipiscing\", \"elit\"];\n ```\n \n #### Lines longer than `array_width`:\n-See [`array_indent`](#array_indent).\n+See [`indent_style`](#indent_style).\n \n ## `attributes_on_same_line_as_field`\n \n@@ -414,36 +610,6 @@ let (lorem, ipsum, _, _) = (1, 2, 3, 4);\n let (lorem, ipsum, ..) = (1, 2, 3, 4);\n ```\n \n-## `control_style`\n-\n-Indent style for control flow statements\n-\n-- **Default value**: `\"Rfc\"`\n-- **Possible values**: `\"Rfc\"`, `\"Legacy\"`\n-\n-#### `\"Rfc\"` (default):\n-\n-```rust\n-if lorem_ipsum &&\n-    dolor_sit &&\n-    amet_consectetur\n-{\n-    // ...\n-}\n-```\n-\n-#### `\"Legacy\"`:\n-\n-```rust\n-if lorem_ipsum &&\n-   dolor_sit &&\n-   amet_consectetur {\n-    // ...\n-}\n-```\n-\n-See also: [`control_brace_style`](#control_brace_style).\n-\n ## `control_brace_style`\n \n Brace style for control flow constructs\n@@ -640,51 +806,6 @@ trait Lorem {\n }\n ```\n \n-## `fn_args_indent`\n-\n-Layout of function arguments and tuple structs\n-\n-- **Default value**: `\"Block\"`\n-- **Possible values**: `\"Block\"`, `\"Visual\"`\n-\n-#### `\"Block\"` (default):\n-\n-```rust\n-fn lorem() {}\n-\n-fn lorem(ipsum: usize) {}\n-\n-fn lorem(\n-    ipsum: usize,\n-    dolor: usize,\n-    sit: usize,\n-    amet: usize,\n-    consectetur: usize,\n-    adipiscing: usize,\n-    elit: usize,\n-) {\n-    // body\n-}\n-```\n-\n-#### `\"Visual\"`:\n-\n-```rust\n-fn lorem() {}\n-\n-fn lorem(ipsum: usize) {}\n-\n-fn lorem(ipsum: usize,\n-         dolor: usize,\n-         sit: usize,\n-         amet: usize,\n-         consectetur: usize,\n-         adipiscing: usize,\n-         elit: usize) {\n-    // body\n-}\n-```\n-\n ## `fn_args_paren_newline`\n \n If function argument parenthesis goes on a newline\n@@ -784,41 +905,6 @@ where\n }\n ```\n \n-## `fn_call_indent`\n-\n-Indentation for function calls, etc.\n-\n-- **Default value**: `\"Block\"`\n-- **Possible values**: `\"Block\"`, `\"Visual\"`\n-\n-#### `\"Block\"` (default):\n-\n-```rust\n-lorem(\n-    \"lorem\",\n-    \"ipsum\",\n-    \"dolor\",\n-    \"sit\",\n-    \"amet\",\n-    \"consectetur\",\n-    \"adipiscing\",\n-    \"elit\",\n-);\n-```\n-\n-#### `\"Visual\"`:\n-\n-```rust\n-lorem(\"lorem\",\n-      \"ipsum\",\n-      \"dolor\",\n-      \"sit\",\n-      \"amet\",\n-      \"consectetur\",\n-      \"adipiscing\",\n-      \"elit\");\n-```\n-\n ## `fn_call_width`\n \n Maximum width of the args of a function call before falling back to vertical formatting\n@@ -835,7 +921,7 @@ lorem(\"lorem\", \"ipsum\", \"dolor\", \"sit\", \"amet\", \"consectetur\", \"adipiscing\", \"el\n \n #### Function call longer than `fn_call_width`:\n \n-See [`fn_call_indent`](#fn_call_indent).\n+See [`indent_style`](#indent_style).\n \n ## `fn_empty_single_line`\n \n@@ -900,7 +986,7 @@ fn lorem(ipsum: Ipsum,\n \n ```\n \n-**Note**: This option only takes effect when `fn_call_indent` is set to `\"Visual\"`.\n+**Note**: This option only takes effect when `indent_style` is set to `\"Visual\"`.\n \n ## `fn_single_line`\n \n@@ -994,59 +1080,6 @@ let lorem =\n \n See also [`force_format_strings`](#force_format_strings), [`max_width`](#max_width).\n \n-## `generics_indent`\n-\n-Indentation of generics\n-\n-- **Default value**: `\"Block\"`\n-- **Possible values**: `\"Block\"`, `\"Visual\"`\n-\n-#### `\"Block\"` (default):\n-\n-```rust\n-fn lorem<\n-    Ipsum: Eq = usize,\n-    Dolor: Eq = usize,\n-    Sit: Eq = usize,\n-    Amet: Eq = usize,\n-    Adipiscing: Eq = usize,\n-    Consectetur: Eq = usize,\n-    Elit: Eq = usize\n->(\n-    ipsum: Ipsum,\n-    dolor: Dolor,\n-    sit: Sit,\n-    amet: Amet,\n-    adipiscing: Adipiscing,\n-    consectetur: Consectetur,\n-    elit: Elit,\n-) -> T {\n-    // body\n-}\n-```\n-\n-#### `\"Visual\"`:\n-\n-```rust\n-fn lorem<Ipsum: Eq = usize,\n-         Dolor: Eq = usize,\n-         Sit: Eq = usize,\n-         Amet: Eq = usize,\n-         Adipiscing: Eq = usize,\n-         Consectetur: Eq = usize,\n-         Elit: Eq = usize>\n-    (ipsum: Ipsum,\n-     dolor: Dolor,\n-     sit: Sit,\n-     amet: Amet,\n-     adipiscing: Adipiscing,\n-     consectetur: Consectetur,\n-     elit: Elit)\n-     -> T {\n-    // body\n-}\n-```\n-\n ## `hard_tabs`\n \n Use tab characters for indentation, spaces for alignment\n@@ -1982,32 +2015,7 @@ let lorem = Lorem {\n };\n ```\n \n-See also: [`struct_lit_indent`](#struct_lit_indent), [`struct_lit_width`](#struct_lit_width).\n-\n-## `struct_lit_indent`\n-\n-Style of struct definition\n-\n-- **Default value**: `\"Block\"`\n-- **Possible values**: `\"Block\"`, `\"Visual\"`\n-\n-#### `\"Block\"` (default):\n-\n-```rust\n-let lorem = Lorem {\n-    ipsum: dolor,\n-    sit: amet,\n-};\n-```\n-\n-#### `\"Visual\"`:\n-\n-```rust\n-let lorem = Lorem { ipsum: dolor,\n-                    sit: amet, };\n-```\n-\n-See also: [`struct_lit_multiline_style`](#struct_lit_multiline_style), [`struct_lit_indent`](#struct_lit_indent).\n+See also: [`indent_style`](#indent_style), [`struct_lit_width`](#struct_lit_width).\n \n ## `struct_lit_width`\n \n@@ -2024,9 +2032,9 @@ let lorem = Lorem { ipsum: dolor, sit: amet };\n ```\n \n #### Lines longer than `struct_lit_width`:\n-See [`struct_lit_indent`](#struct_lit_indent).\n+See [`indent_style`](#indent_style).\n \n-See also: [`struct_lit_multiline_style`](#struct_lit_multiline_style), [`struct_lit_indent`](#struct_lit_indent).\n+See also: [`struct_lit_multiline_style`](#struct_lit_multiline_style), [`indent_style`](#indent_style).\n \n ## `struct_variant_width`\n \n@@ -2308,7 +2316,7 @@ trait Lorem {\n \n **Note:** `where_density = \"Tall\"` currently produces the same output as `where_density = \"Vertical\"`.\n \n-See also: [`where_layout`](#where_layout), [`where_pred_indent`](#where_pred_indent), [`where_style`](#where_style).\n+See also: [`where_layout`](#where_layout), [`indent_style`](#indent_style).\n \n ## `where_layout`\n \n@@ -2389,82 +2397,7 @@ fn lorem<Ipsum, Dolor, Sit, Amet>(ipsum: Ipsum, dolor: Dolor, sit: Sit, amet: Am\n }\n ```\n \n-**Note**: This option only takes effect when `where_style` is set to `\"Legacy\"`.\n-\n-See also: [`where_density`](#where_density), [`where_pred_indent`](#where_pred_indent), [`where_style`](#where_style).\n-\n-## `where_pred_indent`\n-\n-Indentation style of a where predicate\n-\n-- **Default value**: `\"Visual\"`\n-- **Possible values**: `\"Block\"`, `\"Visual\"`\n-\n-#### `\"Visual\"` (default):\n-\n-```rust\n-fn lorem<Ipsum, Dolor, Sit, Amet>() -> T\n-    where Ipsum: Eq,\n-          Dolor: Eq,\n-          Sit: Eq,\n-          Amet: Eq\n-{\n-    // body\n-}\n-```\n-\n-#### `\"Block\"`:\n-\n-```rust\n-fn lorem<Ipsum, Dolor, Sit, Amet>() -> T\n-    where Ipsum: Eq,\n-        Dolor: Eq,\n-        Sit: Eq,\n-        Amet: Eq\n-{\n-    // body\n-}\n-```\n-\n-**Note**: This option only takes effect when `where_style` is set to `\"Legacy\"`.\n-\n-See also: [`where_density`](#where_density), [`where_layout`](#where_layout), [`where_style`](#where_style).\n-\n-## `where_style`\n-\n-Overall strategy for where clauses\n-\n-- **Default value**: `\"Rfc\"`\n-- **Possible values**: `\"Rfc\"`, `\"Legacy\"`\n-\n-#### `\"Rfc\"` (default):\n-\n-```rust\n-fn lorem<Ipsum, Dolor, Sit, Amet>() -> T\n-where\n-    Ipsum: Eq,\n-    Dolor: Eq,\n-    Sit: Eq,\n-    Amet: Eq,\n-{\n-    // body\n-}\n-```\n-\n-#### `\"Legacy\"`:\n-\n-```rust\n-fn lorem<Ipsum, Dolor, Sit, Amet>() -> T\n-    where Ipsum: Eq,\n-          Dolor: Eq,\n-          Sit: Eq,\n-          Amet: Eq\n-{\n-    // body\n-}\n-```\n-\n-See also: [`where_density`](#where_density), [`where_layout`](#where_layout), [`where_pred_indent`](#where_pred_indent).\n+See also: [`where_density`](#where_density), [`indent_style`](#indent_style).\n \n ## `wrap_comments`\n "}, {"sha": "7c87391fef7a5f6e7e911a35147707a819d51ee4", "filename": "legacy-rustfmt.toml", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/legacy-rustfmt.toml", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/legacy-rustfmt.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/legacy-rustfmt.toml?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,8 +1,3 @@\n-fn_args_indent = \"Visual\"\n-array_indent = \"Visual\"\n-control_style = \"Legacy\"\n-where_style = \"Legacy\"\n-generics_indent = \"Visual\"\n-fn_call_indent = \"Visual\"\n+indent_style = \"Visual\"\n combine_control_expr = false\n fn_args_paren_newline = true"}, {"sha": "1a3586cd0441081add7ab3dec4edf780ed578e58", "filename": "src/chains.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -87,7 +87,7 @@ pub fn rewrite_chain(expr: &ast::Expr, context: &RewriteContext, shape: Shape) -\n \n     // Parent is the first item in the chain, e.g., `foo` in `foo.bar.baz()`.\n     let parent_shape = if is_block_expr(context, &parent, \"\\n\") {\n-        match context.config.chain_indent() {\n+        match context.config.indent_style() {\n             IndentStyle::Visual => shape.visual_indent(0),\n             IndentStyle::Block => shape,\n         }\n@@ -105,10 +105,10 @@ pub fn rewrite_chain(expr: &ast::Expr, context: &RewriteContext, shape: Shape) -\n     let (nested_shape, extend) = if !parent_rewrite_contains_newline && is_continuable(&parent) {\n         (\n             chain_indent(context, shape.add_offset(parent_rewrite.len())),\n-            context.config.chain_indent() == IndentStyle::Visual || is_small_parent,\n+            context.config.indent_style() == IndentStyle::Visual || is_small_parent,\n         )\n     } else if is_block_expr(context, &parent, &parent_rewrite) {\n-        match context.config.chain_indent() {\n+        match context.config.indent_style() {\n             // Try to put the first child on the same line with parent's last line\n             IndentStyle::Block => (parent_shape.block_indent(context.config.tab_spaces()), true),\n             // The parent is a block, so align the rest of the chain with the closing\n@@ -127,7 +127,7 @@ pub fn rewrite_chain(expr: &ast::Expr, context: &RewriteContext, shape: Shape) -\n     let first_child_shape = if extend {\n         let overhead = last_line_width(&parent_rewrite);\n         let offset = trimmed_last_line_width(&parent_rewrite) + prefix_try_num;\n-        match context.config.chain_indent() {\n+        match context.config.indent_style() {\n             IndentStyle::Visual => parent_shape.offset_left(overhead)?,\n             IndentStyle::Block => parent_shape.block().offset_left(offset)?,\n         }\n@@ -172,7 +172,7 @@ pub fn rewrite_chain(expr: &ast::Expr, context: &RewriteContext, shape: Shape) -\n         } else {\n             other_child_shape\n         };\n-        match context.config.chain_indent() {\n+        match context.config.indent_style() {\n             IndentStyle::Visual => last_shape.sub_width(shape.rhs_overhead(context.config))?,\n             IndentStyle::Block => last_shape,\n         }\n@@ -262,7 +262,7 @@ pub fn rewrite_chain(expr: &ast::Expr, context: &RewriteContext, shape: Shape) -\n \n     let first_connector = if is_small_parent || fits_single_line\n         || last_line_extendable(&parent_rewrite)\n-        || context.config.chain_indent() == IndentStyle::Visual\n+        || context.config.indent_style() == IndentStyle::Visual\n     {\n         \"\"\n     } else {\n@@ -272,7 +272,7 @@ pub fn rewrite_chain(expr: &ast::Expr, context: &RewriteContext, shape: Shape) -\n     let result = if is_small_parent && rewrites.len() > 1 {\n         let second_connector = if fits_single_line || rewrites[1] == \"?\"\n             || last_line_extendable(&rewrites[0])\n-            || context.config.chain_indent() == IndentStyle::Visual\n+            || context.config.indent_style() == IndentStyle::Visual\n         {\n             \"\"\n         } else {\n@@ -295,7 +295,7 @@ pub fn rewrite_chain(expr: &ast::Expr, context: &RewriteContext, shape: Shape) -\n         )\n     };\n     let result = format!(\"{}{}\", result, repeat_try(suffix_try_num));\n-    if context.config.chain_indent() == IndentStyle::Visual {\n+    if context.config.indent_style() == IndentStyle::Visual {\n         wrap_str(result, context.config.max_width(), shape)\n     } else {\n         Some(result)\n@@ -381,7 +381,7 @@ fn make_subexpr_list(expr: &ast::Expr, context: &RewriteContext) -> (ast::Expr,\n }\n \n fn chain_indent(context: &RewriteContext, shape: Shape) -> Shape {\n-    match context.config.chain_indent() {\n+    match context.config.indent_style() {\n         IndentStyle::Visual => shape.visual_indent(0),\n         IndentStyle::Block => shape\n             .block_indent(context.config.tab_spaces())"}, {"sha": "b946d006a0b0afa356db745349cfa633a9d37697", "filename": "src/config.rs", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -40,11 +40,6 @@ macro_rules! configuration_option_enum{\n     }\n }\n \n-configuration_option_enum! { Style:\n-    Rfc, // Follow the style RFCs style.\n-    Legacy, // Follow the traditional Rustfmt style.\n-}\n-\n configuration_option_enum! { NewlineStyle:\n     Windows, // \\r\\n\n     Unix, // \\n\n@@ -521,6 +516,7 @@ pub fn get_toml_path(dir: &Path) -> Result<Option<PathBuf>, Error> {\n \n \n create_config! {\n+    indent_style: IndentStyle, IndentStyle::Block, false, \"How do we indent expressions or items.\";\n     unstable_features: bool, false, true,\n             \"Enables unstable features. Only available on nightly channel\";\n     verbose: bool, false, false, \"Use verbose output\";\n@@ -545,7 +541,6 @@ create_config! {\n     fn_brace_style: BraceStyle, BraceStyle::SameLineWhere, false, \"Brace style for functions\";\n     item_brace_style: BraceStyle, BraceStyle::SameLineWhere, false,\n         \"Brace style for structs and enums\";\n-    control_style: Style, Style::Rfc, false, \"Indent style for control flow statements\";\n     control_brace_style: ControlBraceStyle, ControlBraceStyle::AlwaysSameLine, false,\n         \"Brace style for control flow constructs\";\n     impl_empty_single_line: bool, true, false, \"Put empty-body implementations on a single line\";\n@@ -559,35 +554,25 @@ create_config! {\n         \"Location of return type in function declaration\";\n     fn_args_paren_newline: bool, false, false, \"If function argument parenthesis goes on a newline\";\n     fn_args_density: Density, Density::Tall, false, \"Argument density in functions\";\n-    fn_args_indent: IndentStyle, IndentStyle::Block, false,\n-        \"Layout of function arguments and tuple structs\";\n-    array_indent: IndentStyle, IndentStyle::Block, false, \"Indent on arrays\";\n     array_width: usize, 60, false,\n         \"Maximum width of an array literal before falling back to vertical formatting\";\n     array_horizontal_layout_threshold: usize, 0, false,\n         \"How many elements array must have before rustfmt uses horizontal layout.\";\n     type_punctuation_density: TypeDensity, TypeDensity::Wide, false,\n         \"Determines if '+' or '=' are wrapped in spaces in the punctuation of types\";\n-    where_style: Style, Style::Rfc, false, \"Overall strategy for where clauses\";\n     // TODO:\n     // 1. Should we at least try to put the where clause on the same line as the rest of the\n     // function decl?\n     // 2. Currently options `Tall` and `Vertical` produce the same output.\n     where_density: Density, Density::Vertical, false, \"Density of a where clause\";\n     where_single_line: bool, false, false, \"To force single line where layout\";\n     where_layout: ListTactic, ListTactic::Vertical, false, \"Element layout inside a where clause\";\n-    where_pred_indent: IndentStyle, IndentStyle::Visual, false,\n-        \"Indentation style of a where predicate\";\n-    generics_indent: IndentStyle, IndentStyle::Block, false, \"Indentation of generics\";\n-    struct_lit_indent: IndentStyle, IndentStyle::Block, false, \"Style of struct definition\";\n     struct_lit_multiline_style: MultilineStyle, MultilineStyle::PreferSingle, false,\n         \"Multiline style on literal structs\";\n-    fn_call_indent: IndentStyle, IndentStyle::Block, false, \"Indentation for function calls, etc.\";\n     report_todo: ReportTactic, ReportTactic::Never, false,\n         \"Report all, none or unnumbered occurrences of TODO in source file comments\";\n     report_fixme: ReportTactic, ReportTactic::Never, false,\n         \"Report all, none or unnumbered occurrences of FIXME in source file comments\";\n-    chain_indent: IndentStyle, IndentStyle::Block, false, \"Indentation of chain\";\n     chain_width: usize, 60, false, \"Maximum length of a chain to fit on a single line\";\n     chain_split_single_child: bool, false, false, \"Split a chain with a single child if its length \\\n                                             exceeds `chain_width`\";"}, {"sha": "5aee87dbbb737725900af41ba96735ca323dde86", "filename": "src/expr.rs", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -21,7 +21,7 @@ use closures;\n use codemap::{LineRangeUtils, SpanUtils};\n use comment::{combine_strs_with_missing_comments, contains_comment, recover_comment_removed,\n               rewrite_comment, rewrite_missing_comment, FindUncommented};\n-use config::{Config, ControlBraceStyle, IndentStyle, MultilineStyle, Style};\n+use config::{Config, ControlBraceStyle, IndentStyle, MultilineStyle};\n use lists::{definitive_tactic, itemize_list, shape_for_tactic, struct_lit_formatting,\n             struct_lit_shape, struct_lit_tactic, write_list, DefinitiveListTactic, ListFormatting,\n             ListItem, ListTactic, Separator, SeparatorPlace, SeparatorTactic};\n@@ -366,11 +366,11 @@ where\n \n     // We have to use multiple lines.\n     // Re-evaluate the rhs because we have more space now:\n-    let mut rhs_shape = match context.config.control_style() {\n-        Style::Legacy => shape\n+    let mut rhs_shape = match context.config.indent_style() {\n+        IndentStyle::Visual => shape\n             .sub_width(pp.suffix.len() + pp.prefix.len())?\n             .visual_indent(pp.prefix.len()),\n-        Style::Rfc => {\n+        IndentStyle::Block => {\n             // Try to calculate the initial constraint on the right hand side.\n             let rhs_overhead = shape.rhs_overhead(context.config);\n             Shape::indented(shape.indent.block_indent(context.config), context.config)\n@@ -415,7 +415,7 @@ where\n         1 // \"[\"\n     };\n \n-    let nested_shape = match context.config.array_indent() {\n+    let nested_shape = match context.config.indent_style() {\n         IndentStyle::Block => shape\n             .block()\n             .block_indent(context.config.tab_spaces())\n@@ -450,7 +450,7 @@ where\n         .iter()\n         .any(|li| li.item.as_ref().map(|s| s.len() > 10).unwrap_or(false));\n \n-    let mut tactic = match context.config.array_indent() {\n+    let mut tactic = match context.config.indent_style() {\n         IndentStyle::Block => {\n             // FIXME wrong shape in one-line case\n             match shape.width.checked_sub(2 * bracket_size) {\n@@ -473,7 +473,7 @@ where\n             DefinitiveListTactic::Mixed\n         },\n     };\n-    let ends_with_newline = tactic.ends_with_newline(context.config.array_indent());\n+    let ends_with_newline = tactic.ends_with_newline(context.config.indent_style());\n     if context.config.array_horizontal_layout_threshold() > 0\n         && items.len() > context.config.array_horizontal_layout_threshold()\n     {\n@@ -485,7 +485,7 @@ where\n         separator: \",\",\n         trailing_separator: if trailing_comma {\n             SeparatorTactic::Always\n-        } else if context.inside_macro || context.config.array_indent() == IndentStyle::Visual {\n+        } else if context.inside_macro || context.config.indent_style() == IndentStyle::Visual {\n             SeparatorTactic::Never\n         } else {\n             SeparatorTactic::Vertical\n@@ -498,7 +498,7 @@ where\n     };\n     let list_str = write_list(&items, &fmt)?;\n \n-    let result = if context.config.array_indent() == IndentStyle::Visual\n+    let result = if context.config.indent_style() == IndentStyle::Visual\n         || tactic == DefinitiveListTactic::Horizontal\n     {\n         if context.config.spaces_within_square_brackets() && !list_str.is_empty() {\n@@ -677,9 +677,9 @@ pub fn rewrite_cond(context: &RewriteContext, expr: &ast::Expr, shape: Shape) ->\n     match expr.node {\n         ast::ExprKind::Match(ref cond, _) => {\n             // `match `cond` {`\n-            let cond_shape = match context.config.control_style() {\n-                Style::Legacy => shape.shrink_left(6).and_then(|s| s.sub_width(2))?,\n-                Style::Rfc => shape.offset_left(8)?,\n+            let cond_shape = match context.config.indent_style() {\n+                IndentStyle::Visual => shape.shrink_left(6).and_then(|s| s.sub_width(2))?,\n+                IndentStyle::Block => shape.offset_left(8)?,\n             };\n             cond.rewrite(context, cond_shape)\n         }\n@@ -922,9 +922,9 @@ impl<'a> ControlFlow<'a> {\n \n         let pat_expr_string = match self.cond {\n             Some(cond) => {\n-                let cond_shape = match context.config.control_style() {\n-                    Style::Legacy => constr_shape.shrink_left(offset)?,\n-                    Style::Rfc => constr_shape.offset_left(offset)?,\n+                let cond_shape = match context.config.indent_style() {\n+                    IndentStyle::Visual => constr_shape.shrink_left(offset)?,\n+                    IndentStyle::Block => constr_shape.offset_left(offset)?,\n                 };\n                 rewrite_pat_expr(\n                     context,\n@@ -951,7 +951,7 @@ impl<'a> ControlFlow<'a> {\n             .max_width()\n             .checked_sub(constr_shape.used_width() + offset + brace_overhead)\n             .unwrap_or(0);\n-        let force_newline_brace = context.config.control_style() == Style::Rfc\n+        let force_newline_brace = context.config.indent_style() == IndentStyle::Block\n             && (pat_expr_string.contains('\\n') || pat_expr_string.len() > one_line_budget)\n             && !last_line_extendable(&pat_expr_string);\n \n@@ -1236,9 +1236,9 @@ fn rewrite_match(\n         ..shape\n     };\n     // 6 = `match `\n-    let cond_shape = match context.config.control_style() {\n-        Style::Legacy => cond_shape.shrink_left(6)?,\n-        Style::Rfc => cond_shape.offset_left(6)?,\n+    let cond_shape = match context.config.indent_style() {\n+        IndentStyle::Visual => cond_shape.shrink_left(6)?,\n+        IndentStyle::Block => cond_shape.offset_left(6)?,\n     };\n     let cond_str = cond.rewrite(context, cond_shape)?;\n     let alt_block_sep = String::from(\"\\n\") + &shape.indent.block_only().to_string(context.config);\n@@ -1809,7 +1809,7 @@ where\n     let used_width = extra_offset(callee_str, shape);\n     let one_line_width = shape.width.checked_sub(used_width + 2 * paren_overhead)?;\n \n-    let nested_shape = shape_from_fn_call_indent(\n+    let nested_shape = shape_from_indent_style(\n         context,\n         shape,\n         used_width + 2 * paren_overhead,\n@@ -2058,7 +2058,7 @@ pub fn can_be_overflowed_expr(context: &RewriteContext, expr: &ast::Expr, args_l\n     match expr.node {\n         ast::ExprKind::Match(..) => {\n             (context.use_block_indent() && args_len == 1)\n-                || (context.config.fn_call_indent() == IndentStyle::Visual && args_len > 1)\n+                || (context.config.indent_style() == IndentStyle::Visual && args_len > 1)\n         }\n         ast::ExprKind::If(..) |\n         ast::ExprKind::IfLet(..) |\n@@ -2070,7 +2070,7 @@ pub fn can_be_overflowed_expr(context: &RewriteContext, expr: &ast::Expr, args_l\n         }\n         ast::ExprKind::Block(..) | ast::ExprKind::Closure(..) => {\n             context.use_block_indent()\n-                || context.config.fn_call_indent() == IndentStyle::Visual && args_len > 1\n+                || context.config.indent_style() == IndentStyle::Visual && args_len > 1\n         }\n         ast::ExprKind::Array(..) |\n         ast::ExprKind::Call(..) |\n@@ -2319,7 +2319,7 @@ fn rewrite_struct_lit<'a>(\n     let fields_str = wrap_struct_field(context, &fields_str, shape, v_shape, one_line_width);\n     Some(format!(\"{} {{{}}}\", path_str, fields_str))\n \n-    // FIXME if context.config.struct_lit_indent() == Visual, but we run out\n+    // FIXME if context.config.indent_style() == Visual, but we run out\n     // of space, we should fall back to BlockIndent.\n }\n \n@@ -2330,7 +2330,7 @@ pub fn wrap_struct_field(\n     nested_shape: Shape,\n     one_line_width: usize,\n ) -> String {\n-    if context.config.struct_lit_indent() == IndentStyle::Block\n+    if context.config.indent_style() == IndentStyle::Block\n         && (fields_str.contains('\\n')\n             || context.config.struct_lit_multiline_style() == MultilineStyle::ForceMulti\n             || fields_str.len() > one_line_width)\n@@ -2401,7 +2401,7 @@ pub fn rewrite_field(\n     }\n }\n \n-fn shape_from_fn_call_indent(\n+fn shape_from_indent_style(\n     context: &RewriteContext,\n     shape: Shape,\n     overhead: usize,"}, {"sha": "d5e02dde6e551a33f5bc985df6a8a77d99d1a433", "filename": "src/items.rs", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -22,7 +22,7 @@ use spanned::Spanned;\n use codemap::{LineRangeUtils, SpanUtils};\n use comment::{combine_strs_with_missing_comments, contains_comment, recover_comment_removed,\n               recover_missing_comment_in_span, rewrite_missing_comment, FindUncommented};\n-use config::{BraceStyle, Config, Density, IndentStyle, ReturnIndent, Style};\n+use config::{BraceStyle, Config, Density, IndentStyle, ReturnIndent};\n use expr::{format_expr, is_empty_block, is_simple_block_stmt, rewrite_assign_rhs,\n            rewrite_call_inner, ExprType};\n use lists::{definitive_tactic, itemize_list, write_list, DefinitiveListTactic, ListFormatting,\n@@ -815,9 +815,9 @@ fn format_impl_ref_and_type(\n             result.push_str(\"for \");\n         }\n         let budget = context.budget(last_line_width(&result));\n-        let type_offset = match context.config.where_style() {\n-            Style::Legacy => new_line_offset + trait_ref_overhead,\n-            Style::Rfc => new_line_offset,\n+        let type_offset = match context.config.indent_style() {\n+            IndentStyle::Visual => new_line_offset + trait_ref_overhead,\n+            IndentStyle::Block => new_line_offset,\n         };\n         result.push_str(&*self_ty\n             .rewrite(context, Shape::legacy(budget, type_offset))?);\n@@ -974,8 +974,8 @@ pub fn format_trait(context: &RewriteContext, item: &ast::Item, offset: Indent)\n         let has_body = !trait_items.is_empty();\n \n         let where_density = if (context.config.where_density() == Density::Compressed\n-            && (!result.contains('\\n') || context.config.fn_args_indent() == IndentStyle::Block))\n-            || (context.config.fn_args_indent() == IndentStyle::Block && result.is_empty())\n+            && (!result.contains('\\n') || context.config.indent_style() == IndentStyle::Block))\n+            || (context.config.indent_style() == IndentStyle::Block && result.is_empty())\n             || (context.config.where_density() == Density::CompressedIfEmpty && !has_body\n                 && !result.contains('\\n'))\n         {\n@@ -1880,13 +1880,13 @@ fn rewrite_fn_base(\n         } else if context.config.fn_args_paren_newline() {\n             result.push('\\n');\n             result.push_str(&arg_indent.to_string(context.config));\n-            if context.config.fn_args_indent() == IndentStyle::Visual {\n+            if context.config.indent_style() == IndentStyle::Visual {\n                 arg_indent = arg_indent + 1; // extra space for `(`\n             }\n             result.push('(');\n         } else {\n             result.push_str(\"(\");\n-            if context.config.fn_args_indent() == IndentStyle::Visual {\n+            if context.config.indent_style() == IndentStyle::Visual {\n                 result.push('\\n');\n                 result.push_str(&arg_indent.to_string(context.config));\n             }\n@@ -1933,7 +1933,7 @@ fn rewrite_fn_base(\n         generics_str.contains('\\n'),\n     )?;\n \n-    let put_args_in_block = match context.config.fn_args_indent() {\n+    let put_args_in_block = match context.config.indent_style() {\n         IndentStyle::Block => arg_str.contains('\\n') || arg_str.len() > one_line_budget,\n         _ => false,\n     } && !fd.inputs.is_empty();\n@@ -1974,7 +1974,7 @@ fn rewrite_fn_base(\n \n     // Return type.\n     if let ast::FunctionRetTy::Ty(..) = fd.output {\n-        let ret_should_indent = match context.config.fn_args_indent() {\n+        let ret_should_indent = match context.config.indent_style() {\n             // If our args are block layout then we surely must have space.\n             IndentStyle::Block if put_args_in_block || fd.inputs.is_empty() => false,\n             _ if args_last_line_contains_comment => false,\n@@ -2266,7 +2266,7 @@ fn rewrite_args(\n         .and_then(|item| item.post_comment.as_ref())\n         .map_or(false, |s| s.trim().starts_with(\"//\"));\n \n-    let (indent, trailing_comma) = match context.config.fn_args_indent() {\n+    let (indent, trailing_comma) = match context.config.indent_style() {\n         IndentStyle::Block if fits_in_one_line => {\n             (indent.block_indent(context.config), SeparatorTactic::Never)\n         }\n@@ -2303,7 +2303,7 @@ fn rewrite_args(\n         },\n         separator_place: SeparatorPlace::Back,\n         shape: Shape::legacy(budget, indent),\n-        ends_with_newline: tactic.ends_with_newline(context.config.fn_args_indent()),\n+        ends_with_newline: tactic.ends_with_newline(context.config.indent_style()),\n         preserve_newline: true,\n         config: context.config,\n     };\n@@ -2353,7 +2353,7 @@ fn compute_budgets_for_args(\n \n         if one_line_budget > 0 {\n             // 4 = \"() {\".len()\n-            let (indent, multi_line_budget) = match context.config.fn_args_indent() {\n+            let (indent, multi_line_budget) = match context.config.indent_style() {\n                 IndentStyle::Block => {\n                     let indent = indent.block_indent(context.config);\n                     (indent, context.budget(indent.width() + 1))\n@@ -2371,7 +2371,7 @@ fn compute_budgets_for_args(\n \n     // Didn't work. we must force vertical layout and put args on a newline.\n     let new_indent = indent.block_indent(context.config);\n-    let used_space = match context.config.fn_args_indent() {\n+    let used_space = match context.config.indent_style() {\n         // 1 = `,`\n         IndentStyle::Block => new_indent.width() + 1,\n         // Account for `)` and possibly ` {`.\n@@ -2464,7 +2464,7 @@ fn rewrite_generics_inner(\n }\n \n pub fn generics_shape_from_config(config: &Config, shape: Shape, offset: usize) -> Option<Shape> {\n-    match config.generics_indent() {\n+    match config.indent_style() {\n         IndentStyle::Visual => shape.visual_indent(1 + offset).sub_width(offset + 2),\n         IndentStyle::Block => {\n             // 1 = \",\"\n@@ -2497,14 +2497,14 @@ where\n     let fmt = ListFormatting {\n         tactic: tactic,\n         separator: \",\",\n-        trailing_separator: if context.config.generics_indent() == IndentStyle::Visual {\n+        trailing_separator: if context.config.indent_style() == IndentStyle::Visual {\n             SeparatorTactic::Never\n         } else {\n             context.config.trailing_comma()\n         },\n         separator_place: SeparatorPlace::Back,\n         shape: shape,\n-        ends_with_newline: tactic.ends_with_newline(context.config.generics_indent()),\n+        ends_with_newline: tactic.ends_with_newline(context.config.indent_style()),\n         preserve_newline: true,\n         config: context.config,\n     };\n@@ -2523,7 +2523,7 @@ pub fn wrap_generics_with_angle_brackets(\n     list_str: &str,\n     list_offset: Indent,\n ) -> String {\n-    if context.config.generics_indent() == IndentStyle::Block\n+    if context.config.indent_style() == IndentStyle::Block\n         && (list_str.contains('\\n') || list_str.ends_with(','))\n     {\n         format!(\n@@ -2674,7 +2674,7 @@ fn rewrite_where_clause(\n         return Some(String::new());\n     }\n \n-    if context.config.where_style() == Style::Rfc {\n+    if context.config.indent_style() == IndentStyle::Block {\n         return rewrite_where_clause_rfc_style(\n             context,\n             where_clause,\n@@ -2689,12 +2689,12 @@ fn rewrite_where_clause(\n \n     let extra_indent = Indent::new(context.config.tab_spaces(), 0);\n \n-    let offset = match context.config.where_pred_indent() {\n+    let offset = match context.config.indent_style() {\n         IndentStyle::Block => shape.indent + extra_indent.block_indent(context.config),\n         // 6 = \"where \".len()\n         IndentStyle::Visual => shape.indent + extra_indent + 6,\n     };\n-    // FIXME: if where_pred_indent != Visual, then the budgets below might\n+    // FIXME: if indent_style != Visual, then the budgets below might\n     // be out by a char or two.\n \n     let budget = context.config.max_width() - offset.width();\n@@ -2737,7 +2737,7 @@ fn rewrite_where_clause(\n         trailing_separator: comma_tactic,\n         separator_place: SeparatorPlace::Back,\n         shape: Shape::legacy(budget, offset),\n-        ends_with_newline: tactic.ends_with_newline(context.config.where_pred_indent()),\n+        ends_with_newline: tactic.ends_with_newline(context.config.indent_style()),\n         preserve_newline: true,\n         config: context.config,\n     };"}, {"sha": "d7098d3a3974567bbb9f9f6d4525283f242ffca2", "filename": "src/lists.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/src%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/src%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flists.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -737,7 +737,7 @@ pub fn struct_lit_shape(\n     prefix_width: usize,\n     suffix_width: usize,\n ) -> Option<(Option<Shape>, Shape)> {\n-    let v_shape = match context.config.struct_lit_indent() {\n+    let v_shape = match context.config.indent_style() {\n         IndentStyle::Visual => shape\n             .visual_indent(0)\n             .shrink_left(prefix_width)?\n@@ -766,7 +766,7 @@ pub fn struct_lit_tactic(\n     items: &[ListItem],\n ) -> DefinitiveListTactic {\n     if let Some(h_shape) = h_shape {\n-        let prelim_tactic = match (context.config.struct_lit_indent(), items.len()) {\n+        let prelim_tactic = match (context.config.indent_style(), items.len()) {\n             (IndentStyle::Visual, 1) => ListTactic::HorizontalVertical,\n             _ => context.config.struct_lit_multiline_style().to_list_tactic(),\n         };\n@@ -797,7 +797,7 @@ pub fn struct_lit_formatting<'a>(\n     context: &'a RewriteContext,\n     force_no_trailing_comma: bool,\n ) -> ListFormatting<'a> {\n-    let ends_with_newline = context.config.struct_lit_indent() != IndentStyle::Visual\n+    let ends_with_newline = context.config.indent_style() != IndentStyle::Visual\n         && tactic == DefinitiveListTactic::Vertical;\n     ListFormatting {\n         tactic: tactic,"}, {"sha": "1307f6731ff0e30e6c2c36d8344fe3b9735d906e", "filename": "src/rewrite.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/src%2Frewrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/src%2Frewrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frewrite.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -43,7 +43,7 @@ impl<'a> RewriteContext<'a> {\n \n     /// Return true if we should use block indent style for rewriting function call.\n     pub fn use_block_indent(&self) -> bool {\n-        self.config.fn_call_indent() == IndentStyle::Block || self.use_block\n+        self.config.indent_style() == IndentStyle::Block || self.use_block\n     }\n \n     pub fn budget(&self, used_width: usize) -> usize {"}, {"sha": "d2e782db1aa71ee6bcf829a66bb9b812cc18e312", "filename": "src/types.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -18,7 +18,7 @@ use syntax::symbol::keywords;\n \n use spanned::Spanned;\n use codemap::SpanUtils;\n-use config::{IndentStyle, Style, TypeDensity};\n+use config::{IndentStyle, TypeDensity};\n use expr::{rewrite_pair, rewrite_tuple, rewrite_unary_prefix, wrap_args_with_parens, PairParts};\n use items::{format_generics_item_list, generics_shape_from_config};\n use lists::{definitive_tactic, itemize_list, write_list, ListFormatting, ListTactic, Separator,\n@@ -302,7 +302,7 @@ where\n     // 2 for ()\n     let budget = shape.width.checked_sub(2)?;\n     // 1 for (\n-    let offset = match context.config.fn_args_indent() {\n+    let offset = match context.config.indent_style() {\n         IndentStyle::Block => {\n             shape\n                 .block()\n@@ -357,14 +357,14 @@ where\n         },\n         separator_place: SeparatorPlace::Back,\n         shape: list_shape,\n-        ends_with_newline: tactic.ends_with_newline(context.config.fn_call_indent()),\n+        ends_with_newline: tactic.ends_with_newline(context.config.indent_style()),\n         preserve_newline: true,\n         config: context.config,\n     };\n \n     let list_str = write_list(&item_vec, &fmt)?;\n \n-    let ty_shape = match context.config.fn_args_indent() {\n+    let ty_shape = match context.config.indent_style() {\n         IndentStyle::Block => shape.block().block_indent(context.config.tab_spaces()),\n         IndentStyle::Visual => shape.block_left(4)?,\n     };\n@@ -447,9 +447,9 @@ impl Rewrite for ast::WherePredicate {\n                     }\n                 } else {\n                     let used_width = type_str.len() + colon.len();\n-                    let ty_shape = match context.config.where_style() {\n-                        Style::Legacy => shape.block_left(used_width)?,\n-                        Style::Rfc => shape,\n+                    let ty_shape = match context.config.indent_style() {\n+                        IndentStyle::Visual => shape.block_left(used_width)?,\n+                        IndentStyle::Block => shape,\n                     };\n                     let bounds = bounds\n                         .iter()"}, {"sha": "264591bc400856ecae9047e93e584506e1a1a6c2", "filename": "tests/config/small_tabs.toml", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fconfig%2Fsmall_tabs.toml", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fconfig%2Fsmall_tabs.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fconfig%2Fsmall_tabs.toml?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -6,13 +6,10 @@ fn_brace_style = \"SameLineWhere\"\n fn_return_indent = \"WithArgs\"\n fn_args_paren_newline = true\n fn_args_density = \"Tall\"\n-fn_args_indent = \"Visual\"\n where_density = \"Tall\"\n where_layout = \"Vertical\"\n-where_pred_indent = \"Visual\"\n-generics_indent = \"Visual\"\n trailing_comma = \"Vertical\"\n-struct_lit_indent = \"Block\"\n+indent_style = \"Block\"\n report_todo = \"Always\"\n report_fixme = \"Never\"\n reorder_imports = false"}, {"sha": "737dd5aeb6a7bd1748df777f2dcc7523212f5315", "filename": "tests/source/big-impl-rfc.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fbig-impl-rfc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fbig-impl-rfc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fbig-impl-rfc.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,7 +1,4 @@\n-// rustfmt-fn_args_indent: Block\n-// rustfmt-fn_call_indent: Block\n-// rustfmt-generics_indent: Block\n-// rustfmt-where_style: Rfc\n+// rustfmt-indent_style: Block\n \n // #1357\n impl<"}, {"sha": "6a9a40cb98f1988650963833c73362e87b918622", "filename": "tests/source/chains-indent-tabbed.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fchains-indent-tabbed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fchains-indent-tabbed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fchains-indent-tabbed.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-chain_indent: Block\n+// rustfmt-indent_style: Block\n \n fn test() {\n     let x = my_long_function().my_even_longer_function().my_nested_function().some_random_name().another_function().do_it();"}, {"sha": "8fdd3c4cabf3a490c7453d35b070920a653d17d5", "filename": "tests/source/chains-indent-visual.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fchains-indent-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fchains-indent-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fchains-indent-visual.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-chain_indent: Visual\n+// rustfmt-indent_style: Visual\n \n fn test() {\n     let x = my_long_function().my_even_longer_function().my_nested_function().some_random_name().another_function().do_it();"}, {"sha": "99dfa921a71eabc1002806e07255d8839c0910b8", "filename": "tests/source/chains-visual.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fchains-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fchains-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fchains-visual.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,6 +1,6 @@\n // rustfmt-normalize_comments: true\n // rustfmt-single_line_if_else_max_width: 0\n-// rustfmt-chain_indent: Visual\n+// rustfmt-indent_style: Visual\n // Test chain formatting.\n \n fn main() {"}, {"sha": "c1260592083a67763511d2ad27c424415ab20b1a", "filename": "tests/source/closure-block-inside-macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fclosure-block-inside-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fclosure-block-inside-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fclosure-block-inside-macro.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-fn_call_indent: Block\n+// rustfmt-indent_style: Block\n \n // #1547\n fuzz_target!(|data: &[u8]| if let Some(first) = data.first() {"}, {"sha": "3036f3598ef28e50bc37eb73b97c7c7418e48fa7", "filename": "tests/source/configs-array_horizontal_layout_threshold-1000-visual.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-array_horizontal_layout_threshold-1000-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-array_horizontal_layout_threshold-1000-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-array_horizontal_layout_threshold-1000-visual.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,5 +1,5 @@\n // rustfmt-array_horizontal_layout_threshold: 1000\n-// rustfmt-array_indent: Visual\n+// rustfmt-indent_style: Visual\n \n const ARRAY: [u8; 2048] =\n     [99, 72, 48, 104, 44, 112, 38, 62, 40, 93, 23, 24, 32, 21, 102, 76, 65, 29, 116,"}, {"sha": "8404f65f471c3608096375a6baf859eb73ea535a", "filename": "tests/source/configs-array_indent-block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-array_indent-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-array_indent-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-array_indent-block.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-array_indent: Block\n+// rustfmt-indent_style: Block\n // Array layout\n \n fn main() {"}, {"sha": "05bbf00b1d27d5acec8136683fd5ca9c42b32376", "filename": "tests/source/configs-array_indent-visual.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-array_indent-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-array_indent-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-array_indent-visual.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-array_indent: Visual\n+// rustfmt-indent_style: Visual\n // Array layout\n \n fn main() {"}, {"sha": "41d91469114c9afec7971da29a9635027bdb109c", "filename": "tests/source/configs-chain_indent-block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-chain_indent-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-chain_indent-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-chain_indent-block.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-chain_indent: Block\n+// rustfmt-indent_style: Block\n // Chain indent\n \n fn main() {"}, {"sha": "b74948753980354d1424e5468121e4ffac2be237", "filename": "tests/source/configs-chain_indent-visual.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-chain_indent-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-chain_indent-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-chain_indent-visual.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-chain_indent: Visual\n+// rustfmt-indent_style: Visual\n // Chain indent\n \n fn main() {"}, {"sha": "4d2d280a16bc5aca82ca1be6ac7220c7c3f53e83", "filename": "tests/source/configs-fn_args_indent-block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-fn_args_indent-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-fn_args_indent-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-fn_args_indent-block.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-fn_args_indent: Block\n+// rustfmt-indent_style: Block\n // Function arguments layout\n \n fn lorem() {}"}, {"sha": "5aa28a62b9cef0324a279a9f7c53181a04b5b9b0", "filename": "tests/source/configs-fn_args_indent-visual.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-fn_args_indent-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-fn_args_indent-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-fn_args_indent-visual.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-fn_args_indent: Visual\n+// rustfmt-indent_style: Visual\n // Function arguments layout\n \n fn lorem() {}"}, {"sha": "c907ec50d4580dfa1b9dc814789d6c35878d7cca", "filename": "tests/source/configs-fn_call_indent-block-trailing-comma.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-fn_call_indent-block-trailing-comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-fn_call_indent-block-trailing-comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-fn_call_indent-block-trailing-comma.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,5 +1,5 @@\n // rustfmt-error_on_line_overflow: false\n-// rustfmt-fn_call_indent: Block\n+// rustfmt-indent_style: Block\n \n // rustfmt should not add trailing comma when rewriting macro. See #1528.\n fn a() {"}, {"sha": "c82b6b8e38f8316a373fd236be816c18ad63b969", "filename": "tests/source/configs-fn_call_indent-block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-fn_call_indent-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-fn_call_indent-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-fn_call_indent-block.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-fn_call_indent: Block\n+// rustfmt-indent_style: Block\n // Function call style\n \n fn main() {"}, {"sha": "9738d397dbf6305182ad58152cbf74fcf5b3d4a5", "filename": "tests/source/configs-fn_call_indent-visual-trailing-comma.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-fn_call_indent-visual-trailing-comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-fn_call_indent-visual-trailing-comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-fn_call_indent-visual-trailing-comma.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,5 +1,5 @@\n // rustfmt-error_on_line_overflow: false\n-// rustfmt-fn_call_indent: Visual\n+// rustfmt-indent_style: Visual\n \n // rustfmt should not add trailing comma when rewriting macro. See #1528.\n fn a() {"}, {"sha": "9a679d6bb4c98d863dcdbb2c08fc7745fe5188fc", "filename": "tests/source/configs-fn_call_indent-visual.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-fn_call_indent-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-fn_call_indent-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-fn_call_indent-visual.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-fn_call_indent: Visual\n+// rustfmt-indent_style: Visual\n // Function call style\n \n fn main() {"}, {"sha": "e7db326155686c93e4a1b26a425b123b1b40a3f2", "filename": "tests/source/configs-fn_call_width-zero.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-fn_call_width-zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-fn_call_width-zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-fn_call_width-zero.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,5 +1,5 @@\n // rustfmt-fn_call_width: 0\n-// rustfmt-fn_call_indent: block\n+// rustfmt-indent_style: block\n \n // #1508\n fn a() {"}, {"sha": "2cf17be56eff2e2b75a515169308e1b851bd78cd", "filename": "tests/source/configs-generics_indent-block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-generics_indent-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-generics_indent-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-generics_indent-block.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-generics_indent: Block\n+// rustfmt-indent_style: Block\n // Generics indent\n \n fn lorem<Ipsum: Eq = usize, Dolor: Eq = usize, Sit: Eq = usize, Amet: Eq = usize, Adipiscing: Eq = usize, Consectetur: Eq = usize, Elit: Eq = usize>(ipsum: Ipsum, dolor: Dolor, sit: Sit, amet: Amet, adipiscing: Adipiscing, consectetur: Consectetur, elit: Elit) -> T {"}, {"sha": "1f910d32d87a06746a7a951893346ce4a4da4b25", "filename": "tests/source/configs-generics_indent-visual.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-generics_indent-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-generics_indent-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-generics_indent-visual.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-generics_indent: Visual\n+// rustfmt-indent_style: Visual\n // Generics indent\n \n fn lorem<Ipsum: Eq = usize, Dolor: Eq = usize, Sit: Eq = usize, Amet: Eq = usize, Adipiscing: Eq = usize, Consectetur: Eq = usize, Elit: Eq = usize>(ipsum: Ipsum, dolor: Dolor, sit: Sit, amet: Amet, adipiscing: Adipiscing, consectetur: Consectetur, elit: Elit) -> T {"}, {"sha": "47a6994f40ca29322a9c2ad0a558d55bede5febd", "filename": "tests/source/configs-struct_lit_indent-block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-struct_lit_indent-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-struct_lit_indent-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-struct_lit_indent-block.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-struct_lit_indent: Block\n+// rustfmt-indent_style: Block\n // Struct literal-style\n \n fn main() {"}, {"sha": "45538e70482d28bd6dd45d85dd1733d0229b1bf5", "filename": "tests/source/configs-struct_lit_indent-visual.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-struct_lit_indent-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-struct_lit_indent-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-struct_lit_indent-visual.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-struct_lit_indent: Visual\n+// rustfmt-indent_style: Visual\n // Struct literal-style\n \n fn main() {"}, {"sha": "5c2667bc2c792d07214643db3a7382b6d29029af", "filename": "tests/source/configs-tab_spaces-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-tab_spaces-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-tab_spaces-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-tab_spaces-2.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,6 +1,6 @@\n // rustfmt-tab_spaces: 2\n // rustfmt-max_width: 30\n-// rustfmt-array_indent: Block\n+// rustfmt-indent_style: Block\n // Tab spaces\n \n fn lorem() {"}, {"sha": "da61bbd42a7c75267c9a7731406b4ff92712487e", "filename": "tests/source/configs-tab_spaces-4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-tab_spaces-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-tab_spaces-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-tab_spaces-4.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,6 +1,6 @@\n // rustfmt-tab_spaces: 4\n // rustfmt-max_width: 30\n-// rustfmt-array_indent: Block\n+// rustfmt-indent_style: Block\n // Tab spaces\n \n fn lorem() {"}, {"sha": "450491f02705e39a1a8355bca09568c849f68fe1", "filename": "tests/source/configs-where_pred_indent-block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-where_pred_indent-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-where_pred_indent-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-where_pred_indent-block.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-where_pred_indent: Block\n+// rustfmt-indent_style: Block\n // Where predicate indent\n \n fn lorem<Ipsum, Dolor, Sit, Amet>() -> T where Ipsum: Eq, Dolor: Eq, Sit: Eq, Amet: Eq {"}, {"sha": "055806b68629e18a4808c87e96b092fda68c4faf", "filename": "tests/source/configs-where_pred_indent-visual.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-where_pred_indent-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-where_pred_indent-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-where_pred_indent-visual.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-where_pred_indent: Visual\n+// rustfmt-indent_style: Visual\n // Where predicate indent\n \n fn lorem<Ipsum, Dolor, Sit, Amet>() -> T where Ipsum: Eq, Dolor: Eq, Sit: Eq, Amet: Eq {"}, {"sha": "f08f5c64460a7c7c4c818e6d7d745f9bedadbaaa", "filename": "tests/source/configs-where_style-default.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-where_style-default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-where_style-default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-where_style-default.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-where_style: Legacy\n+// rustfmt-indent_style: Visual\n // Where style\n \n fn lorem<Ipsum, Dolor, Sit, Amet>() -> T where Ipsum: Eq, Dolor: Eq, Sit: Eq, Amet: Eq {"}, {"sha": "012840be28dccb7bba867e2d26d0073de836f6e9", "filename": "tests/source/configs-where_style-rfc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-where_style-rfc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fconfigs-where_style-rfc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-where_style-rfc.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-where_style: Rfc\n+// rustfmt-indent_style: Block\n // Where style\n \n fn lorem<Ipsum, Dolor, Sit, Amet>() -> T where Ipsum: Eq, Dolor: Eq, Sit: Eq, Amet: Eq {"}, {"sha": "a2e7ac8fc4418c5bbd1e1fe4d53b12b3fe9863b1", "filename": "tests/source/expr-block.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fexpr-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fexpr-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fexpr-block.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,6 +1,4 @@\n-// rustfmt-array_indent: Block\n-// rustfmt-fn_call_indent: Block\n-// rustfmt-control_style: Rfc\n+// rustfmt-indent_style: Block\n // Test expressions with block formatting.\n \n fn arrays() {"}, {"sha": "4fb427a1b1ff8e2161dfcbd8ac410912f6fa182d", "filename": "tests/source/fn-custom-2.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Ffn-custom-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Ffn-custom-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ffn-custom-2.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,5 +1,4 @@\n-// rustfmt-fn_args_indent: Block\n-// rustfmt-generics_indent: Block\n+// rustfmt-indent_style: Block\n // rustfmt-where_layout: Mixed\n // Test different indents.\n "}, {"sha": "efaf559c9daa79b988de3e09a99c52af78cc405d", "filename": "tests/source/fn-custom-3.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Ffn-custom-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Ffn-custom-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ffn-custom-3.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,5 +1,4 @@\n-// rustfmt-fn_args_indent: Block\n-// rustfmt-generics_indent: Block\n+// rustfmt-indent_style: Block\n // rustfmt-where_layout: HorizontalVertical\n // Test different indents.\n "}, {"sha": "668cdce382d38a264134789295710f377ca1ffd3", "filename": "tests/source/fn-custom-4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Ffn-custom-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Ffn-custom-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ffn-custom-4.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-where_pred_indent: Block\n+// rustfmt-indent_style: Block\n // rustfmt-where_density: Compressed\n // Test different indents.\n "}, {"sha": "f345e1cb3e98d556f1a7804f96b25b3ae37db5a3", "filename": "tests/source/fn-custom-6.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Ffn-custom-6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Ffn-custom-6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ffn-custom-6.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-fn_args_indent: Block\n+// rustfmt-indent_style: Block\n // rustfmt-fn_brace_style: PreferSameLine\n // Test different indents.\n "}, {"sha": "03b9a895970c95cff4f8519e98a7bab64e4f860a", "filename": "tests/source/fn-custom-7.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Ffn-custom-7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Ffn-custom-7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ffn-custom-7.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,5 +1,5 @@\n // rustfmt-normalize_comments: true\n-// rustfmt-fn_args_indent: Block\n+// rustfmt-indent_style: Block\n // rustfmt-fn_args_density: Vertical\n // rustfmt-fn_brace_style: AlwaysNextLine\n "}, {"sha": "40ea44f084ac9c0d36fdddff72afd8f75a758111", "filename": "tests/source/fn-custom-8.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Ffn-custom-8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Ffn-custom-8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ffn-custom-8.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-fn_args_indent: Block\n+// rustfmt-indent_style: Block\n // rustfmt-fn_brace_style: PreferSameLine\n // Test different indents.\n "}, {"sha": "b056fcb56fe6d051cd307a9c518c11522e586e2f", "filename": "tests/source/fn_args_indent-block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Ffn_args_indent-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Ffn_args_indent-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ffn_args_indent-block.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,5 +1,5 @@\n // rustfmt-normalize_comments: true\n-// rustfmt-fn_args_indent: Block\n+// rustfmt-indent_style: Block\n \n fn foo() {\n     foo();"}, {"sha": "e25376561a94990ad99de4fa15e161c6b1ec9f34", "filename": "tests/source/issue-1278.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fissue-1278.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fissue-1278.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-1278.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-fn_args_indent = \"block\"\n+// rustfmt-indent_style = \"block\"\n \n #![feature(pub_restricted)]\n "}, {"sha": "2c6cc6749605ee28fad28f318b85c9f5129c2cb5", "filename": "tests/source/struct_lits_visual.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fstruct_lits_visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fstruct_lits_visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fstruct_lits_visual.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,6 +1,6 @@\n // rustfmt-normalize_comments: true\n // rustfmt-wrap_comments: true\n-// rustfmt-struct_lit_indent: Visual\n+// rustfmt-indent_style: Visual\n // rustfmt-error_on_line_overflow: false\n \n // Struct literal expressions."}, {"sha": "074853cf3dae97a623e4a87faf8b6b1766cf2fcd", "filename": "tests/source/struct_lits_visual_multiline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fstruct_lits_visual_multiline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fstruct_lits_visual_multiline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fstruct_lits_visual_multiline.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,6 +1,6 @@\n // rustfmt-normalize_comments: true\n // rustfmt-wrap_comments: true\n-// rustfmt-struct_lit_indent: Visual\n+// rustfmt-indent_style: Visual\n // rustfmt-struct_lit_multiline_style: ForceMulti\n // rustfmt-error_on_line_overflow: false\n "}, {"sha": "369feae71d25079bedff046ab243240fa4f0e50a", "filename": "tests/source/struct_tuple_visual.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fstruct_tuple_visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fstruct_tuple_visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fstruct_tuple_visual.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,7 +1,7 @@\n // rustfmt-normalize_comments: true\n // rustfmt-wrap_comments: true\n // rustfmt-error_on_line_overflow: false\n-// rustfmt-struct_lit_indent: Visual\n+// rustfmt-indent_style: Visual\n fn foo() {\n     Fooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo(f(), b());\n "}, {"sha": "e41e9a6cea1c600499d0ea7970718a206d0ef6a1", "filename": "tests/source/where-clause-rfc.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fwhere-clause-rfc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Fsource%2Fwhere-clause-rfc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fwhere-clause-rfc.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,5 +1,4 @@\n-// rustfmt-fn_args_indent: Block\n-// rustfmt-where_style: Rfc\n+// rustfmt-indent_style: Block\n \n fn reflow_list_node_with_rule(node: &CompoundNode, rule: &Rule, args: &[Arg], shape: &Shape) where T: FOo, U: Bar {\n     let mut effects = HashMap::new();"}, {"sha": "2aa156df4bce8917d7b2944ac02ecca8fd53ad1c", "filename": "tests/target/big-impl-rfc.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fbig-impl-rfc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fbig-impl-rfc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fbig-impl-rfc.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,7 +1,4 @@\n-// rustfmt-fn_args_indent: Block\n-// rustfmt-fn_call_indent: Block\n-// rustfmt-generics_indent: Block\n-// rustfmt-where_style: Rfc\n+// rustfmt-indent_style: Block\n \n // #1357\n impl<'a, Select, From, Distinct, Where, Order, Limit, Offset, Groupby, DB> InternalBoxedDsl<'a, DB>"}, {"sha": "ea6b5764e44ee14a59275304fb453b5834e39b42", "filename": "tests/target/chains-indent-tabbed.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fchains-indent-tabbed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fchains-indent-tabbed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fchains-indent-tabbed.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-chain_indent: Block\n+// rustfmt-indent_style: Block\n \n fn test() {\n     let x = my_long_function()"}, {"sha": "23814e3dbe1a01cd13af001175280e3afb48dd0d", "filename": "tests/target/chains-indent-visual.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fchains-indent-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fchains-indent-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fchains-indent-visual.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-chain_indent: Visual\n+// rustfmt-indent_style: Visual\n \n fn test() {\n     let x = my_long_function().my_even_longer_function()"}, {"sha": "9533e2f04b1d329af17c104029b9b642cd97c3ca", "filename": "tests/target/chains-visual.rs", "status": "modified", "additions": 37, "deletions": 49, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fchains-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fchains-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fchains-visual.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,6 +1,6 @@\n // rustfmt-normalize_comments: true\n // rustfmt-single_line_if_else_max_width: 0\n-// rustfmt-chain_indent: Visual\n+// rustfmt-indent_style: Visual\n // Test chain formatting.\n \n fn main() {\n@@ -17,17 +17,15 @@ fn main() {\n     // Test case where first chain element isn't a path, but is shorter than\n     // the size of a tab.\n     x().y(|| match cond() {\n-        true => (),\n-        false => (),\n-    });\n+              true => (),\n+              false => (),\n+          });\n \n-    loong_func().quux(move || {\n-        if true {\n-            1\n-        } else {\n-            2\n-        }\n-    });\n+    loong_func().quux(move || if true {\n+                          1\n+                      } else {\n+                          2\n+                      });\n \n     some_fuuuuuuuuunction().method_call_a(aaaaa, bbbbb, |c| {\n         let x = c;\n@@ -45,32 +43,28 @@ fn main() {\n \n     fffffffffffffffffffffffffffffffffff(a, {\n         SCRIPT_TASK_ROOT.with(|root| {\n-            *root.borrow_mut() = Some(&script_task);\n-        });\n+                                  *root.borrow_mut() = Some(&script_task);\n+                              });\n     });\n \n-    let suuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuum =\n-        xxxxxxx.map(|x| x + 5)\n-               .map(|x| x / 2)\n-               .fold(0, |acc, x| acc + x);\n+    let suuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuum = xxxxxxx.map(|x| x + 5)\n+                                                                          .map(|x| x / 2)\n+                                                                          .fold(0,\n+                                                                                |acc, x| acc + x);\n \n     aaaaaaaaaaaaaaaa.map(|x| {\n-        x += 1;\n-        x\n-    })\n+                             x += 1;\n+                             x\n+                         })\n                     .filter(some_mod::some_filter)\n }\n \n fn floaters() {\n-    let z = Foo {\n-        field1: val1,\n-        field2: val2,\n-    };\n-\n-    let x = Foo {\n-                field1: val1,\n-                field2: val2,\n-            }.method_call()\n+    let z = Foo { field1: val1,\n+                  field2: val2, };\n+\n+    let x = Foo { field1: val1,\n+                  field2: val2, }.method_call()\n             .method_call();\n \n     let y = if cond {\n@@ -83,12 +77,10 @@ fn floaters() {\n         match x {\n             PushParam => {\n                 // params are 1-indexed\n-                stack.push(\n-                    mparams[match cur.to_digit(10) {\n-                                Some(d) => d as usize - 1,\n-                                None => return Err(\"bad param number\".to_owned()),\n-                            }].clone(),\n-                );\n+                stack.push(mparams[match cur.to_digit(10) {\n+                                       Some(d) => d as usize - 1,\n+                                       None => return Err(\"bad param number\".to_owned()),\n+                                   }].clone());\n             }\n         }\n     }\n@@ -101,18 +93,16 @@ fn floaters() {\n     .baz();\n \n     Foo { x: val }.baz(|| {\n-        force();\n-        multiline();\n-    })\n+                           force();\n+                           multiline();\n+                       })\n                   .quux();\n \n-    Foo {\n-        y: i_am_multi_line,\n-        z: ok,\n-    }.baz(|| {\n-        force();\n-        multiline();\n-    })\n+    Foo { y: i_am_multi_line,\n+          z: ok, }.baz(|| {\n+             force();\n+             multiline();\n+         })\n     .quux();\n \n     a + match x {\n@@ -157,10 +147,8 @@ fn issue1434() {\n     for _ in 0..100 {\n         let prototype_id =\n             PrototypeIdData::from_reader::<_, B>(&mut self.file_cursor).chain_err(|| {\n-                format!(\n-                    \"could not read prototype ID at offset {:#010x}\",\n-                    current_offset\n-                )\n+                format!(\"could not read prototype ID at offset {:#010x}\",\n+                        current_offset)\n             })?;\n     }\n }"}, {"sha": "c1260592083a67763511d2ad27c424415ab20b1a", "filename": "tests/target/closure-block-inside-macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fclosure-block-inside-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fclosure-block-inside-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fclosure-block-inside-macro.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-fn_call_indent: Block\n+// rustfmt-indent_style: Block\n \n // #1547\n fuzz_target!(|data: &[u8]| if let Some(first) = data.first() {"}, {"sha": "78a3c828c5d22809d2bf7dc9ef84cb7cf6c0d7f7", "filename": "tests/target/configs-array_horizontal_layout_threshold-1000-visual.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-array_horizontal_layout_threshold-1000-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-array_horizontal_layout_threshold-1000-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-array_horizontal_layout_threshold-1000-visual.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,5 +1,5 @@\n // rustfmt-array_horizontal_layout_threshold: 1000\n-// rustfmt-array_indent: Visual\n+// rustfmt-indent_style: Visual\n \n const ARRAY: [u8; 2048] =\n     [99, 72, 48, 104, 44, 112, 38, 62, 40, 93, 23, 24, 32, 21, 102, 76, 65, 29, 116, 21, 18, 37,"}, {"sha": "5d458248c0b93876a888584c66facf3177f3f7f5", "filename": "tests/target/configs-array_indent-block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-array_indent-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-array_indent-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-array_indent-block.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-array_indent: Block\n+// rustfmt-indent_style: Block\n // Array layout\n \n fn main() {"}, {"sha": "1da6ff2373870774846af349f5e9b086876527dc", "filename": "tests/target/configs-array_indent-visual.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-array_indent-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-array_indent-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-array_indent-visual.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-array_indent: Visual\n+// rustfmt-indent_style: Visual\n // Array layout\n \n fn main() {"}, {"sha": "23340a4aba2fefaef924fdfde30ce11e8b7ef0cf", "filename": "tests/target/configs-chain_indent-block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-chain_indent-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-chain_indent-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-chain_indent-block.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-chain_indent: Block\n+// rustfmt-indent_style: Block\n // Chain indent\n \n fn main() {"}, {"sha": "569f3d8b81d7843f2ad19c0badcd22e2dff15ded", "filename": "tests/target/configs-chain_indent-visual.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-chain_indent-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-chain_indent-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-chain_indent-visual.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-chain_indent: Visual\n+// rustfmt-indent_style: Visual\n // Chain indent\n \n fn main() {"}, {"sha": "81eff08660d14a9ea8fb8e832f4c0e914f2b5a3f", "filename": "tests/target/configs-combine_control_expr-false.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-combine_control_expr-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-combine_control_expr-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-combine_control_expr-false.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-fn_call_indent: Block\n+// rustfmt-indent_style: Block\n // rustfmt-combine_control_expr: false\n // Combining openings and closings. See https://github.com/rust-lang-nursery/fmt-rfcs/issues/61.\n "}, {"sha": "c5372c2ff376f0b63339b53f8aa88358866d90bc", "filename": "tests/target/configs-combine_control_expr-true.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-combine_control_expr-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-combine_control_expr-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-combine_control_expr-true.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-fn_call_indent: Block\n+// rustfmt-indent_style: Block\n // rustfmt-combine_control_expr: true\n // Combining openings and closings. See https://github.com/rust-lang-nursery/fmt-rfcs/issues/61.\n "}, {"sha": "5e19681f90bbbceb909270bbdc917dcef4e08c02", "filename": "tests/target/configs-control_style-rfc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-control_style-rfc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-control_style-rfc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-control_style-rfc.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-control_style: Rfc\n+// rustfmt-indent_style: Block\n \n // #1618\n fn main() {"}, {"sha": "80f4e133356c5ff24e9f32c0ebb61e2230777faa", "filename": "tests/target/configs-fn_args_indent-block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-fn_args_indent-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-fn_args_indent-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-fn_args_indent-block.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-fn_args_indent: Block\n+// rustfmt-indent_style: Block\n // Function arguments layout\n \n fn lorem() {}"}, {"sha": "04c2eaee3cf2cf2a79d6a836abed218d2dfa8c38", "filename": "tests/target/configs-fn_args_indent-visual.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-fn_args_indent-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-fn_args_indent-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-fn_args_indent-visual.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-fn_args_indent: Visual\n+// rustfmt-indent_style: Visual\n // Function arguments layout\n \n fn lorem() {}"}, {"sha": "5531e61ddc8c4511d7266adf06673a918b0bffaa", "filename": "tests/target/configs-fn_call_indent-block-tab_spaces-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-fn_call_indent-block-tab_spaces-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-fn_call_indent-block-tab_spaces-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-fn_call_indent-block-tab_spaces-2.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-fn_call_indent: Block\n+// rustfmt-indent_style: Block\n // rustfmt-max_width: 80\n // rustfmt-tab_spaces: 2\n "}, {"sha": "a7e8590ed97a01cf4a8c7c1134c497fd2c131d51", "filename": "tests/target/configs-fn_call_indent-block-trailing-comma.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-fn_call_indent-block-trailing-comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-fn_call_indent-block-trailing-comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-fn_call_indent-block-trailing-comma.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,5 +1,5 @@\n // rustfmt-error_on_line_overflow: false\n-// rustfmt-fn_call_indent: Block\n+// rustfmt-indent_style: Block\n \n // rustfmt should not add trailing comma when rewriting macro. See #1528.\n fn a() {"}, {"sha": "905d34a097800973682da1a37d6fe2bae90b5ef2", "filename": "tests/target/configs-fn_call_indent-block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-fn_call_indent-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-fn_call_indent-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-fn_call_indent-block.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-fn_call_indent: Block\n+// rustfmt-indent_style: Block\n // Function call style\n \n fn main() {"}, {"sha": "9738d397dbf6305182ad58152cbf74fcf5b3d4a5", "filename": "tests/target/configs-fn_call_indent-visual-trailing-comma.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-fn_call_indent-visual-trailing-comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-fn_call_indent-visual-trailing-comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-fn_call_indent-visual-trailing-comma.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,5 +1,5 @@\n // rustfmt-error_on_line_overflow: false\n-// rustfmt-fn_call_indent: Visual\n+// rustfmt-indent_style: Visual\n \n // rustfmt should not add trailing comma when rewriting macro. See #1528.\n fn a() {"}, {"sha": "5454c44ef965d60b922fd0b289a5ffa06950dd38", "filename": "tests/target/configs-fn_call_indent-visual.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-fn_call_indent-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-fn_call_indent-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-fn_call_indent-visual.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-fn_call_indent: Visual\n+// rustfmt-indent_style: Visual\n // Function call style\n \n fn main() {"}, {"sha": "1455ecd967c843bb4ac65748eeb299033eae7516", "filename": "tests/target/configs-fn_call_width-zero.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-fn_call_width-zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-fn_call_width-zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-fn_call_width-zero.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,5 +1,5 @@\n // rustfmt-fn_call_width: 0\n-// rustfmt-fn_call_indent: block\n+// rustfmt-indent_style: block\n \n // #1508\n fn a() {"}, {"sha": "c4fcaaf65d1c669b0483ba1070859e58ffef7bda", "filename": "tests/target/configs-generics_indent-block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-generics_indent-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-generics_indent-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-generics_indent-block.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-generics_indent: Block\n+// rustfmt-indent_style: Block\n // Generics indent\n \n fn lorem<"}, {"sha": "491075a146d1b378e2b24331baca241a74d73d75", "filename": "tests/target/configs-generics_indent-visual.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-generics_indent-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-generics_indent-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-generics_indent-visual.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-generics_indent: Visual\n+// rustfmt-indent_style: Visual\n // Generics indent\n \n fn lorem<Ipsum: Eq = usize,\n@@ -14,7 +14,7 @@ fn lorem<Ipsum: Eq = usize,\n     amet: Amet,\n     adipiscing: Adipiscing,\n     consectetur: Consectetur,\n-    elit: Elit,\n-) -> T {\n+    elit: Elit)\n+    -> T {\n     // body\n }"}, {"sha": "656b562266fd1ed176443ce5a4840a99322d9727", "filename": "tests/target/configs-struct_lit_indent-block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-struct_lit_indent-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-struct_lit_indent-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-struct_lit_indent-block.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-struct_lit_indent: Block\n+// rustfmt-indent_style: Block\n // Struct literal-style\n \n fn main() {"}, {"sha": "b4effba0e8ace1956dee0f321fc53f7c7a462f0c", "filename": "tests/target/configs-struct_lit_indent-visual.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-struct_lit_indent-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-struct_lit_indent-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-struct_lit_indent-visual.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-struct_lit_indent: Visual\n+// rustfmt-indent_style: Visual\n // Struct literal-style\n \n fn main() {"}, {"sha": "85961706ea72f909620cc0ee85396f9f355f9c2c", "filename": "tests/target/configs-tab_spaces-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-tab_spaces-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-tab_spaces-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-tab_spaces-2.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,6 +1,6 @@\n // rustfmt-tab_spaces: 2\n // rustfmt-max_width: 30\n-// rustfmt-array_indent: Block\n+// rustfmt-indent_style: Block\n // Tab spaces\n \n fn lorem() {"}, {"sha": "524a55121e4a8d21ae6a39393de656880289288d", "filename": "tests/target/configs-tab_spaces-4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-tab_spaces-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-tab_spaces-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-tab_spaces-4.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,6 +1,6 @@\n // rustfmt-tab_spaces: 4\n // rustfmt-max_width: 30\n-// rustfmt-array_indent: Block\n+// rustfmt-indent_style: Block\n // Tab spaces\n \n fn lorem() {"}, {"sha": "ad7e0b8f3633f376283dca22240cb3040f9518de", "filename": "tests/target/configs-where_pred_indent-block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-where_pred_indent-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-where_pred_indent-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-where_pred_indent-block.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-where_pred_indent: Block\n+// rustfmt-indent_style: Block\n // Where predicate indent\n \n fn lorem<Ipsum, Dolor, Sit, Amet>() -> T"}, {"sha": "45799dcd5fcdd385656fba0db421fd0aba32d61a", "filename": "tests/target/configs-where_pred_indent-visual.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-where_pred_indent-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-where_pred_indent-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-where_pred_indent-visual.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,12 +1,11 @@\n-// rustfmt-where_pred_indent: Visual\n+// rustfmt-indent_style: Visual\n // Where predicate indent\n \n fn lorem<Ipsum, Dolor, Sit, Amet>() -> T\n-where\n-    Ipsum: Eq,\n-    Dolor: Eq,\n-    Sit: Eq,\n-    Amet: Eq,\n+    where Ipsum: Eq,\n+          Dolor: Eq,\n+          Sit: Eq,\n+          Amet: Eq\n {\n     // body\n }"}, {"sha": "a8f0902b34ea928fc3fc50ade7070d7beaab7b4e", "filename": "tests/target/configs-where_style-default.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-where_style-default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-where_style-default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-where_style-default.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-where_style: Legacy\n+// rustfmt-indent_style: Visual\n // Where style\n \n fn lorem<Ipsum, Dolor, Sit, Amet>() -> T"}, {"sha": "a7b9a4f02b3dc1a07a28d09a730b7f445fb23ef5", "filename": "tests/target/configs-where_style-rfc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-where_style-rfc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fconfigs-where_style-rfc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-where_style-rfc.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-where_style: Rfc\n+// rustfmt-indent_style: Block\n // Where style\n \n fn lorem<Ipsum, Dolor, Sit, Amet>() -> T"}, {"sha": "646569e15f1914e4d2f495ee19c255789c7a16ff", "filename": "tests/target/expr-block.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fexpr-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fexpr-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr-block.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,6 +1,4 @@\n-// rustfmt-array_indent: Block\n-// rustfmt-fn_call_indent: Block\n-// rustfmt-control_style: Rfc\n+// rustfmt-indent_style: Block\n // Test expressions with block formatting.\n \n fn arrays() {"}, {"sha": "bf528989fd42144ac13a96fdb2b0d903d2a289a4", "filename": "tests/target/fn-custom-2.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Ffn-custom-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Ffn-custom-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn-custom-2.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,5 +1,4 @@\n-// rustfmt-fn_args_indent: Block\n-// rustfmt-generics_indent: Block\n+// rustfmt-indent_style: Block\n // rustfmt-where_layout: Mixed\n // Test different indents.\n "}, {"sha": "6561140196b1255a3083c6380d6cf7ed778bb0de", "filename": "tests/target/fn-custom-3.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Ffn-custom-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Ffn-custom-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn-custom-3.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,5 +1,4 @@\n-// rustfmt-fn_args_indent: Block\n-// rustfmt-generics_indent: Block\n+// rustfmt-indent_style: Block\n // rustfmt-where_layout: HorizontalVertical\n // Test different indents.\n "}, {"sha": "35895f386d0d6ae942bdb8da825101e120f871c5", "filename": "tests/target/fn-custom-4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Ffn-custom-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Ffn-custom-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn-custom-4.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-where_pred_indent: Block\n+// rustfmt-indent_style: Block\n // rustfmt-where_density: Compressed\n // Test different indents.\n "}, {"sha": "2c86ade3c83d799da7f96b63b06644359d38d852", "filename": "tests/target/fn-custom-6.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Ffn-custom-6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Ffn-custom-6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn-custom-6.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-fn_args_indent: Block\n+// rustfmt-indent_style: Block\n // rustfmt-fn_brace_style: PreferSameLine\n // Test different indents.\n "}, {"sha": "88c6ab10d800d2cedc3070d0de5f2748aaaf9858", "filename": "tests/target/fn-custom-7.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Ffn-custom-7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Ffn-custom-7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn-custom-7.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,5 +1,5 @@\n // rustfmt-normalize_comments: true\n-// rustfmt-fn_args_indent: Block\n+// rustfmt-indent_style: Block\n // rustfmt-fn_args_density: Vertical\n // rustfmt-fn_brace_style: AlwaysNextLine\n "}, {"sha": "151f7f2a0f26cd95edfa58c1307b2e17ec13956b", "filename": "tests/target/fn-custom-8.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Ffn-custom-8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Ffn-custom-8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn-custom-8.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-fn_args_indent: Block\n+// rustfmt-indent_style: Block\n // rustfmt-fn_brace_style: PreferSameLine\n // Test different indents.\n "}, {"sha": "04c18816d0bef0d157e2d1209baebc5d487da819", "filename": "tests/target/fn_args_indent-block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Ffn_args_indent-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Ffn_args_indent-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn_args_indent-block.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,5 +1,5 @@\n // rustfmt-normalize_comments: true\n-// rustfmt-fn_args_indent: Block\n+// rustfmt-indent_style: Block\n \n fn foo() {\n     foo();"}, {"sha": "e25376561a94990ad99de4fa15e161c6b1ec9f34", "filename": "tests/target/issue-1278.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fissue-1278.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fissue-1278.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-1278.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-fn_args_indent = \"block\"\n+// rustfmt-indent_style = \"block\"\n \n #![feature(pub_restricted)]\n "}, {"sha": "7385118528b5515981f5405fce493b9f2f7d1c7f", "filename": "tests/target/issue-1624.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fissue-1624.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fissue-1624.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-1624.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-fn_args_indent: Block\n+// rustfmt-indent_style: Block\n // rustfmt-fn_args_paren_newline: false\n \n // #1624"}, {"sha": "7e93b91d8c1094cc13989918062be0923247f771", "filename": "tests/target/struct_lits_visual.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fstruct_lits_visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fstruct_lits_visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fstruct_lits_visual.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,6 +1,6 @@\n // rustfmt-normalize_comments: true\n // rustfmt-wrap_comments: true\n-// rustfmt-struct_lit_indent: Visual\n+// rustfmt-indent_style: Visual\n // rustfmt-error_on_line_overflow: false\n \n // Struct literal expressions."}, {"sha": "936a4061cb439610d82e39ca1cee450289c669b1", "filename": "tests/target/struct_lits_visual_multiline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fstruct_lits_visual_multiline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fstruct_lits_visual_multiline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fstruct_lits_visual_multiline.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,6 +1,6 @@\n // rustfmt-normalize_comments: true\n // rustfmt-wrap_comments: true\n-// rustfmt-struct_lit_indent: Visual\n+// rustfmt-indent_style: Visual\n // rustfmt-struct_lit_multiline_style: ForceMulti\n // rustfmt-error_on_line_overflow: false\n "}, {"sha": "369feae71d25079bedff046ab243240fa4f0e50a", "filename": "tests/target/struct_tuple_visual.rs", "status": "modified", "additions": 24, "deletions": 34, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fstruct_tuple_visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fstruct_tuple_visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fstruct_tuple_visual.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,47 +1,37 @@\n // rustfmt-normalize_comments: true\n // rustfmt-wrap_comments: true\n // rustfmt-error_on_line_overflow: false\n-// rustfmt-struct_lit_indent: Visual\n+// rustfmt-indent_style: Visual\n fn foo() {\n     Fooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo(f(), b());\n \n-    Foooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo(\n-        // Comment\n-        foo(), // Comment\n-        // Comment\n-        bar(), // Comment\n-    );\n+    Foooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo(// Comment\n+                                                                                      foo(), /* Comment */\n+                                                                                      // Comment\n+                                                                                      bar() /* Comment */);\n \n     Foo(Bar, f());\n \n-    Quux(\n-        if cond {\n-            bar();\n-        },\n-        baz(),\n-    );\n+    Quux(if cond {\n+             bar();\n+         },\n+         baz());\n \n-    Baz(\n-        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\n-        zzzzz, // test\n-    );\n+    Baz(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\n+        zzzzz /* test */);\n \n-    A(\n-        // Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec a diam lectus. Sed sit\n-        // amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante\n-        // hendrerit. Donec et mollis dolor.\n-        item(),\n-        // Praesent et diam eget libero egestas mattis sit amet vitae augue.\n-        // Nam tincidunt congue enim, ut porta lorem lacinia consectetur.\n-        Item,\n-    );\n+    A(// Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec a diam lectus. Sed sit\n+      // amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante\n+      // hendrerit. Donec et mollis dolor.\n+      item(),\n+      // Praesent et diam eget libero egestas mattis sit amet vitae augue.\n+      // Nam tincidunt congue enim, ut porta lorem lacinia consectetur.\n+      Item);\n \n-    Diagram(\n-        //                 o        This graph demonstrates how\n-        //                / \\       significant whitespace is\n-        //               o   o      preserved.\n-        //              /|\\   \\\n-        //             o o o   o\n-        G,\n-    )\n+    Diagram(//                 o        This graph demonstrates how\n+            //                / \\       significant whitespace is\n+            //               o   o      preserved.\n+            //              /|\\   \\\n+            //             o o o   o\n+            G)\n }"}, {"sha": "1e83d5b3abc406f07c89a5693273ba5fd55980b6", "filename": "tests/target/where-clause-rfc.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fwhere-clause-rfc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf15438ab49e6f6846b62bf64513c74ff1ac3d88/tests%2Ftarget%2Fwhere-clause-rfc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fwhere-clause-rfc.rs?ref=bf15438ab49e6f6846b62bf64513c74ff1ac3d88", "patch": "@@ -1,5 +1,4 @@\n-// rustfmt-fn_args_indent: Block\n-// rustfmt-where_style: Rfc\n+// rustfmt-indent_style: Block\n \n fn reflow_list_node_with_rule(node: &CompoundNode, rule: &Rule, args: &[Arg], shape: &Shape)\n where"}]}