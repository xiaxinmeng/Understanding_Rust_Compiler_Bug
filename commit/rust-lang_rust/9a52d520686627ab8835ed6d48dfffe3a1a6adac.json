{"sha": "9a52d520686627ab8835ed6d48dfffe3a1a6adac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhNTJkNTIwNjg2NjI3YWI4ODM1ZWQ2ZDQ4ZGZmZmUzYTFhNmFkYWM=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2020-04-13T13:26:53Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2020-04-13T13:26:53Z"}, "message": "result_map_unit_fn: Fix incorrect UI tests\n\n`x` and the `HasResult` struct were missing in this file.", "tree": {"sha": "095141e291c1410f6725031535df988ae3a37d0e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/095141e291c1410f6725031535df988ae3a37d0e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a52d520686627ab8835ed6d48dfffe3a1a6adac", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE6VFioMHrom999LRAK0OZxL9Ny94FAl6UaNgACgkQK0OZxL9N\ny95txQ//QLchVWWE1qqB6WCz43xPtWYulxPqq/jM8CPa4PdCV3qpu0+eNOWAvHq8\nfIn21wb7c0IP1igTPn0E2ypLQ883Jh1Nw+JOKbfYW66KOIsc/qB2URH5w8l1RVtf\n0BIQMf2P4co52RsgGvzZZh85pOfiA0l0Nl+4VwolBxTTDShrvs/rBhkKYh7/vlH6\n6CfCR+8/zQjDN7qS4WD6Ejdx5h223VAfI7JdW1vsGVRXx2p4NQStWKPtTo4kRNzF\nvEnBf8p5KOXK07Cb414QpFY/TUMCPTt4qZ3pm3kFHiBaVcv8oWXExQWeYMlGIJb9\noiL0MDvl0jgdjIAN4vpzrNh1DDpQZKnz+8zSKJwN9mXy8AEmmuf2IC1khg8QWkA3\nF1Zg8FMd0OmVgSA/IYgrI3rIjg1qG+x3IAVNl8k7a81m2O2BDu7YhxUb8PXgw24O\nMAPyc+IKLdbfm9Xqfmu8S5Mn7Njhb7rujubTzaZtxhaipTGAMBgjohVkLi+CyP2y\nTVlh/mKnIUmTz3hXRBPydTR9XhlgRxvCPcHy6xrWmYihG5XBCA15y2CurgvA8dLe\nyJENx/cMMLH8HNSg1Igfw146OhGfcOsCRpO8CU6GMq36kaYuzkKtywmfyh/SKpUK\n4ruZ3VVd14Q/jVFUS5TFlKHTagyWgUG6u37n//H1TptJI1E3gEM=\n=XpgL\n-----END PGP SIGNATURE-----", "payload": "tree 095141e291c1410f6725031535df988ae3a37d0e\nparent e29d55056585062a387074dd77cf935aa8352bbc\nauthor Philipp Hansch <dev@phansch.net> 1586784413 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1586784413 +0200\n\nresult_map_unit_fn: Fix incorrect UI tests\n\n`x` and the `HasResult` struct were missing in this file.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a52d520686627ab8835ed6d48dfffe3a1a6adac", "html_url": "https://github.com/rust-lang/rust/commit/9a52d520686627ab8835ed6d48dfffe3a1a6adac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a52d520686627ab8835ed6d48dfffe3a1a6adac/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e29d55056585062a387074dd77cf935aa8352bbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/e29d55056585062a387074dd77cf935aa8352bbc", "html_url": "https://github.com/rust-lang/rust/commit/e29d55056585062a387074dd77cf935aa8352bbc"}], "stats": {"total": 67, "additions": 52, "deletions": 15}, "files": [{"sha": "b197c609d7bfcc7b347c8c8213a556a7365d8e09", "filename": "tests/ui/result_map_unit_fn_unfixable.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9a52d520686627ab8835ed6d48dfffe3a1a6adac/tests%2Fui%2Fresult_map_unit_fn_unfixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a52d520686627ab8835ed6d48dfffe3a1a6adac/tests%2Fui%2Fresult_map_unit_fn_unfixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fresult_map_unit_fn_unfixable.rs?ref=9a52d520686627ab8835ed6d48dfffe3a1a6adac", "patch": "@@ -2,6 +2,10 @@\n #![feature(never_type)]\n #![allow(unused)]\n \n+struct HasResult {\n+    field: Result<usize, usize>,\n+}\n+\n fn do_nothing<T>(_: T) {}\n \n fn diverge<T>(_: T) -> ! {\n@@ -14,6 +18,8 @@ fn plus_one(value: usize) -> usize {\n \n #[rustfmt::skip]\n fn result_map_unit_fn() {\n+    let x = HasResult { field: Ok(10) };\n+\n     x.field.map(|value| { do_nothing(value); do_nothing(value) });\n \n     x.field.map(|value| if value > 0 { do_nothing(value); do_nothing(value) });"}, {"sha": "b23cc608621d0fa3880ac27766d86d6349c5a76d", "filename": "tests/ui/result_map_unit_fn_unfixable.stderr", "status": "modified", "additions": 46, "deletions": 15, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/9a52d520686627ab8835ed6d48dfffe3a1a6adac/tests%2Fui%2Fresult_map_unit_fn_unfixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9a52d520686627ab8835ed6d48dfffe3a1a6adac/tests%2Fui%2Fresult_map_unit_fn_unfixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fresult_map_unit_fn_unfixable.stderr?ref=9a52d520686627ab8835ed6d48dfffe3a1a6adac", "patch": "@@ -1,27 +1,58 @@\n-error[E0425]: cannot find value `x` in this scope\n-  --> $DIR/result_map_unit_fn_unfixable.rs:17:5\n+error: called `map(f)` on an `Result` value where `f` is a closure that returns the unit type\n+  --> $DIR/result_map_unit_fn_unfixable.rs:23:5\n    |\n LL |     x.field.map(|value| { do_nothing(value); do_nothing(value) });\n-   |     ^ not found in this scope\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Ok(value) = x.field { ... }`\n+   |\n+   = note: `-D clippy::result-map-unit-fn` implied by `-D warnings`\n \n-error[E0425]: cannot find value `x` in this scope\n-  --> $DIR/result_map_unit_fn_unfixable.rs:19:5\n+error: called `map(f)` on an `Result` value where `f` is a closure that returns the unit type\n+  --> $DIR/result_map_unit_fn_unfixable.rs:25:5\n    |\n LL |     x.field.map(|value| if value > 0 { do_nothing(value); do_nothing(value) });\n-   |     ^ not found in this scope\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Ok(value) = x.field { ... }`\n \n-error[E0425]: cannot find value `x` in this scope\n-  --> $DIR/result_map_unit_fn_unfixable.rs:23:5\n+error: called `map(f)` on an `Result` value where `f` is a closure that returns the unit type\n+  --> $DIR/result_map_unit_fn_unfixable.rs:29:5\n    |\n-LL |     x.field.map(|value| {\n-   |     ^ not found in this scope\n+LL |        x.field.map(|value| {\n+   |   _____^\n+   |  |_____|\n+   | ||\n+LL | ||         do_nothing(value);\n+LL | ||         do_nothing(value)\n+LL | ||     });\n+   | ||______^- help: try this: `if let Ok(value) = x.field { ... }`\n+   | |_______|\n+   | \n \n-error[E0425]: cannot find value `x` in this scope\n-  --> $DIR/result_map_unit_fn_unfixable.rs:27:5\n+error: called `map(f)` on an `Result` value where `f` is a closure that returns the unit type\n+  --> $DIR/result_map_unit_fn_unfixable.rs:33:5\n    |\n LL |     x.field.map(|value| { do_nothing(value); do_nothing(value); });\n-   |     ^ not found in this scope\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Ok(value) = x.field { ... }`\n+\n+error: called `map(f)` on an `Result` value where `f` is a function that returns the unit type\n+  --> $DIR/result_map_unit_fn_unfixable.rs:37:5\n+   |\n+LL |     \"12\".parse::<i32>().map(diverge);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Ok(a) = \"12\".parse::<i32>() { diverge(a) }`\n+\n+error: called `map(f)` on an `Result` value where `f` is a function that returns the unit type\n+  --> $DIR/result_map_unit_fn_unfixable.rs:43:5\n+   |\n+LL |     y.map(do_nothing);\n+   |     ^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Ok(_y) = y { do_nothing(_y) }`\n \n-error: aborting due to 4 previous errors\n+error: aborting due to 6 previous errors\n \n-For more information about this error, try `rustc --explain E0425`."}]}