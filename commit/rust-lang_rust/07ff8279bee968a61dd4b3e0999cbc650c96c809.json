{"sha": "07ff8279bee968a61dd4b3e0999cbc650c96c809", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3ZmY4Mjc5YmVlOTY4YTYxZGQ0YjNlMDk5OWNiYzY1MGM5NmM4MDk=", "commit": {"author": {"name": "Brendan Graetz", "email": "github@bguiz.com", "date": "2015-05-02T12:29:53Z"}, "committer": {"name": "Brendan Graetz", "email": "github@bguiz.com", "date": "2015-05-02T12:29:53Z"}, "message": "=BG= minor: ensure correct range bounds in concurreny examples in the rust book\n\n- `0..2` iterates over `0,1`\r\n- `0..3` iterates over `0,1,2`, which is what we want instead", "tree": {"sha": "f28eab00cc05b2f579b04f089e9521d9e0b1c67b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f28eab00cc05b2f579b04f089e9521d9e0b1c67b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07ff8279bee968a61dd4b3e0999cbc650c96c809", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07ff8279bee968a61dd4b3e0999cbc650c96c809", "html_url": "https://github.com/rust-lang/rust/commit/07ff8279bee968a61dd4b3e0999cbc650c96c809", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07ff8279bee968a61dd4b3e0999cbc650c96c809/comments", "author": {"login": "bguiz", "id": 1773785, "node_id": "MDQ6VXNlcjE3NzM3ODU=", "avatar_url": "https://avatars.githubusercontent.com/u/1773785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bguiz", "html_url": "https://github.com/bguiz", "followers_url": "https://api.github.com/users/bguiz/followers", "following_url": "https://api.github.com/users/bguiz/following{/other_user}", "gists_url": "https://api.github.com/users/bguiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/bguiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bguiz/subscriptions", "organizations_url": "https://api.github.com/users/bguiz/orgs", "repos_url": "https://api.github.com/users/bguiz/repos", "events_url": "https://api.github.com/users/bguiz/events{/privacy}", "received_events_url": "https://api.github.com/users/bguiz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bguiz", "id": 1773785, "node_id": "MDQ6VXNlcjE3NzM3ODU=", "avatar_url": "https://avatars.githubusercontent.com/u/1773785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bguiz", "html_url": "https://github.com/bguiz", "followers_url": "https://api.github.com/users/bguiz/followers", "following_url": "https://api.github.com/users/bguiz/following{/other_user}", "gists_url": "https://api.github.com/users/bguiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/bguiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bguiz/subscriptions", "organizations_url": "https://api.github.com/users/bguiz/orgs", "repos_url": "https://api.github.com/users/bguiz/repos", "events_url": "https://api.github.com/users/bguiz/events{/privacy}", "received_events_url": "https://api.github.com/users/bguiz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "354d16bd72ed002d6d8abe9896f89a445a60c21f", "url": "https://api.github.com/repos/rust-lang/rust/commits/354d16bd72ed002d6d8abe9896f89a445a60c21f", "html_url": "https://github.com/rust-lang/rust/commit/354d16bd72ed002d6d8abe9896f89a445a60c21f"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "3c64e0b14de42e1b2758b729510b2470b2467dcd", "filename": "src/doc/trpl/concurrency.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/07ff8279bee968a61dd4b3e0999cbc650c96c809/src%2Fdoc%2Ftrpl%2Fconcurrency.md", "raw_url": "https://github.com/rust-lang/rust/raw/07ff8279bee968a61dd4b3e0999cbc650c96c809/src%2Fdoc%2Ftrpl%2Fconcurrency.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fconcurrency.md?ref=07ff8279bee968a61dd4b3e0999cbc650c96c809", "patch": "@@ -116,7 +116,7 @@ use std::thread;\n fn main() {\n     let mut data = vec![1u32, 2, 3];\n \n-    for i in 0..2 {\n+    for i in 0..3 {\n         thread::spawn(move || {\n             data[i] += 1;\n         });\n@@ -154,7 +154,7 @@ use std::sync::Mutex;\n fn main() {\n     let mut data = Mutex::new(vec![1u32, 2, 3]);\n \n-    for i in 0..2 {\n+    for i in 0..3 {\n         let data = data.lock().unwrap();\n         thread::spawn(move || {\n             data[i] += 1;\n@@ -196,7 +196,7 @@ use std::thread;\n fn main() {\n     let data = Arc::new(Mutex::new(vec![1u32, 2, 3]));\n \n-    for i in 0..2 {\n+    for i in 0..3 {\n         let data = data.clone();\n         thread::spawn(move || {\n             let mut data = data.lock().unwrap();\n@@ -217,7 +217,7 @@ thread more closely:\n # use std::thread;\n # fn main() {\n #     let data = Arc::new(Mutex::new(vec![1u32, 2, 3]));\n-#     for i in 0..2 {\n+#     for i in 0..3 {\n #         let data = data.clone();\n thread::spawn(move || {\n     let mut data = data.lock().unwrap();"}]}