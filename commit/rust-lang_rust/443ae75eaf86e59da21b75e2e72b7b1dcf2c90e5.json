{"sha": "443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0M2FlNzVlYWY4NmU1OWRhMjFiNzVlMmU3MmI3YjFkY2YyYzkwZTU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-01-01T23:30:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-01-01T23:30:34Z"}, "message": "Auto merge of #57209 - estebank:suggest-raw-ident, r=petrochenkov\n\nSuggest using raw identifiers in 2018 edition when using keywords", "tree": {"sha": "d8c9bf088a4fc54c54a77c7c5293c82729bf1205", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8c9bf088a4fc54c54a77c7c5293c82729bf1205"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5", "html_url": "https://github.com/rust-lang/rust/commit/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2b7a063af39455d7362524da3123c34c3f4842e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2b7a063af39455d7362524da3123c34c3f4842e", "html_url": "https://github.com/rust-lang/rust/commit/b2b7a063af39455d7362524da3123c34c3f4842e"}, {"sha": "18e0bdae542e2bc5312ab3f27c2864f946609f9a", "url": "https://api.github.com/repos/rust-lang/rust/commits/18e0bdae542e2bc5312ab3f27c2864f946609f9a", "html_url": "https://github.com/rust-lang/rust/commit/18e0bdae542e2bc5312ab3f27c2864f946609f9a"}], "stats": {"total": 92, "additions": 92, "deletions": 0}, "files": [{"sha": "7c471fdebb3a08f4aa7f042c27239e23d003ad6e", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5", "patch": "@@ -798,6 +798,18 @@ impl<'a> Parser<'a> {\n         let mut err = self.struct_span_err(self.span,\n                                            &format!(\"expected identifier, found {}\",\n                                                     self.this_token_descr()));\n+        if let token::Ident(ident, false) = &self.token {\n+            if ident.is_reserved() && !ident.is_path_segment_keyword() &&\n+                ident.name != keywords::Underscore.name()\n+            {\n+                err.span_suggestion_with_applicability(\n+                    self.span,\n+                    \"you can escape reserved keywords to use them as identifiers\",\n+                    format!(\"r#{}\", ident),\n+                    Applicability::MaybeIncorrect,\n+                );\n+            }\n+        }\n         if let Some(token_descr) = self.token_descr() {\n             err.span_label(self.span, format!(\"expected identifier, found {}\", token_descr));\n         } else {"}, {"sha": "af1ac19c837d5ce42798a1e52586cca5385807ac", "filename": "src/test/ui/editions/edition-keywords-2015-2018-expansion.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2018-expansion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2018-expansion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2018-expansion.stderr?ref=443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5", "patch": "@@ -5,6 +5,10 @@ LL |     produces_async! {} //~ ERROR expected identifier, found reserved keywor\n    |     ^^^^^^^^^^^^^^^^^^ expected identifier, found reserved keyword\n    |\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n+help: you can escape reserved keywords to use them as identifiers\n+   |\n+LL | (  ) => ( pub fn r#async (  ) {  } )\n+   |                  ^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "52399362482bce4b9b462818b9c337f1a3a86f1d", "filename": "src/test/ui/editions/edition-keywords-2018-2015-parsing.stderr", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2015-parsing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2015-parsing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2015-parsing.stderr?ref=443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5", "patch": "@@ -3,12 +3,20 @@ error: expected identifier, found reserved keyword `async`\n    |\n LL |     let mut async = 1; //~ ERROR expected identifier, found reserved keyword `async`\n    |             ^^^^^ expected identifier, found reserved keyword\n+help: you can escape reserved keywords to use them as identifiers\n+   |\n+LL |     let mut r#async = 1; //~ ERROR expected identifier, found reserved keyword `async`\n+   |             ^^^^^^^\n \n error: expected identifier, found reserved keyword `async`\n   --> $DIR/edition-keywords-2018-2015-parsing.rs:18:13\n    |\n LL |     module::async(); //~ ERROR expected identifier, found reserved keyword `async`\n    |             ^^^^^ expected identifier, found reserved keyword\n+help: you can escape reserved keywords to use them as identifiers\n+   |\n+LL |     module::r#async(); //~ ERROR expected identifier, found reserved keyword `async`\n+   |             ^^^^^^^\n \n error: no rules expected the token `r#async`\n   --> $DIR/edition-keywords-2018-2015-parsing.rs:12:31"}, {"sha": "d997c3d8a421a49ade60896194fe36a8ba968e89", "filename": "src/test/ui/editions/edition-keywords-2018-2018-expansion.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2018-expansion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2018-expansion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2018-expansion.stderr?ref=443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5", "patch": "@@ -5,6 +5,10 @@ LL |     produces_async! {} //~ ERROR expected identifier, found reserved keywor\n    |     ^^^^^^^^^^^^^^^^^^ expected identifier, found reserved keyword\n    |\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n+help: you can escape reserved keywords to use them as identifiers\n+   |\n+LL | (  ) => ( pub fn r#async (  ) {  } )\n+   |                  ^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "1621368870a523a6b009be1acc70e2060c4f54e1", "filename": "src/test/ui/editions/edition-keywords-2018-2018-parsing.stderr", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2018-parsing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2018-parsing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2018-2018-parsing.stderr?ref=443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5", "patch": "@@ -3,12 +3,20 @@ error: expected identifier, found reserved keyword `async`\n    |\n LL |     let mut async = 1; //~ ERROR expected identifier, found reserved keyword `async`\n    |             ^^^^^ expected identifier, found reserved keyword\n+help: you can escape reserved keywords to use them as identifiers\n+   |\n+LL |     let mut r#async = 1; //~ ERROR expected identifier, found reserved keyword `async`\n+   |             ^^^^^^^\n \n error: expected identifier, found reserved keyword `async`\n   --> $DIR/edition-keywords-2018-2018-parsing.rs:18:13\n    |\n LL |     module::async(); //~ ERROR expected identifier, found reserved keyword `async`\n    |             ^^^^^ expected identifier, found reserved keyword\n+help: you can escape reserved keywords to use them as identifiers\n+   |\n+LL |     module::r#async(); //~ ERROR expected identifier, found reserved keyword `async`\n+   |             ^^^^^^^\n \n error: no rules expected the token `r#async`\n   --> $DIR/edition-keywords-2018-2018-parsing.rs:12:31"}, {"sha": "d3cba3aae710147e8b8c273a279d33657bfd320b", "filename": "src/test/ui/issues/issue-28433.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Fissues%2Fissue-28433.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Fissues%2Fissue-28433.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-28433.stderr?ref=443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5", "patch": "@@ -3,6 +3,10 @@ error: expected identifier, found keyword `pub`\n    |\n LL |     pub duck,\n    |     ^^^ expected identifier, found keyword\n+help: you can escape reserved keywords to use them as identifiers\n+   |\n+LL |     r#pub duck,\n+   |     ^^^^^\n \n error: expected one of `(`, `,`, `=`, `{`, or `}`, found `duck`\n   --> $DIR/issue-28433.rs:4:9"}, {"sha": "105dbb677dc028452330a46ba5f489aa47008d6f", "filename": "src/test/ui/issues/issue-44406.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Fissues%2Fissue-44406.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Fissues%2Fissue-44406.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-44406.stderr?ref=443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5", "patch": "@@ -3,6 +3,10 @@ error: expected identifier, found keyword `true`\n    |\n LL |     foo!(true); //~ ERROR expected type, found keyword\n    |          ^^^^ expected identifier, found keyword\n+help: you can escape reserved keywords to use them as identifiers\n+   |\n+LL |     foo!(r#true); //~ ERROR expected type, found keyword\n+   |          ^^^^^^\n \n error: expected type, found keyword `true`\n   --> $DIR/issue-44406.rs:8:10"}, {"sha": "2ab552ccbd3c8860d25c8de646f06c2c25119a82", "filename": "src/test/ui/issues/issue-57198.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Fissues%2Fissue-57198.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Fissues%2Fissue-57198.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-57198.stderr?ref=443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5", "patch": "@@ -3,6 +3,10 @@ error: expected identifier, found keyword `for`\n    |\n LL |     m::for();\n    |        ^^^ expected identifier, found keyword\n+help: you can escape reserved keywords to use them as identifiers\n+   |\n+LL |     m::r#for();\n+   |        ^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "fa0a7ac002b2ff2eec0335544428d316ba6450fa", "filename": "src/test/ui/lifetime_starts_expressions.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Flifetime_starts_expressions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Flifetime_starts_expressions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime_starts_expressions.stderr?ref=443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5", "patch": "@@ -3,6 +3,10 @@ error: expected identifier, found keyword `loop`\n    |\n LL |     loop { break 'label: loop { break 'label 42; }; }\n    |                          ^^^^ expected identifier, found keyword\n+help: you can escape reserved keywords to use them as identifiers\n+   |\n+LL |     loop { break 'label: r#loop { break 'label 42; }; }\n+   |                          ^^^^^^\n \n error: expected type, found keyword `loop`\n   --> $DIR/lifetime_starts_expressions.rs:6:26"}, {"sha": "ceea4625e3eb3cb7ba64ff2a348897dfc883de48", "filename": "src/test/ui/parser/associated-types-project-from-hrtb-explicit.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Fparser%2Fassociated-types-project-from-hrtb-explicit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Fparser%2Fassociated-types-project-from-hrtb-explicit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fassociated-types-project-from-hrtb-explicit.stderr?ref=443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5", "patch": "@@ -3,6 +3,10 @@ error: expected identifier, found keyword `for`\n    |\n LL | fn foo2<I>(x: <I as for<'x> Foo<&'x isize>>::A)\n    |                     ^^^ expected identifier, found keyword\n+help: you can escape reserved keywords to use them as identifiers\n+   |\n+LL | fn foo2<I>(x: <I as r#for<'x> Foo<&'x isize>>::A)\n+   |                     ^^^^^\n \n error: expected one of `::` or `>`, found `Foo`\n   --> $DIR/associated-types-project-from-hrtb-explicit.rs:12:29"}, {"sha": "1a5c982a43dbc98f2401f21ff2a5e00c021bf27d", "filename": "src/test/ui/parser/bad-value-ident-false.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Fparser%2Fbad-value-ident-false.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Fparser%2Fbad-value-ident-false.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbad-value-ident-false.stderr?ref=443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5", "patch": "@@ -3,6 +3,10 @@ error: expected identifier, found keyword `false`\n    |\n LL | fn false() { } //~ ERROR expected identifier, found keyword `false`\n    |    ^^^^^ expected identifier, found keyword\n+help: you can escape reserved keywords to use them as identifiers\n+   |\n+LL | fn r#false() { } //~ ERROR expected identifier, found keyword `false`\n+   |    ^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "f431706ccd76b8cca706e015b811b5d96233b060", "filename": "src/test/ui/parser/bad-value-ident-true.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Fparser%2Fbad-value-ident-true.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Fparser%2Fbad-value-ident-true.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbad-value-ident-true.stderr?ref=443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5", "patch": "@@ -3,6 +3,10 @@ error: expected identifier, found keyword `true`\n    |\n LL | fn true() { } //~ ERROR expected identifier, found keyword `true`\n    |    ^^^^ expected identifier, found keyword\n+help: you can escape reserved keywords to use them as identifiers\n+   |\n+LL | fn r#true() { } //~ ERROR expected identifier, found keyword `true`\n+   |    ^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "96f3b03dc924055c16e44f26ce26f62494354281", "filename": "src/test/ui/parser/issue-15980.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Fparser%2Fissue-15980.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Fparser%2Fissue-15980.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-15980.stderr?ref=443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5", "patch": "@@ -6,6 +6,10 @@ LL |         Err(ref e) if e.kind == io::EndOfFile {\n LL |             //~^ NOTE while parsing this struct\n LL |             return\n    |             ^^^^^^ expected identifier, found keyword\n+help: you can escape reserved keywords to use them as identifiers\n+   |\n+LL |             r#return\n+   |\n \n error: expected one of `.`, `=>`, `?`, or an operator, found `_`\n   --> $DIR/issue-15980.rs:15:9"}, {"sha": "1c729ff083352fd72af7cd7d9fe68471358c5ef8", "filename": "src/test/ui/parser/keyword.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Fparser%2Fkeyword.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Fparser%2Fkeyword.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword.stderr?ref=443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5", "patch": "@@ -3,6 +3,10 @@ error: expected identifier, found keyword `break`\n    |\n LL | pub mod break {\n    |         ^^^^^ expected identifier, found keyword\n+help: you can escape reserved keywords to use them as identifiers\n+   |\n+LL | pub mod r#break {\n+   |         ^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "d3edb04c1195195c6279346244ac5cfed38954d1", "filename": "src/test/ui/parser/macro-keyword.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Fparser%2Fmacro-keyword.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Fparser%2Fmacro-keyword.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmacro-keyword.stderr?ref=443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5", "patch": "@@ -3,6 +3,10 @@ error: expected identifier, found reserved keyword `macro`\n    |\n LL | fn macro() {  //~ ERROR expected identifier, found reserved keyword `macro`\n    |    ^^^^^ expected identifier, found reserved keyword\n+help: you can escape reserved keywords to use them as identifiers\n+   |\n+LL | fn r#macro() {  //~ ERROR expected identifier, found reserved keyword `macro`\n+   |    ^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "0d489beae123aca8cd600a1b0547db2d651796c0", "filename": "src/test/ui/parser/removed-syntax-field-let.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-field-let.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-field-let.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-field-let.stderr?ref=443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5", "patch": "@@ -3,6 +3,10 @@ error: expected identifier, found keyword `let`\n    |\n LL |     let foo: (),\n    |     ^^^ expected identifier, found keyword\n+help: you can escape reserved keywords to use them as identifiers\n+   |\n+LL |     r#let foo: (),\n+   |     ^^^^^\n \n error: expected `:`, found `foo`\n   --> $DIR/removed-syntax-field-let.rs:4:9"}, {"sha": "51e1a02cbd763ef5e913081b5fcc96edc48b9de6", "filename": "src/test/ui/parser/use-as-where-use-ends-with-mod-sep.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Fparser%2Fuse-as-where-use-ends-with-mod-sep.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Fparser%2Fuse-as-where-use-ends-with-mod-sep.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fuse-as-where-use-ends-with-mod-sep.stderr?ref=443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5", "patch": "@@ -3,6 +3,10 @@ error: expected identifier, found keyword `as`\n    |\n LL | use std::any:: as foo; //~ ERROR expected identifier, found keyword `as`\n    |                ^^ expected identifier, found keyword\n+help: you can escape reserved keywords to use them as identifiers\n+   |\n+LL | use std::any:: r#as foo; //~ ERROR expected identifier, found keyword `as`\n+   |                ^^^^\n \n error: expected one of `::`, `;`, or `as`, found `foo`\n   --> $DIR/use-as-where-use-ends-with-mod-sep.rs:3:19"}, {"sha": "6be00520465831130ab08909d3d495dd6f8a8798", "filename": "src/test/ui/rust-2018/dyn-trait-compatibility.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Frust-2018%2Fdyn-trait-compatibility.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Frust-2018%2Fdyn-trait-compatibility.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fdyn-trait-compatibility.stderr?ref=443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5", "patch": "@@ -3,6 +3,10 @@ error: expected identifier, found keyword `dyn`\n    |\n LL | type A1 = dyn::dyn; //~ERROR expected identifier, found keyword `dyn`\n    |                ^^^ expected identifier, found keyword\n+help: you can escape reserved keywords to use them as identifiers\n+   |\n+LL | type A1 = dyn::r#dyn; //~ERROR expected identifier, found keyword `dyn`\n+   |                ^^^^^\n \n error: expected identifier, found `<`\n   --> $DIR/dyn-trait-compatibility.rs:5:14"}, {"sha": "63650086bcaa903cc7c663d81e041962f18acb66", "filename": "src/test/ui/try-block/try-block-in-edition2015.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-edition2015.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-edition2015.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-edition2015.stderr?ref=443ae75eaf86e59da21b75e2e72b7b1dcf2c90e5", "patch": "@@ -6,6 +6,10 @@ LL |     let try_result: Option<_> = try {\n LL |     //~^ ERROR expected struct, variant or union type, found macro `try`\n LL |         let x = 5; //~ ERROR expected identifier, found keyword\n    |         ^^^ expected identifier, found keyword\n+help: you can escape reserved keywords to use them as identifiers\n+   |\n+LL |         r#let x = 5; //~ ERROR expected identifier, found keyword\n+   |         ^^^^^\n \n error[E0574]: expected struct, variant or union type, found macro `try`\n   --> $DIR/try-block-in-edition2015.rs:4:33"}]}