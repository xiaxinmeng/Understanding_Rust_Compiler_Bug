{"sha": "d40c6afba04c906907cb57157c0aec7e12519c94", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0MGM2YWZiYTA0YzkwNjkwN2NiNTcxNTdjMGFlYzdlMTI1MTljOTQ=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-10-25T17:46:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-25T17:46:02Z"}, "message": "Rollup merge of #65810 - raoulstrackx:ac_mitigation, r=nagisa\n\nSGX: Clear additional flag on enclave entry\n\nAn attacker could set both the AC flag in CR0 as in rflags. This causes the enclave to perform an AEX upon a misaligned memory access, and an attacker learns some information about the internal enclave state.\nThe AC flag in rflags is copied from userspace upon an enclave entry. Upon AEX it is copied and later restored. This patch forces the rflag.AC bit to be reset right after an enter.", "tree": {"sha": "6359f78c7c2bbf20c7e999fa95ddab93ba1a0ea7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6359f78c7c2bbf20c7e999fa95ddab93ba1a0ea7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d40c6afba04c906907cb57157c0aec7e12519c94", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdszTaCRBK7hj4Ov3rIwAAdHIIAFi/ex1v6xQssj+VdcN15TcR\nyjcTUVpGnQrTfDsth7GQp0KosE1LHFevfaXz/AMJFeD8pP4Kmw0L8C0VQW2SKZpu\naX7Ap8Dru0dH0jKQb0bNT+cdF2viHcyEIn3RQwe/be8rKduvyIRfBEWZrvtuQWGy\nIXl07Qq6obNuShyLOg+s+ycHBiWGKoJg5e3F73H7hiZMjoMFy7OegU6B9gzqJGxV\nPVccWI0OlHSAoTDJBVyUFV0zMdhXM7vQhxVq1cCck7R/ZLaNR1yHNYZuo55nI2lw\n3VuMW6vUNs1sOPBePv9t2rP4hBpHLkg5Z17qU+0jRKtuovf66svZ3OJTPNv/NO8=\n=8HpD\n-----END PGP SIGNATURE-----\n", "payload": "tree 6359f78c7c2bbf20c7e999fa95ddab93ba1a0ea7\nparent f0c58e9d852e70ce4bccfeb9a24449dab5f89866\nparent 5aafa98562a3bd472ae7934f0d192b9cfcb36254\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1572025562 +0900\ncommitter GitHub <noreply@github.com> 1572025562 +0900\n\nRollup merge of #65810 - raoulstrackx:ac_mitigation, r=nagisa\n\nSGX: Clear additional flag on enclave entry\n\nAn attacker could set both the AC flag in CR0 as in rflags. This causes the enclave to perform an AEX upon a misaligned memory access, and an attacker learns some information about the internal enclave state.\nThe AC flag in rflags is copied from userspace upon an enclave entry. Upon AEX it is copied and later restored. This patch forces the rflag.AC bit to be reset right after an enter.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d40c6afba04c906907cb57157c0aec7e12519c94", "html_url": "https://github.com/rust-lang/rust/commit/d40c6afba04c906907cb57157c0aec7e12519c94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d40c6afba04c906907cb57157c0aec7e12519c94/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0c58e9d852e70ce4bccfeb9a24449dab5f89866", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0c58e9d852e70ce4bccfeb9a24449dab5f89866", "html_url": "https://github.com/rust-lang/rust/commit/f0c58e9d852e70ce4bccfeb9a24449dab5f89866"}, {"sha": "5aafa98562a3bd472ae7934f0d192b9cfcb36254", "url": "https://api.github.com/repos/rust-lang/rust/commits/5aafa98562a3bd472ae7934f0d192b9cfcb36254", "html_url": "https://github.com/rust-lang/rust/commit/5aafa98562a3bd472ae7934f0d192b9cfcb36254"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "cd26c7ca200b00a767000836297a3e9ff506fcbd", "filename": "src/libstd/sys/sgx/abi/entry.S", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d40c6afba04c906907cb57157c0aec7e12519c94/src%2Flibstd%2Fsys%2Fsgx%2Fabi%2Fentry.S", "raw_url": "https://github.com/rust-lang/rust/raw/d40c6afba04c906907cb57157c0aec7e12519c94/src%2Flibstd%2Fsys%2Fsgx%2Fabi%2Fentry.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fsgx%2Fabi%2Fentry.S?ref=d40c6afba04c906907cb57157c0aec7e12519c94", "patch": "@@ -119,8 +119,14 @@ sgx_entry:\n     mov %rbx,%gs:tcsls_tcs_addr\n     stmxcsr %gs:tcsls_user_mxcsr\n     fnstcw %gs:tcsls_user_fcw\n+\n /*  reset user state */\n-    cld /* x86-64 ABI requires DF to be unset at function entry/exit */\n+/*    - DF flag: x86-64 ABI requires DF to be unset at function entry/exit */\n+/*    - AC flag: AEX on misaligned memory accesses leaks side channel info */\n+    pushfq\n+    andq $~0x40400, (%rsp)\n+    popfq\n+\n /*  check for debug buffer pointer */\n     testb  $0xff,DEBUG(%rip)\n     jz .Lskip_debug_init"}]}