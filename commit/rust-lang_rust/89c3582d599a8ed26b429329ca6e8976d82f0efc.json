{"sha": "89c3582d599a8ed26b429329ca6e8976d82f0efc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5YzM1ODJkNTk5YThlZDI2YjQyOTMyOWNhNmU4OTc2ZDgyZjBlZmM=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-11-07T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-11-07T00:00:00Z"}, "message": "Assert that a return place is not used for indexing during integration\n\nThe inliner integrates call destination place with callee return place\nby remapping the local and adding extra projections as necessary.\n\nIf a call destination place contains any projections (which is already\npossible) and a return place is used in an indexing projection (most\nlikely doesn't happen yet) the end result would be incorrect.\n\nAdd an assertion to ensure that potential issue won't go unnoticed in\nthe presence of more sophisticated copy propagation scheme.", "tree": {"sha": "d6323a01461b17946ed8ad3309e1a27f60d656a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6323a01461b17946ed8ad3309e1a27f60d656a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89c3582d599a8ed26b429329ca6e8976d82f0efc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89c3582d599a8ed26b429329ca6e8976d82f0efc", "html_url": "https://github.com/rust-lang/rust/commit/89c3582d599a8ed26b429329ca6e8976d82f0efc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89c3582d599a8ed26b429329ca6e8976d82f0efc/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0256d065d4901b63def6c04013da4f781d0752bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/0256d065d4901b63def6c04013da4f781d0752bb", "html_url": "https://github.com/rust-lang/rust/commit/0256d065d4901b63def6c04013da4f781d0752bb"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "4c069b191a89cdabfa43039ce9a316e5888b25d9", "filename": "compiler/rustc_mir/src/transform/inline.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/89c3582d599a8ed26b429329ca6e8976d82f0efc/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89c3582d599a8ed26b429329ca6e8976d82f0efc/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline.rs?ref=89c3582d599a8ed26b429329ca6e8976d82f0efc", "patch": "@@ -742,6 +742,12 @@ impl<'a, 'tcx> MutVisitor<'tcx> for Integrator<'a, 'tcx> {\n     }\n \n     fn visit_place(&mut self, place: &mut Place<'tcx>, context: PlaceContext, location: Location) {\n+        for elem in place.projection {\n+            // FIXME: Make sure that return place is not used in an indexing projection, since it\n+            // won't be rebased as it is supposed to be.\n+            assert_ne!(ProjectionElem::Index(RETURN_PLACE), elem);\n+        }\n+\n         // If this is the `RETURN_PLACE`, we need to rebase any projections onto it.\n         let dest_proj_len = self.destination.projection.len();\n         if place.local == RETURN_PLACE && dest_proj_len > 0 {"}]}