{"sha": "caf206b8202f4d417e39c378d424bc813f60bf99", "node_id": "C_kwDOAAsO6NoAKGNhZjIwNmI4MjAyZjRkNDE3ZTM5YzM3OGQ0MjRiYzgxM2Y2MGJmOTk", "commit": {"author": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2021-05-27T22:13:33Z"}, "committer": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2021-11-09T18:22:28Z"}, "message": "Stabilize File::options()\n\nRenames File::with_options to File::options, per consensus in\nrust-lang/rust#65439, and stabilizes it.", "tree": {"sha": "400c22a73a32969ea88867e5ee904da79757098e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/400c22a73a32969ea88867e5ee904da79757098e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/caf206b8202f4d417e39c378d424bc813f60bf99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/caf206b8202f4d417e39c378d424bc813f60bf99", "html_url": "https://github.com/rust-lang/rust/commit/caf206b8202f4d417e39c378d424bc813f60bf99", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/caf206b8202f4d417e39c378d424bc813f60bf99/comments", "author": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07acdb48a0e0b22d08a45e3ced0378e0027b40eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/07acdb48a0e0b22d08a45e3ced0378e0027b40eb", "html_url": "https://github.com/rust-lang/rust/commit/07acdb48a0e0b22d08a45e3ced0378e0027b40eb"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "a14f1e2ecb2c41cfd8c17f8d4a34ae06df42d641", "filename": "library/std/src/fs.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/caf206b8202f4d417e39c378d424bc813f60bf99/library%2Fstd%2Fsrc%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/caf206b8202f4d417e39c378d424bc813f60bf99/library%2Fstd%2Fsrc%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ffs.rs?ref=caf206b8202f4d417e39c378d424bc813f60bf99", "patch": "@@ -358,25 +358,24 @@ impl File {\n     ///\n     /// It is equivalent to `OpenOptions::new()` but allows you to write more\n     /// readable code. Instead of `OpenOptions::new().read(true).open(\"foo.txt\")`\n-    /// you can write `File::with_options().read(true).open(\"foo.txt\")`. This\n+    /// you can write `File::options().read(true).open(\"foo.txt\")`. This\n     /// also avoids the need to import `OpenOptions`.\n     ///\n     /// See the [`OpenOptions::new`] function for more details.\n     ///\n     /// # Examples\n     ///\n     /// ```no_run\n-    /// #![feature(with_options)]\n     /// use std::fs::File;\n     ///\n     /// fn main() -> std::io::Result<()> {\n-    ///     let mut f = File::with_options().read(true).open(\"foo.txt\")?;\n+    ///     let mut f = File::options().read(true).open(\"foo.txt\")?;\n     ///     Ok(())\n     /// }\n     /// ```\n     #[must_use]\n-    #[unstable(feature = \"with_options\", issue = \"65439\")]\n-    pub fn with_options() -> OpenOptions {\n+    #[stable(feature = \"with_options\", since = \"1.58.0\")]\n+    pub fn options() -> OpenOptions {\n         OpenOptions::new()\n     }\n "}]}