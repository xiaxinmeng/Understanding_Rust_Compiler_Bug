{"sha": "fc34d5f608e3476bc7c5c4127d4e1ad1ab4fd01a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjMzRkNWY2MDhlMzQ3NmJjN2M1YzQxMjdkNGUxYWQxYWI0ZmQwMWE=", "commit": {"author": {"name": "Jesper Steen M\u00f8ller", "email": "jesper@selskabet.org", "date": "2019-05-02T11:40:12Z"}, "committer": {"name": "Jesper Steen M\u00f8ller", "email": "jesper@selskabet.org", "date": "2019-05-04T18:29:35Z"}, "message": "Removed unneccesary reference for trait name", "tree": {"sha": "b43442c7e8f2aab6c8e8e38557bec4edce38532c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b43442c7e8f2aab6c8e8e38557bec4edce38532c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc34d5f608e3476bc7c5c4127d4e1ad1ab4fd01a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc34d5f608e3476bc7c5c4127d4e1ad1ab4fd01a", "html_url": "https://github.com/rust-lang/rust/commit/fc34d5f608e3476bc7c5c4127d4e1ad1ab4fd01a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc34d5f608e3476bc7c5c4127d4e1ad1ab4fd01a/comments", "author": {"login": "jespersm", "id": 664940, "node_id": "MDQ6VXNlcjY2NDk0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/664940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jespersm", "html_url": "https://github.com/jespersm", "followers_url": "https://api.github.com/users/jespersm/followers", "following_url": "https://api.github.com/users/jespersm/following{/other_user}", "gists_url": "https://api.github.com/users/jespersm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jespersm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jespersm/subscriptions", "organizations_url": "https://api.github.com/users/jespersm/orgs", "repos_url": "https://api.github.com/users/jespersm/repos", "events_url": "https://api.github.com/users/jespersm/events{/privacy}", "received_events_url": "https://api.github.com/users/jespersm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jespersm", "id": 664940, "node_id": "MDQ6VXNlcjY2NDk0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/664940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jespersm", "html_url": "https://github.com/jespersm", "followers_url": "https://api.github.com/users/jespersm/followers", "following_url": "https://api.github.com/users/jespersm/following{/other_user}", "gists_url": "https://api.github.com/users/jespersm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jespersm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jespersm/subscriptions", "organizations_url": "https://api.github.com/users/jespersm/orgs", "repos_url": "https://api.github.com/users/jespersm/repos", "events_url": "https://api.github.com/users/jespersm/events{/privacy}", "received_events_url": "https://api.github.com/users/jespersm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7dbb5e3b49b00c6bf0ce7b0e11a32eee38aeb8a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/7dbb5e3b49b00c6bf0ce7b0e11a32eee38aeb8a3", "html_url": "https://github.com/rust-lang/rust/commit/7dbb5e3b49b00c6bf0ce7b0e11a32eee38aeb8a3"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "c439ad9c315eebed972d7207d5b4ae4799b884c4", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fc34d5f608e3476bc7c5c4127d4e1ad1ab4fd01a/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc34d5f608e3476bc7c5c4127d4e1ad1ab4fd01a/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=fc34d5f608e3476bc7c5c4127d4e1ad1ab4fd01a", "patch": "@@ -4643,14 +4643,14 @@ impl<'a> Resolver<'a> {\n                     false,\n                     module.span,\n                 ).is_ok() {\n-                    let import_ids = self.find_transitive_imports(&binding.kind, &trait_name);\n+                    let import_ids = self.find_transitive_imports(&binding.kind, trait_name);\n                     let trait_def_id = module.def_id().unwrap();\n                     found_traits.push(TraitCandidate { def_id: trait_def_id, import_ids });\n                 }\n             } else if let Res::Def(DefKind::TraitAlias, _) = binding.res() {\n                 // For now, just treat all trait aliases as possible candidates, since we don't\n                 // know if the ident is somewhere in the transitive bounds.\n-                let import_ids = self.find_transitive_imports(&binding.kind, &trait_name);\n+                let import_ids = self.find_transitive_imports(&binding.kind, trait_name);\n                 let trait_def_id = binding.res().def_id();\n                 found_traits.push(TraitCandidate { def_id: trait_def_id, import_ids });\n             } else {\n@@ -4660,11 +4660,11 @@ impl<'a> Resolver<'a> {\n     }\n \n     fn find_transitive_imports(&mut self, mut kind: &NameBindingKind<'_>,\n-                               trait_name: &Ident) -> SmallVec<[NodeId; 1]> {\n+                               trait_name: Ident) -> SmallVec<[NodeId; 1]> {\n         let mut import_ids = smallvec![];\n         while let NameBindingKind::Import { directive, binding, .. } = kind {\n             self.maybe_unused_trait_imports.insert(directive.id);\n-            self.add_to_glob_map(&directive, *trait_name);\n+            self.add_to_glob_map(&directive, trait_name);\n             import_ids.push(directive.id);\n             kind = &binding.kind;\n         };"}]}