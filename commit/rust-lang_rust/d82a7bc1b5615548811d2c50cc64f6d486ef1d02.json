{"sha": "d82a7bc1b5615548811d2c50cc64f6d486ef1d02", "node_id": "C_kwDOAAsO6NoAKGQ4MmE3YmMxYjU2MTU1NDg4MTFkMmM1MGNjNjRmNmQ0ODZlZjFkMDI", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-02-22T12:37:47Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-02-22T12:37:47Z"}, "message": "local_id is always != 0 at this point", "tree": {"sha": "0a759a81045e603bef60efce8dbeb3680b150593", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a759a81045e603bef60efce8dbeb3680b150593"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d82a7bc1b5615548811d2c50cc64f6d486ef1d02", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmIU2RsACgkQgTGiTgx5\n769XyA//fBV4Gug4tJwygtRGouavC8SmXUbXrPDzN9dSIGOVSc/Euy9eAznwwW55\niw+obXpOxZXMQ1xI7C06hE5OdoY8Zq3IgG5eQhhNDVs3ZCjKoZQ2/3KZbHiZSzP2\n6DxZK61SjKnIQjhtysK1Pcz/pVtvU9VFaGTmRivUUwlOdWyublAfbHKGmBuBBnMJ\nqW9oCz/Ikcu6m/ZZQvrqU50FcX6vuh6k9eab52ara1Km239RzvNZZOQqJbZDQgaE\ny3/fKUwiens5ZUhUU+C3DA8myBzRwIZSzK6V8HMWjZsOIcWy5OnjB3PfE5E8zJQV\nXT7gGBpVSWt8xs+JEPSi/S9PlFpjgZTINpLHZ6hKYFUI6pUrwcZLrt7tVKHkgqG8\n6h58mVFYIeZ9RXE8rrO/Wx+mFChizNQG792cAYJJvyvFu37qqkuxOq9NQTc5zcKO\nijiRW9+vzQ1fQtaEru7cn1DERQyzqEGkrT0GbuwgNwgKt0ThSaRjAUUmUDEl4aLh\nTjWuGQS3OmgxHM/VvDeSHi6ROxNaMhYr0T02JA5Uw3l+LCHgONt+nSw7fWl6jhHH\nbb6WCdoac/b6E1bhFBXEoHBYQbj+dhLv3xDwSLQQYRPP7zaIOfm8+q293MDv10Pl\nF41bVmNFCi87K4Fzy/vZ2r9dTWV9fUX+gKzCAWxyGuCrP6T+1aM=\n=jg1L\n-----END PGP SIGNATURE-----", "payload": "tree 0a759a81045e603bef60efce8dbeb3680b150593\nparent cbfa7cebee3bb909fcf639e1f9d6d5334f19f75d\nauthor Santiago Pastorino <spastorino@gmail.com> 1645533467 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1645533467 -0300\n\nlocal_id is always != 0 at this point\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d82a7bc1b5615548811d2c50cc64f6d486ef1d02", "html_url": "https://github.com/rust-lang/rust/commit/d82a7bc1b5615548811d2c50cc64f6d486ef1d02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d82a7bc1b5615548811d2c50cc64f6d486ef1d02/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cbfa7cebee3bb909fcf639e1f9d6d5334f19f75d", "url": "https://api.github.com/repos/rust-lang/rust/commits/cbfa7cebee3bb909fcf639e1f9d6d5334f19f75d", "html_url": "https://github.com/rust-lang/rust/commit/cbfa7cebee3bb909fcf639e1f9d6d5334f19f75d"}], "stats": {"total": 21, "additions": 10, "deletions": 11}, "files": [{"sha": "3e6dfc24f3bf196aee2cc0d4137290733507d474", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d82a7bc1b5615548811d2c50cc64f6d486ef1d02/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d82a7bc1b5615548811d2c50cc64f6d486ef1d02/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=d82a7bc1b5615548811d2c50cc64f6d486ef1d02", "patch": "@@ -549,19 +549,18 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                 v.insert(local_id);\n                 self.item_local_id_counter.increment_by(1);\n \n-                if local_id != hir::ItemLocalId::new(0) {\n-                    if let Some(def_id) = self.resolver.opt_local_def_id(ast_node_id) {\n-                        self.owners.ensure_contains_elem(def_id, || hir::MaybeOwner::Phantom);\n-                        if let o @ hir::MaybeOwner::Phantom = &mut self.owners[def_id] {\n-                            // Do not override a `MaybeOwner::Owner` that may already here.\n-                            *o = hir::MaybeOwner::NonOwner(hir_id);\n-                        }\n-                        self.local_id_to_def_id.insert(local_id, def_id);\n+                assert_ne!(local_id, hir::ItemLocalId::new(0));\n+                if let Some(def_id) = self.resolver.opt_local_def_id(ast_node_id) {\n+                    self.owners.ensure_contains_elem(def_id, || hir::MaybeOwner::Phantom);\n+                    if let o @ hir::MaybeOwner::Phantom = &mut self.owners[def_id] {\n+                        // Do not override a `MaybeOwner::Owner` that may already here.\n+                        *o = hir::MaybeOwner::NonOwner(hir_id);\n                     }\n+                    self.local_id_to_def_id.insert(local_id, def_id);\n+                }\n \n-                    if let Some(traits) = self.resolver.take_trait_map(ast_node_id) {\n-                        self.trait_map.insert(hir_id.local_id, traits.into_boxed_slice());\n-                    }\n+                if let Some(traits) = self.resolver.take_trait_map(ast_node_id) {\n+                    self.trait_map.insert(hir_id.local_id, traits.into_boxed_slice());\n                 }\n \n                 hir_id"}]}