{"sha": "bf269335d07b47e548277a02e4cda3c8519a9eec", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmMjY5MzM1ZDA3YjQ3ZTU0ODI3N2EwMmU0Y2RhM2M4NTE5YTllZWM=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-02-06T07:19:39Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-02-06T07:19:39Z"}, "message": "Forbid using `0` as issue number", "tree": {"sha": "d1a50f747b7bde1ad2b5b1c5dae80a7a816d83e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1a50f747b7bde1ad2b5b1c5dae80a7a816d83e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf269335d07b47e548277a02e4cda3c8519a9eec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf269335d07b47e548277a02e4cda3c8519a9eec", "html_url": "https://github.com/rust-lang/rust/commit/bf269335d07b47e548277a02e4cda3c8519a9eec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf269335d07b47e548277a02e4cda3c8519a9eec/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed853b861993ee5f3798037a3560f573c62b17cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed853b861993ee5f3798037a3560f573c62b17cd", "html_url": "https://github.com/rust-lang/rust/commit/ed853b861993ee5f3798037a3560f573c62b17cd"}], "stats": {"total": 60, "additions": 37, "deletions": 23}, "files": [{"sha": "ab03297fffe84a6b645e803fcc8412d2325689e8", "filename": "src/librustc_attr/builtin.rs", "status": "modified", "additions": 22, "deletions": 17, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/bf269335d07b47e548277a02e4cda3c8519a9eec/src%2Flibrustc_attr%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf269335d07b47e548277a02e4cda3c8519a9eec/src%2Flibrustc_attr%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_attr%2Fbuiltin.rs?ref=bf269335d07b47e548277a02e4cda3c8519a9eec", "patch": "@@ -396,26 +396,31 @@ where\n                                     issue_num = match &*issue.unwrap().as_str() {\n                                         \"none\" => None,\n                                         issue => {\n+                                            let emit_diag = |msg: &str| {\n+                                                struct_span_err!(\n+                                                    diagnostic,\n+                                                    mi.span,\n+                                                    E0545,\n+                                                    \"`issue` must be a non-zero numeric string \\\n+                                                    or \\\"none\\\"\",\n+                                                )\n+                                                .span_label(\n+                                                    mi.name_value_literal().unwrap().span,\n+                                                    msg,\n+                                                )\n+                                                .emit();\n+                                            };\n                                             match issue.parse() {\n-                                                Ok(num) => {\n-                                                    // FIXME(rossmacarthur): disallow 0\n-                                                    // Disallowing this requires updates to\n-                                                    // some submodules\n-                                                    NonZeroU32::new(num)\n+                                                Ok(num) if num == 0 => {\n+                                                    emit_diag(\n+                                                        \"`issue` must not be \\\"0\\\", \\\n+                                                        use \\\"none\\\" instead\",\n+                                                    );\n+                                                    continue 'outer;\n                                                 }\n+                                                Ok(num) => NonZeroU32::new(num),\n                                                 Err(err) => {\n-                                                    struct_span_err!(\n-                                                        diagnostic,\n-                                                        mi.span,\n-                                                        E0545,\n-                                                        \"`issue` must be a numeric string \\\n-                                                        or \\\"none\\\"\",\n-                                                    )\n-                                                    .span_label(\n-                                                        mi.name_value_literal().unwrap().span,\n-                                                        &err.to_string(),\n-                                                    )\n-                                                    .emit();\n+                                                    emit_diag(&err.to_string());\n                                                     continue 'outer;\n                                                 }\n                                             }"}, {"sha": "bffe43262e096240dee215378bc1397231ad71e6", "filename": "src/test/ui/feature-gate/unstable-attribute-allow-issue-0.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bf269335d07b47e548277a02e4cda3c8519a9eec/src%2Ftest%2Fui%2Ffeature-gate%2Funstable-attribute-allow-issue-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf269335d07b47e548277a02e4cda3c8519a9eec/src%2Ftest%2Fui%2Ffeature-gate%2Funstable-attribute-allow-issue-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Funstable-attribute-allow-issue-0.rs?ref=bf269335d07b47e548277a02e4cda3c8519a9eec", "patch": "@@ -4,10 +4,10 @@\n #![stable(feature = \"stable_test_feature\", since = \"1.0.0\")]\n \n #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n-fn unstable_issue_0() {}\n+fn unstable_issue_0() {} //~^ ERROR `issue` must be a non-zero numeric string or \"none\"\n \n #[unstable(feature = \"unstable_test_feature\", issue = \"none\")]\n fn unstable_issue_none() {}\n \n #[unstable(feature = \"unstable_test_feature\", issue = \"something\")]\n-fn unstable_issue_not_allowed() {} //~^ ERROR `issue` must be a numeric string or \"none\"\n+fn unstable_issue_not_allowed() {} //~^ ERROR `issue` must be a non-zero numeric string or \"none\""}, {"sha": "7bbaf92fc68c17cf8956e6462ee0aeb55f2ff024", "filename": "src/test/ui/feature-gate/unstable-attribute-allow-issue-0.stderr", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bf269335d07b47e548277a02e4cda3c8519a9eec/src%2Ftest%2Fui%2Ffeature-gate%2Funstable-attribute-allow-issue-0.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bf269335d07b47e548277a02e4cda3c8519a9eec/src%2Ftest%2Fui%2Ffeature-gate%2Funstable-attribute-allow-issue-0.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Funstable-attribute-allow-issue-0.stderr?ref=bf269335d07b47e548277a02e4cda3c8519a9eec", "patch": "@@ -1,10 +1,18 @@\n-error[E0545]: `issue` must be a numeric string or \"none\"\n+error[E0545]: `issue` must be a non-zero numeric string or \"none\"\n+  --> $DIR/unstable-attribute-allow-issue-0.rs:6:47\n+   |\n+LL | #[unstable(feature = \"unstable_test_feature\", issue = \"0\")]\n+   |                                               ^^^^^^^^---\n+   |                                                       |\n+   |                                                       `issue` must not be \"0\", use \"none\" instead\n+\n+error[E0545]: `issue` must be a non-zero numeric string or \"none\"\n   --> $DIR/unstable-attribute-allow-issue-0.rs:12:47\n    |\n LL | #[unstable(feature = \"unstable_test_feature\", issue = \"something\")]\n    |                                               ^^^^^^^^-----------\n    |                                                       |\n    |                                                       invalid digit found in string\n \n-error: aborting due to previous error\n+error: aborting due to 2 previous errors\n "}, {"sha": "de3ea4eaca967569f2b3c79839e42e72b635e80f", "filename": "src/test/ui/stability-attribute/stability-attribute-sanity-2.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bf269335d07b47e548277a02e4cda3c8519a9eec/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-sanity-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf269335d07b47e548277a02e4cda3c8519a9eec/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-sanity-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-sanity-2.rs?ref=bf269335d07b47e548277a02e4cda3c8519a9eec", "patch": "@@ -10,7 +10,8 @@ fn f1() { }\n #[stable(feature = \"a\", sinse = \"1.0.0\")] //~ ERROR unknown meta item 'sinse'\n fn f2() { }\n \n-#[unstable(feature = \"a\", issue = \"no\")] //~ ERROR `issue` must be a numeric string or \"none\"\n+#[unstable(feature = \"a\", issue = \"no\")]\n+//~^ ERROR `issue` must be a non-zero numeric string or \"none\"\n fn f3() { }\n \n fn main() { }"}, {"sha": "3b8261918991942fb2eddc4e8e9bf9a15cc87e24", "filename": "src/test/ui/stability-attribute/stability-attribute-sanity-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf269335d07b47e548277a02e4cda3c8519a9eec/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-sanity-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bf269335d07b47e548277a02e4cda3c8519a9eec/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-sanity-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-sanity-2.stderr?ref=bf269335d07b47e548277a02e4cda3c8519a9eec", "patch": "@@ -10,7 +10,7 @@ error[E0541]: unknown meta item 'sinse'\n LL | #[stable(feature = \"a\", sinse = \"1.0.0\")]\n    |                         ^^^^^^^^^^^^^^^ expected one of `since`, `note`\n \n-error[E0545]: `issue` must be a numeric string or \"none\"\n+error[E0545]: `issue` must be a non-zero numeric string or \"none\"\n   --> $DIR/stability-attribute-sanity-2.rs:13:27\n    |\n LL | #[unstable(feature = \"a\", issue = \"no\")]"}]}