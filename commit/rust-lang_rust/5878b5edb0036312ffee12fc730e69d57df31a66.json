{"sha": "5878b5edb0036312ffee12fc730e69d57df31a66", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4NzhiNWVkYjAwMzYzMTJmZmVlMTJmYzczMGU2OWQ1N2RmMzFhNjY=", "commit": {"author": {"name": "Cameron Zwarich", "email": "zwarich@mozilla.com", "date": "2014-06-14T03:48:10Z"}, "committer": {"name": "Cameron Zwarich", "email": "zwarich@mozilla.com", "date": "2014-06-14T03:48:10Z"}, "message": "Add new tests for uses of mutably borrowed paths", "tree": {"sha": "1bde20a0e170eb94cefed1b7f2393d28005cb2ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1bde20a0e170eb94cefed1b7f2393d28005cb2ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5878b5edb0036312ffee12fc730e69d57df31a66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5878b5edb0036312ffee12fc730e69d57df31a66", "html_url": "https://github.com/rust-lang/rust/commit/5878b5edb0036312ffee12fc730e69d57df31a66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5878b5edb0036312ffee12fc730e69d57df31a66/comments", "author": null, "committer": null, "parents": [{"sha": "d7de4e9affac24c6e96ae068954480bfa763908c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7de4e9affac24c6e96ae068954480bfa763908c", "html_url": "https://github.com/rust-lang/rust/commit/d7de4e9affac24c6e96ae068954480bfa763908c"}], "stats": {"total": 150, "additions": 150, "deletions": 0}, "files": [{"sha": "7414bb930d4d6e87b497f719cd6928fb1ee08861", "filename": "src/test/compile-fail/borrowck-use-mut-borrow.rs", "status": "added", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/rust-lang/rust/blob/5878b5edb0036312ffee12fc730e69d57df31a66/src%2Ftest%2Fcompile-fail%2Fborrowck-use-mut-borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5878b5edb0036312ffee12fc730e69d57df31a66/src%2Ftest%2Fcompile-fail%2Fborrowck-use-mut-borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-use-mut-borrow.rs?ref=5878b5edb0036312ffee12fc730e69d57df31a66", "patch": "@@ -0,0 +1,93 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct A { a: int, b: int }\n+struct B { a: int, b: Box<int> }\n+\n+fn var_copy_after_var_borrow() {\n+    let mut x: int = 1;\n+    let p = &mut x;\n+    drop(x); //~ ERROR cannot use `x` because it was mutably borrowed\n+    *p = 2;\n+}\n+\n+fn var_copy_after_field_borrow() {\n+    let mut x = A { a: 1, b: 2 };\n+    let p = &mut x.a;\n+    drop(x); //~ ERROR cannot use `x` because it was mutably borrowed\n+    *p = 3;\n+}\n+\n+fn field_copy_after_var_borrow() {\n+    let mut x = A { a: 1, b: 2 };\n+    let p = &mut x;\n+    drop(x.a); //~ ERROR cannot use `x.a` because it was mutably borrowed\n+    p.a = 3;\n+}\n+\n+fn field_copy_after_field_borrow() {\n+    let mut x = A { a: 1, b: 2 };\n+    let p = &mut x.a;\n+    drop(x.a); //~ ERROR cannot use `x.a` because it was mutably borrowed\n+    *p = 3;\n+}\n+\n+fn fu_field_copy_after_var_borrow() {\n+    let mut x = A { a: 1, b: 2 };\n+    let p = &mut x;\n+    let y = A { b: 3, .. x }; //~ ERROR cannot use `x.a` because it was mutably borrowed\n+    drop(y);\n+    p.a = 4;\n+}\n+\n+fn fu_field_copy_after_field_borrow() {\n+    let mut x = A { a: 1, b: 2 };\n+    let p = &mut x.a;\n+    let y = A { b: 3, .. x }; //~ ERROR cannot use `x.a` because it was mutably borrowed\n+    drop(y);\n+    *p = 4;\n+}\n+\n+fn var_deref_after_var_borrow() {\n+    let mut x: Box<int> = box 1;\n+    let p = &mut x;\n+    drop(*x); //~ ERROR cannot use `*x` because it was mutably borrowed\n+    **p = 2;\n+}\n+\n+fn field_deref_after_var_borrow() {\n+    let mut x = B { a: 1, b: box 2 };\n+    let p = &mut x;\n+    drop(*x.b); //~ ERROR cannot use `*x.b` because it was mutably borrowed\n+    p.a = 3;\n+}\n+\n+fn field_deref_after_field_borrow() {\n+    let mut x = B { a: 1, b: box 2 };\n+    let p = &mut x.b;\n+    drop(*x.b); //~ ERROR cannot use `*x.b` because it was mutably borrowed\n+    **p = 3;\n+}\n+\n+fn main() {\n+    var_copy_after_var_borrow();\n+    var_copy_after_field_borrow();\n+\n+    field_copy_after_var_borrow();\n+    field_copy_after_field_borrow();\n+\n+    fu_field_copy_after_var_borrow();\n+    fu_field_copy_after_field_borrow();\n+\n+    var_deref_after_var_borrow();\n+    field_deref_after_var_borrow();\n+    field_deref_after_field_borrow();\n+}\n+"}, {"sha": "cbfdd5961ffacc650d40dc7190e350d87ff702bf", "filename": "src/test/run-pass/borrowck-use-mut-borrow.rs", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/5878b5edb0036312ffee12fc730e69d57df31a66/src%2Ftest%2Frun-pass%2Fborrowck-use-mut-borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5878b5edb0036312ffee12fc730e69d57df31a66/src%2Ftest%2Frun-pass%2Fborrowck-use-mut-borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-use-mut-borrow.rs?ref=5878b5edb0036312ffee12fc730e69d57df31a66", "patch": "@@ -0,0 +1,57 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct A { a: int, b: Box<int> }\n+\n+fn field_copy_after_field_borrow() {\n+    let mut x = A { a: 1, b: box 2 };\n+    let p = &mut x.b;\n+    drop(x.a);\n+    **p = 3;\n+}\n+\n+fn fu_field_copy_after_field_borrow() {\n+    let mut x = A { a: 1, b: box 2 };\n+    let p = &mut x.b;\n+    let y = A { b: box 3, .. x };\n+    drop(y);\n+    **p = 4;\n+}\n+\n+fn field_deref_after_field_borrow() {\n+    let mut x = A { a: 1, b: box 2 };\n+    let p = &mut x.a;\n+    drop(*x.b);\n+    *p = 3;\n+}\n+\n+fn field_move_after_field_borrow() {\n+    let mut x = A { a: 1, b: box 2 };\n+    let p = &mut x.a;\n+    drop(x.b);\n+    *p = 3;\n+}\n+\n+fn fu_field_move_after_field_borrow() {\n+    let mut x = A { a: 1, b: box 2 };\n+    let p = &mut x.a;\n+    let y = A { a: 3, .. x };\n+    drop(y);\n+    *p = 4;\n+}\n+\n+fn main() {\n+    field_copy_after_field_borrow();\n+    fu_field_copy_after_field_borrow();\n+    field_deref_after_field_borrow();\n+    field_move_after_field_borrow();\n+    fu_field_move_after_field_borrow();\n+}\n+"}]}