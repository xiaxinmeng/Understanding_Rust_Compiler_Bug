{"sha": "b8bbbe38d1b2dadae1b66efb49a36c713d5b6dfe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4YmJiZTM4ZDFiMmRhZGFlMWI2NmVmYjQ5YTM2YzcxM2Q1YjZkZmU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-09-16T14:57:52Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-09-16T14:57:52Z"}, "message": "Remove cfg-if dependency", "tree": {"sha": "e2ceb5676dd2906d949a26d41588049e59db0520", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2ceb5676dd2906d949a26d41588049e59db0520"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8bbbe38d1b2dadae1b66efb49a36c713d5b6dfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8bbbe38d1b2dadae1b66efb49a36c713d5b6dfe", "html_url": "https://github.com/rust-lang/rust/commit/b8bbbe38d1b2dadae1b66efb49a36c713d5b6dfe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8bbbe38d1b2dadae1b66efb49a36c713d5b6dfe/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55d4afd2ba93923fa91bb4099ac805de50f4dc6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/55d4afd2ba93923fa91bb4099ac805de50f4dc6e", "html_url": "https://github.com/rust-lang/rust/commit/55d4afd2ba93923fa91bb4099ac805de50f4dc6e"}], "stats": {"total": 51, "additions": 25, "deletions": 26}, "files": [{"sha": "d522fc8da24c43e01fce73affb2fd972cb2c1649", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b8bbbe38d1b2dadae1b66efb49a36c713d5b6dfe/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/b8bbbe38d1b2dadae1b66efb49a36c713d5b6dfe/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=b8bbbe38d1b2dadae1b66efb49a36c713d5b6dfe", "patch": "@@ -317,7 +317,6 @@ name = \"rustc_codegen_cranelift\"\n version = \"0.1.0\"\n dependencies = [\n  \"ar\",\n- \"cfg-if\",\n  \"cranelift-codegen\",\n  \"cranelift-frontend\",\n  \"cranelift-module\","}, {"sha": "6250dc8573be476b50b4fe3883d7ca1740df8980", "filename": "Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b8bbbe38d1b2dadae1b66efb49a36c713d5b6dfe/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/b8bbbe38d1b2dadae1b66efb49a36c713d5b6dfe/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=b8bbbe38d1b2dadae1b66efb49a36c713d5b6dfe", "patch": "@@ -20,7 +20,6 @@ object = { version = \"0.21.1\", default-features = false, features = [\"read\", \"st\n \n ar = { git = \"https://github.com/bjorn3/rust-ar.git\", branch = \"do_not_remove_cg_clif_ranlib\" }\n indexmap = \"1.0.2\"\n-cfg-if = \"0.1.10\"\n libloading = { version = \"0.6.0\", optional = true }\n \n # Uncomment to use local checkout of cranelift"}, {"sha": "4c23f75be699cca9fecf1126d72858b44123bc4a", "filename": "src/debuginfo/unwind.rs", "status": "modified", "additions": 25, "deletions": 24, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/b8bbbe38d1b2dadae1b66efb49a36c713d5b6dfe/src%2Fdebuginfo%2Funwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8bbbe38d1b2dadae1b66efb49a36c713d5b6dfe/src%2Fdebuginfo%2Funwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdebuginfo%2Funwind.rs?ref=b8bbbe38d1b2dadae1b66efb49a36c713d5b6dfe", "patch": "@@ -94,33 +94,34 @@ impl<'tcx> UnwindContext<'tcx> {\n         // =======================================================================\n         // Everything after this line up to the end of the file is loosly based on\n         // https://github.com/bytecodealliance/wasmtime/blob/4471a82b0c540ff48960eca6757ccce5b1b5c3e4/crates/jit/src/unwind/systemv.rs\n-        cfg_if::cfg_if! {\n-            if #[cfg(target_os = \"macos\")] {\n-                // On macOS, `__register_frame` takes a pointer to a single FDE\n-                let start = eh_frame.as_ptr();\n-                let end = start.add(eh_frame.len());\n-                let mut current = start;\n-\n-                // Walk all of the entries in the frame table and register them\n-                while current < end {\n-                    let len = std::ptr::read::<u32>(current as *const u32) as usize;\n-\n-                    // Skip over the CIE\n-                    if current != start {\n-                        __register_frame(current);\n-                        registrations.push(current as usize);\n-                    }\n-\n-                    // Move to the next table entry (+4 because the length itself is not inclusive)\n-                    current = current.add(len + 4);\n+        #[cfg(target_os = \"macos\")]\n+        {\n+            // On macOS, `__register_frame` takes a pointer to a single FDE\n+            let start = eh_frame.as_ptr();\n+            let end = start.add(eh_frame.len());\n+            let mut current = start;\n+\n+            // Walk all of the entries in the frame table and register them\n+            while current < end {\n+                let len = std::ptr::read::<u32>(current as *const u32) as usize;\n+\n+                // Skip over the CIE\n+                if current != start {\n+                    __register_frame(current);\n+                    registrations.push(current as usize);\n                 }\n-            } else {\n-                // On other platforms, `__register_frame` will walk the FDEs until an entry of length 0\n-                let ptr = eh_frame.as_ptr();\n-                __register_frame(ptr);\n-                registrations.push(ptr as usize);\n+\n+                // Move to the next table entry (+4 because the length itself is not inclusive)\n+                current = current.add(len + 4);\n             }\n         }\n+        #[cfg(not(target_os = \"macos\"))]\n+        {\n+            // On other platforms, `__register_frame` will walk the FDEs until an entry of length 0\n+            let ptr = eh_frame.as_ptr();\n+            __register_frame(ptr);\n+            registrations.push(ptr as usize);\n+        }\n \n         Some(UnwindRegistry {\n             _frame_table: eh_frame,"}]}