{"sha": "4b1a12c2403280910f9a76736c91ed3c4f99b3c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiMWExMmMyNDAzMjgwOTEwZjlhNzY3MzZjOTFlZDNjNGY5OWIzYzA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-06-12T22:22:58Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-06-12T22:32:16Z"}, "message": "test the Rc::{into,from}_raw roundtrip\n\nThis uses some pointer arithmetic based on field offsets", "tree": {"sha": "05b461e62f78adf652ddbac9238f79a96d979a82", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05b461e62f78adf652ddbac9238f79a96d979a82"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b1a12c2403280910f9a76736c91ed3c4f99b3c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b1a12c2403280910f9a76736c91ed3c4f99b3c0", "html_url": "https://github.com/rust-lang/rust/commit/4b1a12c2403280910f9a76736c91ed3c4f99b3c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b1a12c2403280910f9a76736c91ed3c4f99b3c0/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03577a905a12b9bd23a5a1e0b5f9e2403ba8a91a", "url": "https://api.github.com/repos/rust-lang/rust/commits/03577a905a12b9bd23a5a1e0b5f9e2403ba8a91a", "html_url": "https://github.com/rust-lang/rust/commit/03577a905a12b9bd23a5a1e0b5f9e2403ba8a91a"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "c6de3675abe8ccb11e62c385233a40468a5ea18c", "filename": "tests/run-pass/rc.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4b1a12c2403280910f9a76736c91ed3c4f99b3c0/tests%2Frun-pass%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b1a12c2403280910f9a76736c91ed3c4f99b3c0/tests%2Frun-pass%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Frc.rs?ref=4b1a12c2403280910f9a76736c91ed3c4f99b3c0", "patch": "@@ -8,6 +8,16 @@ fn rc_refcell() -> i32 {\n     x\n }\n \n+fn rc_raw() {\n+    let r = Rc::new(0);\n+    let r2 = Rc::into_raw(r.clone());\n+    let r2 = unsafe { Rc::from_raw(r2) };\n+    assert!(Rc::ptr_eq(&r, &r2));\n+    drop(r);\n+    assert!(Rc::try_unwrap(r2).is_ok());\n+}\n+\n fn main() {\n     rc_refcell();\n+    rc_raw();\n }"}]}