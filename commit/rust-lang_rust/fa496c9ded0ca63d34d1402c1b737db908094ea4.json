{"sha": "fa496c9ded0ca63d34d1402c1b737db908094ea4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhNDk2YzlkZWQwY2E2M2QzNGQxNDAyYzFiNzM3ZGI5MDgwOTRlYTQ=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-09-16T15:49:53Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-09-19T19:10:23Z"}, "message": "Ignore obligations coming from desugared call spans", "tree": {"sha": "a239998e69a85f479100f3c46a0b6fe8ae53752c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a239998e69a85f479100f3c46a0b6fe8ae53752c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa496c9ded0ca63d34d1402c1b737db908094ea4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa496c9ded0ca63d34d1402c1b737db908094ea4", "html_url": "https://github.com/rust-lang/rust/commit/fa496c9ded0ca63d34d1402c1b737db908094ea4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa496c9ded0ca63d34d1402c1b737db908094ea4/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02e3fb89a7e0c7944ed8237f5d307322879b6fcc", "url": "https://api.github.com/repos/rust-lang/rust/commits/02e3fb89a7e0c7944ed8237f5d307322879b6fcc", "html_url": "https://github.com/rust-lang/rust/commit/02e3fb89a7e0c7944ed8237f5d307322879b6fcc"}], "stats": {"total": 484, "additions": 195, "deletions": 289}, "files": [{"sha": "4db289a1824c807d84b7d9af7463851d74dd65cd", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/fa496c9ded0ca63d34d1402c1b737db908094ea4/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa496c9ded0ca63d34d1402c1b737db908094ea4/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=fa496c9ded0ca63d34d1402c1b737db908094ea4", "patch": "@@ -3273,21 +3273,23 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 if let Err(\n                     mut errors,\n                 ) = self.fulfillment_cx.borrow_mut().select_where_possible(self) {\n-                    for error in &mut errors {\n-                        if let ty::Predicate::Trait(predicate) = error.obligation.predicate {\n-                            let mut referenced_in = vec![];\n-                            for (i, ty) in &final_arg_types {\n-                                let ty = self.resolve_vars_if_possible(ty);\n-                                info!(\"final ty {} {:?}\", i, ty);\n-                                for ty in ty.walk() {\n-                                    info!(\"walk {:?}\", ty);\n-                                    if ty == predicate.skip_binder().self_ty() {\n-                                        referenced_in.push(*i);\n+                    if !sp.desugaring_kind().is_some() {\n+                        // We *do not* do this for desugared call spans to keep good diagnostics\n+                        // involving try.\n+                        for error in &mut errors {\n+                            if let ty::Predicate::Trait(predicate) = error.obligation.predicate {\n+                                let mut referenced_in = vec![];\n+                                for (i, ty) in &final_arg_types {\n+                                    let ty = self.resolve_vars_if_possible(ty);\n+                                    for ty in ty.walk() {\n+                                        if ty == predicate.skip_binder().self_ty() {\n+                                            referenced_in.push(*i);\n+                                        }\n                                     }\n                                 }\n-                            }\n-                            if referenced_in.len() == 1 {\n-                                error.obligation.cause.span = args[referenced_in[0]].span;\n+                                if referenced_in.len() == 1 {\n+                                    error.obligation.cause.span = args[referenced_in[0]].span;\n+                                }\n                             }\n                         }\n                     }"}, {"sha": "22bcbb1064dd744266b16cd3db205f5bac75debc", "filename": "src/test/ui/async-await/await-keyword/incorrect-syntax-suggestions.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fa496c9ded0ca63d34d1402c1b737db908094ea4/src%2Ftest%2Fui%2Fasync-await%2Fawait-keyword%2Fincorrect-syntax-suggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa496c9ded0ca63d34d1402c1b737db908094ea4/src%2Ftest%2Fui%2Fasync-await%2Fawait-keyword%2Fincorrect-syntax-suggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fawait-keyword%2Fincorrect-syntax-suggestions.rs?ref=fa496c9ded0ca63d34d1402c1b737db908094ea4", "patch": "@@ -14,8 +14,7 @@ async fn foo2() -> Result<(), ()> {\n }\n async fn foo3() -> Result<(), ()> {\n     let _ = await bar()?; //~ ERROR incorrect use of `await`\n-    //~^ ERROR the trait bound `impl std::future::Future: std::ops::Try` is not satisfied\n-    //~| ERROR the trait bound `impl std::future::Future: std::ops::Try` is not satisfied\n+    //~^ ERROR the `?` operator can only be applied to values that implement `std::ops::Try`\n     Ok(())\n }\n async fn foo21() -> Result<(), ()> {"}, {"sha": "7caa9f26bc2f848ab341347a45419b24a15d6e7d", "filename": "src/test/ui/async-await/await-keyword/incorrect-syntax-suggestions.stderr", "status": "modified", "additions": 35, "deletions": 40, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/fa496c9ded0ca63d34d1402c1b737db908094ea4/src%2Ftest%2Fui%2Fasync-await%2Fawait-keyword%2Fincorrect-syntax-suggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa496c9ded0ca63d34d1402c1b737db908094ea4/src%2Ftest%2Fui%2Fasync-await%2Fawait-keyword%2Fincorrect-syntax-suggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fawait-keyword%2Fincorrect-syntax-suggestions.stderr?ref=fa496c9ded0ca63d34d1402c1b737db908094ea4", "patch": "@@ -17,117 +17,117 @@ LL |     let _ = await bar()?;\n    |             ^^^^^^^^^^^^ help: `await` is a postfix operation: `bar()?.await`\n \n error: incorrect use of `await`\n-  --> $DIR/incorrect-syntax-suggestions.rs:22:13\n+  --> $DIR/incorrect-syntax-suggestions.rs:21:13\n    |\n LL |     let _ = await { bar() };\n    |             ^^^^^^^^^^^^^^^ help: `await` is a postfix operation: `{ bar() }.await`\n \n error: incorrect use of `await`\n-  --> $DIR/incorrect-syntax-suggestions.rs:26:13\n+  --> $DIR/incorrect-syntax-suggestions.rs:25:13\n    |\n LL |     let _ = await(bar());\n    |             ^^^^^^^^^^^^ help: `await` is a postfix operation: `(bar()).await`\n \n error: incorrect use of `await`\n-  --> $DIR/incorrect-syntax-suggestions.rs:30:13\n+  --> $DIR/incorrect-syntax-suggestions.rs:29:13\n    |\n LL |     let _ = await { bar() }?;\n    |             ^^^^^^^^^^^^^^^ help: `await` is a postfix operation: `{ bar() }.await`\n \n error: incorrect use of `await`\n-  --> $DIR/incorrect-syntax-suggestions.rs:34:14\n+  --> $DIR/incorrect-syntax-suggestions.rs:33:14\n    |\n LL |     let _ = (await bar())?;\n    |              ^^^^^^^^^^^ help: `await` is a postfix operation: `bar().await`\n \n error: incorrect use of `await`\n-  --> $DIR/incorrect-syntax-suggestions.rs:38:24\n+  --> $DIR/incorrect-syntax-suggestions.rs:37:24\n    |\n LL |     let _ = bar().await();\n    |                        ^^ help: `await` is not a method call, remove the parentheses\n \n error: incorrect use of `await`\n-  --> $DIR/incorrect-syntax-suggestions.rs:42:24\n+  --> $DIR/incorrect-syntax-suggestions.rs:41:24\n    |\n LL |     let _ = bar().await()?;\n    |                        ^^ help: `await` is not a method call, remove the parentheses\n \n error: incorrect use of `await`\n-  --> $DIR/incorrect-syntax-suggestions.rs:54:13\n+  --> $DIR/incorrect-syntax-suggestions.rs:53:13\n    |\n LL |     let _ = await bar();\n    |             ^^^^^^^^^^^ help: `await` is a postfix operation: `bar().await`\n \n error: incorrect use of `await`\n-  --> $DIR/incorrect-syntax-suggestions.rs:59:13\n+  --> $DIR/incorrect-syntax-suggestions.rs:58:13\n    |\n LL |     let _ = await? bar();\n    |             ^^^^^^^^^^^^ help: `await` is a postfix operation: `bar().await?`\n \n error: incorrect use of `await`\n-  --> $DIR/incorrect-syntax-suggestions.rs:64:13\n+  --> $DIR/incorrect-syntax-suggestions.rs:63:13\n    |\n LL |     let _ = await bar()?;\n    |             ^^^^^^^^^^^^ help: `await` is a postfix operation: `bar()?.await`\n \n error: incorrect use of `await`\n-  --> $DIR/incorrect-syntax-suggestions.rs:69:14\n+  --> $DIR/incorrect-syntax-suggestions.rs:68:14\n    |\n LL |     let _ = (await bar())?;\n    |              ^^^^^^^^^^^ help: `await` is a postfix operation: `bar().await`\n \n error: incorrect use of `await`\n-  --> $DIR/incorrect-syntax-suggestions.rs:74:24\n+  --> $DIR/incorrect-syntax-suggestions.rs:73:24\n    |\n LL |     let _ = bar().await();\n    |                        ^^ help: `await` is not a method call, remove the parentheses\n \n error: incorrect use of `await`\n-  --> $DIR/incorrect-syntax-suggestions.rs:79:24\n+  --> $DIR/incorrect-syntax-suggestions.rs:78:24\n    |\n LL |     let _ = bar().await()?;\n    |                        ^^ help: `await` is not a method call, remove the parentheses\n \n error: incorrect use of `await`\n-  --> $DIR/incorrect-syntax-suggestions.rs:107:13\n+  --> $DIR/incorrect-syntax-suggestions.rs:106:13\n    |\n LL |     let _ = await!(bar());\n    |             ^^^^^^^^^^^^^ help: `await` is a postfix operation: `bar().await`\n \n error: incorrect use of `await`\n-  --> $DIR/incorrect-syntax-suggestions.rs:111:13\n+  --> $DIR/incorrect-syntax-suggestions.rs:110:13\n    |\n LL |     let _ = await!(bar())?;\n    |             ^^^^^^^^^^^^^ help: `await` is a postfix operation: `bar().await`\n \n error: incorrect use of `await`\n-  --> $DIR/incorrect-syntax-suggestions.rs:116:17\n+  --> $DIR/incorrect-syntax-suggestions.rs:115:17\n    |\n LL |         let _ = await!(bar())?;\n    |                 ^^^^^^^^^^^^^ help: `await` is a postfix operation: `bar().await`\n \n error: incorrect use of `await`\n-  --> $DIR/incorrect-syntax-suggestions.rs:124:17\n+  --> $DIR/incorrect-syntax-suggestions.rs:123:17\n    |\n LL |         let _ = await!(bar())?;\n    |                 ^^^^^^^^^^^^^ help: `await` is a postfix operation: `bar().await`\n \n error: expected expression, found `=>`\n-  --> $DIR/incorrect-syntax-suggestions.rs:132:25\n+  --> $DIR/incorrect-syntax-suggestions.rs:131:25\n    |\n LL |     match await { await => () }\n    |                   ----- ^^ expected expression\n    |                   |\n    |                   while parsing this incorrect await expression\n \n error: incorrect use of `await`\n-  --> $DIR/incorrect-syntax-suggestions.rs:132:11\n+  --> $DIR/incorrect-syntax-suggestions.rs:131:11\n    |\n LL |     match await { await => () }\n    |           ^^^^^^^^^^^^^^^^^^^^^ help: `await` is a postfix operation: `{ await => () }.await`\n \n error: expected one of `.`, `?`, `{`, or an operator, found `}`\n-  --> $DIR/incorrect-syntax-suggestions.rs:135:1\n+  --> $DIR/incorrect-syntax-suggestions.rs:134:1\n    |\n LL |     match await { await => () }\n    |     -----                      - expected one of `.`, `?`, `{`, or an operator here\n@@ -138,115 +138,110 @@ LL | }\n    | ^ unexpected token\n \n error[E0728]: `await` is only allowed inside `async` functions and blocks\n-  --> $DIR/incorrect-syntax-suggestions.rs:54:13\n+  --> $DIR/incorrect-syntax-suggestions.rs:53:13\n    |\n LL | fn foo9() -> Result<(), ()> {\n    |    ---- this is not `async`\n LL |     let _ = await bar();\n    |             ^^^^^^^^^^^ only allowed inside `async` functions and blocks\n \n error[E0728]: `await` is only allowed inside `async` functions and blocks\n-  --> $DIR/incorrect-syntax-suggestions.rs:59:13\n+  --> $DIR/incorrect-syntax-suggestions.rs:58:13\n    |\n LL | fn foo10() -> Result<(), ()> {\n    |    ----- this is not `async`\n LL |     let _ = await? bar();\n    |             ^^^^^^^^^^^^ only allowed inside `async` functions and blocks\n \n error[E0728]: `await` is only allowed inside `async` functions and blocks\n-  --> $DIR/incorrect-syntax-suggestions.rs:64:13\n+  --> $DIR/incorrect-syntax-suggestions.rs:63:13\n    |\n LL | fn foo11() -> Result<(), ()> {\n    |    ----- this is not `async`\n LL |     let _ = await bar()?;\n    |             ^^^^^^^^^^^^ only allowed inside `async` functions and blocks\n \n error[E0728]: `await` is only allowed inside `async` functions and blocks\n-  --> $DIR/incorrect-syntax-suggestions.rs:69:14\n+  --> $DIR/incorrect-syntax-suggestions.rs:68:14\n    |\n LL | fn foo12() -> Result<(), ()> {\n    |    ----- this is not `async`\n LL |     let _ = (await bar())?;\n    |              ^^^^^^^^^^^ only allowed inside `async` functions and blocks\n \n error[E0728]: `await` is only allowed inside `async` functions and blocks\n-  --> $DIR/incorrect-syntax-suggestions.rs:74:13\n+  --> $DIR/incorrect-syntax-suggestions.rs:73:13\n    |\n LL | fn foo13() -> Result<(), ()> {\n    |    ----- this is not `async`\n LL |     let _ = bar().await();\n    |             ^^^^^^^^^^^ only allowed inside `async` functions and blocks\n \n error[E0728]: `await` is only allowed inside `async` functions and blocks\n-  --> $DIR/incorrect-syntax-suggestions.rs:79:13\n+  --> $DIR/incorrect-syntax-suggestions.rs:78:13\n    |\n LL | fn foo14() -> Result<(), ()> {\n    |    ----- this is not `async`\n LL |     let _ = bar().await()?;\n    |             ^^^^^^^^^^^ only allowed inside `async` functions and blocks\n \n error[E0728]: `await` is only allowed inside `async` functions and blocks\n-  --> $DIR/incorrect-syntax-suggestions.rs:84:13\n+  --> $DIR/incorrect-syntax-suggestions.rs:83:13\n    |\n LL | fn foo15() -> Result<(), ()> {\n    |    ----- this is not `async`\n LL |     let _ = bar().await;\n    |             ^^^^^^^^^^^ only allowed inside `async` functions and blocks\n \n error[E0728]: `await` is only allowed inside `async` functions and blocks\n-  --> $DIR/incorrect-syntax-suggestions.rs:88:13\n+  --> $DIR/incorrect-syntax-suggestions.rs:87:13\n    |\n LL | fn foo16() -> Result<(), ()> {\n    |    ----- this is not `async`\n LL |     let _ = bar().await?;\n    |             ^^^^^^^^^^^ only allowed inside `async` functions and blocks\n \n error[E0728]: `await` is only allowed inside `async` functions and blocks\n-  --> $DIR/incorrect-syntax-suggestions.rs:93:17\n+  --> $DIR/incorrect-syntax-suggestions.rs:92:17\n    |\n LL |     fn foo() -> Result<(), ()> {\n    |        --- this is not `async`\n LL |         let _ = bar().await?;\n    |                 ^^^^^^^^^^^ only allowed inside `async` functions and blocks\n \n error[E0728]: `await` is only allowed inside `async` functions and blocks\n-  --> $DIR/incorrect-syntax-suggestions.rs:100:17\n+  --> $DIR/incorrect-syntax-suggestions.rs:99:17\n    |\n LL |     let foo = || {\n    |               -- this is not `async`\n LL |         let _ = bar().await?;\n    |                 ^^^^^^^^^^^ only allowed inside `async` functions and blocks\n \n error[E0728]: `await` is only allowed inside `async` functions and blocks\n-  --> $DIR/incorrect-syntax-suggestions.rs:116:17\n+  --> $DIR/incorrect-syntax-suggestions.rs:115:17\n    |\n LL |     fn foo() -> Result<(), ()> {\n    |        --- this is not `async`\n LL |         let _ = await!(bar())?;\n    |                 ^^^^^^^^^^^^^ only allowed inside `async` functions and blocks\n \n error[E0728]: `await` is only allowed inside `async` functions and blocks\n-  --> $DIR/incorrect-syntax-suggestions.rs:124:17\n+  --> $DIR/incorrect-syntax-suggestions.rs:123:17\n    |\n LL |     let foo = || {\n    |               -- this is not `async`\n LL |         let _ = await!(bar())?;\n    |                 ^^^^^^^^^^^^^ only allowed inside `async` functions and blocks\n \n-error[E0277]: the trait bound `impl std::future::Future: std::ops::Try` is not satisfied\n+error[E0277]: the `?` operator can only be applied to values that implement `std::ops::Try`\n   --> $DIR/incorrect-syntax-suggestions.rs:16:19\n    |\n LL |     let _ = await bar()?;\n-   |                   ^^^^^ the trait `std::ops::Try` is not implemented for `impl std::future::Future`\n+   |                   ^^^^^^ the `?` operator cannot be applied to type `impl std::future::Future`\n    |\n+   = help: the trait `std::ops::Try` is not implemented for `impl std::future::Future`\n    = note: required by `std::ops::Try::into_result`\n \n-error[E0277]: the trait bound `impl std::future::Future: std::ops::Try` is not satisfied\n-  --> $DIR/incorrect-syntax-suggestions.rs:16:19\n-   |\n-LL |     let _ = await bar()?;\n-   |                   ^^^^^^ the trait `std::ops::Try` is not implemented for `impl std::future::Future`\n-\n-error: aborting due to 36 previous errors\n+error: aborting due to 35 previous errors\n \n For more information about this error, try `rustc --explain E0277`."}, {"sha": "7d1e5c3d64df3f3989051e920a8b9fab658b85bb", "filename": "src/test/ui/rfc-2497-if-let-chains/disallowed-positions.rs", "status": "modified", "additions": 9, "deletions": 15, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/fa496c9ded0ca63d34d1402c1b737db908094ea4/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fdisallowed-positions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa496c9ded0ca63d34d1402c1b737db908094ea4/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fdisallowed-positions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fdisallowed-positions.rs?ref=fa496c9ded0ca63d34d1402c1b737db908094ea4", "patch": "@@ -40,14 +40,12 @@ fn nested_within_if_expr() {\n \n     fn _check_try_binds_tighter() -> Result<(), ()> {\n         if let 0 = 0? {}\n-        //~^ ERROR the trait bound `{integer}: std::ops::Try` is not satisfied\n-        //~| ERROR the trait bound `{integer}: std::ops::Try` is not satisfied\n+        //~^ ERROR the `?` operator can only be applied to values that implement `std::ops::Try`\n         Ok(())\n     }\n     if (let 0 = 0)? {} //~ ERROR `let` expressions are not supported here\n-    //~^ ERROR the trait bound `bool: std::ops::Try` is not satisfied\n-    //~| ERROR the trait bound `bool: std::ops::Try` is not satisfied\n-    //~| ERROR the `?` operator can only be used in a function that returns `Result` or `Option`\n+    //~^ ERROR the `?` operator can only be applied to values that implement `std::ops::Try`\n+    //~| ERROR the `?` operator can only be used in a function that returns `Result`\n \n     if true || let 0 = 0 {} //~ ERROR `let` expressions are not supported here\n     if (true || let 0 = 0) {} //~ ERROR `let` expressions are not supported here\n@@ -106,14 +104,12 @@ fn nested_within_while_expr() {\n \n     fn _check_try_binds_tighter() -> Result<(), ()> {\n         while let 0 = 0? {}\n-        //~^ ERROR the trait bound `{integer}: std::ops::Try` is not satisfied\n-        //~| ERROR the trait bound `{integer}: std::ops::Try` is not satisfied\n+        //~^ ERROR the `?` operator can only be applied to values that implement `std::ops::Try`\n         Ok(())\n     }\n     while (let 0 = 0)? {} //~ ERROR `let` expressions are not supported here\n-    //~^ ERROR the trait bound `bool: std::ops::Try` is not satisfied\n-    //~| ERROR the trait bound `bool: std::ops::Try` is not satisfied\n-    //~| ERROR the `?` operator can only be used in a function that returns `Result` or `Option`\n+    //~^ ERROR the `?` operator can only be applied to values that implement `std::ops::Try`\n+    //~| ERROR the `?` operator can only be used in a function that returns `Result`\n \n     while true || let 0 = 0 {} //~ ERROR `let` expressions are not supported here\n     while (true || let 0 = 0) {} //~ ERROR `let` expressions are not supported here\n@@ -181,14 +177,12 @@ fn outside_if_and_while_expr() {\n \n     fn _check_try_binds_tighter() -> Result<(), ()> {\n         let 0 = 0?;\n-        //~^ ERROR the trait bound `{integer}: std::ops::Try` is not satisfied\n-        //~| ERROR the trait bound `{integer}: std::ops::Try` is not satisfied\n+        //~^ ERROR the `?` operator can only be applied to values that implement `std::ops::Try`\n         Ok(())\n     }\n     (let 0 = 0)?; //~ ERROR `let` expressions are not supported here\n-    //~^ ERROR the trait bound `bool: std::ops::Try` is not satisfied\n-    //~| ERROR the trait bound `bool: std::ops::Try` is not satisfied\n-    //~| ERROR the `?` operator can only be used in a function that returns `Result` or `Option`\n+    //~^ ERROR the `?` operator can only be used in a function that returns `Result`\n+    //~| ERROR the `?` operator can only be applied to values that implement `std::ops::Try`\n \n     true || let 0 = 0; //~ ERROR `let` expressions are not supported here\n     (true || let 0 = 0); //~ ERROR `let` expressions are not supported here"}, {"sha": "4edc00efc7e722cb37a4bfde5984912ef9c80f2e", "filename": "src/test/ui/rfc-2497-if-let-chains/disallowed-positions.stderr", "status": "modified", "additions": 125, "deletions": 194, "changes": 319, "blob_url": "https://github.com/rust-lang/rust/blob/fa496c9ded0ca63d34d1402c1b737db908094ea4/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fdisallowed-positions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa496c9ded0ca63d34d1402c1b737db908094ea4/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fdisallowed-positions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fdisallowed-positions.stderr?ref=fa496c9ded0ca63d34d1402c1b737db908094ea4", "patch": "@@ -1,5 +1,5 @@\n error: expected one of `,` or `>`, found `&&`\n-  --> $DIR/disallowed-positions.rs:248:14\n+  --> $DIR/disallowed-positions.rs:242:14\n    |\n LL |         true && let 1 = 1\n    |              ^^ expected one of `,` or `>` here\n@@ -41,7 +41,7 @@ LL |     if -let 0 = 0 {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:47:9\n+  --> $DIR/disallowed-positions.rs:46:9\n    |\n LL |     if (let 0 = 0)? {}\n    |         ^^^^^^^^^\n@@ -50,7 +50,7 @@ LL |     if (let 0 = 0)? {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:52:16\n+  --> $DIR/disallowed-positions.rs:50:16\n    |\n LL |     if true || let 0 = 0 {}\n    |                ^^^^^^^^^\n@@ -59,7 +59,7 @@ LL |     if true || let 0 = 0 {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:53:17\n+  --> $DIR/disallowed-positions.rs:51:17\n    |\n LL |     if (true || let 0 = 0) {}\n    |                 ^^^^^^^^^\n@@ -68,7 +68,7 @@ LL |     if (true || let 0 = 0) {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:54:25\n+  --> $DIR/disallowed-positions.rs:52:25\n    |\n LL |     if true && (true || let 0 = 0) {}\n    |                         ^^^^^^^^^\n@@ -77,7 +77,7 @@ LL |     if true && (true || let 0 = 0) {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:55:25\n+  --> $DIR/disallowed-positions.rs:53:25\n    |\n LL |     if true || (true && let 0 = 0) {}\n    |                         ^^^^^^^^^\n@@ -86,7 +86,7 @@ LL |     if true || (true && let 0 = 0) {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:58:12\n+  --> $DIR/disallowed-positions.rs:56:12\n    |\n LL |     if x = let 0 = 0 {}\n    |            ^^^^^^^^^\n@@ -95,7 +95,7 @@ LL |     if x = let 0 = 0 {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:61:15\n+  --> $DIR/disallowed-positions.rs:59:15\n    |\n LL |     if true..(let 0 = 0) {}\n    |               ^^^^^^^^^\n@@ -104,7 +104,7 @@ LL |     if true..(let 0 = 0) {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:63:11\n+  --> $DIR/disallowed-positions.rs:61:11\n    |\n LL |     if ..(let 0 = 0) {}\n    |           ^^^^^^^^^\n@@ -113,7 +113,7 @@ LL |     if ..(let 0 = 0) {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:65:9\n+  --> $DIR/disallowed-positions.rs:63:9\n    |\n LL |     if (let 0 = 0).. {}\n    |         ^^^^^^^^^\n@@ -122,7 +122,7 @@ LL |     if (let 0 = 0).. {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:69:8\n+  --> $DIR/disallowed-positions.rs:67:8\n    |\n LL |     if let Range { start: _, end: _ } = true..true && false {}\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -131,7 +131,7 @@ LL |     if let Range { start: _, end: _ } = true..true && false {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:73:8\n+  --> $DIR/disallowed-positions.rs:71:8\n    |\n LL |     if let Range { start: _, end: _ } = true..true || false {}\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -140,7 +140,7 @@ LL |     if let Range { start: _, end: _ } = true..true || false {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:80:8\n+  --> $DIR/disallowed-positions.rs:78:8\n    |\n LL |     if let Range { start: F, end } = F..|| true {}\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -149,7 +149,7 @@ LL |     if let Range { start: F, end } = F..|| true {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:88:8\n+  --> $DIR/disallowed-positions.rs:86:8\n    |\n LL |     if let Range { start: true, end } = t..&&false {}\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -158,7 +158,7 @@ LL |     if let Range { start: true, end } = t..&&false {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:94:19\n+  --> $DIR/disallowed-positions.rs:92:19\n    |\n LL |     if let true = let true = true {}\n    |                   ^^^^^^^^^^^^^^^\n@@ -167,7 +167,7 @@ LL |     if let true = let true = true {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:98:12\n+  --> $DIR/disallowed-positions.rs:96:12\n    |\n LL |     while &let 0 = 0 {}\n    |            ^^^^^^^^^\n@@ -176,7 +176,7 @@ LL |     while &let 0 = 0 {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:101:12\n+  --> $DIR/disallowed-positions.rs:99:12\n    |\n LL |     while !let 0 = 0 {}\n    |            ^^^^^^^^^\n@@ -185,7 +185,7 @@ LL |     while !let 0 = 0 {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:102:12\n+  --> $DIR/disallowed-positions.rs:100:12\n    |\n LL |     while *let 0 = 0 {}\n    |            ^^^^^^^^^\n@@ -194,7 +194,7 @@ LL |     while *let 0 = 0 {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:104:12\n+  --> $DIR/disallowed-positions.rs:102:12\n    |\n LL |     while -let 0 = 0 {}\n    |            ^^^^^^^^^\n@@ -203,7 +203,7 @@ LL |     while -let 0 = 0 {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:113:12\n+  --> $DIR/disallowed-positions.rs:110:12\n    |\n LL |     while (let 0 = 0)? {}\n    |            ^^^^^^^^^\n@@ -212,7 +212,7 @@ LL |     while (let 0 = 0)? {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:118:19\n+  --> $DIR/disallowed-positions.rs:114:19\n    |\n LL |     while true || let 0 = 0 {}\n    |                   ^^^^^^^^^\n@@ -221,7 +221,7 @@ LL |     while true || let 0 = 0 {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:119:20\n+  --> $DIR/disallowed-positions.rs:115:20\n    |\n LL |     while (true || let 0 = 0) {}\n    |                    ^^^^^^^^^\n@@ -230,7 +230,7 @@ LL |     while (true || let 0 = 0) {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:120:28\n+  --> $DIR/disallowed-positions.rs:116:28\n    |\n LL |     while true && (true || let 0 = 0) {}\n    |                            ^^^^^^^^^\n@@ -239,7 +239,7 @@ LL |     while true && (true || let 0 = 0) {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:121:28\n+  --> $DIR/disallowed-positions.rs:117:28\n    |\n LL |     while true || (true && let 0 = 0) {}\n    |                            ^^^^^^^^^\n@@ -248,7 +248,7 @@ LL |     while true || (true && let 0 = 0) {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:124:15\n+  --> $DIR/disallowed-positions.rs:120:15\n    |\n LL |     while x = let 0 = 0 {}\n    |               ^^^^^^^^^\n@@ -257,7 +257,7 @@ LL |     while x = let 0 = 0 {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:127:18\n+  --> $DIR/disallowed-positions.rs:123:18\n    |\n LL |     while true..(let 0 = 0) {}\n    |                  ^^^^^^^^^\n@@ -266,7 +266,7 @@ LL |     while true..(let 0 = 0) {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:129:14\n+  --> $DIR/disallowed-positions.rs:125:14\n    |\n LL |     while ..(let 0 = 0) {}\n    |              ^^^^^^^^^\n@@ -275,7 +275,7 @@ LL |     while ..(let 0 = 0) {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:131:12\n+  --> $DIR/disallowed-positions.rs:127:12\n    |\n LL |     while (let 0 = 0).. {}\n    |            ^^^^^^^^^\n@@ -284,7 +284,7 @@ LL |     while (let 0 = 0).. {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:135:11\n+  --> $DIR/disallowed-positions.rs:131:11\n    |\n LL |     while let Range { start: _, end: _ } = true..true && false {}\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -293,7 +293,7 @@ LL |     while let Range { start: _, end: _ } = true..true && false {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:139:11\n+  --> $DIR/disallowed-positions.rs:135:11\n    |\n LL |     while let Range { start: _, end: _ } = true..true || false {}\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -302,7 +302,7 @@ LL |     while let Range { start: _, end: _ } = true..true || false {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:146:11\n+  --> $DIR/disallowed-positions.rs:142:11\n    |\n LL |     while let Range { start: F, end } = F..|| true {}\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -311,7 +311,7 @@ LL |     while let Range { start: F, end } = F..|| true {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:154:11\n+  --> $DIR/disallowed-positions.rs:150:11\n    |\n LL |     while let Range { start: true, end } = t..&&false {}\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -320,7 +320,7 @@ LL |     while let Range { start: true, end } = t..&&false {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:160:22\n+  --> $DIR/disallowed-positions.rs:156:22\n    |\n LL |     while let true = let true = true {}\n    |                      ^^^^^^^^^^^^^^^\n@@ -329,7 +329,7 @@ LL |     while let true = let true = true {}\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:174:6\n+  --> $DIR/disallowed-positions.rs:170:6\n    |\n LL |     &let 0 = 0;\n    |      ^^^^^^^^^\n@@ -338,7 +338,7 @@ LL |     &let 0 = 0;\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:176:6\n+  --> $DIR/disallowed-positions.rs:172:6\n    |\n LL |     !let 0 = 0;\n    |      ^^^^^^^^^\n@@ -347,7 +347,7 @@ LL |     !let 0 = 0;\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:177:6\n+  --> $DIR/disallowed-positions.rs:173:6\n    |\n LL |     *let 0 = 0;\n    |      ^^^^^^^^^\n@@ -356,7 +356,7 @@ LL |     *let 0 = 0;\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:179:6\n+  --> $DIR/disallowed-positions.rs:175:6\n    |\n LL |     -let 0 = 0;\n    |      ^^^^^^^^^\n@@ -365,7 +365,7 @@ LL |     -let 0 = 0;\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:188:6\n+  --> $DIR/disallowed-positions.rs:183:6\n    |\n LL |     (let 0 = 0)?;\n    |      ^^^^^^^^^\n@@ -374,7 +374,7 @@ LL |     (let 0 = 0)?;\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:193:13\n+  --> $DIR/disallowed-positions.rs:187:13\n    |\n LL |     true || let 0 = 0;\n    |             ^^^^^^^^^\n@@ -383,7 +383,7 @@ LL |     true || let 0 = 0;\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:194:14\n+  --> $DIR/disallowed-positions.rs:188:14\n    |\n LL |     (true || let 0 = 0);\n    |              ^^^^^^^^^\n@@ -392,7 +392,7 @@ LL |     (true || let 0 = 0);\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:195:22\n+  --> $DIR/disallowed-positions.rs:189:22\n    |\n LL |     true && (true || let 0 = 0);\n    |                      ^^^^^^^^^\n@@ -401,7 +401,7 @@ LL |     true && (true || let 0 = 0);\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:198:9\n+  --> $DIR/disallowed-positions.rs:192:9\n    |\n LL |     x = let 0 = 0;\n    |         ^^^^^^^^^\n@@ -410,7 +410,7 @@ LL |     x = let 0 = 0;\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:200:12\n+  --> $DIR/disallowed-positions.rs:194:12\n    |\n LL |     true..(let 0 = 0);\n    |            ^^^^^^^^^\n@@ -419,7 +419,7 @@ LL |     true..(let 0 = 0);\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:201:8\n+  --> $DIR/disallowed-positions.rs:195:8\n    |\n LL |     ..(let 0 = 0);\n    |        ^^^^^^^^^\n@@ -428,7 +428,7 @@ LL |     ..(let 0 = 0);\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:202:6\n+  --> $DIR/disallowed-positions.rs:196:6\n    |\n LL |     (let 0 = 0)..;\n    |      ^^^^^^^^^\n@@ -437,7 +437,7 @@ LL |     (let 0 = 0)..;\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:204:6\n+  --> $DIR/disallowed-positions.rs:198:6\n    |\n LL |     (let Range { start: _, end: _ } = true..true || false);\n    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -446,7 +446,7 @@ LL |     (let Range { start: _, end: _ } = true..true || false);\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:208:6\n+  --> $DIR/disallowed-positions.rs:202:6\n    |\n LL |     (let true = let true = true);\n    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -455,7 +455,7 @@ LL |     (let true = let true = true);\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:208:17\n+  --> $DIR/disallowed-positions.rs:202:17\n    |\n LL |     (let true = let true = true);\n    |                 ^^^^^^^^^^^^^^^\n@@ -464,7 +464,7 @@ LL |     (let true = let true = true);\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:213:6\n+  --> $DIR/disallowed-positions.rs:207:6\n    |\n LL |     &let 0 = 0\n    |      ^^^^^^^^^\n@@ -473,7 +473,7 @@ LL |     &let 0 = 0\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:224:17\n+  --> $DIR/disallowed-positions.rs:218:17\n    |\n LL |         true && let 1 = 1\n    |                 ^^^^^^^^^\n@@ -482,7 +482,7 @@ LL |         true && let 1 = 1\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:230:17\n+  --> $DIR/disallowed-positions.rs:224:17\n    |\n LL |         true && let 1 = 1\n    |                 ^^^^^^^^^\n@@ -491,7 +491,7 @@ LL |         true && let 1 = 1\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:236:17\n+  --> $DIR/disallowed-positions.rs:230:17\n    |\n LL |         true && let 1 = 1\n    |                 ^^^^^^^^^\n@@ -536,16 +536,17 @@ LL |     if -let 0 = 0 {}\n    |\n    = note: an implementation of `std::ops::Neg` might be missing for `bool`\n \n-error[E0277]: the trait bound `bool: std::ops::Try` is not satisfied\n-  --> $DIR/disallowed-positions.rs:47:8\n+error[E0277]: the `?` operator can only be applied to values that implement `std::ops::Try`\n+  --> $DIR/disallowed-positions.rs:46:8\n    |\n LL |     if (let 0 = 0)? {}\n-   |        ^^^^^^^^^^^ the trait `std::ops::Try` is not implemented for `bool`\n+   |        ^^^^^^^^^^^^ the `?` operator cannot be applied to type `bool`\n    |\n+   = help: the trait `std::ops::Try` is not implemented for `bool`\n    = note: required by `std::ops::Try::into_result`\n \n error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)\n-  --> $DIR/disallowed-positions.rs:47:8\n+  --> $DIR/disallowed-positions.rs:46:8\n    |\n LL |     if (let 0 = 0)? {}\n    |        ^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `()`\n@@ -554,7 +555,7 @@ LL |     if (let 0 = 0)? {}\n    = note: required by `std::ops::Try::from_error`\n \n error[E0308]: mismatched types\n-  --> $DIR/disallowed-positions.rs:58:8\n+  --> $DIR/disallowed-positions.rs:56:8\n    |\n LL |     if x = let 0 = 0 {}\n    |        ^^^^^^^^^^^^^\n@@ -566,7 +567,7 @@ LL |     if x = let 0 = 0 {}\n               found type `()`\n \n error[E0308]: mismatched types\n-  --> $DIR/disallowed-positions.rs:61:8\n+  --> $DIR/disallowed-positions.rs:59:8\n    |\n LL |     if true..(let 0 = 0) {}\n    |        ^^^^^^^^^^^^^^^^^ expected bool, found struct `std::ops::Range`\n@@ -575,7 +576,7 @@ LL |     if true..(let 0 = 0) {}\n               found type `std::ops::Range<bool>`\n \n error[E0308]: mismatched types\n-  --> $DIR/disallowed-positions.rs:63:8\n+  --> $DIR/disallowed-positions.rs:61:8\n    |\n LL |     if ..(let 0 = 0) {}\n    |        ^^^^^^^^^^^^^ expected bool, found struct `std::ops::RangeTo`\n@@ -584,7 +585,7 @@ LL |     if ..(let 0 = 0) {}\n               found type `std::ops::RangeTo<bool>`\n \n error[E0308]: mismatched types\n-  --> $DIR/disallowed-positions.rs:65:8\n+  --> $DIR/disallowed-positions.rs:63:8\n    |\n LL |     if (let 0 = 0).. {}\n    |        ^^^^^^^^^^^^^ expected bool, found struct `std::ops::RangeFrom`\n@@ -593,7 +594,7 @@ LL |     if (let 0 = 0).. {}\n               found type `std::ops::RangeFrom<bool>`\n \n error[E0308]: mismatched types\n-  --> $DIR/disallowed-positions.rs:69:12\n+  --> $DIR/disallowed-positions.rs:67:12\n    |\n LL |     if let Range { start: _, end: _ } = true..true && false {}\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^   ---- this match expression has type `bool`\n@@ -604,7 +605,7 @@ LL |     if let Range { start: _, end: _ } = true..true && false {}\n               found type `std::ops::Range<_>`\n \n error[E0308]: mismatched types\n-  --> $DIR/disallowed-positions.rs:69:8\n+  --> $DIR/disallowed-positions.rs:67:8\n    |\n LL |     if let Range { start: _, end: _ } = true..true && false {}\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected bool, found struct `std::ops::Range`\n@@ -613,7 +614,7 @@ LL |     if let Range { start: _, end: _ } = true..true && false {}\n               found type `std::ops::Range<bool>`\n \n error[E0308]: mismatched types\n-  --> $DIR/disallowed-positions.rs:73:12\n+  --> $DIR/disallowed-positions.rs:71:12\n    |\n LL |     if let Range { start: _, end: _ } = true..true || false {}\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^   ---- this match expression has type `bool`\n@@ -624,7 +625,7 @@ LL |     if let Range { start: _, end: _ } = true..true || false {}\n               found type `std::ops::Range<_>`\n \n error[E0308]: mismatched types\n-  --> $DIR/disallowed-positions.rs:73:8\n+  --> $DIR/disallowed-positions.rs:71:8\n    |\n LL |     if let Range { start: _, end: _ } = true..true || false {}\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected bool, found struct `std::ops::Range`\n@@ -633,7 +634,7 @@ LL |     if let Range { start: _, end: _ } = true..true || false {}\n               found type `std::ops::Range<bool>`\n \n error[E0308]: mismatched types\n-  --> $DIR/disallowed-positions.rs:80:12\n+  --> $DIR/disallowed-positions.rs:78:12\n    |\n LL |     if let Range { start: F, end } = F..|| true {}\n    |            ^^^^^^^^^^^^^^^^^^^^^^^ expected fn pointer, found struct `std::ops::Range`\n@@ -642,16 +643,16 @@ LL |     if let Range { start: F, end } = F..|| true {}\n               found type `std::ops::Range<_>`\n \n error[E0308]: mismatched types\n-  --> $DIR/disallowed-positions.rs:80:41\n+  --> $DIR/disallowed-positions.rs:78:41\n    |\n LL |     if let Range { start: F, end } = F..|| true {}\n    |                                         ^^^^^^^ expected bool, found closure\n    |\n    = note: expected type `bool`\n-              found type `[closure@$DIR/disallowed-positions.rs:80:41: 80:48]`\n+              found type `[closure@$DIR/disallowed-positions.rs:78:41: 78:48]`\n \n error[E0308]: mismatched types\n-  --> $DIR/disallowed-positions.rs:80:8\n+  --> $DIR/disallowed-positions.rs:78:8\n    |\n LL |     if let Range { start: F, end } = F..|| true {}\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected bool, found struct `std::ops::Range`\n@@ -660,7 +661,7 @@ LL |     if let Range { start: F, end } = F..|| true {}\n               found type `std::ops::Range<bool>`\n \n error[E0308]: mismatched types\n-  --> $DIR/disallowed-positions.rs:88:12\n+  --> $DIR/disallowed-positions.rs:86:12\n    |\n LL |     if let Range { start: true, end } = t..&&false {}\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^   - this match expression has type `bool`\n@@ -671,7 +672,7 @@ LL |     if let Range { start: true, end } = t..&&false {}\n               found type `std::ops::Range<_>`\n \n error[E0308]: mismatched types\n-  --> $DIR/disallowed-positions.rs:88:44\n+  --> $DIR/disallowed-positions.rs:86:44\n    |\n LL |     if let Range { start: true, end } = t..&&false {}\n    |                                            ^^^^^^^ expected bool, found &&bool\n@@ -680,49 +681,25 @@ LL |     if let Range { start: true, end } = t..&&false {}\n               found type `&&bool`\n \n error[E0308]: mismatched types\n-  --> $DIR/disallowed-positions.rs:88:8\n+  --> $DIR/disallowed-positions.rs:86:8\n    |\n LL |     if let Range { start: true, end } = t..&&false {}\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected bool, found struct `std::ops::Range`\n    |\n    = note: expected type `bool`\n               found type `std::ops::Range<bool>`\n \n-error[E0277]: the trait bound `bool: std::ops::Try` is not satisfied\n-  --> $DIR/disallowed-positions.rs:47:8\n-   |\n-LL |     if (let 0 = 0)? {}\n-   |        ^^^^^^^^^^^^ the trait `std::ops::Try` is not implemented for `bool`\n-\n-error[E0277]: the trait bound `{integer}: std::ops::Try` is not satisfied\n-  --> $DIR/disallowed-positions.rs:42:20\n-   |\n-LL |         if let 0 = 0? {}\n-   |                    ^ the trait `std::ops::Try` is not implemented for `{integer}`\n-   |\n-   = help: the following implementations were found:\n-             <std::iter::LoopState<C, B> as std::ops::Try>\n-             <std::option::Option<T> as std::ops::Try>\n-             <std::result::Result<T, E> as std::ops::Try>\n-             <std::task::Poll<std::option::Option<std::result::Result<T, E>>> as std::ops::Try>\n-             <std::task::Poll<std::result::Result<T, E>> as std::ops::Try>\n-   = note: required by `std::ops::Try::into_result`\n-\n-error[E0277]: the trait bound `{integer}: std::ops::Try` is not satisfied\n+error[E0277]: the `?` operator can only be applied to values that implement `std::ops::Try`\n   --> $DIR/disallowed-positions.rs:42:20\n    |\n LL |         if let 0 = 0? {}\n-   |                    ^^ the trait `std::ops::Try` is not implemented for `{integer}`\n+   |                    ^^ the `?` operator cannot be applied to type `{integer}`\n    |\n-   = help: the following implementations were found:\n-             <std::iter::LoopState<C, B> as std::ops::Try>\n-             <std::option::Option<T> as std::ops::Try>\n-             <std::result::Result<T, E> as std::ops::Try>\n-             <std::task::Poll<std::option::Option<std::result::Result<T, E>>> as std::ops::Try>\n-             <std::task::Poll<std::result::Result<T, E>> as std::ops::Try>\n+   = help: the trait `std::ops::Try` is not implemented for `{integer}`\n+   = note: required by `std::ops::Try::into_result`\n \n error[E0308]: mismatched types\n-  --> $DIR/disallowed-positions.rs:98:11\n+  --> $DIR/disallowed-positions.rs:96:11\n    |\n LL |     while &let 0 = 0 {}\n    |           ^^^^^^^^^^ expected bool, found &bool\n@@ -731,29 +708,30 @@ LL |     while &let 0 = 0 {}\n               found type `&bool`\n \n error[E0614]: type `bool` cannot be dereferenced\n-  --> $DIR/disallowed-positions.rs:102:11\n+  --> $DIR/disallowed-positions.rs:100:11\n    |\n LL |     while *let 0 = 0 {}\n    |           ^^^^^^^^^^\n \n error[E0600]: cannot apply unary operator `-` to type `bool`\n-  --> $DIR/disallowed-positions.rs:104:11\n+  --> $DIR/disallowed-positions.rs:102:11\n    |\n LL |     while -let 0 = 0 {}\n    |           ^^^^^^^^^^ cannot apply unary operator `-`\n    |\n    = note: an implementation of `std::ops::Neg` might be missing for `bool`\n \n-error[E0277]: the trait bound `bool: std::ops::Try` is not satisfied\n-  --> $DIR/disallowed-positions.rs:113:11\n+error[E0277]: the `?` operator can only be applied to values that implement `std::ops::Try`\n+  --> $DIR/disallowed-positions.rs:110:11\n    |\n LL |     while (let 0 = 0)? {}\n-   |           ^^^^^^^^^^^ the trait `std::ops::Try` is not implemented for `bool`\n+   |           ^^^^^^^^^^^^ the `?` operator cannot be applied to type `bool`\n    |\n+   = help: the trait `std::ops::Try` is not implemented for `bool`\n    = note: required by `std::ops::Try::into_result`\n \n error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)\n-  --> $DIR/disallowed-positions.rs:113:11\n+  --> $DIR/disallowed-positions.rs:110:11\n    |\n LL |     while (let 0 = 0)? {}\n    |           ^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `()`\n@@ -762,7 +740,7 @@ LL |     while (let 0 = 0)? {}\n    = note: required by `std::ops::Try::from_error`\n \n error[E0308]: mismatched types\n-  --> $DIR/disallowed-positions.rs:124:11\n+  --> $DIR/disallowed-positions.rs:120:11\n    |\n LL |     while x = let 0 = 0 {}\n    |           ^^^^^^^^^^^^^\n@@ -774,7 +752,7 @@ LL |     while x = let 0 = 0 {}\n               found type `()`\n \n error[E0308]: mismatched types\n-  --> $DIR/disallowed-positions.rs:127:11\n+  --> $DIR/disallowed-positions.rs:123:11\n    |\n LL |     while true..(let 0 = 0) {}\n    |           ^^^^^^^^^^^^^^^^^ expected bool, found struct `std::ops::Range`\n@@ -783,7 +761,7 @@ LL |     while true..(let 0 = 0) {}\n               found type `std::ops::Range<bool>`\n \n error[E0308]: mismatched types\n-  --> $DIR/disallowed-positions.rs:129:11\n+  --> $DIR/disallowed-positions.rs:125:11\n    |\n LL |     while ..(let 0 = 0) {}\n    |           ^^^^^^^^^^^^^ expected bool, found struct `std::ops::RangeTo`\n@@ -792,7 +770,7 @@ LL |     while ..(let 0 = 0) {}\n               found type `std::ops::RangeTo<bool>`\n \n error[E0308]: mismatched types\n-  --> $DIR/disallowed-positions.rs:131:11\n+  --> $DIR/disallowed-positions.rs:127:11\n    |\n LL |     while (let 0 = 0).. {}\n    |           ^^^^^^^^^^^^^ expected bool, found struct `std::ops::RangeFrom`\n@@ -801,7 +779,7 @@ LL |     while (let 0 = 0).. {}\n               found type `std::ops::RangeFrom<bool>`\n \n error[E0308]: mismatched types\n-  --> $DIR/disallowed-positions.rs:135:15\n+  --> $DIR/disallowed-positions.rs:131:15\n    |\n LL |     while let Range { start: _, end: _ } = true..true && false {}\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^   ---- this match expression has type `bool`\n@@ -812,7 +790,7 @@ LL |     while let Range { start: _, end: _ } = true..true && false {}\n               found type `std::ops::Range<_>`\n \n error[E0308]: mismatched types\n-  --> $DIR/disallowed-positions.rs:135:11\n+  --> $DIR/disallowed-positions.rs:131:11\n    |\n LL |     while let Range { start: _, end: _ } = true..true && false {}\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected bool, found struct `std::ops::Range`\n@@ -821,7 +799,7 @@ LL |     while let Range { start: _, end: _ } = true..true && false {}\n               found type `std::ops::Range<bool>`\n \n error[E0308]: mismatched types\n-  --> $DIR/disallowed-positions.rs:139:15\n+  --> $DIR/disallowed-positions.rs:135:15\n    |\n LL |     while let Range { start: _, end: _ } = true..true || false {}\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^   ---- this match expression has type `bool`\n@@ -832,7 +810,7 @@ LL |     while let Range { start: _, end: _ } = true..true || false {}\n               found type `std::ops::Range<_>`\n \n error[E0308]: mismatched types\n-  --> $DIR/disallowed-positions.rs:139:11\n+  --> $DIR/disallowed-positions.rs:135:11\n    |\n LL |     while let Range { start: _, end: _ } = true..true || false {}\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected bool, found struct `std::ops::Range`\n@@ -841,7 +819,7 @@ LL |     while let Range { start: _, end: _ } = true..true || false {}\n               found type `std::ops::Range<bool>`\n \n error[E0308]: mismatched types\n-  --> $DIR/disallowed-positions.rs:146:15\n+  --> $DIR/disallowed-positions.rs:142:15\n    |\n LL |     while let Range { start: F, end } = F..|| true {}\n    |               ^^^^^^^^^^^^^^^^^^^^^^^ expected fn pointer, found struct `std::ops::Range`\n@@ -850,16 +828,16 @@ LL |     while let Range { start: F, end } = F..|| true {}\n               found type `std::ops::Range<_>`\n \n error[E0308]: mismatched types\n-  --> $DIR/disallowed-positions.rs:146:44\n+  --> $DIR/disallowed-positions.rs:142:44\n    |\n LL |     while let Range { start: F, end } = F..|| true {}\n    |                                            ^^^^^^^ expected bool, found closure\n    |\n    = note: expected type `bool`\n-              found type `[closure@$DIR/disallowed-positions.rs:146:44: 146:51]`\n+              found type `[closure@$DIR/disallowed-positions.rs:142:44: 142:51]`\n \n error[E0308]: mismatched types\n-  --> $DIR/disallowed-positions.rs:146:11\n+  --> $DIR/disallowed-positions.rs:142:11\n    |\n LL |     while let Range { start: F, end } = F..|| true {}\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected bool, found struct `std::ops::Range`\n@@ -868,7 +846,7 @@ LL |     while let Range { start: F, end } = F..|| true {}\n               found type `std::ops::Range<bool>`\n \n error[E0308]: mismatched types\n-  --> $DIR/disallowed-positions.rs:154:15\n+  --> $DIR/disallowed-positions.rs:150:15\n    |\n LL |     while let Range { start: true, end } = t..&&false {}\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^   - this match expression has type `bool`\n@@ -879,7 +857,7 @@ LL |     while let Range { start: true, end } = t..&&false {}\n               found type `std::ops::Range<_>`\n \n error[E0308]: mismatched types\n-  --> $DIR/disallowed-positions.rs:154:47\n+  --> $DIR/disallowed-positions.rs:150:47\n    |\n LL |     while let Range { start: true, end } = t..&&false {}\n    |                                               ^^^^^^^ expected bool, found &&bool\n@@ -888,71 +866,48 @@ LL |     while let Range { start: true, end } = t..&&false {}\n               found type `&&bool`\n \n error[E0308]: mismatched types\n-  --> $DIR/disallowed-positions.rs:154:11\n+  --> $DIR/disallowed-positions.rs:150:11\n    |\n LL |     while let Range { start: true, end } = t..&&false {}\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected bool, found struct `std::ops::Range`\n    |\n    = note: expected type `bool`\n               found type `std::ops::Range<bool>`\n \n-error[E0277]: the trait bound `bool: std::ops::Try` is not satisfied\n-  --> $DIR/disallowed-positions.rs:113:11\n-   |\n-LL |     while (let 0 = 0)? {}\n-   |           ^^^^^^^^^^^^ the trait `std::ops::Try` is not implemented for `bool`\n-\n-error[E0277]: the trait bound `{integer}: std::ops::Try` is not satisfied\n-  --> $DIR/disallowed-positions.rs:108:23\n+error[E0277]: the `?` operator can only be applied to values that implement `std::ops::Try`\n+  --> $DIR/disallowed-positions.rs:106:23\n    |\n LL |         while let 0 = 0? {}\n-   |                       ^ the trait `std::ops::Try` is not implemented for `{integer}`\n-   |\n-   = help: the following implementations were found:\n-             <std::iter::LoopState<C, B> as std::ops::Try>\n-             <std::option::Option<T> as std::ops::Try>\n-             <std::result::Result<T, E> as std::ops::Try>\n-             <std::task::Poll<std::option::Option<std::result::Result<T, E>>> as std::ops::Try>\n-             <std::task::Poll<std::result::Result<T, E>> as std::ops::Try>\n-   = note: required by `std::ops::Try::into_result`\n-\n-error[E0277]: the trait bound `{integer}: std::ops::Try` is not satisfied\n-  --> $DIR/disallowed-positions.rs:108:23\n-   |\n-LL |         while let 0 = 0? {}\n-   |                       ^^ the trait `std::ops::Try` is not implemented for `{integer}`\n+   |                       ^^ the `?` operator cannot be applied to type `{integer}`\n    |\n-   = help: the following implementations were found:\n-             <std::iter::LoopState<C, B> as std::ops::Try>\n-             <std::option::Option<T> as std::ops::Try>\n-             <std::result::Result<T, E> as std::ops::Try>\n-             <std::task::Poll<std::option::Option<std::result::Result<T, E>>> as std::ops::Try>\n-             <std::task::Poll<std::result::Result<T, E>> as std::ops::Try>\n+   = help: the trait `std::ops::Try` is not implemented for `{integer}`\n+   = note: required by `std::ops::Try::into_result`\n \n error[E0614]: type `bool` cannot be dereferenced\n-  --> $DIR/disallowed-positions.rs:177:5\n+  --> $DIR/disallowed-positions.rs:173:5\n    |\n LL |     *let 0 = 0;\n    |     ^^^^^^^^^^\n \n error[E0600]: cannot apply unary operator `-` to type `bool`\n-  --> $DIR/disallowed-positions.rs:179:5\n+  --> $DIR/disallowed-positions.rs:175:5\n    |\n LL |     -let 0 = 0;\n    |     ^^^^^^^^^^ cannot apply unary operator `-`\n    |\n    = note: an implementation of `std::ops::Neg` might be missing for `bool`\n \n-error[E0277]: the trait bound `bool: std::ops::Try` is not satisfied\n-  --> $DIR/disallowed-positions.rs:188:5\n+error[E0277]: the `?` operator can only be applied to values that implement `std::ops::Try`\n+  --> $DIR/disallowed-positions.rs:183:5\n    |\n LL |     (let 0 = 0)?;\n-   |     ^^^^^^^^^^^ the trait `std::ops::Try` is not implemented for `bool`\n+   |     ^^^^^^^^^^^^ the `?` operator cannot be applied to type `bool`\n    |\n+   = help: the trait `std::ops::Try` is not implemented for `bool`\n    = note: required by `std::ops::Try::into_result`\n \n error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)\n-  --> $DIR/disallowed-positions.rs:188:5\n+  --> $DIR/disallowed-positions.rs:183:5\n    |\n LL |     (let 0 = 0)?;\n    |     ^^^^^^^^^^^^ cannot use the `?` operator in a function that returns `()`\n@@ -961,7 +916,7 @@ LL |     (let 0 = 0)?;\n    = note: required by `std::ops::Try::from_error`\n \n error[E0308]: mismatched types\n-  --> $DIR/disallowed-positions.rs:204:10\n+  --> $DIR/disallowed-positions.rs:198:10\n    |\n LL |     (let Range { start: _, end: _ } = true..true || false);\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^   ---- this match expression has type `bool`\n@@ -972,7 +927,7 @@ LL |     (let Range { start: _, end: _ } = true..true || false);\n               found type `std::ops::Range<_>`\n \n error[E0308]: mismatched types\n-  --> $DIR/disallowed-positions.rs:213:5\n+  --> $DIR/disallowed-positions.rs:207:5\n    |\n LL | fn outside_if_and_while_expr() {\n    |                                - help: try adding a return type: `-> &bool`\n@@ -983,76 +938,52 @@ LL |     &let 0 = 0\n    = note: expected type `()`\n               found type `&bool`\n \n-error[E0277]: the trait bound `bool: std::ops::Try` is not satisfied\n-  --> $DIR/disallowed-positions.rs:188:5\n-   |\n-LL |     (let 0 = 0)?;\n-   |     ^^^^^^^^^^^^ the trait `std::ops::Try` is not implemented for `bool`\n-\n-error[E0277]: the trait bound `{integer}: std::ops::Try` is not satisfied\n-  --> $DIR/disallowed-positions.rs:183:17\n+error[E0277]: the `?` operator can only be applied to values that implement `std::ops::Try`\n+  --> $DIR/disallowed-positions.rs:179:17\n    |\n LL |         let 0 = 0?;\n-   |                 ^ the trait `std::ops::Try` is not implemented for `{integer}`\n-   |\n-   = help: the following implementations were found:\n-             <std::iter::LoopState<C, B> as std::ops::Try>\n-             <std::option::Option<T> as std::ops::Try>\n-             <std::result::Result<T, E> as std::ops::Try>\n-             <std::task::Poll<std::option::Option<std::result::Result<T, E>>> as std::ops::Try>\n-             <std::task::Poll<std::result::Result<T, E>> as std::ops::Try>\n-   = note: required by `std::ops::Try::into_result`\n-\n-error[E0277]: the trait bound `{integer}: std::ops::Try` is not satisfied\n-  --> $DIR/disallowed-positions.rs:183:17\n+   |                 ^^ the `?` operator cannot be applied to type `{integer}`\n    |\n-LL |         let 0 = 0?;\n-   |                 ^^ the trait `std::ops::Try` is not implemented for `{integer}`\n-   |\n-   = help: the following implementations were found:\n-             <std::iter::LoopState<C, B> as std::ops::Try>\n-             <std::option::Option<T> as std::ops::Try>\n-             <std::result::Result<T, E> as std::ops::Try>\n-             <std::task::Poll<std::option::Option<std::result::Result<T, E>>> as std::ops::Try>\n-             <std::task::Poll<std::result::Result<T, E>> as std::ops::Try>\n+   = help: the trait `std::ops::Try` is not implemented for `{integer}`\n+   = note: required by `std::ops::Try::into_result`\n \n error[E0019]: constant contains unimplemented expression type\n-  --> $DIR/disallowed-positions.rs:224:25\n+  --> $DIR/disallowed-positions.rs:218:25\n    |\n LL |         true && let 1 = 1\n    |                         ^\n \n error[E0019]: constant contains unimplemented expression type\n-  --> $DIR/disallowed-positions.rs:224:21\n+  --> $DIR/disallowed-positions.rs:218:21\n    |\n LL |         true && let 1 = 1\n    |                     ^\n \n error[E0019]: constant contains unimplemented expression type\n-  --> $DIR/disallowed-positions.rs:230:25\n+  --> $DIR/disallowed-positions.rs:224:25\n    |\n LL |         true && let 1 = 1\n    |                         ^\n \n error[E0019]: constant contains unimplemented expression type\n-  --> $DIR/disallowed-positions.rs:230:21\n+  --> $DIR/disallowed-positions.rs:224:21\n    |\n LL |         true && let 1 = 1\n    |                     ^\n \n error[E0019]: constant contains unimplemented expression type\n-  --> $DIR/disallowed-positions.rs:236:25\n+  --> $DIR/disallowed-positions.rs:230:25\n    |\n LL |         true && let 1 = 1\n    |                         ^\n \n error[E0019]: constant contains unimplemented expression type\n-  --> $DIR/disallowed-positions.rs:236:21\n+  --> $DIR/disallowed-positions.rs:230:21\n    |\n LL |         true && let 1 = 1\n    |                     ^\n \n-error: aborting due to 115 previous errors\n+error: aborting due to 109 previous errors\n \n Some errors have detailed explanations: E0019, E0277, E0308, E0600, E0614.\n For more information about an error, try `rustc --explain E0019`."}, {"sha": "602c3c5c3593b216c57ca3b2107f572d4a06bf03", "filename": "src/test/ui/try-operator-on-main.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fa496c9ded0ca63d34d1402c1b737db908094ea4/src%2Ftest%2Fui%2Ftry-operator-on-main.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa496c9ded0ca63d34d1402c1b737db908094ea4/src%2Ftest%2Fui%2Ftry-operator-on-main.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-operator-on-main.rs?ref=fa496c9ded0ca63d34d1402c1b737db908094ea4", "patch": "@@ -10,7 +10,6 @@ fn main() {\n \n     // a non-`Try` type on a non-`Try` fn\n     ()?; //~ ERROR the `?` operator can only\n-    //~^ ERROR the trait bound `(): std::ops::Try` is not satisfied\n \n     // an unrelated use of `Try`\n     try_trait_generic::<()>(); //~ ERROR the trait bound\n@@ -20,8 +19,7 @@ fn main() {\n \n fn try_trait_generic<T: Try>() -> T {\n     // and a non-`Try` object on a `Try` fn.\n-    ()?; //~ ERROR the trait bound `(): std::ops::Try` is not satisfied\n-    //~^ ERROR the trait bound `(): std::ops::Try` is not satisfied\n+    ()?; //~ ERROR the `?` operator can only be applied to values that implement `std::ops::Try`\n \n     loop {}\n }"}, {"sha": "6878cd80629bcb8be97729b54b2fcc330a04665c", "filename": "src/test/ui/try-operator-on-main.stderr", "status": "modified", "additions": 9, "deletions": 22, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/fa496c9ded0ca63d34d1402c1b737db908094ea4/src%2Ftest%2Fui%2Ftry-operator-on-main.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa496c9ded0ca63d34d1402c1b737db908094ea4/src%2Ftest%2Fui%2Ftry-operator-on-main.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-operator-on-main.stderr?ref=fa496c9ded0ca63d34d1402c1b737db908094ea4", "patch": "@@ -7,46 +7,33 @@ LL |     std::fs::File::open(\"foo\")?;\n    = help: the trait `std::ops::Try` is not implemented for `()`\n    = note: required by `std::ops::Try::from_error`\n \n-error[E0277]: the trait bound `(): std::ops::Try` is not satisfied\n-  --> $DIR/try-operator-on-main.rs:12:5\n-   |\n-LL |     ()?;\n-   |     ^^ the trait `std::ops::Try` is not implemented for `()`\n-   |\n-   = note: required by `std::ops::Try::into_result`\n-\n-error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `std::ops::Try`)\n+error[E0277]: the `?` operator can only be applied to values that implement `std::ops::Try`\n   --> $DIR/try-operator-on-main.rs:12:5\n    |\n LL |     ()?;\n-   |     ^^^ cannot use the `?` operator in a function that returns `()`\n+   |     ^^^ the `?` operator cannot be applied to type `()`\n    |\n    = help: the trait `std::ops::Try` is not implemented for `()`\n-   = note: required by `std::ops::Try::from_error`\n+   = note: required by `std::ops::Try::into_result`\n \n error[E0277]: the trait bound `(): std::ops::Try` is not satisfied\n-  --> $DIR/try-operator-on-main.rs:16:5\n+  --> $DIR/try-operator-on-main.rs:15:5\n    |\n LL |     try_trait_generic::<()>();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::ops::Try` is not implemented for `()`\n ...\n LL | fn try_trait_generic<T: Try>() -> T {\n    | ----------------------------------- required by `try_trait_generic`\n \n-error[E0277]: the trait bound `(): std::ops::Try` is not satisfied\n-  --> $DIR/try-operator-on-main.rs:23:5\n+error[E0277]: the `?` operator can only be applied to values that implement `std::ops::Try`\n+  --> $DIR/try-operator-on-main.rs:22:5\n    |\n LL |     ()?;\n-   |     ^^ the trait `std::ops::Try` is not implemented for `()`\n+   |     ^^^ the `?` operator cannot be applied to type `()`\n    |\n+   = help: the trait `std::ops::Try` is not implemented for `()`\n    = note: required by `std::ops::Try::into_result`\n \n-error[E0277]: the trait bound `(): std::ops::Try` is not satisfied\n-  --> $DIR/try-operator-on-main.rs:23:5\n-   |\n-LL |     ()?;\n-   |     ^^^ the trait `std::ops::Try` is not implemented for `()`\n-\n-error: aborting due to 6 previous errors\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0277`."}]}