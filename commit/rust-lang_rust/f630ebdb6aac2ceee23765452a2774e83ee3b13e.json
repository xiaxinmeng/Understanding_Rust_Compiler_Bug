{"sha": "f630ebdb6aac2ceee23765452a2774e83ee3b13e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2MzBlYmRiNmFhYzJjZWVlMjM3NjU0NTJhMjc3NGU4M2VlM2IxM2U=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-03-01T05:14:04Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-03-03T03:15:35Z"}, "message": "comp/std: rename io::string_reader to io::str_reader.", "tree": {"sha": "a6b8c53e3d4eb2828a6ec213fccf579ceba5ae0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6b8c53e3d4eb2828a6ec213fccf579ceba5ae0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f630ebdb6aac2ceee23765452a2774e83ee3b13e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f630ebdb6aac2ceee23765452a2774e83ee3b13e", "html_url": "https://github.com/rust-lang/rust/commit/f630ebdb6aac2ceee23765452a2774e83ee3b13e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f630ebdb6aac2ceee23765452a2774e83ee3b13e/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1404a864a4f70a5865f2daac7e285c5dbc448e89", "url": "https://api.github.com/repos/rust-lang/rust/commits/1404a864a4f70a5865f2daac7e285c5dbc448e89", "html_url": "https://github.com/rust-lang/rust/commit/1404a864a4f70a5865f2daac7e285c5dbc448e89"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "fbeb961151401106834135825097ae14df7ff320", "filename": "src/fuzzer/fuzzer.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f630ebdb6aac2ceee23765452a2774e83ee3b13e/src%2Ffuzzer%2Ffuzzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f630ebdb6aac2ceee23765452a2774e83ee3b13e/src%2Ffuzzer%2Ffuzzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffuzzer%2Ffuzzer.rs?ref=f630ebdb6aac2ceee23765452a2774e83ee3b13e", "patch": "@@ -268,7 +268,7 @@ fn check_variants_T<T: copy>(\n                         diagnostic::mk_span_handler(handler, codemap),\n                         crate2,\n                         filename,\n-                        io::string_reader(\"\"), _,\n+                        io::str_reader(\"\"), _,\n                         pprust::no_ann()));\n                 alt cx.mode {\n                   tm_converge {\n@@ -416,7 +416,7 @@ fn parse_and_print(code: @str) -> str {\n                                         sess.span_diagnostic,\n                                         crate,\n                                         filename,\n-                                        io::string_reader(*code), _,\n+                                        io::str_reader(*code), _,\n                                         pprust::no_ann()));\n }\n \n@@ -562,7 +562,7 @@ fn check_variants(files: [str], cx: context) {\n                                                sess.span_diagnostic,\n                                                crate,\n                                                file,\n-                                               io::string_reader(*s), _,\n+                                               io::str_reader(*s), _,\n                                                pprust::no_ann())));\n         check_variants_of_ast(*crate, sess.cm, file, cx);\n     }"}, {"sha": "bab37b0ba805947cabe9380f66bd031612a81109", "filename": "src/libstd/io.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f630ebdb6aac2ceee23765452a2774e83ee3b13e/src%2Flibstd%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f630ebdb6aac2ceee23765452a2774e83ee3b13e/src%2Flibstd%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio.rs?ref=f630ebdb6aac2ceee23765452a2774e83ee3b13e", "patch": "@@ -270,7 +270,7 @@ fn with_bytes_reader_between<t>(bytes: [u8], start: uint, end: uint,\n     f(bytes_reader_between(bytes, start, end))\n }\n \n-fn string_reader(s: str) -> reader {\n+fn str_reader(s: str) -> reader {\n     bytes_reader(str::bytes(s))\n }\n \n@@ -662,7 +662,7 @@ mod tests {\n \n     #[test]\n     fn test_readchars_empty() {\n-        let inp : io::reader = io::string_reader(\"\");\n+        let inp : io::reader = io::str_reader(\"\");\n         let res : [char] = inp.read_chars(128u);\n         assert(vec::len(res) == 0u);\n     }\n@@ -677,7 +677,7 @@ mod tests {\n             29983, 38152, 30340, 27748,\n             21273, 20999, 32905, 27748];\n         fn check_read_ln(len : uint, s: str, ivals: [int]) {\n-            let inp : io::reader = io::string_reader(s);\n+            let inp : io::reader = io::str_reader(s);\n             let res : [char] = inp.read_chars(len);\n             if (len <= vec::len(ivals)) {\n                 assert(vec::len(res) == len);\n@@ -696,14 +696,14 @@ mod tests {\n \n     #[test]\n     fn test_readchar() {\n-        let inp : io::reader = io::string_reader(\"\u751f\");\n+        let inp : io::reader = io::str_reader(\"\u751f\");\n         let res : char = inp.read_char();\n         assert(res as int == 29983);\n     }\n \n     #[test]\n     fn test_readchar_empty() {\n-        let inp : io::reader = io::string_reader(\"\");\n+        let inp : io::reader = io::str_reader(\"\");\n         let res : char = inp.read_char();\n         assert(res as int == -1);\n     }"}, {"sha": "913a48900a299d9c968b7ee46deb0b186f742b76", "filename": "src/rustc/driver/driver.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f630ebdb6aac2ceee23765452a2774e83ee3b13e/src%2Frustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f630ebdb6aac2ceee23765452a2774e83ee3b13e/src%2Frustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fdriver%2Fdriver.rs?ref=f630ebdb6aac2ceee23765452a2774e83ee3b13e", "patch": "@@ -273,7 +273,7 @@ fn pretty_print_input(sess: session, cfg: ast::crate_cfg, input: str,\n     }\n     let src = codemap::get_filemap(sess.codemap, input).src;\n     pprust::print_crate(sess.codemap, sess.span_diagnostic, crate, input,\n-                        io::string_reader(*src), io::stdout(), ann);\n+                        io::str_reader(*src), io::stdout(), ann);\n }\n \n fn get_os(triple: str) -> option<session::os> {"}, {"sha": "a69a2d54c6f152fa728e68b9602c7abb26f86e54", "filename": "src/test/bench/task-perf-word-count.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f630ebdb6aac2ceee23765452a2774e83ee3b13e/src%2Ftest%2Fbench%2Ftask-perf-word-count.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f630ebdb6aac2ceee23765452a2774e83ee3b13e/src%2Ftest%2Fbench%2Ftask-perf-word-count.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Ftask-perf-word-count.rs?ref=f630ebdb6aac2ceee23765452a2774e83ee3b13e", "patch": "@@ -21,7 +21,7 @@ import comm::recv;\n import comm::send;\n \n fn map(input: str, emit: map_reduce::putter) {\n-    let f = io::string_reader(input);\n+    let f = io::str_reader(input);\n \n \n     while true {\n@@ -451,4 +451,4 @@ convallis. Integer non tellus ante. Nulla hendrerit lobortis augue sit\n amet vulputate. Donec cursus hendrerit diam convallis\n luctus. Curabitur ipsum mauris, fermentum quis tincidunt ac, laoreet\n sollicitudin sapien. Fusce velit urna, gravida non pulvinar eu, tempor\n-id nunc.  \" }\n\\ No newline at end of file\n+id nunc.  \" }"}]}