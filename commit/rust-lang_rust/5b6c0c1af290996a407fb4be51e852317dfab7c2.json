{"sha": "5b6c0c1af290996a407fb4be51e852317dfab7c2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViNmMwYzFhZjI5MDk5NmE0MDdmYjRiZTUxZTg1MjMxN2RmYWI3YzI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-05-21T19:08:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-21T19:08:49Z"}, "message": "Merge #8914\n\n8914: internal: remove `StructDefKind` r=jonas-schievink a=jonas-schievink\n\nThe `Fields` enum already encodes this, so `StructDefKind` is redundant.\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "02427f247d4e1ffc55e631c9b8579147c76e4035", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02427f247d4e1ffc55e631c9b8579147c76e4035"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b6c0c1af290996a407fb4be51e852317dfab7c2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgqAVBCRBK7hj4Ov3rIwAAGrQIAF5UenZlD58TDpwpP9E09YvF\nMfPAD4ZMwLB5yDaUgjV8iI8b1misRP+7pLzuKug+4c1a0T7khtp8o8p12TfeEF+q\nnSpaoQ7k2Hd++KyP6h8av7GY/bjOcOEhxDEi/4hYUL1NmfOiladSHsb+oPko0Y9G\nYsEKeEEdYW+pA3AHeOoiFJf3E8nKK7vIKjzGFOROx3LdmBdA0uRH1/1QlQEdqk8Y\nzKJqJSrrszwZsJ8uKScud/SqS5Qx/KQB0aQGbD7LJ+oNgsJXS+U2ftKoJPKHdbpR\nDZrFYr+QIQqaOqku+ap+G0D14zkb5vEIH65+AppSqlhPMA1RrMq6DDDvD+rmZJY=\n=sMvz\n-----END PGP SIGNATURE-----\n", "payload": "tree 02427f247d4e1ffc55e631c9b8579147c76e4035\nparent edbde25ca2f13ffacfd006ada7b38618d36d97c6\nparent 45f4a1e559f11054fd567be24d91b5559b76a397\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1621624129 +0000\ncommitter GitHub <noreply@github.com> 1621624129 +0000\n\nMerge #8914\n\n8914: internal: remove `StructDefKind` r=jonas-schievink a=jonas-schievink\n\nThe `Fields` enum already encodes this, so `StructDefKind` is redundant.\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b6c0c1af290996a407fb4be51e852317dfab7c2", "html_url": "https://github.com/rust-lang/rust/commit/5b6c0c1af290996a407fb4be51e852317dfab7c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b6c0c1af290996a407fb4be51e852317dfab7c2/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "edbde25ca2f13ffacfd006ada7b38618d36d97c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/edbde25ca2f13ffacfd006ada7b38618d36d97c6", "html_url": "https://github.com/rust-lang/rust/commit/edbde25ca2f13ffacfd006ada7b38618d36d97c6"}, {"sha": "45f4a1e559f11054fd567be24d91b5559b76a397", "url": "https://api.github.com/repos/rust-lang/rust/commits/45f4a1e559f11054fd567be24d91b5559b76a397", "html_url": "https://github.com/rust-lang/rust/commit/45f4a1e559f11054fd567be24d91b5559b76a397"}], "stats": {"total": 24, "additions": 4, "deletions": 20}, "files": [{"sha": "7440e7d29c0c564e85e0e029e5ae52c828083a37", "filename": "crates/hir_def/src/item_tree.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5b6c0c1af290996a407fb4be51e852317dfab7c2/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b6c0c1af290996a407fb4be51e852317dfab7c2/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs?ref=5b6c0c1af290996a407fb4be51e852317dfab7c2", "patch": "@@ -560,17 +560,6 @@ pub struct Struct {\n     pub generic_params: Interned<GenericParams>,\n     pub fields: Fields,\n     pub ast_id: FileAstId<ast::Struct>,\n-    pub kind: StructDefKind,\n-}\n-\n-#[derive(Debug, Clone, Eq, PartialEq)]\n-pub enum StructDefKind {\n-    /// `struct S { ... }` - type namespace only.\n-    Record,\n-    /// `struct S(...);`\n-    Tuple,\n-    /// `struct S;`\n-    Unit,\n }\n \n #[derive(Debug, Clone, Eq, PartialEq)]"}, {"sha": "91cf7537192f6614449c2bae43fa06801fa32a85", "filename": "crates/hir_def/src/item_tree/lower.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5b6c0c1af290996a407fb4be51e852317dfab7c2/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b6c0c1af290996a407fb4be51e852317dfab7c2/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Flower.rs?ref=5b6c0c1af290996a407fb4be51e852317dfab7c2", "patch": "@@ -228,12 +228,7 @@ impl<'a> Ctx<'a> {\n         let generic_params = self.lower_generic_params(GenericsOwner::Struct, strukt);\n         let fields = self.lower_fields(&strukt.kind());\n         let ast_id = self.source_ast_id_map.ast_id(strukt);\n-        let kind = match strukt.kind() {\n-            ast::StructKind::Record(_) => StructDefKind::Record,\n-            ast::StructKind::Tuple(_) => StructDefKind::Tuple,\n-            ast::StructKind::Unit => StructDefKind::Unit,\n-        };\n-        let res = Struct { name, visibility, generic_params, fields, ast_id, kind };\n+        let res = Struct { name, visibility, generic_params, fields, ast_id };\n         Some(id(self.data().structs.alloc(res)))\n     }\n "}, {"sha": "9b108bfe7c54674f02a0e5d07e87aa71284891ac", "filename": "crates/hir_def/src/nameres/collector.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5b6c0c1af290996a407fb4be51e852317dfab7c2/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b6c0c1af290996a407fb4be51e852317dfab7c2/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=5b6c0c1af290996a407fb4be51e852317dfab7c2", "patch": "@@ -27,8 +27,8 @@ use crate::{\n     intern::Interned,\n     item_scope::{ImportType, PerNsGlobImports},\n     item_tree::{\n-        self, FileItemTreeId, ItemTree, ItemTreeId, MacroCall, MacroDef, MacroRules, Mod, ModItem,\n-        ModKind, StructDefKind,\n+        self, Fields, FileItemTreeId, ItemTree, ItemTreeId, MacroCall, MacroDef, MacroRules, Mod,\n+        ModItem, ModKind,\n     },\n     macro_call_as_call_id,\n     nameres::{\n@@ -1281,7 +1281,7 @@ impl ModCollector<'_, '_> {\n                             .into(),\n                         name: &it.name,\n                         visibility: &self.item_tree[it.visibility],\n-                        has_constructor: it.kind != StructDefKind::Record,\n+                        has_constructor: !matches!(it.fields, Fields::Record(_)),\n                     });\n                 }\n                 ModItem::Union(id) => {"}]}