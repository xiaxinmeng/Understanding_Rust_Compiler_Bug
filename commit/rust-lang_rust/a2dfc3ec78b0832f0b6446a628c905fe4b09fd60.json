{"sha": "a2dfc3ec78b0832f0b6446a628c905fe4b09fd60", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyZGZjM2VjNzhiMDgzMmYwYjY0NDZhNjI4YzkwNWZlNGIwOWZkNjA=", "commit": {"author": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2020-08-17T13:42:40Z"}, "committer": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2020-08-17T13:42:40Z"}, "message": "Switch to intra-doc links for std/src/alloc.rs", "tree": {"sha": "9fd69d9857bdc81e1e4e033b93d742238312a9d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fd69d9857bdc81e1e4e033b93d742238312a9d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2dfc3ec78b0832f0b6446a628c905fe4b09fd60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2dfc3ec78b0832f0b6446a628c905fe4b09fd60", "html_url": "https://github.com/rust-lang/rust/commit/a2dfc3ec78b0832f0b6446a628c905fe4b09fd60", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2dfc3ec78b0832f0b6446a628c905fe4b09fd60/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6d2868caa63aa7bc8d54812cff06972eb558171", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6d2868caa63aa7bc8d54812cff06972eb558171", "html_url": "https://github.com/rust-lang/rust/commit/b6d2868caa63aa7bc8d54812cff06972eb558171"}], "stats": {"total": 9, "additions": 0, "deletions": 9}, "files": [{"sha": "37a8f514aa1574da0cf12dba6fa0ff095403394b", "filename": "library/std/src/alloc.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a2dfc3ec78b0832f0b6446a628c905fe4b09fd60/library%2Fstd%2Fsrc%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2dfc3ec78b0832f0b6446a628c905fe4b09fd60/library%2Fstd%2Fsrc%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Falloc.rs?ref=a2dfc3ec78b0832f0b6446a628c905fe4b09fd60", "patch": "@@ -7,8 +7,6 @@\n //! like `cdylib`s and `staticlib`s are guaranteed to use the [`System`] by\n //! default.\n //!\n-//! [`System`]: struct.System.html\n-//!\n //! # The `#[global_allocator]` attribute\n //!\n //! This attribute allows configuring the choice of global allocator.\n@@ -43,8 +41,6 @@\n //! The attribute is used on a `static` item whose type implements the\n //! [`GlobalAlloc`] trait. This type can be provided by an external library:\n //!\n-//! [`GlobalAlloc`]: ../../core/alloc/trait.GlobalAlloc.html\n-//!\n //! ```rust,ignore (demonstrates crates.io usage)\n //! extern crate jemallocator;\n //!\n@@ -284,9 +280,6 @@ static HOOK: AtomicPtr<()> = AtomicPtr::new(ptr::null_mut());\n /// about the allocation that failed.\n ///\n /// The allocation error hook is a global resource.\n-///\n-/// [`set_alloc_error_hook`]: fn.set_alloc_error_hook.html\n-/// [`take_alloc_error_hook`]: fn.take_alloc_error_hook.html\n #[unstable(feature = \"alloc_error_hook\", issue = \"51245\")]\n pub fn set_alloc_error_hook(hook: fn(Layout)) {\n     HOOK.store(hook as *mut (), Ordering::SeqCst);\n@@ -297,8 +290,6 @@ pub fn set_alloc_error_hook(hook: fn(Layout)) {\n /// *See also the function [`set_alloc_error_hook`].*\n ///\n /// If no custom hook is registered, the default hook will be returned.\n-///\n-/// [`set_alloc_error_hook`]: fn.set_alloc_error_hook.html\n #[unstable(feature = \"alloc_error_hook\", issue = \"51245\")]\n pub fn take_alloc_error_hook() -> fn(Layout) {\n     let hook = HOOK.swap(ptr::null_mut(), Ordering::SeqCst);"}]}