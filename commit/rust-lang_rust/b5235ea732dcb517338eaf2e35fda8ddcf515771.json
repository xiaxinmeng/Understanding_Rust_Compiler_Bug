{"sha": "b5235ea732dcb517338eaf2e35fda8ddcf515771", "node_id": "C_kwDOAAsO6NoAKGI1MjM1ZWE3MzJkY2I1MTczMzhlYWYyZTM1ZmRhOGRkY2Y1MTU3NzE", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-12-09T17:10:05Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2022-02-12T08:24:41Z"}, "message": "bless you", "tree": {"sha": "b89521e4aabc17cb3392650d8258a0de9e24de36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b89521e4aabc17cb3392650d8258a0de9e24de36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b5235ea732dcb517338eaf2e35fda8ddcf515771", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE3RQPHNISvvEnSKtjbQF6ltjmwvkFAmIHbsoACgkQbQF6ltjm\nwvmK7w/8ChPHr12/hBakpd7k16DJP6t3gMLG3ITL5EuH+gVYbepjpT3jhJbHvLUZ\nWukCrs0nWTlWAGr0NW8n/vB/uSa0fSAJbwWlM9Os4YAZQA8/YuNk706AMxwdIc5k\nF6ANseWxAprFuX04XhrxkoANXiz+n2CwyXHZiUs7fhI9Sqekhk+uagclTUPojMd3\nUF3Ov+/dv1CROBIKlw4mhvnC/0CE9a5PAkU4ZslfciTA1V2miZGr5YZ9U1GKPJlS\nunzTUdzFAVNxs4iaW4hqxLqP4qkpEW65sjaxOVxiwqroj6ztJb5EMhIFXonlgG69\n3W6sflGCAnJGZ3kS2MrRga+20MyuKfDN2URcq/H3PJSv+HnQwbZ9AWtgFobtRcuy\nqMB3yoWusaDbG4M6GPFf/8b07lsL6qfyieVwr+JfZne91r4lvSkfXJ8ATupM4XSF\nPftBr3WPL/Hv/qIUs/MjRzrbgrpfVbCnGcviuCFdnbA71/fqyvLE3ksT1edAoiRB\nMjZrRnZVzWlmQEV6BmSWR303N6o/Qz6kVikOcnEd7L9s3j5xoLTJmbvKp4kqwBgE\nbxP8ZG48lpWhGhtD+mYnrxYAYu9Ko04HOUKitcao7WHvylU3Bc8RPZk92xpoGYEy\nvpkXEvRDGTRiDOlcvVLPabCqDNXO5kGD+UOhgPPfs1tRsZHiqEY=\n=Jyfg\n-----END PGP SIGNATURE-----", "payload": "tree b89521e4aabc17cb3392650d8258a0de9e24de36\nparent f7f0f843b70f1b6c4ac9e22789d93d7bf5569dc3\nauthor Deadbeef <ent3rm4n@gmail.com> 1639069805 +0800\ncommitter Deadbeef <ent3rm4n@gmail.com> 1644654281 +1100\n\nbless you\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b5235ea732dcb517338eaf2e35fda8ddcf515771", "html_url": "https://github.com/rust-lang/rust/commit/b5235ea732dcb517338eaf2e35fda8ddcf515771", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b5235ea732dcb517338eaf2e35fda8ddcf515771/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7f0f843b70f1b6c4ac9e22789d93d7bf5569dc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7f0f843b70f1b6c4ac9e22789d93d7bf5569dc3", "html_url": "https://github.com/rust-lang/rust/commit/f7f0f843b70f1b6c4ac9e22789d93d7bf5569dc3"}], "stats": {"total": 287, "additions": 200, "deletions": 87}, "files": [{"sha": "33d55be5812e78822b18d7e8472195b5b789c9fc", "filename": "src/test/ui/borrowck/issue-64453.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fborrowck%2Fissue-64453.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fborrowck%2Fissue-64453.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-64453.rs?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -2,7 +2,7 @@ struct Project;\n struct Value;\n \n static settings_dir: String = format!(\"\");\n-//~^ ERROR calls in statics are limited to constant functions\n+//~^ ERROR cannot call non-const fn\n //~| ERROR is not yet stable as a const\n \n fn from_string(_: String) -> Value {"}, {"sha": "f3436fbec66a605327139855744a48cc66f327dc", "filename": "src/test/ui/borrowck/issue-64453.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fborrowck%2Fissue-64453.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fborrowck%2Fissue-64453.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-64453.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -7,12 +7,13 @@ LL | static settings_dir: String = format!(\"\");\n    = help: add `#![feature(const_fmt_arguments_new)]` to the crate attributes to enable\n    = note: this error originates in the macro `$crate::__export::format_args` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error[E0015]: calls in statics are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const fn `format` in statics\n   --> $DIR/issue-64453.rs:4:31\n    |\n LL | static settings_dir: String = format!(\"\");\n    |                               ^^^^^^^^^^^\n    |\n+   = note: calls in statics are limited to constant functions, tuple structs and tuple variants\n    = note: this error originates in the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0507]: cannot move out of static item `settings_dir`"}, {"sha": "eb4ecd8baca965e97ecc4d5fc75c291f7021a2b3", "filename": "src/test/ui/check-static-values-constraints.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fcheck-static-values-constraints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fcheck-static-values-constraints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcheck-static-values-constraints.rs?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -87,7 +87,7 @@ static mut STATIC13: SafeStruct = SafeStruct{field1: SafeEnum::Variant1,\n static mut STATIC14: SafeStruct = SafeStruct {\n     field1: SafeEnum::Variant1,\n     field2: SafeEnum::Variant4(\"str\".to_string())\n-//~^ ERROR calls in statics are limited to constant functions\n+//~^ ERROR cannot call non-const fn\n };\n \n static STATIC15: &'static [Box<MyOwned>] = &["}, {"sha": "b28cf0d6bd0f582808a27f90823e8595d040ee16", "filename": "src/test/ui/check-static-values-constraints.stderr", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fcheck-static-values-constraints.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fcheck-static-values-constraints.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcheck-static-values-constraints.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -15,11 +15,13 @@ error[E0010]: allocations are not allowed in statics\n LL | static STATIC11: Box<MyOwned> = box MyOwned;\n    |                                 ^^^^^^^^^^^ allocation not allowed in statics\n \n-error[E0015]: calls in statics are limited to constant functions, tuple structs and tuple variants\n-  --> $DIR/check-static-values-constraints.rs:89:32\n+error[E0015]: cannot call non-const fn `<str as ToString>::to_string` in statics\n+  --> $DIR/check-static-values-constraints.rs:89:38\n    |\n LL |     field2: SafeEnum::Variant4(\"str\".to_string())\n-   |                                ^^^^^^^^^^^^^^^^^\n+   |                                      ^^^^^^^^^^^\n+   |\n+   = note: calls in statics are limited to constant functions, tuple structs and tuple variants\n \n error[E0010]: allocations are not allowed in statics\n   --> $DIR/check-static-values-constraints.rs:94:5"}, {"sha": "52f1c588258235db49b315efeea2a1034e26887c", "filename": "src/test/ui/const-generics/nested-type.full.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconst-generics%2Fnested-type.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconst-generics%2Fnested-type.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fnested-type.full.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -1,8 +1,10 @@\n-error[E0015]: calls in constants are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const fn `Foo::{constant#0}::Foo::<17_usize>::value` in constants\n   --> $DIR/nested-type.rs:15:5\n    |\n LL |     Foo::<17>::value()\n    |     ^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: calls in constants are limited to constant functions, tuple structs and tuple variants\n \n error: aborting due to previous error\n "}, {"sha": "0e3c988ae4d8c9f34e285cc9b188953bffc74d28", "filename": "src/test/ui/const-generics/nested-type.min.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconst-generics%2Fnested-type.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconst-generics%2Fnested-type.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fnested-type.min.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -14,11 +14,13 @@ LL | | }]>;\n    = note: the only supported types are integers, `bool` and `char`\n    = help: more complex types are supported with `#![feature(adt_const_params)]`\n \n-error[E0015]: calls in constants are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const fn `Foo::{constant#0}::Foo::<17_usize>::value` in constants\n   --> $DIR/nested-type.rs:15:5\n    |\n LL |     Foo::<17>::value()\n    |     ^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: calls in constants are limited to constant functions, tuple structs and tuple variants\n \n error: aborting due to 2 previous errors\n "}, {"sha": "5240f5c3b0b64b8d4cc3919b3cd167ecdfb3ce15", "filename": "src/test/ui/const-generics/nested-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconst-generics%2Fnested-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconst-generics%2Fnested-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fnested-type.rs?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -13,7 +13,7 @@ struct Foo<const N: [u8; { //[min]~ ERROR `[u8; _]` is forbidden\n     }\n \n     Foo::<17>::value()\n-    //~^ ERROR calls in constants are limited to constant functions\n+    //~^ ERROR cannot call non-const fn\n }]>;\n \n fn main() {}"}, {"sha": "28e89559fe538653a62da22f7b34313c18828d7e", "filename": "src/test/ui/consts/const-call.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fconst-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fconst-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-call.rs?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -4,5 +4,5 @@ fn f(x: usize) -> usize {\n \n fn main() {\n     let _ = [0; f(2)];\n-    //~^ ERROR calls in constants are limited to constant functions\n+    //~^ ERROR cannot call non-const fn\n }"}, {"sha": "e46bcad0e1d0ea48dff0ea76cfce951496bdc8aa", "filename": "src/test/ui/consts/const-call.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fconst-call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fconst-call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-call.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -1,8 +1,10 @@\n-error[E0015]: calls in constants are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const fn `f` in constants\n   --> $DIR/const-call.rs:6:17\n    |\n LL |     let _ = [0; f(2)];\n    |                 ^^^^\n+   |\n+   = note: calls in constants are limited to constant functions, tuple structs and tuple variants\n \n error: aborting due to previous error\n "}, {"sha": "eccda49db3eb54481ffd581cd0c07b0206c00960", "filename": "src/test/ui/consts/const-extern-fn/const-extern-fn-call-extern-fn.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fconst-extern-fn%2Fconst-extern-fn-call-extern-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fconst-extern-fn%2Fconst-extern-fn-call-extern-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-extern-fn%2Fconst-extern-fn-call-extern-fn.rs?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -7,7 +7,7 @@ extern \"C\" {\n const extern \"C\" fn bar() {\n     unsafe {\n         regular_in_block();\n-        //~^ ERROR: calls in constant functions\n+        //~^ ERROR: cannot call non-const fn\n     }\n }\n \n@@ -16,7 +16,7 @@ extern \"C\" fn regular() {}\n const extern \"C\" fn foo() {\n     unsafe {\n         regular();\n-        //~^ ERROR: calls in constant functions\n+        //~^ ERROR: cannot call non-const fn\n     }\n }\n "}, {"sha": "5acf22e4bc66e3591d94240f25ecee1e4f52b5dc", "filename": "src/test/ui/consts/const-extern-fn/const-extern-fn-call-extern-fn.stderr", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fconst-extern-fn%2Fconst-extern-fn-call-extern-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fconst-extern-fn%2Fconst-extern-fn-call-extern-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-extern-fn%2Fconst-extern-fn-call-extern-fn.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -1,14 +1,18 @@\n-error[E0015]: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const fn `regular_in_block` in constant functions\n   --> $DIR/const-extern-fn-call-extern-fn.rs:9:9\n    |\n LL |         regular_in_block();\n    |         ^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n \n-error[E0015]: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const fn `regular` in constant functions\n   --> $DIR/const-extern-fn-call-extern-fn.rs:18:9\n    |\n LL |         regular();\n    |         ^^^^^^^^^\n+   |\n+   = note: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n \n error: aborting due to 2 previous errors\n "}, {"sha": "0b813e65621d39ec7c6c47d94d8b96115de686aa", "filename": "src/test/ui/consts/const-fn-error.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-error.rs?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -4,8 +4,9 @@ const fn f(x: usize) -> usize {\n     let mut sum = 0;\n     for i in 0..x {\n         //~^ ERROR mutable references\n-        //~| ERROR calls in constant functions\n-        //~| ERROR calls in constant functions\n+        //~| ERROR cannot convert\n+        //~| ERROR cannot call non-const fn\n+        //~| ERROR E0080\n         //~| ERROR `for` is not allowed in a `const fn`\n         sum += i;\n     }"}, {"sha": "4d53cfc35e1c4ab88db8e8b0bca1e545a23c99b2", "filename": "src/test/ui/consts/const-fn-error.stderr", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-error.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -13,11 +13,18 @@ LL | |     }\n    = note: see issue #87575 <https://github.com/rust-lang/rust/issues/87575> for more information\n    = help: add `#![feature(const_for)]` to the crate attributes to enable\n \n-error[E0015]: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot convert `std::ops::Range<usize>` into an iterator in constant functions\n   --> $DIR/const-fn-error.rs:5:14\n    |\n LL |     for i in 0..x {\n    |              ^^^^\n+   |\n+note: impl defined here, but it is not `const`\n+  --> $SRC_DIR/core/src/iter/traits/collect.rs:LL:COL\n+   |\n+LL | impl<I: Iterator> IntoIterator for I {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   = note: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n \n error[E0658]: mutable references are not allowed in constant functions\n   --> $DIR/const-fn-error.rs:5:14\n@@ -28,11 +35,13 @@ LL |     for i in 0..x {\n    = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n    = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n-error[E0015]: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const fn `<std::ops::Range<usize> as Iterator>::next` in constant functions\n   --> $DIR/const-fn-error.rs:5:14\n    |\n LL |     for i in 0..x {\n    |              ^^^^\n+   |\n+   = note: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n \n error: aborting due to 4 previous errors\n "}, {"sha": "4c7effc0d158657594810410aa6a1ef27eecbc20", "filename": "src/test/ui/consts/const-fn-not-safe-for-const.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-not-safe-for-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-not-safe-for-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-not-safe-for-const.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -1,8 +1,10 @@\n-error[E0015]: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const fn `random` in constant functions\n   --> $DIR/const-fn-not-safe-for-const.rs:14:5\n    |\n LL |     random()\n    |     ^^^^^^^^\n+   |\n+   = note: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n \n error[E0013]: constant functions cannot refer to statics\n   --> $DIR/const-fn-not-safe-for-const.rs:20:5"}, {"sha": "58bcb5f74ccf6254f2e9f538ea35e3a46e94ba12", "filename": "src/test/ui/consts/const-for.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fconst-for.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fconst-for.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-for.rs?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -3,8 +3,8 @@\n \n const _: () = {\n     for _ in 0..5 {}\n-    //~^ error: calls in constants are limited to\n-    //~| error: calls in constants are limited to\n+    //~^ error: cannot convert\n+    //~| error: cannot call non-const fn\n };\n \n fn main() {}"}, {"sha": "b0dc43eb8e8508f0d23cb136faa64e168408afb2", "filename": "src/test/ui/consts/const-for.stderr", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fconst-for.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fconst-for.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-for.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -1,14 +1,23 @@\n-error[E0015]: calls in constants are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot convert `std::ops::Range<i32>` into an iterator in constants\n   --> $DIR/const-for.rs:5:14\n    |\n LL |     for _ in 0..5 {}\n    |              ^^^^\n+   |\n+note: impl defined here, but it is not `const`\n+  --> $SRC_DIR/core/src/iter/traits/collect.rs:LL:COL\n+   |\n+LL | impl<I: Iterator> IntoIterator for I {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   = note: calls in constants are limited to constant functions, tuple structs and tuple variants\n \n-error[E0015]: calls in constants are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const fn `<std::ops::Range<i32> as Iterator>::next` in constants\n   --> $DIR/const-for.rs:5:14\n    |\n LL |     for _ in 0..5 {}\n    |              ^^^^\n+   |\n+   = note: calls in constants are limited to constant functions, tuple structs and tuple variants\n \n error: aborting due to 2 previous errors\n "}, {"sha": "ddddc8505c635102ec743013828870f80be4d7ee", "filename": "src/test/ui/consts/control-flow/issue-46843.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Fissue-46843.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Fissue-46843.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Fissue-46843.rs?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -8,7 +8,7 @@ fn non_const() -> Thing {\n }\n \n pub const Q: i32 = match non_const() {\n-    //~^ ERROR calls in constants are limited to constant functions\n+    //~^ ERROR cannot call non-const fn\n     Thing::This => 1,\n     Thing::That => 0\n };"}, {"sha": "66227f61e35638e985e8d10b59d8d31a9e68e4ee", "filename": "src/test/ui/consts/control-flow/issue-46843.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Fissue-46843.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Fissue-46843.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Fissue-46843.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -1,8 +1,10 @@\n-error[E0015]: calls in constants are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const fn `non_const` in constants\n   --> $DIR/issue-46843.rs:10:26\n    |\n LL | pub const Q: i32 = match non_const() {\n    |                          ^^^^^^^^^^^\n+   |\n+   = note: calls in constants are limited to constant functions, tuple structs and tuple variants\n \n error: aborting due to previous error\n "}, {"sha": "d5f694986fc8997ad7048118407af6b563a86fe5", "filename": "src/test/ui/consts/intrinsic_without_const_stab.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fintrinsic_without_const_stab.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fintrinsic_without_const_stab.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fintrinsic_without_const_stab.rs?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -11,7 +11,7 @@ pub const unsafe fn copy<T>(src: *const T, dst: *mut T, count: usize) {\n     }\n \n     unsafe { copy(src, dst, count) }\n-    //~^ ERROR calls in constant functions are limited to constant functions\n+    //~^ ERROR cannot call non-const fn\n }\n \n fn main() {}"}, {"sha": "b32b6398ece62b1e2e2a2892b81dc7c0d496444d", "filename": "src/test/ui/consts/intrinsic_without_const_stab.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fintrinsic_without_const_stab.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fintrinsic_without_const_stab.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fintrinsic_without_const_stab.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -1,8 +1,10 @@\n-error[E0015]: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const fn `copy::copy::<T>` in constant functions\n   --> $DIR/intrinsic_without_const_stab.rs:13:14\n    |\n LL |     unsafe { copy(src, dst, count) }\n    |              ^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n \n error: aborting due to previous error\n "}, {"sha": "8b37268b0b205c5c8e29f276be7bc0ec395bb645", "filename": "src/test/ui/consts/intrinsic_without_const_stab_fail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fintrinsic_without_const_stab_fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fintrinsic_without_const_stab_fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fintrinsic_without_const_stab_fail.rs?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -9,7 +9,7 @@ extern \"rust-intrinsic\" {\n #[rustc_const_unstable(feature = \"const_intrinsic_copy\", issue = \"80697\")]\n #[inline]\n pub const unsafe fn stuff<T>(src: *const T, dst: *mut T, count: usize) {\n-    unsafe { copy(src, dst, count) } //~ ERROR calls in constant functions are limited\n+    unsafe { copy(src, dst, count) } //~ ERROR cannot call non-const fn\n }\n \n fn main() {}"}, {"sha": "fcbb3724567fef5a252657bbc11d7b8030eb9815", "filename": "src/test/ui/consts/intrinsic_without_const_stab_fail.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fintrinsic_without_const_stab_fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fintrinsic_without_const_stab_fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fintrinsic_without_const_stab_fail.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -1,8 +1,10 @@\n-error[E0015]: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const fn `copy::<T>` in constant functions\n   --> $DIR/intrinsic_without_const_stab_fail.rs:12:14\n    |\n LL |     unsafe { copy(src, dst, count) }\n    |              ^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n \n error: aborting due to previous error\n "}, {"sha": "1d93d454af786ec5a46c6d95f746dd19427049eb", "filename": "src/test/ui/consts/issue-28113.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fissue-28113.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fissue-28113.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-28113.rs?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -2,7 +2,7 @@\n \n const X: u8 =\n     || -> u8 { 5 }()\n-    //~^ ERROR calls in constants are limited to constant functions\n+    //~^ ERROR cannot call non-const fn\n ;\n \n fn main() {}"}, {"sha": "75fcc010a04f98f6e3ec272337a571b36d844492", "filename": "src/test/ui/consts/issue-28113.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fissue-28113.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fissue-28113.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-28113.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -1,8 +1,10 @@\n-error[E0015]: calls in constants are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const fn `<[closure@$DIR/issue-28113.rs:4:5: 4:19] as Fn<()>>::call` in constants\n   --> $DIR/issue-28113.rs:4:5\n    |\n LL |     || -> u8 { 5 }()\n    |     ^^^^^^^^^^^^^^^^\n+   |\n+   = note: calls in constants are limited to constant functions, tuple structs and tuple variants\n \n error: aborting due to previous error\n "}, {"sha": "d70b5a8c4e13af3e93a90c00e65c03b0a00b49e1", "filename": "src/test/ui/consts/issue-32829-2.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fissue-32829-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fissue-32829-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-32829-2.rs?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -8,7 +8,7 @@ const bad : u32 = {\n const bad_two : u32 = {\n     {\n         invalid();\n-        //~^ ERROR: calls in constants are limited to constant functions, tuple structs and tuple variants\n+        //~^ ERROR: cannot call non-const fn `invalid`\n         0\n     }\n };\n@@ -30,7 +30,7 @@ static bad_four : u32 = {\n static bad_five : u32 = {\n     {\n         invalid();\n-        //~^ ERROR: calls in statics are limited to constant functions, tuple structs and tuple variants\n+        //~^ ERROR: cannot call non-const fn `invalid`\n         0\n     }\n };\n@@ -52,7 +52,7 @@ static mut bad_seven : u32 = {\n static mut bad_eight : u32 = {\n     {\n         invalid();\n-        //~^ ERROR: calls in statics are limited to constant functions, tuple structs and tuple variants\n+        //~^ ERROR: cannot call non-const fn `invalid`\n         0\n     }\n };"}, {"sha": "b94bdc0e3df1181f6499be8f5dc9f0c52861d3a8", "filename": "src/test/ui/consts/issue-32829-2.stderr", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fissue-32829-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fissue-32829-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-32829-2.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -1,20 +1,26 @@\n-error[E0015]: calls in constants are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const fn `invalid` in constants\n   --> $DIR/issue-32829-2.rs:10:9\n    |\n LL |         invalid();\n    |         ^^^^^^^^^\n+   |\n+   = note: calls in constants are limited to constant functions, tuple structs and tuple variants\n \n-error[E0015]: calls in statics are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const fn `invalid` in statics\n   --> $DIR/issue-32829-2.rs:32:9\n    |\n LL |         invalid();\n    |         ^^^^^^^^^\n+   |\n+   = note: calls in statics are limited to constant functions, tuple structs and tuple variants\n \n-error[E0015]: calls in statics are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const fn `invalid` in statics\n   --> $DIR/issue-32829-2.rs:54:9\n    |\n LL |         invalid();\n    |         ^^^^^^^^^\n+   |\n+   = note: calls in statics are limited to constant functions, tuple structs and tuple variants\n \n error: aborting due to 3 previous errors\n "}, {"sha": "cac12b90970fe78b3f1ad19a1cb46c34f061ab00", "filename": "src/test/ui/consts/issue-43105.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fissue-43105.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fissue-43105.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-43105.rs?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -1,7 +1,7 @@\n fn xyz() -> u8 { 42 }\n \n const NUM: u8 = xyz();\n-//~^ ERROR calls in constants are limited to constant functions, tuple structs and tuple variants\n+//~^ ERROR cannot call non-const fn\n \n fn main() {\n     match 1 {"}, {"sha": "2d1174af71c86218ccdbb0020539c0a29bfe9ed4", "filename": "src/test/ui/consts/issue-43105.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fissue-43105.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fissue-43105.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-43105.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -1,8 +1,10 @@\n-error[E0015]: calls in constants are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const fn `xyz` in constants\n   --> $DIR/issue-43105.rs:3:17\n    |\n LL | const NUM: u8 = xyz();\n    |                 ^^^^^\n+   |\n+   = note: calls in constants are limited to constant functions, tuple structs and tuple variants\n \n error: could not evaluate constant pattern\n   --> $DIR/issue-43105.rs:8:9"}, {"sha": "af65720916cd91eaab6bbcf9f8aafec7d572fe49", "filename": "src/test/ui/consts/issue-56164.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fissue-56164.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fissue-56164.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-56164.rs?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -1,7 +1,7 @@\n #![feature(const_fn_fn_ptr_basics)]\n \n const fn foo() { (||{})() }\n-//~^ ERROR calls in constant functions\n+//~^ ERROR cannot call non-const fn\n \n const fn bad(input: fn()) {\n     input()"}, {"sha": "af5d44d4814bf369488d43db29d3cc39f20e37e5", "filename": "src/test/ui/consts/issue-56164.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fissue-56164.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fissue-56164.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-56164.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -1,8 +1,10 @@\n-error[E0015]: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const fn `<[closure@$DIR/issue-56164.rs:3:18: 3:24] as Fn<()>>::call` in constant functions\n   --> $DIR/issue-56164.rs:3:18\n    |\n LL | const fn foo() { (||{})() }\n    |                  ^^^^^^^^\n+   |\n+   = note: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n \n error: function pointers are not allowed in const fn\n   --> $DIR/issue-56164.rs:7:5"}, {"sha": "44f44da234a7ce14af9e2dae1e8f97ebe907d9e5", "filename": "src/test/ui/consts/issue-68542-closure-in-array-len.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fissue-68542-closure-in-array-len.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fissue-68542-closure-in-array-len.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-68542-closure-in-array-len.rs?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -3,7 +3,7 @@\n // in the length part of an array.\n \n struct Bug {\n-    a: [(); (|| { 0 })()] //~ ERROR calls in constants are limited to\n+    a: [(); (|| { 0 })()] //~ ERROR cannot call non-const fn\n }\n \n fn main() {}"}, {"sha": "3787138afc37f3cc192b8ad0a4532f91e3f378c9", "filename": "src/test/ui/consts/issue-68542-closure-in-array-len.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fissue-68542-closure-in-array-len.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fissue-68542-closure-in-array-len.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-68542-closure-in-array-len.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -1,8 +1,10 @@\n-error[E0015]: calls in constants are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const fn `<[closure@$DIR/issue-68542-closure-in-array-len.rs:6:13: 6:23] as Fn<()>>::call` in constants\n   --> $DIR/issue-68542-closure-in-array-len.rs:6:13\n    |\n LL |     a: [(); (|| { 0 })()]\n    |             ^^^^^^^^^^^^\n+   |\n+   = note: calls in constants are limited to constant functions, tuple structs and tuple variants\n \n error: aborting due to previous error\n "}, {"sha": "258997597ea9d91f8228ac5c61bbaf4e6bbb233e", "filename": "src/test/ui/consts/min_const_fn/bad_const_fn_body_ice.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fbad_const_fn_body_ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fbad_const_fn_body_ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fbad_const_fn_body_ice.rs?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -1,7 +1,7 @@\n const fn foo(a: i32) -> Vec<i32> {\n     vec![1, 2, 3]\n     //~^ ERROR allocations are not allowed\n-    //~| ERROR calls in constant functions\n+    //~| ERROR cannot call non-const fn\n }\n \n fn main() {}"}, {"sha": "74234108911dd198d40880018decf6baddbc0384", "filename": "src/test/ui/consts/min_const_fn/bad_const_fn_body_ice.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fbad_const_fn_body_ice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fbad_const_fn_body_ice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fbad_const_fn_body_ice.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -6,12 +6,13 @@ LL |     vec![1, 2, 3]\n    |\n    = note: this error originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error[E0015]: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const fn `slice::<impl [i32]>::into_vec::<std::alloc::Global>` in constant functions\n   --> $DIR/bad_const_fn_body_ice.rs:2:5\n    |\n LL |     vec![1, 2, 3]\n    |     ^^^^^^^^^^^^^\n    |\n+   = note: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n    = note: this error originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to 2 previous errors"}, {"sha": "b6f34b922fae51548a3956459853637246e7a67a", "filename": "src/test/ui/consts/mir_check_nonconst.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fmir_check_nonconst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fmir_check_nonconst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmir_check_nonconst.rs?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -6,6 +6,6 @@ fn bar() -> Foo {\n }\n \n static foo: Foo = bar();\n-//~^ ERROR calls in statics are limited to constant functions, tuple structs and tuple variants\n+//~^ ERROR cannot call non-const fn\n \n fn main() {}"}, {"sha": "2bac995eebf090244cd229eb05479cabb795eec3", "filename": "src/test/ui/consts/mir_check_nonconst.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fmir_check_nonconst.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Fmir_check_nonconst.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmir_check_nonconst.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -1,8 +1,10 @@\n-error[E0015]: calls in statics are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const fn `bar` in statics\n   --> $DIR/mir_check_nonconst.rs:8:19\n    |\n LL | static foo: Foo = bar();\n    |                   ^^^^^\n+   |\n+   = note: calls in statics are limited to constant functions, tuple structs and tuple variants\n \n error: aborting due to previous error\n "}, {"sha": "435141134cb887e5e0424da45f02ca03b1769c87", "filename": "src/test/ui/consts/unstable-const-fn-in-libcore.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Funstable-const-fn-in-libcore.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fconsts%2Funstable-const-fn-in-libcore.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Funstable-const-fn-in-libcore.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -1,8 +1,10 @@\n-error[E0015]: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const fn `<F as FnOnce<()>>::call_once` in constant functions\n   --> $DIR/unstable-const-fn-in-libcore.rs:24:26\n    |\n LL |             Opt::None => f(),\n    |                          ^^^\n+   |\n+   = note: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n \n error[E0493]: destructors cannot be evaluated at compile-time\n   --> $DIR/unstable-const-fn-in-libcore.rs:19:53"}, {"sha": "60a2bf1e2d66083485e4539df7124141a9523d69", "filename": "src/test/ui/issues/issue-16538.mir.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fissues%2Fissue-16538.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fissues%2Fissue-16538.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-16538.mir.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -1,8 +1,10 @@\n-error[E0015]: calls in statics are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const fn `Y::foo` in statics\n   --> $DIR/issue-16538.rs:15:23\n    |\n LL | static foo: &Y::X = &*Y::foo(Y::x as *const Y::X);\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: calls in statics are limited to constant functions, tuple structs and tuple variants\n \n error[E0133]: use of extern static is unsafe and requires unsafe function or block\n   --> $DIR/issue-16538.rs:15:30"}, {"sha": "2ba9dfa2bc5f844c62d484d8b4b80db45b1e37be", "filename": "src/test/ui/issues/issue-16538.thir.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fissues%2Fissue-16538.thir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fissues%2Fissue-16538.thir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-16538.thir.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -14,11 +14,13 @@ LL | static foo: &Y::X = &*Y::foo(Y::x as *const Y::X);\n    |\n    = note: extern statics are not controlled by the Rust type system: invalid data, aliasing violations or data races will cause undefined behavior\n \n-error[E0015]: calls in statics are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const fn `Y::foo` in statics\n   --> $DIR/issue-16538.rs:15:23\n    |\n LL | static foo: &Y::X = &*Y::foo(Y::x as *const Y::X);\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: calls in statics are limited to constant functions, tuple structs and tuple variants\n \n error: aborting due to 3 previous errors\n "}, {"sha": "ba12e1ad0211bffcbd8d9beff612c91d2749cccd", "filename": "src/test/ui/issues/issue-25901.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fissues%2Fissue-25901.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fissues%2Fissue-25901.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-25901.rs?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -2,7 +2,7 @@ struct A;\n struct B;\n \n static S: &'static B = &A;\n-//~^ ERROR calls in statics are limited to constant functions\n+//~^ ERROR cannot perform deref coercion on `A` in statics\n \n use std::ops::Deref;\n "}, {"sha": "5c35250bc3f39e86454a4b4a3ed4f4c0749d39b1", "filename": "src/test/ui/issues/issue-25901.stderr", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fissues%2Fissue-25901.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fissues%2Fissue-25901.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-25901.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -1,8 +1,21 @@\n-error[E0015]: calls in statics are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot perform deref coercion on `A` in statics\n   --> $DIR/issue-25901.rs:4:24\n    |\n LL | static S: &'static B = &A;\n    |                        ^^\n+   |\n+   = note: attempting to deref into `B`\n+note: deref defined here\n+  --> $DIR/issue-25901.rs:10:5\n+   |\n+LL |     type Target = B;\n+   |     ^^^^^^^^^^^^^^^^\n+note: impl defined here, but it is not `const`\n+  --> $DIR/issue-25901.rs:9:1\n+   |\n+LL | impl Deref for A {\n+   | ^^^^^^^^^^^^^^^^\n+   = note: calls in statics are limited to constant functions, tuple structs and tuple variants\n \n error: aborting due to previous error\n "}, {"sha": "ea27e7bd2508f9ecc26f7bf14dd65577c2dcd5ba", "filename": "src/test/ui/issues/issue-39559-2.stderr", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fissues%2Fissue-39559-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fissues%2Fissue-39559-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-39559-2.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -1,14 +1,18 @@\n-error[E0015]: calls in constants are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const fn `<Dim3 as Dim>::dim` in constants\n   --> $DIR/issue-39559-2.rs:14:24\n    |\n LL |     let array: [usize; Dim3::dim()]\n    |                        ^^^^^^^^^^^\n+   |\n+   = note: calls in constants are limited to constant functions, tuple structs and tuple variants\n \n-error[E0015]: calls in constants are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const fn `<Dim3 as Dim>::dim` in constants\n   --> $DIR/issue-39559-2.rs:16:15\n    |\n LL |         = [0; Dim3::dim()];\n    |               ^^^^^^^^^^^\n+   |\n+   = note: calls in constants are limited to constant functions, tuple structs and tuple variants\n \n error: aborting due to 2 previous errors\n "}, {"sha": "cebcca944af82b9ef1524ed622476f6dc393e080", "filename": "src/test/ui/never_type/issue-52443.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fnever_type%2Fissue-52443.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fnever_type%2Fissue-52443.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnever_type%2Fissue-52443.rs?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -8,7 +8,7 @@ fn main() {\n \n     [(); { for _ in 0usize.. {}; 0}];\n     //~^ ERROR `for` is not allowed in a `const`\n-    //~| ERROR calls in constants are limited to constant functions\n+    //~| ERROR cannot convert\n     //~| ERROR mutable references are not allowed in constants\n-    //~| ERROR calls in constants are limited to constant functions\n+    //~| ERROR cannot call non-const fn\n }"}, {"sha": "8c1755205f0253b82f6026b5d05f2508c4d831f0", "filename": "src/test/ui/never_type/issue-52443.stderr", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fnever_type%2Fissue-52443.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fnever_type%2Fissue-52443.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnever_type%2Fissue-52443.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -38,11 +38,18 @@ LL |     [(); loop { break }];\n    |                 expected `usize`, found `()`\n    |                 help: give it a value of the expected type: `break 42`\n \n-error[E0015]: calls in constants are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot convert `RangeFrom<usize>` into an iterator in constants\n   --> $DIR/issue-52443.rs:9:21\n    |\n LL |     [(); { for _ in 0usize.. {}; 0}];\n    |                     ^^^^^^^^\n+   |\n+note: impl defined here, but it is not `const`\n+  --> $SRC_DIR/core/src/iter/traits/collect.rs:LL:COL\n+   |\n+LL | impl<I: Iterator> IntoIterator for I {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   = note: calls in constants are limited to constant functions, tuple structs and tuple variants\n \n error[E0658]: mutable references are not allowed in constants\n   --> $DIR/issue-52443.rs:9:21\n@@ -53,11 +60,13 @@ LL |     [(); { for _ in 0usize.. {}; 0}];\n    = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n    = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n-error[E0015]: calls in constants are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const fn `<RangeFrom<usize> as Iterator>::next` in constants\n   --> $DIR/issue-52443.rs:9:21\n    |\n LL |     [(); { for _ in 0usize.. {}; 0}];\n    |                     ^^^^^^^^\n+   |\n+   = note: calls in constants are limited to constant functions, tuple structs and tuple variants\n \n error: aborting due to 6 previous errors; 1 warning emitted\n "}, {"sha": "5f55d61f5fdcde9132c733beeee4dd86b855b9bc", "filename": "src/test/ui/rfc-2632-const-trait-impl/call-const-trait-method-fail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-const-trait-method-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-const-trait-method-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-const-trait-method-fail.rs?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -22,7 +22,7 @@ pub const fn add_i32(a: i32, b: i32) -> i32 {\n \n pub const fn add_u32(a: u32, b: u32) -> u32 {\n     a.plus(b)\n-    //~^ ERROR calls in constant functions are limited to constant functions\n+    //~^ ERROR cannot call non-const fn\n }\n \n fn main() {}"}, {"sha": "b5680c04a65a384c559bafe747f2cb57bade69f1", "filename": "src/test/ui/rfc-2632-const-trait-impl/call-const-trait-method-fail.stderr", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-const-trait-method-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-const-trait-method-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-const-trait-method-fail.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -1,8 +1,10 @@\n-error[E0015]: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n-  --> $DIR/call-const-trait-method-fail.rs:24:5\n+error[E0015]: cannot call non-const fn `<u32 as Plus>::plus` in constant functions\n+  --> $DIR/call-const-trait-method-fail.rs:24:7\n    |\n LL |     a.plus(b)\n-   |     ^^^^^^^^^\n+   |       ^^^^^^^\n+   |\n+   = note: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n \n error: aborting due to previous error\n "}, {"sha": "e3de75ea519430378cd9c8d86cb5575c15bf8433", "filename": "src/test/ui/rfc-2632-const-trait-impl/call-generic-method-fail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-fail.rs?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -3,7 +3,7 @@\n \n pub const fn equals_self<T: PartialEq>(t: &T) -> bool {\n     *t == *t\n-    //~^ ERROR calls in constant functions are limited to constant functions\n+    //~^ ERROR cannot call non-const operator\n }\n \n fn main() {}"}, {"sha": "d50100d033e510f5634d0273c5768284251d5c0f", "filename": "src/test/ui/rfc-2632-const-trait-impl/call-generic-method-fail.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-fail.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -1,8 +1,14 @@\n-error[E0015]: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const operator in constant functions\n   --> $DIR/call-generic-method-fail.rs:5:5\n    |\n LL |     *t == *t\n    |     ^^^^^^^^\n+   |\n+   = note: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n+help: consider further restricting this bound\n+   |\n+LL | pub const fn equals_self<T: PartialEq + ~const std::cmp::PartialEq>(t: &T) -> bool {\n+   |                                       ++++++++++++++++++++++++++++\n \n error: aborting due to previous error\n "}, {"sha": "b3e3dd62be804bfa406e7e432f989e2486499cd0", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-check-fns-in-const-impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-check-fns-in-const-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-check-fns-in-const-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-check-fns-in-const-impl.rs?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -9,7 +9,7 @@ fn non_const() {}\n \n impl const T for S {\n     fn foo() { non_const() }\n-    //~^ ERROR calls in constant functions\n+    //~^ ERROR cannot call non-const fn\n }\n \n fn main() {}"}, {"sha": "9e49785c589e16516a6aaa5ea2cfe1213de21061", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-check-fns-in-const-impl.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-check-fns-in-const-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-check-fns-in-const-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-check-fns-in-const-impl.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -1,8 +1,10 @@\n-error[E0015]: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const fn `non_const` in constant functions\n   --> $DIR/const-check-fns-in-const-impl.rs:11:16\n    |\n LL |     fn foo() { non_const() }\n    |                ^^^^^^^^^^^\n+   |\n+   = note: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n \n error: aborting due to previous error\n "}, {"sha": "4b685b3b2b75aec896c7ba1ef04882e7d963cf86", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-default-method-bodies.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-default-method-bodies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-default-method-bodies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-default-method-bodies.rs?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -23,7 +23,7 @@ impl const ConstDefaultFn for ConstImpl {\n \n const fn test() {\n     NonConstImpl.a();\n-    //~^ ERROR calls in constant functions are limited to constant functions, tuple structs and tuple variants\n+    //~^ ERROR cannot call non-const fn\n     ConstImpl.a();\n }\n "}, {"sha": "853fa3d64781f21504c22d59662f5573f8b73997", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-default-method-bodies.stderr", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-default-method-bodies.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-default-method-bodies.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-default-method-bodies.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -1,8 +1,10 @@\n-error[E0015]: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n-  --> $DIR/const-default-method-bodies.rs:25:5\n+error[E0015]: cannot call non-const fn `<NonConstImpl as ConstDefaultFn>::a` in constant functions\n+  --> $DIR/const-default-method-bodies.rs:25:18\n    |\n LL |     NonConstImpl.a();\n-   |     ^^^^^^^^^^^^^^^^\n+   |                  ^^^\n+   |\n+   = note: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n \n error: aborting due to previous error\n "}, {"sha": "df960902133f304f8509f4f04839e76842555b9c", "filename": "src/test/ui/rfc-2632-const-trait-impl/cross-crate.gated.stderr", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcross-crate.gated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcross-crate.gated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcross-crate.gated.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -1,8 +1,10 @@\n-error[E0015]: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n-  --> $DIR/cross-crate.rs:15:5\n+error[E0015]: cannot call non-const fn `<cross_crate::NonConst as cross_crate::MyTrait>::func` in constant functions\n+  --> $DIR/cross-crate.rs:15:14\n    |\n LL |     NonConst.func();\n-   |     ^^^^^^^^^^^^^^^\n+   |              ^^^^^^\n+   |\n+   = note: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n \n error: aborting due to previous error\n "}, {"sha": "670d06b85f281c1090616806e31469e5daf3133c", "filename": "src/test/ui/rfc-2632-const-trait-impl/cross-crate.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcross-crate.rs?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -13,9 +13,9 @@ fn non_const_context() {\n \n const fn const_context() {\n     NonConst.func();\n-    //~^ ERROR: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n+    //~^ ERROR: cannot call non-const fn\n     Const.func();\n-    //[stock]~^ ERROR: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n+    //[stock]~^ ERROR: cannot call non-const fn\n }\n \n fn main() {}"}, {"sha": "ea75ad0aeaf8c2eba9b92532aa86fa856f9a9833", "filename": "src/test/ui/rfc-2632-const-trait-impl/cross-crate.stock.stderr", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcross-crate.stock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcross-crate.stock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcross-crate.stock.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -1,14 +1,18 @@\n-error[E0015]: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n-  --> $DIR/cross-crate.rs:15:5\n+error[E0015]: cannot call non-const fn `<cross_crate::NonConst as cross_crate::MyTrait>::func` in constant functions\n+  --> $DIR/cross-crate.rs:15:14\n    |\n LL |     NonConst.func();\n-   |     ^^^^^^^^^^^^^^^\n+   |              ^^^^^^\n+   |\n+   = note: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n \n-error[E0015]: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n-  --> $DIR/cross-crate.rs:17:5\n+error[E0015]: cannot call non-const fn `<cross_crate::Const as cross_crate::MyTrait>::func` in constant functions\n+  --> $DIR/cross-crate.rs:17:11\n    |\n LL |     Const.func();\n-   |     ^^^^^^^^^^^^\n+   |           ^^^^^^\n+   |\n+   = note: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n \n error: aborting due to 2 previous errors\n "}, {"sha": "e4fc65e3cb35328d6ce7083482a5b42d3b28404b", "filename": "src/test/ui/rfc-2632-const-trait-impl/issue-88155.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fissue-88155.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fissue-88155.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fissue-88155.rs?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -7,7 +7,7 @@ pub trait A {\n \n pub const fn foo<T: A>() -> bool {\n     T::assoc()\n-    //~^ ERROR calls in constant functions are limited\n+    //~^ ERROR cannot call non-const fn\n }\n \n fn main() {}"}, {"sha": "b94d655a9ffa2605bed548113ef40d5187600cfd", "filename": "src/test/ui/rfc-2632-const-trait-impl/issue-88155.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fissue-88155.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fissue-88155.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fissue-88155.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -1,8 +1,10 @@\n-error[E0015]: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const fn `<T as A>::assoc` in constant functions\n   --> $DIR/issue-88155.rs:9:5\n    |\n LL |     T::assoc()\n    |     ^^^^^^^^^^\n+   |\n+   = note: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n \n error: aborting due to previous error\n "}, {"sha": "2f54c09e31c9e023d5e31966b3f89f72762e8727", "filename": "src/test/ui/rfc-2632-const-trait-impl/std-impl-gate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fstd-impl-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fstd-impl-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fstd-impl-gate.rs?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -11,7 +11,7 @@ fn non_const_context() -> Vec<usize> {\n \n const fn const_context() -> Vec<usize> {\n     Default::default()\n-    //[stock]~^ ERROR calls in constant functions are limited\n+    //[stock]~^ ERROR cannot call non-const fn\n }\n \n fn main() {"}, {"sha": "0b450a9474282bc5502f9ec2333e585b089da1cd", "filename": "src/test/ui/rfc-2632-const-trait-impl/std-impl-gate.stock.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fstd-impl-gate.stock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fstd-impl-gate.stock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fstd-impl-gate.stock.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -1,8 +1,10 @@\n-error[E0015]: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const fn `<Vec<usize> as Default>::default` in constant functions\n   --> $DIR/std-impl-gate.rs:13:5\n    |\n LL |     Default::default()\n    |     ^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n \n error: aborting due to previous error\n "}, {"sha": "84fc638a973cb58a1b3582138e59e81addc3b7fc", "filename": "src/test/ui/static/static-vec-repeat-not-constant.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fstatic%2Fstatic-vec-repeat-not-constant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b5235ea732dcb517338eaf2e35fda8ddcf515771/src%2Ftest%2Fui%2Fstatic%2Fstatic-vec-repeat-not-constant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstatic%2Fstatic-vec-repeat-not-constant.stderr?ref=b5235ea732dcb517338eaf2e35fda8ddcf515771", "patch": "@@ -1,8 +1,10 @@\n-error[E0015]: calls in statics are limited to constant functions, tuple structs and tuple variants\n+error[E0015]: cannot call non-const fn `foo` in statics\n   --> $DIR/static-vec-repeat-not-constant.rs:3:25\n    |\n LL | static a: [isize; 2] = [foo(); 2];\n    |                         ^^^^^\n+   |\n+   = note: calls in statics are limited to constant functions, tuple structs and tuple variants\n \n error: aborting due to previous error\n "}]}