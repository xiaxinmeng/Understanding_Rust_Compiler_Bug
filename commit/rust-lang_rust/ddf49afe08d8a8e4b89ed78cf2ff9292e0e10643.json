{"sha": "ddf49afe08d8a8e4b89ed78cf2ff9292e0e10643", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkZjQ5YWZlMDhkOGE4ZTRiODllZDc4Y2YyZmY5MjkyZTBlMTA2NDM=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-09T05:05:07Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-09T05:05:07Z"}, "message": "Remove \"two's complement unsigned\" integer type descriptions from docs, nurr.", "tree": {"sha": "fd6f073ab8f6675275725ae59de5b9f1e536bd25", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd6f073ab8f6675275725ae59de5b9f1e536bd25"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ddf49afe08d8a8e4b89ed78cf2ff9292e0e10643", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ddf49afe08d8a8e4b89ed78cf2ff9292e0e10643", "html_url": "https://github.com/rust-lang/rust/commit/ddf49afe08d8a8e4b89ed78cf2ff9292e0e10643", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ddf49afe08d8a8e4b89ed78cf2ff9292e0e10643/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc4338e584bbfd8403a69cd15f91a1505663c810", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc4338e584bbfd8403a69cd15f91a1505663c810", "html_url": "https://github.com/rust-lang/rust/commit/fc4338e584bbfd8403a69cd15f91a1505663c810"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "eec63a72a118c7d762f1dd2ee8737ddcca4dc44a", "filename": "doc/rust.texi", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ddf49afe08d8a8e4b89ed78cf2ff9292e0e10643/doc%2Frust.texi", "raw_url": "https://github.com/rust-lang/rust/raw/ddf49afe08d8a8e4b89ed78cf2ff9292e0e10643/doc%2Frust.texi", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.texi?ref=ddf49afe08d8a8e4b89ed78cf2ff9292e0e10643", "patch": "@@ -1829,11 +1829,10 @@ type. @xref{Ref.Mem.Slot}. The interpretation of a value includes:\n @item Whether the value is mutable or immutable.\n @end itemize\n \n-For example, the type @code{rec(u8 x, u8 y)} defines the\n-interpretation of values that are composite records, each containing\n-two unsigned two's complement 8-bit integers accessed through the\n-components @code{x} and @code{y}, and laid out in memory with the\n-@code{x} component preceding the @code{y} component.\n+For example, the type @code{rec(u8 x, u8 y)} defines the interpretation of\n+values that are composite records, each containing two unsigned 8-bit\n+integers accessed through the components @code{x} and @code{y}, and laid\n+out in memory with the @code{x} component preceding the @code{y} component.\n \n Some types are @emph{recursive}. A recursive type is one that includes\n its own definition as a component, by named reference. Recursive types\n@@ -1903,8 +1902,8 @@ The machine types are the following:\n \n @itemize\n @item\n-The unsigned two's complement word types @code{u8}, @code{u16}, @code{u32} and\n-@code{u64}, with values drawn from the integer intervals\n+The unsigned word types @code{u8}, @code{u16}, @code{u32} and @code{u64},\n+with values drawn from the integer intervals\n @iftex\n @math{[0, 2^8 - 1]},\n @math{[0, 2^{16} - 1]},\n@@ -1951,7 +1950,7 @@ The IEEE 754 single-precision and double-precision floating-point types:\n \n \n The Rust type @code{uint}@footnote{A Rust @code{uint} is analogous to a C99\n-@code{uintptr_t}.} is a two's complement unsigned integer type with with\n+@code{uintptr_t}.} is an unsigned integer type with with\n target-machine-dependent size. Its size, in bits, is equal to the number of\n bits required to hold any memory address on the target machine.\n "}]}