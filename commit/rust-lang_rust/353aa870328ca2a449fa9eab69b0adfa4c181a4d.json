{"sha": "353aa870328ca2a449fa9eab69b0adfa4c181a4d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1M2FhODcwMzI4Y2EyYTQ0OWZhOWVhYjY5YjBhZGZhNGMxODFhNGQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-03-24T11:31:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-24T11:31:51Z"}, "message": "Merge #8184\n\n8184: refine comment style of tests r=Veykril a=hi-rustin\n\nFix the comment style issues, it's in tests but maybe it's a little better to change it to this.\n\nCo-authored-by: hi-rustin <rustin.liu@gmail.com>", "tree": {"sha": "38a85431077860e6db4999b962594b36521b65ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38a85431077860e6db4999b962594b36521b65ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/353aa870328ca2a449fa9eab69b0adfa4c181a4d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgWyMnCRBK7hj4Ov3rIwAAdHIIAGz8TZ5uAE2jbK0IVmPzhJQ8\nKTMaak5rLBq7HUK73MY6zZbFhqLjKiyzsOCPiX4ZJJWv6CcVtT3kRJdNB/zmNS8M\nb5K5JNhS3SLZaeAfb/mscz7eWKnMpZHN4wYu4AqBaApbDBA0QQaHGfO/5lm51xuT\nGv+jQEJ61+Ju+TLOYDMVIBUwPq6og+7Vr4KJBepSOtqQro5bwtPZSm6F3qKVw4mJ\nHj9JO7o1qJSO7U6mgjxmM4rwQgQZi6tL6lsVyBgnDXY0XFszCIGYmlWAX8JY8d6K\nADSZCI5SBedvOg9RR1abKtvRMF0kwd+pdFJ5GZSFJKsPDGd7Z1kzuSfV32VM6bY=\n=NQVn\n-----END PGP SIGNATURE-----\n", "payload": "tree 38a85431077860e6db4999b962594b36521b65ff\nparent 776b1ebcb40024db87c60138ce139e3968e75a88\nparent eef9bdb44125a27915db89c68ad19bb519d3dfe6\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1616585511 +0000\ncommitter GitHub <noreply@github.com> 1616585511 +0000\n\nMerge #8184\n\n8184: refine comment style of tests r=Veykril a=hi-rustin\n\nFix the comment style issues, it's in tests but maybe it's a little better to change it to this.\n\nCo-authored-by: hi-rustin <rustin.liu@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/353aa870328ca2a449fa9eab69b0adfa4c181a4d", "html_url": "https://github.com/rust-lang/rust/commit/353aa870328ca2a449fa9eab69b0adfa4c181a4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/353aa870328ca2a449fa9eab69b0adfa4c181a4d/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "776b1ebcb40024db87c60138ce139e3968e75a88", "url": "https://api.github.com/repos/rust-lang/rust/commits/776b1ebcb40024db87c60138ce139e3968e75a88", "html_url": "https://github.com/rust-lang/rust/commit/776b1ebcb40024db87c60138ce139e3968e75a88"}, {"sha": "eef9bdb44125a27915db89c68ad19bb519d3dfe6", "url": "https://api.github.com/repos/rust-lang/rust/commits/eef9bdb44125a27915db89c68ad19bb519d3dfe6", "html_url": "https://github.com/rust-lang/rust/commit/eef9bdb44125a27915db89c68ad19bb519d3dfe6"}], "stats": {"total": 96, "additions": 48, "deletions": 48}, "files": [{"sha": "c66f8c05d32ce4f97f1ccc4a5acb7382ce967cea", "filename": "crates/ide_assists/src/handlers/early_return.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/353aa870328ca2a449fa9eab69b0adfa4c181a4d/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fearly_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/353aa870328ca2a449fa9eab69b0adfa4c181a4d/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fearly_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fearly_return.rs?ref=353aa870328ca2a449fa9eab69b0adfa4c181a4d", "patch": "@@ -204,7 +204,7 @@ mod tests {\n                 if$0 true {\n                     foo();\n \n-                    //comment\n+                    // comment\n                     bar();\n                 }\n             }\n@@ -217,7 +217,7 @@ mod tests {\n                 }\n                 foo();\n \n-                //comment\n+                // comment\n                 bar();\n             }\n             \"#,\n@@ -234,7 +234,7 @@ mod tests {\n                 if$0 let Some(n) = n {\n                     foo(n);\n \n-                    //comment\n+                    // comment\n                     bar();\n                 }\n             }\n@@ -248,7 +248,7 @@ mod tests {\n                 };\n                 foo(n);\n \n-                //comment\n+                // comment\n                 bar();\n             }\n             \"#,\n@@ -288,7 +288,7 @@ mod tests {\n                 if$0 let Some(n) = n {\n                     foo(n);\n \n-                    //comment\n+                    // comment\n                     bar();\n                 }\n             }\n@@ -302,7 +302,7 @@ mod tests {\n                 };\n                 foo(n);\n \n-                //comment\n+                // comment\n                 bar();\n             }\n             \"#,\n@@ -319,7 +319,7 @@ mod tests {\n                 if$0 let Some(mut n) = n {\n                     foo(n);\n \n-                    //comment\n+                    // comment\n                     bar();\n                 }\n             }\n@@ -333,7 +333,7 @@ mod tests {\n                 };\n                 foo(n);\n \n-                //comment\n+                // comment\n                 bar();\n             }\n             \"#,\n@@ -350,7 +350,7 @@ mod tests {\n                 if$0 let Some(ref n) = n {\n                     foo(n);\n \n-                    //comment\n+                    // comment\n                     bar();\n                 }\n             }\n@@ -364,7 +364,7 @@ mod tests {\n                 };\n                 foo(n);\n \n-                //comment\n+                // comment\n                 bar();\n             }\n             \"#,"}, {"sha": "d3c3da0188bfda6c99647f49ca79ae8f3d0e4714", "filename": "crates/ide_assists/src/handlers/unwrap_block.rs", "status": "modified", "additions": 38, "deletions": 38, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/353aa870328ca2a449fa9eab69b0adfa4c181a4d/crates%2Fide_assists%2Fsrc%2Fhandlers%2Funwrap_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/353aa870328ca2a449fa9eab69b0adfa4c181a4d/crates%2Fide_assists%2Fsrc%2Fhandlers%2Funwrap_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Funwrap_block.rs?ref=353aa870328ca2a449fa9eab69b0adfa4c181a4d", "patch": "@@ -186,7 +186,7 @@ fn main() {\n     if true {$0\n         foo();\n \n-        //comment\n+        // comment\n         bar();\n     } else {\n         println!(\"bar\");\n@@ -198,7 +198,7 @@ fn main() {\n     bar();\n     foo();\n \n-    //comment\n+    // comment\n     bar();\n }\n \"#,\n@@ -215,7 +215,7 @@ fn main() {\n     if true {\n         foo();\n \n-        //comment\n+        // comment\n         bar();\n     } else {$0\n         println!(\"bar\");\n@@ -228,7 +228,7 @@ fn main() {\n     if true {\n         foo();\n \n-        //comment\n+        // comment\n         bar();\n     }\n     println!(\"bar\");\n@@ -243,12 +243,12 @@ fn main() {\n             unwrap_block,\n             r#\"\n fn main() {\n-    //bar();\n+    // bar();\n     if true {\n         println!(\"true\");\n \n-        //comment\n-        //bar();\n+        // comment\n+        // bar();\n     } else if false {$0\n         println!(\"bar\");\n     } else {\n@@ -258,12 +258,12 @@ fn main() {\n \"#,\n             r#\"\n fn main() {\n-    //bar();\n+    // bar();\n     if true {\n         println!(\"true\");\n \n-        //comment\n-        //bar();\n+        // comment\n+        // bar();\n     }\n     println!(\"bar\");\n }\n@@ -277,12 +277,12 @@ fn main() {\n             unwrap_block,\n             r#\"\n fn main() {\n-    //bar();\n+    // bar();\n     if true {\n         println!(\"true\");\n \n-        //comment\n-        //bar();\n+        // comment\n+        // bar();\n     } else if false {\n         println!(\"bar\");\n     } else if true {$0\n@@ -292,12 +292,12 @@ fn main() {\n \"#,\n             r#\"\n fn main() {\n-    //bar();\n+    // bar();\n     if true {\n         println!(\"true\");\n \n-        //comment\n-        //bar();\n+        // comment\n+        // bar();\n     } else if false {\n         println!(\"bar\");\n     }\n@@ -313,12 +313,12 @@ fn main() {\n             unwrap_block,\n             r#\"\n fn main() {\n-    //bar();\n+    // bar();\n     if true {\n         println!(\"true\");\n \n-        //comment\n-        //bar();\n+        // comment\n+        // bar();\n     } else if false {\n         println!(\"bar\");\n     } else if true {\n@@ -330,12 +330,12 @@ fn main() {\n \"#,\n             r#\"\n fn main() {\n-    //bar();\n+    // bar();\n     if true {\n         println!(\"true\");\n \n-        //comment\n-        //bar();\n+        // comment\n+        // bar();\n     } else if false {\n         println!(\"bar\");\n     } else if true {\n@@ -353,12 +353,12 @@ fn main() {\n             unwrap_block,\n             r#\"\n fn main() {\n-    //bar();\n+    // bar();\n     if true {\n         println!(\"true\");\n \n-        //comment\n-        //bar();\n+        // comment\n+        // bar();\n     } else if false {\n         println!(\"bar\");\n     } else if true {$0\n@@ -370,12 +370,12 @@ fn main() {\n \"#,\n             r#\"\n fn main() {\n-    //bar();\n+    // bar();\n     if true {\n         println!(\"true\");\n \n-        //comment\n-        //bar();\n+        // comment\n+        // bar();\n     } else if false {\n         println!(\"bar\");\n     }\n@@ -395,7 +395,7 @@ fn main() {\n     if true {\n         foo();\n \n-        //comment\n+        // comment\n         bar();\n     } else {\n         println!(\"bar\");\n@@ -415,7 +415,7 @@ fn main() {\n         if true {\n             foo();\n \n-            //comment\n+            // comment\n             bar();\n         } else {\n             println!(\"bar\");\n@@ -428,7 +428,7 @@ fn main() {\n     if true {\n         foo();\n \n-        //comment\n+        // comment\n         bar();\n     } else {\n         println!(\"bar\");\n@@ -448,7 +448,7 @@ fn main() {\n         if true {$0\n             foo();\n \n-            //comment\n+            // comment\n             bar();\n         } else {\n             println!(\"bar\");\n@@ -461,7 +461,7 @@ fn main() {\n     for i in 0..5 {\n         foo();\n \n-        //comment\n+        // comment\n         bar();\n     }\n }\n@@ -479,7 +479,7 @@ fn main() {\n         if true {\n             foo();\n \n-            //comment\n+            // comment\n             bar();\n         } else {\n             println!(\"bar\");\n@@ -492,7 +492,7 @@ fn main() {\n     if true {\n         foo();\n \n-        //comment\n+        // comment\n         bar();\n     } else {\n         println!(\"bar\");\n@@ -512,7 +512,7 @@ fn main() {\n         if true {\n             foo();\n \n-            //comment\n+            // comment\n             bar();\n         } else {\n             println!(\"bar\");\n@@ -525,7 +525,7 @@ fn main() {\n     if true {\n         foo();\n \n-        //comment\n+        // comment\n         bar();\n     } else {\n         println!(\"bar\");\n@@ -569,7 +569,7 @@ fn main() {\n         if true {\n             foo();$0\n \n-            //comment\n+            // comment\n             bar();\n         } else {\n             println!(\"bar\");"}]}