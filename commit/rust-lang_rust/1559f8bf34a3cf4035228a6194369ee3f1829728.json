{"sha": "1559f8bf34a3cf4035228a6194369ee3f1829728", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1NTlmOGJmMzRhM2NmNDAzNTIyOGE2MTk0MzY5ZWUzZjE4Mjk3Mjg=", "commit": {"author": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2019-12-18T19:54:37Z"}, "committer": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2019-12-19T04:57:56Z"}, "message": "Fix `expect_fun_call` false negative on references\n\nCloses #4912", "tree": {"sha": "5c189fbd1c7c063bbd5f1f4e88a46631b513ef7a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c189fbd1c7c063bbd5f1f4e88a46631b513ef7a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1559f8bf34a3cf4035228a6194369ee3f1829728", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1559f8bf34a3cf4035228a6194369ee3f1829728", "html_url": "https://github.com/rust-lang/rust/commit/1559f8bf34a3cf4035228a6194369ee3f1829728", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1559f8bf34a3cf4035228a6194369ee3f1829728/comments", "author": null, "committer": null, "parents": [{"sha": "c62396dbf442839fc725d353ef85306da1667caf", "url": "https://api.github.com/repos/rust-lang/rust/commits/c62396dbf442839fc725d353ef85306da1667caf", "html_url": "https://github.com/rust-lang/rust/commit/c62396dbf442839fc725d353ef85306da1667caf"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "8c4f8c56c766d1397c8f1a9db8c0c5b84ad92f5b", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1559f8bf34a3cf4035228a6194369ee3f1829728/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1559f8bf34a3cf4035228a6194369ee3f1829728/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=1559f8bf34a3cf4035228a6194369ee3f1829728", "patch": "@@ -1595,7 +1595,7 @@ fn lint_expect_fun_call(cx: &LateContext<'_, '_>, expr: &hir::Expr, method_span:\n         return;\n     }\n \n-    let receiver_type = cx.tables.expr_ty(&args[0]);\n+    let receiver_type = cx.tables.expr_ty_adjusted(&args[0]);\n     let closure_args = if match_type(cx, receiver_type, &paths::OPTION) {\n         \"||\"\n     } else if match_type(cx, receiver_type, &paths::RESULT) {"}, {"sha": "f3d8a941a92bc1171cd7545818ce604bc394b48d", "filename": "tests/ui/expect_fun_call.fixed", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1559f8bf34a3cf4035228a6194369ee3f1829728/tests%2Fui%2Fexpect_fun_call.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/1559f8bf34a3cf4035228a6194369ee3f1829728/tests%2Fui%2Fexpect_fun_call.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexpect_fun_call.fixed?ref=1559f8bf34a3cf4035228a6194369ee3f1829728", "patch": "@@ -84,4 +84,11 @@ fn main() {\n \n     //Issue #3839\n     Some(true).unwrap_or_else(|| panic!(\"key {}, {}\", 1, 2));\n+\n+    //Issue #4912 - the receiver is a &Option\n+    {\n+        let opt = Some(1);\n+        let opt_ref = &opt;\n+        opt_ref.unwrap_or_else(|| panic!(\"{:?}\", opt_ref));\n+    }\n }"}, {"sha": "60bbaa89d42825819edae4191b6d3a3cccaa35fe", "filename": "tests/ui/expect_fun_call.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1559f8bf34a3cf4035228a6194369ee3f1829728/tests%2Fui%2Fexpect_fun_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1559f8bf34a3cf4035228a6194369ee3f1829728/tests%2Fui%2Fexpect_fun_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexpect_fun_call.rs?ref=1559f8bf34a3cf4035228a6194369ee3f1829728", "patch": "@@ -84,4 +84,11 @@ fn main() {\n \n     //Issue #3839\n     Some(true).expect(&format!(\"key {}, {}\", 1, 2));\n+\n+    //Issue #4912 - the receiver is a &Option\n+    {\n+        let opt = Some(1);\n+        let opt_ref = &opt;\n+        opt_ref.expect(&format!(\"{:?}\", opt_ref));\n+    }\n }"}, {"sha": "a492e2df89d47809d96edacb664f3310e8ccad37", "filename": "tests/ui/expect_fun_call.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1559f8bf34a3cf4035228a6194369ee3f1829728/tests%2Fui%2Fexpect_fun_call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1559f8bf34a3cf4035228a6194369ee3f1829728/tests%2Fui%2Fexpect_fun_call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexpect_fun_call.stderr?ref=1559f8bf34a3cf4035228a6194369ee3f1829728", "patch": "@@ -66,5 +66,11 @@ error: use of `expect` followed by a function call\n LL |     Some(true).expect(&format!(\"key {}, {}\", 1, 2));\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| panic!(\"key {}, {}\", 1, 2))`\n \n-error: aborting due to 11 previous errors\n+error: use of `expect` followed by a function call\n+  --> $DIR/expect_fun_call.rs:92:17\n+   |\n+LL |         opt_ref.expect(&format!(\"{:?}\", opt_ref));\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| panic!(\"{:?}\", opt_ref))`\n+\n+error: aborting due to 12 previous errors\n "}]}