{"sha": "c3f59295fecb9a7cb067bc4a5b50f779e159a55b", "node_id": "C_kwDOAAsO6NoAKGMzZjU5Mjk1ZmVjYjlhN2NiMDY3YmM0YTViNTBmNzc5ZTE1OWE1NWI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-15T02:58:21Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-15T02:58:21Z"}, "message": "Auto merge of #101830 - nnethercote:streamline-register_res, r=jyn514\n\nStreamline `register_res`.\n\nTurns out it's only ever passed a `Res::Def`.\n\nr? `@jyn514`", "tree": {"sha": "bc845f26382216050a94d93722977212c00e0f88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc845f26382216050a94d93722977212c00e0f88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3f59295fecb9a7cb067bc4a5b50f779e159a55b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3f59295fecb9a7cb067bc4a5b50f779e159a55b", "html_url": "https://github.com/rust-lang/rust/commit/c3f59295fecb9a7cb067bc4a5b50f779e159a55b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3f59295fecb9a7cb067bc4a5b50f779e159a55b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2cb9a65684dba47c52de8fa938febf97a73e70a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/2cb9a65684dba47c52de8fa938febf97a73e70a9", "html_url": "https://github.com/rust-lang/rust/commit/2cb9a65684dba47c52de8fa938febf97a73e70a9"}, {"sha": "0965a337794738a7af188be480e17601933494f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/0965a337794738a7af188be480e17601933494f8", "html_url": "https://github.com/rust-lang/rust/commit/0965a337794738a7af188be480e17601933494f8"}], "stats": {"total": 26, "additions": 5, "deletions": 21}, "files": [{"sha": "135c0fe79100af92983fa72f1dfa7ee5980f2288", "filename": "src/librustdoc/clean/utils.rs", "status": "modified", "additions": 5, "deletions": 21, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/c3f59295fecb9a7cb067bc4a5b50f779e159a55b/src%2Flibrustdoc%2Fclean%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3f59295fecb9a7cb067bc4a5b50f779e159a55b/src%2Flibrustdoc%2Fclean%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Futils.rs?ref=c3f59295fecb9a7cb067bc4a5b50f779e159a55b", "patch": "@@ -491,30 +491,14 @@ pub(crate) fn register_res(cx: &mut DocContext<'_>, res: Res) -> DefId {\n     use DefKind::*;\n     debug!(\"register_res({:?})\", res);\n \n-    let (did, kind) = match res {\n-        // These should be added to the cache using `record_extern_fqn`.\n+    let (kind, did) = match res {\n         Res::Def(\n             kind @ (AssocTy | AssocFn | AssocConst | Variant | Fn | TyAlias | Enum | Trait | Struct\n             | Union | Mod | ForeignTy | Const | Static(_) | Macro(..) | TraitAlias),\n-            i,\n-        ) => (i, kind.into()),\n-        // This is part of a trait definition or trait impl; document the trait.\n-        Res::SelfTy { trait_: Some(trait_def_id), alias_to: _ } => (trait_def_id, ItemType::Trait),\n-        // This is an inherent impl or a type definition; it doesn't have its own page.\n-        Res::SelfTy { trait_: None, alias_to: Some((item_def_id, _)) } => return item_def_id,\n-        Res::SelfTy { trait_: None, alias_to: None }\n-        | Res::PrimTy(_)\n-        | Res::ToolMod\n-        | Res::SelfCtor(_)\n-        | Res::Local(_)\n-        | Res::NonMacroAttr(_)\n-        | Res::Err => return res.def_id(),\n-        Res::Def(\n-            TyParam | ConstParam | Ctor(..) | ExternCrate | Use | ForeignMod | AnonConst\n-            | InlineConst | OpaqueTy | ImplTraitPlaceholder | Field | LifetimeParam | GlobalAsm\n-            | Impl | Closure | Generator,\n-            id,\n-        ) => return id,\n+            did,\n+        ) => (kind.into(), did),\n+\n+        _ => panic!(\"register_res: unexpected {:?}\", res),\n     };\n     if did.is_local() {\n         return did;"}]}