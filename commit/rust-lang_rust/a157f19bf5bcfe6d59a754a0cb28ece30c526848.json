{"sha": "a157f19bf5bcfe6d59a754a0cb28ece30c526848", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExNTdmMTliZjViY2ZlNmQ1OWE3NTRhMGNiMjhlY2UzMGM1MjY4NDg=", "commit": {"author": {"name": "vlad20012", "email": "beskvlad@gmail.com", "date": "2021-03-01T13:31:03Z"}, "committer": {"name": "vlad20012", "email": "beskvlad@gmail.com", "date": "2021-03-01T16:55:30Z"}, "message": "Fix proc macro TokenStream::from_str token ids", "tree": {"sha": "5b41337f1aff8f6413f5bc2f06cdc35b46cb75bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b41337f1aff8f6413f5bc2f06cdc35b46cb75bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a157f19bf5bcfe6d59a754a0cb28ece30c526848", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERcui/VYSaOw9QCPjWOYu0xqLOZkFAmA9HIIACgkQWOYu0xqL\nOZlcRA/9GicT07jdLB8i3eGTTHtzsvcyxjJndIsbCBX61zIDQ5eb1nKAv8Rlmgz+\nk6KciO/7k0gb4A+iD/7KcTvhGXBlbCqbk930oLfGo+eQ9raoqc3AZI1OjLEyrDDp\n+P+G4mH6Fzu+70IEnV+iThmV96ChwDl15KLhueiMlQUfdjousV1Pqc4vdVsfK8st\nWXbFk6hhiGMKCE6hPUXZIXk1n1MOcS5k9QW9XFP6mQKefFl6qsvLxakxtxfW7k1Y\nBYi228tae8XjEYSLEX24H28Dg5RhB2q9auXwpyBQpBqcWIMlrzNYxJB8ic6cHeFr\nWC1saiSjCg1Xcz1O8EeBB8zT6BPRix3sasogmCAysWgSLU6055gDCsKFll9yEdEI\nceQLErP8HIdT76DzLStJQLHmRWVGD/R9JI8OtuBe6EeNDBti0tGYSkqYs5ar12S1\nZ/dY6QIm6auRK+M25xNeqGiPNT9/bH8w5+lmMy04hKL2GBEWpzrC7PTKdekOagB/\nvtoYozxb6kHjOCQxJ2PMaaZt+3+ad168hKJ22fOJUbDw+5lqDACS57NSf+Gowndv\n3sov/XY6wozbHJNktz0VEu5GDBcekczcnEJwqUxYmA4Zih2avVRIC0Ieq4zwXQD5\n+EQodrJfXC9z8P610leDiDhvx3MqumphIiSmjYHYRFYEzMuV94w=\n=smgy\n-----END PGP SIGNATURE-----", "payload": "tree 5b41337f1aff8f6413f5bc2f06cdc35b46cb75bd\nparent cda13d54613006c7985da0489878605300ba05b8\nauthor vlad20012 <beskvlad@gmail.com> 1614605463 +0300\ncommitter vlad20012 <beskvlad@gmail.com> 1614617730 +0300\n\nFix proc macro TokenStream::from_str token ids\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a157f19bf5bcfe6d59a754a0cb28ece30c526848", "html_url": "https://github.com/rust-lang/rust/commit/a157f19bf5bcfe6d59a754a0cb28ece30c526848", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a157f19bf5bcfe6d59a754a0cb28ece30c526848/comments", "author": {"login": "vlad20012", "id": 3221931, "node_id": "MDQ6VXNlcjMyMjE5MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3221931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vlad20012", "html_url": "https://github.com/vlad20012", "followers_url": "https://api.github.com/users/vlad20012/followers", "following_url": "https://api.github.com/users/vlad20012/following{/other_user}", "gists_url": "https://api.github.com/users/vlad20012/gists{/gist_id}", "starred_url": "https://api.github.com/users/vlad20012/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vlad20012/subscriptions", "organizations_url": "https://api.github.com/users/vlad20012/orgs", "repos_url": "https://api.github.com/users/vlad20012/repos", "events_url": "https://api.github.com/users/vlad20012/events{/privacy}", "received_events_url": "https://api.github.com/users/vlad20012/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vlad20012", "id": 3221931, "node_id": "MDQ6VXNlcjMyMjE5MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3221931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vlad20012", "html_url": "https://github.com/vlad20012", "followers_url": "https://api.github.com/users/vlad20012/followers", "following_url": "https://api.github.com/users/vlad20012/following{/other_user}", "gists_url": "https://api.github.com/users/vlad20012/gists{/gist_id}", "starred_url": "https://api.github.com/users/vlad20012/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vlad20012/subscriptions", "organizations_url": "https://api.github.com/users/vlad20012/orgs", "repos_url": "https://api.github.com/users/vlad20012/repos", "events_url": "https://api.github.com/users/vlad20012/events{/privacy}", "received_events_url": "https://api.github.com/users/vlad20012/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cda13d54613006c7985da0489878605300ba05b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/cda13d54613006c7985da0489878605300ba05b8", "html_url": "https://github.com/rust-lang/rust/commit/cda13d54613006c7985da0489878605300ba05b8"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "952b4a97fbb22728d301b80eda19634828c9d64d", "filename": "crates/proc_macro_srv/src/rustc_server.rs", "status": "modified", "additions": 38, "deletions": 2, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/a157f19bf5bcfe6d59a754a0cb28ece30c526848/crates%2Fproc_macro_srv%2Fsrc%2Frustc_server.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a157f19bf5bcfe6d59a754a0cb28ece30c526848/crates%2Fproc_macro_srv%2Fsrc%2Frustc_server.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_srv%2Fsrc%2Frustc_server.rs?ref=a157f19bf5bcfe6d59a754a0cb28ece30c526848", "patch": "@@ -14,7 +14,6 @@ use std::collections::HashMap;\n use std::hash::Hash;\n use std::iter::FromIterator;\n use std::ops::Bound;\n-use std::str::FromStr;\n use std::{ascii, vec::IntoIter};\n \n type Group = tt::Subtree;\n@@ -278,6 +277,42 @@ impl server::FreeFunctions for Rustc {\n     }\n }\n \n+fn subtree_replace_token_ids_with_unspecified(subtree: tt::Subtree) -> tt::Subtree {\n+    tt::Subtree {\n+        delimiter: subtree.delimiter.map(|d| tt::Delimiter { id: tt::TokenId::unspecified(), ..d }),\n+        token_trees: subtree\n+            .token_trees\n+            .into_iter()\n+            .map(|t| token_tree_replace_token_ids_with_unspecified(t))\n+            .collect(),\n+    }\n+}\n+\n+fn token_tree_replace_token_ids_with_unspecified(tt: tt::TokenTree) -> tt::TokenTree {\n+    match tt {\n+        tt::TokenTree::Leaf(leaf) => {\n+            tt::TokenTree::Leaf(leaf_replace_token_ids_with_unspecified(leaf))\n+        }\n+        tt::TokenTree::Subtree(subtree) => {\n+            tt::TokenTree::Subtree(subtree_replace_token_ids_with_unspecified(subtree))\n+        }\n+    }\n+}\n+\n+fn leaf_replace_token_ids_with_unspecified(leaf: tt::Leaf) -> tt::Leaf {\n+    match leaf {\n+        tt::Leaf::Literal(lit) => {\n+            tt::Leaf::Literal(tt::Literal { id: tt::TokenId::unspecified(), ..lit })\n+        }\n+        tt::Leaf::Punct(punct) => {\n+            tt::Leaf::Punct(tt::Punct { id: tt::TokenId::unspecified(), ..punct })\n+        }\n+        tt::Leaf::Ident(ident) => {\n+            tt::Leaf::Ident(tt::Ident { id: tt::TokenId::unspecified(), ..ident })\n+        }\n+    }\n+}\n+\n impl server::TokenStream for Rustc {\n     fn new(&mut self) -> Self::TokenStream {\n         Self::TokenStream::new()\n@@ -287,7 +322,8 @@ impl server::TokenStream for Rustc {\n         stream.is_empty()\n     }\n     fn from_str(&mut self, src: &str) -> Self::TokenStream {\n-        Self::TokenStream::from_str(src).expect(\"cannot parse string\")\n+        let (subtree, _) = mbe::parse_to_token_tree(src).expect(\"cannot parse string\");\n+        TokenStream::with_subtree(subtree_replace_token_ids_with_unspecified(subtree))\n     }\n     fn to_string(&mut self, stream: &Self::TokenStream) -> String {\n         stream.to_string()"}]}