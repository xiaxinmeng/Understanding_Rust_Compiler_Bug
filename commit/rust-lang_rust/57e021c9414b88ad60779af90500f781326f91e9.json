{"sha": "57e021c9414b88ad60779af90500f781326f91e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3ZTAyMWM5NDE0Yjg4YWQ2MDc3OWFmOTA1MDBmNzgxMzI2ZjkxZTk=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-07-14T17:53:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-14T17:53:36Z"}, "message": "Rollup merge of #87056 - GuillaumeGomez:fix-codeblocks-overflow, r=notriddle\n\nFix codeblocks overflow\n\nFixes #87043.\n\nInstead of completely relying on `pulldown-cmark` (and its potential changes), I decided to move the generation of codeblocks HTML directly in rustdoc so we can unify the DOM and the CSS classes.\n\nr? `@Nemo157`", "tree": {"sha": "0f483dc76e77095d03448a9595c5d71a25352f89", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f483dc76e77095d03448a9595c5d71a25352f89"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57e021c9414b88ad60779af90500f781326f91e9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg7yShCRBK7hj4Ov3rIwAAfqEIAK/DBTtDd6CnFUeIRpu4xShy\nUVTnDJnnZ5wqBXslqDDfxNw/6iN0MuF45/3uPwnK0+ejgog9tNWmcZz0jItQ4df5\nhihe5UyAUJm3ZYMa8N4ZZWvrCsGprri+bo77SRZGaxDUIS3SKzeqx64Lxu4obC8s\nuhYBqvy5RamGyxDboKUOO0012UPb0T2PhwE2mFrJKX4GsL/uikw5zF+QGymU8A/i\nknOSovQGHo7ukEPYOimgU/G6Ye8cFOIQLgwYN7oDe0pSqROeysc8m464kb3L9DZT\nDwtafOltniAmhlS3s/6z46coBlzjbxGDalxqV0jPQ2gY+bCsRdAU81hrYAiPNTs=\n=W+z7\n-----END PGP SIGNATURE-----\n", "payload": "tree 0f483dc76e77095d03448a9595c5d71a25352f89\nparent 4d141f5e4c5e09408345cb8fa74f4c2f30cddd5d\nparent 7593bfe1aa630964a2374b0975ff61719b426696\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1626285216 +0200\ncommitter GitHub <noreply@github.com> 1626285216 +0200\n\nRollup merge of #87056 - GuillaumeGomez:fix-codeblocks-overflow, r=notriddle\n\nFix codeblocks overflow\n\nFixes #87043.\n\nInstead of completely relying on `pulldown-cmark` (and its potential changes), I decided to move the generation of codeblocks HTML directly in rustdoc so we can unify the DOM and the CSS classes.\n\nr? `@Nemo157`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57e021c9414b88ad60779af90500f781326f91e9", "html_url": "https://github.com/rust-lang/rust/commit/57e021c9414b88ad60779af90500f781326f91e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57e021c9414b88ad60779af90500f781326f91e9/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d141f5e4c5e09408345cb8fa74f4c2f30cddd5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d141f5e4c5e09408345cb8fa74f4c2f30cddd5d", "html_url": "https://github.com/rust-lang/rust/commit/4d141f5e4c5e09408345cb8fa74f4c2f30cddd5d"}, {"sha": "7593bfe1aa630964a2374b0975ff61719b426696", "url": "https://api.github.com/repos/rust-lang/rust/commits/7593bfe1aa630964a2374b0975ff61719b426696", "html_url": "https://github.com/rust-lang/rust/commit/7593bfe1aa630964a2374b0975ff61719b426696"}], "stats": {"total": 75, "additions": 56, "deletions": 19}, "files": [{"sha": "3b599e4997a4bbb0c7d16c6d9f7cdb1f61590f32", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 33, "deletions": 18, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/57e021c9414b88ad60779af90500f781326f91e9/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57e021c9414b88ad60779af90500f781326f91e9/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=57e021c9414b88ad60779af90500f781326f91e9", "patch": "@@ -33,6 +33,7 @@ use std::str;\n \n use crate::clean::RenderedLink;\n use crate::doctest;\n+use crate::html::escape::Escape;\n use crate::html::highlight;\n use crate::html::toc::TocBuilder;\n \n@@ -207,26 +208,11 @@ impl<'a, I: Iterator<Item = Event<'a>>> Iterator for CodeBlocks<'_, 'a, I> {\n         let should_panic;\n         let ignore;\n         let edition;\n-        if let Some(Event::Start(Tag::CodeBlock(kind))) = event {\n-            let parse_result = match kind {\n-                CodeBlockKind::Fenced(ref lang) => {\n-                    LangString::parse_without_check(&lang, self.check_error_codes, false)\n-                }\n-                CodeBlockKind::Indented => Default::default(),\n-            };\n-            if !parse_result.rust {\n-                return Some(Event::Start(Tag::CodeBlock(kind)));\n-            }\n-            compile_fail = parse_result.compile_fail;\n-            should_panic = parse_result.should_panic;\n-            ignore = parse_result.ignore;\n-            edition = parse_result.edition;\n+        let kind = if let Some(Event::Start(Tag::CodeBlock(kind))) = event {\n+            kind\n         } else {\n             return event;\n-        }\n-\n-        let explicit_edition = edition.is_some();\n-        let edition = edition.unwrap_or(self.edition);\n+        };\n \n         let mut origtext = String::new();\n         for event in &mut self.inner {\n@@ -241,6 +227,35 @@ impl<'a, I: Iterator<Item = Event<'a>>> Iterator for CodeBlocks<'_, 'a, I> {\n         let lines = origtext.lines().filter_map(|l| map_line(l).for_html());\n         let text = lines.collect::<Vec<Cow<'_, str>>>().join(\"\\n\");\n \n+        let parse_result = match kind {\n+            CodeBlockKind::Fenced(ref lang) => {\n+                let parse_result =\n+                    LangString::parse_without_check(&lang, self.check_error_codes, false);\n+                if !parse_result.rust {\n+                    return Some(Event::Html(\n+                        format!(\n+                            \"<div class=\\\"example-wrap\\\">\\\n+                                 <pre{}>{}</pre>\\\n+                             </div>\",\n+                            format!(\" class=\\\"language-{}\\\"\", lang),\n+                            Escape(&text),\n+                        )\n+                        .into(),\n+                    ));\n+                }\n+                parse_result\n+            }\n+            CodeBlockKind::Indented => Default::default(),\n+        };\n+\n+        compile_fail = parse_result.compile_fail;\n+        should_panic = parse_result.should_panic;\n+        ignore = parse_result.ignore;\n+        edition = parse_result.edition;\n+\n+        let explicit_edition = edition.is_some();\n+        let edition = edition.unwrap_or(self.edition);\n+\n         let playground_button = self.playground.as_ref().and_then(|playground| {\n             let krate = &playground.crate_name;\n             let url = &playground.url;"}, {"sha": "208e8f723f40720a4b0ef4f2bfb28fe1142a5766", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57e021c9414b88ad60779af90500f781326f91e9/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/57e021c9414b88ad60779af90500f781326f91e9/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=57e021c9414b88ad60779af90500f781326f91e9", "patch": "@@ -435,7 +435,7 @@ nav.sub {\n \tborder-bottom-left-radius: 5px;\n }\n \n-.rustdoc:not(.source) .example-wrap > pre.rust {\n+.rustdoc:not(.source) .example-wrap > pre:not(.line-number) {\n \twidth: 100%;\n \toverflow-x: auto;\n }"}, {"sha": "ee4dad444e93219861026e24eb4ed7cabd970b44", "filename": "src/test/rustdoc-gui/code-blocks-overflow.goml", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/57e021c9414b88ad60779af90500f781326f91e9/src%2Ftest%2Frustdoc-gui%2Fcode-blocks-overflow.goml", "raw_url": "https://github.com/rust-lang/rust/raw/57e021c9414b88ad60779af90500f781326f91e9/src%2Ftest%2Frustdoc-gui%2Fcode-blocks-overflow.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fcode-blocks-overflow.goml?ref=57e021c9414b88ad60779af90500f781326f91e9", "patch": "@@ -0,0 +1,8 @@\n+// This test ensures that codeblocks content don't overflow.\n+goto: file://|DOC_PATH|/lib2/sub_mod/struct.Foo.html\n+size: (1080, 600)\n+// There should be two codeblocks: a rust one and a non-rust one.\n+assert-count: (\".docblock > .example-wrap\", 2)\n+assert: \".docblock > .example-wrap > .language-txt\"\n+assert: \".docblock > .example-wrap > .rust-example-rendered\"\n+assert-css: (\".docblock > .example-wrap > pre\", {\"width\": \"796px\", \"overflow-x\": \"auto\"}, ALL)"}, {"sha": "ec8ab339e2804ebc9a208c3c2c99005cd71c0a1b", "filename": "src/test/rustdoc-gui/src/lib2/lib.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/57e021c9414b88ad60779af90500f781326f91e9/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flib2%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57e021c9414b88ad60779af90500f781326f91e9/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flib2%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flib2%2Flib.rs?ref=57e021c9414b88ad60779af90500f781326f91e9", "patch": "@@ -1,3 +1,5 @@\n+// ignore-tidy-linelength\n+\n pub mod module {\n     pub mod sub_module {\n         pub mod sub_sub_module {\n@@ -32,4 +34,16 @@ impl Trait for Foo {\n     const Y: u32 = 0;\n }\n \n+\n impl implementors::Whatever for Foo {}\n+\n+pub mod sub_mod {\n+    /// ```txt\n+    /// aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n+    /// ```\n+    ///\n+    /// ```\n+    /// aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n+    /// ```\n+    pub struct Foo;\n+}"}]}