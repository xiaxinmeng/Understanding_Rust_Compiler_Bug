{"sha": "9379bcdd0b4ef06303e8c4e3e7c3fd79882372cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzNzliY2RkMGI0ZWYwNjMwM2U4YzRlM2U3YzNmZDc5ODgyMzcyY2M=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-04-17T16:51:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-04-17T16:51:55Z"}, "message": "Auto merge of #50033 - GuillaumeGomez:rollup, r=GuillaumeGomez\n\nRollup of 4 pull requests\n\nSuccessful merges:\n\n - #49699 (Removed 'proc' from the reserved keywords list)\n - #49966 (Multiple query search)\n - #50013 (Remove no longer necessary comparison to Vec::splice.)\n - #50032 (rustdoc: Don't include private paths in all.html)\n\nFailed merges:", "tree": {"sha": "5877bf1dd379fc86c6cceee692cc54a941800347", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5877bf1dd379fc86c6cceee692cc54a941800347"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9379bcdd0b4ef06303e8c4e3e7c3fd79882372cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9379bcdd0b4ef06303e8c4e3e7c3fd79882372cc", "html_url": "https://github.com/rust-lang/rust/commit/9379bcdd0b4ef06303e8c4e3e7c3fd79882372cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9379bcdd0b4ef06303e8c4e3e7c3fd79882372cc/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "881a7cd86ef1001bdfa9590878ca24e57794302f", "url": "https://api.github.com/repos/rust-lang/rust/commits/881a7cd86ef1001bdfa9590878ca24e57794302f", "html_url": "https://github.com/rust-lang/rust/commit/881a7cd86ef1001bdfa9590878ca24e57794302f"}, {"sha": "92d29c1267cffd65e80648ea463221f765236ebb", "url": "https://api.github.com/repos/rust-lang/rust/commits/92d29c1267cffd65e80648ea463221f765236ebb", "html_url": "https://github.com/rust-lang/rust/commit/92d29c1267cffd65e80648ea463221f765236ebb"}], "stats": {"total": 375, "additions": 217, "deletions": 158}, "files": [{"sha": "2f84d5f7f8676877328dc57aa79155374886f6e6", "filename": "src/liballoc/string.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9379bcdd0b4ef06303e8c4e3e7c3fd79882372cc/src%2Fliballoc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9379bcdd0b4ef06303e8c4e3e7c3fd79882372cc/src%2Fliballoc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstring.rs?ref=9379bcdd0b4ef06303e8c4e3e7c3fd79882372cc", "patch": "@@ -1521,9 +1521,6 @@ impl String {\n     /// and replaces it with the given string.\n     /// The given string doesn't need to be the same length as the range.\n     ///\n-    /// Note: Unlike [`Vec::splice`], the replacement happens eagerly, and this\n-    /// method does not return the removed chars.\n-    ///\n     /// # Panics\n     ///\n     /// Panics if the starting point or end point do not lie on a [`char`]"}, {"sha": "583c9f2b671441f0602e83887071add233727089", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 110, "deletions": 122, "changes": 232, "blob_url": "https://github.com/rust-lang/rust/blob/9379bcdd0b4ef06303e8c4e3e7c3fd79882372cc/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9379bcdd0b4ef06303e8c4e3e7c3fd79882372cc/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=9379bcdd0b4ef06303e8c4e3e7c3fd79882372cc", "patch": "@@ -37,128 +37,116 @@ pub fn render<T: fmt::Display, S: fmt::Display>(\n     -> io::Result<()>\n {\n     write!(dst,\n-r##\"<!DOCTYPE html>\n-<html lang=\"en\">\n-<head>\n-    <meta charset=\"utf-8\">\n-    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n-    <meta name=\"generator\" content=\"rustdoc\">\n-    <meta name=\"description\" content=\"{description}\">\n-    <meta name=\"keywords\" content=\"{keywords}\">\n-\n-    <title>{title}</title>\n-\n-    <link rel=\"stylesheet\" type=\"text/css\" href=\"{root_path}normalize{suffix}.css\">\n-    <link rel=\"stylesheet\" type=\"text/css\" href=\"{root_path}rustdoc{suffix}.css\"\n-          id=\"mainThemeStyle\">\n-    {themes}\n-    <link rel=\"stylesheet\" type=\"text/css\" href=\"{root_path}dark{suffix}.css\">\n-    <link rel=\"stylesheet\" type=\"text/css\" href=\"{root_path}light{suffix}.css\" id=\"themeStyle\">\n-    <script src=\"{root_path}storage{suffix}.js\"></script>\n-    {css_extension}\n-\n-    {favicon}\n-    {in_header}\n-</head>\n-<body class=\"rustdoc {css_class}\">\n-    <!--[if lte IE 8]>\n-    <div class=\"warning\">\n-        This old browser is unsupported and will most likely display funky\n-        things.\n-    </div>\n-    <![endif]-->\n-\n-    {before_content}\n-\n-    <nav class=\"sidebar\">\n-        <div class=\"sidebar-menu\">&#9776;</div>\n-        {logo}\n-        {sidebar}\n-    </nav>\n-\n-    <div class=\"theme-picker\">\n-        <button id=\"theme-picker\" aria-label=\"Pick another theme!\">\n-            <img src=\"{root_path}brush{suffix}.svg\" width=\"18\" alt=\"Pick another theme!\">\n-        </button>\n-        <div id=\"theme-choices\"></div>\n-    </div>\n-    <script src=\"{root_path}theme{suffix}.js\"></script>\n-    <nav class=\"sub\">\n-        <form class=\"search-form js-only\">\n-            <div class=\"search-container\">\n-                <input class=\"search-input\" name=\"search\"\n-                       autocomplete=\"off\"\n-                       placeholder=\"Click or press \u2018S\u2019 to search, \u2018?\u2019 for more options\u2026\"\n-                       type=\"search\">\n-            </div>\n-        </form>\n-    </nav>\n-\n-    <section id='main' class=\"content\">{content}</section>\n-    <section id='search' class=\"content hidden\"></section>\n-\n-    <section class=\"footer\"></section>\n-\n-    <aside id=\"help\" class=\"hidden\">\n-        <div>\n-            <h1 class=\"hidden\">Help</h1>\n-\n-            <div class=\"shortcuts\">\n-                <h2>Keyboard Shortcuts</h2>\n-\n-                <dl>\n-                    <dt><kbd>?</kbd></dt>\n-                    <dd>Show this help dialog</dd>\n-                    <dt><kbd>S</kbd></dt>\n-                    <dd>Focus the search field</dd>\n-                    <dt><kbd>\u2191</kbd></dt>\n-                    <dd>Move up in search results</dd>\n-                    <dt><kbd>\u2193</kbd></dt>\n-                    <dd>Move down in search results</dd>\n-                    <dt><kbd>\u21b9</kbd></dt>\n-                    <dd>Switch tab</dd>\n-                    <dt><kbd>&#9166;</kbd></dt>\n-                    <dd>Go to active search result</dd>\n-                    <dt><kbd>+</kbd></dt>\n-                    <dd>Expand all sections</dd>\n-                    <dt><kbd>-</kbd></dt>\n-                    <dd>Collapse all sections</dd>\n-                </dl>\n-            </div>\n-\n-            <div class=\"infos\">\n-                <h2>Search Tricks</h2>\n-\n-                <p>\n-                    Prefix searches with a type followed by a colon (e.g.\n-                    <code>fn:</code>) to restrict the search to a given type.\n-                </p>\n-\n-                <p>\n-                    Accepted types are: <code>fn</code>, <code>mod</code>,\n-                    <code>struct</code>, <code>enum</code>,\n-                    <code>trait</code>, <code>type</code>, <code>macro</code>,\n-                    and <code>const</code>.\n-                </p>\n-\n-                <p>\n-                    Search functions by type signature (e.g.\n-                    <code>vec -> usize</code> or <code>* -> vec</code>)\n-                </p>\n-            </div>\n-        </div>\n-    </aside>\n-\n-    {after_content}\n-\n-    <script>\n-        window.rootPath = \"{root_path}\";\n-        window.currentCrate = \"{krate}\";\n-    </script>\n-    <script src=\"{root_path}main{suffix}.js\"></script>\n-    <script defer src=\"{root_path}search-index.js\"></script>\n-</body>\n-</html>\"##,\n+\"<!DOCTYPE html>\\\n+<html lang=\\\"en\\\">\\\n+<head>\\\n+    <meta charset=\\\"utf-8\\\">\\\n+    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\\n+    <meta name=\\\"generator\\\" content=\\\"rustdoc\\\">\\\n+    <meta name=\\\"description\\\" content=\\\"{description}\\\">\\\n+    <meta name=\\\"keywords\\\" content=\\\"{keywords}\\\">\\\n+    <title>{title}</title>\\\n+    <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"{root_path}normalize{suffix}.css\\\">\\\n+    <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"{root_path}rustdoc{suffix}.css\\\" \\\n+          id=\\\"mainThemeStyle\\\">\\\n+    {themes}\\\n+    <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"{root_path}dark{suffix}.css\\\">\\\n+    <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"{root_path}light{suffix}.css\\\" \\\n+          id=\\\"themeStyle\\\">\\\n+    <script src=\\\"{root_path}storage{suffix}.js\\\"></script>\\\n+    {css_extension}\\\n+    {favicon}\\\n+    {in_header}\\\n+</head>\\\n+<body class=\\\"rustdoc {css_class}\\\">\\\n+    <!--[if lte IE 8]>\\\n+    <div class=\\\"warning\\\">\\\n+        This old browser is unsupported and will most likely display funky \\\n+        things.\\\n+    </div>\\\n+    <![endif]-->\\\n+    {before_content}\\\n+    <nav class=\\\"sidebar\\\">\\\n+        <div class=\\\"sidebar-menu\\\">&#9776;</div>\\\n+        {logo}\\\n+        {sidebar}\\\n+    </nav>\\\n+    <div class=\\\"theme-picker\\\">\\\n+        <button id=\\\"theme-picker\\\" aria-label=\\\"Pick another theme!\\\">\\\n+            <img src=\\\"{root_path}brush{suffix}.svg\\\" width=\\\"18\\\" alt=\\\"Pick another theme!\\\">\\\n+        </button>\\\n+        <div id=\\\"theme-choices\\\"></div>\\\n+    </div>\\\n+    <script src=\\\"{root_path}theme{suffix}.js\\\"></script>\\\n+    <nav class=\\\"sub\\\">\\\n+        <form class=\\\"search-form js-only\\\">\\\n+            <div class=\\\"search-container\\\">\\\n+                <input class=\\\"search-input\\\" name=\\\"search\\\" \\\n+                       autocomplete=\\\"off\\\" \\\n+                       placeholder=\\\"Click or press \u2018S\u2019 to search, \u2018?\u2019 for more options\u2026\\\" \\\n+                       type=\\\"search\\\">\\\n+            </div>\\\n+        </form>\\\n+    </nav>\\\n+    <section id=\\\"main\\\" class=\\\"content\\\">{content}</section>\\\n+    <section id=\\\"search\\\" class=\\\"content hidden\\\"></section>\\\n+    <section class=\\\"footer\\\"></section>\\\n+    <aside id=\\\"help\\\" class=\\\"hidden\\\">\\\n+        <div>\\\n+            <h1 class=\\\"hidden\\\">Help</h1>\\\n+            <div class=\\\"shortcuts\\\">\\\n+                <h2>Keyboard Shortcuts</h2>\\\n+                <dl>\\\n+                    <dt><kbd>?</kbd></dt>\\\n+                    <dd>Show this help dialog</dd>\\\n+                    <dt><kbd>S</kbd></dt>\\\n+                    <dd>Focus the search field</dd>\\\n+                    <dt><kbd>\u2191</kbd></dt>\\\n+                    <dd>Move up in search results</dd>\\\n+                    <dt><kbd>\u2193</kbd></dt>\\\n+                    <dd>Move down in search results</dd>\\\n+                    <dt><kbd>\u21b9</kbd></dt>\\\n+                    <dd>Switch tab</dd>\\\n+                    <dt><kbd>&#9166;</kbd></dt>\\\n+                    <dd>Go to active search result</dd>\\\n+                    <dt><kbd>+</kbd></dt>\\\n+                    <dd>Expand all sections</dd>\\\n+                    <dt><kbd>-</kbd></dt>\\\n+                    <dd>Collapse all sections</dd>\\\n+                </dl>\\\n+            </div>\\\n+            <div class=\\\"infos\\\">\\\n+                <h2>Search Tricks</h2>\\\n+                <p>\\\n+                    Prefix searches with a type followed by a colon (e.g. \\\n+                    <code>fn:</code>) to restrict the search to a given type.\\\n+                </p>\\\n+                <p>\\\n+                    Accepted types are: <code>fn</code>, <code>mod</code>, \\\n+                    <code>struct</code>, <code>enum</code>, \\\n+                    <code>trait</code>, <code>type</code>, <code>macro</code>, \\\n+                    and <code>const</code>.\\\n+                </p>\\\n+                <p>\\\n+                    Search functions by type signature (e.g. \\\n+                    <code>vec -> usize</code> or <code>* -> vec</code>)\\\n+                </p>\\\n+                <p>\\\n+                    Search multiple things at once by splitting your query with comma (e.g. \\\n+                    <code>str,u8</code> or <code>String,struct:Vec,test</code>)\\\n+                </p>\\\n+            </div>\\\n+        </div>\\\n+    </aside>\\\n+    {after_content}\\\n+    <script>\\\n+        window.rootPath = \\\"{root_path}\\\";\\\n+        window.currentCrate = \\\"{krate}\\\";\\\n+    </script>\\\n+    <script src=\\\"{root_path}main{suffix}.js\\\"></script>\\\n+    <script defer src=\\\"{root_path}search-index.js\\\"></script>\\\n+</body>\\\n+</html>\",\n     css_extension = if css_file_extension {\n         format!(\"<link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"{root_path}theme{suffix}.css\\\">\",\n                 root_path = page.root_path,"}, {"sha": "651319743aadde640626ca7103e71c01c8c816ee", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9379bcdd0b4ef06303e8c4e3e7c3fd79882372cc/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9379bcdd0b4ef06303e8c4e3e7c3fd79882372cc/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=9379bcdd0b4ef06303e8c4e3e7c3fd79882372cc", "patch": "@@ -1728,7 +1728,9 @@ impl Context {\n                 let mut dst = try_err!(File::create(&joint_dst), &joint_dst);\n                 try_err!(dst.write_all(&buf), &joint_dst);\n \n-                all.append(full_path(self, &item), &item_type);\n+                if !self.render_redirect_pages {\n+                    all.append(full_path(self, &item), &item_type);\n+                }\n                 // Redirect from a sane URL using the namespace to Rustdoc's\n                 // URL for the page.\n                 let redir_name = format!(\"{}.{}.html\", name, item_type.name_space());"}, {"sha": "2546a9410a9f653a44fb12dc37aa80f9ab287a26", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 70, "deletions": 7, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/9379bcdd0b4ef06303e8c4e3e7c3fd79882372cc/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/9379bcdd0b4ef06303e8c4e3e7c3fd79882372cc/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=9379bcdd0b4ef06303e8c4e3e7c3fd79882372cc", "patch": "@@ -1299,14 +1299,78 @@\n             printTab(currentTab);\n         }\n \n+        function execSearch(query, searchWords) {\n+            var queries = query.raw.split(\",\");\n+            var results = {\n+                'in_args': [],\n+                'returned': [],\n+                'others': [],\n+            };\n+\n+            for (var i = 0; i < queries.length; ++i) {\n+                var query = queries[i].trim();\n+                if (query.length !== 0) {\n+                    var tmp = execQuery(getQuery(query), searchWords);\n+\n+                    results['in_args'].push(tmp['in_args']);\n+                    results['returned'].push(tmp['returned']);\n+                    results['others'].push(tmp['others']);\n+                }\n+            }\n+            if (queries.length > 1) {\n+                function getSmallest(arrays, positions) {\n+                    var start = null;\n+\n+                    for (var it = 0; it < positions.length; ++it) {\n+                        if (arrays[it].length > positions[it] &&\n+                            (start === null || start > arrays[it][positions[it]].lev)) {\n+                            start = arrays[it][positions[it]].lev;\n+                        }\n+                    }\n+                    return start;\n+                }\n+\n+                function mergeArrays(arrays) {\n+                    var ret = [];\n+                    var positions = [];\n+\n+                    for (var x = 0; x < arrays.length; ++x) {\n+                        positions.push(0);\n+                    }\n+                    while (ret.length < MAX_RESULTS) {\n+                        var smallest = getSmallest(arrays, positions);\n+                        if (smallest === null) {\n+                            break;\n+                        }\n+                        for (x = 0; x < arrays.length && ret.length < MAX_RESULTS; ++x) {\n+                            if (arrays[x].length > positions[x] &&\n+                                    arrays[x][positions[x]].lev === smallest) {\n+                                ret.push(arrays[x][positions[x]]);\n+                                positions[x] += 1;\n+                            }\n+                        }\n+                    }\n+                    return ret;\n+                }\n+\n+                return {\n+                    'in_args': mergeArrays(results['in_args']),\n+                    'returned': mergeArrays(results['returned']),\n+                    'others': mergeArrays(results['others']),\n+                };\n+            } else {\n+                return {\n+                    'in_args': results['in_args'][0],\n+                    'returned': results['returned'][0],\n+                    'others': results['others'][0],\n+                };\n+            }\n+        }\n+\n         function search(e) {\n-            var query,\n-                obj, i, len,\n-                results = {\"in_args\": [], \"returned\": [], \"others\": []},\n-                resultIndex;\n             var params = getQueryStringParams();\n+            var query = getQuery(document.getElementsByClassName('search-input')[0].value);\n \n-            query = getQuery(document.getElementsByClassName('search-input')[0].value);\n             if (e) {\n                 e.preventDefault();\n             }\n@@ -1328,8 +1392,7 @@\n                 }\n             }\n \n-            results = execQuery(query, index);\n-            showResults(results);\n+            showResults(execSearch(query, index));\n         }\n \n         function buildIndex(rawSearchIndex) {"}, {"sha": "50fac600a978d21ab05dc0ae9174120f25621029", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/9379bcdd0b4ef06303e8c4e3e7c3fd79882372cc/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9379bcdd0b4ef06303e8c4e3e7c3fd79882372cc/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=9379bcdd0b4ef06303e8c4e3e7c3fd79882372cc", "patch": "@@ -336,24 +336,23 @@ declare_keywords! {\n     (46, Offsetof,           \"offsetof\")\n     (47, Override,           \"override\")\n     (48, Priv,               \"priv\")\n-    (49, Proc,               \"proc\")\n-    (50, Pure,               \"pure\")\n-    (51, Sizeof,             \"sizeof\")\n-    (52, Typeof,             \"typeof\")\n-    (53, Unsized,            \"unsized\")\n-    (54, Virtual,            \"virtual\")\n-    (55, Yield,              \"yield\")\n+    (49, Pure,               \"pure\")\n+    (50, Sizeof,             \"sizeof\")\n+    (51, Typeof,             \"typeof\")\n+    (52, Unsized,            \"unsized\")\n+    (53, Virtual,            \"virtual\")\n+    (54, Yield,              \"yield\")\n \n     // Special lifetime names\n-    (56, UnderscoreLifetime, \"'_\")\n-    (57, StaticLifetime,     \"'static\")\n+    (55, UnderscoreLifetime, \"'_\")\n+    (56, StaticLifetime,     \"'static\")\n \n     // Weak keywords, have special meaning only in specific contexts.\n-    (58, Auto,               \"auto\")\n-    (59, Catch,              \"catch\")\n-    (60, Default,            \"default\")\n-    (61, Dyn,                \"dyn\")\n-    (62, Union,              \"union\")\n+    (57, Auto,               \"auto\")\n+    (58, Catch,              \"catch\")\n+    (59, Default,            \"default\")\n+    (60, Dyn,                \"dyn\")\n+    (61, Union,              \"union\")\n }\n \n // If an interner exists, return it. Otherwise, prepare a fresh one."}, {"sha": "3793ca6599c5f8aed767a49e4f92c1bab7a1fa7c", "filename": "src/test/rustdoc-js/multi-query.js", "status": "renamed", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/9379bcdd0b4ef06303e8c4e3e7c3fd79882372cc/src%2Ftest%2Frustdoc-js%2Fmulti-query.js", "raw_url": "https://github.com/rust-lang/rust/raw/9379bcdd0b4ef06303e8c4e3e7c3fd79882372cc/src%2Ftest%2Frustdoc-js%2Fmulti-query.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js%2Fmulti-query.js?ref=9379bcdd0b4ef06303e8c4e3e7c3fd79882372cc", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -8,12 +8,13 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// compile-flags: -Z parse-only\n+const QUERY = 'str,u8';\n \n-// Test that we generate obsolete syntax errors around usages of `proc`.\n-\n-fn foo(p: proc()) { } //~ ERROR expected type, found reserved keyword `proc`\n-\n-fn bar() { proc() 1; } //~ ERROR expected expression, found reserved keyword `proc`\n-\n-fn main() { }\n+const EXPECTED = {\n+    'others': [\n+        { 'path': 'std', 'name': 'str' },\n+        { 'path': 'std', 'name': 'u8' },\n+        { 'path': 'std::ffi', 'name': 'CStr' },\n+        { 'path': 'std::simd', 'name': 'u8x2' },\n+    ],\n+};", "previous_filename": "src/test/parse-fail/obsolete-proc.rs"}, {"sha": "1969cf859eee4c8e9a50f89b0ea78c5152e341c1", "filename": "src/test/rustdoc/all.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9379bcdd0b4ef06303e8c4e3e7c3fd79882372cc/src%2Ftest%2Frustdoc%2Fall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9379bcdd0b4ef06303e8c4e3e7c3fd79882372cc/src%2Ftest%2Frustdoc%2Fall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fall.rs?ref=9379bcdd0b4ef06303e8c4e3e7c3fd79882372cc", "patch": "@@ -28,3 +28,11 @@ pub union Union {\n pub const CONST: u32 = 0;\n pub static STATIC: &str = \"baguette\";\n pub fn function() {}\n+\n+mod private_module {\n+    pub struct ReexportedStruct;\n+}\n+\n+// @has foo/all.html '//a[@href=\"struct.ReexportedStruct.html\"]' 'ReexportedStruct'\n+// @!has foo/all.html 'private_module'\n+pub use private_module::ReexportedStruct;"}, {"sha": "1e6c4336a9e995cf054399bc5cef863d1f67471e", "filename": "src/tools/rustdoc-js/tester.js", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9379bcdd0b4ef06303e8c4e3e7c3fd79882372cc/src%2Ftools%2Frustdoc-js%2Ftester.js", "raw_url": "https://github.com/rust-lang/rust/raw/9379bcdd0b4ef06303e8c4e3e7c3fd79882372cc/src%2Ftools%2Frustdoc-js%2Ftester.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustdoc-js%2Ftester.js?ref=9379bcdd0b4ef06303e8c4e3e7c3fd79882372cc", "patch": "@@ -157,7 +157,8 @@ function main(argv) {\n     // execQuery first parameter is built in getQuery (which takes in the search input).\n     // execQuery last parameter is built in buildIndex.\n     // buildIndex requires the hashmap from search-index.\n-    var functionsToLoad = [\"levenshtein\", \"validateResult\", \"getQuery\", \"buildIndex\", \"execQuery\"];\n+    var functionsToLoad = [\"levenshtein\", \"validateResult\", \"getQuery\", \"buildIndex\", \"execQuery\",\n+                           \"execSearch\"];\n \n     finalJS += 'window = { \"currentCrate\": \"std\" };\\n';\n     finalJS += loadThings(arraysToLoad, 'array', extractArrayVariable, mainJs);\n@@ -174,7 +175,7 @@ function main(argv) {\n                                'exports.QUERY = QUERY;exports.EXPECTED = EXPECTED;');\n         const expected = loadedFile.EXPECTED;\n         const query = loadedFile.QUERY;\n-        var results = loaded.execQuery(loaded.getQuery(query), index);\n+        var results = loaded.execSearch(loaded.getQuery(query), index);\n         process.stdout.write('Checking \"' + file + '\" ... ');\n         var error_text = [];\n         for (var key in expected) {"}]}