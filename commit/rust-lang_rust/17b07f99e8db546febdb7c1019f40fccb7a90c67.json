{"sha": "17b07f99e8db546febdb7c1019f40fccb7a90c67", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3YjA3Zjk5ZThkYjU0NmZlYmRiN2MxMDE5ZjQwZmNjYjdhOTBjNjc=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2019-02-16T06:15:45Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2019-02-17T06:52:23Z"}, "message": "Rollup merge of #58395 - vi:checked_duration_since, r=dtolnay\n\nInstant::checked_duration_since", "tree": {"sha": "7b032a40ce34d4637c9e9330be70af832562a104", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b032a40ce34d4637c9e9330be70af832562a104"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17b07f99e8db546febdb7c1019f40fccb7a90c67", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlxpBKcACgkQ/vbIBR0O\nATyHtw/+KtMT9xz3+qm59h3qc+OIIemaDPCUFYFij7WXM/IMSY/nbtGzfNeST7Th\ninXJIecbxbWc1g8NyhWFj9Acq92blm+JToi0L2QbJ/uGGtV7dEHzRMSnSJJTxoVK\nxMChzYcy7yyMatTTt9gNGQEqUyZYqw6LeFxFeJCPpZUdQi/tzMzhV730MHea69bl\nji5GCklb6MzyKzzvmBTdiPPFXJ+mWAaPmjImdqkecuuOqUaQrvjhjgaCxLz0n6ME\nyUyRQUrAY0K4u94B0kbkzXd8DYJX4unqC/+HctD2tHGWvP0P3T0+jtBPZVRZ14++\n8Exo2MjTtdWiZjnOsnAlLHzQBbYuHG4J2tDGPjSTq2b62BBYzTPXW9C7otcyM5rz\nOleNgBsXkBTth+Fafv2jFVZ1vwscTx2Fi+O6QN9RUQsKwOJQXM9f5EiX5f1Ef9u6\nVh0vAwx1UuCX9dmyFAuSnG5gcARA8GO9iX1BrjbxVa+neGEDjpo6Xe9MLYnTYK5T\n1EGZKzjC7qDQTAdKsAIEkLC6VhiUqLCuawNND1R3/qLGs7hiW8Yg8I7tiGVnbW9V\njVEQcTEMVV35w0gyp1x2yEvRI0cbL35wjYjP7/Mwm/dxPovL01JZEvDc/ljT0BYj\n0fw5GGu8xnxvAk7h+gRMzH40TKP9pM+vehycQAdHWUg76digpGI=\n=FzNq\n-----END PGP SIGNATURE-----", "payload": "tree 7b032a40ce34d4637c9e9330be70af832562a104\nparent f8ccdeb0d42116a1bb5445860fd2a91d2493b44a\nparent 91f67fd1a75d7cc1b1ac5fc957ff30f16d01232e\nauthor kennytm <kennytm@gmail.com> 1550297745 +0800\ncommitter kennytm <kennytm@gmail.com> 1550386343 +0800\n\nRollup merge of #58395 - vi:checked_duration_since, r=dtolnay\n\nInstant::checked_duration_since\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17b07f99e8db546febdb7c1019f40fccb7a90c67", "html_url": "https://github.com/rust-lang/rust/commit/17b07f99e8db546febdb7c1019f40fccb7a90c67", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17b07f99e8db546febdb7c1019f40fccb7a90c67/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8ccdeb0d42116a1bb5445860fd2a91d2493b44a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8ccdeb0d42116a1bb5445860fd2a91d2493b44a", "html_url": "https://github.com/rust-lang/rust/commit/f8ccdeb0d42116a1bb5445860fd2a91d2493b44a"}, {"sha": "91f67fd1a75d7cc1b1ac5fc957ff30f16d01232e", "url": "https://api.github.com/repos/rust-lang/rust/commits/91f67fd1a75d7cc1b1ac5fc957ff30f16d01232e", "html_url": "https://github.com/rust-lang/rust/commit/91f67fd1a75d7cc1b1ac5fc957ff30f16d01232e"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "f849daf2079671a9f92d1718311d03238ebf926d", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/17b07f99e8db546febdb7c1019f40fccb7a90c67/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17b07f99e8db546febdb7c1019f40fccb7a90c67/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=17b07f99e8db546febdb7c1019f40fccb7a90c67", "patch": "@@ -295,6 +295,7 @@\n #![feature(non_exhaustive)]\n #![feature(alloc_layout_extra)]\n #![feature(maybe_uninit)]\n+#![feature(checked_duration_since)]\n #![cfg_attr(all(target_vendor = \"fortanix\", target_env = \"sgx\"),\n             feature(global_asm, range_contains, slice_index_methods,\n                     decl_macro, coerce_unsized, sgx_platform, ptr_wrapping_offset_from))]"}, {"sha": "e1c2b2b1d4f3079532be68437cac7fd1510e6ab9", "filename": "src/libstd/time.rs", "status": "modified", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/17b07f99e8db546febdb7c1019f40fccb7a90c67/src%2Flibstd%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17b07f99e8db546febdb7c1019f40fccb7a90c67/src%2Flibstd%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftime.rs?ref=17b07f99e8db546febdb7c1019f40fccb7a90c67", "patch": "@@ -218,6 +218,52 @@ impl Instant {\n         self.0.sub_instant(&earlier.0)\n     }\n \n+    /// Returns the amount of time elapsed from another instant to this one,\n+    /// or None if that instant is earlier than this one.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```no_run\n+    /// #![feature(checked_duration_since)]\n+    /// use std::time::{Duration, Instant};\n+    /// use std::thread::sleep;\n+    ///\n+    /// let now = Instant::now();\n+    /// sleep(Duration::new(1, 0));\n+    /// let new_now = Instant::now();\n+    /// println!(\"{:?}\", new_now.checked_duration_since(now));\n+    /// println!(\"{:?}\", now.checked_duration_since(new_now)); // None\n+    /// ```\n+    #[unstable(feature = \"checked_duration_since\", issue = \"58402\")]\n+    pub fn checked_duration_since(&self, earlier: Instant) -> Option<Duration> {\n+        if self >= &earlier {\n+            Some(self.0.sub_instant(&earlier.0))\n+        } else {\n+            None\n+        }\n+    }\n+\n+    /// Returns the amount of time elapsed from another instant to this one,\n+    /// or zero duration if that instant is earlier than this one.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```no_run\n+    /// #![feature(checked_duration_since)]\n+    /// use std::time::{Duration, Instant};\n+    /// use std::thread::sleep;\n+    ///\n+    /// let now = Instant::now();\n+    /// sleep(Duration::new(1, 0));\n+    /// let new_now = Instant::now();\n+    /// println!(\"{:?}\", new_now.saturating_duration_since(now));\n+    /// println!(\"{:?}\", now.saturating_duration_since(new_now)); // 0ns\n+    /// ```\n+    #[unstable(feature = \"checked_duration_since\", issue = \"58402\")]\n+    pub fn saturating_duration_since(&self, earlier: Instant) -> Duration {\n+        self.checked_duration_since(earlier).unwrap_or(Duration::new(0, 0))\n+    }\n+\n     /// Returns the amount of time elapsed since this instant was created.\n     ///\n     /// # Panics\n@@ -626,6 +672,20 @@ mod tests {\n         (a - Duration::new(1, 0)).duration_since(a);\n     }\n \n+    #[test]\n+    fn checked_instant_duration_nopanic() {\n+        let a = Instant::now();\n+        let ret = (a - Duration::new(1, 0)).checked_duration_since(a);\n+        assert_eq!(ret, None);\n+    }\n+\n+    #[test]\n+    fn saturating_instant_duration_nopanic() {\n+        let a = Instant::now();\n+        let ret = (a - Duration::new(1, 0)).saturating_duration_since(a);\n+        assert_eq!(ret, Duration::new(0,0));\n+    }\n+\n     #[test]\n     fn system_time_math() {\n         let a = SystemTime::now();"}]}