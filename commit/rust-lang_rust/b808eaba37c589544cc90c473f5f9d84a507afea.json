{"sha": "b808eaba37c589544cc90c473f5f9d84a507afea", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4MDhlYWJhMzdjNTg5NTQ0Y2M5MGM0NzNmNWY5ZDg0YTUwN2FmZWE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-11-07T07:26:44Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-11-14T22:11:10Z"}, "message": "rustc: Generate test code when in the 'test' config", "tree": {"sha": "ee7a389f0dd9437e9ebb635287cc49e6f091ce2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee7a389f0dd9437e9ebb635287cc49e6f091ce2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b808eaba37c589544cc90c473f5f9d84a507afea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b808eaba37c589544cc90c473f5f9d84a507afea", "html_url": "https://github.com/rust-lang/rust/commit/b808eaba37c589544cc90c473f5f9d84a507afea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b808eaba37c589544cc90c473f5f9d84a507afea/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28c7a251514919a2d7bdf6c67b8edf5eed9043db", "url": "https://api.github.com/repos/rust-lang/rust/commits/28c7a251514919a2d7bdf6c67b8edf5eed9043db", "html_url": "https://github.com/rust-lang/rust/commit/28c7a251514919a2d7bdf6c67b8edf5eed9043db"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "4a6936a32a558fdebd1bf5a349d054113a4bd24f", "filename": "src/librustc/front/test.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b808eaba37c589544cc90c473f5f9d84a507afea/src%2Flibrustc%2Ffront%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b808eaba37c589544cc90c473f5f9d84a507afea/src%2Flibrustc%2Ffront%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Ftest.rs?ref=b808eaba37c589544cc90c473f5f9d84a507afea", "patch": "@@ -29,7 +29,13 @@ type test_ctxt =\n fn modify_for_testing(sess: session::Session,\n                       crate: @ast::crate) -> @ast::crate {\n \n-    if sess.opts.test {\n+    // We generate the test harness when building in the 'test'\n+    // configuration, either with the '--test' or '--cfg test'\n+    // command line options.\n+    let should_test = attr::contains(crate.node.config,\n+                                     attr::mk_word_item(~\"test\"));\n+\n+    if should_test {\n         generate_test_harness(sess, crate)\n     } else {\n         strip_test_functions(crate)"}]}