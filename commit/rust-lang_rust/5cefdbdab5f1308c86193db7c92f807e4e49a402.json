{"sha": "5cefdbdab5f1308c86193db7c92f807e4e49a402", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjZWZkYmRhYjVmMTMwOGM4NjE5M2RiN2M5MmY4MDdlNGU0OWE0MDI=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2021-07-15T15:42:18Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2021-07-18T12:30:10Z"}, "message": "Use == to compare OpaqueTyOrigin values", "tree": {"sha": "d361336b1813360d8443be75ff1caa47b82e61ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d361336b1813360d8443be75ff1caa47b82e61ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5cefdbdab5f1308c86193db7c92f807e4e49a402", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmD0HtIACgkQgTGiTgx5\n76/6KA/+KbWiz50HWsYu1BcKronXo+LazBecc2UAIkKPa8tWAY1JubT8FWEEBMTe\n/c72o8UDx0WBAEJnmooOEupnDRfFbEDJQksYWCWXMwHT8Ox32vRG+a1s7GV63KmP\nGWJ+e8U9KGVb/zYCfwafdpkIIM0mcVG3owDzZ2Nx3hT9L6zFUd0waZ0SHlvdgpEi\nRu4v9iCf9cfihkZkYWKsIVST4L+pvbFQBMoyo98/LTVADe07vgTyvsDkIgPSr1qu\n6TlSr901CSaCokKZv0VAY4uIjjHYwBnOYb51qhL93IEQj+HqqWObmpiViVaFfRAv\n0SzCNU6KHmkXciZUZKI395tfiVqUPhS2L8TvprFcQzFM8QVfcxdrq42xfpSCkgeE\nWLDQ6PZuph+2baQwOCO67IWn97+klDZoN4e+9eAOMvmzP6V1hjwS2Bc+xDQyWXGa\ngU7G+t5mI74JDeZ0ueJT+/gO5sj9lt5KM50mC36tfOVZ4i4cxFC1f6EAL9EjYZTk\nr5Ndlim4N5NrFNaggKb/0eUoeupphzi5+/cgLLAHgdnvgB99hAvAa+BjL/wboK0P\nFfwDf+s36GrWVaM59PBdnRISTEXCtyCWtwdOHw7TpDCGTwTjGTi57unm3sFnML/K\nnGNr6zPCAcL/cI2WJYS/i9hjP7HC19jFthXfAC98Y14elP1kkiI=\n=xDw/\n-----END PGP SIGNATURE-----", "payload": "tree d361336b1813360d8443be75ff1caa47b82e61ef\nparent 000b945ceaed1b74b101f96889b63d48d877ba69\nauthor Santiago Pastorino <spastorino@gmail.com> 1626363738 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1626611410 -0300\n\nUse == to compare OpaqueTyOrigin values\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5cefdbdab5f1308c86193db7c92f807e4e49a402", "html_url": "https://github.com/rust-lang/rust/commit/5cefdbdab5f1308c86193db7c92f807e4e49a402", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5cefdbdab5f1308c86193db7c92f807e4e49a402/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "000b945ceaed1b74b101f96889b63d48d877ba69", "url": "https://api.github.com/repos/rust-lang/rust/commits/000b945ceaed1b74b101f96889b63d48d877ba69", "html_url": "https://github.com/rust-lang/rust/commit/000b945ceaed1b74b101f96889b63d48d877ba69"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "5c7d10560ca912da95b02ab2dc8af82af75a885a", "filename": "compiler/rustc_hir/src/hir.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5cefdbdab5f1308c86193db7c92f807e4e49a402/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cefdbdab5f1308c86193db7c92f807e4e49a402/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fhir.rs?ref=5cefdbdab5f1308c86193db7c92f807e4e49a402", "patch": "@@ -2264,7 +2264,7 @@ pub struct OpaqueTy<'hir> {\n }\n \n /// From whence the opaque type came.\n-#[derive(Copy, Clone, Encodable, Decodable, Debug, HashStable_Generic)]\n+#[derive(Copy, Clone, PartialEq, Eq, Encodable, Decodable, Debug, HashStable_Generic)]\n pub enum OpaqueTyOrigin {\n     /// `-> impl Trait`\n     FnReturn,"}, {"sha": "935bcc9f32e2bb16a5b1be3587f398ef79433064", "filename": "compiler/rustc_typeck/src/check/writeback.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5cefdbdab5f1308c86193db7c92f807e4e49a402/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cefdbdab5f1308c86193db7c92f807e4e49a402/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwriteback.rs?ref=5cefdbdab5f1308c86193db7c92f807e4e49a402", "patch": "@@ -521,7 +521,7 @@ impl<'cx, 'tcx> WritebackCx<'cx, 'tcx> {\n             let mut skip_add = false;\n \n             if let ty::Opaque(definition_ty_def_id, _substs) = *definition_ty.kind() {\n-                if let hir::OpaqueTyOrigin::TyAlias = opaque_defn.origin {\n+                if opaque_defn.origin == hir::OpaqueTyOrigin::TyAlias {\n                     if opaque_type_key.def_id == definition_ty_def_id {\n                         debug!(\n                             \"skipping adding concrete definition for opaque type {:?} {:?}\","}]}