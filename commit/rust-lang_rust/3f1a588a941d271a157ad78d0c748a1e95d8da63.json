{"sha": "3f1a588a941d271a157ad78d0c748a1e95d8da63", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmMWE1ODhhOTQxZDI3MWExNTdhZDc4ZDBjNzQ4YTFlOTVkOGRhNjM=", "commit": {"author": {"name": "DutchGhost", "email": "kasper199914@gmail.com", "date": "2020-04-02T19:35:26Z"}, "committer": {"name": "DutchGhost", "email": "kasper199914@gmail.com", "date": "2020-04-02T19:35:26Z"}, "message": "stabilize BTreeMap::remove_entry", "tree": {"sha": "4069ac014e989e55edd617af3d6ccc09b45573c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4069ac014e989e55edd617af3d6ccc09b45573c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f1a588a941d271a157ad78d0c748a1e95d8da63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f1a588a941d271a157ad78d0c748a1e95d8da63", "html_url": "https://github.com/rust-lang/rust/commit/3f1a588a941d271a157ad78d0c748a1e95d8da63", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f1a588a941d271a157ad78d0c748a1e95d8da63/comments", "author": {"login": "DutchGhost", "id": 25501014, "node_id": "MDQ6VXNlcjI1NTAxMDE0", "avatar_url": "https://avatars.githubusercontent.com/u/25501014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DutchGhost", "html_url": "https://github.com/DutchGhost", "followers_url": "https://api.github.com/users/DutchGhost/followers", "following_url": "https://api.github.com/users/DutchGhost/following{/other_user}", "gists_url": "https://api.github.com/users/DutchGhost/gists{/gist_id}", "starred_url": "https://api.github.com/users/DutchGhost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DutchGhost/subscriptions", "organizations_url": "https://api.github.com/users/DutchGhost/orgs", "repos_url": "https://api.github.com/users/DutchGhost/repos", "events_url": "https://api.github.com/users/DutchGhost/events{/privacy}", "received_events_url": "https://api.github.com/users/DutchGhost/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DutchGhost", "id": 25501014, "node_id": "MDQ6VXNlcjI1NTAxMDE0", "avatar_url": "https://avatars.githubusercontent.com/u/25501014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DutchGhost", "html_url": "https://github.com/DutchGhost", "followers_url": "https://api.github.com/users/DutchGhost/followers", "following_url": "https://api.github.com/users/DutchGhost/following{/other_user}", "gists_url": "https://api.github.com/users/DutchGhost/gists{/gist_id}", "starred_url": "https://api.github.com/users/DutchGhost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DutchGhost/subscriptions", "organizations_url": "https://api.github.com/users/DutchGhost/orgs", "repos_url": "https://api.github.com/users/DutchGhost/repos", "events_url": "https://api.github.com/users/DutchGhost/events{/privacy}", "received_events_url": "https://api.github.com/users/DutchGhost/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ab82b87af4f20b6c0a481e050517103d50263e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ab82b87af4f20b6c0a481e050517103d50263e9", "html_url": "https://github.com/rust-lang/rust/commit/8ab82b87af4f20b6c0a481e050517103d50263e9"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "06e10a0c62d3ea1b26fb9e633edc90bff2113c2f", "filename": "src/liballoc/collections/btree/map.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3f1a588a941d271a157ad78d0c748a1e95d8da63/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f1a588a941d271a157ad78d0c748a1e95d8da63/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs?ref=3f1a588a941d271a157ad78d0c748a1e95d8da63", "patch": "@@ -894,15 +894,14 @@ impl<K: Ord, V> BTreeMap<K, V> {\n     /// Basic usage:\n     ///\n     /// ```\n-    /// #![feature(btreemap_remove_entry)]\n     /// use std::collections::BTreeMap;\n     ///\n     /// let mut map = BTreeMap::new();\n     /// map.insert(1, \"a\");\n     /// assert_eq!(map.remove_entry(&1), Some((1, \"a\")));\n     /// assert_eq!(map.remove_entry(&1), None);\n     /// ```\n-    #[unstable(feature = \"btreemap_remove_entry\", issue = \"66714\")]\n+    #[stable(feature = \"btreemap_remove_entry\", since = \"1.44.0\")]\n     pub fn remove_entry<Q: ?Sized>(&mut self, key: &Q) -> Option<(K, V)>\n     where\n         K: Borrow<Q>,"}]}