{"sha": "72247d8e2e6e14fd428d2334b67298dc889340e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyMjQ3ZDhlMmU2ZTE0ZmQ0MjhkMjMzNGI2NzI5OGRjODg5MzQwZTQ=", "commit": {"author": {"name": "Wayne Warren", "email": "wayne.warren.s@gmail.com", "date": "2018-11-21T15:14:42Z"}, "committer": {"name": "Wayne Warren", "email": "wayne.warren.s@gmail.com", "date": "2018-12-06T00:18:17Z"}, "message": "Fix dogfood tests.", "tree": {"sha": "305b48544a971131523af1dbcc1e059dc14a54b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/305b48544a971131523af1dbcc1e059dc14a54b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72247d8e2e6e14fd428d2334b67298dc889340e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72247d8e2e6e14fd428d2334b67298dc889340e4", "html_url": "https://github.com/rust-lang/rust/commit/72247d8e2e6e14fd428d2334b67298dc889340e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72247d8e2e6e14fd428d2334b67298dc889340e4/comments", "author": {"login": "waynr", "id": 1441126, "node_id": "MDQ6VXNlcjE0NDExMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1441126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waynr", "html_url": "https://github.com/waynr", "followers_url": "https://api.github.com/users/waynr/followers", "following_url": "https://api.github.com/users/waynr/following{/other_user}", "gists_url": "https://api.github.com/users/waynr/gists{/gist_id}", "starred_url": "https://api.github.com/users/waynr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waynr/subscriptions", "organizations_url": "https://api.github.com/users/waynr/orgs", "repos_url": "https://api.github.com/users/waynr/repos", "events_url": "https://api.github.com/users/waynr/events{/privacy}", "received_events_url": "https://api.github.com/users/waynr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "waynr", "id": 1441126, "node_id": "MDQ6VXNlcjE0NDExMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1441126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waynr", "html_url": "https://github.com/waynr", "followers_url": "https://api.github.com/users/waynr/followers", "following_url": "https://api.github.com/users/waynr/following{/other_user}", "gists_url": "https://api.github.com/users/waynr/gists{/gist_id}", "starred_url": "https://api.github.com/users/waynr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waynr/subscriptions", "organizations_url": "https://api.github.com/users/waynr/orgs", "repos_url": "https://api.github.com/users/waynr/repos", "events_url": "https://api.github.com/users/waynr/events{/privacy}", "received_events_url": "https://api.github.com/users/waynr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29bf75cd3147d4e34a5e70bd167898a8105f7e5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/29bf75cd3147d4e34a5e70bd167898a8105f7e5d", "html_url": "https://github.com/rust-lang/rust/commit/29bf75cd3147d4e34a5e70bd167898a8105f7e5d"}], "stats": {"total": 75, "additions": 44, "deletions": 31}, "files": [{"sha": "2537f157ad98e174b83482832a7b996a0d790bca", "filename": "ci/base-tests.sh", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/72247d8e2e6e14fd428d2334b67298dc889340e4/ci%2Fbase-tests.sh", "raw_url": "https://github.com/rust-lang/rust/raw/72247d8e2e6e14fd428d2334b67298dc889340e4/ci%2Fbase-tests.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ci%2Fbase-tests.sh?ref=72247d8e2e6e14fd428d2334b67298dc889340e4", "patch": "@@ -27,23 +27,3 @@ cd clippy_dev && cargo test && cd ..\n # Perform various checks for lint registration\n ./util/dev update_lints --check\n cargo +nightly fmt --all -- --check\n-\n-# Add bin to PATH for windows\n-PATH=$PATH:$(rustc --print sysroot)/bin\n-\n-CLIPPY=\"`pwd`/target/debug/cargo-clippy clippy\"\n-# run clippy on its own codebase...\n-${CLIPPY} --all-targets --all-features -- -D clippy::all -D clippy::internal -Dclippy::pedantic\n-# ... and some test directories\n-for dir in clippy_workspace_tests clippy_workspace_tests/src clippy_workspace_tests/subcrate clippy_workspace_tests/subcrate/src clippy_dev rustc_tools_util\n-do\n-    cd ${dir}\n-    ${CLIPPY} -- -D clippy::all -D clippy::pedantic\n-    cd -\n-done\n-\n-\n-# test --manifest-path\n-${CLIPPY} --manifest-path=clippy_workspace_tests/Cargo.toml -- -D clippy::all\n-cd clippy_workspace_tests/subcrate && ${CLIPPY} --manifest-path=../Cargo.toml -- -D clippy::all && cd ../..\n-set +x"}, {"sha": "2f2b0cf50acf62cb4236008ca1e20f180a868e66", "filename": "tests/dogfood.rs", "status": "modified", "additions": 44, "deletions": 11, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/72247d8e2e6e14fd428d2334b67298dc889340e4/tests%2Fdogfood.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72247d8e2e6e14fd428d2334b67298dc889340e4/tests%2Fdogfood.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdogfood.rs?ref=72247d8e2e6e14fd428d2334b67298dc889340e4", "patch": "@@ -12,18 +12,50 @@ fn dogfood() {\n     if option_env!(\"RUSTC_TEST_SUITE\").is_some() || cfg!(windows) {\n         return;\n     }\n-    let root_dir = std::env::current_dir().unwrap();\n-    for d in &[\".\", \"clippy_lints\", \"rustc_tools_util\", \"clippy_dev\"] {\n+    let root_dir = std::path::PathBuf::from(env!(\"CARGO_MANIFEST_DIR\"));\n+    let clippy_cmd = std::path::Path::new(&root_dir).join(\"target/debug/cargo-clippy\");\n+\n+    println!(\"{:?}\", clippy_cmd);\n+    let output = std::process::Command::new(clippy_cmd)\n+        .arg(\"clippy\")\n+        .arg(\"--all-targets\")\n+        .arg(\"--all-features\")\n+        .arg(\"--\")\n+        .args(&[\"-D\", \"clippy::all\"])\n+        .args(&[\"-D\", \"clippy::internal\"])\n+        .args(&[\"-D\", \"clippy::pedantic\"])\n+        .output()\n+        .unwrap();\n+    println!(\"status: {}\", output.status);\n+    println!(\"stdout: {}\", String::from_utf8_lossy(&output.stdout));\n+    println!(\"stderr: {}\", String::from_utf8_lossy(&output.stderr));\n+\n+    assert!(output.status.success());\n+}\n+\n+#[test]\n+fn dogfood_tests() {\n+    if option_env!(\"RUSTC_TEST_SUITE\").is_some() || cfg!(windows) {\n+        return;\n+    }\n+    let root_dir = std::path::PathBuf::from(env!(\"CARGO_MANIFEST_DIR\"));\n+\n+    for d in &[\n+        \"clippy_workspace_tests\",\n+        \"clippy_workspace_tests/src\",\n+        \"clippy_workspace_tests/subcrate\",\n+        \"clippy_workspace_tests/subcrate/src\",\n+        \"clippy_dev\",\n+        \"rustc_tools_util\",\n+    ] {\n+        let clippy_cmd = std::path::Path::new(&root_dir)\n+            .join(\"target/debug/cargo-clippy\");\n         std::env::set_current_dir(root_dir.join(d)).unwrap();\n-        let output = std::process::Command::new(\"cargo\")\n-            .arg(\"run\")\n-            .arg(\"--bin\")\n-            .arg(\"cargo-clippy\")\n-            .arg(\"--all-features\")\n-            .arg(\"--manifest-path\")\n-            .arg(root_dir.join(\"Cargo.toml\"))\n-            .args(&[\"--\", \"-W clippy::internal -W clippy::pedantic\"])\n-            .env(\"CLIPPY_DOGFOOD\", \"true\")\n+        let output = std::process::Command::new(clippy_cmd)\n+            .arg(\"clippy\")\n+            .arg(\"--\")\n+            .args(&[\"-D\", \"clippy::all\"])\n+            .args(&[\"-D\", \"clippy::pedantic\"])\n             .output()\n             .unwrap();\n         println!(\"status: {}\", output.status);\n@@ -32,4 +64,5 @@ fn dogfood() {\n \n         assert!(output.status.success());\n     }\n+    std::env::set_current_dir(root_dir).unwrap();\n }"}]}