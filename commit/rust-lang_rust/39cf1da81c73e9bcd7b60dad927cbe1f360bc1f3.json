{"sha": "39cf1da81c73e9bcd7b60dad927cbe1f360bc1f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5Y2YxZGE4MWM3M2U5YmNkN2I2MGRhZDkyN2NiZTFmMzYwYmMxZjM=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-06-27T19:49:21Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-07-04T13:31:56Z"}, "message": "Store verbosity on Build\n\nPrevents accidental mistakes in not using the right verbosity by going\nto only config or flags.", "tree": {"sha": "45375783f507143d38e93eb672e85e093067c5f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45375783f507143d38e93eb672e85e093067c5f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39cf1da81c73e9bcd7b60dad927cbe1f360bc1f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39cf1da81c73e9bcd7b60dad927cbe1f360bc1f3", "html_url": "https://github.com/rust-lang/rust/commit/39cf1da81c73e9bcd7b60dad927cbe1f360bc1f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39cf1da81c73e9bcd7b60dad927cbe1f360bc1f3/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4dc8fe90836c622e57293c1262a9f7728e5edfc8", "url": "https://api.github.com/repos/rust-lang/rust/commits/4dc8fe90836c622e57293c1262a9f7728e5edfc8", "html_url": "https://github.com/rust-lang/rust/commit/4dc8fe90836c622e57293c1262a9f7728e5edfc8"}], "stats": {"total": 29, "additions": 14, "deletions": 15}, "files": [{"sha": "a06d925e2ef81799dce69a2d1cabac992690640c", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/39cf1da81c73e9bcd7b60dad927cbe1f360bc1f3/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39cf1da81c73e9bcd7b60dad927cbe1f360bc1f3/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=39cf1da81c73e9bcd7b60dad927cbe1f360bc1f3", "patch": "@@ -249,7 +249,7 @@ pub fn compiletest(build: &Build,\n \n     cmd.args(&build.flags.cmd.test_args());\n \n-    if build.config.verbose() || build.flags.verbose() {\n+    if build.is_verbose() {\n         cmd.arg(\"--verbose\");\n     }\n "}, {"sha": "5804df34e8b383f21798c20fcf0791244d9628ac", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/39cf1da81c73e9bcd7b60dad927cbe1f360bc1f3/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39cf1da81c73e9bcd7b60dad927cbe1f360bc1f3/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=39cf1da81c73e9bcd7b60dad927cbe1f360bc1f3", "patch": "@@ -41,16 +41,6 @@ pub struct Flags {\n     pub incremental: bool,\n }\n \n-impl Flags {\n-    pub fn verbose(&self) -> bool {\n-        self.verbose > 0\n-    }\n-\n-    pub fn very_verbose(&self) -> bool {\n-        self.verbose > 1\n-    }\n-}\n-\n pub enum Subcommand {\n     Build {\n         paths: Vec<PathBuf>,"}, {"sha": "be28975c3ea33539fcbce3b5fff0541b8664e2a3", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/39cf1da81c73e9bcd7b60dad927cbe1f360bc1f3/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39cf1da81c73e9bcd7b60dad927cbe1f360bc1f3/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=39cf1da81c73e9bcd7b60dad927cbe1f360bc1f3", "patch": "@@ -168,6 +168,7 @@ pub struct Build {\n     rls_info: channel::GitInfo,\n     local_rebuild: bool,\n     fail_fast: bool,\n+    verbosity: usize,\n \n     // Stage 0 (downloaded) compiler and cargo or their local rust equivalents.\n     initial_rustc: PathBuf,\n@@ -247,6 +248,7 @@ impl Build {\n             initial_cargo: config.initial_cargo.clone(),\n             local_rebuild: config.local_rebuild,\n             fail_fast: flags.cmd.fail_fast(),\n+            verbosity: cmp::max(flags.verbose, config.verbose),\n \n             flags: flags,\n             config: config,\n@@ -428,8 +430,7 @@ impl Build {\n             cargo.env(\"RUSTC_ON_FAIL\", on_fail);\n         }\n \n-        let verbose = cmp::max(self.config.verbose, self.flags.verbose);\n-        cargo.env(\"RUSTC_VERBOSE\", format!(\"{}\", verbose));\n+        cargo.env(\"RUSTC_VERBOSE\", format!(\"{}\", self.verbosity));\n \n         // Specify some various options for build scripts used throughout\n         // the build.\n@@ -467,7 +468,7 @@ impl Build {\n         // FIXME: should update code to not require this env var\n         cargo.env(\"CFG_COMPILER_HOST_TRIPLE\", target);\n \n-        if self.config.verbose() || self.flags.verbose() {\n+        if self.is_verbose() {\n             cargo.arg(\"-v\");\n         }\n         // FIXME: cargo bench does not accept `--release`\n@@ -779,9 +780,17 @@ impl Build {\n         try_run_suppressed(cmd)\n     }\n \n+    pub fn is_verbose(&self) -> bool {\n+        self.verbosity > 0\n+    }\n+\n+    pub fn is_very_verbose(&self) -> bool {\n+        self.verbosity > 1\n+    }\n+\n     /// Prints a message if this build is configured in verbose mode.\n     fn verbose(&self, msg: &str) {\n-        if self.flags.verbose() || self.config.verbose() {\n+        if self.is_verbose() {\n             println!(\"{}\", msg);\n         }\n     }"}]}