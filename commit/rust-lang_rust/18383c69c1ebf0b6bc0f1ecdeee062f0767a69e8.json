{"sha": "18383c69c1ebf0b6bc0f1ecdeee062f0767a69e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4MzgzYzY5YzFlYmYwYjZiYzBmMWVjZGVlZTA2MmYwNzY3YTY5ZTg=", "commit": {"author": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2020-12-04T22:05:52Z"}, "committer": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2020-12-04T22:05:52Z"}, "message": "Updated code for CI", "tree": {"sha": "93cf9a66a5f7b029f6b3e3142d7e7a92b8dd3256", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93cf9a66a5f7b029f6b3e3142d7e7a92b8dd3256"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18383c69c1ebf0b6bc0f1ecdeee062f0767a69e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18383c69c1ebf0b6bc0f1ecdeee062f0767a69e8", "html_url": "https://github.com/rust-lang/rust/commit/18383c69c1ebf0b6bc0f1ecdeee062f0767a69e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18383c69c1ebf0b6bc0f1ecdeee062f0767a69e8/comments", "author": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6edd59885605d2cf0aa8727cf2cd30cd13098804", "url": "https://api.github.com/repos/rust-lang/rust/commits/6edd59885605d2cf0aa8727cf2cd30cd13098804", "html_url": "https://github.com/rust-lang/rust/commit/6edd59885605d2cf0aa8727cf2cd30cd13098804"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "87a957a9bd241728bd01fbaedaf06f08ee5836a7", "filename": "clippy_lints/src/literal_representation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18383c69c1ebf0b6bc0f1ecdeee062f0767a69e8/clippy_lints%2Fsrc%2Fliteral_representation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18383c69c1ebf0b6bc0f1ecdeee062f0767a69e8/clippy_lints%2Fsrc%2Fliteral_representation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fliteral_representation.rs?ref=18383c69c1ebf0b6bc0f1ecdeee062f0767a69e8", "patch": "@@ -244,7 +244,7 @@ impl LiteralDigitGrouping {\n         }\n     }\n \n-    fn check_lit(&self, cx: &EarlyContext<'_>, lit: &Lit) {\n+    fn check_lit(self, cx: &EarlyContext<'_>, lit: &Lit) {\n         if_chain! {\n             if let Some(src) = snippet_opt(cx, lit.span);\n             if let Some(mut num_lit) = NumericLiteral::from_lit(&src, &lit);"}]}