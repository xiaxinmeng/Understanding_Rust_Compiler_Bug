{"sha": "6a31741eaa638953f10352f27beba081d58e1a6f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhMzE3NDFlYWE2Mzg5NTNmMTAzNTJmMjdiZWJhMDgxZDU4ZTFhNmY=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-04-20T02:17:56Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-04-20T02:17:56Z"}, "message": "Get exit codes right", "tree": {"sha": "f018937df6f1d4aaff1c74751531fe998573656b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f018937df6f1d4aaff1c74751531fe998573656b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a31741eaa638953f10352f27beba081d58e1a6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a31741eaa638953f10352f27beba081d58e1a6f", "html_url": "https://github.com/rust-lang/rust/commit/6a31741eaa638953f10352f27beba081d58e1a6f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a31741eaa638953f10352f27beba081d58e1a6f/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5194984812bf38d73094da36e1932f503958effc", "url": "https://api.github.com/repos/rust-lang/rust/commits/5194984812bf38d73094da36e1932f503958effc", "html_url": "https://github.com/rust-lang/rust/commit/5194984812bf38d73094da36e1932f503958effc"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "8d95dbb209f06e95af8e8fd59ff6c9ebfe40b053", "filename": "src/bin/main.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6a31741eaa638953f10352f27beba081d58e1a6f/src%2Fbin%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a31741eaa638953f10352f27beba081d58e1a6f/src%2Fbin%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmain.rs?ref=6a31741eaa638953f10352f27beba081d58e1a6f", "patch": "@@ -38,13 +38,11 @@ fn main() {\n \n     let exit_code = match execute(&opts) {\n         Ok((write_mode, summary)) => {\n-            if summary.has_operational_errors()\n-                || summary.has_diff && write_mode == WriteMode::Check\n-                || summary.has_parsing_errors() || summary.has_formatting_errors()\n+            if summary.has_operational_errors() || summary.has_parsing_errors()\n+                || (summary.has_diff && write_mode == WriteMode::Check)\n             {\n                 1\n             } else {\n-                assert!(summary.has_no_errors());\n                 0\n             }\n         }"}]}