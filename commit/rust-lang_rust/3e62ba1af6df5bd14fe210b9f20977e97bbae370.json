{"sha": "3e62ba1af6df5bd14fe210b9f20977e97bbae370", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlNjJiYTFhZjZkZjViZDE0ZmUyMTBiOWYyMDk3N2U5N2JiYWUzNzA=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-10-19T12:12:42Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-10-21T13:49:19Z"}, "message": "Add method to get OpTy for local from arbitrary frame", "tree": {"sha": "4ba2be6af6abf842b1f0fff1c864799dd086723f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ba2be6af6abf842b1f0fff1c864799dd086723f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e62ba1af6df5bd14fe210b9f20977e97bbae370", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e62ba1af6df5bd14fe210b9f20977e97bbae370", "html_url": "https://github.com/rust-lang/rust/commit/3e62ba1af6df5bd14fe210b9f20977e97bbae370", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e62ba1af6df5bd14fe210b9f20977e97bbae370/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea51e320432e547c9240f7658aa57da3ef62c811", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea51e320432e547c9240f7658aa57da3ef62c811", "html_url": "https://github.com/rust-lang/rust/commit/ea51e320432e547c9240f7658aa57da3ef62c811"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "8d2190d22c0dcd33a5550f20423c9cfe666df4be", "filename": "src/librustc_mir/interpret/operand.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3e62ba1af6df5bd14fe210b9f20977e97bbae370/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e62ba1af6df5bd14fe210b9f20977e97bbae370/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Foperand.rs?ref=3e62ba1af6df5bd14fe210b9f20977e97bbae370", "patch": "@@ -291,7 +291,7 @@ impl<Tag> Operand<Tag> {\n \n #[derive(Copy, Clone, Debug, Hash, PartialEq, Eq)]\n pub struct OpTy<'tcx, Tag=()> {\n-    pub op: Operand<Tag>, // This is used by [priroda](https://github.com/oli-obk/priroda)\n+    crate op: Operand<Tag>, // ideally we'd make this private, but const_prop needs this\n     pub layout: TyLayout<'tcx>,\n }\n \n@@ -772,4 +772,14 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M>\n         })\n     }\n \n+    /// This is used by [priroda](https://github.com/oli-obk/priroda) to get an OpTy from a local\n+    pub fn read_local_of_frame(\n+        &self,\n+        frame: &super::Frame,\n+        local: mir::Local\n+    ) -> EvalResult<'tcx, OpTy<'tcx>> {\n+        let op = frame.locals[local].access()?;\n+        let layout = self.layout_of_local(frame, local)?;\n+        OpTy { op, layout }\n+    }\n }"}]}