{"sha": "10f468e679c0e6a6c6dc0e94431f3d63bf3e33e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwZjQ2OGU2NzljMGU2YTZjNmRjMGU5NDQzMWYzZDYzYmYzZTMzZTA=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-05-02T08:52:55Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-05-02T08:52:55Z"}, "message": "don't lint similar_names inside #[test] functions", "tree": {"sha": "41d36d53022f16951975ae332539c27eff0c58c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41d36d53022f16951975ae332539c27eff0c58c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10f468e679c0e6a6c6dc0e94431f3d63bf3e33e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10f468e679c0e6a6c6dc0e94431f3d63bf3e33e0", "html_url": "https://github.com/rust-lang/rust/commit/10f468e679c0e6a6c6dc0e94431f3d63bf3e33e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10f468e679c0e6a6c6dc0e94431f3d63bf3e33e0/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "469b3d51b48cccf0b12240b8b20447a8d1369254", "url": "https://api.github.com/repos/rust-lang/rust/commits/469b3d51b48cccf0b12240b8b20447a8d1369254", "html_url": "https://github.com/rust-lang/rust/commit/469b3d51b48cccf0b12240b8b20447a8d1369254"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "c1232fe64b1e241403c3e7b4d3d67bffaa3ad7e0", "filename": "src/non_expressive_names.rs", "status": "modified", "additions": 19, "deletions": 14, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/10f468e679c0e6a6c6dc0e94431f3d63bf3e33e0/src%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10f468e679c0e6a6c6dc0e94431f3d63bf3e33e0/src%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fnon_expressive_names.rs?ref=10f468e679c0e6a6c6dc0e94431f3d63bf3e33e0", "patch": "@@ -2,7 +2,8 @@ use rustc::lint::*;\n use syntax::codemap::Span;\n use syntax::parse::token::InternedString;\n use syntax::ast::*;\n-use syntax::visit::{self, FnKind};\n+use syntax::attr;\n+use syntax::visit;\n use utils::{span_lint_and_then, in_macro, span_lint};\n \n /// **What it does:** This lint warns about names that are very similar and thus confusing\n@@ -237,24 +238,28 @@ impl<'v, 'a, 'b> visit::Visitor<'v> for SimilarNamesLocalVisitor<'a, 'b> {\n         });\n     }\n     fn visit_item(&mut self, _: &'v Item) {\n-        // do nothing\n+        // do not recurse into inner items\n     }\n }\n \n impl EarlyLintPass for NonExpressiveNames {\n-    fn check_fn(&mut self, cx: &EarlyContext, _: FnKind, decl: &FnDecl, blk: &Block, _: Span, _: NodeId) {\n-        let mut visitor = SimilarNamesLocalVisitor {\n-            names: Vec::new(),\n-            cx: cx,\n-            lint: &self,\n-            single_char_names: Vec::new(),\n-        };\n-        // initialize with function arguments\n-        for arg in &decl.inputs {\n-            visit::walk_pat(&mut SimilarNamesNameVisitor(&mut visitor), &arg.pat);\n+    fn check_item(&mut self, cx: &EarlyContext, item: &Item) {\n+        if let ItemKind::Fn(ref decl, _, _, _, _, ref blk) = item.node {\n+            if !attr::contains_name(&item.attrs, \"test\") {\n+                let mut visitor = SimilarNamesLocalVisitor {\n+                    names: Vec::new(),\n+                    cx: cx,\n+                    lint: &self,\n+                    single_char_names: Vec::new(),\n+                };\n+                // initialize with function arguments\n+                for arg in &decl.inputs {\n+                    visit::walk_pat(&mut SimilarNamesNameVisitor(&mut visitor), &arg.pat);\n+                }\n+                // walk all other bindings\n+                visit::walk_block(&mut visitor, blk);\n+            }\n         }\n-        // walk all other bindings\n-        visit::walk_block(&mut visitor, blk);\n     }\n }\n "}]}