{"sha": "7ec50b629c6ef418a819b39fc332f209e8fa4908", "node_id": "C_kwDOAAsO6NoAKDdlYzUwYjYyOWM2ZWY0MThhODE5YjM5ZmMzMzJmMjA5ZThmYTQ5MDg", "commit": {"author": {"name": "Le\u00f3n Orell Valerian Liehr", "email": "liehr.exchange@gmx.net", "date": "2022-11-02T14:25:04Z"}, "committer": {"name": "Le\u00f3n Orell Valerian Liehr", "email": "liehr.exchange@gmx.net", "date": "2022-11-04T19:10:53Z"}, "message": "rustdoc: add test for cross-crate trait-object types\n\nas well as some FIXMEs", "tree": {"sha": "82eaf44de646358b08b59e281eb87876a28992e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82eaf44de646358b08b59e281eb87876a28992e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ec50b629c6ef418a819b39fc332f209e8fa4908", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ec50b629c6ef418a819b39fc332f209e8fa4908", "html_url": "https://github.com/rust-lang/rust/commit/7ec50b629c6ef418a819b39fc332f209e8fa4908", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ec50b629c6ef418a819b39fc332f209e8fa4908/comments", "author": {"login": "fmease", "id": 14913065, "node_id": "MDQ6VXNlcjE0OTEzMDY1", "avatar_url": "https://avatars.githubusercontent.com/u/14913065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmease", "html_url": "https://github.com/fmease", "followers_url": "https://api.github.com/users/fmease/followers", "following_url": "https://api.github.com/users/fmease/following{/other_user}", "gists_url": "https://api.github.com/users/fmease/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmease/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmease/subscriptions", "organizations_url": "https://api.github.com/users/fmease/orgs", "repos_url": "https://api.github.com/users/fmease/repos", "events_url": "https://api.github.com/users/fmease/events{/privacy}", "received_events_url": "https://api.github.com/users/fmease/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fmease", "id": 14913065, "node_id": "MDQ6VXNlcjE0OTEzMDY1", "avatar_url": "https://avatars.githubusercontent.com/u/14913065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmease", "html_url": "https://github.com/fmease", "followers_url": "https://api.github.com/users/fmease/followers", "following_url": "https://api.github.com/users/fmease/following{/other_user}", "gists_url": "https://api.github.com/users/fmease/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmease/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmease/subscriptions", "organizations_url": "https://api.github.com/users/fmease/orgs", "repos_url": "https://api.github.com/users/fmease/repos", "events_url": "https://api.github.com/users/fmease/events{/privacy}", "received_events_url": "https://api.github.com/users/fmease/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71561f82c3e40a86bce330c8fa32aede3958e53d", "url": "https://api.github.com/repos/rust-lang/rust/commits/71561f82c3e40a86bce330c8fa32aede3958e53d", "html_url": "https://github.com/rust-lang/rust/commit/71561f82c3e40a86bce330c8fa32aede3958e53d"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "d9947e59bf825c06a25298a5a5485ba7dc510f62", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7ec50b629c6ef418a819b39fc332f209e8fa4908/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ec50b629c6ef418a819b39fc332f209e8fa4908/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=7ec50b629c6ef418a819b39fc332f209e8fa4908", "patch": "@@ -1683,6 +1683,9 @@ pub(crate) fn clean_middle_ty<'tcx>(\n \n             inline::record_extern_fqn(cx, did, ItemType::Trait);\n \n+            // FIXME(fmease): Hide the trait-object lifetime bound if it coincides with its default\n+            // to partially address #44306. Follow the rules outlined at\n+            // https://doc.rust-lang.org/reference/lifetime-elision.html#default-trait-object-lifetimes\n             let lifetime = clean_middle_region(*reg);\n             let mut bounds = dids\n                 .map(|did| {"}, {"sha": "3da19a13e5331ecb3e83dabc2b014f252eb98a01", "filename": "src/test/rustdoc/assoc-consts.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ec50b629c6ef418a819b39fc332f209e8fa4908/src%2Ftest%2Frustdoc%2Fassoc-consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ec50b629c6ef418a819b39fc332f209e8fa4908/src%2Ftest%2Frustdoc%2Fassoc-consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fassoc-consts.rs?ref=7ec50b629c6ef418a819b39fc332f209e8fa4908", "patch": "@@ -46,6 +46,7 @@ pub fn f(_: &(ToString + 'static)) {}\n impl Bar {\n     // @has assoc_consts/struct.Bar.html '//*[@id=\"associatedconstant.F\"]' \\\n     //      \"const F: fn(_: &(dyn ToString + 'static))\"\n+    // FIXME(fmease): Hide default lifetime, render \"const F: fn(_: &dyn ToString)\"\n     pub const F: fn(_: &(ToString + 'static)) = f;\n }\n "}, {"sha": "9ac2e3d96debdf3fd12db4b7fea67de8be16becc", "filename": "src/test/rustdoc/inline_cross/auxiliary/dyn_trait.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7ec50b629c6ef418a819b39fc332f209e8fa4908/src%2Ftest%2Frustdoc%2Finline_cross%2Fauxiliary%2Fdyn_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ec50b629c6ef418a819b39fc332f209e8fa4908/src%2Ftest%2Frustdoc%2Finline_cross%2Fauxiliary%2Fdyn_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_cross%2Fauxiliary%2Fdyn_trait.rs?ref=7ec50b629c6ef418a819b39fc332f209e8fa4908", "patch": "@@ -0,0 +1,17 @@\n+pub type Ty0 = dyn for<'any> FnOnce(&'any str) -> bool;\n+\n+pub type Ty1<'obj> = dyn std::fmt::Display + 'obj;\n+\n+pub type Ty2 = dyn for<'a, 'r> Container<'r, Item<'a, 'static> = ()>;\n+\n+pub type Ty3<'s> = &'s dyn ToString;\n+\n+pub fn func0(_: &(dyn Fn() + '_)) {}\n+\n+pub fn func1<'func>(_: &(dyn Fn() + 'func)) {}\n+\n+pub trait Container<'r> {\n+    type Item<'a, 'ctx>;\n+}\n+\n+pub trait Shape<'a> {}"}, {"sha": "fa760540e436596d54dc7c359a1ab4112b5333ac", "filename": "src/test/rustdoc/inline_cross/dyn_trait.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/7ec50b629c6ef418a819b39fc332f209e8fa4908/src%2Ftest%2Frustdoc%2Finline_cross%2Fdyn_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ec50b629c6ef418a819b39fc332f209e8fa4908/src%2Ftest%2Frustdoc%2Finline_cross%2Fdyn_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_cross%2Fdyn_trait.rs?ref=7ec50b629c6ef418a819b39fc332f209e8fa4908", "patch": "@@ -0,0 +1,31 @@\n+#![crate_name = \"user\"]\n+\n+// aux-crate:dyn_trait=dyn_trait.rs\n+// edition:2021\n+\n+// @has user/type.Ty0.html\n+// @has - '//*[@class=\"item-decl\"]//code' \"dyn for<'any> FnOnce(&'any str) -> bool + 'static\"\n+// FIXME(fmease): Hide default lifetime bound `'static`\n+pub use dyn_trait::Ty0;\n+\n+// @has user/type.Ty1.html\n+// @has - '//*[@class=\"item-decl\"]//code' \"dyn Display + 'obj\"\n+pub use dyn_trait::Ty1;\n+\n+// @has user/type.Ty2.html\n+// @has - '//*[@class=\"item-decl\"]//code' \"dyn for<'a, 'r> Container<'r, Item<'a, 'static> = ()>\"\n+pub use dyn_trait::Ty2;\n+\n+// @has user/type.Ty3.html\n+// @has - '//*[@class=\"item-decl\"]//code' \"&'s (dyn ToString + 's)\"\n+// FIXME(fmease): Hide default lifetime bound, render \"&'s dyn ToString\"\n+pub use dyn_trait::Ty3;\n+\n+// @has user/fn.func0.html\n+// @has - '//pre[@class=\"rust fn\"]' \"func0(_: &dyn Fn())\"\n+// FIXME(fmease): Show placeholder-lifetime bound, render \"func0(_: &(dyn Fn() + '_))\"\n+pub use dyn_trait::func0;\n+\n+// @has user/fn.func1.html\n+// @has - '//pre[@class=\"rust fn\"]' \"func1<'func>(_: &(dyn Fn() + 'func))\"\n+pub use dyn_trait::func1;"}]}