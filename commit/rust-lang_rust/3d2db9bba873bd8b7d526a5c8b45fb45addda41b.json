{"sha": "3d2db9bba873bd8b7d526a5c8b45fb45addda41b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkMmRiOWJiYTg3M2JkOGI3ZDUyNmE1YzhiNDVmYjQ1YWRkZGE0MWI=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-12T16:54:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-03-12T16:54:30Z"}, "message": "Rollup merge of #48880 - petrochenkov:badstderr, r=kennytm\n\ntidy: Add a check for stray `.stderr` and `.stdout` files in UI test directories", "tree": {"sha": "22fea032fdbc6d44b7cebe23f6c2424695409fe6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22fea032fdbc6d44b7cebe23f6c2424695409fe6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d2db9bba873bd8b7d526a5c8b45fb45addda41b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaprDGCRBK7hj4Ov3rIwAAdHIIAKf+Otn3R6cNxD5CtOfjY9J0\ni6Suj0jHhWS7LOOlmQVqodsbVmRq2F105cpRdYMqi/48m1aPOpdll5jwSf1GXHsB\nFpxLaiPexDWw9qNfVz+2Xjjy7lAVi3eMz98R19dpanh0oVxVpBrocXBF+v1oSJQa\nZVYsvR8z4tg1pm7mxpZ8o4Q9euNsdHokZ0jI5dnwP1995YxMovI2MBmclWY8PjJf\ng6QhLsi5UF7/hKJ7vpLYsVi0r3w/GRAQDNcMeHm2ah02pt6Rz+6p7vkVfBk3DWCg\nX7TWz8+arZtQw5YY+O20/CiP8d8Bx1g8NJ6RA6glV/nZ7O7/jpD8Tl4Kv+J2xbM=\n=GmZb\n-----END PGP SIGNATURE-----\n", "payload": "tree 22fea032fdbc6d44b7cebe23f6c2424695409fe6\nparent 5d0918908acb996e5a44a4873532fc9293f630f1\nparent c1a73d2f4a8ef0003b93c4307930438be4aae9a5\nauthor kennytm <kennytm@gmail.com> 1520873670 +0800\ncommitter GitHub <noreply@github.com> 1520873670 +0800\n\nRollup merge of #48880 - petrochenkov:badstderr, r=kennytm\n\ntidy: Add a check for stray `.stderr` and `.stdout` files in UI test directories\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d2db9bba873bd8b7d526a5c8b45fb45addda41b", "html_url": "https://github.com/rust-lang/rust/commit/3d2db9bba873bd8b7d526a5c8b45fb45addda41b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d2db9bba873bd8b7d526a5c8b45fb45addda41b/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d0918908acb996e5a44a4873532fc9293f630f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d0918908acb996e5a44a4873532fc9293f630f1", "html_url": "https://github.com/rust-lang/rust/commit/5d0918908acb996e5a44a4873532fc9293f630f1"}, {"sha": "c1a73d2f4a8ef0003b93c4307930438be4aae9a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1a73d2f4a8ef0003b93c4307930438be4aae9a5", "html_url": "https://github.com/rust-lang/rust/commit/c1a73d2f4a8ef0003b93c4307930438be4aae9a5"}], "stats": {"total": 168, "additions": 28, "deletions": 140}, "files": [{"sha": "19339800a7a98381770c987238b477a50ab28c42", "filename": "src/test/ui/lifetime-errors/ex3-both-anon-regions-4.stderr", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/5d0918908acb996e5a44a4873532fc9293f630f1/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d0918908acb996e5a44a4873532fc9293f630f1/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-4.stderr?ref=5d0918908acb996e5a44a4873532fc9293f630f1", "patch": "@@ -1,19 +0,0 @@\n-error[E0623]: lifetime mismatch\n-  --> $DIR/ex3-both-anon-regions-4.rs:12:13\n-   |\n-11 | fn foo(z: &mut Vec<(&u8,&u8)>, (x, y): (&u8, &u8)) {\n-   |                     ---                 --- these references are declared with different lifetimes...\n-12 |     z.push((x,y));\n-   |             ^ ...but data flows into `z` here\n-\n-error[E0623]: lifetime mismatch\n-  --> $DIR/ex3-both-anon-regions-4.rs:12:15\n-   |\n-11 | fn foo(z: &mut Vec<(&u8,&u8)>, (x, y): (&u8, &u8)) {\n-   |                         ---                  --- these references are declared with different lifetimes...\n-12 |     z.push((x,y));\n-   |               ^ ...but data flows into `z` here\n-\n-error: aborting due to 2 previous errors\n-\n-If you want more information on this error, try using \"rustc --explain E0623\""}, {"sha": "502b344c89e448b2efcbb48fd689fd2eef8f8bc1", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-to-empty.stderr", "status": "removed", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/5d0918908acb996e5a44a4873532fc9293f630f1/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-to-empty.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d0918908acb996e5a44a4873532fc9293f630f1/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-to-empty.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-to-empty.stderr?ref=5d0918908acb996e5a44a4873532fc9293f630f1", "patch": "@@ -1,45 +0,0 @@\n-warning: not reporting region error due to -Znll\n-  --> $DIR/propagate-approximated-to-empty.rs:41:9\n-   |\n-41 |         demand_y(x, y, x.get())\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: free region `'_#6r` does not outlive free region `'_#4r`\n-  --> $DIR/propagate-approximated-to-empty.rs:41:18\n-   |\n-41 |         demand_y(x, y, x.get())\n-   |                  ^\n-\n-note: No external requirements\n-  --> $DIR/propagate-approximated-to-empty.rs:39:47\n-   |\n-39 |       establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {\n-   |  _______________________________________________^\n-40 | |         // Only works if 'x: 'y:\n-41 | |         demand_y(x, y, x.get())\n-42 | |         //~^ WARN not reporting region error due to -Znll\n-43 | |         //~| ERROR free region `'_#6r` does not outlive free region `'_#4r`\n-44 | |     });\n-   | |_____^\n-   |\n-   = note: defining type: DefId(0/1:18 ~ propagate_approximated_to_empty[317d]::supply[0]::{{closure}}[0]) with closure substs [\n-               i16,\n-               for<'r, 's, 't0, 't1, 't2> extern \"rust-call\" fn((&ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 'r)) std::cell::Cell<&ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 's)) &'_#1r u32>, &ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 't0)) std::cell::Cell<&ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 't1)) u32>, &ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 't2)) std::cell::Cell<&ReLateBound(DebruijnIndex { depth: 1 }, BrNamed(crate0:DefIndex(0:0), 's)) u32>))\n-           ]\n-\n-note: No external requirements\n-  --> $DIR/propagate-approximated-to-empty.rs:38:1\n-   |\n-38 | / fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n-39 | |     establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {\n-40 | |         // Only works if 'x: 'y:\n-41 | |         demand_y(x, y, x.get())\n-...  |\n-44 | |     });\n-45 | | }\n-   | |_^\n-   |\n-   = note: defining type: DefId(0/0:6 ~ propagate_approximated_to_empty[317d]::supply[0]) with substs []\n-\n-error: aborting due to previous error\n-"}, {"sha": "27f93939246c0abb95246b9174cfb9022f68b318", "filename": "src/test/ui/resolve-error.stderr", "status": "removed", "additions": 0, "deletions": 62, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/5d0918908acb996e5a44a4873532fc9293f630f1/src%2Ftest%2Fui%2Fresolve-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d0918908acb996e5a44a4873532fc9293f630f1/src%2Ftest%2Fui%2Fresolve-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve-error.stderr?ref=5d0918908acb996e5a44a4873532fc9293f630f1", "patch": "@@ -1,62 +0,0 @@\n-error: cannot find derive macro `FooWithLongNan` in this scope\n-  --> $DIR/resolve-error.rs:37:10\n-   |\n-37 | #[derive(FooWithLongNan)]\n-   |          ^^^^^^^^^^^^^^ help: try: `FooWithLongName`\n-\n-error: cannot find attribute macro `attr_proc_macra` in this scope\n-  --> $DIR/resolve-error.rs:40:3\n-   |\n-40 | #[attr_proc_macra]\n-   |   ^^^^^^^^^^^^^^^ help: try: `attr_proc_macro`\n-\n-error: cannot find attribute macro `FooWithLongNan` in this scope\n-  --> $DIR/resolve-error.rs:43:3\n-   |\n-43 | #[FooWithLongNan]\n-   |   ^^^^^^^^^^^^^^\n-\n-error: cannot find derive macro `Dlone` in this scope\n-  --> $DIR/resolve-error.rs:46:10\n-   |\n-46 | #[derive(Dlone)]\n-   |          ^^^^^ help: try: `Clone`\n-\n-error: cannot find derive macro `Dlona` in this scope\n-  --> $DIR/resolve-error.rs:49:10\n-   |\n-49 | #[derive(Dlona)]\n-   |          ^^^^^ help: try: `Clona`\n-\n-error: cannot find derive macro `attr_proc_macra` in this scope\n-  --> $DIR/resolve-error.rs:52:10\n-   |\n-52 | #[derive(attr_proc_macra)]\n-   |          ^^^^^^^^^^^^^^^\n-\n-error: cannot find macro `FooWithLongNama!` in this scope\n-  --> $DIR/resolve-error.rs:56:5\n-   |\n-56 |     FooWithLongNama!();\n-   |     ^^^^^^^^^^^^^^^ help: you could try the macro: `FooWithLongNam!`\n-\n-error: cannot find macro `attr_proc_macra!` in this scope\n-  --> $DIR/resolve-error.rs:58:5\n-   |\n-58 |     attr_proc_macra!();\n-   |     ^^^^^^^^^^^^^^^ help: you could try the macro: `attr_proc_mac!`\n-\n-error: cannot find macro `Dlona!` in this scope\n-  --> $DIR/resolve-error.rs:60:5\n-   |\n-60 |     Dlona!();\n-   |     ^^^^^\n-\n-error: cannot find macro `bang_proc_macrp!` in this scope\n-  --> $DIR/resolve-error.rs:62:5\n-   |\n-62 |     bang_proc_macrp!();\n-   |     ^^^^^^^^^^^^^^^ help: you could try the macro: `bang_proc_macro!`\n-\n-error: aborting due to previous error(s)\n-"}, {"sha": "af498129fc440532d451d558b0cd1c464b1ba134", "filename": "src/test/ui/span/loan-extend.stderr", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5d0918908acb996e5a44a4873532fc9293f630f1/src%2Ftest%2Fui%2Fspan%2Floan-extend.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d0918908acb996e5a44a4873532fc9293f630f1/src%2Ftest%2Fui%2Fspan%2Floan-extend.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Floan-extend.stderr?ref=5d0918908acb996e5a44a4873532fc9293f630f1", "patch": "@@ -1,14 +0,0 @@\n-error[E0597]: `short` does not live long enough\n-  --> $DIR/loan-extend.rs:21:1\n-   |\n-19 |     long = borrow(&mut short);\n-   |                        ----- borrow occurs here\n-20 |\n-21 | }\n-   | ^ `short` dropped here while still borrowed\n-   |\n-   = note: values in a scope are dropped in the opposite order they are created\n-\n-error: aborting due to previous error\n-\n-If you want more information on this error, try using \"rustc --explain E0597\""}, {"sha": "06eb055f68e060e179014984c78e68bcaa011bbf", "filename": "src/tools/tidy/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3d2db9bba873bd8b7d526a5c8b45fb45addda41b/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d2db9bba873bd8b7d526a5c8b45fb45addda41b/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs?ref=3d2db9bba873bd8b7d526a5c8b45fb45addda41b", "patch": "@@ -51,6 +51,7 @@ pub mod features;\n pub mod cargo;\n pub mod pal;\n pub mod deps;\n+pub mod ui_tests;\n pub mod unstable_book;\n \n fn filter_dirs(path: &Path) -> bool {"}, {"sha": "24974192795608aa302b8df9ba4bb7d6cd32e62c", "filename": "src/tools/tidy/src/main.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3d2db9bba873bd8b7d526a5c8b45fb45addda41b/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d2db9bba873bd8b7d526a5c8b45fb45addda41b/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs?ref=3d2db9bba873bd8b7d526a5c8b45fb45addda41b", "patch": "@@ -45,6 +45,7 @@ fn main() {\n         deps::check(&path, &mut bad);\n     }\n     deps::check_whitelist(&path, &cargo, &mut bad);\n+    ui_tests::check(&path, &mut bad);\n \n     if bad {\n         eprintln!(\"some tidy checks failed\");"}, {"sha": "f7fec2e667ab959e4ce11f0201c6c030c257a145", "filename": "src/tools/tidy/src/ui_tests.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/3d2db9bba873bd8b7d526a5c8b45fb45addda41b/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d2db9bba873bd8b7d526a5c8b45fb45addda41b/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs?ref=3d2db9bba873bd8b7d526a5c8b45fb45addda41b", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! Tidy check to ensure that there are no stray `.stderr` files in UI test directories.\n+\n+use std::path::Path;\n+\n+pub fn check(path: &Path, bad: &mut bool) {\n+    super::walk_many(&[&path.join(\"test/ui\"), &path.join(\"test/ui-fulldeps\")],\n+                     &mut |_| false,\n+                     &mut |file_path| {\n+        if let Some(ext) = file_path.extension() {\n+            if (ext == \"stderr\" || ext == \"stdout\") && !file_path.with_extension(\"rs\").exists() {\n+                println!(\"Stray file with UI testing output: {:?}\", file_path);\n+                *bad = true;\n+            }\n+        }\n+    });\n+}"}]}