{"sha": "27b0f1e1933280e7c5b242b1e2a1f02777e23c25", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3YjBmMWUxOTMzMjgwZTdjNWIyNDJiMWUyYTFmMDI3NzdlMjNjMjU=", "commit": {"author": {"name": "James Sanderson", "email": "zofrex@gmail.com", "date": "2018-04-24T20:30:13Z"}, "committer": {"name": "James Sanderson", "email": "zofrex@gmail.com", "date": "2018-04-24T20:31:22Z"}, "message": "Gensym arguments for format macro", "tree": {"sha": "3114f946f1f955278af0ec84c332e4eb4b6a724f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3114f946f1f955278af0ec84c332e4eb4b6a724f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/27b0f1e1933280e7c5b242b1e2a1f02777e23c25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/27b0f1e1933280e7c5b242b1e2a1f02777e23c25", "html_url": "https://github.com/rust-lang/rust/commit/27b0f1e1933280e7c5b242b1e2a1f02777e23c25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/27b0f1e1933280e7c5b242b1e2a1f02777e23c25/comments", "author": {"login": "zofrex", "id": 22220, "node_id": "MDQ6VXNlcjIyMjIw", "avatar_url": "https://avatars.githubusercontent.com/u/22220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zofrex", "html_url": "https://github.com/zofrex", "followers_url": "https://api.github.com/users/zofrex/followers", "following_url": "https://api.github.com/users/zofrex/following{/other_user}", "gists_url": "https://api.github.com/users/zofrex/gists{/gist_id}", "starred_url": "https://api.github.com/users/zofrex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zofrex/subscriptions", "organizations_url": "https://api.github.com/users/zofrex/orgs", "repos_url": "https://api.github.com/users/zofrex/repos", "events_url": "https://api.github.com/users/zofrex/events{/privacy}", "received_events_url": "https://api.github.com/users/zofrex/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zofrex", "id": 22220, "node_id": "MDQ6VXNlcjIyMjIw", "avatar_url": "https://avatars.githubusercontent.com/u/22220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zofrex", "html_url": "https://github.com/zofrex", "followers_url": "https://api.github.com/users/zofrex/followers", "following_url": "https://api.github.com/users/zofrex/following{/other_user}", "gists_url": "https://api.github.com/users/zofrex/gists{/gist_id}", "starred_url": "https://api.github.com/users/zofrex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zofrex/subscriptions", "organizations_url": "https://api.github.com/users/zofrex/orgs", "repos_url": "https://api.github.com/users/zofrex/repos", "events_url": "https://api.github.com/users/zofrex/events{/privacy}", "received_events_url": "https://api.github.com/users/zofrex/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d80797b85ec9aee1762d6488cc48ba3f787629d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/d80797b85ec9aee1762d6488cc48ba3f787629d7", "html_url": "https://github.com/rust-lang/rust/commit/d80797b85ec9aee1762d6488cc48ba3f787629d7"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "6b155b6596d08c80cd50d1e09564ceba91ac2aa1", "filename": "src/libsyntax_ext/format.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/27b0f1e1933280e7c5b242b1e2a1f02777e23c25/src%2Flibsyntax_ext%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27b0f1e1933280e7c5b242b1e2a1f02777e23c25/src%2Flibsyntax_ext%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fformat.rs?ref=27b0f1e1933280e7c5b242b1e2a1f02777e23c25", "patch": "@@ -543,6 +543,10 @@ impl<'a, 'b> Context<'a, 'b> {\n         let mut pats = Vec::new();\n         let mut heads = Vec::new();\n \n+        let names_pos: Vec<_> = (0..self.args.len()).map(|i| {\n+            self.ecx.ident_of(&format!(\"arg{}\", i)).gensym()\n+        }).collect();\n+\n         // First, build up the static array which will become our precompiled\n         // format \"string\"\n         let pieces = self.ecx.expr_vec_slice(self.fmtsp, self.str_pieces);\n@@ -560,7 +564,7 @@ impl<'a, 'b> Context<'a, 'b> {\n         // of each variable because we don't want to move out of the arguments\n         // passed to this function.\n         for (i, e) in self.args.into_iter().enumerate() {\n-            let name = self.ecx.ident_of(&format!(\"__arg{}\", i));\n+            let name = names_pos[i];\n             let span =\n                 DUMMY_SP.with_ctxt(e.span.ctxt().apply_mark(self.ecx.current_expansion.mark));\n             pats.push(self.ecx.pat_ident(span, name));\n@@ -570,14 +574,12 @@ impl<'a, 'b> Context<'a, 'b> {\n             heads.push(self.ecx.expr_addr_of(e.span, e));\n         }\n         for pos in self.count_args {\n-            let name = self.ecx.ident_of(&match pos {\n-                Exact(i) => format!(\"__arg{}\", i),\n-                _ => panic!(\"should never happen\"),\n-            });\n-            let span = match pos {\n-                Exact(i) => spans_pos[i],\n+            let index = match pos {\n+                Exact(i) => i,\n                 _ => panic!(\"should never happen\"),\n             };\n+            let name = names_pos[index];\n+            let span = spans_pos[index];\n             counts.push(Context::format_arg(self.ecx, self.macsp, span, &Count, name));\n         }\n "}]}