{"sha": "b1c2b9891dea834f28e921ce40107ea8bcb4cbc6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxYzJiOTg5MWRlYTgzNGYyOGU5MjFjZTQwMTA3ZWE4YmNiNGNiYzY=", "commit": {"author": {"name": "DPC", "email": "dylan.dpc@gmail.com", "date": "2020-08-25T01:00:27Z"}, "committer": {"name": "DPC", "email": "dylan.dpc@gmail.com", "date": "2020-08-25T01:00:27Z"}, "message": "cleanup", "tree": {"sha": "4fc12a4a3bb10907d11fa3ff72cb6cd4d1e3dd43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4fc12a4a3bb10907d11fa3ff72cb6cd4d1e3dd43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1c2b9891dea834f28e921ce40107ea8bcb4cbc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1c2b9891dea834f28e921ce40107ea8bcb4cbc6", "html_url": "https://github.com/rust-lang/rust/commit/b1c2b9891dea834f28e921ce40107ea8bcb4cbc6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1c2b9891dea834f28e921ce40107ea8bcb4cbc6/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd1cd672e8138820a17bcec4e67f99ff394566b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd1cd672e8138820a17bcec4e67f99ff394566b1", "html_url": "https://github.com/rust-lang/rust/commit/dd1cd672e8138820a17bcec4e67f99ff394566b1"}], "stats": {"total": 14, "additions": 5, "deletions": 9}, "files": [{"sha": "c1fc029cc477e57727ffefb7a8335bfc7a846b86", "filename": "src/librustc_mir/borrow_check/type_check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1c2b9891dea834f28e921ce40107ea8bcb4cbc6/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1c2b9891dea834f28e921ce40107ea8bcb4cbc6/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fmod.rs?ref=b1c2b9891dea834f28e921ce40107ea8bcb4cbc6", "patch": "@@ -649,7 +649,7 @@ impl<'a, 'b, 'tcx> TypeVerifier<'a, 'b, 'tcx> {\n                 PlaceTy::from_ty(match base_ty.kind {\n                     ty::Array(inner, _) => {\n                         assert!(!from_end, \"array subslices should not use from_end\");\n-                        tcx.mk_array(inner, (to - from) as u64)\n+                        tcx.mk_array(inner, to - from)\n                     }\n                     ty::Slice(..) => {\n                         assert!(from_end, \"slice subslices should use from_end\");"}, {"sha": "6ba6103b311a3e3b90d7cf8e694846df382cb634", "filename": "src/librustc_mir/interpret/place.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b1c2b9891dea834f28e921ce40107ea8bcb4cbc6/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1c2b9891dea834f28e921ce40107ea8bcb4cbc6/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fplace.rs?ref=b1c2b9891dea834f28e921ce40107ea8bcb4cbc6", "patch": "@@ -549,17 +549,17 @@ where\n \n             ConstantIndex { offset, min_length, from_end } => {\n                 let n = base.len(self)?;\n-                if n < u64::from(min_length) {\n+                if n < min_length {\n                     // This can only be reached in ConstProp and non-rustc-MIR.\n                     throw_ub!(BoundsCheckFailed { len: min_length.into(), index: n });\n                 }\n \n                 let index = if from_end {\n                     assert!(0 < offset && offset <= min_length);\n-                    n.checked_sub(u64::from(offset)).unwrap()\n+                    n.checked_sub(offset).unwrap()\n                 } else {\n                     assert!(offset < min_length);\n-                    u64::from(offset)\n+                    offset\n                 };\n \n                 self.mplace_index(base, index)?"}, {"sha": "6a7505291efbe5e41eff80e4d5ece4adc280967a", "filename": "src/librustc_mir/util/aggregate.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b1c2b9891dea834f28e921ce40107ea8bcb4cbc6/src%2Flibrustc_mir%2Futil%2Faggregate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1c2b9891dea834f28e921ce40107ea8bcb4cbc6/src%2Flibrustc_mir%2Futil%2Faggregate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Faggregate.rs?ref=b1c2b9891dea834f28e921ce40107ea8bcb4cbc6", "patch": "@@ -4,6 +4,7 @@ use rustc_middle::ty::{Ty, TyCtxt};\n use rustc_target::abi::VariantIdx;\n \n use std::iter::TrustedLen;\n+use std::convert::TryFrom;\n \n /// Expand `lhs = Rvalue::Aggregate(kind, operands)` into assignments to the fields.\n ///"}, {"sha": "653dffc22cf74208fb31967defdaf115e35cf857", "filename": "src/librustc_mir/util/elaborate_drops.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b1c2b9891dea834f28e921ce40107ea8bcb4cbc6/src%2Flibrustc_mir%2Futil%2Felaborate_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1c2b9891dea834f28e921ce40107ea8bcb4cbc6/src%2Flibrustc_mir%2Futil%2Felaborate_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Felaborate_drops.rs?ref=b1c2b9891dea834f28e921ce40107ea8bcb4cbc6", "patch": "@@ -10,8 +10,6 @@ use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_target::abi::VariantIdx;\n use std::fmt;\n \n-use std::convert::TryInto;\n-\n /// The value of an inserted drop flag.\n #[derive(Debug, PartialEq, Eq, Copy, Clone)]\n pub enum DropFlagState {\n@@ -744,9 +742,6 @@ where\n         let tcx = self.tcx();\n \n         if let Some(size) = opt_size {\n-            let size: u64 = size.try_into().unwrap_or_else(|_| {\n-                bug!(\"move out check isn't implemented for array sizes bigger than u64::MAX\");\n-            });\n             let fields: Vec<(Place<'tcx>, Option<D::Path>)> = (0..size)\n                 .map(|i| {\n                     ("}]}