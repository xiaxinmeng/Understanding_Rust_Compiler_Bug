{"sha": "34dacb80cea4071233fb74b479e1f8c148a0be03", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0ZGFjYjgwY2VhNDA3MTIzM2ZiNzRiNDc5ZTFmOGMxNDhhMGJlMDM=", "commit": {"author": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2014-10-22T17:58:48Z"}, "committer": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2014-10-25T22:53:30Z"}, "message": "Reduce the size of the TokenTree", "tree": {"sha": "77ad86a151e8757e9f5e4eded7e62488510dfe9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77ad86a151e8757e9f5e4eded7e62488510dfe9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34dacb80cea4071233fb74b479e1f8c148a0be03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34dacb80cea4071233fb74b479e1f8c148a0be03", "html_url": "https://github.com/rust-lang/rust/commit/34dacb80cea4071233fb74b479e1f8c148a0be03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34dacb80cea4071233fb74b479e1f8c148a0be03/comments", "author": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfb4163f8380e9a1aaf64a7474de30634bca4034", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfb4163f8380e9a1aaf64a7474de30634bca4034", "html_url": "https://github.com/rust-lang/rust/commit/dfb4163f8380e9a1aaf64a7474de30634bca4034"}], "stats": {"total": 56, "additions": 34, "deletions": 22}, "files": [{"sha": "a6156bfa496b306a9207b1d306abffe8920d9853", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/34dacb80cea4071233fb74b479e1f8c148a0be03/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34dacb80cea4071233fb74b479e1f8c148a0be03/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=34dacb80cea4071233fb74b479e1f8c148a0be03", "patch": "@@ -629,8 +629,7 @@ pub enum TokenTree {\n     /// A single token\n     TtToken(Span, ::parse::token::Token),\n     /// A delimited sequence of token trees\n-    // FIXME(eddyb) #6308 Use Rc<[TokenTree]> after DST.\n-    TtDelimited(Span, Delimiter, Rc<Vec<TokenTree>>, Delimiter),\n+    TtDelimited(Span, Rc<(Delimiter, Vec<TokenTree>, Delimiter)>),\n \n     // These only make sense for right-hand-sides of MBE macros:\n \n@@ -649,7 +648,7 @@ impl TokenTree {\n     pub fn get_span(&self) -> Span {\n         match *self {\n             TtToken(span, _)           => span,\n-            TtDelimited(span, _, _, _) => span,\n+            TtDelimited(span, _)       => span,\n             TtSequence(span, _, _, _)  => span,\n             TtNonterminal(span, _)     => span,\n         }"}, {"sha": "6f1fd90adfa4b6591a58d80f596d184fa1c51f5b", "filename": "src/libsyntax/ext/quote.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/34dacb80cea4071233fb74b479e1f8c148a0be03/src%2Flibsyntax%2Fext%2Fquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34dacb80cea4071233fb74b479e1f8c148a0be03/src%2Flibsyntax%2Fext%2Fquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fquote.rs?ref=34dacb80cea4071233fb74b479e1f8c148a0be03", "patch": "@@ -651,7 +651,8 @@ fn mk_tt(cx: &ExtCtxt, _: Span, tt: &ast::TokenTree) -> Vec<P<ast::Stmt>> {\n                                     vec!(e_tok));\n             vec!(cx.stmt_expr(e_push))\n         },\n-        ast::TtDelimited(sp, ref open, ref tts, ref close) => {\n+        ast::TtDelimited(sp, ref delimed) => {\n+            let (ref open, ref tts, ref close) = **delimed;\n             mk_tt(cx, sp, &open.to_tt()).into_iter()\n                 .chain(tts.iter().flat_map(|tt| mk_tt(cx, sp, tt).into_iter()))\n                 .chain(mk_tt(cx, sp, &close.to_tt()).into_iter())"}, {"sha": "8b45cf34e80481b0b972dcd332e382b64e8e4693", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/34dacb80cea4071233fb74b479e1f8c148a0be03/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34dacb80cea4071233fb74b479e1f8c148a0be03/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=34dacb80cea4071233fb74b479e1f8c148a0be03", "patch": "@@ -172,7 +172,10 @@ fn generic_extension<'cx>(cx: &'cx ExtCtxt,\n                     MatchedNonterminal(NtTT(ref tt)) => {\n                         match **tt {\n                             // ignore delimiters\n-                            TtDelimited(_, _, ref tts, _) => (**tts).clone(),\n+                            TtDelimited(_, ref delimed) => {\n+                                let (_, ref tts, _) = **delimed;\n+                                tts.clone()\n+                            },\n                             _ => cx.span_fatal(sp, \"macro rhs must be delimited\"),\n                         }\n                     },"}, {"sha": "fde950e49997ce4aa9abf792f760495e9f250d49", "filename": "src/libsyntax/ext/tt/transcribe.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/34dacb80cea4071233fb74b479e1f8c148a0be03/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34dacb80cea4071233fb74b479e1f8c148a0be03/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs?ref=34dacb80cea4071233fb74b479e1f8c148a0be03", "patch": "@@ -128,9 +128,13 @@ impl Add<LockstepIterSize, LockstepIterSize> for LockstepIterSize {\n \n fn lockstep_iter_size(t: &TokenTree, r: &TtReader) -> LockstepIterSize {\n     match *t {\n-        // The opening and closing delimiters are both tokens, so they are\n-        // treated as `LisUnconstrained`.\n-        TtDelimited(_, _, ref tts, _) | TtSequence(_, ref tts, _, _) => {\n+        TtDelimited(_, ref delimed) => {\n+            let (_, ref tts, _) = **delimed;\n+            tts.iter().fold(LisUnconstrained, |size, tt| {\n+                size + lockstep_iter_size(tt, r)\n+            })\n+        },\n+        TtSequence(_, ref tts, _, _) => {\n             tts.iter().fold(LisUnconstrained, |size, tt| {\n                 size + lockstep_iter_size(tt, r)\n             })\n@@ -202,7 +206,8 @@ pub fn tt_next_token(r: &mut TtReader) -> TokenAndSpan {\n             (*frame.forest)[frame.idx].clone()\n         };\n         match t {\n-            TtDelimited(_, open, tts, close) => {\n+            TtDelimited(_, ref delimed) => {\n+                let (ref open, ref tts, ref close) = **delimed;\n                 let mut forest = Vec::with_capacity(1 + tts.len() + 1);\n                 forest.push(open.to_tt());\n                 forest.extend(tts.iter().map(|x| (*x).clone()));"}, {"sha": "0f9ab5c6b261ece7ff24a099f92b4a8c4a4c8e9e", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/34dacb80cea4071233fb74b479e1f8c148a0be03/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34dacb80cea4071233fb74b479e1f8c148a0be03/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=34dacb80cea4071233fb74b479e1f8c148a0be03", "patch": "@@ -571,17 +571,20 @@ pub fn noop_fold_tt<T: Folder>(tt: &TokenTree, fld: &mut T) -> TokenTree {\n     match *tt {\n         TtToken(span, ref tok) =>\n             TtToken(span, fld.fold_token(tok.clone())),\n-        TtDelimited(span, ref open, ref tts, ref close) =>\n-            TtDelimited(span,\n-                        Delimiter {\n-                            span: open.span,\n-                            token: fld.fold_token(open.token.clone())\n-                        },\n-                        Rc::new(fld.fold_tts(tts.as_slice())),\n-                        Delimiter {\n-                            span: close.span,\n-                            token: fld.fold_token(close.token.clone())\n-                        }),\n+        TtDelimited(span, ref delimed) => {\n+            let (ref open, ref tts, ref close) = **delimed;\n+            TtDelimited(span, Rc::new((\n+                            Delimiter {\n+                                span: open.span,\n+                                token: fld.fold_token(open.token.clone())\n+                            },\n+                            fld.fold_tts(tts.as_slice()),\n+                            Delimiter {\n+                                span: close.span,\n+                                token: fld.fold_token(close.token.clone())\n+                            },\n+                        )))\n+        },\n         TtSequence(span, ref pattern, ref sep, is_optional) =>\n             TtSequence(span,\n                        Rc::new(fld.fold_tts(pattern.as_slice())),"}, {"sha": "f8fa053b7aeabb14e1f56a061bc89d6239dcfb95", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/34dacb80cea4071233fb74b479e1f8c148a0be03/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34dacb80cea4071233fb74b479e1f8c148a0be03/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=34dacb80cea4071233fb74b479e1f8c148a0be03", "patch": "@@ -2615,7 +2615,7 @@ impl<'a> Parser<'a> {\n                 // Expand to cover the entire delimited token tree\n                 let span = Span { hi: self.span.hi, ..pre_span };\n \n-                TtDelimited(span, open, Rc::new(tts), close)\n+                TtDelimited(span, Rc::new((open, tts, close)))\n             }\n             _ => parse_non_delim_tt_tok(self)\n         }"}, {"sha": "97c177b696c01a20b1cc9fedf866e9f93af55869", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/34dacb80cea4071233fb74b479e1f8c148a0be03/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34dacb80cea4071233fb74b479e1f8c148a0be03/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=34dacb80cea4071233fb74b479e1f8c148a0be03", "patch": "@@ -1020,7 +1020,8 @@ impl<'a> State<'a> {\n     /// expression arguments as expressions). It can be done! I think.\n     pub fn print_tt(&mut self, tt: &ast::TokenTree) -> IoResult<()> {\n         match *tt {\n-            ast::TtDelimited(_, ref open, ref tts, ref close) => {\n+            ast::TtDelimited(_, ref delimed) => {\n+                let (ref open, ref tts, ref close) = **delimed;\n                 try!(word(&mut self.s, parse::token::to_string(&open.token).as_slice()));\n                 try!(space(&mut self.s));\n                 try!(self.print_tts(tts.as_slice()));"}]}