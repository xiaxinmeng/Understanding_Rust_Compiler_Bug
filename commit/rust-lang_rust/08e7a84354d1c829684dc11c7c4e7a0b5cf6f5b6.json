{"sha": "08e7a84354d1c829684dc11c7c4e7a0b5cf6f5b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4ZTdhODQzNTRkMWM4Mjk2ODRkYzExYzdjNGU3YTBiNWNmNmY1YjY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-07-06T11:09:00Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-07-06T11:09:00Z"}, "message": "remove another unused method", "tree": {"sha": "a60e5daf043cfd1efcb40fd29017bfee65426644", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a60e5daf043cfd1efcb40fd29017bfee65426644"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08e7a84354d1c829684dc11c7c4e7a0b5cf6f5b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08e7a84354d1c829684dc11c7c4e7a0b5cf6f5b6", "html_url": "https://github.com/rust-lang/rust/commit/08e7a84354d1c829684dc11c7c4e7a0b5cf6f5b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08e7a84354d1c829684dc11c7c4e7a0b5cf6f5b6/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1938edb4d96f2c442ca67ae13f130e3657d589d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/1938edb4d96f2c442ca67ae13f130e3657d589d7", "html_url": "https://github.com/rust-lang/rust/commit/1938edb4d96f2c442ca67ae13f130e3657d589d7"}], "stats": {"total": 13, "additions": 0, "deletions": 13}, "files": [{"sha": "4a59d845b3b42eebf76cf722e7e642d200126f68", "filename": "src/librustc/mir/interpret/value.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/08e7a84354d1c829684dc11c7c4e7a0b5cf6f5b6/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08e7a84354d1c829684dc11c7c4e7a0b5cf6f5b6/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs?ref=08e7a84354d1c829684dc11c7c4e7a0b5cf6f5b6", "patch": "@@ -262,19 +262,6 @@ impl<'tcx, Tag> Scalar<Tag> {\n         }\n     }\n \n-    /// Returns this pointer's offset from the allocation base, or from NULL (for\n-    /// integer pointers).\n-    #[inline]\n-    pub fn get_ptr_offset(self, cx: &impl HasDataLayout) -> Size {\n-        match self {\n-            Scalar::Raw { data, size } => {\n-                assert_eq!(size as u64, cx.pointer_size().bytes());\n-                Size::from_bytes(data as u64)\n-            }\n-            Scalar::Ptr(ptr) => ptr.offset,\n-        }\n-    }\n-\n     #[inline]\n     pub fn from_bool(b: bool) -> Self {\n         Scalar::Raw { data: b as u128, size: 1 }"}]}