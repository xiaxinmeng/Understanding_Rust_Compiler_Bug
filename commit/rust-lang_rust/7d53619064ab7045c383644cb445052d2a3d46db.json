{"sha": "7d53619064ab7045c383644cb445052d2a3d46db", "node_id": "C_kwDOAAsO6NoAKDdkNTM2MTkwNjRhYjcwNDVjMzgzNjQ0Y2I0NDUwNTJkMmEzZDQ2ZGI", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-06T18:27:27Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-07T14:37:49Z"}, "message": "Force the allocator to be looked up from the perspective of the rustc binary\n\nFixes #1303", "tree": {"sha": "c7e189a8b6eb62bd513785a083482edc48cdca05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7e189a8b6eb62bd513785a083482edc48cdca05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d53619064ab7045c383644cb445052d2a3d46db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d53619064ab7045c383644cb445052d2a3d46db", "html_url": "https://github.com/rust-lang/rust/commit/7d53619064ab7045c383644cb445052d2a3d46db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d53619064ab7045c383644cb445052d2a3d46db/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8494882773392b461e9609e4f4a60818b26e964c", "url": "https://api.github.com/repos/rust-lang/rust/commits/8494882773392b461e9609e4f4a60818b26e964c", "html_url": "https://github.com/rust-lang/rust/commit/8494882773392b461e9609e4f4a60818b26e964c"}], "stats": {"total": 43, "additions": 38, "deletions": 5}, "files": [{"sha": "9d3ed3ac5d0c38dc7d7d656c1821f9467448f699", "filename": ".github/workflows/main.yml", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7d53619064ab7045c383644cb445052d2a3d46db/.github%2Fworkflows%2Fmain.yml", "raw_url": "https://github.com/rust-lang/rust/raw/7d53619064ab7045c383644cb445052d2a3d46db/.github%2Fworkflows%2Fmain.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fmain.yml?ref=7d53619064ab7045c383644cb445052d2a3d46db", "patch": "@@ -34,7 +34,7 @@ jobs:\n       fail-fast: false\n       matrix:\n         include:\n-          - os: ubuntu-20.04 # FIXME switch to ubuntu-22.04 once #1303 is fixed\n+          - os: ubuntu-latest\n             env:\n               TARGET_TRIPLE: x86_64-unknown-linux-gnu\n           - os: macos-latest\n@@ -226,7 +226,8 @@ jobs:\n       fail-fast: false\n       matrix:\n         include:\n-          - os: ubuntu-20.04 # FIXME switch to ubuntu-22.04 once #1303 is fixed\n+          # FIXME update at some point in the future once most distros use a newer glibc\n+          - os: ubuntu-20.04\n             env:\n               TARGET_TRIPLE: x86_64-unknown-linux-gnu\n           - os: macos-latest"}, {"sha": "8a53baa763a7debeddf78d5769708676bfed9e7c", "filename": "src/compiler_builtins.rs", "status": "modified", "additions": 35, "deletions": 3, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/7d53619064ab7045c383644cb445052d2a3d46db/src%2Fcompiler_builtins.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d53619064ab7045c383644cb445052d2a3d46db/src%2Fcompiler_builtins.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiler_builtins.rs?ref=7d53619064ab7045c383644cb445052d2a3d46db", "patch": "@@ -1,14 +1,33 @@\n+#[cfg(all(unix, feature = \"jit\"))]\n+use std::ffi::c_int;\n+#[cfg(feature = \"jit\")]\n+use std::ffi::c_void;\n+\n+// FIXME replace with core::ffi::c_size_t once stablized\n+#[allow(non_camel_case_types)]\n+#[cfg(feature = \"jit\")]\n+type size_t = usize;\n+\n macro_rules! builtin_functions {\n-    ($register:ident; $(fn $name:ident($($arg_name:ident: $arg_ty:ty),*) -> $ret_ty:ty;)*) => {\n+    (\n+        $register:ident;\n+        $(\n+            $(#[$attr:meta])?\n+            fn $name:ident($($arg_name:ident: $arg_ty:ty),*) -> $ret_ty:ty;\n+        )*\n+    ) => {\n         #[cfg(feature = \"jit\")]\n         #[allow(improper_ctypes)]\n         extern \"C\" {\n-            $(fn $name($($arg_name: $arg_ty),*) -> $ret_ty;)*\n+            $(\n+                $(#[$attr])?\n+                fn $name($($arg_name: $arg_ty),*) -> $ret_ty;\n+            )*\n         }\n \n         #[cfg(feature = \"jit\")]\n         pub(crate) fn $register(builder: &mut cranelift_jit::JITBuilder) {\n-            for (name, val) in [$((stringify!($name), $name as *const u8)),*] {\n+            for (name, val) in [$($(#[$attr])? (stringify!($name), $name as *const u8)),*] {\n                 builder.symbol(name, val);\n             }\n         }\n@@ -40,4 +59,17 @@ builtin_functions! {\n     fn __fixdfti(f: f64) -> i128;\n     fn __fixunssfti(f: f32) -> u128;\n     fn __fixunsdfti(f: f64) -> u128;\n+\n+    // allocator\n+    // NOTE: These need to be mentioned here despite not being part of compiler_builtins because\n+    // newer glibc resolve dlsym(\"malloc\") to libc.so despite the override in the rustc binary to\n+    // use jemalloc. Libraries opened with dlopen still get the jemalloc version, causing multiple\n+    // allocators to be mixed, resulting in a crash.\n+    fn calloc(nobj: size_t, size: size_t) -> *mut c_void;\n+    #[cfg(unix)]\n+    fn posix_memalign(memptr: *mut *mut c_void, align: size_t, size: size_t) -> c_int;\n+    fn malloc(size: size_t) -> *mut c_void;\n+    fn realloc(p: *mut c_void, size: size_t) -> *mut c_void;\n+    fn free(p: *mut c_void) -> ();\n+\n }"}]}