{"sha": "94e4b5ec316993200d75276b4e7c16a059bf3a57", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0ZTRiNWVjMzE2OTkzMjAwZDc1Mjc2YjRlN2MxNmEwNTliZjNhNTc=", "commit": {"author": {"name": "Vardan Margaryan", "email": "v.t.margaryan@gmail.com", "date": "2020-05-09T21:08:41Z"}, "committer": {"name": "Vardan Margaryan", "email": "v.t.margaryan@gmail.com", "date": "2020-05-14T19:36:46Z"}, "message": "Add the redundant_wildcard_enum_match lint", "tree": {"sha": "d20f2dff8cd920f7cab5f27faa7b0d2c0d410c6b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d20f2dff8cd920f7cab5f27faa7b0d2c0d410c6b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94e4b5ec316993200d75276b4e7c16a059bf3a57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94e4b5ec316993200d75276b4e7c16a059bf3a57", "html_url": "https://github.com/rust-lang/rust/commit/94e4b5ec316993200d75276b4e7c16a059bf3a57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94e4b5ec316993200d75276b4e7c16a059bf3a57/comments", "author": {"login": "vtmargaryan", "id": 8739550, "node_id": "MDQ6VXNlcjg3Mzk1NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8739550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vtmargaryan", "html_url": "https://github.com/vtmargaryan", "followers_url": "https://api.github.com/users/vtmargaryan/followers", "following_url": "https://api.github.com/users/vtmargaryan/following{/other_user}", "gists_url": "https://api.github.com/users/vtmargaryan/gists{/gist_id}", "starred_url": "https://api.github.com/users/vtmargaryan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vtmargaryan/subscriptions", "organizations_url": "https://api.github.com/users/vtmargaryan/orgs", "repos_url": "https://api.github.com/users/vtmargaryan/repos", "events_url": "https://api.github.com/users/vtmargaryan/events{/privacy}", "received_events_url": "https://api.github.com/users/vtmargaryan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vtmargaryan", "id": 8739550, "node_id": "MDQ6VXNlcjg3Mzk1NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8739550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vtmargaryan", "html_url": "https://github.com/vtmargaryan", "followers_url": "https://api.github.com/users/vtmargaryan/followers", "following_url": "https://api.github.com/users/vtmargaryan/following{/other_user}", "gists_url": "https://api.github.com/users/vtmargaryan/gists{/gist_id}", "starred_url": "https://api.github.com/users/vtmargaryan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vtmargaryan/subscriptions", "organizations_url": "https://api.github.com/users/vtmargaryan/orgs", "repos_url": "https://api.github.com/users/vtmargaryan/repos", "events_url": "https://api.github.com/users/vtmargaryan/events{/privacy}", "received_events_url": "https://api.github.com/users/vtmargaryan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1842b0cace2a73b55e6d85dc145a102603c7e5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1842b0cace2a73b55e6d85dc145a102603c7e5a", "html_url": "https://github.com/rust-lang/rust/commit/e1842b0cace2a73b55e6d85dc145a102603c7e5a"}], "stats": {"total": 104, "additions": 104, "deletions": 0}, "files": [{"sha": "d6298fec65a4fac3f5d6bc9778d0c70668ddce42", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/94e4b5ec316993200d75276b4e7c16a059bf3a57/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/94e4b5ec316993200d75276b4e7c16a059bf3a57/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=94e4b5ec316993200d75276b4e7c16a059bf3a57", "patch": "@@ -1439,6 +1439,7 @@ Released 2018-09-13\n [`match_same_arms`]: https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms\n [`match_single_binding`]: https://rust-lang.github.io/rust-clippy/master/index.html#match_single_binding\n [`match_wild_err_arm`]: https://rust-lang.github.io/rust-clippy/master/index.html#match_wild_err_arm\n+[`match_wildcard_for_single_variants`]: https://rust-lang.github.io/rust-clippy/master/index.html#match_wildcard_for_single_variants\n [`maybe_infinite_iter`]: https://rust-lang.github.io/rust-clippy/master/index.html#maybe_infinite_iter\n [`mem_discriminant_non_enum`]: https://rust-lang.github.io/rust-clippy/master/index.html#mem_discriminant_non_enum\n [`mem_forget`]: https://rust-lang.github.io/rust-clippy/master/index.html#mem_forget"}, {"sha": "41046c18ed2536b0d43797e4135ce867087d5db0", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/94e4b5ec316993200d75276b4e7c16a059bf3a57/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94e4b5ec316993200d75276b4e7c16a059bf3a57/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=94e4b5ec316993200d75276b4e7c16a059bf3a57", "patch": "@@ -641,6 +641,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         &matches::MATCH_OVERLAPPING_ARM,\n         &matches::MATCH_REF_PATS,\n         &matches::MATCH_SINGLE_BINDING,\n+        &matches::MATCH_WILDCARD_FOR_SINGLE_VARIANTS,\n         &matches::MATCH_WILD_ERR_ARM,\n         &matches::REST_PAT_IN_FULLY_BOUND_STRUCTS,\n         &matches::SINGLE_MATCH,\n@@ -1147,6 +1148,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&macro_use::MACRO_USE_IMPORTS),\n         LintId::of(&match_on_vec_items::MATCH_ON_VEC_ITEMS),\n         LintId::of(&matches::MATCH_BOOL),\n+        LintId::of(&matches::MATCH_WILDCARD_FOR_SINGLE_VARIANTS),\n         LintId::of(&matches::SINGLE_MATCH_ELSE),\n         LintId::of(&methods::FILTER_MAP),\n         LintId::of(&methods::FILTER_MAP_NEXT),"}, {"sha": "42a6c4166194eacb9e00aedecadddd0426c0ba87", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/94e4b5ec316993200d75276b4e7c16a059bf3a57/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94e4b5ec316993200d75276b4e7c16a059bf3a57/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=94e4b5ec316993200d75276b4e7c16a059bf3a57", "patch": "@@ -229,6 +229,40 @@ declare_clippy_lint! {\n     \"a wildcard enum match arm using `_`\"\n }\n \n+declare_clippy_lint! {\n+    /// **What it does:** Checks for wildcard enum matches for a single variant.\n+    ///\n+    /// **Why is this bad?** New enum variants added by library updates can be missed.\n+    ///\n+    /// **Known problems:** Suggested replacements may not use correct path to enum\n+    /// if it's not present in the current scope.\n+    ///\n+    /// **Example:**\n+    ///\n+    /// ```rust\n+    /// # enum Foo { A, B, C }\n+    /// # let x = Foo::B;\n+    /// match x {\n+    ///     Foo::A => {},\n+    ///     Foo::B => {},\n+    ///     _ => {},\n+    /// }\n+    /// ```\n+    /// Use instead:\n+    /// ```rust\n+    /// # enum Foo { A, B, C }\n+    /// # let x = Foo::B;\n+    /// match x {\n+    ///     Foo::A => {},\n+    ///     Foo::B => {},\n+    ///     Foo::C => {},\n+    /// }\n+    /// ```\n+    pub MATCH_WILDCARD_FOR_SINGLE_VARIANTS,\n+    pedantic,\n+    \"a wildcard enum match for a single variant\"\n+}\n+\n declare_clippy_lint! {\n     /// **What it does:** Checks for wildcard pattern used with others patterns in same match arm.\n     ///\n@@ -356,6 +390,7 @@ impl_lint_pass!(Matches => [\n     MATCH_WILD_ERR_ARM,\n     MATCH_AS_REF,\n     WILDCARD_ENUM_MATCH_ARM,\n+    MATCH_WILDCARD_FOR_SINGLE_VARIANTS,\n     WILDCARD_IN_OR_PATTERNS,\n     MATCH_SINGLE_BINDING,\n     INFALLIBLE_DESTRUCTURING_MATCH,\n@@ -766,6 +801,19 @@ fn check_wild_enum_match(cx: &LateContext<'_, '_>, ex: &Expr<'_>, arms: &[Arm<'_\n             }\n         }\n \n+        if suggestion.len() == 1 {\n+            // No need to check for non-exhaustive enum as in that case len would be greater than 1\n+            span_lint_and_sugg(\n+                cx,\n+                MATCH_WILDCARD_FOR_SINGLE_VARIANTS,\n+                wildcard_span,\n+                message,\n+                \"try this\",\n+                suggestion[0].clone(),\n+                Applicability::MachineApplicable,\n+            )\n+        };\n+\n         span_lint_and_sugg(\n             cx,\n             WILDCARD_ENUM_MATCH_ARM,"}, {"sha": "250a7c09f7812704becdfa5a647cd3f42017d300", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/94e4b5ec316993200d75276b4e7c16a059bf3a57/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94e4b5ec316993200d75276b4e7c16a059bf3a57/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=94e4b5ec316993200d75276b4e7c16a059bf3a57", "patch": "@@ -1200,6 +1200,13 @@ pub static ref ALL_LINTS: Vec<Lint> = vec![\n         deprecation: None,\n         module: \"matches\",\n     },\n+    Lint {\n+        name: \"match_wildcard_for_single_variants\",\n+        group: \"pedantic\",\n+        desc: \"a wildcard enum match for a single variant\",\n+        deprecation: None,\n+        module: \"matches\",\n+    },\n     Lint {\n         name: \"maybe_infinite_iter\",\n         group: \"pedantic\","}, {"sha": "5f1a559f5914307e1d860d2e084546a2e4bcebdd", "filename": "tests/ui/match_wildcard_for_single_variants.fixed", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/94e4b5ec316993200d75276b4e7c16a059bf3a57/tests%2Fui%2Fmatch_wildcard_for_single_variants.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/94e4b5ec316993200d75276b4e7c16a059bf3a57/tests%2Fui%2Fmatch_wildcard_for_single_variants.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_wildcard_for_single_variants.fixed?ref=94e4b5ec316993200d75276b4e7c16a059bf3a57", "patch": "@@ -0,0 +1,18 @@\n+// run-rustfix\n+\n+#![warn(clippy::match_wildcard_for_single_variants)]\n+#![allow(dead_code)]\n+\n+enum Foo {\n+    A,\n+    B,\n+    C,\n+}\n+\n+fn main() {\n+    match Foo::A {\n+        Foo::A => {},\n+        Foo::B => {},\n+        Foo::C => {},\n+    }\n+}"}, {"sha": "1159f9e722d71597040bcf0c6732d7d86ce92690", "filename": "tests/ui/match_wildcard_for_single_variants.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/94e4b5ec316993200d75276b4e7c16a059bf3a57/tests%2Fui%2Fmatch_wildcard_for_single_variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94e4b5ec316993200d75276b4e7c16a059bf3a57/tests%2Fui%2Fmatch_wildcard_for_single_variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_wildcard_for_single_variants.rs?ref=94e4b5ec316993200d75276b4e7c16a059bf3a57", "patch": "@@ -0,0 +1,18 @@\n+// run-rustfix\n+\n+#![warn(clippy::match_wildcard_for_single_variants)]\n+#![allow(dead_code)]\n+\n+enum Foo {\n+    A,\n+    B,\n+    C,\n+}\n+\n+fn main() {\n+    match Foo::A {\n+        Foo::A => {},\n+        Foo::B => {},\n+        _ => {},\n+    }\n+}"}, {"sha": "128dd4808bf7f0797214a837689ebd19e76e957a", "filename": "tests/ui/match_wildcard_for_single_variants.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/94e4b5ec316993200d75276b4e7c16a059bf3a57/tests%2Fui%2Fmatch_wildcard_for_single_variants.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/94e4b5ec316993200d75276b4e7c16a059bf3a57/tests%2Fui%2Fmatch_wildcard_for_single_variants.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_wildcard_for_single_variants.stderr?ref=94e4b5ec316993200d75276b4e7c16a059bf3a57", "patch": "@@ -0,0 +1,10 @@\n+error: wildcard match will miss any future added variants\n+  --> $DIR/match_wildcard_for_single_variants.rs:16:9\n+   |\n+LL |         _ => {},\n+   |         ^ help: try this: `Foo::C`\n+   |\n+   = note: `-D clippy::match-wildcard-for-single-variants` implied by `-D warnings`\n+\n+error: aborting due to previous error\n+"}]}