{"sha": "80dcad9e5b060ba6f9e06499c799423037ce7733", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwZGNhZDllNWIwNjBiYTZmOWUwNjQ5OWM3OTk0MjMwMzdjZTc3MzM=", "commit": {"author": {"name": "Camelid", "email": "37223377+camelid@users.noreply.github.com", "date": "2020-08-30T03:52:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-30T03:52:09Z"}, "message": "Be more specific about polymorphic return types\n\nI no longer say \"polymorphic\" since it's a bit ambiguous here.", "tree": {"sha": "4e8f50ae1602885f0182b388035edb8ea35e2b6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e8f50ae1602885f0182b388035edb8ea35e2b6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80dcad9e5b060ba6f9e06499c799423037ce7733", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfSyJpCRBK7hj4Ov3rIwAAdHIIAHax04bom7cYGlj6WdSFGsLp\np7qxVg4AX19gTCTiC0McP26hIK5gKXMQX790j82Hi8eAAQw29/ii7z/WO2xta/xM\nfTi5LC6WnsK4eq39A1HlCJHHqCcPbYcMNAn54Py0VCCORljv3OR1vQPKiGCfus6I\ny3bTYSKf4teT4Hl0FwjeGveh8W9UBrvxMSBHNW8RhS5xbh9wLwl4TKahQhRQiAjH\nw47XI6ZUoP5KHOxszcJiO36qEoZNXnNS4NLHjyhVe7eF4YAyehG1dJmTyGGefFPD\n/OLamr6051/uiLatjjc+bY5rW69Za0NIZsDIQuF00bXEfVxf++5ipb6ZCQY2sSk=\n=CyJH\n-----END PGP SIGNATURE-----\n", "payload": "tree 4e8f50ae1602885f0182b388035edb8ea35e2b6a\nparent 26eab6a0d51b9a023471210e35fdec969c662363\nauthor Camelid <37223377+camelid@users.noreply.github.com> 1598759529 -0700\ncommitter GitHub <noreply@github.com> 1598759529 -0700\n\nBe more specific about polymorphic return types\n\nI no longer say \"polymorphic\" since it's a bit ambiguous here."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80dcad9e5b060ba6f9e06499c799423037ce7733", "html_url": "https://github.com/rust-lang/rust/commit/80dcad9e5b060ba6f9e06499c799423037ce7733", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80dcad9e5b060ba6f9e06499c799423037ce7733/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26eab6a0d51b9a023471210e35fdec969c662363", "url": "https://api.github.com/repos/rust-lang/rust/commits/26eab6a0d51b9a023471210e35fdec969c662363", "html_url": "https://github.com/rust-lang/rust/commit/26eab6a0d51b9a023471210e35fdec969c662363"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "fc5036a1893578701a729ee297b995bafd56b073", "filename": "library/std/src/primitive_docs.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/80dcad9e5b060ba6f9e06499c799423037ce7733/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80dcad9e5b060ba6f9e06499c799423037ce7733/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprimitive_docs.rs?ref=80dcad9e5b060ba6f9e06499c799423037ce7733", "patch": "@@ -220,10 +220,10 @@ mod prim_bool {}\n /// }\n /// ```\n ///\n-/// The reason is that, in the first example, there are many possible types for `!` to coerce\n-/// to, because the function's return value is polymorphic. However, in the second example, the\n-/// other branch returns a `0` of type `u32`, which is a concrete type that `!` can be coerced to.\n-/// See issue [#36375] for more information on this quirk of `!`.\n+/// The reason is that, in the first example, there are many possible types that `!` could coerce\n+/// to, because the function can return one of many concrete types. However, in the second example,\n+/// the other branch returns a `0` of type `u32`, which is a concrete type that `!` can be coerced\n+/// to. See issue [#36375] for more information on this quirk of `!`.\n ///\n /// [#36375]: https://github.com/rust-lang/rust/issues/36375\n ///"}]}