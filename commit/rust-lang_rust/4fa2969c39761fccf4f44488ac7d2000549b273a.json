{"sha": "4fa2969c39761fccf4f44488ac7d2000549b273a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmYTI5NjljMzk3NjFmY2NmNGY0NDQ4OGFjN2QyMDAwNTQ5YjI3M2E=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-07-12T02:05:50Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-07-24T03:46:39Z"}, "message": "fixup tests", "tree": {"sha": "639f7b58d57bd7ebac915bccc1ddd89982e9042c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/639f7b58d57bd7ebac915bccc1ddd89982e9042c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4fa2969c39761fccf4f44488ac7d2000549b273a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4fa2969c39761fccf4f44488ac7d2000549b273a", "html_url": "https://github.com/rust-lang/rust/commit/4fa2969c39761fccf4f44488ac7d2000549b273a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4fa2969c39761fccf4f44488ac7d2000549b273a/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9510a55eb952f078764f3caa8a8415bfbf9d352", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9510a55eb952f078764f3caa8a8415bfbf9d352", "html_url": "https://github.com/rust-lang/rust/commit/f9510a55eb952f078764f3caa8a8415bfbf9d352"}], "stats": {"total": 98, "additions": 45, "deletions": 53}, "files": [{"sha": "ab49096e55ab8d52a4d501e95ff08673055063ab", "filename": "tests/target/chains-visual.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/4fa2969c39761fccf4f44488ac7d2000549b273a/tests%2Ftarget%2Fchains-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fa2969c39761fccf4f44488ac7d2000549b273a/tests%2Ftarget%2Fchains-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fchains-visual.rs?ref=4fa2969c39761fccf4f44488ac7d2000549b273a", "patch": "@@ -15,16 +15,16 @@ fn main() {\n     // Test case where first chain element isn't a path, but is shorter than\n     // the size of a tab.\n     x().y(|| match cond() {\n-        true => (),\n-        false => (),\n-    });\n+           true => (),\n+           false => (),\n+       });\n \n     loong_func().quux(move || if true { 1 } else { 2 });\n \n     some_fuuuuuuuuunction().method_call_a(aaaaa, bbbbb, |c| {\n-        let x = c;\n-        x\n-    });\n+                               let x = c;\n+                               x\n+                           });\n \n     some_fuuuuuuuuunction().method_call_a(aaaaa, bbbbb, |c| {\n                                let x = c;\n@@ -59,7 +59,7 @@ fn floaters() {\n \n     let x = Foo { field1: val1,\n                   field2: val2, }.method_call()\n-            .method_call();\n+                                 .method_call();\n \n     let y = if cond { val1 } else { val2 }.method_call();\n \n@@ -80,7 +80,7 @@ fn floaters() {\n     } else {\n         none();\n     }.bar()\n-    .baz();\n+     .baz();\n \n     Foo { x: val }.baz(|| {\n                            force();\n@@ -90,10 +90,10 @@ fn floaters() {\n \n     Foo { y: i_am_multi_line,\n           z: ok, }.baz(|| {\n-             force();\n-             multiline();\n-         })\n-    .quux();\n+                           force();\n+                           multiline();\n+                       })\n+                  .quux();\n \n     a + match x {\n             true => \"yay!\",\n@@ -137,9 +137,9 @@ fn issue1434() {\n     for _ in 0..100 {\n         let prototype_id =\n             PrototypeIdData::from_reader::<_, B>(&mut self.file_cursor).chain_err(|| {\n-                format!(\"could not read prototype ID at offset {:#010x}\",\n-                        current_offset)\n-            })?;\n+                           format!(\"could not read prototype ID at offset {:#010x}\",\n+                                   current_offset)\n+                       })?;\n     }\n }\n "}, {"sha": "a328ef004bedb333f18484962f80c0444b9968bd", "filename": "tests/target/chains.rs", "status": "modified", "additions": 7, "deletions": 12, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/4fa2969c39761fccf4f44488ac7d2000549b273a/tests%2Ftarget%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fa2969c39761fccf4f44488ac7d2000549b273a/tests%2Ftarget%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fchains.rs?ref=4fa2969c39761fccf4f44488ac7d2000549b273a", "patch": "@@ -38,8 +38,7 @@ fn main() {\n         .method_call_a(aaaaa, bbbbb, |c| {\n             let x = c;\n             x\n-        })\n-        .method_call_b(aaaaa, bbbbb, |c| {\n+        }).method_call_b(aaaaa, bbbbb, |c| {\n             let x = c;\n             x\n         });\n@@ -65,8 +64,7 @@ fn main() {\n         .map(|x| {\n             x += 1;\n             x\n-        })\n-        .filter(some_mod::some_filter)\n+        }).filter(some_mod::some_filter)\n }\n \n fn floaters() {\n@@ -79,7 +77,7 @@ fn floaters() {\n         field1: val1,\n         field2: val2,\n     }.method_call()\n-        .method_call();\n+    .method_call();\n \n     let y = if cond {\n         val1\n@@ -106,24 +104,22 @@ fn floaters() {\n     } else {\n         none();\n     }.bar()\n-        .baz();\n+    .baz();\n \n     Foo {\n         x: val,\n     }.baz(|| {\n         force();\n         multiline();\n-    })\n-        .quux();\n+    }).quux();\n \n     Foo {\n         y: i_am_multi_line,\n         z: ok,\n     }.baz(|| {\n         force();\n         multiline();\n-    })\n-        .quux();\n+    }).quux();\n \n     a + match x {\n         true => \"yay!\",\n@@ -238,8 +234,7 @@ impl Foo {\n                         }\n                     }\n                 })\n-            })\n-            .collect();\n+            }).collect();\n     }\n }\n "}, {"sha": "2360ccfbd2fdc96de30e8126670cf478b5e00240", "filename": "tests/target/closure.rs", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/4fa2969c39761fccf4f44488ac7d2000549b273a/tests%2Ftarget%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fa2969c39761fccf4f44488ac7d2000549b273a/tests%2Ftarget%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fclosure.rs?ref=4fa2969c39761fccf4f44488ac7d2000549b273a", "patch": "@@ -138,18 +138,20 @@ fn issue470() {\n     {\n         {\n             {\n-                let explicit_arg_decls = explicit_arguments.into_iter().enumerate().map(\n-                    |(index, (ty, pattern))| {\n-                        let lvalue = Lvalue::Arg(index as u32);\n-                        block = this.pattern(\n-                            block,\n-                            argument_extent,\n-                            hair::PatternRef::Hair(pattern),\n-                            &lvalue,\n-                        );\n-                        ArgDecl { ty: ty }\n-                    },\n-                );\n+                let explicit_arg_decls =\n+                    explicit_arguments\n+                        .into_iter()\n+                        .enumerate()\n+                        .map(|(index, (ty, pattern))| {\n+                            let lvalue = Lvalue::Arg(index as u32);\n+                            block = this.pattern(\n+                                block,\n+                                argument_extent,\n+                                hair::PatternRef::Hair(pattern),\n+                                &lvalue,\n+                            );\n+                            ArgDecl { ty: ty }\n+                        });\n             }\n         }\n     }\n@@ -169,8 +171,7 @@ fn issue1329() {\n         .map(|x| {\n             x += 1;\n             x\n-        })\n-        .filter\n+        }).filter\n }\n \n fn issue325() {"}, {"sha": "19a45cb9f74e5f01db0be49f311c147273ad519b", "filename": "tests/target/configs/indent_style/block_call.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4fa2969c39761fccf4f44488ac7d2000549b273a/tests%2Ftarget%2Fconfigs%2Findent_style%2Fblock_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fa2969c39761fccf4f44488ac7d2000549b273a/tests%2Ftarget%2Fconfigs%2Findent_style%2Fblock_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Findent_style%2Fblock_call.rs?ref=4fa2969c39761fccf4f44488ac7d2000549b273a", "patch": "@@ -117,8 +117,7 @@ impl Cursor {\n                     debug_assert_eq!(n, -1);\n                     None\n                 }\n-            })\n-            .or_else(|| {\n+            }).or_else(|| {\n                 let canonical = self.canonical();\n                 if canonical != *self {\n                     canonical.num_template_args()"}, {"sha": "501ee3eaea04bcdca20ff8becfbfb3cca02c0e62", "filename": "tests/target/expr-block.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4fa2969c39761fccf4f44488ac7d2000549b273a/tests%2Ftarget%2Fexpr-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fa2969c39761fccf4f44488ac7d2000549b273a/tests%2Ftarget%2Fexpr-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr-block.rs?ref=4fa2969c39761fccf4f44488ac7d2000549b273a", "patch": "@@ -141,8 +141,7 @@ fn issue_1450() {\n             Relaxed,\n             Release,\n             Relaxed,\n-        )\n-        .is_ok()\n+        ).is_ok()\n     {\n         return;\n     }"}, {"sha": "1c63b105b98807858e6e7d0ce5c6f7d01db08275", "filename": "tests/target/file-lines-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fa2969c39761fccf4f44488ac7d2000549b273a/tests%2Ftarget%2Ffile-lines-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fa2969c39761fccf4f44488ac7d2000549b273a/tests%2Ftarget%2Ffile-lines-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffile-lines-1.rs?ref=4fa2969c39761fccf4f44488ac7d2000549b273a", "patch": "@@ -5,7 +5,7 @@ fn floaters() {\n         field1: val1,\n         field2: val2,\n     }.method_call()\n-        .method_call();\n+    .method_call();\n \n     let y = if cond {\n                 val1"}, {"sha": "9aba967e29dd3cdeafe0b329207bd50ca32f0651", "filename": "tests/target/file-lines-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fa2969c39761fccf4f44488ac7d2000549b273a/tests%2Ftarget%2Ffile-lines-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fa2969c39761fccf4f44488ac7d2000549b273a/tests%2Ftarget%2Ffile-lines-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffile-lines-3.rs?ref=4fa2969c39761fccf4f44488ac7d2000549b273a", "patch": "@@ -5,7 +5,7 @@ fn floaters() {\n         field1: val1,\n         field2: val2,\n     }.method_call()\n-        .method_call();\n+    .method_call();\n \n     let y = if cond { val1 } else { val2 }.method_call();\n "}, {"sha": "4441b140386ed0459caef777a81c50b1d3be75d9", "filename": "tests/target/issue-2759.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fa2969c39761fccf4f44488ac7d2000549b273a/tests%2Ftarget%2Fissue-2759.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fa2969c39761fccf4f44488ac7d2000549b273a/tests%2Ftarget%2Fissue-2759.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-2759.rs?ref=4fa2969c39761fccf4f44488ac7d2000549b273a", "patch": "@@ -56,8 +56,8 @@ fn bar() {}\n ///                 .boxed(),\n ///         ]\n ///     }).bind(\"127.0.0.1:8080\")\n-///         .unwrap()\n-///         .run()\n+///     .unwrap()\n+///     .run()\n ///     # });\n /// }\n /// ```"}, {"sha": "ac076615f99a13b108c7cb1e049b8ea70fb554b9", "filename": "tests/target/macros.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4fa2969c39761fccf4f44488ac7d2000549b273a/tests%2Ftarget%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fa2969c39761fccf4f44488ac7d2000549b273a/tests%2Ftarget%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmacros.rs?ref=4fa2969c39761fccf4f44488ac7d2000549b273a", "patch": "@@ -183,8 +183,7 @@ fn issue_1885() {\n             chan_select! {\n                 rx.recv() => {}\n             }\n-        })\n-        .collect::<Vec<_>>();\n+        }).collect::<Vec<_>>();\n }\n \n fn issue_1917() {"}, {"sha": "e0774ef011ca8a9e9e6a129f82a67566f7acf253", "filename": "tests/target/match.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4fa2969c39761fccf4f44488ac7d2000549b273a/tests%2Ftarget%2Fmatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fa2969c39761fccf4f44488ac7d2000549b273a/tests%2Ftarget%2Fmatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmatch.rs?ref=4fa2969c39761fccf4f44488ac7d2000549b273a", "patch": "@@ -381,8 +381,7 @@ fn issue1456() {\n                     .iter()\n                     .map(|node| {\n                         XPathNodeReader::new(node, &context).and_then(|r| ArtistRef::from_xml(&r))\n-                    })\n-                    .collect();\n+                    }).collect();\n                 res?\n             }\n             _ => Vec::new(),"}]}