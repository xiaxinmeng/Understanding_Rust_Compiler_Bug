{"sha": "75d22263c92c28510a1bff2a91031d28817443d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1ZDIyMjYzYzkyYzI4NTEwYTFiZmYyYTkxMDMxZDI4ODE3NDQzZDg=", "commit": {"author": {"name": "tinaun", "email": "tinagma@gmail.com", "date": "2018-07-24T19:33:19Z"}, "committer": {"name": "tinaun", "email": "tinagma@gmail.com", "date": "2018-07-24T21:09:12Z"}, "message": "Impl Executor for Box<E: Executor>", "tree": {"sha": "6563b2dc297225b1049987f2a792811e83eccc2d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6563b2dc297225b1049987f2a792811e83eccc2d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75d22263c92c28510a1bff2a91031d28817443d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75d22263c92c28510a1bff2a91031d28817443d8", "html_url": "https://github.com/rust-lang/rust/commit/75d22263c92c28510a1bff2a91031d28817443d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75d22263c92c28510a1bff2a91031d28817443d8/comments", "author": {"login": "tinaun", "id": 2565671, "node_id": "MDQ6VXNlcjI1NjU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/2565671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tinaun", "html_url": "https://github.com/tinaun", "followers_url": "https://api.github.com/users/tinaun/followers", "following_url": "https://api.github.com/users/tinaun/following{/other_user}", "gists_url": "https://api.github.com/users/tinaun/gists{/gist_id}", "starred_url": "https://api.github.com/users/tinaun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tinaun/subscriptions", "organizations_url": "https://api.github.com/users/tinaun/orgs", "repos_url": "https://api.github.com/users/tinaun/repos", "events_url": "https://api.github.com/users/tinaun/events{/privacy}", "received_events_url": "https://api.github.com/users/tinaun/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tinaun", "id": 2565671, "node_id": "MDQ6VXNlcjI1NjU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/2565671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tinaun", "html_url": "https://github.com/tinaun", "followers_url": "https://api.github.com/users/tinaun/followers", "following_url": "https://api.github.com/users/tinaun/following{/other_user}", "gists_url": "https://api.github.com/users/tinaun/gists{/gist_id}", "starred_url": "https://api.github.com/users/tinaun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tinaun/subscriptions", "organizations_url": "https://api.github.com/users/tinaun/orgs", "repos_url": "https://api.github.com/users/tinaun/repos", "events_url": "https://api.github.com/users/tinaun/events{/privacy}", "received_events_url": "https://api.github.com/users/tinaun/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f498e4ec1b57c3245a2fb8e0d5d836ed56760d2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f498e4ec1b57c3245a2fb8e0d5d836ed56760d2d", "html_url": "https://github.com/rust-lang/rust/commit/f498e4ec1b57c3245a2fb8e0d5d836ed56760d2d"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "2cf9b13a67a2750754b0f98070a52aec2e979d34", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/75d22263c92c28510a1bff2a91031d28817443d8/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75d22263c92c28510a1bff2a91031d28817443d8/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=75d22263c92c28510a1bff2a91031d28817443d8", "patch": "@@ -67,7 +67,7 @@ use core::marker::{Unpin, Unsize};\n use core::mem::{self, PinMut};\n use core::ops::{CoerceUnsized, Deref, DerefMut, Generator, GeneratorState};\n use core::ptr::{self, NonNull, Unique};\n-use core::task::{Context, Poll};\n+use core::task::{Context, Poll, Executor, SpawnErrorKind, SpawnObjError};\n \n use raw_vec::RawVec;\n use str::from_boxed_utf8_unchecked;\n@@ -972,6 +972,19 @@ unsafe impl<'a, T, F> UnsafeFutureObj<'a, T> for PinBox<F>\n     }\n }\n \n+#[unstable(feature = \"futures_api\", issue = \"50547\")]\n+impl<E> Executor for Box<E>\n+    where E: Executor + ?Sized\n+{\n+    fn spawn_obj(&mut self, task: FutureObj<'static, ()>) -> Result<(), SpawnObjError> {\n+        (**self).spawn_obj(task)\n+    }\n+\n+    fn status(&self) -> Result<(), SpawnErrorKind> {\n+        (**self).status()\n+    }\n+}\n+\n #[unstable(feature = \"futures_api\", issue = \"50547\")]\n impl<'a, F: Future<Output = ()> + Send + 'a> From<PinBox<F>> for FutureObj<'a, ()> {\n     fn from(boxed: PinBox<F>) -> Self {"}]}