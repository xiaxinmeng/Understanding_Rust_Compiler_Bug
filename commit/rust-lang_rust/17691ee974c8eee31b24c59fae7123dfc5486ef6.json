{"sha": "17691ee974c8eee31b24c59fae7123dfc5486ef6", "node_id": "C_kwDOAAsO6NoAKDE3NjkxZWU5NzRjOGVlZTMxYjI0YzU5ZmFlNzEyM2RmYzU0ODZlZjY", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-04-15T18:17:50Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-04-15T18:17:50Z"}, "message": "Slightly optimize `Resolver::krate`", "tree": {"sha": "f879661de808fd4e277ef077cff2ad033b4522c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f879661de808fd4e277ef077cff2ad033b4522c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17691ee974c8eee31b24c59fae7123dfc5486ef6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17691ee974c8eee31b24c59fae7123dfc5486ef6", "html_url": "https://github.com/rust-lang/rust/commit/17691ee974c8eee31b24c59fae7123dfc5486ef6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17691ee974c8eee31b24c59fae7123dfc5486ef6/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b4a34327ee5ee3fa92518a5ddd580d864e735ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b4a34327ee5ee3fa92518a5ddd580d864e735ee", "html_url": "https://github.com/rust-lang/rust/commit/4b4a34327ee5ee3fa92518a5ddd580d864e735ee"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "f3dcdcfa4a169d5e702351ed3141c5236901cffd", "filename": "crates/hir_def/src/resolver.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/17691ee974c8eee31b24c59fae7123dfc5486ef6/crates%2Fhir_def%2Fsrc%2Fresolver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17691ee974c8eee31b24c59fae7123dfc5486ef6/crates%2Fhir_def%2Fsrc%2Fresolver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fresolver.rs?ref=17691ee974c8eee31b24c59fae7123dfc5486ef6", "patch": "@@ -448,7 +448,13 @@ impl Resolver {\n     }\n \n     pub fn krate(&self) -> CrateId {\n-        self.module_scope().0.krate()\n+        self.scopes\n+            .get(0)\n+            .and_then(|scope| match scope {\n+                Scope::ModuleScope(m) => Some(m.def_map.krate()),\n+                _ => None,\n+            })\n+            .expect(\"module scope invariant violated\")\n     }\n \n     pub fn where_predicates_in_scope("}]}