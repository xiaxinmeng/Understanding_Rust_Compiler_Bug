{"sha": "83373675c81dd0343ccbee55d9c3b6ba13e65d35", "node_id": "C_kwDOAAsO6NoAKDgzMzczNjc1YzgxZGQwMzQzY2NiZWU1NWQ5YzNiNmJhMTNlNjVkMzU", "commit": {"author": {"name": "Urgau", "email": "urgau@numericable.fr", "date": "2022-05-25T10:19:50Z"}, "committer": {"name": "Urgau", "email": "urgau@numericable.fr", "date": "2022-05-30T14:51:38Z"}, "message": "Add tests for private items of cfg_accessible", "tree": {"sha": "818f85b9d0379afb083dce6cf4aae85b392ad250", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/818f85b9d0379afb083dce6cf4aae85b392ad250"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83373675c81dd0343ccbee55d9c3b6ba13e65d35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83373675c81dd0343ccbee55d9c3b6ba13e65d35", "html_url": "https://github.com/rust-lang/rust/commit/83373675c81dd0343ccbee55d9c3b6ba13e65d35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83373675c81dd0343ccbee55d9c3b6ba13e65d35/comments", "author": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c413250757a8212d2718a2d7b33bd8c0b1aa2288", "url": "https://api.github.com/repos/rust-lang/rust/commits/c413250757a8212d2718a2d7b33bd8c0b1aa2288", "html_url": "https://github.com/rust-lang/rust/commit/c413250757a8212d2718a2d7b33bd8c0b1aa2288"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "5b095675c79864b5081b6029ac539bc8ccaeae66", "filename": "src/test/ui/conditional-compilation/cfg_accessible-private.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/83373675c81dd0343ccbee55d9c3b6ba13e65d35/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg_accessible-private.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83373675c81dd0343ccbee55d9c3b6ba13e65d35/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg_accessible-private.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg_accessible-private.rs?ref=83373675c81dd0343ccbee55d9c3b6ba13e65d35", "patch": "@@ -0,0 +1,21 @@\n+// check-pass\n+\n+#![feature(cfg_accessible)]\n+\n+mod private {\n+    struct Struct;\n+    enum Enum{}\n+    union Union{_a:u8}\n+}\n+\n+#[cfg_accessible(private::Struct)]\n+const A: bool = true;\n+\n+#[cfg_accessible(private::Enum)]\n+const A: bool = true;\n+\n+#[cfg_accessible(private::Union)]\n+const A: bool = true;\n+\n+const A: bool = false; // Will conflict if any of those is accessible\n+fn main() {}"}]}