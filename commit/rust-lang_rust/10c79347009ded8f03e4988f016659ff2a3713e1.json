{"sha": "10c79347009ded8f03e4988f016659ff2a3713e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwYzc5MzQ3MDA5ZGVkOGYwM2U0OTg4ZjAxNjY1OWZmMmEzNzEzZTE=", "commit": {"author": {"name": "Seiichi Uchida", "email": "topecongiro@localhost.localdomain", "date": "2017-05-25T13:55:11Z"}, "committer": {"name": "Seiichi Uchida", "email": "topecongiro@localhost.localdomain", "date": "2017-05-25T13:55:11Z"}, "message": "Be precise with one_line_budget for fn_base", "tree": {"sha": "e12903dc6f56b6797cecf7f03d3fdc57888158b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e12903dc6f56b6797cecf7f03d3fdc57888158b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10c79347009ded8f03e4988f016659ff2a3713e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10c79347009ded8f03e4988f016659ff2a3713e1", "html_url": "https://github.com/rust-lang/rust/commit/10c79347009ded8f03e4988f016659ff2a3713e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10c79347009ded8f03e4988f016659ff2a3713e1/comments", "author": null, "committer": null, "parents": [{"sha": "a7b8dcc60d50f9be0785ec5a572f813691af2032", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7b8dcc60d50f9be0785ec5a572f813691af2032", "html_url": "https://github.com/rust-lang/rust/commit/a7b8dcc60d50f9be0785ec5a572f813691af2032"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "7b20d0b20c563da0ad35ca3b76e2dbcfa030d4c7", "filename": "src/items.rs", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/10c79347009ded8f03e4988f016659ff2a3713e1/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10c79347009ded8f03e4988f016659ff2a3713e1/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=10c79347009ded8f03e4988f016659ff2a3713e1", "patch": "@@ -1565,7 +1565,12 @@ fn rewrite_fn_base(context: &RewriteContext,\n \n     // Args.\n     let (mut one_line_budget, mut multi_line_budget, mut arg_indent) =\n-        try_opt!(compute_budgets_for_args(context, &result, indent, ret_str_len, newline_brace));\n+        try_opt!(compute_budgets_for_args(context,\n+                                          &result,\n+                                          indent,\n+                                          ret_str_len,\n+                                          newline_brace,\n+                                          has_braces));\n \n     if context.config.fn_args_layout() == IndentStyle::Block {\n         arg_indent = indent.block_indent(context.config);\n@@ -1907,7 +1912,8 @@ fn compute_budgets_for_args(context: &RewriteContext,\n                             result: &str,\n                             indent: Indent,\n                             ret_str_len: usize,\n-                            newline_brace: bool)\n+                            newline_brace: bool,\n+                            has_braces: bool)\n                             -> Option<((usize, usize, Indent))> {\n     debug!(\"compute_budgets_for_args {} {:?}, {}, {}\",\n            result.len(),\n@@ -1916,10 +1922,17 @@ fn compute_budgets_for_args(context: &RewriteContext,\n            newline_brace);\n     // Try keeping everything on the same line.\n     if !result.contains('\\n') {\n-        // 3 = `() `, space is before ret_string.\n-        let mut used_space = indent.width() + result.len() + ret_str_len + 3;\n-        if !newline_brace {\n-            used_space += 2;\n+        // 2 = `()`, 3 = `() `, space is before ret_string.\n+        let overhead = if ret_str_len == 0 { 2 } else { 3 };\n+        let mut used_space = indent.width() + result.len() + ret_str_len + overhead;\n+        if has_braces {\n+            if !newline_brace {\n+                // 2 = `{}`\n+                used_space += 2;\n+            }\n+        } else {\n+            // 1 = `;`\n+            used_space += 1;\n         }\n         let one_line_budget = context\n             .config"}]}