{"sha": "cabb679bf1bf37d34b0de3d60f655cf5e4185db6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhYmI2NzliZjFiZjM3ZDM0YjBkZTNkNjBmNjU1Y2Y1ZTQxODVkYjY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-06-10T18:00:12Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-06-10T18:00:12Z"}, "message": "Auto merge of #51474 - llogiq:from-docs, r=TimNN\n\nadd some docs to `From` conversions\n\nThis adds a helpful document to the bool \u2192 int* conversions as well as to the lossless integer conversions.\n\nOne of #51430 down, some more to go.", "tree": {"sha": "f691948ccf4ec1a77da775dce1120e9361844773", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f691948ccf4ec1a77da775dce1120e9361844773"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cabb679bf1bf37d34b0de3d60f655cf5e4185db6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cabb679bf1bf37d34b0de3d60f655cf5e4185db6", "html_url": "https://github.com/rust-lang/rust/commit/cabb679bf1bf37d34b0de3d60f655cf5e4185db6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cabb679bf1bf37d34b0de3d60f655cf5e4185db6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5a129e809172462e3f29ab733074630e29b569b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5a129e809172462e3f29ab733074630e29b569b", "html_url": "https://github.com/rust-lang/rust/commit/c5a129e809172462e3f29ab733074630e29b569b"}, {"sha": "553a44a5cc0aa766d60e878c87d3860f4a2cacdd", "url": "https://api.github.com/repos/rust-lang/rust/commits/553a44a5cc0aa766d60e878c87d3860f4a2cacdd", "html_url": "https://github.com/rust-lang/rust/commit/553a44a5cc0aa766d60e878c87d3860f4a2cacdd"}], "stats": {"total": 52, "additions": 39, "deletions": 13}, "files": [{"sha": "1168126c47c93a538c4a35a304533a0e3c20302b", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 39, "deletions": 13, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/cabb679bf1bf37d34b0de3d60f655cf5e4185db6/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cabb679bf1bf37d34b0de3d60f655cf5e4185db6/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=cabb679bf1bf37d34b0de3d60f655cf5e4185db6", "patch": "@@ -4709,30 +4709,56 @@ pub use num::dec2flt::ParseFloatError;\n // Conversions T -> T are covered by a blanket impl and therefore excluded\n // Some conversions from and to usize/isize are not implemented due to portability concerns\n macro_rules! impl_from {\n-    ($Small: ty, $Large: ty, #[$attr:meta]) => {\n+    ($Small: ty, $Large: ty, #[$attr:meta], $doc: expr) => {\n         #[$attr]\n+        #[doc = $doc]\n         impl From<$Small> for $Large {\n             #[inline]\n             fn from(small: $Small) -> $Large {\n                 small as $Large\n             }\n         }\n+    };\n+    ($Small: ty, $Large: ty, #[$attr:meta]) => {\n+        impl_from!($Small,\n+                   $Large,\n+                   #[$attr],\n+                   concat!(\"Converts `\",\n+                           stringify!($Small),\n+                           \"` to `\",\n+                           stringify!($Large),\n+                           \"` losslessly.\"));\n     }\n }\n \n+macro_rules! impl_from_bool {\n+    ($target: ty, #[$attr:meta]) => {\n+        impl_from!(bool, $target, #[$attr], concat!(\"Converts a `bool` to a `\",\n+            stringify!($target), \"`. The resulting value is `0` for `false` and `1` for `true`\n+values.\n+\n+# Examples\n+\n+```\n+assert_eq!(\", stringify!($target), \"::from(true), 1);\n+assert_eq!(\", stringify!($target), \"::from(false), 0);\n+```\"));\n+    };\n+}\n+\n // Bool -> Any\n-impl_from! { bool, u8, #[stable(feature = \"from_bool\", since = \"1.28.0\")] }\n-impl_from! { bool, u16, #[stable(feature = \"from_bool\", since = \"1.28.0\")] }\n-impl_from! { bool, u32, #[stable(feature = \"from_bool\", since = \"1.28.0\")] }\n-impl_from! { bool, u64, #[stable(feature = \"from_bool\", since = \"1.28.0\")] }\n-impl_from! { bool, u128, #[stable(feature = \"from_bool\", since = \"1.28.0\")] }\n-impl_from! { bool, usize, #[stable(feature = \"from_bool\", since = \"1.28.0\")] }\n-impl_from! { bool, i8, #[stable(feature = \"from_bool\", since = \"1.28.0\")] }\n-impl_from! { bool, i16, #[stable(feature = \"from_bool\", since = \"1.28.0\")] }\n-impl_from! { bool, i32, #[stable(feature = \"from_bool\", since = \"1.28.0\")] }\n-impl_from! { bool, i64, #[stable(feature = \"from_bool\", since = \"1.28.0\")] }\n-impl_from! { bool, i128, #[stable(feature = \"from_bool\", since = \"1.28.0\")] }\n-impl_from! { bool, isize, #[stable(feature = \"from_bool\", since = \"1.28.0\")] }\n+impl_from_bool! { u8, #[stable(feature = \"from_bool\", since = \"1.28.0\")] }\n+impl_from_bool! { u16, #[stable(feature = \"from_bool\", since = \"1.28.0\")] }\n+impl_from_bool! { u32, #[stable(feature = \"from_bool\", since = \"1.28.0\")] }\n+impl_from_bool! { u64, #[stable(feature = \"from_bool\", since = \"1.28.0\")] }\n+impl_from_bool! { u128, #[stable(feature = \"from_bool\", since = \"1.28.0\")] }\n+impl_from_bool! { usize, #[stable(feature = \"from_bool\", since = \"1.28.0\")] }\n+impl_from_bool! { i8, #[stable(feature = \"from_bool\", since = \"1.28.0\")] }\n+impl_from_bool! { i16, #[stable(feature = \"from_bool\", since = \"1.28.0\")] }\n+impl_from_bool! { i32, #[stable(feature = \"from_bool\", since = \"1.28.0\")] }\n+impl_from_bool! { i64, #[stable(feature = \"from_bool\", since = \"1.28.0\")] }\n+impl_from_bool! { i128, #[stable(feature = \"from_bool\", since = \"1.28.0\")] }\n+impl_from_bool! { isize, #[stable(feature = \"from_bool\", since = \"1.28.0\")] }\n \n // Unsigned -> Unsigned\n impl_from! { u8, u16, #[stable(feature = \"lossless_int_conv\", since = \"1.5.0\")] }"}]}