{"sha": "7d7c81a114eac8054d9e7e1d238ad05b116f12f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkN2M4MWExMTRlYWM4MDU0ZDllN2UxZDIzOGFkMDViMTE2ZjEyZjE=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-03-11T06:12:07Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-03-13T17:00:38Z"}, "message": "Always run `incremental_verify_ich` when re-computing query results\n\nIssue #82920 showed that the kind of bugs caught by this flag have\nsoundness implications.\n\nThis causes performance regressions of up to 15.2% during incremental\ncompilation, but this is necessary to catch miscompilations caused by\nbugs in query implementations.", "tree": {"sha": "5aa14285869317f3f746d1bb7c44f3f20198ce6e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5aa14285869317f3f746d1bb7c44f3f20198ce6e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d7c81a114eac8054d9e7e1d238ad05b116f12f1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAmBM77gACgkQtAh+UQ6Y\nsWQyyQ//cN1fQYvZ9TPWpGRuHzlXk+TW8RX9qeffgv17XY650iHNkwKG9T1ca471\n0hr98xR7AKYcEH3S9VqCXE2os+0xR7Z15TgC+mt/g85R7Jt93ULVeRKqXikWbExW\n2QM/CnRN3HdrzkhpdxtHOkqR3G/zw7Tf42+DnXL2uR648sYneNguWHj0o+NJD0/k\nduxp2ErOf1EaTL3/sgoesfZk+Z5vOYrf34/kaAqwENW9rHlRchcfQhvGBD9Xhjm5\n60jhEH0+iUClEOSLHyAFCzz31W44SILqKSdPeY6MF6k9WEPinh/1I6gJWRE63mTP\nPpoK/ww6+nYAGqnS3CeWNbkv79V9cdtWpLEeudlN+IG/xl5KRhpEjEG6xvDUhk7a\nvsqFd1Uw+9wDmEiyj5sqc2RmMHF2SMSFfR3QpPUYWcoIVnZHWRAqZIJG5BY+7MBD\nBrhQdAQnRFyWmi7YDzWmkcvorxPMHLmpKDIYfZKZGT5VnCR1cwhnEWC6KIXTqjv7\nYoFo38ZAXPXQfY8pbDge+fLLtnAXZcjQuyouDO35XncZwaYb0pVAbKc5FpV0sQ69\nNdUlBPgjCV5skQx9/bcB0X0H2LI3A5fDzx/CfURH8fQWArilsSTzF2b/LUZFSiZ8\nG/pfzYM9odDi6/6fkNHCYs7FPAkLmigAqmiCe/43YmsfeznBY4o=\n=n0ep\n-----END PGP SIGNATURE-----", "payload": "tree 5aa14285869317f3f746d1bb7c44f3f20198ce6e\nparent 066f01d81bfbed746f6b6cf27a0426d829e8e832\nauthor Aaron Hill <aa1ronham@gmail.com> 1615443127 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1615654838 -0500\n\nAlways run `incremental_verify_ich` when re-computing query results\n\nIssue #82920 showed that the kind of bugs caught by this flag have\nsoundness implications.\n\nThis causes performance regressions of up to 15.2% during incremental\ncompilation, but this is necessary to catch miscompilations caused by\nbugs in query implementations.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d7c81a114eac8054d9e7e1d238ad05b116f12f1", "html_url": "https://github.com/rust-lang/rust/commit/7d7c81a114eac8054d9e7e1d238ad05b116f12f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d7c81a114eac8054d9e7e1d238ad05b116f12f1/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "066f01d81bfbed746f6b6cf27a0426d829e8e832", "url": "https://api.github.com/repos/rust-lang/rust/commits/066f01d81bfbed746f6b6cf27a0426d829e8e832", "html_url": "https://github.com/rust-lang/rust/commit/066f01d81bfbed746f6b6cf27a0426d829e8e832"}], "stats": {"total": 29, "additions": 18, "deletions": 11}, "files": [{"sha": "fe0401e094175644f905c75bc98139cedf061a82", "filename": "compiler/rustc_query_system/src/query/plumbing.rs", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/7d7c81a114eac8054d9e7e1d238ad05b116f12f1/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d7c81a114eac8054d9e7e1d238ad05b116f12f1/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs?ref=7d7c81a114eac8054d9e7e1d238ad05b116f12f1", "patch": "@@ -533,7 +533,13 @@ where\n         None\n     };\n \n-    let result = if let Some(result) = result {\n+    if let Some(result) = result {\n+        // If `-Zincremental-verify-ich` is specified, re-hash results from\n+        // the cache and make sure that they have the expected fingerprint.\n+        if unlikely!(tcx.dep_context().sess().opts.debugging_opts.incremental_verify_ich) {\n+            incremental_verify_ich(*tcx.dep_context(), &result, dep_node, dep_node_index, query);\n+        }\n+\n         result\n     } else {\n         // We could not load a result from the on-disk cache, so\n@@ -545,20 +551,21 @@ where\n \n         prof_timer.finish_with_query_invocation_id(dep_node_index.into());\n \n-        result\n-    };\n-\n-    // If `-Zincremental-verify-ich` is specified, re-hash results from\n-    // the cache and make sure that they have the expected fingerprint.\n-    if unlikely!(tcx.dep_context().sess().opts.debugging_opts.incremental_verify_ich) {\n+        // Verify that re-running the query produced a result with the expected hash\n+        // This catches bugs in query implementations, turning them into ICEs.\n+        // For example, a query might sort its result by `DefId` - since `DefId`s are\n+        // not stable across compilation sessions, the result could get up getting sorted\n+        // in a different order when the query is re-run, even though all of the inputs\n+        // (e.g. `DefPathHash` values) were green.\n+        //\n+        // See issue #82920 for an example of a miscompilation that would get turned into\n+        // an ICE by this check\n         incremental_verify_ich(*tcx.dep_context(), &result, dep_node, dep_node_index, query);\n-    }\n \n-    result\n+        result\n+    }\n }\n \n-#[inline(never)]\n-#[cold]\n fn incremental_verify_ich<CTX, K, V: Debug>(\n     tcx: CTX::DepContext,\n     result: &V,"}]}