{"sha": "897c18235a28e9470badd4a3e93a0641dd9c2865", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5N2MxODIzNWEyOGU5NDcwYmFkZDRhM2U5M2EwNjQxZGQ5YzI4NjU=", "commit": {"author": {"name": "Niv Kaminer", "email": "nivkner@zoho.com", "date": "2018-12-18T18:58:15Z"}, "committer": {"name": "Niv Kaminer", "email": "nivkner@zoho.com", "date": "2018-12-19T08:51:47Z"}, "message": "FIXME(52456) remove fixme and combine all extern items in one block", "tree": {"sha": "2aba30ee74c5efcf1904bc5dc5fd9ca3bda16009", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2aba30ee74c5efcf1904bc5dc5fd9ca3bda16009"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/897c18235a28e9470badd4a3e93a0641dd9c2865", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/897c18235a28e9470badd4a3e93a0641dd9c2865", "html_url": "https://github.com/rust-lang/rust/commit/897c18235a28e9470badd4a3e93a0641dd9c2865", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/897c18235a28e9470badd4a3e93a0641dd9c2865/comments", "author": {"login": "nivkner", "id": 22821514, "node_id": "MDQ6VXNlcjIyODIxNTE0", "avatar_url": "https://avatars.githubusercontent.com/u/22821514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nivkner", "html_url": "https://github.com/nivkner", "followers_url": "https://api.github.com/users/nivkner/followers", "following_url": "https://api.github.com/users/nivkner/following{/other_user}", "gists_url": "https://api.github.com/users/nivkner/gists{/gist_id}", "starred_url": "https://api.github.com/users/nivkner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nivkner/subscriptions", "organizations_url": "https://api.github.com/users/nivkner/orgs", "repos_url": "https://api.github.com/users/nivkner/repos", "events_url": "https://api.github.com/users/nivkner/events{/privacy}", "received_events_url": "https://api.github.com/users/nivkner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nivkner", "id": 22821514, "node_id": "MDQ6VXNlcjIyODIxNTE0", "avatar_url": "https://avatars.githubusercontent.com/u/22821514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nivkner", "html_url": "https://github.com/nivkner", "followers_url": "https://api.github.com/users/nivkner/followers", "following_url": "https://api.github.com/users/nivkner/following{/other_user}", "gists_url": "https://api.github.com/users/nivkner/gists{/gist_id}", "starred_url": "https://api.github.com/users/nivkner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nivkner/subscriptions", "organizations_url": "https://api.github.com/users/nivkner/orgs", "repos_url": "https://api.github.com/users/nivkner/repos", "events_url": "https://api.github.com/users/nivkner/events{/privacy}", "received_events_url": "https://api.github.com/users/nivkner/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1aaad19418aef16b2e7688e36016b729ac2538ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/1aaad19418aef16b2e7688e36016b729ac2538ae", "html_url": "https://github.com/rust-lang/rust/commit/1aaad19418aef16b2e7688e36016b729ac2538ae"}], "stats": {"total": 32, "additions": 6, "deletions": 26}, "files": [{"sha": "5c59439fdfb6faf0062229bab4429d873eab94fd", "filename": "src/librustc_codegen_llvm/llvm/ffi.rs", "status": "modified", "additions": 6, "deletions": 26, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/897c18235a28e9470badd4a3e93a0641dd9c2865/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/897c18235a28e9470badd4a3e93a0641dd9c2865/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs?ref=897c18235a28e9470badd4a3e93a0641dd9c2865", "patch": "@@ -1601,15 +1601,12 @@ extern \"C\" {\n                                                 -> &'a Value;\n     pub fn LLVMRustDIBuilderCreateOpDeref() -> i64;\n     pub fn LLVMRustDIBuilderCreateOpPlusUconst() -> i64;\n-}\n \n-#[allow(improper_ctypes)] // FIXME(#52456) needed for RustString.\n-extern \"C\" {\n+    #[allow(improper_ctypes)]\n     pub fn LLVMRustWriteTypeToString(Type: &Type, s: &RustString);\n+    #[allow(improper_ctypes)]\n     pub fn LLVMRustWriteValueToString(value_ref: &Value, s: &RustString);\n-}\n \n-extern \"C\" {\n     pub fn LLVMIsAConstantInt(value_ref: &Value) -> Option<&Value>;\n     pub fn LLVMIsAConstantFP(value_ref: &Value) -> Option<&Value>;\n \n@@ -1687,56 +1684,39 @@ extern \"C\" {\n     pub fn LLVMRustDestroyArchive(AR: &'static mut Archive);\n \n     pub fn LLVMRustGetSectionName(SI: &SectionIterator, data: &mut *const c_char) -> size_t;\n-}\n \n-#[allow(improper_ctypes)] // FIXME(#52456) needed for RustString.\n-extern \"C\" {\n+    #[allow(improper_ctypes)]\n     pub fn LLVMRustWriteTwineToString(T: &Twine, s: &RustString);\n-}\n \n-extern \"C\" {\n     pub fn LLVMContextSetDiagnosticHandler(C: &Context,\n                                            Handler: DiagnosticHandler,\n                                            DiagnosticContext: *mut c_void);\n-}\n \n-#[allow(improper_ctypes)] // FIXME(#52456) needed for RustString.\n-extern \"C\" {\n+    #[allow(improper_ctypes)]\n     pub fn LLVMRustUnpackOptimizationDiagnostic(DI: &'a DiagnosticInfo,\n                                                 pass_name_out: &RustString,\n                                                 function_out: &mut Option<&'a Value>,\n                                                 loc_line_out: &mut c_uint,\n                                                 loc_column_out: &mut c_uint,\n                                                 loc_filename_out: &RustString,\n                                                 message_out: &RustString);\n-}\n \n-extern \"C\" {\n     pub fn LLVMRustUnpackInlineAsmDiagnostic(DI: &'a DiagnosticInfo,\n                                              cookie_out: &mut c_uint,\n                                              message_out: &mut Option<&'a Twine>,\n                                              instruction_out: &mut Option<&'a Value>);\n-}\n \n-#[allow(improper_ctypes)] // FIXME(#52456) needed for RustString.\n-extern \"C\" {\n+    #[allow(improper_ctypes)]\n     pub fn LLVMRustWriteDiagnosticInfoToString(DI: &DiagnosticInfo, s: &RustString);\n-}\n-\n-extern \"C\" {\n     pub fn LLVMRustGetDiagInfoKind(DI: &DiagnosticInfo) -> DiagnosticKind;\n \n     pub fn LLVMRustSetInlineAsmDiagnosticHandler(C: &Context,\n                                                  H: InlineAsmDiagHandler,\n                                                  CX: *mut c_void);\n-}\n \n-#[allow(improper_ctypes)] // FIXME(#52456) needed for RustString.\n-extern \"C\" {\n+    #[allow(improper_ctypes)]\n     pub fn LLVMRustWriteSMDiagnosticToString(d: &SMDiagnostic, s: &RustString);\n-}\n \n-extern \"C\" {\n     pub fn LLVMRustWriteArchive(Dst: *const c_char,\n                                 NumMembers: size_t,\n                                 Members: *const &RustArchiveMember,"}]}