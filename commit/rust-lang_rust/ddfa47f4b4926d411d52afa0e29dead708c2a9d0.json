{"sha": "ddfa47f4b4926d411d52afa0e29dead708c2a9d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkZmE0N2Y0YjQ5MjZkNDExZDUyYWZhMGUyOWRlYWQ3MDhjMmE5ZDA=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-03-29T13:46:39Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-03-29T18:12:54Z"}, "message": "Fix incorrect code", "tree": {"sha": "dcb8206afa280a885242ed94f1526bf0b1b2c320", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dcb8206afa280a885242ed94f1526bf0b1b2c320"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ddfa47f4b4926d411d52afa0e29dead708c2a9d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ddfa47f4b4926d411d52afa0e29dead708c2a9d0", "html_url": "https://github.com/rust-lang/rust/commit/ddfa47f4b4926d411d52afa0e29dead708c2a9d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ddfa47f4b4926d411d52afa0e29dead708c2a9d0/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07857f74065c567a46549cb88d6a0aba3cef484c", "url": "https://api.github.com/repos/rust-lang/rust/commits/07857f74065c567a46549cb88d6a0aba3cef484c", "html_url": "https://github.com/rust-lang/rust/commit/07857f74065c567a46549cb88d6a0aba3cef484c"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "cca6da4f82c320aba1b712721a40b46a3b62c1ad", "filename": "src/librustc_typeck/check/demand.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ddfa47f4b4926d411d52afa0e29dead708c2a9d0/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfa47f4b4926d411d52afa0e29dead708c2a9d0/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=ddfa47f4b4926d411d52afa0e29dead708c2a9d0", "patch": "@@ -249,9 +249,9 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n         None\n     }\n \n-    fn is_hir_id_from_struct_pattern_shorthand_field(&self, hir_id: hir::HirId) -> bool {\n-        let parent_id = self.tcx.hir().get_parent_node_by_hir_id(expr.hir_id);\n-        let mut is_struct_pat_shorthand_field = false;\n+    fn is_hir_id_from_struct_pattern_shorthand_field(&self, hir_id: hir::HirId, sp: Span) -> bool {\n+        let cm = self.sess().source_map();\n+        let parent_id = self.tcx.hir().get_parent_node_by_hir_id(hir_id);\n         if let Some(parent) = self.tcx.hir().find_by_hir_id(parent_id) {\n             // Account for fields\n             if let Node::Expr(hir::Expr {\n@@ -260,13 +260,13 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                 if let Ok(src) = cm.span_to_snippet(sp) {\n                     for field in fields {\n                         if field.ident.as_str() == src.as_str() && field.is_shorthand {\n-                            is_struct_pat_shorthand_field = true;\n-                            break;\n+                            return true;\n                         }\n                     }\n                 }\n             }\n-        };\n+        }\n+        false\n     }\n \n     /// This function is used to determine potential \"simple\" improvements or users' errors and\n@@ -297,8 +297,10 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n             return None;\n         }\n \n-        let mut is_struct_pat_shorthand_field =\n-            self.is_hir_id_from_struct_pattern_shorthand_field(expr.hir_id);\n+        let is_struct_pat_shorthand_field = self.is_hir_id_from_struct_pattern_shorthand_field(\n+            expr.hir_id,\n+            sp,\n+        );\n \n         match (&expected.sty, &checked_ty.sty) {\n             (&ty::Ref(_, exp, _), &ty::Ref(_, check, _)) => match (&exp.sty, &check.sty) {"}]}