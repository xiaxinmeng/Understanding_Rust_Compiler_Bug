{"sha": "55840b0209a77bcf7884c8818585f792637927c2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1ODQwYjAyMDlhNzdiY2Y3ODg0Yzg4MTg1ODVmNzkyNjM3OTI3YzI=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-11-30T17:22:11Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-11-30T17:22:11Z"}, "message": "Don't repeat the `is_const_fn_raw` check", "tree": {"sha": "1ed4287060b6ce4f894f85d47aa53f10fd2d913b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ed4287060b6ce4f894f85d47aa53f10fd2d913b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55840b0209a77bcf7884c8818585f792637927c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55840b0209a77bcf7884c8818585f792637927c2", "html_url": "https://github.com/rust-lang/rust/commit/55840b0209a77bcf7884c8818585f792637927c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55840b0209a77bcf7884c8818585f792637927c2/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f15197e83c4c0e2963ef11e2e8bdb14491247582", "url": "https://api.github.com/repos/rust-lang/rust/commits/f15197e83c4c0e2963ef11e2e8bdb14491247582", "html_url": "https://github.com/rust-lang/rust/commit/f15197e83c4c0e2963ef11e2e8bdb14491247582"}], "stats": {"total": 26, "additions": 12, "deletions": 14}, "files": [{"sha": "e299d4b164f1b3aa09205de433e1e9bb4d4135b0", "filename": "src/librustc_mir/const_eval.rs", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/55840b0209a77bcf7884c8818585f792637927c2/src%2Flibrustc_mir%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55840b0209a77bcf7884c8818585f792637927c2/src%2Flibrustc_mir%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval.rs?ref=55840b0209a77bcf7884c8818585f792637927c2", "patch": "@@ -337,25 +337,23 @@ impl<'mir, 'tcx> interpret::Machine<'mir, 'tcx> for CompileTimeInterpreter<'mir,\n     ) -> InterpResult<'tcx, Option<&'mir mir::Body<'tcx>>> {\n         debug!(\"find_mir_or_eval_fn: {:?}\", instance);\n \n-        // If this function is a `const fn` then as an optimization we can query this\n-        // evaluation immediately.\n-        //\n-        // For the moment we only do this for functions which take no arguments\n-        // (or all arguments are ZSTs) so that we don't memoize too much.\n-        if ecx.tcx.is_const_fn_raw(instance.def.def_id()) &&\n-            args.iter().all(|a| a.layout.is_zst())\n-        {\n-            let gid = GlobalId { instance, promoted: None };\n-            ecx.eval_const_fn_call(gid, ret)?;\n-            return Ok(None);\n-        }\n-\n         // Only check non-glue functions\n         if let ty::InstanceDef::Item(def_id) = instance.def {\n             // Execution might have wandered off into other crates, so we cannot do a stability-\n             // sensitive check here.  But we can at least rule out functions that are not const\n             // at all.\n-            if !ecx.tcx.is_const_fn_raw(def_id) {\n+            if ecx.tcx.is_const_fn_raw(def_id) {\n+                // If this function is a `const fn` then as an optimization we can query this\n+                // evaluation immediately.\n+                //\n+                // For the moment we only do this for functions which take no arguments\n+                // (or all arguments are ZSTs) so that we don't memoize too much.\n+                if args.iter().all(|a| a.layout.is_zst()) {\n+                    let gid = GlobalId { instance, promoted: None };\n+                    ecx.eval_const_fn_call(gid, ret)?;\n+                    return Ok(None);\n+                }\n+            } else {\n                 // Some functions we support even if they are non-const -- but avoid testing\n                 // that for const fn!  We certainly do *not* want to actually call the fn\n                 // though, so be sure we return here."}]}