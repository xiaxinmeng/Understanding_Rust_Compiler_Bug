{"sha": "152d62387786a0bb74b51ae5b40821966b15764e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1MmQ2MjM4Nzc4NmEwYmI3NGI1MWFlNWI0MDgyMTk2NmIxNTc2NGU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-01-10T13:38:51Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-01-10T14:12:25Z"}, "message": "Feature-gate `<>` syntax used with `Fn`. Fixes #18875.", "tree": {"sha": "82865589fcedd9391ef3c045ad6ae41f845f4fe4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82865589fcedd9391ef3c045ad6ae41f845f4fe4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/152d62387786a0bb74b51ae5b40821966b15764e", "comment_count": 8, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/152d62387786a0bb74b51ae5b40821966b15764e", "html_url": "https://github.com/rust-lang/rust/commit/152d62387786a0bb74b51ae5b40821966b15764e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/152d62387786a0bb74b51ae5b40821966b15764e/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3975af567a73966fce7967c19b428086234241b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/3975af567a73966fce7967c19b428086234241b4", "html_url": "https://github.com/rust-lang/rust/commit/3975af567a73966fce7967c19b428086234241b4"}], "stats": {"total": 46, "additions": 41, "deletions": 5}, "files": [{"sha": "45e05c12713bfbc78401aed51c413ca6721c5ef9", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/152d62387786a0bb74b51ae5b40821966b15764e/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/152d62387786a0bb74b51ae5b40821966b15764e/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=152d62387786a0bb74b51ae5b40821966b15764e", "patch": "@@ -582,6 +582,19 @@ fn ast_path_to_trait_ref<'a,'tcx>(\n \n     let (regions, types, assoc_bindings) = match path.segments.last().unwrap().parameters {\n         ast::AngleBracketedParameters(ref data) => {\n+            // For now, require that parenthetical notation be used\n+            // only with `Fn()` etc.\n+            if !this.tcx().sess.features.borrow().unboxed_closures &&\n+                this.tcx().lang_items.fn_trait_kind(trait_def_id).is_some()\n+            {\n+                this.tcx().sess.span_err(path.span,\n+                                         \"angle-bracket notation is not stable when \\\n+                                         used with the `Fn` family of traits, use parentheses\");\n+                span_help!(this.tcx().sess, path.span,\n+                           \"add `#![feature(unboxed_closures)]` to \\\n+                            the crate attributes to enable\");\n+            }\n+\n             convert_angle_bracketed_parameters(this, &shifted_rscope, data)\n         }\n         ast::ParenthesizedParameters(ref data) => {"}, {"sha": "cdb207f705f5fdda7be472c5c844c76287ebcd2b", "filename": "src/test/compile-fail/feature-gate-unboxed-closures-manual-impls.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/152d62387786a0bb74b51ae5b40821966b15764e/src%2Ftest%2Fcompile-fail%2Ffeature-gate-unboxed-closures-manual-impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/152d62387786a0bb74b51ae5b40821966b15764e/src%2Ftest%2Fcompile-fail%2Ffeature-gate-unboxed-closures-manual-impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-unboxed-closures-manual-impls.rs?ref=152d62387786a0bb74b51ae5b40821966b15764e", "patch": "@@ -11,15 +11,15 @@\n #![allow(dead_code)]\n \n struct Foo;\n-impl Fn<(), ()> for Foo { //~ ERROR manual implementations of `Fn` are experimental\n+impl Fn() for Foo { //~ ERROR manual implementations of `Fn` are experimental\n     extern \"rust-call\" fn call(&self, args: ()) -> () {}\n }\n struct Bar;\n-impl FnMut<(), ()> for Bar { //~ ERROR manual implementations of `FnMut` are experimental\n+impl FnMut() for Bar { //~ ERROR manual implementations of `FnMut` are experimental\n     extern \"rust-call\" fn call_mut(&self, args: ()) -> () {}\n }\n struct Baz;\n-impl FnOnce<(), ()> for Baz { //~ ERROR manual implementations of `FnOnce` are experimental\n+impl FnOnce() for Baz { //~ ERROR manual implementations of `FnOnce` are experimental\n     extern \"rust-call\" fn call_once(&self, args: ()) -> () {}\n }\n "}, {"sha": "eea1f61d6397faa423f0446ecddc3bcbe62d2705", "filename": "src/test/compile-fail/feature-gate-unboxed-closures-method-calls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/152d62387786a0bb74b51ae5b40821966b15764e/src%2Ftest%2Fcompile-fail%2Ffeature-gate-unboxed-closures-method-calls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/152d62387786a0bb74b51ae5b40821966b15764e/src%2Ftest%2Fcompile-fail%2Ffeature-gate-unboxed-closures-method-calls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-unboxed-closures-method-calls.rs?ref=152d62387786a0bb74b51ae5b40821966b15764e", "patch": "@@ -10,7 +10,7 @@\n \n #![allow(dead_code)]\n \n-fn foo<F: Fn<(), ()>>(mut f: F) {\n+fn foo<F: Fn()>(mut f: F) {\n     f.call(()); //~ ERROR explicit use of unboxed closure method `call`\n     f.call_mut(()); //~ ERROR explicit use of unboxed closure method `call_mut`\n     f.call_once(()); //~ ERROR explicit use of unboxed closure method `call_once`"}, {"sha": "f15c5c4da2c4c947ec2ee6586db0a01e786a5def", "filename": "src/test/compile-fail/feature-gate-unboxed-closures-ufcs-calls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/152d62387786a0bb74b51ae5b40821966b15764e/src%2Ftest%2Fcompile-fail%2Ffeature-gate-unboxed-closures-ufcs-calls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/152d62387786a0bb74b51ae5b40821966b15764e/src%2Ftest%2Fcompile-fail%2Ffeature-gate-unboxed-closures-ufcs-calls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-unboxed-closures-ufcs-calls.rs?ref=152d62387786a0bb74b51ae5b40821966b15764e", "patch": "@@ -10,7 +10,7 @@\n \n #![allow(dead_code)]\n \n-fn foo<F: Fn<(), ()>>(mut f: F, mut g: F) {\n+fn foo<F: Fn()>(mut f: F, mut g: F) {\n     Fn::call(&g, ()); //~ ERROR explicit use of unboxed closure method `call`\n     FnMut::call_mut(&mut g, ()); //~ ERROR explicit use of unboxed closure method `call_mut`\n     FnOnce::call_once(g, ()); //~ ERROR explicit use of unboxed closure method `call_once`"}, {"sha": "21844e5b986c1aaad9689f148108aba053597e11", "filename": "src/test/compile-fail/unboxed-closure-sugar-not-used-on-fn.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/152d62387786a0bb74b51ae5b40821966b15764e/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-not-used-on-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/152d62387786a0bb74b51ae5b40821966b15764e/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-not-used-on-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-not-used-on-fn.rs?ref=152d62387786a0bb74b51ae5b40821966b15764e", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+// Test that the `Fn` traits require `()` form without a feature gate.\n+\n+fn bar1(x: &Fn<(),()>) {\n+    //~^ ERROR angle-bracket notation is not stable when used with the `Fn` family\n+}\n+\n+fn bar2<T>(x: &T) where T: Fn<(),()> {\n+    //~^ ERROR angle-bracket notation is not stable when used with the `Fn` family\n+}\n+\n+fn main() { }\n+"}]}