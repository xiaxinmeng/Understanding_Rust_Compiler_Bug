{"sha": "15241a4d4106b12cb6cbe25837cc56b629aad2dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1MjQxYTRkNDEwNmIxMmNiNmNiZTI1ODM3Y2M1NmI2MjlhYWQyZGQ=", "commit": {"author": {"name": "Chris Gregory", "email": "czipperz@gmail.com", "date": "2019-05-24T20:28:55Z"}, "committer": {"name": "Chris Gregory", "email": "czipperz@gmail.com", "date": "2019-05-24T20:28:55Z"}, "message": "Fix documentation of `Rc::make_mut` regarding `rc::Weak`.", "tree": {"sha": "f1a4f43dbd78a820a1fd8d19cb6f15239a73023b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1a4f43dbd78a820a1fd8d19cb6f15239a73023b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15241a4d4106b12cb6cbe25837cc56b629aad2dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15241a4d4106b12cb6cbe25837cc56b629aad2dd", "html_url": "https://github.com/rust-lang/rust/commit/15241a4d4106b12cb6cbe25837cc56b629aad2dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15241a4d4106b12cb6cbe25837cc56b629aad2dd/comments", "author": {"login": "czipperz", "id": 10054343, "node_id": "MDQ6VXNlcjEwMDU0MzQz", "avatar_url": "https://avatars.githubusercontent.com/u/10054343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/czipperz", "html_url": "https://github.com/czipperz", "followers_url": "https://api.github.com/users/czipperz/followers", "following_url": "https://api.github.com/users/czipperz/following{/other_user}", "gists_url": "https://api.github.com/users/czipperz/gists{/gist_id}", "starred_url": "https://api.github.com/users/czipperz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/czipperz/subscriptions", "organizations_url": "https://api.github.com/users/czipperz/orgs", "repos_url": "https://api.github.com/users/czipperz/repos", "events_url": "https://api.github.com/users/czipperz/events{/privacy}", "received_events_url": "https://api.github.com/users/czipperz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "czipperz", "id": 10054343, "node_id": "MDQ6VXNlcjEwMDU0MzQz", "avatar_url": "https://avatars.githubusercontent.com/u/10054343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/czipperz", "html_url": "https://github.com/czipperz", "followers_url": "https://api.github.com/users/czipperz/followers", "following_url": "https://api.github.com/users/czipperz/following{/other_user}", "gists_url": "https://api.github.com/users/czipperz/gists{/gist_id}", "starred_url": "https://api.github.com/users/czipperz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/czipperz/subscriptions", "organizations_url": "https://api.github.com/users/czipperz/orgs", "repos_url": "https://api.github.com/users/czipperz/repos", "events_url": "https://api.github.com/users/czipperz/events{/privacy}", "received_events_url": "https://api.github.com/users/czipperz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc45382c125d940822368e866588568d78551946", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc45382c125d940822368e866588568d78551946", "html_url": "https://github.com/rust-lang/rust/commit/fc45382c125d940822368e866588568d78551946"}], "stats": {"total": 34, "additions": 27, "deletions": 7}, "files": [{"sha": "40fae408a579ce807ee951bc4647d96ca839e4e4", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 27, "deletions": 7, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/15241a4d4106b12cb6cbe25837cc56b629aad2dd/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15241a4d4106b12cb6cbe25837cc56b629aad2dd/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=15241a4d4106b12cb6cbe25837cc56b629aad2dd", "patch": "@@ -584,15 +584,18 @@ impl<T: ?Sized> Rc<T> {\n impl<T: Clone> Rc<T> {\n     /// Makes a mutable reference into the given `Rc`.\n     ///\n-    /// If there are other `Rc` or [`Weak`][weak] pointers to the same value,\n-    /// then `make_mut` will invoke [`clone`][clone] on the inner value to\n-    /// ensure unique ownership. This is also referred to as clone-on-write.\n+    /// If there are other `Rc` pointers to the same value, then `make_mut` will\n+    /// [`clone`] the inner value to ensure unique ownership.  This is also\n+    /// referred to as clone-on-write.\n     ///\n-    /// See also [`get_mut`][get_mut], which will fail rather than cloning.\n+    /// If there are not other `Rc` pointers to this value, then [`Weak`]\n+    /// pointers to this value will be dissassociated.\n     ///\n-    /// [weak]: struct.Weak.html\n-    /// [clone]: ../../std/clone/trait.Clone.html#tymethod.clone\n-    /// [get_mut]: struct.Rc.html#method.get_mut\n+    /// See also [`get_mut`], which will fail rather than cloning.\n+    ///\n+    /// [`Weak`]: struct.Weak.html\n+    /// [`clone`]: ../../std/clone/trait.Clone.html#tymethod.clone\n+    /// [`get_mut`]: struct.Rc.html#method.get_mut\n     ///\n     /// # Examples\n     ///\n@@ -611,6 +614,23 @@ impl<T: Clone> Rc<T> {\n     /// assert_eq!(*data, 8);\n     /// assert_eq!(*other_data, 12);\n     /// ```\n+    ///\n+    /// [`Weak`] pointers will be dissassociated:\n+    ///\n+    /// ```\n+    /// use std::rc::{Rc, Weak};\n+    ///\n+    /// let mut data = Rc::new(75);\n+    /// let weak = Rc::downgrade(&data);\n+    ///\n+    /// assert!(75 == *data);\n+    /// assert!(75 == *weak.upgrade().unwrap());\n+    ///\n+    /// *Rc::make_mut(&mut data) += 1;\n+    ///\n+    /// assert!(76 == *data);\n+    /// assert!(weak.upgrade().is_none());\n+    /// ```\n     #[inline]\n     #[stable(feature = \"rc_unique\", since = \"1.4.0\")]\n     pub fn make_mut(this: &mut Self) -> &mut T {"}]}