{"sha": "af4885c0cde76bf1faace76dc8fb53d3d4791422", "node_id": "C_kwDOAAsO6NoAKGFmNDg4NWMwY2RlNzZiZjFmYWFjZTc2ZGM4ZmI1M2QzZDQ3OTE0MjI", "commit": {"author": {"name": "Sosth\u00e8ne Gu\u00e9don", "email": "sosthene@guedon.gdn", "date": "2022-07-30T11:39:55Z"}, "committer": {"name": "Sosth\u00e8ne Gu\u00e9don", "email": "sosthene@guedon.gdn", "date": "2022-08-08T19:05:27Z"}, "message": "Rename new lints to iter_on_empty_collections and iter_on_single_items", "tree": {"sha": "4f93c6e2445b9441bc442979ef3ffeafad765e0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f93c6e2445b9441bc442979ef3ffeafad765e0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af4885c0cde76bf1faace76dc8fb53d3d4791422", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af4885c0cde76bf1faace76dc8fb53d3d4791422", "html_url": "https://github.com/rust-lang/rust/commit/af4885c0cde76bf1faace76dc8fb53d3d4791422", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af4885c0cde76bf1faace76dc8fb53d3d4791422/comments", "author": {"login": "sgued", "id": 51865119, "node_id": "MDQ6VXNlcjUxODY1MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/51865119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgued", "html_url": "https://github.com/sgued", "followers_url": "https://api.github.com/users/sgued/followers", "following_url": "https://api.github.com/users/sgued/following{/other_user}", "gists_url": "https://api.github.com/users/sgued/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgued/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgued/subscriptions", "organizations_url": "https://api.github.com/users/sgued/orgs", "repos_url": "https://api.github.com/users/sgued/repos", "events_url": "https://api.github.com/users/sgued/events{/privacy}", "received_events_url": "https://api.github.com/users/sgued/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sgued", "id": 51865119, "node_id": "MDQ6VXNlcjUxODY1MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/51865119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgued", "html_url": "https://github.com/sgued", "followers_url": "https://api.github.com/users/sgued/followers", "following_url": "https://api.github.com/users/sgued/following{/other_user}", "gists_url": "https://api.github.com/users/sgued/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgued/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgued/subscriptions", "organizations_url": "https://api.github.com/users/sgued/orgs", "repos_url": "https://api.github.com/users/sgued/repos", "events_url": "https://api.github.com/users/sgued/events{/privacy}", "received_events_url": "https://api.github.com/users/sgued/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b247594a39cb8e2c3d8d193860eac0eb1c63e1ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/b247594a39cb8e2c3d8d193860eac0eb1c63e1ae", "html_url": "https://github.com/rust-lang/rust/commit/b247594a39cb8e2c3d8d193860eac0eb1c63e1ae"}], "stats": {"total": 68, "additions": 35, "deletions": 33}, "files": [{"sha": "03a76ccf60719689996ad1c9088fafc617798ace", "filename": "CHANGELOG.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/af4885c0cde76bf1faace76dc8fb53d3d4791422/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/af4885c0cde76bf1faace76dc8fb53d3d4791422/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=af4885c0cde76bf1faace76dc8fb53d3d4791422", "patch": "@@ -3651,13 +3651,13 @@ Released 2018-09-13\n [`items_after_statements`]: https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements\n [`iter_cloned_collect`]: https://rust-lang.github.io/rust-clippy/master/index.html#iter_cloned_collect\n [`iter_count`]: https://rust-lang.github.io/rust-clippy/master/index.html#iter_count\n-[`iter_empty`]: https://rust-lang.github.io/rust-clippy/master/index.html#iter_empty\n [`iter_next_loop`]: https://rust-lang.github.io/rust-clippy/master/index.html#iter_next_loop\n [`iter_next_slice`]: https://rust-lang.github.io/rust-clippy/master/index.html#iter_next_slice\n [`iter_not_returning_iterator`]: https://rust-lang.github.io/rust-clippy/master/index.html#iter_not_returning_iterator\n [`iter_nth`]: https://rust-lang.github.io/rust-clippy/master/index.html#iter_nth\n [`iter_nth_zero`]: https://rust-lang.github.io/rust-clippy/master/index.html#iter_nth_zero\n-[`iter_once`]: https://rust-lang.github.io/rust-clippy/master/index.html#iter_once\n+[`iter_on_empty_collections`]: https://rust-lang.github.io/rust-clippy/master/index.html#iter_on_empty_collections\n+[`iter_on_single_items`]: https://rust-lang.github.io/rust-clippy/master/index.html#iter_on_single_items\n [`iter_overeager_cloned`]: https://rust-lang.github.io/rust-clippy/master/index.html#iter_overeager_cloned\n [`iter_skip_next`]: https://rust-lang.github.io/rust-clippy/master/index.html#iter_skip_next\n [`iter_with_drain`]: https://rust-lang.github.io/rust-clippy/master/index.html#iter_with_drain"}, {"sha": "b697eb76290d3139ee6392277634a25ba6c3ffb1", "filename": "clippy_lints/src/lib.register_lints.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/af4885c0cde76bf1faace76dc8fb53d3d4791422/clippy_lints%2Fsrc%2Flib.register_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af4885c0cde76bf1faace76dc8fb53d3d4791422/clippy_lints%2Fsrc%2Flib.register_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_lints.rs?ref=af4885c0cde76bf1faace76dc8fb53d3d4791422", "patch": "@@ -312,11 +312,11 @@ store.register_lints(&[\n     methods::ITERATOR_STEP_BY_ZERO,\n     methods::ITER_CLONED_COLLECT,\n     methods::ITER_COUNT,\n-    methods::ITER_EMPTY,\n     methods::ITER_NEXT_SLICE,\n     methods::ITER_NTH,\n     methods::ITER_NTH_ZERO,\n-    methods::ITER_ONCE,\n+    methods::ITER_ON_EMPTY_COLLECTIONS,\n+    methods::ITER_ON_SINGLE_ITEMS,\n     methods::ITER_OVEREAGER_CLONED,\n     methods::ITER_SKIP_NEXT,\n     methods::ITER_WITH_DRAIN,"}, {"sha": "d6590192655303b284ed4bff93a5148ceebb8c5a", "filename": "clippy_lints/src/lib.register_nursery.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/af4885c0cde76bf1faace76dc8fb53d3d4791422/clippy_lints%2Fsrc%2Flib.register_nursery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af4885c0cde76bf1faace76dc8fb53d3d4791422/clippy_lints%2Fsrc%2Flib.register_nursery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_nursery.rs?ref=af4885c0cde76bf1faace76dc8fb53d3d4791422", "patch": "@@ -14,8 +14,8 @@ store.register_group(true, \"clippy::nursery\", Some(\"clippy_nursery\"), vec![\n     LintId::of(index_refutable_slice::INDEX_REFUTABLE_SLICE),\n     LintId::of(let_if_seq::USELESS_LET_IF_SEQ),\n     LintId::of(matches::SIGNIFICANT_DROP_IN_SCRUTINEE),\n-    LintId::of(methods::ITER_EMPTY),\n-    LintId::of(methods::ITER_ONCE),\n+    LintId::of(methods::ITER_ON_EMPTY_COLLECTIONS),\n+    LintId::of(methods::ITER_ON_SINGLE_ITEMS),\n     LintId::of(methods::ITER_WITH_DRAIN),\n     LintId::of(missing_const_for_fn::MISSING_CONST_FOR_FN),\n     LintId::of(mutable_debug_assertion::DEBUG_ASSERT_WITH_MUT_CALL),"}, {"sha": "cea7b0d82ff3f0f071161c94bacd1af86e51a59c", "filename": "clippy_lints/src/methods/iter_on_single_or_empty_collections.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/af4885c0cde76bf1faace76dc8fb53d3d4791422/clippy_lints%2Fsrc%2Fmethods%2Fiter_on_single_or_empty_collections.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af4885c0cde76bf1faace76dc8fb53d3d4791422/clippy_lints%2Fsrc%2Fmethods%2Fiter_on_single_or_empty_collections.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fiter_on_single_or_empty_collections.rs?ref=af4885c0cde76bf1faace76dc8fb53d3d4791422", "patch": "@@ -7,7 +7,7 @@ use rustc_hir::LangItem::{OptionNone, OptionSome};\n use rustc_hir::{Expr, ExprKind, Node};\n use rustc_lint::LateContext;\n \n-use super::{ITER_EMPTY, ITER_ONCE};\n+use super::{ITER_ON_EMPTY_COLLECTIONS, ITER_ON_SINGLE_ITEMS};\n \n enum IterType {\n     Iter,\n@@ -82,7 +82,7 @@ pub(super) fn check<'tcx>(cx: &LateContext<'tcx>, expr: &Expr<'_>, method_name:\n         );\n         span_lint_and_sugg(\n             cx,\n-            ITER_ONCE,\n+            ITER_ON_SINGLE_ITEMS,\n             expr.span,\n             &format!(\"`{method_name}` call on a collection with only one item\"),\n             \"try\",\n@@ -92,7 +92,7 @@ pub(super) fn check<'tcx>(cx: &LateContext<'tcx>, expr: &Expr<'_>, method_name:\n     } else {\n         span_lint_and_sugg(\n             cx,\n-            ITER_EMPTY,\n+            ITER_ON_EMPTY_COLLECTIONS,\n             expr.span,\n             &format!(\"`{method_name}` call on an empty collection\"),\n             \"try\",", "previous_filename": "clippy_lints/src/methods/iter_once_empty.rs"}, {"sha": "0936a3f48ca2fb3eb2687f5f267c3741afda481e", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/af4885c0cde76bf1faace76dc8fb53d3d4791422/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af4885c0cde76bf1faace76dc8fb53d3d4791422/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=af4885c0cde76bf1faace76dc8fb53d3d4791422", "patch": "@@ -33,7 +33,7 @@ mod iter_count;\n mod iter_next_slice;\n mod iter_nth;\n mod iter_nth_zero;\n-mod iter_once_empty;\n+mod iter_on_single_or_empty_collections;\n mod iter_overeager_cloned;\n mod iter_skip_next;\n mod iter_with_drain;\n@@ -2331,7 +2331,7 @@ declare_clippy_lint! {\n     ///\n     /// The type of the resulting iterator might become incompatible with its usage\n     #[clippy::version = \"1.64.0\"]\n-    pub ITER_ONCE,\n+    pub ITER_ON_SINGLE_ITEMS,\n     nursery,\n     \"Iterator for array of length 1\"\n }\n@@ -2363,7 +2363,7 @@ declare_clippy_lint! {\n     ///\n     /// The type of the resulting iterator might become incompatible with its usage\n     #[clippy::version = \"1.64.0\"]\n-    pub ITER_EMPTY,\n+    pub ITER_ON_EMPTY_COLLECTIONS,\n     nursery,\n     \"Iterator for empty array\"\n }\n@@ -2470,8 +2470,8 @@ impl_lint_pass!(Methods => [\n     NEEDLESS_OPTION_TAKE,\n     NO_EFFECT_REPLACE,\n     OBFUSCATED_IF_ELSE,\n-    ITER_ONCE,\n-    ITER_EMPTY\n+    ITER_ON_SINGLE_ITEMS,\n+    ITER_ON_EMPTY_COLLECTIONS\n ]);\n \n /// Extracts a method call name, args, and `Span` of the method name.\n@@ -2774,7 +2774,9 @@ impl Methods {\n                 (\"is_digit\", [radix]) => is_digit_ascii_radix::check(cx, expr, recv, radix, self.msrv),\n                 (\"is_none\", []) => check_is_some_is_none(cx, expr, recv, false),\n                 (\"is_some\", []) => check_is_some_is_none(cx, expr, recv, true),\n-                (\"iter\" | \"iter_mut\" | \"into_iter\", []) => iter_once_empty::check(cx, expr, name, recv),\n+                (\"iter\" | \"iter_mut\" | \"into_iter\", []) => {\n+                    iter_on_single_or_empty_collections::check(cx, expr, name, recv);\n+                },\n                 (\"join\", [join_arg]) => {\n                     if let Some((\"collect\", _, span)) = method_call(recv) {\n                         unnecessary_join::check(cx, expr, recv, join_arg, span);"}, {"sha": "bd9b07aefbfb85afd0a64ea4d96f1436a7f9d87b", "filename": "tests/ui/iter_on_empty_collections.fixed", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af4885c0cde76bf1faace76dc8fb53d3d4791422/tests%2Fui%2Fiter_on_empty_collections.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/af4885c0cde76bf1faace76dc8fb53d3d4791422/tests%2Fui%2Fiter_on_empty_collections.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiter_on_empty_collections.fixed?ref=af4885c0cde76bf1faace76dc8fb53d3d4791422", "patch": "@@ -1,5 +1,5 @@\n // run-rustfix\n-#![warn(clippy::iter_empty)]\n+#![warn(clippy::iter_on_empty_collections)]\n #![allow(clippy::iter_next_slice, clippy::redundant_clone)]\n \n fn array() {", "previous_filename": "tests/ui/iter_empty.fixed"}, {"sha": "e15ba94bd465528d9147ef1f83a66f0b2bf9d6b3", "filename": "tests/ui/iter_on_empty_collections.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af4885c0cde76bf1faace76dc8fb53d3d4791422/tests%2Fui%2Fiter_on_empty_collections.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af4885c0cde76bf1faace76dc8fb53d3d4791422/tests%2Fui%2Fiter_on_empty_collections.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiter_on_empty_collections.rs?ref=af4885c0cde76bf1faace76dc8fb53d3d4791422", "patch": "@@ -1,5 +1,5 @@\n // run-rustfix\n-#![warn(clippy::iter_empty)]\n+#![warn(clippy::iter_on_empty_collections)]\n #![allow(clippy::iter_next_slice, clippy::redundant_clone)]\n \n fn array() {", "previous_filename": "tests/ui/iter_empty.rs"}, {"sha": "cbd611769569670ab06ce18c3fbde8bba2308ddb", "filename": "tests/ui/iter_on_empty_collections.stderr", "status": "renamed", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/af4885c0cde76bf1faace76dc8fb53d3d4791422/tests%2Fui%2Fiter_on_empty_collections.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af4885c0cde76bf1faace76dc8fb53d3d4791422/tests%2Fui%2Fiter_on_empty_collections.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiter_on_empty_collections.stderr?ref=af4885c0cde76bf1faace76dc8fb53d3d4791422", "patch": "@@ -1,37 +1,37 @@\n error: `into_iter` call on an empty collection\n-  --> $DIR/iter_empty.rs:6:16\n+  --> $DIR/iter_on_empty_collections.rs:6:16\n    |\n LL |     assert_eq!([].into_iter().next(), Option::<i32>::None);\n    |                ^^^^^^^^^^^^^^ help: try: `std::iter::empty()`\n    |\n-   = note: `-D clippy::iter-empty` implied by `-D warnings`\n+   = note: `-D clippy::iter-on-empty-collections` implied by `-D warnings`\n \n error: `iter_mut` call on an empty collection\n-  --> $DIR/iter_empty.rs:7:16\n+  --> $DIR/iter_on_empty_collections.rs:7:16\n    |\n LL |     assert_eq!([].iter_mut().next(), Option::<&mut i32>::None);\n    |                ^^^^^^^^^^^^^ help: try: `std::iter::empty()`\n \n error: `iter` call on an empty collection\n-  --> $DIR/iter_empty.rs:8:16\n+  --> $DIR/iter_on_empty_collections.rs:8:16\n    |\n LL |     assert_eq!([].iter().next(), Option::<&i32>::None);\n    |                ^^^^^^^^^ help: try: `std::iter::empty()`\n \n error: `into_iter` call on an empty collection\n-  --> $DIR/iter_empty.rs:9:16\n+  --> $DIR/iter_on_empty_collections.rs:9:16\n    |\n LL |     assert_eq!(None.into_iter().next(), Option::<i32>::None);\n    |                ^^^^^^^^^^^^^^^^ help: try: `std::iter::empty()`\n \n error: `iter_mut` call on an empty collection\n-  --> $DIR/iter_empty.rs:10:16\n+  --> $DIR/iter_on_empty_collections.rs:10:16\n    |\n LL |     assert_eq!(None.iter_mut().next(), Option::<&mut i32>::None);\n    |                ^^^^^^^^^^^^^^^ help: try: `std::iter::empty()`\n \n error: `iter` call on an empty collection\n-  --> $DIR/iter_empty.rs:11:16\n+  --> $DIR/iter_on_empty_collections.rs:11:16\n    |\n LL |     assert_eq!(None.iter().next(), Option::<&i32>::None);\n    |                ^^^^^^^^^^^ help: try: `std::iter::empty()`", "previous_filename": "tests/ui/iter_empty.stderr"}, {"sha": "1fa4b03641bc73334438a452644037a410b6cbcc", "filename": "tests/ui/iter_on_single_items.fixed", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af4885c0cde76bf1faace76dc8fb53d3d4791422/tests%2Fui%2Fiter_on_single_items.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/af4885c0cde76bf1faace76dc8fb53d3d4791422/tests%2Fui%2Fiter_on_single_items.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiter_on_single_items.fixed?ref=af4885c0cde76bf1faace76dc8fb53d3d4791422", "patch": "@@ -1,5 +1,5 @@\n // run-rustfix\n-#![warn(clippy::iter_once)]\n+#![warn(clippy::iter_on_single_items)]\n #![allow(clippy::iter_next_slice, clippy::redundant_clone)]\n \n fn array() {", "previous_filename": "tests/ui/iter_once.fixed"}, {"sha": "ea96d8066c568588ce493bb1394705e5b313a4dd", "filename": "tests/ui/iter_on_single_items.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af4885c0cde76bf1faace76dc8fb53d3d4791422/tests%2Fui%2Fiter_on_single_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af4885c0cde76bf1faace76dc8fb53d3d4791422/tests%2Fui%2Fiter_on_single_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiter_on_single_items.rs?ref=af4885c0cde76bf1faace76dc8fb53d3d4791422", "patch": "@@ -1,5 +1,5 @@\n // run-rustfix\n-#![warn(clippy::iter_once)]\n+#![warn(clippy::iter_on_single_items)]\n #![allow(clippy::iter_next_slice, clippy::redundant_clone)]\n \n fn array() {", "previous_filename": "tests/ui/iter_once.rs"}, {"sha": "d6c547116363af8d77aee5d37feda615d0ac2541", "filename": "tests/ui/iter_on_single_items.stderr", "status": "renamed", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/af4885c0cde76bf1faace76dc8fb53d3d4791422/tests%2Fui%2Fiter_on_single_items.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/af4885c0cde76bf1faace76dc8fb53d3d4791422/tests%2Fui%2Fiter_on_single_items.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiter_on_single_items.stderr?ref=af4885c0cde76bf1faace76dc8fb53d3d4791422", "patch": "@@ -1,37 +1,37 @@\n error: `into_iter` call on a collection with only one item\n-  --> $DIR/iter_once.rs:6:16\n+  --> $DIR/iter_on_single_items.rs:6:16\n    |\n LL |     assert_eq!([123].into_iter().next(), Some(123));\n    |                ^^^^^^^^^^^^^^^^^ help: try: `std::iter::once(123)`\n    |\n-   = note: `-D clippy::iter-once` implied by `-D warnings`\n+   = note: `-D clippy::iter-on-single-items` implied by `-D warnings`\n \n error: `iter_mut` call on a collection with only one item\n-  --> $DIR/iter_once.rs:7:16\n+  --> $DIR/iter_on_single_items.rs:7:16\n    |\n LL |     assert_eq!([123].iter_mut().next(), Some(&mut 123));\n    |                ^^^^^^^^^^^^^^^^ help: try: `std::iter::once(&mut 123)`\n \n error: `iter` call on a collection with only one item\n-  --> $DIR/iter_once.rs:8:16\n+  --> $DIR/iter_on_single_items.rs:8:16\n    |\n LL |     assert_eq!([123].iter().next(), Some(&123));\n    |                ^^^^^^^^^^^^ help: try: `std::iter::once(&123)`\n \n error: `into_iter` call on a collection with only one item\n-  --> $DIR/iter_once.rs:9:16\n+  --> $DIR/iter_on_single_items.rs:9:16\n    |\n LL |     assert_eq!(Some(123).into_iter().next(), Some(123));\n    |                ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::iter::once(123)`\n \n error: `iter_mut` call on a collection with only one item\n-  --> $DIR/iter_once.rs:10:16\n+  --> $DIR/iter_on_single_items.rs:10:16\n    |\n LL |     assert_eq!(Some(123).iter_mut().next(), Some(&mut 123));\n    |                ^^^^^^^^^^^^^^^^^^^^ help: try: `std::iter::once(&mut 123)`\n \n error: `iter` call on a collection with only one item\n-  --> $DIR/iter_once.rs:11:16\n+  --> $DIR/iter_on_single_items.rs:11:16\n    |\n LL |     assert_eq!(Some(123).iter().next(), Some(&123));\n    |                ^^^^^^^^^^^^^^^^ help: try: `std::iter::once(&123)`", "previous_filename": "tests/ui/iter_once.stderr"}]}