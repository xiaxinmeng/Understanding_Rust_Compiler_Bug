{"sha": "1488095b08b0b85bff4b3d6d432e3f7cc7cd6d09", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0ODgwOTViMDhiMGI4NWJmZjRiM2Q2ZDQzMmUzZjdjYzdjZDZkMDk=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-03-21T20:30:09Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-03-22T20:54:51Z"}, "message": "change in-band array to store hir::LifetimeName", "tree": {"sha": "dc2389ad9f03c2bc21ca335af3b2093c30da4dd0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc2389ad9f03c2bc21ca335af3b2093c30da4dd0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1488095b08b0b85bff4b3d6d432e3f7cc7cd6d09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1488095b08b0b85bff4b3d6d432e3f7cc7cd6d09", "html_url": "https://github.com/rust-lang/rust/commit/1488095b08b0b85bff4b3d6d432e3f7cc7cd6d09", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1488095b08b0b85bff4b3d6d432e3f7cc7cd6d09/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d913af8691d4002166c9a6e1b60e51407cf82c9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d913af8691d4002166c9a6e1b60e51407cf82c9c", "html_url": "https://github.com/rust-lang/rust/commit/d913af8691d4002166c9a6e1b60e51407cf82c9c"}], "stats": {"total": 31, "additions": 25, "deletions": 6}, "files": [{"sha": "b8bacb24c7161a5e3ff3abea83607bef3edc322b", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/1488095b08b0b85bff4b3d6d432e3f7cc7cd6d09/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1488095b08b0b85bff4b3d6d432e3f7cc7cd6d09/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=1488095b08b0b85bff4b3d6d432e3f7cc7cd6d09", "patch": "@@ -121,7 +121,8 @@ pub struct LoweringContext<'a> {\n     // (i.e. it doesn't appear in the in_scope_lifetimes list), it is added\n     // to this list. The results of this list are then added to the list of\n     // lifetime definitions in the corresponding impl or function generics.\n-    lifetimes_to_define: Vec<(Span, Name)>,\n+    lifetimes_to_define: Vec<(Span, hir::LifetimeName)>,\n+\n     // Whether or not in-band lifetimes are being collected. This is used to\n     // indicate whether or not we're in a place where new lifetimes will result\n     // in in-band lifetime definitions, such a function or an impl header.\n@@ -566,14 +567,23 @@ impl<'a> LoweringContext<'a> {\n \n         let params = lifetimes_to_define\n             .into_iter()\n-            .map(|(span, name)| {\n+            .map(|(span, hir_name)| {\n                 let def_node_id = self.next_id().node_id;\n \n+                let str_name = match hir_name {\n+                    hir::LifetimeName::Name(n) => n.as_str(),\n+                    hir::LifetimeName::Implicit\n+                    | hir::LifetimeName::Underscore\n+                    | hir::LifetimeName::Static => {\n+                        span_bug!(span, \"unexpected in-band lifetime name: {:?}\", hir_name)\n+                    }\n+                };\n+\n                 // Add a definition for the in-band lifetime def\n                 self.resolver.definitions().create_def_with_parent(\n                     parent_id.index,\n                     def_node_id,\n-                    DefPathData::LifetimeDef(name.as_str()),\n+                    DefPathData::LifetimeDef(str_name),\n                     DefIndexAddressSpace::High,\n                     Mark::root(),\n                     span,\n@@ -583,7 +593,7 @@ impl<'a> LoweringContext<'a> {\n                     lifetime: hir::Lifetime {\n                         id: def_node_id,\n                         span,\n-                        name: hir::LifetimeName::Name(name),\n+                        name: hir_name,\n                     },\n                     bounds: Vec::new().into(),\n                     pure_wrt_drop: false,\n@@ -613,14 +623,16 @@ impl<'a> LoweringContext<'a> {\n             return;\n         }\n \n+        let hir_name = hir::LifetimeName::Name(name);\n+\n         if self.lifetimes_to_define\n             .iter()\n-            .any(|(_, lt_name)| *lt_name == name)\n+            .any(|(_, lt_name)| *lt_name == hir_name)\n         {\n             return;\n         }\n \n-        self.lifetimes_to_define.push((span, name));\n+        self.lifetimes_to_define.push((span, hir_name));\n     }\n \n     // Evaluates `f` with the lifetimes in `lt_defs` in-scope."}, {"sha": "d94fdb82d9978af33bdeb2515be5e4711abb5ed6", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1488095b08b0b85bff4b3d6d432e3f7cc7cd6d09/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1488095b08b0b85bff4b3d6d432e3f7cc7cd6d09/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=1488095b08b0b85bff4b3d6d432e3f7cc7cd6d09", "patch": "@@ -203,9 +203,16 @@ pub struct Lifetime {\n \n #[derive(Debug, Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Copy)]\n pub enum LifetimeName {\n+    /// User typed nothing. e.g. the lifetime in `&u32`.\n     Implicit,\n+\n+    /// User typed `'_`.\n     Underscore,\n+\n+    /// User wrote `'static`\n     Static,\n+\n+    /// Some user-given name like `'x`\n     Name(Name),\n }\n "}]}