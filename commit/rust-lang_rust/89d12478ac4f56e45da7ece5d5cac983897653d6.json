{"sha": "89d12478ac4f56e45da7ece5d5cac983897653d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5ZDEyNDc4YWM0ZjU2ZTQ1ZGE3ZWNlNWQ1Y2FjOTgzODk3NjUzZDY=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-03-06T01:00:44Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-03-06T01:14:36Z"}, "message": "Remove IdxSet::each_bit", "tree": {"sha": "a84edc1cf3c7039ecdc03f48a07c076777e9afdf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a84edc1cf3c7039ecdc03f48a07c076777e9afdf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89d12478ac4f56e45da7ece5d5cac983897653d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89d12478ac4f56e45da7ece5d5cac983897653d6", "html_url": "https://github.com/rust-lang/rust/commit/89d12478ac4f56e45da7ece5d5cac983897653d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89d12478ac4f56e45da7ece5d5cac983897653d6/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6701d9020f0deb0e8d673fe5ad1247514b3e9db3", "url": "https://api.github.com/repos/rust-lang/rust/commits/6701d9020f0deb0e8d673fe5ad1247514b3e9db3", "html_url": "https://github.com/rust-lang/rust/commit/6701d9020f0deb0e8d673fe5ad1247514b3e9db3"}], "stats": {"total": 42, "additions": 3, "deletions": 39}, "files": [{"sha": "34457d94c3aeec678134a55518fae16d21c19689", "filename": "src/librustc_data_structures/indexed_set.rs", "status": "modified", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/89d12478ac4f56e45da7ece5d5cac983897653d6/src%2Flibrustc_data_structures%2Findexed_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89d12478ac4f56e45da7ece5d5cac983897653d6/src%2Flibrustc_data_structures%2Findexed_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Findexed_set.rs?ref=89d12478ac4f56e45da7ece5d5cac983897653d6", "patch": "@@ -225,12 +225,6 @@ impl<T: Idx> IdxSet<T> {\n         }\n     }\n \n-    /// Calls `f` on each index value held in this set, up to the\n-    /// bound `max_bits` on the size of universe of indexes.\n-    pub fn each_bit<F>(&self, max_bits: usize, f: F) where F: FnMut(T) {\n-        each_bit(self, max_bits, f)\n-    }\n-\n     pub fn elems(&self, universe_size: usize) -> Elems<T> {\n         Elems { i: 0, set: self, universe_size: universe_size }\n     }\n@@ -256,33 +250,6 @@ impl<'a, T: Idx> Iterator for Elems<'a, T> {\n         }\n     }\n }\n-\n-fn each_bit<T: Idx, F>(words: &IdxSet<T>, max_bits: usize, mut f: F) where F: FnMut(T) {\n-    let usize_bits: usize = mem::size_of::<usize>() * 8;\n-\n-    for (word_index, &word) in words.words().iter().enumerate() {\n-        if word != 0 {\n-            let base_index = word_index * usize_bits;\n-            for offset in 0..usize_bits {\n-                let bit = 1 << offset;\n-                if (word & bit) != 0 {\n-                    // NB: we round up the total number of bits\n-                    // that we store in any given bit set so that\n-                    // it is an even multiple of usize::BITS. This\n-                    // means that there may be some stray bits at\n-                    // the end that do not correspond to any\n-                    // actual value; that's why we first check\n-                    // that we are in range of bits_per_block.\n-                    let bit_index = base_index + offset as usize;\n-                    if bit_index >= max_bits {\n-                        return;\n-                    } else {\n-                        f(Idx::new(bit_index));\n-                    }\n-                }\n-            }\n-        }\n-    }\n }\n \n pub struct Iter<'a, T: Idx> {"}, {"sha": "32ca513d7df2c9a00fd026054738c8f1dee2a7fc", "filename": "src/librustc_mir/dataflow/at_location.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/89d12478ac4f56e45da7ece5d5cac983897653d6/src%2Flibrustc_mir%2Fdataflow%2Fat_location.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89d12478ac4f56e45da7ece5d5cac983897653d6/src%2Flibrustc_mir%2Fdataflow%2Fat_location.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fat_location.rs?ref=89d12478ac4f56e45da7ece5d5cac983897653d6", "patch": "@@ -81,8 +81,7 @@ where\n     where\n         F: FnMut(BD::Idx),\n     {\n-        self.curr_state\n-            .each_bit(self.base_results.operator().bits_per_block(), f)\n+        self.curr_state.iter().for_each(f)\n     }\n \n     /// Iterate over each `gen` bit in the current effect (invoke\n@@ -92,8 +91,7 @@ where\n     where\n         F: FnMut(BD::Idx),\n     {\n-        self.stmt_gen\n-            .each_bit(self.base_results.operator().bits_per_block(), f)\n+        self.stmt_gen.iter().for_each(f)\n     }\n \n     pub fn new(results: DataflowResults<BD>) -> Self {"}, {"sha": "7785b6ec17379fcfe03401bf41f3b2ee3b34dbd2", "filename": "src/librustc_mir/dataflow/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/89d12478ac4f56e45da7ece5d5cac983897653d6/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89d12478ac4f56e45da7ece5d5cac983897653d6/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs?ref=89d12478ac4f56e45da7ece5d5cac983897653d6", "patch": "@@ -444,8 +444,7 @@ pub struct DataflowState<O: BitDenotation>\n impl<O: BitDenotation> DataflowState<O> {\n     pub fn each_bit<F>(&self, words: &IdxSet<O::Idx>, f: F) where F: FnMut(O::Idx)\n     {\n-        let bits_per_block = self.operator.bits_per_block();\n-        words.each_bit(bits_per_block, f)\n+        words.iter().for_each(f)\n     }\n \n     pub(crate) fn interpret_set<'c, P>(&self,"}]}