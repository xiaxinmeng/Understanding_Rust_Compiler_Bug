{"sha": "e85adffd6402acce79887e1b911ff33841c6133a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4NWFkZmZkNjQwMmFjY2U3OTg4N2UxYjkxMWZmMzM4NDFjNjEzM2E=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-07-02T16:36:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-02T16:36:52Z"}, "message": "Auto merge of #34443 - eddyb:sized-matters, r=arielb1\n\nDisallow constants and statics from having unsized types.\n\nThis is a `[breaking-change]` which fixes #34390 by banning unsized `const` and `static`, e.g.:\n```rust\nconst A: [i32] = *(&[0, 1, 2] as &[i32]);\nstatic B: str = *\"foo\";\n```\n\nThis was not intentionally allowed, and other than for `static` since some versions ago, it ICE'd.\nIf you've been taking advantage of this with `static`, you should be able to just use references instead.", "tree": {"sha": "fd0240798a92e6f437bf539fe03b646b8094ed0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd0240798a92e6f437bf539fe03b646b8094ed0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e85adffd6402acce79887e1b911ff33841c6133a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e85adffd6402acce79887e1b911ff33841c6133a", "html_url": "https://github.com/rust-lang/rust/commit/e85adffd6402acce79887e1b911ff33841c6133a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e85adffd6402acce79887e1b911ff33841c6133a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a262d303489fcbd8410b4e4cecc563b06799e16", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a262d303489fcbd8410b4e4cecc563b06799e16", "html_url": "https://github.com/rust-lang/rust/commit/7a262d303489fcbd8410b4e4cecc563b06799e16"}, {"sha": "fe7207f6afed3b4727d5228d573803c165a80477", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe7207f6afed3b4727d5228d573803c165a80477", "html_url": "https://github.com/rust-lang/rust/commit/fe7207f6afed3b4727d5228d573803c165a80477"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "3b9ecb88258540cd011bb543b07be1a8bd5145e7", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e85adffd6402acce79887e1b911ff33841c6133a/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e85adffd6402acce79887e1b911ff33841c6133a/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=e85adffd6402acce79887e1b911ff33841c6133a", "patch": "@@ -908,6 +908,9 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n                 err.note(\"only the last field of a struct or enum variant \\\n                           may have a dynamically sized type\");\n             }\n+            ObligationCauseCode::ConstSized => {\n+                err.note(\"constant expressions must have a statically known size\");\n+            }\n             ObligationCauseCode::SharedStatic => {\n                 err.note(\"shared static variables must have a type that implements `Sync`\");\n             }"}, {"sha": "17aa6544fe798d169244c092d16fa17ecf6a45e4", "filename": "src/librustc/traits/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e85adffd6402acce79887e1b911ff33841c6133a/src%2Flibrustc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e85adffd6402acce79887e1b911ff33841c6133a/src%2Flibrustc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fmod.rs?ref=e85adffd6402acce79887e1b911ff33841c6133a", "patch": "@@ -127,6 +127,9 @@ pub enum ObligationCauseCode<'tcx> {\n     // Types of fields (other than the last) in a struct must be sized.\n     FieldSized,\n \n+    // Constant expressions must be sized.\n+    ConstSized,\n+\n     // static items must have `Sync` type\n     SharedStatic,\n "}, {"sha": "3bc90f05d2536c2f41ebcef9a45dcfc4bc2a5a29", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e85adffd6402acce79887e1b911ff33841c6133a/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e85adffd6402acce79887e1b911ff33841c6133a/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=e85adffd6402acce79887e1b911ff33841c6133a", "patch": "@@ -1157,6 +1157,7 @@ fn check_const<'a,'tcx>(ccx: &CrateCtxt<'a,'tcx>,\n         let rty = ccx.tcx.node_id_to_type(id);\n         let fcx = FnCtxt::new(&inh, ty::FnConverging(rty), e.id);\n         let declty = fcx.tcx.lookup_item_type(ccx.tcx.map.local_def_id(id)).ty;\n+        fcx.require_type_is_sized(declty, e.span, traits::ConstSized);\n         fcx.check_const_with_ty(sp, e, declty);\n     });\n }"}, {"sha": "72a5c5fff608457b2d5770316c4ba62b6a9cf341", "filename": "src/test/compile-fail/const-unsized.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/e85adffd6402acce79887e1b911ff33841c6133a/src%2Ftest%2Fcompile-fail%2Fconst-unsized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e85adffd6402acce79887e1b911ff33841c6133a/src%2Ftest%2Fcompile-fail%2Fconst-unsized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-unsized.rs?ref=e85adffd6402acce79887e1b911ff33841c6133a", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::fmt::Debug;\n+\n+const CONST_0: Debug+Sync = *(&0 as &(Debug+Sync));\n+//~^ ERROR `std::fmt::Debug + Sync + 'static: std::marker::Sized` is not satisfied\n+//~| NOTE does not have a constant size known at compile-time\n+//~| NOTE constant expressions must have a statically known size\n+\n+const CONST_FOO: str = *\"foo\";\n+//~^ ERROR `str: std::marker::Sized` is not satisfied\n+//~| NOTE does not have a constant size known at compile-time\n+//~| NOTE constant expressions must have a statically known size\n+\n+static STATIC_1: Debug+Sync = *(&1 as &(Debug+Sync));\n+//~^ ERROR `std::fmt::Debug + Sync + 'static: std::marker::Sized` is not satisfied\n+//~| NOTE does not have a constant size known at compile-time\n+//~| NOTE constant expressions must have a statically known size\n+\n+static STATIC_BAR: str = *\"bar\";\n+//~^ ERROR `str: std::marker::Sized` is not satisfied\n+//~| NOTE does not have a constant size known at compile-time\n+//~| NOTE constant expressions must have a statically known size\n+\n+fn main() {\n+    println!(\"{:?} {:?} {:?} {:?}\", &CONST_0, &CONST_FOO, &STATIC_1, &STATIC_BAR);\n+}"}, {"sha": "b9382520cf9d3166c3ba6461973d4aeff5a4884d", "filename": "src/test/compile-fail/issue-24446.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e85adffd6402acce79887e1b911ff33841c6133a/src%2Ftest%2Fcompile-fail%2Fissue-24446.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e85adffd6402acce79887e1b911ff33841c6133a/src%2Ftest%2Fcompile-fail%2Fissue-24446.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-24446.rs?ref=e85adffd6402acce79887e1b911ff33841c6133a", "patch": "@@ -11,6 +11,8 @@\n fn main() {\n     static foo: Fn() -> u32 = || -> u32 {\n         //~^ ERROR: mismatched types\n+        //~| ERROR: `std::ops::Fn() -> u32 + 'static: std::marker::Sized` is not satisfied\n+\n         0\n     };\n }"}]}