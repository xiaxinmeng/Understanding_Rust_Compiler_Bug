{"sha": "f96c76e8786c08a653089afd96300818838305b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5NmM3NmU4Nzg2YzA4YTY1MzA4OWFmZDk2MzAwODE4ODM4MzA1Yjg=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-22T06:48:28Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-22T06:48:28Z"}, "message": "Use Box<[u8]> instead of Vec<u8> for allocations.", "tree": {"sha": "07bb0f7b9f09958f5996afabf2cd90c6c80b2c57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07bb0f7b9f09958f5996afabf2cd90c6c80b2c57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f96c76e8786c08a653089afd96300818838305b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f96c76e8786c08a653089afd96300818838305b8", "html_url": "https://github.com/rust-lang/rust/commit/f96c76e8786c08a653089afd96300818838305b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f96c76e8786c08a653089afd96300818838305b8/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6b1282eee33e2967775b8139614de361bf3c6f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6b1282eee33e2967775b8139614de361bf3c6f2", "html_url": "https://github.com/rust-lang/rust/commit/f6b1282eee33e2967775b8139614de361bf3c6f2"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "fc66b847ef9d06e1553ffa8ec5ae50880e64fa90", "filename": "src/memory.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f96c76e8786c08a653089afd96300818838305b8/src%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f96c76e8786c08a653089afd96300818838305b8/src%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmemory.rs?ref=f96c76e8786c08a653089afd96300818838305b8", "patch": "@@ -18,7 +18,7 @@ pub struct AllocId(u64);\n \n #[derive(Debug)]\n pub struct Allocation {\n-    pub bytes: Vec<u8>,\n+    pub bytes: Box<[u8]>,\n     pub relocations: BTreeMap<usize, AllocId>,\n     // TODO(tsion): undef mask\n }\n@@ -76,7 +76,10 @@ impl Memory {\n \n     pub fn allocate(&mut self, size: usize) -> Pointer {\n         let id = AllocId(self.next_id);\n-        let alloc = Allocation { bytes: vec![0; size], relocations: BTreeMap::new() };\n+        let alloc = Allocation {\n+            bytes: vec![0; size].into_boxed_slice(),\n+            relocations: BTreeMap::new(),\n+        };\n         self.alloc_map.insert(self.next_id, alloc);\n         self.next_id += 1;\n         Pointer {"}]}