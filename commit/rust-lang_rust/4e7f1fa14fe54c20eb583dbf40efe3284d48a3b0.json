{"sha": "4e7f1fa14fe54c20eb583dbf40efe3284d48a3b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlN2YxZmExNGZlNTRjMjBlYjU4M2RiZjQwZWZlMzI4NGQ0OGEzYjA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-03-21T17:09:53Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-03-21T20:20:59Z"}, "message": "post-drop-elab check-const: explain why we still check qualifs", "tree": {"sha": "daf1b4cac87633c0f85bd902ad032008bf8bf70e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/daf1b4cac87633c0f85bd902ad032008bf8bf70e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e7f1fa14fe54c20eb583dbf40efe3284d48a3b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e7f1fa14fe54c20eb583dbf40efe3284d48a3b0", "html_url": "https://github.com/rust-lang/rust/commit/4e7f1fa14fe54c20eb583dbf40efe3284d48a3b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e7f1fa14fe54c20eb583dbf40efe3284d48a3b0/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41b315a470d583f6446599984ff9ad3bd61012b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/41b315a470d583f6446599984ff9ad3bd61012b2", "html_url": "https://github.com/rust-lang/rust/commit/41b315a470d583f6446599984ff9ad3bd61012b2"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "057092b8ef574884b6970c370e4f5c3325fa1fc1", "filename": "compiler/rustc_mir/src/transform/check_consts/post_drop_elaboration.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4e7f1fa14fe54c20eb583dbf40efe3284d48a3b0/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fpost_drop_elaboration.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e7f1fa14fe54c20eb583dbf40efe3284d48a3b0/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fpost_drop_elaboration.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fpost_drop_elaboration.rs?ref=4e7f1fa14fe54c20eb583dbf40efe3284d48a3b0", "patch": "@@ -79,14 +79,20 @@ impl Visitor<'tcx> for CheckLiveDrops<'mir, 'tcx> {\n             mir::TerminatorKind::Drop { place: dropped_place, .. } => {\n                 let dropped_ty = dropped_place.ty(self.body, self.tcx).ty;\n                 if !NeedsDrop::in_any_value_of_ty(self.ccx, dropped_ty) {\n-                    return;\n+                    bug!(\n+                        \"Drop elaboration left behind a Drop for a type that does not need dropping\"\n+                    );\n                 }\n \n                 if dropped_place.is_indirect() {\n                     self.check_live_drop(terminator.source_info.span);\n                     return;\n                 }\n \n+                // Drop elaboration is not precise enough to accept code like\n+                // `src/test/ui/consts/control-flow/drop-pass.rs`; e.g., when an `Option<Vec<T>>` is\n+                // initialized with `None` and never changed, it still emits drop glue.\n+                // Hence we additionally check the qualifs here to allow more code to pass.\n                 if self.qualifs.needs_drop(self.ccx, dropped_place.local, location) {\n                     // Use the span where the dropped local was declared for the error.\n                     let span = self.body.local_decls[dropped_place.local].source_info.span;"}]}