{"sha": "ae3d42ef0dab39f4d2b36a361f667818e1ffc026", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlM2Q0MmVmMGRhYjM5ZjRkMmIzNmEzNjFmNjY3ODE4ZTFmZmMwMjY=", "commit": {"author": {"name": "Brian Koropoff", "email": "bkoropoff@gmail.com", "date": "2014-09-29T03:24:35Z"}, "committer": {"name": "Brian Koropoff", "email": "bkoropoff@gmail.com", "date": "2014-09-29T03:30:06Z"}, "message": "Use the same JSON schema for encoding enums in PrettyEncoder as in Encoder\n\nCloses issue #17607", "tree": {"sha": "b04ac07c960d57ded7fee3c80a2eeeb54fb01e6e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b04ac07c960d57ded7fee3c80a2eeeb54fb01e6e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae3d42ef0dab39f4d2b36a361f667818e1ffc026", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae3d42ef0dab39f4d2b36a361f667818e1ffc026", "html_url": "https://github.com/rust-lang/rust/commit/ae3d42ef0dab39f4d2b36a361f667818e1ffc026", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae3d42ef0dab39f4d2b36a361f667818e1ffc026/comments", "author": {"login": "bkoropoff", "id": 2101303, "node_id": "MDQ6VXNlcjIxMDEzMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2101303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkoropoff", "html_url": "https://github.com/bkoropoff", "followers_url": "https://api.github.com/users/bkoropoff/followers", "following_url": "https://api.github.com/users/bkoropoff/following{/other_user}", "gists_url": "https://api.github.com/users/bkoropoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkoropoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkoropoff/subscriptions", "organizations_url": "https://api.github.com/users/bkoropoff/orgs", "repos_url": "https://api.github.com/users/bkoropoff/repos", "events_url": "https://api.github.com/users/bkoropoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bkoropoff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bkoropoff", "id": 2101303, "node_id": "MDQ6VXNlcjIxMDEzMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2101303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkoropoff", "html_url": "https://github.com/bkoropoff", "followers_url": "https://api.github.com/users/bkoropoff/followers", "following_url": "https://api.github.com/users/bkoropoff/following{/other_user}", "gists_url": "https://api.github.com/users/bkoropoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkoropoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkoropoff/subscriptions", "organizations_url": "https://api.github.com/users/bkoropoff/orgs", "repos_url": "https://api.github.com/users/bkoropoff/repos", "events_url": "https://api.github.com/users/bkoropoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bkoropoff/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7aa03a3caab2f15f32dcdb20b23510707ba47f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7aa03a3caab2f15f32dcdb20b23510707ba47f8", "html_url": "https://github.com/rust-lang/rust/commit/b7aa03a3caab2f15f32dcdb20b23510707ba47f8"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "ed95fa341b39dee80ceae43bd2f77bf2292fd7b0", "filename": "src/libserialize/json.rs", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ae3d42ef0dab39f4d2b36a361f667818e1ffc026/src%2Flibserialize%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae3d42ef0dab39f4d2b36a361f667818e1ffc026/src%2Flibserialize%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fjson.rs?ref=ae3d42ef0dab39f4d2b36a361f667818e1ffc026", "patch": "@@ -668,16 +668,23 @@ impl<'a> ::Encoder<io::IoError> for PrettyEncoder<'a> {\n         if cnt == 0 {\n             escape_str(self.writer, name)\n         } else {\n+            try!(write!(self.writer, \"{{\\n\"));\n             self.curr_indent += self.indent;\n-            try!(write!(self.writer, \"[\\n\"));\n             try!(spaces(self.writer, self.curr_indent));\n+            try!(write!(self.writer, \"\\\"variant\\\": \"));\n             try!(escape_str(self.writer, name));\n             try!(write!(self.writer, \",\\n\"));\n+            try!(spaces(self.writer, self.curr_indent));\n+            try!(write!(self.writer, \"\\\"fields\\\": [\\n\"));\n+            self.curr_indent += self.indent;\n             try!(f(self));\n             self.curr_indent -= self.indent;\n             try!(write!(self.writer, \"\\n\"));\n             try!(spaces(self.writer, self.curr_indent));\n-            write!(self.writer, \"]\")\n+            self.curr_indent -= self.indent;\n+            try!(write!(self.writer, \"]\\n\"));\n+            try!(spaces(self.writer, self.curr_indent));\n+            write!(self.writer, \"}}\")\n         }\n     }\n \n@@ -2651,12 +2658,13 @@ mod tests {\n                 let mut encoder = PrettyEncoder::new(writer);\n                 animal.encode(&mut encoder).unwrap();\n             }),\n-            \"\\\n-            [\\n  \\\n-                \\\"Frog\\\",\\n  \\\n-                \\\"Henry\\\",\\n  \\\n-                349\\n\\\n-            ]\".to_string()\n+            \"{\\n  \\\n+               \\\"variant\\\": \\\"Frog\\\",\\n  \\\n+               \\\"fields\\\": [\\n    \\\n+                 \\\"Henry\\\",\\n    \\\n+                 349\\n  \\\n+               ]\\n\\\n+             }\".to_string()\n         );\n     }\n "}]}