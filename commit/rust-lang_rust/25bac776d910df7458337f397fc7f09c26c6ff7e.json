{"sha": "25bac776d910df7458337f397fc7f09c26c6ff7e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1YmFjNzc2ZDkxMGRmNzQ1ODMzN2YzOTdmYzdmMDljMjZjNmZmN2U=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-08-19T18:17:10Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-08-21T02:05:03Z"}, "message": "vec: add `shrink_to_fit`\n\nCloses #4960", "tree": {"sha": "cdec154bf7ef25fb28a7a0f55189572805fe7dd9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cdec154bf7ef25fb28a7a0f55189572805fe7dd9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25bac776d910df7458337f397fc7f09c26c6ff7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25bac776d910df7458337f397fc7f09c26c6ff7e", "html_url": "https://github.com/rust-lang/rust/commit/25bac776d910df7458337f397fc7f09c26c6ff7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25bac776d910df7458337f397fc7f09c26c6ff7e/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ba8ccdaee358f34589d5e8e0335cf42e057b729", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ba8ccdaee358f34589d5e8e0335cf42e057b729", "html_url": "https://github.com/rust-lang/rust/commit/0ba8ccdaee358f34589d5e8e0335cf42e057b729"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "0427eec2b058b57cd8ef24e0c51980e2398d5b13", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/25bac776d910df7458337f397fc7f09c26c6ff7e/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25bac776d910df7458337f397fc7f09c26c6ff7e/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=25bac776d910df7458337f397fc7f09c26c6ff7e", "patch": "@@ -1161,6 +1161,7 @@ pub trait OwnedVector<T> {\n     fn reserve(&mut self, n: uint);\n     fn reserve_at_least(&mut self, n: uint);\n     fn capacity(&self) -> uint;\n+    fn shrink_to_fit(&mut self);\n \n     fn push(&mut self, t: T);\n     unsafe fn push_fast(&mut self, t: T);\n@@ -1254,6 +1255,7 @@ impl<T> OwnedVector<T> for ~[T] {\n      *\n      * * n - The number of elements to reserve space for\n      */\n+    #[inline]\n     fn reserve_at_least(&mut self, n: uint) {\n         self.reserve(uint::next_power_of_two(n));\n     }\n@@ -1272,6 +1274,17 @@ impl<T> OwnedVector<T> for ~[T] {\n         }\n     }\n \n+    /// Shrink the capacity of the vector to match the length\n+    fn shrink_to_fit(&mut self) {\n+        unsafe {\n+            let ptr: *mut *mut Vec<()> = cast::transmute(self);\n+            let alloc = (**ptr).fill;\n+            let size = alloc + sys::size_of::<Vec<()>>();\n+            *ptr = realloc_raw(*ptr as *mut c_void, size) as *mut Vec<()>;\n+            (**ptr).alloc = alloc;\n+        }\n+    }\n+\n     /// Append an element to a vector\n     #[inline]\n     fn push(&mut self, t: T) {\n@@ -2327,6 +2340,7 @@ mod tests {\n     use sys;\n     use vec::*;\n     use cmp::*;\n+    use prelude::*;\n \n     fn square(n: uint) -> uint { n * n }\n \n@@ -3600,6 +3614,18 @@ mod tests {\n         }\n         assert!(cnt == 3);\n     }\n+\n+    #[test]\n+    fn test_shrink_to_fit() {\n+        let mut xs = ~[0, 1, 2, 3];\n+        for i in range(4, 100) {\n+            xs.push(i)\n+        }\n+        assert_eq!(xs.capacity(), 128);\n+        xs.shrink_to_fit();\n+        assert_eq!(xs.capacity(), 100);\n+        assert_eq!(xs, range(0, 100).to_owned_vec());\n+    }\n }\n \n #[cfg(test)]"}]}