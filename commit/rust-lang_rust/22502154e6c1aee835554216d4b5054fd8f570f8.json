{"sha": "22502154e6c1aee835554216d4b5054fd8f570f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyNTAyMTU0ZTZjMWFlZTgzNTU1NDIxNmQ0YjUwNTRmZDhmNTcwZjg=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2015-07-15T17:12:30Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2015-07-15T17:16:58Z"}, "message": "Implement lint deprecation/removal\u2026\n\nand deprecate/remove unsigned_negation lint.\n\nThis is useful to avoid causing breaking changes in case #![deny(unknown_lints)]\nis used and lint is removed.", "tree": {"sha": "31405b294c64cc2f409ab10a5b7ae01185729121", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31405b294c64cc2f409ab10a5b7ae01185729121"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22502154e6c1aee835554216d4b5054fd8f570f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22502154e6c1aee835554216d4b5054fd8f570f8", "html_url": "https://github.com/rust-lang/rust/commit/22502154e6c1aee835554216d4b5054fd8f570f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22502154e6c1aee835554216d4b5054fd8f570f8/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c9e3dc75cf2b2d122af0596225594240ed254eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c9e3dc75cf2b2d122af0596225594240ed254eb", "html_url": "https://github.com/rust-lang/rust/commit/0c9e3dc75cf2b2d122af0596225594240ed254eb"}], "stats": {"total": 44, "additions": 34, "deletions": 10}, "files": [{"sha": "6d29a1031c6bc9859bd976c90afa2de89f416f5c", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 32, "deletions": 10, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/22502154e6c1aee835554216d4b5054fd8f570f8/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22502154e6c1aee835554216d4b5054fd8f570f8/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=22502154e6c1aee835554216d4b5054fd8f570f8", "patch": "@@ -75,6 +75,15 @@ enum TargetLint {\n \n     /// Temporary renaming, used for easing migration pain; see #16545\n     Renamed(String, LintId),\n+\n+    /// Lint with this name existed previously, but has been removed/deprecated.\n+    /// The string argument is the reason for removal.\n+    Removed(String),\n+}\n+\n+enum FindLintError {\n+    NotFound,\n+    Removed\n }\n \n impl LintStore {\n@@ -166,30 +175,42 @@ impl LintStore {\n         self.by_name.insert(old_name.to_string(), Renamed(new_name.to_string(), target));\n     }\n \n+    pub fn register_removed(&mut self, name: &str, reason: &str) {\n+        self.by_name.insert(name.into(), Removed(reason.into()));\n+    }\n+\n     #[allow(unused_variables)]\n     fn find_lint(&self, lint_name: &str, sess: &Session, span: Option<Span>)\n-                 -> Option<LintId>\n+                 -> Result<LintId, FindLintError>\n     {\n         match self.by_name.get(lint_name) {\n-            Some(&Id(lint_id)) => Some(lint_id),\n+            Some(&Id(lint_id)) => Ok(lint_id),\n             Some(&Renamed(ref new_name, lint_id)) => {\n                 let warning = format!(\"lint {} has been renamed to {}\",\n                                       lint_name, new_name);\n                 match span {\n                     Some(span) => sess.span_warn(span, &warning[..]),\n                     None => sess.warn(&warning[..]),\n                 };\n-                Some(lint_id)\n-            }\n-            None => None\n+                Ok(lint_id)\n+            },\n+            Some(&Removed(ref reason)) => {\n+                let warning = format!(\"lint {} has been removed: {}\", lint_name, reason);\n+                match span {\n+                    Some(span) => sess.span_warn(span, &warning[..]),\n+                    None => sess.warn(&warning[..])\n+                }\n+                Err(FindLintError::Removed)\n+            },\n+            None => Err(FindLintError::NotFound)\n         }\n     }\n \n     pub fn process_command_line(&mut self, sess: &Session) {\n         for &(ref lint_name, level) in &sess.opts.lint_opts {\n             match self.find_lint(&lint_name[..], sess, None) {\n-                Some(lint_id) => self.set_level(lint_id, (level, CommandLine)),\n-                None => {\n+                Ok(lint_id) => self.set_level(lint_id, (level, CommandLine)),\n+                Err(_) => {\n                     match self.lint_groups.iter().map(|(&x, pair)| (x, pair.0.clone()))\n                                                  .collect::<FnvHashMap<&'static str,\n                                                                        Vec<LintId>>>()\n@@ -398,8 +419,8 @@ impl<'a, 'tcx> Context<'a, 'tcx> {\n                 }\n                 Ok((lint_name, level, span)) => {\n                     match self.lints.find_lint(&lint_name, &self.tcx.sess, Some(span)) {\n-                        Some(lint_id) => vec![(lint_id, level, span)],\n-                        None => {\n+                        Ok(lint_id) => vec![(lint_id, level, span)],\n+                        Err(FindLintError::NotFound) => {\n                             match self.lints.lint_groups.get(&lint_name[..]) {\n                                 Some(&(ref v, _)) => v.iter()\n                                                       .map(|lint_id: &LintId|\n@@ -412,7 +433,8 @@ impl<'a, 'tcx> Context<'a, 'tcx> {\n                                     continue;\n                                 }\n                             }\n-                        }\n+                        },\n+                        Err(FindLintError::Removed) => { continue; }\n                     }\n                 }\n             };"}, {"sha": "54c1a79e10a9b709a43e8ea5c05d2dce6fd2f6dc", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22502154e6c1aee835554216d4b5054fd8f570f8/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22502154e6c1aee835554216d4b5054fd8f570f8/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=22502154e6c1aee835554216d4b5054fd8f570f8", "patch": "@@ -134,4 +134,6 @@ pub fn register_builtins(store: &mut lint::LintStore, sess: Option<&Session>) {\n     store.register_renamed(\"raw_pointer_deriving\", \"raw_pointer_derive\");\n \n     store.register_renamed(\"unknown_features\", \"unused_features\");\n+\n+    store.register_removed(\"unsigned_negation\", \"replaced by negate_unsigned feature gate\");\n }"}]}