{"sha": "012262c4f21cd542cd3d550a6defc2c7e2132848", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxMjI2MmM0ZjIxY2Q1NDJjZDNkNTUwYTZkZWZjMmM3ZTIxMzI4NDg=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-03-22T16:06:47Z"}, "committer": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-03-23T01:22:07Z"}, "message": "apply rustfmt", "tree": {"sha": "583dc99f5df734f18dbf4e9758bbeec6eb97ff09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/583dc99f5df734f18dbf4e9758bbeec6eb97ff09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/012262c4f21cd542cd3d550a6defc2c7e2132848", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/012262c4f21cd542cd3d550a6defc2c7e2132848", "html_url": "https://github.com/rust-lang/rust/commit/012262c4f21cd542cd3d550a6defc2c7e2132848", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/012262c4f21cd542cd3d550a6defc2c7e2132848/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c2eb1cf4158abc4e6ef9725b59b69e7ca277427", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c2eb1cf4158abc4e6ef9725b59b69e7ca277427", "html_url": "https://github.com/rust-lang/rust/commit/7c2eb1cf4158abc4e6ef9725b59b69e7ca277427"}], "stats": {"total": 30, "additions": 16, "deletions": 14}, "files": [{"sha": "c2d7a0cdd288b8e090b7403ba6f47bc81df8562d", "filename": "src/librustc/traits/engine.rs", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/012262c4f21cd542cd3d550a6defc2c7e2132848/src%2Flibrustc%2Ftraits%2Fengine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/012262c4f21cd542cd3d550a6defc2c7e2132848/src%2Flibrustc%2Ftraits%2Fengine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fengine.rs?ref=012262c4f21cd542cd3d550a6defc2c7e2132848", "patch": "@@ -13,7 +13,7 @@ use ty::{self, Ty, TyCtxt};\n use hir::def_id::DefId;\n \n use super::{FulfillmentContext, FulfillmentError};\n-use super::{ObligationCause, PredicateObligation, PendingPredicateObligation};\n+use super::{ObligationCause, PendingPredicateObligation, PredicateObligation};\n \n pub trait TraitEngine<'tcx> {\n     fn normalize_projection_type<'a, 'gcx>(\n@@ -52,18 +52,20 @@ pub trait TraitEngine<'tcx> {\n     fn pending_obligations(&self) -> Vec<PendingPredicateObligation<'tcx>>;\n }\n \n-impl<'a, 'gcx, 'tcx> dyn TraitEngine<'tcx> +'tcx {\n-   pub fn new(_tcx: TyCtxt<'_, '_, 'tcx>) -> Box<Self> {\n-       Box::new(FulfillmentContext::new())\n-   }\n+impl<'a, 'gcx, 'tcx> TraitEngine<'tcx> + 'tcx {\n+    pub fn new(_tcx: TyCtxt<'_, '_, 'tcx>) -> Box<Self> {\n+        Box::new(FulfillmentContext::new())\n+    }\n \n-   pub fn register_predicate_obligations<I>(&mut self,\n-                                            infcx: &InferCtxt<'a, 'gcx, 'tcx>,\n-                                            obligations: I)\n-       where I: IntoIterator<Item = PredicateObligation<'tcx>>\n-   {\n-       for obligation in obligations {\n-           self.register_predicate_obligation(infcx, obligation);\n-       }\n-   }\n+    pub fn register_predicate_obligations<I>(\n+        &mut self,\n+        infcx: &InferCtxt<'a, 'gcx, 'tcx>,\n+        obligations: I,\n+    ) where\n+        I: IntoIterator<Item = PredicateObligation<'tcx>>,\n+    {\n+        for obligation in obligations {\n+            self.register_predicate_obligation(infcx, obligation);\n+        }\n+    }\n }"}]}