{"sha": "d67628e053db3235b9d4d406e4b47113b51a1fad", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2NzYyOGUwNTNkYjMyMzViOWQ0ZDQwNmU0YjQ3MTEzYjUxYTFmYWQ=", "commit": {"author": {"name": "Kyle Stachowicz", "email": "kylestach99@gmail.com", "date": "2018-05-15T06:32:21Z"}, "committer": {"name": "Kyle Stachowicz", "email": "kylestach99@gmail.com", "date": "2018-05-18T23:57:15Z"}, "message": "Add lint checks for unused loop labels", "tree": {"sha": "dd92e4010175bd15d5857b13c5203bb206af58e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd92e4010175bd15d5857b13c5203bb206af58e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d67628e053db3235b9d4d406e4b47113b51a1fad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d67628e053db3235b9d4d406e4b47113b51a1fad", "html_url": "https://github.com/rust-lang/rust/commit/d67628e053db3235b9d4d406e4b47113b51a1fad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d67628e053db3235b9d4d406e4b47113b51a1fad/comments", "author": {"login": "kylestach", "id": 9097872, "node_id": "MDQ6VXNlcjkwOTc4NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/9097872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylestach", "html_url": "https://github.com/kylestach", "followers_url": "https://api.github.com/users/kylestach/followers", "following_url": "https://api.github.com/users/kylestach/following{/other_user}", "gists_url": "https://api.github.com/users/kylestach/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylestach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylestach/subscriptions", "organizations_url": "https://api.github.com/users/kylestach/orgs", "repos_url": "https://api.github.com/users/kylestach/repos", "events_url": "https://api.github.com/users/kylestach/events{/privacy}", "received_events_url": "https://api.github.com/users/kylestach/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kylestach", "id": 9097872, "node_id": "MDQ6VXNlcjkwOTc4NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/9097872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylestach", "html_url": "https://github.com/kylestach", "followers_url": "https://api.github.com/users/kylestach/followers", "following_url": "https://api.github.com/users/kylestach/following{/other_user}", "gists_url": "https://api.github.com/users/kylestach/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylestach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylestach/subscriptions", "organizations_url": "https://api.github.com/users/kylestach/orgs", "repos_url": "https://api.github.com/users/kylestach/repos", "events_url": "https://api.github.com/users/kylestach/events{/privacy}", "received_events_url": "https://api.github.com/users/kylestach/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "952f344cdc0bca58d9f6c54dcfbae0890246e886", "url": "https://api.github.com/repos/rust-lang/rust/commits/952f344cdc0bca58d9f6c54dcfbae0890246e886", "html_url": "https://github.com/rust-lang/rust/commit/952f344cdc0bca58d9f6c54dcfbae0890246e886"}], "stats": {"total": 156, "additions": 154, "deletions": 2}, "files": [{"sha": "19e0bbd8305309c9b31766ce0021d9148554c086", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d67628e053db3235b9d4d406e4b47113b51a1fad/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d67628e053db3235b9d4d406e4b47113b51a1fad/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=d67628e053db3235b9d4d406e4b47113b51a1fad", "patch": "@@ -110,6 +110,7 @@ pub fn register_builtins(store: &mut lint::LintStore, sess: Option<&Session>) {\n \n     add_early_builtin_with_new!(sess,\n                                 DeprecatedAttr,\n+                                UnusedLoopLabel,\n                                 );\n \n     add_builtin!(sess,\n@@ -177,7 +178,8 @@ pub fn register_builtins(store: &mut lint::LintStore, sess: Option<&Session>) {\n                     UNUSED_DOC_COMMENT,\n                     UNUSED_EXTERN_CRATES,\n                     UNUSED_FEATURES,\n-                    UNUSED_PARENS);\n+                    UNUSED_PARENS,\n+                    UNUSED_LOOP_LABEL);\n \n     add_lint_group!(sess,\n                     \"rust_2018_idioms\","}, {"sha": "38c5a36067c46ba5175cf7ca05e20fa05b9ec54d", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/d67628e053db3235b9d4d406e4b47113b51a1fad/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d67628e053db3235b9d4d406e4b47113b51a1fad/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=d67628e053db3235b9d4d406e4b47113b51a1fad", "patch": "@@ -25,6 +25,8 @@ use syntax_pos::Span;\n \n use rustc::hir;\n \n+use std::vec;\n+\n declare_lint! {\n     pub UNUSED_MUST_USE,\n     Warn,\n@@ -464,3 +466,64 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnusedAllocation {\n         }\n     }\n }\n+\n+declare_lint! {\n+    pub(super) UNUSED_LOOP_LABEL,\n+    Warn,\n+    \"warns on unused labels for loops\"\n+}\n+\n+#[derive(Clone)]\n+pub struct UnusedLoopLabel(pub vec::Vec<ast::Label>);\n+\n+impl UnusedLoopLabel {\n+    pub fn new() -> Self {\n+        UnusedLoopLabel(vec![])\n+    }\n+}\n+\n+impl LintPass for UnusedLoopLabel {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array!(UNUSED_LOOP_LABEL)\n+    }\n+}\n+\n+impl EarlyLintPass for UnusedLoopLabel {\n+    fn check_expr(&mut self, _: &EarlyContext, expr: &ast::Expr) {\n+        match expr.node {\n+            ast::ExprKind::While(_, _, Some(ref label))\n+            | ast::ExprKind::WhileLet(_, _, _, Some(ref label))\n+            | ast::ExprKind::ForLoop(_, _, _, Some(ref label))\n+            | ast::ExprKind::Loop(_, Some(ref label)) => {\n+                self.0.push(*label);\n+            }\n+            ast::ExprKind::Break(Some(ref label), _) | ast::ExprKind::Continue(Some(ref label)) => {\n+                'remove_used_label: for i in (0..self.0.len()).rev() {\n+                    if self.0.get(i).unwrap().ident.name == label.ident.name {\n+                        self.0.remove(i);\n+                        break 'remove_used_label;\n+                    }\n+                }\n+            }\n+            _ => {}\n+        }\n+    }\n+\n+    fn check_expr_post(&mut self, ctxt: &EarlyContext, expr: &ast::Expr) {\n+        match expr.node {\n+            ast::ExprKind::While(_, _, Some(ref label))\n+            | ast::ExprKind::WhileLet(_, _, _, Some(ref label))\n+            | ast::ExprKind::ForLoop(_, _, _, Some(ref label))\n+            | ast::ExprKind::Loop(_, Some(ref label)) => if !self.0.is_empty() {\n+                {\n+                    let unused_label = self.0.last().unwrap();\n+                    if label.ident.name == unused_label.ident.name {\n+                        ctxt.span_lint(UNUSED_LOOP_LABEL, label.ident.span, \"unused loop label\");\n+                    }\n+                }\n+                self.0.pop();\n+            },\n+            _ => {}\n+        }\n+    }\n+}"}, {"sha": "7b6cee96a875c25e0cf37008f97434f1137312cc", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d67628e053db3235b9d4d406e4b47113b51a1fad/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d67628e053db3235b9d4d406e4b47113b51a1fad/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=d67628e053db3235b9d4d406e4b47113b51a1fad", "patch": "@@ -1705,7 +1705,7 @@ impl<'a, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M\n             let mut trace_text = \"\\n\\nAn error occurred in miri:\\n\".to_string();\n             backtrace.resolve();\n             write!(trace_text, \"backtrace frames: {}\\n\", backtrace.frames().len()).unwrap();\n-            'frames: for (i, frame) in backtrace.frames().iter().enumerate() {\n+            for (i, frame) in backtrace.frames().iter().enumerate() {\n                 if frame.symbols().is_empty() {\n                     write!(trace_text, \"{}: no symbols\\n\", i).unwrap();\n                 }"}, {"sha": "b3142cd8633759738b70e05ee7d00b62e50f0545", "filename": "src/test/ui/lint/unused_loop_label.rs", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/d67628e053db3235b9d4d406e4b47113b51a1fad/src%2Ftest%2Fui%2Flint%2Funused_loop_label.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d67628e053db3235b9d4d406e4b47113b51a1fad/src%2Ftest%2Fui%2Flint%2Funused_loop_label.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_loop_label.rs?ref=d67628e053db3235b9d4d406e4b47113b51a1fad", "patch": "@@ -0,0 +1,55 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// The output should warn when a loop label is not used. However, it\n+// should also deal with the edge cases where a label is shadowed,\n+// within nested loops\n+\n+// compile-pass\n+// compile-flags: -W unused_loop_label\n+\n+fn main() {\n+    'unused_while_label: while 0 == 0 {\n+        //~^ WARN unused loop label\n+    }\n+\n+    let opt = Some(0);\n+    'unused_while_let_label: while let Some(_) = opt {\n+        //~^ WARN unused loop label\n+    }\n+\n+    'unused_for_label: for _ in 0..10 {\n+        //~^ WARN unused loop label\n+    }\n+\n+    'used_loop_label: loop {\n+        break 'used_loop_label;\n+    }\n+\n+    'used_loop_label_outer: loop {\n+        'used_loop_label_inner: loop {\n+            break 'used_loop_label_inner;\n+        }\n+        break 'used_loop_label_outer;\n+    }\n+\n+    'unused_loop_label_outer: loop {\n+        'unused_loop_label_inner: loop {\n+            //~^ WARN unused loop label\n+            break 'unused_loop_label_outer;\n+        }\n+    }\n+\n+    // This is diverging, so put it at the end so we don't get unreachable_code errors everywhere\n+    // else\n+    'unused_loop_label: loop {\n+        //~^ WARN unused loop label\n+    }\n+}"}, {"sha": "4804c268975f7994752944670576ea2ace2511ae", "filename": "src/test/ui/lint/unused_loop_label.stderr", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/d67628e053db3235b9d4d406e4b47113b51a1fad/src%2Ftest%2Fui%2Flint%2Funused_loop_label.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d67628e053db3235b9d4d406e4b47113b51a1fad/src%2Ftest%2Fui%2Flint%2Funused_loop_label.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_loop_label.stderr?ref=d67628e053db3235b9d4d406e4b47113b51a1fad", "patch": "@@ -0,0 +1,32 @@\n+warning: unused loop label\n+  --> $DIR/unused_loop_label.rs:19:5\n+   |\n+LL |     'unused_while_label: while 0 == 0 {\n+   |     ^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: requested on the command line with `-W unused-loop-label`\n+\n+warning: unused loop label\n+  --> $DIR/unused_loop_label.rs:24:5\n+   |\n+LL |     'unused_while_let_label: while let Some(_) = opt {\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^\n+\n+warning: unused loop label\n+  --> $DIR/unused_loop_label.rs:28:5\n+   |\n+LL |     'unused_for_label: for _ in 0..10 {\n+   |     ^^^^^^^^^^^^^^^^^\n+\n+warning: unused loop label\n+  --> $DIR/unused_loop_label.rs:44:9\n+   |\n+LL |         'unused_loop_label_inner: loop {\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+warning: unused loop label\n+  --> $DIR/unused_loop_label.rs:52:5\n+   |\n+LL |     'unused_loop_label: loop {\n+   |     ^^^^^^^^^^^^^^^^^^\n+"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "src/test/ui/lint/unused_loop_label.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d67628e053db3235b9d4d406e4b47113b51a1fad/src%2Ftest%2Fui%2Flint%2Funused_loop_label.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/d67628e053db3235b9d4d406e4b47113b51a1fad/src%2Ftest%2Fui%2Flint%2Funused_loop_label.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_loop_label.stdout?ref=d67628e053db3235b9d4d406e4b47113b51a1fad"}]}