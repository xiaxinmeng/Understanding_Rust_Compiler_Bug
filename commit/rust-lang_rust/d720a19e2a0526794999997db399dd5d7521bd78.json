{"sha": "d720a19e2a0526794999997db399dd5d7521bd78", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3MjBhMTllMmEwNTI2Nzk0OTk5OTk3ZGIzOTlkZDVkNzUyMWJkNzg=", "commit": {"author": {"name": "VillSnow", "email": "vill.snow@gmail.com", "date": "2020-06-28T07:45:56Z"}, "committer": {"name": "VillSnow", "email": "vill.snow@gmail.com", "date": "2020-06-28T07:45:56Z"}, "message": "Update doc comment", "tree": {"sha": "9d6a9e7855be76cc47578c3d6ce8c8f37a6201c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d6a9e7855be76cc47578c3d6ce8c8f37a6201c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d720a19e2a0526794999997db399dd5d7521bd78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d720a19e2a0526794999997db399dd5d7521bd78", "html_url": "https://github.com/rust-lang/rust/commit/d720a19e2a0526794999997db399dd5d7521bd78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d720a19e2a0526794999997db399dd5d7521bd78/comments", "author": {"login": "VillSnow", "id": 12480493, "node_id": "MDQ6VXNlcjEyNDgwNDkz", "avatar_url": "https://avatars.githubusercontent.com/u/12480493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VillSnow", "html_url": "https://github.com/VillSnow", "followers_url": "https://api.github.com/users/VillSnow/followers", "following_url": "https://api.github.com/users/VillSnow/following{/other_user}", "gists_url": "https://api.github.com/users/VillSnow/gists{/gist_id}", "starred_url": "https://api.github.com/users/VillSnow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VillSnow/subscriptions", "organizations_url": "https://api.github.com/users/VillSnow/orgs", "repos_url": "https://api.github.com/users/VillSnow/repos", "events_url": "https://api.github.com/users/VillSnow/events{/privacy}", "received_events_url": "https://api.github.com/users/VillSnow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "VillSnow", "id": 12480493, "node_id": "MDQ6VXNlcjEyNDgwNDkz", "avatar_url": "https://avatars.githubusercontent.com/u/12480493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VillSnow", "html_url": "https://github.com/VillSnow", "followers_url": "https://api.github.com/users/VillSnow/followers", "following_url": "https://api.github.com/users/VillSnow/following{/other_user}", "gists_url": "https://api.github.com/users/VillSnow/gists{/gist_id}", "starred_url": "https://api.github.com/users/VillSnow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VillSnow/subscriptions", "organizations_url": "https://api.github.com/users/VillSnow/orgs", "repos_url": "https://api.github.com/users/VillSnow/repos", "events_url": "https://api.github.com/users/VillSnow/events{/privacy}", "received_events_url": "https://api.github.com/users/VillSnow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83d599826f890fd991687e17a1b389bcdf3d2f65", "url": "https://api.github.com/repos/rust-lang/rust/commits/83d599826f890fd991687e17a1b389bcdf3d2f65", "html_url": "https://github.com/rust-lang/rust/commit/83d599826f890fd991687e17a1b389bcdf3d2f65"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "11561c392864ff97fcd9b89f7b3682f99719a121", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d720a19e2a0526794999997db399dd5d7521bd78/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d720a19e2a0526794999997db399dd5d7521bd78/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=d720a19e2a0526794999997db399dd5d7521bd78", "patch": "@@ -2664,13 +2664,17 @@ impl<T> [T] {\n         self.iter().is_sorted_by_key(f)\n     }\n \n-    /// Returns index of partition point according to the given predicate,\n-    /// such that all those that return true precede the index and\n-    /// such that all those that return false succeed the index.\n+    /// Returns the index of the partition point according to the given predicate\n+    // (the index of the first element of the second partition).\n     ///\n-    /// The slice must be partitioned\n-    /// so that all elements where the predicate returns true\n-    /// precede the elements where the predicate returns false.\n+    /// The slice is assumed to be partitioned according to the given predicate.\n+    /// This means that all elements for which the predicate returns true are at the start of the slice\n+    /// and all elements for which the predicate returns false are at the end.\n+    /// For example, [7, 15, 3, 5, 4, 12, 6] is a partitioned under the predicate x % 2 != 0\n+    /// (all odd numbers are at the start, all even at the end).\n+    ///\n+    /// If this slice is not partitioned, the returned result is unspecified and meaningless,\n+    /// as this method performs a kind of binary search.\n     ///\n     /// # Examples\n     ///"}]}