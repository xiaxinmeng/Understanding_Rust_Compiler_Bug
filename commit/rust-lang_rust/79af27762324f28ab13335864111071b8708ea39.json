{"sha": "79af27762324f28ab13335864111071b8708ea39", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5YWYyNzc2MjMyNGYyOGFiMTMzMzU4NjQxMTEwNzFiODcwOGVhMzk=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-05T17:07:49Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-05T22:22:17Z"}, "message": "address Niko's comments", "tree": {"sha": "4b9d73dd0d4b9409392e252c50759ec8f387fb9b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b9d73dd0d4b9409392e252c50759ec8f387fb9b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79af27762324f28ab13335864111071b8708ea39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79af27762324f28ab13335864111071b8708ea39", "html_url": "https://github.com/rust-lang/rust/commit/79af27762324f28ab13335864111071b8708ea39", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79af27762324f28ab13335864111071b8708ea39/comments", "author": null, "committer": null, "parents": [{"sha": "ab0c7af376c612374226c83d82e6387eb7cc9666", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab0c7af376c612374226c83d82e6387eb7cc9666", "html_url": "https://github.com/rust-lang/rust/commit/ab0c7af376c612374226c83d82e6387eb7cc9666"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "9945e264bfc2a4ae3493f4acb1d14f53c8f4d4b0", "filename": "src/librustc_typeck/check/closure.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/79af27762324f28ab13335864111071b8708ea39/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79af27762324f28ab13335864111071b8708ea39/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs?ref=79af27762324f28ab13335864111071b8708ea39", "patch": "@@ -45,14 +45,14 @@ pub fn check_expr_closure<'a,'tcx>(fcx: &FnCtxt<'a,'tcx>,\n             // that, otherwise we'll fall back to boxed closures.\n             match expected_sig_and_kind {\n                 None => { // don't have information about the kind, request explicit annotation\n-                    // HACK We still need to typeck the body, so assume `FnMut` kind just for that\n+                    // NB We still need to typeck the body, so assume `FnMut` kind just for that\n                     let kind = ty::FnMutUnboxedClosureKind;\n \n                     check_unboxed_closure(fcx, expr, kind, decl, body, None);\n \n                     fcx.ccx.tcx.sess.span_err(\n                         expr.span,\n-                        \"Can't infer the \\\"kind\\\" of the closure, explicitly annotate it. e.g. \\\n+                        \"can't infer the \\\"kind\\\" of the closure, explicitly annotate it. e.g. \\\n                         `|&:| {}`\");\n                 },\n                 Some((sig, kind)) => {"}]}