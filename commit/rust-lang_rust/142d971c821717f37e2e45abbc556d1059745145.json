{"sha": "142d971c821717f37e2e45abbc556d1059745145", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0MmQ5NzFjODIxNzE3ZjM3ZTJlNDVhYmJjNTU2ZDEwNTk3NDUxNDU=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-12-17T09:34:19Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-12-17T09:34:19Z"}, "message": "Add regression test for write_primval bug.", "tree": {"sha": "f938177051f97f55378f5ea578169ab5aeed61cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f938177051f97f55378f5ea578169ab5aeed61cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/142d971c821717f37e2e45abbc556d1059745145", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/142d971c821717f37e2e45abbc556d1059745145", "html_url": "https://github.com/rust-lang/rust/commit/142d971c821717f37e2e45abbc556d1059745145", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/142d971c821717f37e2e45abbc556d1059745145/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96b83ebb7cc2ac8d7734f2dfaeb4e93e8666bea2", "url": "https://api.github.com/repos/rust-lang/rust/commits/96b83ebb7cc2ac8d7734f2dfaeb4e93e8666bea2", "html_url": "https://github.com/rust-lang/rust/commit/96b83ebb7cc2ac8d7734f2dfaeb4e93e8666bea2"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "1bbe45277c43f4573b2eac029643814d6fa078a8", "filename": "tests/run-pass/too-large-primval-write-problem.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/142d971c821717f37e2e45abbc556d1059745145/tests%2Frun-pass%2Ftoo-large-primval-write-problem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/142d971c821717f37e2e45abbc556d1059745145/tests%2Frun-pass%2Ftoo-large-primval-write-problem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ftoo-large-primval-write-problem.rs?ref=142d971c821717f37e2e45abbc556d1059745145", "patch": "@@ -0,0 +1,23 @@\n+// PrimVals in Miri are represented with 8 bytes (u64) and at the time of writing, the `-x`\n+// will sign extend into the entire 8 bytes. Then, if you tried to write the `-x` into\n+// something smaller than 8 bytes, like a 4 byte pointer, it would crash in byteorder crate\n+// code that assumed only the low 4 bytes would be set. Actually, we were masking properly for\n+// everything except pointers before I fixed it, so this was probably impossible to reproduce on\n+// 64-bit.\n+//\n+// This is just intended as a regression test to make sure we don't reintroduce this problem.\n+\n+#[cfg(target_pointer_width = \"32\")]\n+fn main() {\n+    use std::mem::transmute;\n+\n+    // Make the weird PrimVal.\n+    let x = 1i32;\n+    let bad = unsafe { transmute::<i32, *const u8>(-x) };\n+\n+    // Force it through the Memory::write_primval code.\n+    Box::new(bad);\n+}\n+\n+#[cfg(not(target_pointer_width = \"32\"))]\n+fn main() {}"}]}