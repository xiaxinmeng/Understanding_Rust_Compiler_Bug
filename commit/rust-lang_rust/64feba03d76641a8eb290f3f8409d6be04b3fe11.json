{"sha": "64feba03d76641a8eb290f3f8409d6be04b3fe11", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0ZmViYTAzZDc2NjQxYThlYjI5MGYzZjg0MDlkNmJlMDRiM2ZlMTE=", "commit": {"author": {"name": "Val Vanderschaegen", "email": "valere.vanderschaegen@gmail.com", "date": "2016-05-13T19:01:45Z"}, "committer": {"name": "Val Vanderschaegen", "email": "valere.vanderschaegen@gmail.com", "date": "2016-05-13T19:01:45Z"}, "message": "Updated based on CR feedback.", "tree": {"sha": "584a434f499093f8296b32ced207f2896e0e76c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/584a434f499093f8296b32ced207f2896e0e76c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64feba03d76641a8eb290f3f8409d6be04b3fe11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64feba03d76641a8eb290f3f8409d6be04b3fe11", "html_url": "https://github.com/rust-lang/rust/commit/64feba03d76641a8eb290f3f8409d6be04b3fe11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64feba03d76641a8eb290f3f8409d6be04b3fe11/comments", "author": {"login": "vvanders", "id": 14142801, "node_id": "MDQ6VXNlcjE0MTQyODAx", "avatar_url": "https://avatars.githubusercontent.com/u/14142801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vvanders", "html_url": "https://github.com/vvanders", "followers_url": "https://api.github.com/users/vvanders/followers", "following_url": "https://api.github.com/users/vvanders/following{/other_user}", "gists_url": "https://api.github.com/users/vvanders/gists{/gist_id}", "starred_url": "https://api.github.com/users/vvanders/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vvanders/subscriptions", "organizations_url": "https://api.github.com/users/vvanders/orgs", "repos_url": "https://api.github.com/users/vvanders/repos", "events_url": "https://api.github.com/users/vvanders/events{/privacy}", "received_events_url": "https://api.github.com/users/vvanders/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vvanders", "id": 14142801, "node_id": "MDQ6VXNlcjE0MTQyODAx", "avatar_url": "https://avatars.githubusercontent.com/u/14142801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vvanders", "html_url": "https://github.com/vvanders", "followers_url": "https://api.github.com/users/vvanders/followers", "following_url": "https://api.github.com/users/vvanders/following{/other_user}", "gists_url": "https://api.github.com/users/vvanders/gists{/gist_id}", "starred_url": "https://api.github.com/users/vvanders/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vvanders/subscriptions", "organizations_url": "https://api.github.com/users/vvanders/orgs", "repos_url": "https://api.github.com/users/vvanders/repos", "events_url": "https://api.github.com/users/vvanders/events{/privacy}", "received_events_url": "https://api.github.com/users/vvanders/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7da9ea0af48ccf9468863408b449d33c415cbde7", "url": "https://api.github.com/repos/rust-lang/rust/commits/7da9ea0af48ccf9468863408b449d33c415cbde7", "html_url": "https://github.com/rust-lang/rust/commit/7da9ea0af48ccf9468863408b449d33c415cbde7"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "e690f4edd47deadc6616237cb64bfc8c13b47732", "filename": "src/doc/book/closures.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/64feba03d76641a8eb290f3f8409d6be04b3fe11/src%2Fdoc%2Fbook%2Fclosures.md", "raw_url": "https://github.com/rust-lang/rust/raw/64feba03d76641a8eb290f3f8409d6be04b3fe11/src%2Fdoc%2Fbook%2Fclosures.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fclosures.md?ref=64feba03d76641a8eb290f3f8409d6be04b3fe11", "patch": "@@ -334,7 +334,7 @@ fn call_with_ref<F>(some_closure:F) -> i32\n Normally you can specify the lifetime of the parameter to our closure. We\n could annotate it on the function declaration:\n \n-```\n+```ignore\n fn call_with_ref<'a, F>(some_closure:F) -> i32 \n     where F: Fn(&'a 32) -> i32 {\n ```\n@@ -348,12 +348,12 @@ to compile.\n In order to say that we only need the lifetime to be valid for the invocation scope\n of the closure we can use Higher-Ranked Trait Bounds with the `for<...>` syntax:\n \n-```\n+```ignore\n fn call_with_ref<F>(some_closure:F) -> i32\n     where F: for<'a> Fn(&'a 32) -> i32 {\n ```\n \n-This lets the rust compiler find the minimum lifetime to invoke our closure and \n+This lets the Rust compiler find the minimum lifetime to invoke our closure and \n satisfy the borrow checker's rules. Our function then compiles and excutes as we\n expect.\n "}]}