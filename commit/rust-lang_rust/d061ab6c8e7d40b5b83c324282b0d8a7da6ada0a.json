{"sha": "d061ab6c8e7d40b5b83c324282b0d8a7da6ada0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwNjFhYjZjOGU3ZDQwYjViODNjMzI0MjgyYjBkOGE3ZGE2YWRhMGE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-30T13:40:15Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-30T13:48:35Z"}, "message": "Code shuffle resiliently", "tree": {"sha": "97795749e06f3d8992b2a2be31761d232ea39b34", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97795749e06f3d8992b2a2be31761d232ea39b34"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d061ab6c8e7d40b5b83c324282b0d8a7da6ada0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d061ab6c8e7d40b5b83c324282b0d8a7da6ada0a", "html_url": "https://github.com/rust-lang/rust/commit/d061ab6c8e7d40b5b83c324282b0d8a7da6ada0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d061ab6c8e7d40b5b83c324282b0d8a7da6ada0a/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee00679331b87dacc5fe608f153be160c1cb144c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee00679331b87dacc5fe608f153be160c1cb144c", "html_url": "https://github.com/rust-lang/rust/commit/ee00679331b87dacc5fe608f153be160c1cb144c"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "a270eb481c0eedef2bd2593553e5e5b15600dd28", "filename": "crates/rust-analyzer/src/cli/analysis_stats.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d061ab6c8e7d40b5b83c324282b0d8a7da6ada0a/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d061ab6c8e7d40b5b83c324282b0d8a7da6ada0a/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs?ref=d061ab6c8e7d40b5b83c324282b0d8a7da6ada0a", "patch": "@@ -309,8 +309,13 @@ pub fn analysis_stats(\n }\n \n fn shuffle<T>(rng: &mut Rand32, slice: &mut [T]) {\n-    for i in (1..slice.len()).rev() {\n-        let idx = rng.rand_range(0..i as u32) as usize;\n-        slice.swap(idx, i)\n+    for i in 0..slice.len() {\n+        randomize_first(rng, &mut slice[i..]);\n+    }\n+\n+    fn randomize_first<T>(rng: &mut Rand32, slice: &mut [T]) {\n+        assert!(!slice.is_empty());\n+        let idx = rng.rand_range(0..slice.len() as u32) as usize;\n+        slice.swap(0, idx);\n     }\n }"}]}