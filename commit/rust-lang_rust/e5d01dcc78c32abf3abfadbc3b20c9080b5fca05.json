{"sha": "e5d01dcc78c32abf3abfadbc3b20c9080b5fca05", "node_id": "C_kwDOAAsO6NoAKGU1ZDAxZGNjNzhjMzJhYmYzYWJmYWRiYzNiMjBjOTA4MGI1ZmNhMDU", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-11-08T11:51:10Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-11-08T11:51:10Z"}, "message": "Remove an address comparison from the parser", "tree": {"sha": "2586837c5e0ab58a4dbe3640671689a1f92222e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2586837c5e0ab58a4dbe3640671689a1f92222e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5d01dcc78c32abf3abfadbc3b20c9080b5fca05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5d01dcc78c32abf3abfadbc3b20c9080b5fca05", "html_url": "https://github.com/rust-lang/rust/commit/e5d01dcc78c32abf3abfadbc3b20c9080b5fca05", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5d01dcc78c32abf3abfadbc3b20c9080b5fca05/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57d3c58ed6e0faf89a62411f96c000ffc9fd3937", "url": "https://api.github.com/repos/rust-lang/rust/commits/57d3c58ed6e0faf89a62411f96c000ffc9fd3937", "html_url": "https://github.com/rust-lang/rust/commit/57d3c58ed6e0faf89a62411f96c000ffc9fd3937"}], "stats": {"total": 7, "additions": 1, "deletions": 6}, "files": [{"sha": "728435b602997bd066d6fadd1303e427d8ae6dff", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e5d01dcc78c32abf3abfadbc3b20c9080b5fca05/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5d01dcc78c32abf3abfadbc3b20c9080b5fca05/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=e5d01dcc78c32abf3abfadbc3b20c9080b5fca05", "patch": "@@ -833,16 +833,11 @@ impl<'a> Parser<'a> {\n                 (\"cast\", None)\n             };\n \n-        // Save the memory location of expr before parsing any following postfix operators.\n-        // This will be compared with the memory location of the output expression.\n-        // If they different we can assume we parsed another expression because the existing expression is not reallocated.\n-        let addr_before = &*cast_expr as *const _ as usize;\n         let with_postfix = self.parse_dot_or_call_expr_with_(cast_expr, span)?;\n-        let changed = addr_before != &*with_postfix as *const _ as usize;\n \n         // Check if an illegal postfix operator has been added after the cast.\n         // If the resulting expression is not a cast, or has a different memory location, it is an illegal postfix operator.\n-        if !matches!(with_postfix.kind, ExprKind::Cast(_, _) | ExprKind::Type(_, _)) || changed {\n+        if !matches!(with_postfix.kind, ExprKind::Cast(_, _) | ExprKind::Type(_, _)) {\n             let msg = format!(\n                 \"{cast_kind} cannot be followed by {}\",\n                 match with_postfix.kind {"}]}