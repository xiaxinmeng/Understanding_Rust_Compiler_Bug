{"sha": "c358ffe7b378923830937c2317efd5e0763b96e3", "node_id": "C_kwDOAAsO6NoAKGMzNThmZmU3YjM3ODkyMzgzMDkzN2MyMzE3ZWZkNWUwNzYzYjk2ZTM", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-02-20T15:43:21Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-02-20T15:43:21Z"}, "message": "Implement LowerHex on Scalar to clean up their display in rustdoc", "tree": {"sha": "4d2bfa8a659bdaefebc21be04b3934aa421b59e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d2bfa8a659bdaefebc21be04b3934aa421b59e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c358ffe7b378923830937c2317efd5e0763b96e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c358ffe7b378923830937c2317efd5e0763b96e3", "html_url": "https://github.com/rust-lang/rust/commit/c358ffe7b378923830937c2317efd5e0763b96e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c358ffe7b378923830937c2317efd5e0763b96e3/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d7aa4763fe7f737d6add4261b9e050b36701089", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d7aa4763fe7f737d6add4261b9e050b36701089", "html_url": "https://github.com/rust-lang/rust/commit/6d7aa4763fe7f737d6add4261b9e050b36701089"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "a41ed0b469bd8d8ddb53fac4ca8e1c86bd910541", "filename": "compiler/rustc_const_eval/src/interpret/validity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c358ffe7b378923830937c2317efd5e0763b96e3/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c358ffe7b378923830937c2317efd5e0763b96e3/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fvalidity.rs?ref=c358ffe7b378923830937c2317efd5e0763b96e3", "patch": "@@ -697,7 +697,7 @@ impl<'rt, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> ValueVisitor<'mir, 'tcx, M>\n                 this.ecx.read_discriminant(op),\n                 this.path,\n                 err_ub!(InvalidTag(val)) =>\n-                    { \"{}\", val } expected { \"a valid enum tag\" },\n+                    { \"{:x}\", val } expected { \"a valid enum tag\" },\n                 err_ub!(InvalidUninitBytes(None)) =>\n                     { \"uninitialized bytes\" } expected { \"a valid enum tag\" },\n                 err_unsup!(ReadPointerAsBytes) =>"}, {"sha": "c5866924eda43d2408b7a5a9a0d804779f095560", "filename": "compiler/rustc_middle/src/mir/interpret/error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c358ffe7b378923830937c2317efd5e0763b96e3/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c358ffe7b378923830937c2317efd5e0763b96e3/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Ferror.rs?ref=c358ffe7b378923830937c2317efd5e0763b96e3", "patch": "@@ -370,7 +370,7 @@ impl fmt::Display for UndefinedBehaviorInfo<'_> {\n             InvalidChar(c) => {\n                 write!(f, \"interpreting an invalid 32-bit value as a char: 0x{:08x}\", c)\n             }\n-            InvalidTag(val) => write!(f, \"enum value has invalid tag: {}\", val),\n+            InvalidTag(val) => write!(f, \"enum value has invalid tag: {:x}\", val),\n             InvalidFunctionPointer(p) => {\n                 write!(f, \"using {:?} as function pointer but it does not point to a function\", p)\n             }"}, {"sha": "abcf416109ba65197019957622d85102f61d70a6", "filename": "compiler/rustc_middle/src/mir/interpret/value.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c358ffe7b378923830937c2317efd5e0763b96e3/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c358ffe7b378923830937c2317efd5e0763b96e3/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fvalue.rs?ref=c358ffe7b378923830937c2317efd5e0763b96e3", "patch": "@@ -153,7 +153,16 @@ impl<Tag: Provenance> fmt::Display for Scalar<Tag> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         match self {\n             Scalar::Ptr(ptr, _size) => write!(f, \"pointer to {:?}\", ptr),\n-            Scalar::Int(int) => write!(f, \"{:?}\", int),\n+            Scalar::Int(int) => write!(f, \"{}\", int),\n+        }\n+    }\n+}\n+\n+impl<Tag: Provenance> fmt::LowerHex for Scalar<Tag> {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        match self {\n+            Scalar::Ptr(ptr, _size) => write!(f, \"pointer to {:?}\", ptr),\n+            Scalar::Int(int) => write!(f, \"0x{:x}\", int),\n         }\n     }\n }\n@@ -456,11 +465,6 @@ impl<'tcx, Tag: Provenance> Scalar<Tag> {\n         // Going through `u64` to check size and truncation.\n         Ok(Double::from_bits(self.to_u64()?.into()))\n     }\n-\n-    // FIXME: Replace current `impl Display for Scalar` with `impl LowerHex`.\n-    pub fn rustdoc_display(&self) -> String {\n-        if let Scalar::Int(int) = self { int.to_string() } else { self.to_string() }\n-    }\n }\n \n #[derive(Clone, Copy, Eq, PartialEq, TyEncodable, TyDecodable, HashStable, Hash)]\n@@ -494,7 +498,7 @@ impl<Tag: Provenance> fmt::Display for ScalarMaybeUninit<Tag> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         match self {\n             ScalarMaybeUninit::Uninit => write!(f, \"uninitialized bytes\"),\n-            ScalarMaybeUninit::Scalar(s) => write!(f, \"{}\", s),\n+            ScalarMaybeUninit::Scalar(s) => write!(f, \"{:x}\", s),\n         }\n     }\n }"}, {"sha": "1d312df1f785890522d1bc0fa700a7d79fbe4a95", "filename": "src/librustdoc/clean/utils.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c358ffe7b378923830937c2317efd5e0763b96e3/src%2Flibrustdoc%2Fclean%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c358ffe7b378923830937c2317efd5e0763b96e3/src%2Flibrustdoc%2Fclean%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Futils.rs?ref=c358ffe7b378923830937c2317efd5e0763b96e3", "patch": "@@ -302,11 +302,7 @@ fn print_const_with_custom_print_scalar(tcx: TyCtxt<'_>, ct: ty::Const<'_>) -> S\n     // For all other types, fallback to the original `pretty_print_const`.\n     match (ct.val(), ct.ty().kind()) {\n         (ty::ConstKind::Value(ConstValue::Scalar(int)), ty::Uint(ui)) => {\n-            format!(\n-                \"{}{}\",\n-                format_integer_with_underscore_sep(&int.rustdoc_display()),\n-                ui.name_str()\n-            )\n+            format!(\"{}{}\", format_integer_with_underscore_sep(&int.to_string()), ui.name_str())\n         }\n         (ty::ConstKind::Value(ConstValue::Scalar(int)), ty::Int(i)) => {\n             let ty = tcx.lift(ct.ty()).unwrap();"}]}