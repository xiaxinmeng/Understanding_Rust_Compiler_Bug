{"sha": "66a1de7d2084a54c5c4b67eac9b94909e700f136", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2YTFkZTdkMjA4NGE1NGM1YzRiNjdlYWM5Yjk0OTA5ZTcwMGYxMzY=", "commit": {"author": {"name": "Arif Roktim", "email": "arifrroktim@gmail.com", "date": "2020-10-24T06:08:21Z"}, "committer": {"name": "Arif Roktim", "email": "arifrroktim@gmail.com", "date": "2020-10-24T06:20:45Z"}, "message": "Allow assist move_arm_cond_to_match_guard inside blocks", "tree": {"sha": "1c9aeefb8660528e64995e3fec8f1fbad7b5a3c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c9aeefb8660528e64995e3fec8f1fbad7b5a3c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66a1de7d2084a54c5c4b67eac9b94909e700f136", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66a1de7d2084a54c5c4b67eac9b94909e700f136", "html_url": "https://github.com/rust-lang/rust/commit/66a1de7d2084a54c5c4b67eac9b94909e700f136", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66a1de7d2084a54c5c4b67eac9b94909e700f136/comments", "author": {"login": "ArifRoktim", "id": 23637819, "node_id": "MDQ6VXNlcjIzNjM3ODE5", "avatar_url": "https://avatars.githubusercontent.com/u/23637819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArifRoktim", "html_url": "https://github.com/ArifRoktim", "followers_url": "https://api.github.com/users/ArifRoktim/followers", "following_url": "https://api.github.com/users/ArifRoktim/following{/other_user}", "gists_url": "https://api.github.com/users/ArifRoktim/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArifRoktim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArifRoktim/subscriptions", "organizations_url": "https://api.github.com/users/ArifRoktim/orgs", "repos_url": "https://api.github.com/users/ArifRoktim/repos", "events_url": "https://api.github.com/users/ArifRoktim/events{/privacy}", "received_events_url": "https://api.github.com/users/ArifRoktim/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ArifRoktim", "id": 23637819, "node_id": "MDQ6VXNlcjIzNjM3ODE5", "avatar_url": "https://avatars.githubusercontent.com/u/23637819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArifRoktim", "html_url": "https://github.com/ArifRoktim", "followers_url": "https://api.github.com/users/ArifRoktim/followers", "following_url": "https://api.github.com/users/ArifRoktim/following{/other_user}", "gists_url": "https://api.github.com/users/ArifRoktim/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArifRoktim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArifRoktim/subscriptions", "organizations_url": "https://api.github.com/users/ArifRoktim/orgs", "repos_url": "https://api.github.com/users/ArifRoktim/repos", "events_url": "https://api.github.com/users/ArifRoktim/events{/privacy}", "received_events_url": "https://api.github.com/users/ArifRoktim/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a9ff042709750d0e413c7a97bc6c4166d46a976", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a9ff042709750d0e413c7a97bc6c4166d46a976", "html_url": "https://github.com/rust-lang/rust/commit/0a9ff042709750d0e413c7a97bc6c4166d46a976"}], "stats": {"total": 87, "additions": 80, "deletions": 7}, "files": [{"sha": "e1855b63d41a4bcccaba6a766fe59c2c10ddacba", "filename": "crates/assists/src/handlers/move_guard.rs", "status": "modified", "additions": 80, "deletions": 7, "changes": 87, "blob_url": "https://github.com/rust-lang/rust/blob/66a1de7d2084a54c5c4b67eac9b94909e700f136/crates%2Fassists%2Fsrc%2Fhandlers%2Fmove_guard.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66a1de7d2084a54c5c4b67eac9b94909e700f136/crates%2Fassists%2Fsrc%2Fhandlers%2Fmove_guard.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fmove_guard.rs?ref=66a1de7d2084a54c5c4b67eac9b94909e700f136", "patch": "@@ -1,5 +1,5 @@\n use syntax::{\n-    ast::{edit::AstNodeEdit, make, AstNode, IfExpr, MatchArm},\n+    ast::{edit::AstNodeEdit, make, AstNode, BlockExpr, Expr, IfExpr, MatchArm},\n     SyntaxKind::WHITESPACE,\n };\n \n@@ -92,9 +92,20 @@ pub(crate) fn move_guard_to_arm_body(acc: &mut Assists, ctx: &AssistContext) ->\n pub(crate) fn move_arm_cond_to_match_guard(acc: &mut Assists, ctx: &AssistContext) -> Option<()> {\n     let match_arm: MatchArm = ctx.find_node_at_offset::<MatchArm>()?;\n     let match_pat = match_arm.pat()?;\n-\n     let arm_body = match_arm.expr()?;\n-    let if_expr: IfExpr = IfExpr::cast(arm_body.syntax().clone())?;\n+\n+    let mut replace_node = None;\n+    let if_expr: IfExpr = IfExpr::cast(arm_body.syntax().clone()).or_else(|| {\n+        let block_expr = BlockExpr::cast(arm_body.syntax().clone())?;\n+        if let Expr::IfExpr(e) = block_expr.expr()? {\n+            replace_node = Some(block_expr.syntax().clone());\n+            Some(e)\n+        } else {\n+            None\n+        }\n+    })?;\n+    let replace_node = replace_node.unwrap_or_else(|| if_expr.syntax().clone());\n+\n     let cond = if_expr.condition()?;\n     let then_block = if_expr.then_branch()?;\n \n@@ -109,19 +120,23 @@ pub(crate) fn move_arm_cond_to_match_guard(acc: &mut Assists, ctx: &AssistContex\n \n     let buf = format!(\" if {}\", cond.syntax().text());\n \n-    let target = if_expr.syntax().text_range();\n     acc.add(\n         AssistId(\"move_arm_cond_to_match_guard\", AssistKind::RefactorRewrite),\n         \"Move condition to match guard\",\n-        target,\n+        replace_node.text_range(),\n         |edit| {\n             let then_only_expr = then_block.statements().next().is_none();\n \n             match &then_block.expr() {\n                 Some(then_expr) if then_only_expr => {\n-                    edit.replace(if_expr.syntax().text_range(), then_expr.syntax().text())\n+                    edit.replace(replace_node.text_range(), then_expr.syntax().text())\n                 }\n-                _ => edit.replace(if_expr.syntax().text_range(), then_block.syntax().text()),\n+                _ if replace_node != *if_expr.syntax() => {\n+                    // Dedent because if_expr is in a BlockExpr\n+                    let replace_with = then_block.dedent(1.into()).syntax().text();\n+                    edit.replace(replace_node.text_range(), replace_with)\n+                }\n+                _ => edit.replace(replace_node.text_range(), then_block.syntax().text()),\n             }\n \n             edit.insert(match_pat.syntax().text_range().end(), buf);\n@@ -224,6 +239,33 @@ fn main() {\n         );\n     }\n \n+    #[test]\n+    fn move_arm_cond_in_block_to_match_guard_works() {\n+        check_assist(\n+            move_arm_cond_to_match_guard,\n+            r#\"\n+fn main() {\n+    match 92 {\n+        x => {\n+            <|>if x > 10 {\n+                false\n+            }\n+        },\n+        _ => true\n+    }\n+}\n+\"#,\n+            r#\"\n+fn main() {\n+    match 92 {\n+        x if x > 10 => false,\n+        _ => true\n+    }\n+}\n+\"#,\n+        );\n+    }\n+\n     #[test]\n     fn move_arm_cond_to_match_guard_if_let_not_works() {\n         check_assist_not_applicable(\n@@ -290,4 +332,35 @@ fn main() {\n \"#,\n         );\n     }\n+\n+    #[test]\n+    fn move_arm_cond_in_block_to_match_guard_if_multiline_body_works() {\n+        check_assist(\n+            move_arm_cond_to_match_guard,\n+            r#\"\n+fn main() {\n+    match 92 {\n+        x => {\n+            if x > 10 {\n+                92;<|>\n+                false\n+            }\n+        }\n+        _ => true\n+    }\n+}\n+\"#,\n+            r#\"\n+fn main() {\n+    match 92 {\n+        x if x > 10 => {\n+            92;\n+            false\n+        }\n+        _ => true\n+    }\n+}\n+\"#,\n+        )\n+    }\n }"}]}