{"sha": "6506df7f65835c7215873f51f26740dc9fa6db0f", "node_id": "C_kwDOAAsO6NoAKDY1MDZkZjdmNjU4MzVjNzIxNTg3M2Y1MWYyNjc0MGRjOWZhNmRiMGY", "commit": {"author": {"name": "Xuanwo", "email": "github@xuanwo.io", "date": "2022-03-28T02:25:35Z"}, "committer": {"name": "Josh Triplett", "email": "josh@joshtriplett.org", "date": "2022-05-18T19:12:07Z"}, "message": "std: Add capacity guarantees notes for OsString\n\nSigned-off-by: Xuanwo <github@xuanwo.io>", "tree": {"sha": "3fd15d1d99f5acce14be8a20cbaf4b7c304daad8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3fd15d1d99f5acce14be8a20cbaf4b7c304daad8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6506df7f65835c7215873f51f26740dc9fa6db0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6506df7f65835c7215873f51f26740dc9fa6db0f", "html_url": "https://github.com/rust-lang/rust/commit/6506df7f65835c7215873f51f26740dc9fa6db0f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6506df7f65835c7215873f51f26740dc9fa6db0f/comments", "author": {"login": "Xuanwo", "id": 5351546, "node_id": "MDQ6VXNlcjUzNTE1NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/5351546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xuanwo", "html_url": "https://github.com/Xuanwo", "followers_url": "https://api.github.com/users/Xuanwo/followers", "following_url": "https://api.github.com/users/Xuanwo/following{/other_user}", "gists_url": "https://api.github.com/users/Xuanwo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xuanwo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xuanwo/subscriptions", "organizations_url": "https://api.github.com/users/Xuanwo/orgs", "repos_url": "https://api.github.com/users/Xuanwo/repos", "events_url": "https://api.github.com/users/Xuanwo/events{/privacy}", "received_events_url": "https://api.github.com/users/Xuanwo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "joshtriplett", "id": 162737, "node_id": "MDQ6VXNlcjE2MjczNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshtriplett", "html_url": "https://github.com/joshtriplett", "followers_url": "https://api.github.com/users/joshtriplett/followers", "following_url": "https://api.github.com/users/joshtriplett/following{/other_user}", "gists_url": "https://api.github.com/users/joshtriplett/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshtriplett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshtriplett/subscriptions", "organizations_url": "https://api.github.com/users/joshtriplett/orgs", "repos_url": "https://api.github.com/users/joshtriplett/repos", "events_url": "https://api.github.com/users/joshtriplett/events{/privacy}", "received_events_url": "https://api.github.com/users/joshtriplett/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10d9ecda48f828e174d7a863fc43a155ad086efd", "url": "https://api.github.com/repos/rust-lang/rust/commits/10d9ecda48f828e174d7a863fc43a155ad086efd", "html_url": "https://github.com/rust-lang/rust/commit/10d9ecda48f828e174d7a863fc43a155ad086efd"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "87d0ca98079cc44631594f690df27eb59d686787", "filename": "library/std/src/ffi/os_str.rs", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/6506df7f65835c7215873f51f26740dc9fa6db0f/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6506df7f65835c7215873f51f26740dc9fa6db0f/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs?ref=6506df7f65835c7215873f51f26740dc9fa6db0f", "patch": "@@ -45,6 +45,11 @@ use crate::sys_common::{AsInner, FromInner, IntoInner};\n /// values, encoded in a less-strict variant of UTF-8. This is useful to\n /// understand when handling capacity and length values.\n ///\n+/// # Capacity of OsString\n+///\n+/// Capacity means UTF-8 byte size for OS strings which created from\n+/// valid unicode, and not otherwise specified for other contents.\n+///\n /// # Creating an `OsString`\n ///\n /// **From a Rust string**: `OsString` implements\n@@ -188,6 +193,11 @@ impl OsString {\n     ///\n     /// See main `OsString` documentation information about encoding.\n     ///\n+    /// # Notes\n+    ///\n+    /// Capacity means UTF-8 byte size for OS strings which created from\n+    /// valid unicode, and not otherwise specified for other contents.\n+    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -231,6 +241,11 @@ impl OsString {\n     ///\n     /// See `OsString` introduction for information about encoding.\n     ///\n+    /// # Notes\n+    ///\n+    /// Capacity means UTF-8 byte size for OS strings which created from\n+    /// valid unicode, and not otherwise specified for other contents.\n+    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -272,6 +287,11 @@ impl OsString {\n     /// greater than or equal to `self.len() + additional`. Does nothing if\n     /// capacity is already sufficient.\n     ///\n+    /// # Notes\n+    ///\n+    /// Capacity means UTF-8 byte size for OS strings which created from\n+    /// valid unicode, and not otherwise specified for other contents.\n+    ///\n     /// # Errors\n     ///\n     /// If the capacity overflows, or the allocator reports a failure, then an error\n@@ -313,6 +333,11 @@ impl OsString {\n     ///\n     /// [`reserve`]: OsString::reserve\n     ///\n+    /// # Notes\n+    ///\n+    /// Capacity means UTF-8 byte size for OS strings which created from\n+    /// valid unicode, and not otherwise specified for other contents.\n+    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -340,6 +365,11 @@ impl OsString {\n     ///\n     /// [`try_reserve`]: OsString::try_reserve\n     ///\n+    /// # Notes\n+    ///\n+    /// Capacity means UTF-8 byte size for OS strings which created from\n+    /// valid unicode, and not otherwise specified for other contents.\n+    ///\n     /// # Errors\n     ///\n     /// If the capacity overflows, or the allocator reports a failure, then an error\n@@ -399,6 +429,11 @@ impl OsString {\n     ///\n     /// If the current capacity is less than the lower limit, this is a no-op.\n     ///\n+    /// # Notes\n+    ///\n+    /// Capacity means UTF-8 byte size for OS strings which created from\n+    /// valid unicode, and not otherwise specified for other contents.\n+    ///\n     /// # Examples\n     ///\n     /// ```"}]}