{"sha": "6a6885c6bd1d44969ced14ab7f3ea9d543bf14a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhNjg4NWM2YmQxZDQ0OTY5Y2VkMTRhYjdmM2VhOWQ1NDNiZjE0YTI=", "commit": {"author": {"name": "Cheng XU", "email": "git@xuc.me", "date": "2021-08-29T00:17:27Z"}, "committer": {"name": "Cheng XU", "email": "git@xuc.me", "date": "2021-08-29T00:18:43Z"}, "message": "add benchmark for BTreeMap::from_iter", "tree": {"sha": "113bde71eb9e52c7d336692455c83be459599e61", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/113bde71eb9e52c7d336692455c83be459599e61"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a6885c6bd1d44969ced14ab7f3ea9d543bf14a2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYKAB0WIQQMYHRMWe9yVY/QcCqHlLXXo8Z/cAUCYSrSYwAKCRCHlLXXo8Z/\ncFb8AP0Vxo8m19eIt7M4GaEeuQZgFYlGVawZoNvhH6WwhfEtsQEAguvaRc/a5la1\ni3vmjX39CvrNn3CCwyilhdSP8eIn+QI=\n=5T1Q\n-----END PGP SIGNATURE-----", "payload": "tree 113bde71eb9e52c7d336692455c83be459599e61\nparent 5eacec9ec7e112a0de1011519a57c45586d58414\nauthor Cheng XU <git@xuc.me> 1630196247 -0700\ncommitter Cheng XU <git@xuc.me> 1630196323 -0700\n\nadd benchmark for BTreeMap::from_iter\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a6885c6bd1d44969ced14ab7f3ea9d543bf14a2", "html_url": "https://github.com/rust-lang/rust/commit/6a6885c6bd1d44969ced14ab7f3ea9d543bf14a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a6885c6bd1d44969ced14ab7f3ea9d543bf14a2/comments", "author": {"login": "xu-cheng", "id": 3105373, "node_id": "MDQ6VXNlcjMxMDUzNzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3105373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xu-cheng", "html_url": "https://github.com/xu-cheng", "followers_url": "https://api.github.com/users/xu-cheng/followers", "following_url": "https://api.github.com/users/xu-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/xu-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/xu-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xu-cheng/subscriptions", "organizations_url": "https://api.github.com/users/xu-cheng/orgs", "repos_url": "https://api.github.com/users/xu-cheng/repos", "events_url": "https://api.github.com/users/xu-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/xu-cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xu-cheng", "id": 3105373, "node_id": "MDQ6VXNlcjMxMDUzNzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3105373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xu-cheng", "html_url": "https://github.com/xu-cheng", "followers_url": "https://api.github.com/users/xu-cheng/followers", "following_url": "https://api.github.com/users/xu-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/xu-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/xu-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xu-cheng/subscriptions", "organizations_url": "https://api.github.com/users/xu-cheng/orgs", "repos_url": "https://api.github.com/users/xu-cheng/repos", "events_url": "https://api.github.com/users/xu-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/xu-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5eacec9ec7e112a0de1011519a57c45586d58414", "url": "https://api.github.com/repos/rust-lang/rust/commits/5eacec9ec7e112a0de1011519a57c45586d58414", "html_url": "https://github.com/rust-lang/rust/commit/5eacec9ec7e112a0de1011519a57c45586d58414"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "c304f74884721a60d976eef7abe200e00999f68e", "filename": "library/alloc/benches/btree/map.rs", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/6a6885c6bd1d44969ced14ab7f3ea9d543bf14a2/library%2Falloc%2Fbenches%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a6885c6bd1d44969ced14ab7f3ea9d543bf14a2/library%2Falloc%2Fbenches%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fbenches%2Fbtree%2Fmap.rs?ref=6a6885c6bd1d44969ced14ab7f3ea9d543bf14a2", "patch": "@@ -54,6 +54,50 @@ macro_rules! map_insert_seq_bench {\n     };\n }\n \n+macro_rules! map_from_iter_rand_bench {\n+    ($name: ident, $n: expr, $map: ident) => {\n+        #[bench]\n+        pub fn $name(b: &mut Bencher) {\n+            let n: usize = $n;\n+            // setup\n+            let mut rng = thread_rng();\n+            let mut vec = Vec::with_capacity(n);\n+\n+            for _ in 0..n {\n+                let i = rng.gen::<usize>() % n;\n+                vec.push((i, i));\n+            }\n+\n+            // measure\n+            b.iter(|| {\n+                let map: $map<_, _> = vec.iter().copied().collect();\n+                black_box(map);\n+            });\n+        }\n+    };\n+}\n+\n+macro_rules! map_from_iter_seq_bench {\n+    ($name: ident, $n: expr, $map: ident) => {\n+        #[bench]\n+        pub fn $name(b: &mut Bencher) {\n+            let n: usize = $n;\n+            // setup\n+            let mut vec = Vec::with_capacity(n);\n+\n+            for i in 0..n {\n+                vec.push((i, i));\n+            }\n+\n+            // measure\n+            b.iter(|| {\n+                let map: $map<_, _> = vec.iter().copied().collect();\n+                black_box(map);\n+            });\n+        }\n+    };\n+}\n+\n macro_rules! map_find_rand_bench {\n     ($name: ident, $n: expr, $map: ident) => {\n         #[bench]\n@@ -111,6 +155,12 @@ map_insert_rand_bench! {insert_rand_10_000, 10_000, BTreeMap}\n map_insert_seq_bench! {insert_seq_100,    100,    BTreeMap}\n map_insert_seq_bench! {insert_seq_10_000, 10_000, BTreeMap}\n \n+map_from_iter_rand_bench! {from_iter_rand_100,    100,    BTreeMap}\n+map_from_iter_rand_bench! {from_iter_rand_10_000, 10_000, BTreeMap}\n+\n+map_from_iter_seq_bench! {from_iter_seq_100,    100,    BTreeMap}\n+map_from_iter_seq_bench! {from_iter_seq_10_000, 10_000, BTreeMap}\n+\n map_find_rand_bench! {find_rand_100,    100,    BTreeMap}\n map_find_rand_bench! {find_rand_10_000, 10_000, BTreeMap}\n "}]}