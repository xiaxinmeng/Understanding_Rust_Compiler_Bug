{"sha": "1e388703c07c6f693d5974b9f8520403a4fc57c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlMzg4NzAzYzA3YzZmNjkzZDU5NzRiOWY4NTIwNDAzYTRmYzU3YzA=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-06-16T08:48:40Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-06-16T08:49:13Z"}, "message": "Add special behaviour when int is zero", "tree": {"sha": "f94668e3aa55501eca3f9de3960c9dce0524b49f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f94668e3aa55501eca3f9de3960c9dce0524b49f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e388703c07c6f693d5974b9f8520403a4fc57c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e388703c07c6f693d5974b9f8520403a4fc57c0", "html_url": "https://github.com/rust-lang/rust/commit/1e388703c07c6f693d5974b9f8520403a4fc57c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e388703c07c6f693d5974b9f8520403a4fc57c0/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5c06a5f62c2cb6f19da84d992cb1bb92784b537", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5c06a5f62c2cb6f19da84d992cb1bb92784b537", "html_url": "https://github.com/rust-lang/rust/commit/c5c06a5f62c2cb6f19da84d992cb1bb92784b537"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "2581c134b26627d0c7ec6f8ac61e841e73b0d9cc", "filename": "src/librustc_mir/interpret/machine.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1e388703c07c6f693d5974b9f8520403a4fc57c0/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e388703c07c6f693d5974b9f8520403a4fc57c0/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs?ref=1e388703c07c6f693d5974b9f8520403a4fc57c0", "patch": "@@ -211,10 +211,14 @@ pub trait Machine<'mir, 'tcx>: Sized {\n     ) -> InterpResult<'tcx>;\n \n     fn int_to_ptr(\n-        _int: u64,\n+        int: u64,\n         _extra: &Self::MemoryExtra,\n     ) -> InterpResult<'tcx, Pointer<Self::PointerTag>> {\n-        Err(InterpErrorInfo::from(InterpError::ReadBytesAsPointer))\n+        if int == 0 {\n+            Err(InterpErrorInfo::from(InterpError::InvalidNullPointerUsage))\n+        } else {\n+            Err(InterpErrorInfo::from(InterpError::ReadBytesAsPointer))\n+        }\n     }\n \n     fn ptr_to_int("}]}