{"sha": "c543f7dbd4cc4afb57cb00b2937b50a3371fa15d", "node_id": "C_kwDOAAsO6NoAKGM1NDNmN2RiZDRjYzRhZmI1N2NiMDBiMjkzN2I1MGEzMzcxZmExNWQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-02-11T06:48:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-11T06:48:10Z"}, "message": "Rollup merge of #93864 - bjorn3:cleanup_archive_handling, r=petrochenkov\n\nRemove ArchiveBuilder::update_symbols\n\nAll paths to an ArchiveBuilder::build call update_symbols first.", "tree": {"sha": "c75d4ec3841c48b24bd768088d4d3c9a32e12559", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c75d4ec3841c48b24bd768088d4d3c9a32e12559"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c543f7dbd4cc4afb57cb00b2937b50a3371fa15d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiBgaqCRBK7hj4Ov3rIwAAaUAIACiusZiVcT1s47fE8hRyo0Vp\n6tIzEGS3ADCyeFpEcl3PPkFXSD5qlrmPNOTJ/ocrZraFCabuBfFHxlHWGk8ZeQ/q\nYGyCx+XxuL+BCwrSMhaFck8KW17wiramgwiCu2AxCxM4wWUwQZUAbdaGUy5p5pPF\n3LO5syl4r5YNE1oitNOZXqgdc0TV0hRdIF5dIEi2Hpkg4XCKeZVfHat3mK8F90Oe\nIj4qOR7QXTYYNRRIthCowA/h8OXw4zQh+NXVCylNmDJNZKiVT28fnplHmIBo3Rai\nvWTTSmCuvEXEpE8enP/ZQmhQVE00B5E1gvwKTb9Jr/xi6lMx5ZNalYNHdulEry0=\n=O2fz\n-----END PGP SIGNATURE-----\n", "payload": "tree c75d4ec3841c48b24bd768088d4d3c9a32e12559\nparent 219fc8f9f06100c675580fab9a875678b9c037a2\nparent 609784711a0a3cb399299d65b58463253541b2da\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1644562090 +0100\ncommitter GitHub <noreply@github.com> 1644562090 +0100\n\nRollup merge of #93864 - bjorn3:cleanup_archive_handling, r=petrochenkov\n\nRemove ArchiveBuilder::update_symbols\n\nAll paths to an ArchiveBuilder::build call update_symbols first.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c543f7dbd4cc4afb57cb00b2937b50a3371fa15d", "html_url": "https://github.com/rust-lang/rust/commit/c543f7dbd4cc4afb57cb00b2937b50a3371fa15d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c543f7dbd4cc4afb57cb00b2937b50a3371fa15d/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "219fc8f9f06100c675580fab9a875678b9c037a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/219fc8f9f06100c675580fab9a875678b9c037a2", "html_url": "https://github.com/rust-lang/rust/commit/219fc8f9f06100c675580fab9a875678b9c037a2"}, {"sha": "609784711a0a3cb399299d65b58463253541b2da", "url": "https://api.github.com/repos/rust-lang/rust/commits/609784711a0a3cb399299d65b58463253541b2da", "html_url": "https://github.com/rust-lang/rust/commit/609784711a0a3cb399299d65b58463253541b2da"}], "stats": {"total": 31, "additions": 2, "deletions": 29}, "files": [{"sha": "a099e8b3a6af3a07806d1c5e3b33996941adc1f1", "filename": "compiler/rustc_codegen_cranelift/src/archive.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c543f7dbd4cc4afb57cb00b2937b50a3371fa15d/compiler%2Frustc_codegen_cranelift%2Fsrc%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c543f7dbd4cc4afb57cb00b2937b50a3371fa15d/compiler%2Frustc_codegen_cranelift%2Fsrc%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2Fsrc%2Farchive.rs?ref=c543f7dbd4cc4afb57cb00b2937b50a3371fa15d", "patch": "@@ -105,8 +105,6 @@ impl<'a> ArchiveBuilder<'a> for ArArchiveBuilder<'a> {\n         Ok(())\n     }\n \n-    fn update_symbols(&mut self) {}\n-\n     fn build(mut self) {\n         enum BuilderKind {\n             Bsd(ar::Builder<File>),"}, {"sha": "fac532f3e9c83a1f2dad6c48a27faecd64a25d2c", "filename": "compiler/rustc_codegen_gcc/src/archive.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c543f7dbd4cc4afb57cb00b2937b50a3371fa15d/compiler%2Frustc_codegen_gcc%2Fsrc%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c543f7dbd4cc4afb57cb00b2937b50a3371fa15d/compiler%2Frustc_codegen_gcc%2Fsrc%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_gcc%2Fsrc%2Farchive.rs?ref=c543f7dbd4cc4afb57cb00b2937b50a3371fa15d", "patch": "@@ -113,9 +113,6 @@ impl<'a> ArchiveBuilder<'a> for ArArchiveBuilder<'a> {\n         Ok(())\n     }\n \n-    fn update_symbols(&mut self) {\n-    }\n-\n     fn build(mut self) {\n         use std::process::Command;\n "}, {"sha": "21bd1dae7ac47161ccfbfe42c981b396a3b3933d", "filename": "compiler/rustc_codegen_llvm/src/back/archive.rs", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c543f7dbd4cc4afb57cb00b2937b50a3371fa15d/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c543f7dbd4cc4afb57cb00b2937b50a3371fa15d/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Farchive.rs?ref=c543f7dbd4cc4afb57cb00b2937b50a3371fa15d", "patch": "@@ -27,7 +27,6 @@ pub struct LlvmArchiveBuilder<'a> {\n     config: ArchiveConfig<'a>,\n     removals: Vec<String>,\n     additions: Vec<Addition>,\n-    should_update_symbols: bool,\n     src_archive: Option<Option<ArchiveRO>>,\n }\n \n@@ -75,7 +74,6 @@ impl<'a> ArchiveBuilder<'a> for LlvmArchiveBuilder<'a> {\n             config,\n             removals: Vec::new(),\n             additions: Vec::new(),\n-            should_update_symbols: false,\n             src_archive: None,\n         }\n     }\n@@ -129,12 +127,6 @@ impl<'a> ArchiveBuilder<'a> for LlvmArchiveBuilder<'a> {\n             .push(Addition::File { path: file.to_path_buf(), name_in_archive: name.to_owned() });\n     }\n \n-    /// Indicate that the next call to `build` should update all symbols in\n-    /// the archive (equivalent to running 'ar s' over it).\n-    fn update_symbols(&mut self) {\n-        self.should_update_symbols = true;\n-    }\n-\n     /// Combine the provided files, rlibs, and native libraries into a single\n     /// `Archive`.\n     fn build(mut self) {\n@@ -313,7 +305,6 @@ impl<'a> LlvmArchiveBuilder<'a> {\n         let mut members = Vec::new();\n \n         let dst = CString::new(self.config.dst.to_str().unwrap())?;\n-        let should_update_symbols = self.should_update_symbols;\n \n         unsafe {\n             if let Some(archive) = self.src_archive() {\n@@ -385,7 +376,7 @@ impl<'a> LlvmArchiveBuilder<'a> {\n                 dst.as_ptr(),\n                 members.len() as libc::size_t,\n                 members.as_ptr() as *const &_,\n-                should_update_symbols,\n+                true,\n                 kind,\n             );\n             let ret = if r.into_result().is_err() {"}, {"sha": "a2f74b9421468105e76a59d75c645a5034b9a6be", "filename": "compiler/rustc_codegen_ssa/src/back/archive.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c543f7dbd4cc4afb57cb00b2937b50a3371fa15d/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c543f7dbd4cc4afb57cb00b2937b50a3371fa15d/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Farchive.rs?ref=c543f7dbd4cc4afb57cb00b2937b50a3371fa15d", "patch": "@@ -51,7 +51,6 @@ pub trait ArchiveBuilder<'a> {\n     fn add_archive<F>(&mut self, archive: &Path, skip: F) -> io::Result<()>\n     where\n         F: FnMut(&str) -> bool + 'static;\n-    fn update_symbols(&mut self);\n \n     fn build(self);\n "}, {"sha": "e53c98421176c69eb22dc361494361bb66463584", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c543f7dbd4cc4afb57cb00b2937b50a3371fa15d/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c543f7dbd4cc4afb57cb00b2937b50a3371fa15d/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=c543f7dbd4cc4afb57cb00b2937b50a3371fa15d", "patch": "@@ -333,10 +333,6 @@ fn link_rlib<'a, B: ArchiveBuilder<'a>>(\n         ab.inject_dll_import_lib(&raw_dylib_name, &raw_dylib_imports, tmpdir);\n     }\n \n-    // After adding all files to the archive, we need to update the\n-    // symbol table of the archive.\n-    ab.update_symbols();\n-\n     // Note that it is important that we add all of our non-object \"magical\n     // files\" *after* all of the object files in the archive. The reason for\n     // this is as follows:\n@@ -365,13 +361,6 @@ fn link_rlib<'a, B: ArchiveBuilder<'a>>(\n             // normal linkers for the platform.\n             let metadata = create_rmeta_file(sess, codegen_results.metadata.raw_data());\n             ab.add_file(&emit_metadata(sess, &metadata, tmpdir));\n-\n-            // After adding all files to the archive, we need to update the\n-            // symbol table of the archive. This currently dies on macOS (see\n-            // #11162), and isn't necessary there anyway\n-            if !sess.target.is_like_osx {\n-                ab.update_symbols();\n-            }\n         }\n \n         RlibFlavor::StaticlibBase => {\n@@ -381,6 +370,7 @@ fn link_rlib<'a, B: ArchiveBuilder<'a>>(\n             }\n         }\n     }\n+\n     return Ok(ab);\n }\n \n@@ -509,7 +499,6 @@ fn link_staticlib<'a, B: ArchiveBuilder<'a>>(\n         sess.fatal(&e);\n     }\n \n-    ab.update_symbols();\n     ab.build();\n \n     if !all_native_libs.is_empty() {\n@@ -2310,7 +2299,6 @@ fn add_upstream_rust_crates<'a, B: ArchiveBuilder<'a>>(\n \n         sess.prof.generic_activity_with_arg(\"link_altering_rlib\", name).run(|| {\n             let mut archive = <B as ArchiveBuilder>::new(sess, &dst, Some(cratepath));\n-            archive.update_symbols();\n \n             let mut any_objects = false;\n             for f in archive.src_files() {"}]}