{"sha": "38bd2514ad7d039f6836b0a05dda4dc5f0849942", "node_id": "C_kwDOAAsO6NoAKDM4YmQyNTE0YWQ3ZDAzOWY2ODM2YjBhMDVkZGE0ZGM1ZjA4NDk5NDI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-19T13:39:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-19T13:39:08Z"}, "message": "Auto merge of #7984 - phansch:disallowed-type-rename, r=xFrednet\n\nPluralize `disallowed_type` lint\n\nThis was brought up in [Zulip] and is also mentioned in the lint naming\nconventions. Since this is still a nursery lint, I think there shouldn't\nbe any problem in renaming it.\n\n[Zulip]: rust-lang.zulipchat.com/#narrow/stream/257328-clippy/topic/disallow_type.20vs.20disallowed-types\n\nchangelog: Rename nursery lint [`disallowed_type`] to [`disallowed_types`].", "tree": {"sha": "a30190b9736388b5a2de27148538e4be80203bcf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a30190b9736388b5a2de27148538e4be80203bcf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38bd2514ad7d039f6836b0a05dda4dc5f0849942", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38bd2514ad7d039f6836b0a05dda4dc5f0849942", "html_url": "https://github.com/rust-lang/rust/commit/38bd2514ad7d039f6836b0a05dda4dc5f0849942", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38bd2514ad7d039f6836b0a05dda4dc5f0849942/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d283cc44c1ac9e0b61ccc66eb1544abed075dfb", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d283cc44c1ac9e0b61ccc66eb1544abed075dfb", "html_url": "https://github.com/rust-lang/rust/commit/0d283cc44c1ac9e0b61ccc66eb1544abed075dfb"}, {"sha": "9b38fb7b71d97e9ee04f210a34df4f99e51a20ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b38fb7b71d97e9ee04f210a34df4f99e51a20ef", "html_url": "https://github.com/rust-lang/rust/commit/9b38fb7b71d97e9ee04f210a34df4f99e51a20ef"}], "stats": {"total": 208, "additions": 116, "deletions": 92}, "files": [{"sha": "dadf01419f74bf0b583e623ffd299d7e93e7e457", "filename": "CHANGELOG.md", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/38bd2514ad7d039f6836b0a05dda4dc5f0849942/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/38bd2514ad7d039f6836b0a05dda4dc5f0849942/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=38bd2514ad7d039f6836b0a05dda4dc5f0849942", "patch": "@@ -70,7 +70,7 @@ Current beta, release 2021-12-02\n   [#7560](https://github.com/rust-lang/rust-clippy/pull/7560)\n * [`unnecessary_unwrap`]: Now also checks for `expect`s\n   [#7584](https://github.com/rust-lang/rust-clippy/pull/7584)\n-* [`disallowed_method`]: Allow adding a reason that will be displayed with the\n+* [`disallowed_methods`]: Allow adding a reason that will be displayed with the\n   lint message\n   [#7621](https://github.com/rust-lang/rust-clippy/pull/7621)\n * [`approx_constant`]: Now checks the MSRV for `LOG10_2` and `LOG2_10`\n@@ -174,7 +174,7 @@ Current stable, released 2021-10-21\n \n * [`needless_continue`]: Now also lints in `loop { continue; }` case\n   [#7477](https://github.com/rust-lang/rust-clippy/pull/7477)\n-* [`disallowed_type`]: Now also primitive types can be disallowed\n+* [`disallowed_types`]: Now also primitive types can be disallowed\n   [#7488](https://github.com/rust-lang/rust-clippy/pull/7488)\n * [`manual_swap`]: Now also lints on xor swaps\n   [#7506](https://github.com/rust-lang/rust-clippy/pull/7506)\n@@ -248,7 +248,7 @@ Released 2021-09-09\n   [#7403](https://github.com/rust-lang/rust-clippy/pull/7403)\n * [`disallowed_script_idents`]\n   [#7400](https://github.com/rust-lang/rust-clippy/pull/7400)\n-* [`disallowed_type`]\n+* [`disallowed_types`]\n   [#7315](https://github.com/rust-lang/rust-clippy/pull/7315)\n * [`missing_enforced_import_renames`]\n   [#7300](https://github.com/rust-lang/rust-clippy/pull/7300)\n@@ -294,7 +294,7 @@ Released 2021-09-09\n   [#7379](https://github.com/rust-lang/rust-clippy/pull/7379)\n * [`redundant_closure`]: Suggests `&mut` for `FnMut`\n   [#7437](https://github.com/rust-lang/rust-clippy/pull/7437)\n-* [`disallowed_method`], [`disallowed_type`]: The configuration values `disallowed-method` and `disallowed-type`\n+* [`disallowed_methods`], [`disallowed_types`]: The configuration values `disallowed-method` and `disallowed-type`\n   no longer require fully qualified paths\n   [#7345](https://github.com/rust-lang/rust-clippy/pull/7345)\n * [`zst_offset`]: Fixed lint invocation after it was accidentally suppressed\n@@ -703,7 +703,7 @@ Released 2021-05-06\n \n ### Enhancements\n \n-* [`disallowed_method`]: Now supports functions in addition to methods\n+* [`disallowed_methods`]: Now supports functions in addition to methods\n   [#6674](https://github.com/rust-lang/rust-clippy/pull/6674)\n * [`upper_case_acronyms`]: Added a new configuration `upper-case-acronyms-aggressive` to\n   trigger the lint if there is more than one uppercase character next to each other\n@@ -1044,7 +1044,7 @@ Released 2020-12-31\n \n * [`field_reassign_with_default`] [#5911](https://github.com/rust-lang/rust-clippy/pull/5911)\n * [`await_holding_refcell_ref`] [#6029](https://github.com/rust-lang/rust-clippy/pull/6029)\n-* [`disallowed_method`] [#6081](https://github.com/rust-lang/rust-clippy/pull/6081)\n+* [`disallowed_methods`] [#6081](https://github.com/rust-lang/rust-clippy/pull/6081)\n * [`inline_asm_x86_att_syntax`] [#6092](https://github.com/rust-lang/rust-clippy/pull/6092)\n * [`inline_asm_x86_intel_syntax`] [#6092](https://github.com/rust-lang/rust-clippy/pull/6092)\n * [`from_iter_instead_of_collect`] [#6101](https://github.com/rust-lang/rust-clippy/pull/6101)\n@@ -2821,9 +2821,9 @@ Released 2018-09-13\n [`derivable_impls`]: https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n [`derive_hash_xor_eq`]: https://rust-lang.github.io/rust-clippy/master/index.html#derive_hash_xor_eq\n [`derive_ord_xor_partial_ord`]: https://rust-lang.github.io/rust-clippy/master/index.html#derive_ord_xor_partial_ord\n-[`disallowed_method`]: https://rust-lang.github.io/rust-clippy/master/index.html#disallowed_method\n+[`disallowed_methods`]: https://rust-lang.github.io/rust-clippy/master/index.html#disallowed_methods\n [`disallowed_script_idents`]: https://rust-lang.github.io/rust-clippy/master/index.html#disallowed_script_idents\n-[`disallowed_type`]: https://rust-lang.github.io/rust-clippy/master/index.html#disallowed_type\n+[`disallowed_types`]: https://rust-lang.github.io/rust-clippy/master/index.html#disallowed_types\n [`diverging_sub_expression`]: https://rust-lang.github.io/rust-clippy/master/index.html#diverging_sub_expression\n [`doc_markdown`]: https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown\n [`double_comparisons`]: https://rust-lang.github.io/rust-clippy/master/index.html#double_comparisons"}, {"sha": "6d4065907fb458da5ca256d4e1d0e22e9c20d6ab", "filename": "clippy_lints/src/disallowed_methods.rs", "status": "renamed", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/38bd2514ad7d039f6836b0a05dda4dc5f0849942/clippy_lints%2Fsrc%2Fdisallowed_methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38bd2514ad7d039f6836b0a05dda4dc5f0849942/clippy_lints%2Fsrc%2Fdisallowed_methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdisallowed_methods.rs?ref=38bd2514ad7d039f6836b0a05dda4dc5f0849942", "patch": "@@ -48,18 +48,18 @@ declare_clippy_lint! {\n     /// xs.push(123); // Vec::push is _not_ disallowed in the config.\n     /// ```\n     #[clippy::version = \"1.49.0\"]\n-    pub DISALLOWED_METHOD,\n+    pub DISALLOWED_METHODS,\n     nursery,\n     \"use of a disallowed method call\"\n }\n \n #[derive(Clone, Debug)]\n-pub struct DisallowedMethod {\n+pub struct DisallowedMethods {\n     conf_disallowed: Vec<conf::DisallowedMethod>,\n     disallowed: DefIdMap<Option<String>>,\n }\n \n-impl DisallowedMethod {\n+impl DisallowedMethods {\n     pub fn new(conf_disallowed: Vec<conf::DisallowedMethod>) -> Self {\n         Self {\n             conf_disallowed,\n@@ -68,9 +68,9 @@ impl DisallowedMethod {\n     }\n }\n \n-impl_lint_pass!(DisallowedMethod => [DISALLOWED_METHOD]);\n+impl_lint_pass!(DisallowedMethods => [DISALLOWED_METHODS]);\n \n-impl<'tcx> LateLintPass<'tcx> for DisallowedMethod {\n+impl<'tcx> LateLintPass<'tcx> for DisallowedMethods {\n     fn check_crate(&mut self, cx: &LateContext<'_>) {\n         for conf in &self.conf_disallowed {\n             let (path, reason) = match conf {\n@@ -98,7 +98,7 @@ impl<'tcx> LateLintPass<'tcx> for DisallowedMethod {\n         };\n         let func_path = cx.tcx.def_path_str(def_id);\n         let msg = format!(\"use of a disallowed method `{}`\", func_path);\n-        span_lint_and_then(cx, DISALLOWED_METHOD, expr.span, &msg, |diag| {\n+        span_lint_and_then(cx, DISALLOWED_METHODS, expr.span, &msg, |diag| {\n             if let Some(reason) = reason {\n                 diag.note(reason);\n             }", "previous_filename": "clippy_lints/src/disallowed_method.rs"}, {"sha": "eaed40327136f75636b013e37ee400b7a9318790", "filename": "clippy_lints/src/disallowed_types.rs", "status": "renamed", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/38bd2514ad7d039f6836b0a05dda4dc5f0849942/clippy_lints%2Fsrc%2Fdisallowed_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38bd2514ad7d039f6836b0a05dda4dc5f0849942/clippy_lints%2Fsrc%2Fdisallowed_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdisallowed_types.rs?ref=38bd2514ad7d039f6836b0a05dda4dc5f0849942", "patch": "@@ -43,18 +43,18 @@ declare_clippy_lint! {\n     /// use std::collections::HashMap;\n     /// ```\n     #[clippy::version = \"1.55.0\"]\n-    pub DISALLOWED_TYPE,\n+    pub DISALLOWED_TYPES,\n     nursery,\n-    \"use of a disallowed type\"\n+    \"use of disallowed types\"\n }\n #[derive(Clone, Debug)]\n-pub struct DisallowedType {\n+pub struct DisallowedTypes {\n     conf_disallowed: Vec<conf::DisallowedType>,\n     def_ids: FxHashMap<DefId, Option<String>>,\n     prim_tys: FxHashMap<PrimTy, Option<String>>,\n }\n \n-impl DisallowedType {\n+impl DisallowedTypes {\n     pub fn new(conf_disallowed: Vec<conf::DisallowedType>) -> Self {\n         Self {\n             conf_disallowed,\n@@ -80,9 +80,9 @@ impl DisallowedType {\n     }\n }\n \n-impl_lint_pass!(DisallowedType => [DISALLOWED_TYPE]);\n+impl_lint_pass!(DisallowedTypes => [DISALLOWED_TYPES]);\n \n-impl<'tcx> LateLintPass<'tcx> for DisallowedType {\n+impl<'tcx> LateLintPass<'tcx> for DisallowedTypes {\n     fn check_crate(&mut self, cx: &LateContext<'_>) {\n         for conf in &self.conf_disallowed {\n             let (path, reason) = match conf {\n@@ -125,7 +125,7 @@ impl<'tcx> LateLintPass<'tcx> for DisallowedType {\n fn emit(cx: &LateContext<'_>, name: &str, span: Span, reason: Option<&str>) {\n     span_lint_and_then(\n         cx,\n-        DISALLOWED_TYPE,\n+        DISALLOWED_TYPES,\n         span,\n         &format!(\"`{}` is not allowed according to config\", name),\n         |diag| {", "previous_filename": "clippy_lints/src/disallowed_type.rs"}, {"sha": "000c72266857010f60ad4ec551de577c70739a72", "filename": "clippy_lints/src/lib.register_lints.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/38bd2514ad7d039f6836b0a05dda4dc5f0849942/clippy_lints%2Fsrc%2Flib.register_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38bd2514ad7d039f6836b0a05dda4dc5f0849942/clippy_lints%2Fsrc%2Flib.register_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_lints.rs?ref=38bd2514ad7d039f6836b0a05dda4dc5f0849942", "patch": "@@ -99,9 +99,9 @@ store.register_lints(&[\n     derive::DERIVE_ORD_XOR_PARTIAL_ORD,\n     derive::EXPL_IMPL_CLONE_ON_COPY,\n     derive::UNSAFE_DERIVE_DESERIALIZE,\n-    disallowed_method::DISALLOWED_METHOD,\n+    disallowed_methods::DISALLOWED_METHODS,\n     disallowed_script_idents::DISALLOWED_SCRIPT_IDENTS,\n-    disallowed_type::DISALLOWED_TYPE,\n+    disallowed_types::DISALLOWED_TYPES,\n     doc::DOC_MARKDOWN,\n     doc::MISSING_ERRORS_DOC,\n     doc::MISSING_PANICS_DOC,"}, {"sha": "59182fd8175d404bfbd9e68b070445419c7fa1bf", "filename": "clippy_lints/src/lib.register_nursery.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/38bd2514ad7d039f6836b0a05dda4dc5f0849942/clippy_lints%2Fsrc%2Flib.register_nursery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38bd2514ad7d039f6836b0a05dda4dc5f0849942/clippy_lints%2Fsrc%2Flib.register_nursery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_nursery.rs?ref=38bd2514ad7d039f6836b0a05dda4dc5f0849942", "patch": "@@ -6,8 +6,8 @@ store.register_group(true, \"clippy::nursery\", Some(\"clippy_nursery\"), vec![\n     LintId::of(attrs::EMPTY_LINE_AFTER_OUTER_ATTR),\n     LintId::of(cognitive_complexity::COGNITIVE_COMPLEXITY),\n     LintId::of(copies::BRANCHES_SHARING_CODE),\n-    LintId::of(disallowed_method::DISALLOWED_METHOD),\n-    LintId::of(disallowed_type::DISALLOWED_TYPE),\n+    LintId::of(disallowed_methods::DISALLOWED_METHODS),\n+    LintId::of(disallowed_types::DISALLOWED_TYPES),\n     LintId::of(equatable_if_let::EQUATABLE_IF_LET),\n     LintId::of(fallible_impl_from::FALLIBLE_IMPL_FROM),\n     LintId::of(floating_point_arithmetic::IMPRECISE_FLOPS),"}, {"sha": "449fa8a6311abf6baf07ccfdf86d67e790e4ee80", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/38bd2514ad7d039f6836b0a05dda4dc5f0849942/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38bd2514ad7d039f6836b0a05dda4dc5f0849942/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=38bd2514ad7d039f6836b0a05dda4dc5f0849942", "patch": "@@ -194,9 +194,9 @@ mod default_numeric_fallback;\n mod dereference;\n mod derivable_impls;\n mod derive;\n-mod disallowed_method;\n+mod disallowed_methods;\n mod disallowed_script_idents;\n-mod disallowed_type;\n+mod disallowed_types;\n mod doc;\n mod double_comparison;\n mod double_parens;\n@@ -806,7 +806,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|| Box::new(semicolon_if_nothing_returned::SemicolonIfNothingReturned));\n     store.register_late_pass(|| Box::new(async_yields_async::AsyncYieldsAsync));\n     let disallowed_methods = conf.disallowed_methods.clone();\n-    store.register_late_pass(move || Box::new(disallowed_method::DisallowedMethod::new(disallowed_methods.clone())));\n+    store.register_late_pass(move || Box::new(disallowed_methods::DisallowedMethods::new(disallowed_methods.clone())));\n     store.register_early_pass(|| Box::new(asm_syntax::InlineAsmX86AttSyntax));\n     store.register_early_pass(|| Box::new(asm_syntax::InlineAsmX86IntelSyntax));\n     store.register_late_pass(|| Box::new(undropped_manually_drops::UndroppedManuallyDrops));\n@@ -825,7 +825,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_early_pass(move || Box::new(module_style::ModStyle));\n     store.register_late_pass(|| Box::new(unused_async::UnusedAsync));\n     let disallowed_types = conf.disallowed_types.clone();\n-    store.register_late_pass(move || Box::new(disallowed_type::DisallowedType::new(disallowed_types.clone())));\n+    store.register_late_pass(move || Box::new(disallowed_types::DisallowedTypes::new(disallowed_types.clone())));\n     let import_renames = conf.enforced_import_renames.clone();\n     store.register_late_pass(move || {\n         Box::new(missing_enforced_import_rename::ImportRename::new(\n@@ -922,6 +922,8 @@ pub fn register_renamed(ls: &mut rustc_lint::LintStore) {\n     ls.register_renamed(\"clippy::zero_width_space\", \"clippy::invisible_characters\");\n     ls.register_renamed(\"clippy::single_char_push_str\", \"clippy::single_char_add_str\");\n     ls.register_renamed(\"clippy::if_let_some_result\", \"clippy::match_result_ok\");\n+    ls.register_renamed(\"clippy::disallowed_type\", \"clippy::disallowed_types\");\n+    ls.register_renamed(\"clippy::disallowed_method\", \"clippy::disallowed_methods\");\n \n     // uplifted lints\n     ls.register_renamed(\"clippy::invalid_ref\", \"invalid_value\");"}, {"sha": "9c83d30eb9cc1a0a691810ff7568a5a6c50bff31", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/38bd2514ad7d039f6836b0a05dda4dc5f0849942/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38bd2514ad7d039f6836b0a05dda4dc5f0849942/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=38bd2514ad7d039f6836b0a05dda4dc5f0849942", "patch": "@@ -15,15 +15,15 @@ pub struct Rename {\n     pub rename: String,\n }\n \n-/// A single disallowed method, used by the `DISALLOWED_METHOD` lint.\n+/// A single disallowed method, used by the `DISALLOWED_METHODS` lint.\n #[derive(Clone, Debug, Deserialize)]\n #[serde(untagged)]\n pub enum DisallowedMethod {\n     Simple(String),\n     WithReason { path: String, reason: Option<String> },\n }\n \n-/// A single disallowed type, used by the `DISALLOWED_TYPE` lint.\n+/// A single disallowed type, used by the `DISALLOWED_TYPES` lint.\n #[derive(Clone, Debug, Deserialize)]\n #[serde(untagged)]\n pub enum DisallowedType {\n@@ -256,11 +256,11 @@ define_Conf! {\n     ///\n     /// Whether to allow certain wildcard imports (prelude, super in tests).\n     (warn_on_all_wildcard_imports: bool = false),\n-    /// Lint: DISALLOWED_METHOD.\n+    /// Lint: DISALLOWED_METHODS.\n     ///\n     /// The list of disallowed methods, written as fully qualified paths.\n     (disallowed_methods: Vec<crate::utils::conf::DisallowedMethod> = Vec::new()),\n-    /// Lint: DISALLOWED_TYPE.\n+    /// Lint: DISALLOWED_TYPES.\n     ///\n     /// The list of disallowed types, written as fully qualified paths.\n     (disallowed_types: Vec<crate::utils::conf::DisallowedType> = Vec::new()),"}, {"sha": "f1d4a4619c5dc995105fd11715f4d422e5c4bec9", "filename": "tests/ui-toml/toml_disallowed_methods/clippy.toml", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/38bd2514ad7d039f6836b0a05dda4dc5f0849942/tests%2Fui-toml%2Ftoml_disallowed_methods%2Fclippy.toml", "raw_url": "https://github.com/rust-lang/rust/raw/38bd2514ad7d039f6836b0a05dda4dc5f0849942/tests%2Fui-toml%2Ftoml_disallowed_methods%2Fclippy.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ftoml_disallowed_methods%2Fclippy.toml?ref=38bd2514ad7d039f6836b0a05dda4dc5f0849942", "previous_filename": "tests/ui-toml/toml_disallowed_method/clippy.toml"}, {"sha": "cb449b45bde8539ead3d7b906a352fd4e3cc17bf", "filename": "tests/ui-toml/toml_disallowed_methods/conf_disallowed_methods.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38bd2514ad7d039f6836b0a05dda4dc5f0849942/tests%2Fui-toml%2Ftoml_disallowed_methods%2Fconf_disallowed_methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38bd2514ad7d039f6836b0a05dda4dc5f0849942/tests%2Fui-toml%2Ftoml_disallowed_methods%2Fconf_disallowed_methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ftoml_disallowed_methods%2Fconf_disallowed_methods.rs?ref=38bd2514ad7d039f6836b0a05dda4dc5f0849942", "patch": "@@ -1,4 +1,4 @@\n-#![warn(clippy::disallowed_method)]\n+#![warn(clippy::disallowed_methods)]\n \n extern crate regex;\n use regex::Regex;", "previous_filename": "tests/ui-toml/toml_disallowed_method/conf_disallowed_method.rs"}, {"sha": "999ead10d51829dae9d73903f9cd2c92df6bb4be", "filename": "tests/ui-toml/toml_disallowed_methods/conf_disallowed_methods.stderr", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/38bd2514ad7d039f6836b0a05dda4dc5f0849942/tests%2Fui-toml%2Ftoml_disallowed_methods%2Fconf_disallowed_methods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/38bd2514ad7d039f6836b0a05dda4dc5f0849942/tests%2Fui-toml%2Ftoml_disallowed_methods%2Fconf_disallowed_methods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ftoml_disallowed_methods%2Fconf_disallowed_methods.stderr?ref=38bd2514ad7d039f6836b0a05dda4dc5f0849942", "patch": "@@ -1,21 +1,21 @@\n error: use of a disallowed method `regex::Regex::new`\n-  --> $DIR/conf_disallowed_method.rs:7:14\n+  --> $DIR/conf_disallowed_methods.rs:7:14\n    |\n LL |     let re = Regex::new(r\"ab.*c\").unwrap();\n    |              ^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D clippy::disallowed-method` implied by `-D warnings`\n+   = note: `-D clippy::disallowed-methods` implied by `-D warnings`\n \n error: use of a disallowed method `regex::Regex::is_match`\n-  --> $DIR/conf_disallowed_method.rs:8:5\n+  --> $DIR/conf_disallowed_methods.rs:8:5\n    |\n LL |     re.is_match(\"abc\");\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n    = note: no matching allowed (from clippy.toml)\n \n error: use of a disallowed method `std::iter::Iterator::sum`\n-  --> $DIR/conf_disallowed_method.rs:11:5\n+  --> $DIR/conf_disallowed_methods.rs:11:5\n    |\n LL |     a.iter().sum::<i32>();\n    |     ^^^^^^^^^^^^^^^^^^^^^", "previous_filename": "tests/ui-toml/toml_disallowed_method/conf_disallowed_method.stderr"}, {"sha": "6cb9e2ef95467be59c0ba74c9dc8d25de2411c09", "filename": "tests/ui-toml/toml_disallowed_types/clippy.toml", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/38bd2514ad7d039f6836b0a05dda4dc5f0849942/tests%2Fui-toml%2Ftoml_disallowed_types%2Fclippy.toml", "raw_url": "https://github.com/rust-lang/rust/raw/38bd2514ad7d039f6836b0a05dda4dc5f0849942/tests%2Fui-toml%2Ftoml_disallowed_types%2Fclippy.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ftoml_disallowed_types%2Fclippy.toml?ref=38bd2514ad7d039f6836b0a05dda4dc5f0849942", "previous_filename": "tests/ui-toml/toml_disallowed_type/clippy.toml"}, {"sha": "7f28efd676f2c786605844e52b4019af8a61a16a", "filename": "tests/ui-toml/toml_disallowed_types/conf_disallowed_types.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38bd2514ad7d039f6836b0a05dda4dc5f0849942/tests%2Fui-toml%2Ftoml_disallowed_types%2Fconf_disallowed_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38bd2514ad7d039f6836b0a05dda4dc5f0849942/tests%2Fui-toml%2Ftoml_disallowed_types%2Fconf_disallowed_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ftoml_disallowed_types%2Fconf_disallowed_types.rs?ref=38bd2514ad7d039f6836b0a05dda4dc5f0849942", "patch": "@@ -1,4 +1,4 @@\n-#![warn(clippy::disallowed_type)]\n+#![warn(clippy::disallowed_types)]\n \n extern crate quote;\n extern crate syn;", "previous_filename": "tests/ui-toml/toml_disallowed_type/conf_disallowed_type.rs"}, {"sha": "e3ece799c7ce690626e8ba4a1ce1f22cb4ab95c8", "filename": "tests/ui-toml/toml_disallowed_types/conf_disallowed_types.stderr", "status": "renamed", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/38bd2514ad7d039f6836b0a05dda4dc5f0849942/tests%2Fui-toml%2Ftoml_disallowed_types%2Fconf_disallowed_types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/38bd2514ad7d039f6836b0a05dda4dc5f0849942/tests%2Fui-toml%2Ftoml_disallowed_types%2Fconf_disallowed_types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ftoml_disallowed_types%2Fconf_disallowed_types.stderr?ref=38bd2514ad7d039f6836b0a05dda4dc5f0849942", "patch": "@@ -1,129 +1,129 @@\n error: `std::sync::atomic::AtomicU32` is not allowed according to config\n-  --> $DIR/conf_disallowed_type.rs:7:1\n+  --> $DIR/conf_disallowed_types.rs:7:1\n    |\n LL | use std::sync::atomic::AtomicU32;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: `-D clippy::disallowed-type` implied by `-D warnings`\n+   = note: `-D clippy::disallowed-types` implied by `-D warnings`\n \n error: `std::time::Instant` is not allowed according to config\n-  --> $DIR/conf_disallowed_type.rs:8:1\n+  --> $DIR/conf_disallowed_types.rs:8:1\n    |\n LL | use std::time::Instant as Sneaky;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: `std::time::Instant` is not allowed according to config\n-  --> $DIR/conf_disallowed_type.rs:12:33\n+  --> $DIR/conf_disallowed_types.rs:12:33\n    |\n LL | fn bad_return_type() -> fn() -> Sneaky {\n    |                                 ^^^^^^\n \n error: `std::time::Instant` is not allowed according to config\n-  --> $DIR/conf_disallowed_type.rs:16:28\n+  --> $DIR/conf_disallowed_types.rs:16:28\n    |\n LL | fn bad_arg_type(_: impl Fn(Sneaky) -> foo::atomic::AtomicU32) {}\n    |                            ^^^^^^\n \n error: `std::sync::atomic::AtomicU32` is not allowed according to config\n-  --> $DIR/conf_disallowed_type.rs:16:39\n+  --> $DIR/conf_disallowed_types.rs:16:39\n    |\n LL | fn bad_arg_type(_: impl Fn(Sneaky) -> foo::atomic::AtomicU32) {}\n    |                                       ^^^^^^^^^^^^^^^^^^^^^^\n \n error: `std::io::Read` is not allowed according to config\n-  --> $DIR/conf_disallowed_type.rs:18:22\n+  --> $DIR/conf_disallowed_types.rs:18:22\n    |\n LL | fn trait_obj(_: &dyn std::io::Read) {}\n    |                      ^^^^^^^^^^^^^\n \n error: `usize` is not allowed according to config\n-  --> $DIR/conf_disallowed_type.rs:20:33\n+  --> $DIR/conf_disallowed_types.rs:20:33\n    |\n LL | fn full_and_single_path_prim(_: usize, _: bool) {}\n    |                                 ^^^^^\n \n error: `bool` is not allowed according to config\n-  --> $DIR/conf_disallowed_type.rs:20:43\n+  --> $DIR/conf_disallowed_types.rs:20:43\n    |\n LL | fn full_and_single_path_prim(_: usize, _: bool) {}\n    |                                           ^^^^\n \n error: `usize` is not allowed according to config\n-  --> $DIR/conf_disallowed_type.rs:22:28\n+  --> $DIR/conf_disallowed_types.rs:22:28\n    |\n LL | fn const_generics<const C: usize>() {}\n    |                            ^^^^^\n \n error: `usize` is not allowed according to config\n-  --> $DIR/conf_disallowed_type.rs:24:24\n+  --> $DIR/conf_disallowed_types.rs:24:24\n    |\n LL | struct GenArg<const U: usize>([u8; U]);\n    |                        ^^^^^\n \n error: `std::net::Ipv4Addr` is not allowed according to config\n-  --> $DIR/conf_disallowed_type.rs:28:10\n+  --> $DIR/conf_disallowed_types.rs:28:10\n    |\n LL | fn ip(_: std::net::Ipv4Addr) {}\n    |          ^^^^^^^^^^^^^^^^^^\n    |\n    = note: no IPv4 allowed (from clippy.toml)\n \n error: `std::net::TcpListener` is not allowed according to config\n-  --> $DIR/conf_disallowed_type.rs:30:16\n+  --> $DIR/conf_disallowed_types.rs:30:16\n    |\n LL | fn listener(_: std::net::TcpListener) {}\n    |                ^^^^^^^^^^^^^^^^^^^^^\n \n error: `std::collections::HashMap` is not allowed according to config\n-  --> $DIR/conf_disallowed_type.rs:34:48\n+  --> $DIR/conf_disallowed_types.rs:34:48\n    |\n LL |     let _: std::collections::HashMap<(), ()> = std::collections::HashMap::new();\n    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: `std::collections::HashMap` is not allowed according to config\n-  --> $DIR/conf_disallowed_type.rs:34:12\n+  --> $DIR/conf_disallowed_types.rs:34:12\n    |\n LL |     let _: std::collections::HashMap<(), ()> = std::collections::HashMap::new();\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: `std::time::Instant` is not allowed according to config\n-  --> $DIR/conf_disallowed_type.rs:35:13\n+  --> $DIR/conf_disallowed_types.rs:35:13\n    |\n LL |     let _ = Sneaky::now();\n    |             ^^^^^^\n \n error: `std::sync::atomic::AtomicU32` is not allowed according to config\n-  --> $DIR/conf_disallowed_type.rs:36:13\n+  --> $DIR/conf_disallowed_types.rs:36:13\n    |\n LL |     let _ = foo::atomic::AtomicU32::new(0);\n    |             ^^^^^^^^^^^^^^^^^^^^^^\n \n error: `std::sync::atomic::AtomicU32` is not allowed according to config\n-  --> $DIR/conf_disallowed_type.rs:37:17\n+  --> $DIR/conf_disallowed_types.rs:37:17\n    |\n LL |     static FOO: std::sync::atomic::AtomicU32 = foo::atomic::AtomicU32::new(1);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: `std::sync::atomic::AtomicU32` is not allowed according to config\n-  --> $DIR/conf_disallowed_type.rs:37:48\n+  --> $DIR/conf_disallowed_types.rs:37:48\n    |\n LL |     static FOO: std::sync::atomic::AtomicU32 = foo::atomic::AtomicU32::new(1);\n    |                                                ^^^^^^^^^^^^^^^^^^^^^^\n \n error: `syn::TypePath` is not allowed according to config\n-  --> $DIR/conf_disallowed_type.rs:38:43\n+  --> $DIR/conf_disallowed_types.rs:38:43\n    |\n LL |     let _: std::collections::BTreeMap<(), syn::TypePath> = Default::default();\n    |                                           ^^^^^^^^^^^^^\n \n error: `syn::Ident` is not allowed according to config\n-  --> $DIR/conf_disallowed_type.rs:39:13\n+  --> $DIR/conf_disallowed_types.rs:39:13\n    |\n LL |     let _ = syn::Ident::new(\"\", todo!());\n    |             ^^^^^^^^^^\n \n error: `usize` is not allowed according to config\n-  --> $DIR/conf_disallowed_type.rs:41:12\n+  --> $DIR/conf_disallowed_types.rs:41:12\n    |\n LL |     let _: usize = 64_usize;\n    |            ^^^^^", "previous_filename": "tests/ui-toml/toml_disallowed_type/conf_disallowed_type.stderr"}, {"sha": "b9425733a8b27b8d1806b7ec921dee3d9936ca11", "filename": "tests/ui/rename.fixed", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/38bd2514ad7d039f6836b0a05dda4dc5f0849942/tests%2Fui%2Frename.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/38bd2514ad7d039f6836b0a05dda4dc5f0849942/tests%2Fui%2Frename.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frename.fixed?ref=38bd2514ad7d039f6836b0a05dda4dc5f0849942", "patch": "@@ -6,6 +6,7 @@\n #![allow(clippy::module_name_repetitions)]\n #![allow(clippy::new_without_default)]\n #![allow(clippy::redundant_static_lifetimes)]\n+#![allow(clippy::cognitive_complexity)]\n #![allow(clippy::bind_instead_of_map)]\n #![allow(clippy::box_collection)]\n #![allow(clippy::blocks_in_if_conditions)]\n@@ -17,6 +18,8 @@\n #![allow(clippy::invisible_characters)]\n #![allow(clippy::single_char_add_str)]\n #![allow(clippy::match_result_ok)]\n+#![allow(clippy::disallowed_types)]\n+#![allow(clippy::disallowed_methods)]\n // uplifted lints\n #![allow(invalid_value)]\n #![allow(array_into_iter)]\n@@ -49,6 +52,8 @@\n #![warn(clippy::invisible_characters)]\n #![warn(clippy::single_char_add_str)]\n #![warn(clippy::match_result_ok)]\n+#![warn(clippy::disallowed_types)]\n+#![warn(clippy::disallowed_methods)]\n // uplifted lints\n #![warn(invalid_value)]\n #![warn(array_into_iter)]"}, {"sha": "341c003b9df30548c02e2f07911746cb139089af", "filename": "tests/ui/rename.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/38bd2514ad7d039f6836b0a05dda4dc5f0849942/tests%2Fui%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38bd2514ad7d039f6836b0a05dda4dc5f0849942/tests%2Fui%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frename.rs?ref=38bd2514ad7d039f6836b0a05dda4dc5f0849942", "patch": "@@ -6,6 +6,7 @@\n #![allow(clippy::module_name_repetitions)]\n #![allow(clippy::new_without_default)]\n #![allow(clippy::redundant_static_lifetimes)]\n+#![allow(clippy::cognitive_complexity)]\n #![allow(clippy::bind_instead_of_map)]\n #![allow(clippy::box_collection)]\n #![allow(clippy::blocks_in_if_conditions)]\n@@ -17,6 +18,8 @@\n #![allow(clippy::invisible_characters)]\n #![allow(clippy::single_char_add_str)]\n #![allow(clippy::match_result_ok)]\n+#![allow(clippy::disallowed_types)]\n+#![allow(clippy::disallowed_methods)]\n // uplifted lints\n #![allow(invalid_value)]\n #![allow(array_into_iter)]\n@@ -49,6 +52,8 @@\n #![warn(clippy::zero_width_space)]\n #![warn(clippy::single_char_push_str)]\n #![warn(clippy::if_let_some_result)]\n+#![warn(clippy::disallowed_type)]\n+#![warn(clippy::disallowed_method)]\n // uplifted lints\n #![warn(clippy::invalid_ref)]\n #![warn(clippy::into_iter_on_array)]"}, {"sha": "cdec2808f1d4142e103fa9a068307c93e3579262", "filename": "tests/ui/rename.stderr", "status": "modified", "additions": 43, "deletions": 31, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/38bd2514ad7d039f6836b0a05dda4dc5f0849942/tests%2Fui%2Frename.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/38bd2514ad7d039f6836b0a05dda4dc5f0849942/tests%2Fui%2Frename.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frename.stderr?ref=38bd2514ad7d039f6836b0a05dda4dc5f0849942", "patch": "@@ -1,184 +1,196 @@\n error: lint `clippy::stutter` has been renamed to `clippy::module_name_repetitions`\n-  --> $DIR/rename.rs:31:9\n+  --> $DIR/rename.rs:34:9\n    |\n LL | #![warn(clippy::stutter)]\n    |         ^^^^^^^^^^^^^^^ help: use the new name: `clippy::module_name_repetitions`\n    |\n    = note: `-D renamed-and-removed-lints` implied by `-D warnings`\n \n error: lint `clippy::new_without_default_derive` has been renamed to `clippy::new_without_default`\n-  --> $DIR/rename.rs:32:9\n+  --> $DIR/rename.rs:35:9\n    |\n LL | #![warn(clippy::new_without_default_derive)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::new_without_default`\n \n error: lint `clippy::const_static_lifetime` has been renamed to `clippy::redundant_static_lifetimes`\n-  --> $DIR/rename.rs:33:9\n+  --> $DIR/rename.rs:36:9\n    |\n LL | #![warn(clippy::const_static_lifetime)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::redundant_static_lifetimes`\n \n error: lint `clippy::cyclomatic_complexity` has been renamed to `clippy::cognitive_complexity`\n-  --> $DIR/rename.rs:34:9\n+  --> $DIR/rename.rs:37:9\n    |\n LL | #![warn(clippy::cyclomatic_complexity)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::cognitive_complexity`\n \n error: lint `clippy::option_and_then_some` has been renamed to `clippy::bind_instead_of_map`\n-  --> $DIR/rename.rs:35:9\n+  --> $DIR/rename.rs:38:9\n    |\n LL | #![warn(clippy::option_and_then_some)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::bind_instead_of_map`\n \n error: lint `clippy::box_vec` has been renamed to `clippy::box_collection`\n-  --> $DIR/rename.rs:36:9\n+  --> $DIR/rename.rs:39:9\n    |\n LL | #![warn(clippy::box_vec)]\n    |         ^^^^^^^^^^^^^^^ help: use the new name: `clippy::box_collection`\n \n error: lint `clippy::block_in_if_condition_expr` has been renamed to `clippy::blocks_in_if_conditions`\n-  --> $DIR/rename.rs:37:9\n+  --> $DIR/rename.rs:40:9\n    |\n LL | #![warn(clippy::block_in_if_condition_expr)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::blocks_in_if_conditions`\n \n error: lint `clippy::block_in_if_condition_stmt` has been renamed to `clippy::blocks_in_if_conditions`\n-  --> $DIR/rename.rs:38:9\n+  --> $DIR/rename.rs:41:9\n    |\n LL | #![warn(clippy::block_in_if_condition_stmt)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::blocks_in_if_conditions`\n \n error: lint `clippy::option_map_unwrap_or` has been renamed to `clippy::map_unwrap_or`\n-  --> $DIR/rename.rs:39:9\n+  --> $DIR/rename.rs:42:9\n    |\n LL | #![warn(clippy::option_map_unwrap_or)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::map_unwrap_or`\n \n error: lint `clippy::option_map_unwrap_or_else` has been renamed to `clippy::map_unwrap_or`\n-  --> $DIR/rename.rs:40:9\n+  --> $DIR/rename.rs:43:9\n    |\n LL | #![warn(clippy::option_map_unwrap_or_else)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::map_unwrap_or`\n \n error: lint `clippy::result_map_unwrap_or_else` has been renamed to `clippy::map_unwrap_or`\n-  --> $DIR/rename.rs:41:9\n+  --> $DIR/rename.rs:44:9\n    |\n LL | #![warn(clippy::result_map_unwrap_or_else)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::map_unwrap_or`\n \n error: lint `clippy::option_unwrap_used` has been renamed to `clippy::unwrap_used`\n-  --> $DIR/rename.rs:42:9\n+  --> $DIR/rename.rs:45:9\n    |\n LL | #![warn(clippy::option_unwrap_used)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::unwrap_used`\n \n error: lint `clippy::result_unwrap_used` has been renamed to `clippy::unwrap_used`\n-  --> $DIR/rename.rs:43:9\n+  --> $DIR/rename.rs:46:9\n    |\n LL | #![warn(clippy::result_unwrap_used)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::unwrap_used`\n \n error: lint `clippy::option_expect_used` has been renamed to `clippy::expect_used`\n-  --> $DIR/rename.rs:44:9\n+  --> $DIR/rename.rs:47:9\n    |\n LL | #![warn(clippy::option_expect_used)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::expect_used`\n \n error: lint `clippy::result_expect_used` has been renamed to `clippy::expect_used`\n-  --> $DIR/rename.rs:45:9\n+  --> $DIR/rename.rs:48:9\n    |\n LL | #![warn(clippy::result_expect_used)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::expect_used`\n \n error: lint `clippy::for_loop_over_option` has been renamed to `clippy::for_loops_over_fallibles`\n-  --> $DIR/rename.rs:46:9\n+  --> $DIR/rename.rs:49:9\n    |\n LL | #![warn(clippy::for_loop_over_option)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::for_loops_over_fallibles`\n \n error: lint `clippy::for_loop_over_result` has been renamed to `clippy::for_loops_over_fallibles`\n-  --> $DIR/rename.rs:47:9\n+  --> $DIR/rename.rs:50:9\n    |\n LL | #![warn(clippy::for_loop_over_result)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::for_loops_over_fallibles`\n \n error: lint `clippy::identity_conversion` has been renamed to `clippy::useless_conversion`\n-  --> $DIR/rename.rs:48:9\n+  --> $DIR/rename.rs:51:9\n    |\n LL | #![warn(clippy::identity_conversion)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::useless_conversion`\n \n error: lint `clippy::zero_width_space` has been renamed to `clippy::invisible_characters`\n-  --> $DIR/rename.rs:49:9\n+  --> $DIR/rename.rs:52:9\n    |\n LL | #![warn(clippy::zero_width_space)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::invisible_characters`\n \n error: lint `clippy::single_char_push_str` has been renamed to `clippy::single_char_add_str`\n-  --> $DIR/rename.rs:50:9\n+  --> $DIR/rename.rs:53:9\n    |\n LL | #![warn(clippy::single_char_push_str)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::single_char_add_str`\n \n error: lint `clippy::if_let_some_result` has been renamed to `clippy::match_result_ok`\n-  --> $DIR/rename.rs:51:9\n+  --> $DIR/rename.rs:54:9\n    |\n LL | #![warn(clippy::if_let_some_result)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::match_result_ok`\n \n+error: lint `clippy::disallowed_type` has been renamed to `clippy::disallowed_types`\n+  --> $DIR/rename.rs:55:9\n+   |\n+LL | #![warn(clippy::disallowed_type)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::disallowed_types`\n+\n+error: lint `clippy::disallowed_method` has been renamed to `clippy::disallowed_methods`\n+  --> $DIR/rename.rs:56:9\n+   |\n+LL | #![warn(clippy::disallowed_method)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::disallowed_methods`\n+\n error: lint `clippy::invalid_ref` has been renamed to `invalid_value`\n-  --> $DIR/rename.rs:53:9\n+  --> $DIR/rename.rs:58:9\n    |\n LL | #![warn(clippy::invalid_ref)]\n    |         ^^^^^^^^^^^^^^^^^^^ help: use the new name: `invalid_value`\n \n error: lint `clippy::into_iter_on_array` has been renamed to `array_into_iter`\n-  --> $DIR/rename.rs:54:9\n+  --> $DIR/rename.rs:59:9\n    |\n LL | #![warn(clippy::into_iter_on_array)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `array_into_iter`\n \n error: lint `clippy::unused_label` has been renamed to `unused_labels`\n-  --> $DIR/rename.rs:55:9\n+  --> $DIR/rename.rs:60:9\n    |\n LL | #![warn(clippy::unused_label)]\n    |         ^^^^^^^^^^^^^^^^^^^^ help: use the new name: `unused_labels`\n \n error: lint `clippy::drop_bounds` has been renamed to `drop_bounds`\n-  --> $DIR/rename.rs:56:9\n+  --> $DIR/rename.rs:61:9\n    |\n LL | #![warn(clippy::drop_bounds)]\n    |         ^^^^^^^^^^^^^^^^^^^ help: use the new name: `drop_bounds`\n \n error: lint `clippy::temporary_cstring_as_ptr` has been renamed to `temporary_cstring_as_ptr`\n-  --> $DIR/rename.rs:57:9\n+  --> $DIR/rename.rs:62:9\n    |\n LL | #![warn(clippy::temporary_cstring_as_ptr)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `temporary_cstring_as_ptr`\n \n error: lint `clippy::panic_params` has been renamed to `non_fmt_panics`\n-  --> $DIR/rename.rs:58:9\n+  --> $DIR/rename.rs:63:9\n    |\n LL | #![warn(clippy::panic_params)]\n    |         ^^^^^^^^^^^^^^^^^^^^ help: use the new name: `non_fmt_panics`\n \n error: lint `clippy::unknown_clippy_lints` has been renamed to `unknown_lints`\n-  --> $DIR/rename.rs:59:9\n+  --> $DIR/rename.rs:64:9\n    |\n LL | #![warn(clippy::unknown_clippy_lints)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `unknown_lints`\n \n error: lint `clippy::invalid_atomic_ordering` has been renamed to `invalid_atomic_ordering`\n-  --> $DIR/rename.rs:60:9\n+  --> $DIR/rename.rs:65:9\n    |\n LL | #![warn(clippy::invalid_atomic_ordering)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `invalid_atomic_ordering`\n \n error: lint `clippy::mem_discriminant_non_enum` has been renamed to `enum_intrinsics_non_enums`\n-  --> $DIR/rename.rs:61:9\n+  --> $DIR/rename.rs:66:9\n    |\n LL | #![warn(clippy::mem_discriminant_non_enum)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `enum_intrinsics_non_enums`\n \n-error: aborting due to 30 previous errors\n+error: aborting due to 32 previous errors\n "}]}