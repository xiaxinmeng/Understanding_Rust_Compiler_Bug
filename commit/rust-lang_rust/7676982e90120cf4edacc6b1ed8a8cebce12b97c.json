{"sha": "7676982e90120cf4edacc6b1ed8a8cebce12b97c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2NzY5ODJlOTAxMjBjZjRlZGFjYzZiMWVkOGE4Y2ViY2UxMmI5N2M=", "commit": {"author": {"name": "Kyle Stachowicz", "email": "kylestach99@gmail.com", "date": "2018-05-17T23:57:46Z"}, "committer": {"name": "Kyle Stachowicz", "email": "kylestach99@gmail.com", "date": "2018-05-18T23:57:15Z"}, "message": "Revert \"Add lint checks for unused loop labels\"\n\nThis functionality is being reimplemented in the resolver phase\n\nThis reverts commit 503a69e844970476b27bf1ac7be951bb22194f50.", "tree": {"sha": "0eb2b5a5c90a4750faded1ccaf044cb45e13d17e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0eb2b5a5c90a4750faded1ccaf044cb45e13d17e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7676982e90120cf4edacc6b1ed8a8cebce12b97c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7676982e90120cf4edacc6b1ed8a8cebce12b97c", "html_url": "https://github.com/rust-lang/rust/commit/7676982e90120cf4edacc6b1ed8a8cebce12b97c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7676982e90120cf4edacc6b1ed8a8cebce12b97c/comments", "author": {"login": "kylestach", "id": 9097872, "node_id": "MDQ6VXNlcjkwOTc4NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/9097872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylestach", "html_url": "https://github.com/kylestach", "followers_url": "https://api.github.com/users/kylestach/followers", "following_url": "https://api.github.com/users/kylestach/following{/other_user}", "gists_url": "https://api.github.com/users/kylestach/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylestach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylestach/subscriptions", "organizations_url": "https://api.github.com/users/kylestach/orgs", "repos_url": "https://api.github.com/users/kylestach/repos", "events_url": "https://api.github.com/users/kylestach/events{/privacy}", "received_events_url": "https://api.github.com/users/kylestach/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kylestach", "id": 9097872, "node_id": "MDQ6VXNlcjkwOTc4NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/9097872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylestach", "html_url": "https://github.com/kylestach", "followers_url": "https://api.github.com/users/kylestach/followers", "following_url": "https://api.github.com/users/kylestach/following{/other_user}", "gists_url": "https://api.github.com/users/kylestach/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylestach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylestach/subscriptions", "organizations_url": "https://api.github.com/users/kylestach/orgs", "repos_url": "https://api.github.com/users/kylestach/repos", "events_url": "https://api.github.com/users/kylestach/events{/privacy}", "received_events_url": "https://api.github.com/users/kylestach/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "167cedefe63b366278dbd83b533b051cd417fcf0", "url": "https://api.github.com/repos/rust-lang/rust/commits/167cedefe63b366278dbd83b533b051cd417fcf0", "html_url": "https://github.com/rust-lang/rust/commit/167cedefe63b366278dbd83b533b051cd417fcf0"}], "stats": {"total": 191, "additions": 1, "deletions": 190}, "files": [{"sha": "0ae133640fad9feb93bd68ce0faec1a271cbaa4b", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7676982e90120cf4edacc6b1ed8a8cebce12b97c/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7676982e90120cf4edacc6b1ed8a8cebce12b97c/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=7676982e90120cf4edacc6b1ed8a8cebce12b97c", "patch": "@@ -110,7 +110,6 @@ pub fn register_builtins(store: &mut lint::LintStore, sess: Option<&Session>) {\n \n     add_early_builtin_with_new!(sess,\n                                 DeprecatedAttr,\n-                                UnusedLabel,\n                                 );\n \n     add_builtin!(sess,\n@@ -178,7 +177,6 @@ pub fn register_builtins(store: &mut lint::LintStore, sess: Option<&Session>) {\n                     UNUSED_DOC_COMMENT,\n                     UNUSED_EXTERN_CRATES,\n                     UNUSED_FEATURES,\n-                    UNUSED_LABEL,\n                     UNUSED_PARENS);\n \n     add_lint_group!(sess,"}, {"sha": "845c964b986dda3cb319b7ac12c38abe98702821", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 0, "deletions": 58, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/7676982e90120cf4edacc6b1ed8a8cebce12b97c/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7676982e90120cf4edacc6b1ed8a8cebce12b97c/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=7676982e90120cf4edacc6b1ed8a8cebce12b97c", "patch": "@@ -464,61 +464,3 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnusedAllocation {\n         }\n     }\n }\n-\n-declare_lint! {\n-    pub(super) UNUSED_LABEL,\n-    Warn,\n-    \"warns on unused labels\"\n-}\n-\n-#[derive(Clone)]\n-pub struct UnusedLabel(pub Vec<(ast::Label, bool)>);\n-\n-impl UnusedLabel {\n-    pub fn new() -> Self {\n-        UnusedLabel(vec![])\n-    }\n-}\n-\n-impl LintPass for UnusedLabel {\n-    fn get_lints(&self) -> LintArray {\n-        lint_array!(UNUSED_LABEL)\n-    }\n-}\n-\n-impl EarlyLintPass for UnusedLabel {\n-    fn check_expr(&mut self, _: &EarlyContext, expr: &ast::Expr) {\n-        match expr.node {\n-            ast::ExprKind::While(_, _, Some(label))\n-            | ast::ExprKind::WhileLet(_, _, _, Some(label))\n-            | ast::ExprKind::ForLoop(_, _, _, Some(label))\n-            | ast::ExprKind::Loop(_, Some(label)) => {\n-                self.0.push((label, false));\n-            }\n-            ast::ExprKind::Break(Some(label), _) | ast::ExprKind::Continue(Some(label)) => {\n-                if let Some((_, ref mut was_used)) =\n-                    self.0.iter_mut().rev().find(|(l, _)| label == *l)\n-                {\n-                    *was_used = true;\n-                }\n-            }\n-            _ => {}\n-        }\n-    }\n-\n-    fn check_expr_post(&mut self, ctxt: &EarlyContext, expr: &ast::Expr) {\n-        match expr.node {\n-            ast::ExprKind::While(_, _, Some(label))\n-            | ast::ExprKind::WhileLet(_, _, _, Some(label))\n-            | ast::ExprKind::ForLoop(_, _, _, Some(label))\n-            | ast::ExprKind::Loop(_, Some(label)) => {\n-                if let Some((_, was_used)) = self.0.pop() {\n-                    if !was_used {\n-                        ctxt.span_lint(UNUSED_LABEL, label.ident.span, \"unused label\");\n-                    }\n-                }\n-            }\n-            _ => {}\n-        }\n-    }\n-}"}, {"sha": "03137619edaf48d72a0780b073a6446cc575ec53", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7676982e90120cf4edacc6b1ed8a8cebce12b97c/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7676982e90120cf4edacc6b1ed8a8cebce12b97c/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=7676982e90120cf4edacc6b1ed8a8cebce12b97c", "patch": "@@ -1705,7 +1705,7 @@ impl<'a, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M\n             let mut trace_text = \"\\n\\nAn error occurred in miri:\\n\".to_string();\n             backtrace.resolve();\n             write!(trace_text, \"backtrace frames: {}\\n\", backtrace.frames().len()).unwrap();\n-            for (i, frame) in backtrace.frames().iter().enumerate() {\n+            'frames: for (i, frame) in backtrace.frames().iter().enumerate() {\n                 if frame.symbols().is_empty() {\n                     write!(trace_text, \"{}: no symbols\\n\", i).unwrap();\n                 }"}, {"sha": "f19b793546eb1ab1b5fdf264b50eda9e45beabff", "filename": "src/test/ui/lint/unused_label.rs", "status": "removed", "additions": 0, "deletions": 76, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/167cedefe63b366278dbd83b533b051cd417fcf0/src%2Ftest%2Fui%2Flint%2Funused_label.rs", "raw_url": "https://github.com/rust-lang/rust/raw/167cedefe63b366278dbd83b533b051cd417fcf0/src%2Ftest%2Fui%2Flint%2Funused_label.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_label.rs?ref=167cedefe63b366278dbd83b533b051cd417fcf0", "patch": "@@ -1,76 +0,0 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// The output should warn when a loop label is not used. However, it\n-// should also deal with the edge cases where a label is shadowed,\n-// within nested loops\n-\n-// compile-pass\n-// compile-flags: -W unused-label\n-\n-fn main() {\n-    'unused_while_label: while 0 == 0 {\n-        //~^ WARN unused label\n-    }\n-\n-    let opt = Some(0);\n-    'unused_while_let_label: while let Some(_) = opt {\n-        //~^ WARN unused label\n-    }\n-\n-    'unused_for_label: for _ in 0..10 {\n-        //~^ WARN unused label\n-    }\n-\n-    'used_loop_label: loop {\n-        break 'used_loop_label;\n-    }\n-\n-    'used_loop_label_outer_1: for _ in 0..10 {\n-        'used_loop_label_inner_1: for _ in 0..10 {\n-            break 'used_loop_label_inner_1;\n-        }\n-        break 'used_loop_label_outer_1;\n-    }\n-\n-    'used_loop_label_outer_2: for _ in 0..10 {\n-        'unused_loop_label_inner_2: for _ in 0..10 {\n-            //~^ WARN unused label\n-            break 'used_loop_label_outer_2;\n-        }\n-    }\n-\n-    'unused_loop_label_outer_3: for _ in 0..10 {\n-        //~^ WARN unused label\n-        'used_loop_label_inner_3: for _ in 0..10 {\n-            break 'used_loop_label_inner_3;\n-        }\n-    }\n-\n-    // Test breaking many times with the same inner label doesn't break the\n-    // warning on the outer label\n-    'many_used_shadowed: for _ in 0..10 {\n-        //~^ WARN unused label\n-        'many_used_shadowed: for _ in 0..10 {\n-            //~^ WARN label name `'many_used_shadowed` shadows a label name that is already in scope\n-            if 1 % 2 == 0 {\n-                break 'many_used_shadowed;\n-            } else {\n-                break 'many_used_shadowed;\n-            }\n-        }\n-    }\n-\n-    // This is diverging, so put it at the end so we don't get\n-    // unreachable_code errors everywhere else\n-    'unused_loop_label: loop {\n-        //~^ WARN unused label\n-    }\n-}"}, {"sha": "e78df67794218cf8bf5adf99deb4db4961f51a6e", "filename": "src/test/ui/lint/unused_label.stderr", "status": "removed", "additions": 0, "deletions": 53, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/167cedefe63b366278dbd83b533b051cd417fcf0/src%2Ftest%2Fui%2Flint%2Funused_label.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/167cedefe63b366278dbd83b533b051cd417fcf0/src%2Ftest%2Fui%2Flint%2Funused_label.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_label.stderr?ref=167cedefe63b366278dbd83b533b051cd417fcf0", "patch": "@@ -1,53 +0,0 @@\n-warning: unused label\n-  --> $DIR/unused_label.rs:19:5\n-   |\n-LL |     'unused_while_label: while 0 == 0 {\n-   |     ^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: requested on the command line with `-W unused-label`\n-\n-warning: unused label\n-  --> $DIR/unused_label.rs:24:5\n-   |\n-LL |     'unused_while_let_label: while let Some(_) = opt {\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^\n-\n-warning: unused label\n-  --> $DIR/unused_label.rs:28:5\n-   |\n-LL |     'unused_for_label: for _ in 0..10 {\n-   |     ^^^^^^^^^^^^^^^^^\n-\n-warning: unused label\n-  --> $DIR/unused_label.rs:44:9\n-   |\n-LL |         'unused_loop_label_inner_2: for _ in 0..10 {\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-warning: unused label\n-  --> $DIR/unused_label.rs:50:5\n-   |\n-LL |     'unused_loop_label_outer_3: for _ in 0..10 {\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-warning: unused label\n-  --> $DIR/unused_label.rs:59:5\n-   |\n-LL |     'many_used_shadowed: for _ in 0..10 {\n-   |     ^^^^^^^^^^^^^^^^^^^\n-\n-warning: unused label\n-  --> $DIR/unused_label.rs:73:5\n-   |\n-LL |     'unused_loop_label: loop {\n-   |     ^^^^^^^^^^^^^^^^^^\n-\n-warning: label name `'many_used_shadowed` shadows a label name that is already in scope\n-  --> $DIR/unused_label.rs:61:9\n-   |\n-LL |     'many_used_shadowed: for _ in 0..10 {\n-   |     ------------------- first declared here\n-LL |         //~^ WARN unused label\n-LL |         'many_used_shadowed: for _ in 0..10 {\n-   |         ^^^^^^^^^^^^^^^^^^^ lifetime 'many_used_shadowed already in scope\n-"}]}