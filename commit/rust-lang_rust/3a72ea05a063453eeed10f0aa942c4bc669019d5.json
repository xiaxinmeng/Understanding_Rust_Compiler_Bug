{"sha": "3a72ea05a063453eeed10f0aa942c4bc669019d5", "node_id": "C_kwDOAAsO6NoAKDNhNzJlYTA1YTA2MzQ1M2VlZWQxMGYwYWE5NDJjNGJjNjY5MDE5ZDU", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2022-07-07T15:22:04Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2022-08-12T08:53:07Z"}, "message": "[debuginfo] Add more test cases cpp-like enum debuginfo.", "tree": {"sha": "c9fdbc734a7fe3da2647a8a61128613001e340e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9fdbc734a7fe3da2647a8a61128613001e340e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a72ea05a063453eeed10f0aa942c4bc669019d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a72ea05a063453eeed10f0aa942c4bc669019d5", "html_url": "https://github.com/rust-lang/rust/commit/3a72ea05a063453eeed10f0aa942c4bc669019d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a72ea05a063453eeed10f0aa942c4bc669019d5/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1bbda887fff26aebf322564a64070e7fdeefc452", "url": "https://api.github.com/repos/rust-lang/rust/commits/1bbda887fff26aebf322564a64070e7fdeefc452", "html_url": "https://github.com/rust-lang/rust/commit/1bbda887fff26aebf322564a64070e7fdeefc452"}], "stats": {"total": 43, "additions": 39, "deletions": 4}, "files": [{"sha": "03fc96cd53dde92b79d359d502e5d1093f87610e", "filename": "src/test/debuginfo/msvc-pretty-enums.rs", "status": "modified", "additions": 39, "deletions": 4, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/3a72ea05a063453eeed10f0aa942c4bc669019d5/src%2Ftest%2Fdebuginfo%2Fmsvc-pretty-enums.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a72ea05a063453eeed10f0aa942c4bc669019d5/src%2Ftest%2Fdebuginfo%2Fmsvc-pretty-enums.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmsvc-pretty-enums.rs?ref=3a72ea05a063453eeed10f0aa942c4bc669019d5", "patch": "@@ -55,15 +55,23 @@\n \n // cdb-command: dx wrapping_niche128_dataful\n // cdb-check: wrapping_niche128_dataful : X [Type: enum2$<msvc_pretty_enums::Wrapping128Niche>]\n-// cdb-check:    [+0x000] __0              [Type: msvc_pretty_enums::Wrapping128]\n+// cdb-check:    [+0x[...]] __0              [Type: msvc_pretty_enums::Wrapping128]\n \n // cdb-command: dx wrapping_niche128_none1\n // cdb-check: wrapping_niche128_none1 : Y [Type: enum2$<msvc_pretty_enums::Wrapping128Niche>]\n-// cdb-check:    [+0x000] __0              [Type: msvc_pretty_enums::Wrapping128]\n+// cdb-check:    [+0x[...]] __0              [Type: msvc_pretty_enums::Wrapping128]\n \n // cdb-command: dx wrapping_niche128_none2\n // cdb-check: wrapping_niche128_none2 : Z [Type: enum2$<msvc_pretty_enums::Wrapping128Niche>]\n-// cdb-check:    [+0x000] __0              [Type: msvc_pretty_enums::Wrapping128]\n+// cdb-check:    [+0x[...]] __0              [Type: msvc_pretty_enums::Wrapping128]\n+\n+// cdb-command: dx direct_tag_128_a,d\n+// cdb-check: direct_tag_128_a,d : A [Type: enum2$<msvc_pretty_enums::DirectTag128>]\n+// cdb-check:     [+0x[...]] __0              : 42 [Type: unsigned int]\n+\n+// cdb-command: dx direct_tag_128_b,d\n+// cdb-check: direct_tag_128_b,d : B [Type: enum2$<msvc_pretty_enums::DirectTag128>]\n+// cdb-check:     [+0x[...]] __0              : 137 [Type: unsigned int]\n \n // cdb-command: dx niche_w_fields_1_some,d\n // cdb-check: niche_w_fields_1_some,d : A [Type: enum2$<msvc_pretty_enums::NicheLayoutWithFields1>]\n@@ -76,7 +84,6 @@\n \n // cdb-command: dx niche_w_fields_2_some,d\n // cdb-check: niche_w_fields_2_some,d : A [Type: enum2$<msvc_pretty_enums::NicheLayoutWithFields2>]\n-// cdb-check:     [<Raw View>]     [Type: enum2$<msvc_pretty_enums::NicheLayoutWithFields2>]\n // cdb-check:     [+0x[...]] __0              : 800 [Type: core::num::nonzero::NonZeroU32]\n // cdb-check:     [+0x[...]] __1              : 900 [Type: unsigned __int64]\n \n@@ -118,7 +125,17 @@\n // cdb-check: niche_w_fields_std_result_err,d : Err [Type: enum2$<core::result::Result<alloc::boxed::Box<slice$<u8>,alloc::alloc::Global>,u64> >]\n // cdb-check:    [+0x[...]] __0              : 789 [Type: unsigned __int64]\n \n+// cdb-command: dx -r2 arbitrary_discr1,d\n+// cdb-check: arbitrary_discr1,d : Abc [Type: enum2$<msvc_pretty_enums::ArbitraryDiscr>]\n+// cdb-check:     [+0x[...]] __0              : 1234 [Type: unsigned int]\n+\n+// cdb-command: dx -r2 arbitrary_discr2,d\n+// cdb-check: arbitrary_discr2,d : Def [Type: enum2$<msvc_pretty_enums::ArbitraryDiscr>]\n+// cdb-check:     [+0x[...]] __0              : 5678 [Type: unsigned int]\n+\n #![feature(rustc_attrs)]\n+#![feature(repr128)]\n+#![feature(arbitrary_enum_discriminant)]\n \n use std::num::{NonZeroI128, NonZeroU32};\n \n@@ -168,6 +185,18 @@ enum Wrapping128Niche {\n     Z,\n }\n \n+#[repr(i128)]\n+enum DirectTag128 {\n+    A(u32),\n+    B(u32),\n+}\n+\n+#[repr(u32)]\n+enum ArbitraryDiscr {\n+    Abc(u32) = 1000,\n+    Def(u32) = 5000_000,\n+}\n+\n fn main() {\n     let a = Some(CStyleEnum::Low);\n     let b = Option::<CStyleEnum>::None;\n@@ -189,6 +218,9 @@ fn main() {\n     let wrapping_niche128_none1 = Wrapping128Niche::Y;\n     let wrapping_niche128_none2 = Wrapping128Niche::Z;\n \n+    let direct_tag_128_a = DirectTag128::A(42);\n+    let direct_tag_128_b = DirectTag128::B(137);\n+\n     let niche_w_fields_1_some = NicheLayoutWithFields1::A(&77, 7);\n     let niche_w_fields_1_none = NicheLayoutWithFields1::B(99);\n \n@@ -205,6 +237,9 @@ fn main() {\n     let niche_w_fields_std_result_ok: Result<Box<[u8]>, u64> = Ok(vec![1, 2, 3].into());\n     let niche_w_fields_std_result_err: Result<Box<[u8]>, u64> = Err(789);\n \n+    let arbitrary_discr1 = ArbitraryDiscr::Abc(1234);\n+    let arbitrary_discr2 = ArbitraryDiscr::Def(5678);\n+\n     zzz(); // #break\n }\n "}]}