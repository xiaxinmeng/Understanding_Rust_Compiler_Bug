{"sha": "b39b62534d4d7a569926dab23d958458278f9d69", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzOWI2MjUzNGQ0ZDdhNTY5OTI2ZGFiMjNkOTU4NDU4Mjc4ZjlkNjk=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-02-13T17:12:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-02-13T17:12:34Z"}, "message": "Rollup merge of #58354 - matthewjasper:mir-dump-fixes, r=wesleywiser\n\nFix ICE and invalid filenames in MIR printing code\n\n* Don't panic when printing MIR for associated constants\n* Don't use `<` and `>` in filenames, since they aren't allowed on Windows.\n\nr? @eddyb\n\ncc @RalfJung", "tree": {"sha": "2a959de309b6478531dabcfa3e3a14272b2a4287", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a959de309b6478531dabcfa3e3a14272b2a4287"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b39b62534d4d7a569926dab23d958458278f9d69", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcZFACCRBK7hj4Ov3rIwAAdHIIAEidDj6IG6twXmsSOC7fkvzy\nKc0rxNBuVkCCCHszOM4wvAv3LVuNUUAvfszcz4yMDE2TSwhU3fhG5pna7eO7N1K+\nMgIuq/Q3Xypfz7Xcqzzy88K2xp6ELNJKWWqdufITnPbYJgC3o9DaxEIu03fB8llq\nE7af1xnfUCVEk/0Pp8WZIQcMqAKA7B3tQ4aUe6CufrzM38GOoY5QCU0dkBIQ4jlv\nyBb9/KXC4Txc0/Zls0zY3Och/ZNcoBmuGPcM5mZcA9pM+OTwnq6N2V2uV2ChLdcv\nYjIKgLHwvRV2BVHJ7yDKT+MHr28gDzQyrYOoLYJIm9IKb2xAG7Cgz+E5cXDUmWU=\n=E/hG\n-----END PGP SIGNATURE-----\n", "payload": "tree 2a959de309b6478531dabcfa3e3a14272b2a4287\nparent c6590e7dc7d51d782b3937bb89cd793410b8d88f\nparent d7afd3ebfb490c3c3905812a93cbc08b6d45d26b\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1550077954 +0100\ncommitter GitHub <noreply@github.com> 1550077954 +0100\n\nRollup merge of #58354 - matthewjasper:mir-dump-fixes, r=wesleywiser\n\nFix ICE and invalid filenames in MIR printing code\n\n* Don't panic when printing MIR for associated constants\n* Don't use `<` and `>` in filenames, since they aren't allowed on Windows.\n\nr? @eddyb\n\ncc @RalfJung\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b39b62534d4d7a569926dab23d958458278f9d69", "html_url": "https://github.com/rust-lang/rust/commit/b39b62534d4d7a569926dab23d958458278f9d69", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b39b62534d4d7a569926dab23d958458278f9d69/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6590e7dc7d51d782b3937bb89cd793410b8d88f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6590e7dc7d51d782b3937bb89cd793410b8d88f", "html_url": "https://github.com/rust-lang/rust/commit/c6590e7dc7d51d782b3937bb89cd793410b8d88f"}, {"sha": "d7afd3ebfb490c3c3905812a93cbc08b6d45d26b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7afd3ebfb490c3c3905812a93cbc08b6d45d26b", "html_url": "https://github.com/rust-lang/rust/commit/d7afd3ebfb490c3c3905812a93cbc08b6d45d26b"}], "stats": {"total": 71, "additions": 69, "deletions": 2}, "files": [{"sha": "8177de50776d64758e164dbf622de5d9f85fe882", "filename": "src/librustc_mir/util/pretty.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b39b62534d4d7a569926dab23d958458278f9d69/src%2Flibrustc_mir%2Futil%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b39b62534d4d7a569926dab23d958458278f9d69/src%2Flibrustc_mir%2Futil%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fpretty.rs?ref=b39b62534d4d7a569926dab23d958458278f9d69", "patch": "@@ -197,7 +197,7 @@ fn dump_path(\n                 .chars()\n                 .filter_map(|c| match c {\n                     ' ' => None,\n-                    ':' => Some('_'),\n+                    ':' | '<' | '>' => Some('_'),\n                     c => Some(c)\n                 }));\n             s\n@@ -603,7 +603,8 @@ fn write_mir_sig(\n     match (descr, src.promoted) {\n         (_, Some(i)) => write!(w, \"{:?} in \", i)?,\n         (Some(Def::StructCtor(..)), _) => write!(w, \"struct \")?,\n-        (Some(Def::Const(_)), _) => write!(w, \"const \")?,\n+        (Some(Def::Const(_)), _)\n+        | (Some(Def::AssociatedConst(_)), _) => write!(w, \"const \")?,\n         (Some(Def::Static(_, /*is_mutbl*/false)), _) => write!(w, \"static \")?,\n         (Some(Def::Static(_, /*is_mutbl*/true)), _) => write!(w, \"static mut \")?,\n         (_, _) if is_function => write!(w, \"fn \")?,"}, {"sha": "fe85baa048e3903046c895c8012d444895b210ec", "filename": "src/test/mir-opt/unusual-item-types.rs", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/b39b62534d4d7a569926dab23d958458278f9d69/src%2Ftest%2Fmir-opt%2Funusual-item-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b39b62534d4d7a569926dab23d958458278f9d69/src%2Ftest%2Fmir-opt%2Funusual-item-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funusual-item-types.rs?ref=b39b62534d4d7a569926dab23d958458278f9d69", "patch": "@@ -0,0 +1,66 @@\n+// Test that we don't ICE when trying to dump MIR for unusual item types and\n+// that we don't create filenames containing `<` and `>`\n+\n+struct A;\n+\n+impl A {\n+    const ASSOCIATED_CONSTANT: i32 = 2;\n+}\n+\n+enum E {\n+    V = 5,\n+}\n+\n+fn main() {\n+    let v = Vec::<i32>::new();\n+}\n+\n+// END RUST SOURCE\n+\n+// START rustc.{{impl}}-ASSOCIATED_CONSTANT.mir_map.0.mir\n+// bb0: {\n+//     _0 = const 2i32;\n+//     return;\n+// }\n+// bb1: {\n+//     resume;\n+// }\n+// END rustc.{{impl}}-ASSOCIATED_CONSTANT.mir_map.0.mir\n+\n+// START rustc.E-V-{{constant}}.mir_map.0.mir\n+// bb0: {\n+//     _0 = const 5isize;\n+//     return;\n+// }\n+// bb1: {\n+//     resume;\n+// }\n+// END rustc.E-V-{{constant}}.mir_map.0.mir\n+\n+// START rustc.ptr-real_drop_in_place.std__vec__Vec_i32_.AddMovesForPackedDrops.before.mir\n+//     bb0: {\n+//     goto -> bb7;\n+// }\n+// bb1: {\n+//     return;\n+// }\n+// bb2: {\n+//     resume;\n+// }\n+// bb3: {\n+//     goto -> bb1;\n+// }\n+// bb4: {\n+//     goto -> bb2;\n+// }\n+// bb5: {\n+//     drop(((*_1).0: alloc::raw_vec::RawVec<i32>)) -> bb4;\n+// }\n+// bb6: {\n+//     drop(((*_1).0: alloc::raw_vec::RawVec<i32>)) -> [return: bb3, unwind: bb4];\n+// }\n+// bb7: {\n+//     _2 = &mut (*_1);\n+//     _3 = const std::ops::Drop::drop(move _2) -> [return: bb6, unwind: bb5];\n+// }\n+// END rustc.ptr-real_drop_in_place.std__vec__Vec_i32_.AddMovesForPackedDrops.before.mir"}]}