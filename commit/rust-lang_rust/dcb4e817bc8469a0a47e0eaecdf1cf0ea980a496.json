{"sha": "dcb4e817bc8469a0a47e0eaecdf1cf0ea980a496", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjYjRlODE3YmM4NDY5YTBhNDdlMGVhZWNkZjFjZjBlYTk4MGE0OTY=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-03-29T00:45:36Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-03-29T00:45:36Z"}, "message": "Suggest correct order for args and constraints", "tree": {"sha": "114dec3af225f23c106e1f08a1928fce041b60f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/114dec3af225f23c106e1f08a1928fce041b60f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dcb4e817bc8469a0a47e0eaecdf1cf0ea980a496", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dcb4e817bc8469a0a47e0eaecdf1cf0ea980a496", "html_url": "https://github.com/rust-lang/rust/commit/dcb4e817bc8469a0a47e0eaecdf1cf0ea980a496", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dcb4e817bc8469a0a47e0eaecdf1cf0ea980a496/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33d793c326a83ed2e71a4d5e612526cf13c890b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/33d793c326a83ed2e71a4d5e612526cf13c890b2", "html_url": "https://github.com/rust-lang/rust/commit/33d793c326a83ed2e71a4d5e612526cf13c890b2"}], "stats": {"total": 68, "additions": 68, "deletions": 0}, "files": [{"sha": "4c7edfc83fa333b319a09910dadbfc191d0d0c9a", "filename": "src/librustc_ast_passes/ast_validation.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/dcb4e817bc8469a0a47e0eaecdf1cf0ea980a496/src%2Flibrustc_ast_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcb4e817bc8469a0a47e0eaecdf1cf0ea980a496/src%2Flibrustc_ast_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_passes%2Fast_validation.rs?ref=dcb4e817bc8469a0a47e0eaecdf1cf0ea980a496", "patch": "@@ -663,6 +663,20 @@ impl<'a> AstValidator<'a> {\n                 _ => None,\n             })\n             .collect::<Vec<_>>();\n+        let snippet_span = match &constraint_spans[..] {\n+            [single] => *single,\n+            [first, .., last] => first.to(*last),\n+            [] => unreachable!(),\n+        };\n+        let removal_span = match &arg_spans[..] {\n+            [first, ..] => snippet_span.until(*first),\n+            [] => unreachable!(),\n+        };\n+        let sugg_span = match &arg_spans[..] {\n+            [.., last] => last.shrink_to_hi(),\n+            [] => unreachable!(),\n+        };\n+        let snippet = self.session.source_map().span_to_snippet(snippet_span).unwrap();\n         let constraint_len = constraint_spans.len();\n         // ...and then error:\n         self.err_handler()\n@@ -679,6 +693,15 @@ impl<'a> AstValidator<'a> {\n                 ),\n             )\n             .span_labels(arg_spans, \"generic argument\")\n+            .multipart_suggestion(\n+                \"move the constraints after the generic arguments\",\n+                vec![\n+                    (removal_span, String::new()),\n+                    (sugg_span.shrink_to_lo(), \", \".to_string()),\n+                    (sugg_span, snippet),\n+                ],\n+                Applicability::MachineApplicable,\n+            )\n             .emit();\n     }\n }"}, {"sha": "959a1ab121b2902ba2a0a81685ddaef64ff6b001", "filename": "src/test/ui/parser/issue-32214.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/dcb4e817bc8469a0a47e0eaecdf1cf0ea980a496/src%2Ftest%2Fui%2Fparser%2Fissue-32214.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dcb4e817bc8469a0a47e0eaecdf1cf0ea980a496/src%2Ftest%2Fui%2Fparser%2Fissue-32214.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-32214.stderr?ref=dcb4e817bc8469a0a47e0eaecdf1cf0ea980a496", "patch": "@@ -5,6 +5,11 @@ LL | pub fn test<W, I: Trait<Item=(), W> >() {}\n    |                         -------  ^ generic argument\n    |                         |\n    |                         the constraint is provided here\n+   |\n+help: move the constraints after the generic arguments\n+   |\n+LL | pub fn test<W, I: Trait<W, Item=()> >() {}\n+   |                        --^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "3d2b35fcf454d30e1e2781ab39fbcf77d7f090c6", "filename": "src/test/ui/suggestions/suggest-move-types.stderr", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/dcb4e817bc8469a0a47e0eaecdf1cf0ea980a496/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dcb4e817bc8469a0a47e0eaecdf1cf0ea980a496/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-types.stderr?ref=dcb4e817bc8469a0a47e0eaecdf1cf0ea980a496", "patch": "@@ -5,6 +5,11 @@ LL | struct A<T, M: One<A=(), T>> {\n    |                    ----  ^ generic argument\n    |                    |\n    |                    the constraint is provided here\n+   |\n+help: move the constraints after the generic arguments\n+   |\n+LL | struct A<T, M: One<T, A=()>> {\n+   |                   --^^^^\n \n error: generic arguments must come before the first constraint\n   --> $DIR/suggest-move-types.rs:33:43\n@@ -14,6 +19,11 @@ LL | struct Al<'a, T, M: OneWithLifetime<A=(), T, 'a>> {\n    |                                     |     |\n    |                                     |     generic argument\n    |                                     the constraint is provided here\n+   |\n+help: move the constraints after the generic arguments\n+   |\n+LL | struct Al<'a, T, M: OneWithLifetime<T, 'a, A=()>> {\n+   |                                    --    ^^^^\n \n error: generic arguments must come before the first constraint\n   --> $DIR/suggest-move-types.rs:40:46\n@@ -26,6 +36,11 @@ LL | struct B<T, U, V, M: Three<A=(), B=(), C=(), T, U, V>> {\n    |                            |     |     the constraints are provided here\n    |                            |     the constraints are provided here\n    |                            the constraints are provided here\n+   |\n+help: move the constraints after the generic arguments\n+   |\n+LL | struct B<T, U, V, M: Three<T, U, V, A=(), B=(), C=()>> {\n+   |                           --      ^^^^^^^^^^^^^^^^\n \n error: generic arguments must come before the first constraint\n   --> $DIR/suggest-move-types.rs:48:71\n@@ -41,6 +56,11 @@ LL | struct Bl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<A=(), B=(), C=(), T, U,\n    |                                                     |     |     the constraints are provided here\n    |                                                     |     the constraints are provided here\n    |                                                     the constraints are provided here\n+   |\n+help: move the constraints after the generic arguments\n+   |\n+LL | struct Bl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<T, U, V, 'a, 'b, 'c, A=(), B=(), C=()>> {\n+   |                                                    --                  ^^^^^^^^^^^^^^^^\n \n error: generic arguments must come before the first constraint\n   --> $DIR/suggest-move-types.rs:57:28\n@@ -53,6 +73,11 @@ LL | struct C<T, U, V, M: Three<T, A=(), B=(), C=(), U, V>> {\n    |                            |  |     the constraints are provided here\n    |                            |  the constraints are provided here\n    |                            generic argument\n+   |\n+help: move the constraints after the generic arguments\n+   |\n+LL | struct C<T, U, V, M: Three<A=(), B=(), C=(), U, V, A=(), B=(), C=()>> {\n+   |                           --                     ^^^^^^^^^^^^^^^^\n \n error: generic arguments must come before the first constraint\n   --> $DIR/suggest-move-types.rs:65:53\n@@ -68,6 +93,11 @@ LL | struct Cl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<T, 'a, A=(), B=(), C=()\n    |                                                     |  |   the constraints are provided here\n    |                                                     |  generic argument\n    |                                                     generic argument\n+   |\n+help: move the constraints after the generic arguments\n+   |\n+LL | struct Cl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<A=(), B=(), C=(), U, 'b, V, 'c, A=(), B=(), C=()>> {\n+   |                                                    --                             ^^^^^^^^^^^^^^^^\n \n error: generic arguments must come before the first constraint\n   --> $DIR/suggest-move-types.rs:74:28\n@@ -80,6 +110,11 @@ LL | struct D<T, U, V, M: Three<T, A=(), B=(), U, C=(), V>> {\n    |                            |  |     the constraints are provided here\n    |                            |  the constraints are provided here\n    |                            generic argument\n+   |\n+help: move the constraints after the generic arguments\n+   |\n+LL | struct D<T, U, V, M: Three<A=(), B=(), U, C=(), V, A=(), B=(), U, C=()>> {\n+   |                           --                     ^^^^^^^^^^^^^^^^^^^\n \n error: generic arguments must come before the first constraint\n   --> $DIR/suggest-move-types.rs:82:53\n@@ -95,6 +130,11 @@ LL | struct Dl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<T, 'a, A=(), B=(), U, '\n    |                                                     |  |   the constraints are provided here\n    |                                                     |  generic argument\n    |                                                     generic argument\n+   |\n+help: move the constraints after the generic arguments\n+   |\n+LL | struct Dl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<A=(), B=(), U, 'b, C=(), V, 'c, A=(), B=(), U, 'b, C=()>> {\n+   |                                                    --                             ^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0747]: type provided when a lifetime was expected\n   --> $DIR/suggest-move-types.rs:33:43"}]}