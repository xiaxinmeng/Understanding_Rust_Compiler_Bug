{"sha": "a19a32488d7e80b322943ab990b9cb62c9356e6e", "node_id": "C_kwDOAAsO6NoAKGExOWEzMjQ4OGQ3ZTgwYjMyMjk0M2FiOTkwYjljYjYyYzkzNTZlNmU", "commit": {"author": {"name": "Wang Ruochen", "email": "wrc@ruo-chen.wang", "date": "2022-01-03T17:37:29Z"}, "committer": {"name": "Wang Ruochen", "email": "wrc@ruo-chen.wang", "date": "2022-01-03T17:38:45Z"}, "message": "Don't add pattern if there is a catch all afterwards", "tree": {"sha": "9b6e7b18d2abddf35e8583a79ec13bdf8bc4c2da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b6e7b18d2abddf35e8583a79ec13bdf8bc4c2da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a19a32488d7e80b322943ab990b9cb62c9356e6e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEaiSth+M9lPoQjHQDxt6lcKOwJvwFAmHTNKsACgkQxt6lcKOw\nJvxImwf/c2ihQdX0EBku1HAS08KHrs4kq4TdvSkOOy+bAVkykBluj1hB4fOpbzxN\ne1QXS7wcV2bqB7zQ/heqyc6luYzXWhxbHTSf7cnRqTV7DXIKlYAFOblOCzxRwlNR\n4O9UTJRbcIV+8fYcQDbP3RmkLbaandoJKGL9KDEddI30xob1vcM4+PjNFnZ8aCK/\nubcrqquRXeJCQJjtoXy2SO3tBqQnAbrCyaOUBKTKz9O4+4D46MWJF4Aa/QDnWYRR\nwNGMspltD3mKSBo2eVYEegERCP2jWD3lS0bLTg+/WMmvu/0LfvC+mcoYeVg3nYb6\n6uKxQCJrpIErVUOZnJ3cbKz2mMJ6pg==\n=ybTf\n-----END PGP SIGNATURE-----", "payload": "tree 9b6e7b18d2abddf35e8583a79ec13bdf8bc4c2da\nparent be5205170c2473cfb40630ba57d672725d74fbb3\nauthor Wang Ruochen <wrc@ruo-chen.wang> 1641231449 -0800\ncommitter Wang Ruochen <wrc@ruo-chen.wang> 1641231525 -0800\n\nDon't add pattern if there is a catch all afterwards\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a19a32488d7e80b322943ab990b9cb62c9356e6e", "html_url": "https://github.com/rust-lang/rust/commit/a19a32488d7e80b322943ab990b9cb62c9356e6e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a19a32488d7e80b322943ab990b9cb62c9356e6e/comments", "author": {"login": "weirane", "id": 37568244, "node_id": "MDQ6VXNlcjM3NTY4MjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/37568244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weirane", "html_url": "https://github.com/weirane", "followers_url": "https://api.github.com/users/weirane/followers", "following_url": "https://api.github.com/users/weirane/following{/other_user}", "gists_url": "https://api.github.com/users/weirane/gists{/gist_id}", "starred_url": "https://api.github.com/users/weirane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weirane/subscriptions", "organizations_url": "https://api.github.com/users/weirane/orgs", "repos_url": "https://api.github.com/users/weirane/repos", "events_url": "https://api.github.com/users/weirane/events{/privacy}", "received_events_url": "https://api.github.com/users/weirane/received_events", "type": "User", "site_admin": false}, "committer": {"login": "weirane", "id": 37568244, "node_id": "MDQ6VXNlcjM3NTY4MjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/37568244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weirane", "html_url": "https://github.com/weirane", "followers_url": "https://api.github.com/users/weirane/followers", "following_url": "https://api.github.com/users/weirane/following{/other_user}", "gists_url": "https://api.github.com/users/weirane/gists{/gist_id}", "starred_url": "https://api.github.com/users/weirane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weirane/subscriptions", "organizations_url": "https://api.github.com/users/weirane/orgs", "repos_url": "https://api.github.com/users/weirane/repos", "events_url": "https://api.github.com/users/weirane/events{/privacy}", "received_events_url": "https://api.github.com/users/weirane/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be5205170c2473cfb40630ba57d672725d74fbb3", "url": "https://api.github.com/repos/rust-lang/rust/commits/be5205170c2473cfb40630ba57d672725d74fbb3", "html_url": "https://github.com/rust-lang/rust/commit/be5205170c2473cfb40630ba57d672725d74fbb3"}], "stats": {"total": 78, "additions": 69, "deletions": 9}, "files": [{"sha": "366f308f6eff4743fede883d1e2c190e69951f79", "filename": "crates/ide_assists/src/handlers/move_guard.rs", "status": "modified", "additions": 69, "deletions": 9, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/a19a32488d7e80b322943ab990b9cb62c9356e6e/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmove_guard.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a19a32488d7e80b322943ab990b9cb62c9356e6e/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmove_guard.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmove_guard.rs?ref=a19a32488d7e80b322943ab990b9cb62c9356e6e", "patch": "@@ -1,6 +1,7 @@\n use syntax::{\n     ast::{\n         edit::AstNodeEdit, make, AstNode, BlockExpr, Condition, ElseBranch, Expr, IfExpr, MatchArm,\n+        Pat,\n     },\n     SyntaxKind::WHITESPACE,\n };\n@@ -96,7 +97,6 @@ pub(crate) fn move_guard_to_arm_body(acc: &mut Assists, ctx: &AssistContext) ->\n // fn handle(action: Action) {\n //     match action {\n //         Action::Move { distance } if distance > 10 => foo(),\n-//         Action::Move { distance } => {}\n //         _ => (),\n //     }\n // }\n@@ -176,9 +176,18 @@ pub(crate) fn move_arm_cond_to_match_guard(acc: &mut Assists, ctx: &AssistContex\n                     }\n                 }\n             } else {\n-                // There's no else branch. Add a pattern without guard\n+                // There's no else branch. Add a pattern without guard, unless the following match\n+                // arm is `_ => ...`\n                 cov_mark::hit!(move_guard_ifelse_notail);\n-                edit.insert(then_arm_end, format!(\"\\n{}{} => {{}}\", spaces, match_pat));\n+                match match_arm.syntax().next_sibling().and_then(MatchArm::cast) {\n+                    Some(next_arm)\n+                        if matches!(next_arm.pat(), Some(Pat::WildcardPat(_)))\n+                            && next_arm.guard().is_none() =>\n+                    {\n+                        cov_mark::hit!(move_guard_ifelse_has_wildcard);\n+                    }\n+                    _ => edit.insert(then_arm_end, format!(\"\\n{}{} => {{}}\", spaces, match_pat)),\n+                }\n             }\n         },\n     )\n@@ -312,7 +321,6 @@ fn main() {\n fn main() {\n     match 92 {\n         x if x > 10 => false,\n-        x => {}\n         _ => true\n     }\n }\n@@ -322,6 +330,7 @@ fn main() {\n \n     #[test]\n     fn move_arm_cond_in_block_to_match_guard_works() {\n+        cov_mark::check!(move_guard_ifelse_has_wildcard);\n         check_assist(\n             move_arm_cond_to_match_guard,\n             r#\"\n@@ -340,14 +349,69 @@ fn main() {\n fn main() {\n     match 92 {\n         x if x > 10 => false,\n-        x => {}\n         _ => true\n     }\n }\n \"#,\n         );\n     }\n \n+    #[test]\n+    fn move_arm_cond_in_block_to_match_guard_no_wildcard_works() {\n+        cov_mark::check_count!(move_guard_ifelse_has_wildcard, 0);\n+        check_assist(\n+            move_arm_cond_to_match_guard,\n+            r#\"\n+fn main() {\n+    match 92 {\n+        x => {\n+            $0if x > 10 {\n+                false\n+            }\n+        }\n+    }\n+}\n+\"#,\n+            r#\"\n+fn main() {\n+    match 92 {\n+        x if x > 10 => false,\n+        x => {}\n+    }\n+}\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn move_arm_cond_in_block_to_match_guard_wildcard_guard_works() {\n+        cov_mark::check_count!(move_guard_ifelse_has_wildcard, 0);\n+        check_assist(\n+            move_arm_cond_to_match_guard,\n+            r#\"\n+fn main() {\n+    match 92 {\n+        x => {\n+            $0if x > 10 {\n+                false\n+            }\n+        }\n+        _ if x > 10 => true,\n+    }\n+}\n+\"#,\n+            r#\"\n+fn main() {\n+    match 92 {\n+        x if x > 10 => false,\n+        x => {}\n+        _ if x > 10 => true,\n+    }\n+}\n+\"#,\n+        );\n+    }\n+\n     #[test]\n     fn move_arm_cond_in_block_to_match_guard_add_comma_works() {\n         check_assist(\n@@ -368,7 +432,6 @@ fn main() {\n fn main() {\n     match 92 {\n         x if x > 10 => false,\n-        x => {}\n         _ => true\n     }\n }\n@@ -407,7 +470,6 @@ fn main() {\n fn main() {\n     match 92 {\n         x if x > 10 => {  }\n-        x => {}\n         _ => true\n     }\n }\n@@ -437,7 +499,6 @@ fn main() {\n             92;\n             false\n         }\n-        x => {}\n         _ => true\n     }\n }\n@@ -469,7 +530,6 @@ fn main() {\n             92;\n             false\n         }\n-        x => {}\n         _ => true\n     }\n }"}]}