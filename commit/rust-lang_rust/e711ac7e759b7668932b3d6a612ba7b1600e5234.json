{"sha": "e711ac7e759b7668932b3d6a612ba7b1600e5234", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3MTFhYzdlNzU5Yjc2Njg5MzJiM2Q2YTYxMmJhN2IxNjAwZTUyMzQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-24T02:09:55Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-24T06:38:36Z"}, "message": "Remove double expr_u32 (fixup #22700)", "tree": {"sha": "92e3e1be41ea629c13047fac80b86784a152f680", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92e3e1be41ea629c13047fac80b86784a152f680"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e711ac7e759b7668932b3d6a612ba7b1600e5234", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e711ac7e759b7668932b3d6a612ba7b1600e5234", "html_url": "https://github.com/rust-lang/rust/commit/e711ac7e759b7668932b3d6a612ba7b1600e5234", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e711ac7e759b7668932b3d6a612ba7b1600e5234/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54041c2711c1c0931ca7a58da1119ea53dd90140", "url": "https://api.github.com/repos/rust-lang/rust/commits/54041c2711c1c0931ca7a58da1119ea53dd90140", "html_url": "https://github.com/rust-lang/rust/commit/54041c2711c1c0931ca7a58da1119ea53dd90140"}], "stats": {"total": 3, "additions": 0, "deletions": 3}, "files": [{"sha": "656d507ed69b826952ecbe61bb354f1c72c69836", "filename": "src/libsyntax/ext/build.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e711ac7e759b7668932b3d6a612ba7b1600e5234/src%2Flibsyntax%2Fext%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e711ac7e759b7668932b3d6a612ba7b1600e5234/src%2Flibsyntax%2Fext%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbuild.rs?ref=e711ac7e759b7668932b3d6a612ba7b1600e5234", "patch": "@@ -708,9 +708,6 @@ impl<'a> AstBuilder for ExtCtxt<'a> {\n     fn expr_u8(&self, sp: Span, u: u8) -> P<ast::Expr> {\n         self.expr_lit(sp, ast::LitInt(u as u64, ast::UnsignedIntLit(ast::TyU8)))\n     }\n-    fn expr_u32(&self, sp: Span, u: u32) -> P<ast::Expr> {\n-        self.expr_lit(sp, ast::LitInt(u as u64, ast::UnsignedIntLit(ast::TyU32)))\n-    }\n     fn expr_bool(&self, sp: Span, value: bool) -> P<ast::Expr> {\n         self.expr_lit(sp, ast::LitBool(value))\n     }"}]}