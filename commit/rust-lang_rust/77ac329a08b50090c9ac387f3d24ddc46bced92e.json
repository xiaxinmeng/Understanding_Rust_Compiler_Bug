{"sha": "77ac329a08b50090c9ac387f3d24ddc46bced92e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3YWMzMjlhMDhiNTAwOTBjOWFjMzg3ZjNkMjRkZGM0NmJjZWQ5MmU=", "commit": {"author": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2021-09-08T16:24:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-08T16:24:16Z"}, "message": "Rollup merge of #88553 - theo-lw:issue-88276, r=estebank\n\nImprove diagnostics for unary plus operators (#88276)\n\nThis pull request improves the diagnostics emitted on parsing a unary plus operator. See #88276.\n\nBefore:\n\n```\nerror: expected expression, found `+`\n --> src/main.rs:2:13\n  |\n2 |     let x = +1;\n  |             ^ expected expression\n```\n\nAfter:\n\n```\nerror: leading `+` is not supported\n --> main.rs:2:13\n  |\n2 |     let x = +1;\n  |             ^\n  |             |\n  |             unexpected `+`\n  |             help: try removing the `+`\n```", "tree": {"sha": "f46c5520479e1884a3205c0ba24073b18735edaf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f46c5520479e1884a3205c0ba24073b18735edaf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77ac329a08b50090c9ac387f3d24ddc46bced92e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhOOOwCRBK7hj4Ov3rIwAA+1IIAENlKC9yhyF53sO+PV0SI0Bh\nHz6A8olufiI0ZuraPDC2mWriKDjy/tKG8dU1qHrkhKPFD2LXGzrrisiHf5oIihp3\nGHuFfyowQcxT6RWIKyAMKVWtlBRip3BfQ7/ew362FUJTjqG1FLkiIpwXffIG1qcT\nUUqVhSmUQhsDTbsx4FXOtsr2rd47GI/GbAsIApNeYpFtf/Ow1yhoLZ/va52hK8/u\nS0GM88R4dZf7HnNMqLclV3RNUwN/+/4G5/sp1GpFFJ2KXonWOQ1gMR5SLXhurR4D\nYiZLz+RS9CRJvuJp+gGQaXGLbaky/PHCEXFUeB9glN2pDUtljncVrj9SfAy75eU=\n=vPp8\n-----END PGP SIGNATURE-----\n", "payload": "tree f46c5520479e1884a3205c0ba24073b18735edaf\nparent 4fb00847f8d1f9f968a703081c54ccfcb846bc38\nparent 20eba43283d59849627042d67413d32e08ace0f1\nauthor Jack Huey <31162821+jackh726@users.noreply.github.com> 1631118256 -0400\ncommitter GitHub <noreply@github.com> 1631118256 -0400\n\nRollup merge of #88553 - theo-lw:issue-88276, r=estebank\n\nImprove diagnostics for unary plus operators (#88276)\n\nThis pull request improves the diagnostics emitted on parsing a unary plus operator. See #88276.\n\nBefore:\n\n```\nerror: expected expression, found `+`\n --> src/main.rs:2:13\n  |\n2 |     let x = +1;\n  |             ^ expected expression\n```\n\nAfter:\n\n```\nerror: leading `+` is not supported\n --> main.rs:2:13\n  |\n2 |     let x = +1;\n  |             ^\n  |             |\n  |             unexpected `+`\n  |             help: try removing the `+`\n```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77ac329a08b50090c9ac387f3d24ddc46bced92e", "html_url": "https://github.com/rust-lang/rust/commit/77ac329a08b50090c9ac387f3d24ddc46bced92e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77ac329a08b50090c9ac387f3d24ddc46bced92e/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fb00847f8d1f9f968a703081c54ccfcb846bc38", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fb00847f8d1f9f968a703081c54ccfcb846bc38", "html_url": "https://github.com/rust-lang/rust/commit/4fb00847f8d1f9f968a703081c54ccfcb846bc38"}, {"sha": "20eba43283d59849627042d67413d32e08ace0f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/20eba43283d59849627042d67413d32e08ace0f1", "html_url": "https://github.com/rust-lang/rust/commit/20eba43283d59849627042d67413d32e08ace0f1"}], "stats": {"total": 111, "additions": 105, "deletions": 6}, "files": [{"sha": "3a65ffe41ae87cbf4c17622dc4b1556c2b231ccf", "filename": "compiler/rustc_ast/src/token.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/77ac329a08b50090c9ac387f3d24ddc46bced92e/compiler%2Frustc_ast%2Fsrc%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ac329a08b50090c9ac387f3d24ddc46bced92e/compiler%2Frustc_ast%2Fsrc%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Ftoken.rs?ref=77ac329a08b50090c9ac387f3d24ddc46bced92e", "patch": "@@ -586,6 +586,13 @@ impl Token {\n         self.is_non_raw_ident_where(|id| id.name.is_bool_lit())\n     }\n \n+    pub fn is_numeric_lit(&self) -> bool {\n+        matches!(\n+            self.kind,\n+            Literal(Lit { kind: LitKind::Integer, .. }) | Literal(Lit { kind: LitKind::Float, .. })\n+        )\n+    }\n+\n     /// Returns `true` if the token is a non-raw identifier for which `pred` holds.\n     pub fn is_non_raw_ident_where(&self, pred: impl FnOnce(Ident) -> bool) -> bool {\n         match self.ident() {"}, {"sha": "05156745105a1c0a10b839720f00c8a957d153ef", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/77ac329a08b50090c9ac387f3d24ddc46bced92e/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ac329a08b50090c9ac387f3d24ddc46bced92e/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=77ac329a08b50090c9ac387f3d24ddc46bced92e", "patch": "@@ -516,6 +516,26 @@ impl<'a> Parser<'a> {\n             token::BinOp(token::And) | token::AndAnd => {\n                 make_it!(this, attrs, |this, _| this.parse_borrow_expr(lo))\n             }\n+            token::BinOp(token::Plus) if this.look_ahead(1, |tok| tok.is_numeric_lit()) => {\n+                let mut err = this.struct_span_err(lo, \"leading `+` is not supported\");\n+                err.span_label(lo, \"unexpected `+`\");\n+\n+                // a block on the LHS might have been intended to be an expression instead\n+                if let Some(sp) = this.sess.ambiguous_block_expr_parse.borrow().get(&lo) {\n+                    this.sess.expr_parentheses_needed(&mut err, *sp);\n+                } else {\n+                    err.span_suggestion_verbose(\n+                        lo,\n+                        \"try removing the `+`\",\n+                        \"\".to_string(),\n+                        Applicability::MachineApplicable,\n+                    );\n+                }\n+                err.emit();\n+\n+                this.bump();\n+                this.parse_prefix_expr(None)\n+            } // `+expr`\n             token::Ident(..) if this.token.is_keyword(kw::Box) => {\n                 make_it!(this, attrs, |this, _| this.parse_box_expr(lo))\n             }"}, {"sha": "610798d880f0a795cd7458726cf3dbaf80253181", "filename": "src/test/ui/associated-types/issue-36499.stderr", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/77ac329a08b50090c9ac387f3d24ddc46bced92e/src%2Ftest%2Fui%2Fassociated-types%2Fissue-36499.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77ac329a08b50090c9ac387f3d24ddc46bced92e/src%2Ftest%2Fui%2Fassociated-types%2Fissue-36499.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fissue-36499.stderr?ref=77ac329a08b50090c9ac387f3d24ddc46bced92e", "patch": "@@ -1,8 +1,14 @@\n-error: expected expression, found `+`\n+error: leading `+` is not supported\n   --> $DIR/issue-36499.rs:4:9\n    |\n LL |     2 + +2;\n-   |         ^ expected expression\n+   |         ^ unexpected `+`\n+   |\n+help: try removing the `+`\n+   |\n+LL -     2 + +2;\n+LL +     2 + 2;\n+   | \n \n error: aborting due to previous error\n "}, {"sha": "5f5e25991e0cc732dffa898cf5ede8fe6785476c", "filename": "src/test/ui/parser/expr-as-stmt.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77ac329a08b50090c9ac387f3d24ddc46bced92e/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/77ac329a08b50090c9ac387f3d24ddc46bced92e/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.fixed?ref=77ac329a08b50090c9ac387f3d24ddc46bced92e", "patch": "@@ -10,7 +10,7 @@ fn foo() -> i32 {\n }\n \n fn bar() -> i32 {\n-    ({2}) + 2 //~ ERROR expected expression, found `+`\n+    ({2}) + 2 //~ ERROR leading `+` is not supported\n     //~^ ERROR mismatched types\n }\n "}, {"sha": "5428e1c32fed3edbe0a9bef2cf7c890b3ce6246e", "filename": "src/test/ui/parser/expr-as-stmt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77ac329a08b50090c9ac387f3d24ddc46bced92e/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ac329a08b50090c9ac387f3d24ddc46bced92e/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.rs?ref=77ac329a08b50090c9ac387f3d24ddc46bced92e", "patch": "@@ -10,7 +10,7 @@ fn foo() -> i32 {\n }\n \n fn bar() -> i32 {\n-    {2} + 2 //~ ERROR expected expression, found `+`\n+    {2} + 2 //~ ERROR leading `+` is not supported\n     //~^ ERROR mismatched types\n }\n "}, {"sha": "d99e9be0000c312ef65101aef774f070e78f8cd2", "filename": "src/test/ui/parser/expr-as-stmt.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/77ac329a08b50090c9ac387f3d24ddc46bced92e/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77ac329a08b50090c9ac387f3d24ddc46bced92e/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.stderr?ref=77ac329a08b50090c9ac387f3d24ddc46bced92e", "patch": "@@ -9,11 +9,11 @@ help: parentheses are required to parse this as an expression\n LL |     ({2}) + {2}\n    |     +   +\n \n-error: expected expression, found `+`\n+error: leading `+` is not supported\n   --> $DIR/expr-as-stmt.rs:13:9\n    |\n LL |     {2} + 2\n-   |         ^ expected expression\n+   |         ^ unexpected `+`\n    |\n help: parentheses are required to parse this as an expression\n    |"}, {"sha": "25b7c340f600d792c8360a4d39d986d32905383e", "filename": "src/test/ui/parser/issue-88276-unary-plus.fixed", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/77ac329a08b50090c9ac387f3d24ddc46bced92e/src%2Ftest%2Fui%2Fparser%2Fissue-88276-unary-plus.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/77ac329a08b50090c9ac387f3d24ddc46bced92e/src%2Ftest%2Fui%2Fparser%2Fissue-88276-unary-plus.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-88276-unary-plus.fixed?ref=77ac329a08b50090c9ac387f3d24ddc46bced92e", "patch": "@@ -0,0 +1,8 @@\n+// run-rustfix\n+#[allow(unused_parens)]\n+fn main() {\n+    let _ = 1; //~ ERROR leading `+` is not supported\n+    let _ = (1.0 + 2.0) * 3.0; //~ ERROR leading `+` is not supported\n+                           //~| ERROR leading `+` is not supported\n+    let _ = [3, 4+6]; //~ ERROR leading `+` is not supported\n+}"}, {"sha": "11b2e9d601653f9f02b1f5d5c2e5c330ae2e3eb3", "filename": "src/test/ui/parser/issue-88276-unary-plus.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/77ac329a08b50090c9ac387f3d24ddc46bced92e/src%2Ftest%2Fui%2Fparser%2Fissue-88276-unary-plus.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ac329a08b50090c9ac387f3d24ddc46bced92e/src%2Ftest%2Fui%2Fparser%2Fissue-88276-unary-plus.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-88276-unary-plus.rs?ref=77ac329a08b50090c9ac387f3d24ddc46bced92e", "patch": "@@ -0,0 +1,8 @@\n+// run-rustfix\n+#[allow(unused_parens)]\n+fn main() {\n+    let _ = +1; //~ ERROR leading `+` is not supported\n+    let _ = (1.0 + +2.0) * +3.0; //~ ERROR leading `+` is not supported\n+                           //~| ERROR leading `+` is not supported\n+    let _ = [+3, 4+6]; //~ ERROR leading `+` is not supported\n+}"}, {"sha": "b26761729a837dcec48dc22d0b27b3be069a88bd", "filename": "src/test/ui/parser/issue-88276-unary-plus.stderr", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/77ac329a08b50090c9ac387f3d24ddc46bced92e/src%2Ftest%2Fui%2Fparser%2Fissue-88276-unary-plus.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77ac329a08b50090c9ac387f3d24ddc46bced92e/src%2Ftest%2Fui%2Fparser%2Fissue-88276-unary-plus.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-88276-unary-plus.stderr?ref=77ac329a08b50090c9ac387f3d24ddc46bced92e", "patch": "@@ -0,0 +1,50 @@\n+error: leading `+` is not supported\n+  --> $DIR/issue-88276-unary-plus.rs:4:13\n+   |\n+LL |     let _ = +1;\n+   |             ^ unexpected `+`\n+   |\n+help: try removing the `+`\n+   |\n+LL -     let _ = +1;\n+LL +     let _ = 1;\n+   | \n+\n+error: leading `+` is not supported\n+  --> $DIR/issue-88276-unary-plus.rs:5:20\n+   |\n+LL |     let _ = (1.0 + +2.0) * +3.0;\n+   |                    ^ unexpected `+`\n+   |\n+help: try removing the `+`\n+   |\n+LL -     let _ = (1.0 + +2.0) * +3.0;\n+LL +     let _ = (1.0 + 2.0) * +3.0;\n+   | \n+\n+error: leading `+` is not supported\n+  --> $DIR/issue-88276-unary-plus.rs:5:28\n+   |\n+LL |     let _ = (1.0 + +2.0) * +3.0;\n+   |                            ^ unexpected `+`\n+   |\n+help: try removing the `+`\n+   |\n+LL -     let _ = (1.0 + +2.0) * +3.0;\n+LL +     let _ = (1.0 + +2.0) * 3.0;\n+   | \n+\n+error: leading `+` is not supported\n+  --> $DIR/issue-88276-unary-plus.rs:7:14\n+   |\n+LL |     let _ = [+3, 4+6];\n+   |              ^ unexpected `+`\n+   |\n+help: try removing the `+`\n+   |\n+LL -     let _ = [+3, 4+6];\n+LL +     let _ = [3, 4+6];\n+   | \n+\n+error: aborting due to 4 previous errors\n+"}]}