{"sha": "bc52224d479c0af1e36d2b12e5cf00c0c0fb3810", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjNTIyMjRkNDc5YzBhZjFlMzZkMmIxMmU1Y2YwMGMwYzBmYjM4MTA=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-05-05T19:48:28Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-05-05T19:50:10Z"}, "message": "factor out the has_attr checks", "tree": {"sha": "97ed0ca858a29f029c2742cb02ec422cf4dcaf81", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97ed0ca858a29f029c2742cb02ec422cf4dcaf81"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc52224d479c0af1e36d2b12e5cf00c0c0fb3810", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc52224d479c0af1e36d2b12e5cf00c0c0fb3810", "html_url": "https://github.com/rust-lang/rust/commit/bc52224d479c0af1e36d2b12e5cf00c0c0fb3810", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc52224d479c0af1e36d2b12e5cf00c0c0fb3810/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66842c857635f7f35523bea87fc04700d68dfad7", "url": "https://api.github.com/repos/rust-lang/rust/commits/66842c857635f7f35523bea87fc04700d68dfad7", "html_url": "https://github.com/rust-lang/rust/commit/66842c857635f7f35523bea87fc04700d68dfad7"}], "stats": {"total": 28, "additions": 13, "deletions": 15}, "files": [{"sha": "476ec2c11035b84ff8728d2fe4785b4477836735", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 13, "deletions": 15, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/bc52224d479c0af1e36d2b12e5cf00c0c0fb3810/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc52224d479c0af1e36d2b12e5cf00c0c0fb3810/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=bc52224d479c0af1e36d2b12e5cf00c0c0fb3810", "patch": "@@ -2022,13 +2022,7 @@ pub fn type_contents(cx: ctxt, ty: t) -> TypeContents {\n                 if ty::has_dtor(cx, did) {\n                     res += TC_DTOR;\n                 }\n-                if has_attr(cx, did, \"mutable\") {\n-                    res += TC_MUTABLE;\n-                }\n-                if has_attr(cx, did, \"non_owned\") {\n-                    res += TC_NON_OWNED;\n-                }\n-                res\n+                apply_tc_attr(cx, did, res)\n             }\n \n             ty_tup(ref tys) => {\n@@ -2037,7 +2031,7 @@ pub fn type_contents(cx: ctxt, ty: t) -> TypeContents {\n \n             ty_enum(did, ref substs) => {\n                 let variants = substd_enum_variants(cx, did, substs);\n-                let mut res = if variants.is_empty() {\n+                let res = if variants.is_empty() {\n                     // we somewhat arbitrary declare that empty enums\n                     // are non-copyable\n                     TC_EMPTY_ENUM\n@@ -2048,13 +2042,7 @@ pub fn type_contents(cx: ctxt, ty: t) -> TypeContents {\n                             |tc, arg_ty| *tc + tc_ty(cx, *arg_ty, cache))\n                     })\n                 };\n-                if has_attr(cx, did, \"mutable\") {\n-                    res += TC_MUTABLE;\n-                }\n-                if has_attr(cx, did, \"non_owned\") {\n-                    res += TC_NON_OWNED;\n-                }\n-                res\n+                apply_tc_attr(cx, did, res)\n             }\n \n             ty_param(p) => {\n@@ -2114,6 +2102,16 @@ pub fn type_contents(cx: ctxt, ty: t) -> TypeContents {\n         mc + tc_ty(cx, mt.ty, cache)\n     }\n \n+    fn apply_tc_attr(cx: ctxt, did: def_id, mut tc: TypeContents) -> TypeContents {\n+        if has_attr(cx, did, \"mutable\") {\n+            tc += TC_MUTABLE;\n+        }\n+        if has_attr(cx, did, \"non_owned\") {\n+            tc += TC_NON_OWNED;\n+        }\n+        tc\n+    }\n+\n     fn borrowed_contents(region: ty::Region,\n                          mutbl: ast::mutability) -> TypeContents\n     {"}]}