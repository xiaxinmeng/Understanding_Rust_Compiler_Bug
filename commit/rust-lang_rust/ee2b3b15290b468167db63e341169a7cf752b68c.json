{"sha": "ee2b3b15290b468167db63e341169a7cf752b68c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlMmIzYjE1MjkwYjQ2ODE2N2RiNjNlMzQxMTY5YTdjZjc1MmI2OGM=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-09-28T11:12:04Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-09-28T11:12:04Z"}, "message": "Put the opening brace of fn body on the next line if it exceeds max width", "tree": {"sha": "37cac1037dc5e24e32ec931d8c48b50655c430e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37cac1037dc5e24e32ec931d8c48b50655c430e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee2b3b15290b468167db63e341169a7cf752b68c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee2b3b15290b468167db63e341169a7cf752b68c", "html_url": "https://github.com/rust-lang/rust/commit/ee2b3b15290b468167db63e341169a7cf752b68c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee2b3b15290b468167db63e341169a7cf752b68c/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26fa7515e52d4434cd78d8d745f4de3a076b46fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/26fa7515e52d4434cd78d8d745f4de3a076b46fe", "html_url": "https://github.com/rust-lang/rust/commit/26fa7515e52d4434cd78d8d745f4de3a076b46fe"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "b054e1d1dd32cb73c98ae2c99a1e39edd0ac8cb1", "filename": "src/items.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ee2b3b15290b468167db63e341169a7cf752b68c/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee2b3b15290b468167db63e341169a7cf752b68c/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=ee2b3b15290b468167db63e341169a7cf752b68c", "patch": "@@ -250,11 +250,12 @@ impl<'a> FmtVisitor<'a> {\n             true,\n         ));\n \n-        if force_newline_brace {\n+        if self.config.fn_brace_style() == BraceStyle::AlwaysNextLine || force_newline_brace {\n             newline_brace = true;\n-        } else if self.config.fn_brace_style() != BraceStyle::AlwaysNextLine\n-            && !result.contains('\\n')\n-        {\n+        } else if last_line_width(&result) + 2 > self.shape().width {\n+            // 2 = ` {`\n+            newline_brace = true;\n+        } else if !result.contains('\\n') {\n             newline_brace = false;\n         }\n "}]}