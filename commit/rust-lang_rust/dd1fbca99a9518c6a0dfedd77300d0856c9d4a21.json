{"sha": "dd1fbca99a9518c6a0dfedd77300d0856c9d4a21", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkMWZiY2E5OWE5NTE4YzZhMGRmZWRkNzczMDBkMDg1NmM5ZDRhMjE=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-11-24T07:17:06Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-11-24T07:17:06Z"}, "message": "Replace various small width heuristics with a single option\n\nCloses #1984", "tree": {"sha": "e6b02243b9d87e393fa9352cb6d2a15d21f5deaa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6b02243b9d87e393fa9352cb6d2a15d21f5deaa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21", "html_url": "https://github.com/rust-lang/rust/commit/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96886cd67f1faa83bfb360c31c6614e1aea46bf7", "url": "https://api.github.com/repos/rust-lang/rust/commits/96886cd67f1faa83bfb360c31c6614e1aea46bf7", "html_url": "https://github.com/rust-lang/rust/commit/96886cd67f1faa83bfb360c31c6614e1aea46bf7"}], "stats": {"total": 1129, "additions": 214, "deletions": 915}, "files": [{"sha": "968b5a2d634950a228420b5c73abcc14827365c3", "filename": "Configurations.md", "status": "modified", "additions": 61, "deletions": 157, "changes": 218, "blob_url": "https://github.com/rust-lang/rust/blob/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=dd1fbca99a9518c6a0dfedd77300d0856c9d4a21", "patch": "@@ -6,49 +6,13 @@ A possible content of `rustfmt.toml` or `.rustfmt.toml` might look like this:\n \n ```toml\n indent_style = \"Block\"\n-array_width = 80\n reorder_imported_names = true\n ```\n \n # Configuration Options\n \n Below you find a detailed visual guide on all the supported configuration options of rustfmt:\n \n-## `array_horizontal_layout_threshold`\n-\n-How many elements array must have before rustfmt uses horizontal layout.  \n-Use this option to prevent a huge array from being vertically formatted.\n-\n-- **Default value**: `0`\n-- **Possible values**: any positive integer\n-\n-**Note:** A value of `0` results in [`indent_style`](#indent_style) being applied regardless of a line's width.\n-\n-#### `0` (default):\n-\n-```rust\n-// Each element will be placed on its own line.\n-let a = vec![\n-    0,\n-    1,\n-    2,\n-    3,\n-    4,\n-    ...\n-    999,\n-    1000,\n-];\n-```\n-\n-#### `1000`:\n-\n-```rust\n-// Each element will be placed on the same line as much as possible.\n-let a = vec![\n-    0, 1, 2, 3, 4, ...\n-    ..., 999, 1000,\n-];\n-```\n \n ## `indent_style`\n \n@@ -279,22 +243,6 @@ fn lorem<Ipsum, Dolor, Sit, Amet>() -> T\n \n See also: [`where_density`](#where_density), [`where_layout`](#where_layout).\n \n-## `array_width`\n-\n-Maximum width of an array literal before falling back to vertical formatting\n-\n-- **Default value**: `60`\n-- **Possible values**: any positive integer\n-\n-**Note:** A value of `0` results in [`indent_style`](#indent_style) being applied regardless of a line's width.\n-\n-#### Lines shorter than `array_width`:\n-```rust\n-let lorem = vec![\"ipsum\", \"dolor\", \"sit\", \"amet\", \"consectetur\", \"adipiscing\", \"elit\"];\n-```\n-\n-#### Lines longer than `array_width`:\n-See [`indent_style`](#indent_style).\n \n ## `same_line_attributes`\n \n@@ -341,6 +289,66 @@ enum Lorem {\n }\n ```\n \n+## `use_small_heuristics`\n+\n+Whether to use different formatting for items and expressions if they satisfy a heuristic notion of 'small'.\n+\n+- **Default value**: `true`\n+- **Possible values**: `true`, `false`\n+\n+#### `true` (default):\n+\n+```rust\n+enum Lorem {\n+    Ipsum,\n+    Dolor(bool),\n+    Sit { amet: Consectetur, adipiscing: Elit },\n+}\n+\n+fn main() {\n+    lorem(\n+        \"lorem\",\n+        \"ipsum\",\n+        \"dolor\",\n+        \"sit\",\n+        \"amet\",\n+        \"consectetur\",\n+        \"adipiscing\",\n+    );\n+\n+    let lorem = Lorem { ipsum: dolor, sit: amet };\n+\n+    let lorem = if ipsum { dolor } else { sit };\n+}\n+```\n+\n+#### `false`:\n+\n+```rust\n+enum Lorem {\n+    Ipsum,\n+    Dolor(bool),\n+    Sit {\n+        amet: Consectetur,\n+        adipiscing: Elit,\n+    },\n+}\n+\n+fn main() {\n+    lorem(\"lorem\", \"ipsum\", \"dolor\", \"sit\", \"amet\", \"consectetur\", \"adipiscing\");\n+\n+    let lorem = Lorem {\n+        ipsum: dolor,\n+        sit: amet,\n+    };\n+\n+    let lorem = if ipsum {\n+        dolor\n+    } else {\n+        sit\n+    };\n+}\n+```\n \n ## `binop_separator`\n \n@@ -409,22 +417,6 @@ let lorem = ipsum.dolor()\n                  .elit();\n ```\n \n-See also [`chain_width`](#chain_width).\n-\n-## `chain_width`\n-\n-Maximum length of a chain to fit on a single line\n-\n-- **Default value**: `60`\n-- **Possible values**: any positive integer\n-\n-#### Lines shorter than `chain_width`:\n-```rust\n-let lorem = ipsum.dolor().sit().amet().consectetur().adipiscing().elit();\n-```\n-\n-#### Lines longer than `chain_width`:\n-See [`chain_indent`](#chain_indent).\n \n \n ## `combine_control_expr`\n@@ -883,23 +875,7 @@ struct Dolor<T>\n }\n ```\n \n-## `fn_call_width`\n-\n-Maximum width of the args of a function call before falling back to vertical formatting\n-\n-- **Default value**: `60`\n-- **Possible values**: any positive integer\n-\n-**Note:** A value of `0` results in vertical formatting being applied regardless of a line's width.\n-\n-#### Function call shorter than `fn_call_width`:\n-```rust\n-lorem(\"lorem\", \"ipsum\", \"dolor\", \"sit\", \"amet\", \"consectetur\", \"adipiscing\", \"elit\");\n-```\n-\n-#### Function call longer than `fn_call_width`:\n \n-See [`indent_style`](#indent_style).\n \n ## `fn_empty_single_line`\n \n@@ -1533,30 +1509,6 @@ it contains a `#X` (with `X` being a number) in parentheses following the\n \n See also [`report_todo`](#report_todo).\n \n-## `single_line_if_else_max_width`\n-\n-Maximum line length for single line if-else expressions.\n-\n-- **Default value**: `50`\n-- **Possible values**: any positive integer\n-\n-**Note:** A value of `0` results in if-else expressions being broken regardless of their line's width.\n-\n-#### Lines shorter than `single_line_if_else_max_width`:\n-```rust\n-let lorem = if ipsum { dolor } else { sit };\n-```\n-\n-#### Lines longer than `single_line_if_else_max_width`:\n-```rust\n-let lorem = if ipsum {\n-    dolor\n-} else {\n-    sit\n-};\n-```\n-\n-See also: [`control_brace_style`](#control_brace_style).\n \n ## `skip_children`\n \n@@ -1768,56 +1720,8 @@ let lorem = Lorem {\n };\n ```\n \n-See also: [`indent_style`](#indent_style), [`struct_lit_width`](#struct_lit_width).\n-\n-## `struct_lit_width`\n-\n-Maximum width in the body of a struct lit before falling back to vertical formatting\n-\n-- **Default value**: `18`\n-- **Possible values**: any positive integer\n-\n-**Note:** A value of `0` results in vertical formatting being applied regardless of a line's width.\n-\n-#### Lines shorter than `struct_lit_width`:\n-```rust\n-let lorem = Lorem { ipsum: dolor, sit: amet };\n-```\n-\n-#### Lines longer than `struct_lit_width`:\n-See [`indent_style`](#indent_style).\n-\n-See also: [`struct_lit_single_line`](#struct_lit_single_line), [`indent_style`](#indent_style).\n-\n-## `struct_variant_width`\n-\n-Maximum width in the body of a struct variant before falling back to vertical formatting\n-\n-- **Default value**: `35`\n-- **Possible values**: any positive integer\n-\n-**Note:** A value of `0` results in vertical formatting being applied regardless of a line's width.\n-\n-#### Struct variants shorter than `struct_variant_width`:\n-```rust\n-enum Lorem {\n-    Ipsum,\n-    Dolor(bool),\n-    Sit { amet: Consectetur, adipiscing: Elit },\n-}\n-```\n+See also: [`indent_style`](#indent_style).\n \n-#### Struct variants longer than `struct_variant_width`:\n-```rust\n-enum Lorem {\n-    Ipsum,\n-    Dolor(bool),\n-    Sit {\n-        amet: Consectetur,\n-        adipiscing: Elit,\n-    },\n-}\n-```\n \n ## `tab_spaces`\n "}, {"sha": "1442f6b84a1f208b808a621c20aaf12a46eb3277", "filename": "src/chains.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=dd1fbca99a9518c6a0dfedd77300d0856c9d4a21", "patch": "@@ -161,7 +161,7 @@ pub fn rewrite_chain(expr: &ast::Expr, context: &RewriteContext, shape: Shape) -\n     let one_line_budget = if rewrites.is_empty() {\n         shape.width\n     } else {\n-        min(shape.width, context.config.chain_width())\n+        min(shape.width, context.config.width_heuristics().chain_width)\n     };\n     let all_in_one_line = !parent_rewrite_contains_newline\n         && rewrites.iter().all(|s| !s.contains('\\n'))"}, {"sha": "22c6cd6121d587a53ae1282a7178707575766cd9", "filename": "src/config.rs", "status": "modified", "additions": 98, "deletions": 23, "changes": 121, "blob_url": "https://github.com/rust-lang/rust/blob/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=dd1fbca99a9518c6a0dfedd77300d0856c9d4a21", "patch": "@@ -12,6 +12,7 @@ extern crate toml;\n \n use std::{env, fs};\n use std::cell::Cell;\n+use std::default::Default;\n use std::fs::File;\n use std::io::{Error, ErrorKind, Read};\n use std::path::{Path, PathBuf};\n@@ -132,6 +133,68 @@ configuration_option_enum! { Color:\n     Auto,\n }\n \n+#[derive(Deserialize, Serialize, Clone, Debug)]\n+pub struct WidthHeuristics {\n+    // Maximum width of the args of a function call before falling back\n+    // to vertical formatting.\n+    pub fn_call_width: usize,\n+    // Maximum width in the body of a struct lit before falling back to\n+    // vertical formatting.\n+    pub struct_lit_width: usize,\n+    // Maximum width in the body of a struct variant before falling back\n+    // to vertical formatting.\n+    pub struct_variant_width: usize,\n+    // Maximum width of an array literal before falling back to vertical\n+    // formatting.\n+    pub array_width: usize,\n+    // Maximum length of a chain to fit on a single line.\n+    pub chain_width: usize,\n+    // Maximum line length for single line if-else expressions. A value\n+    // of zero means always break if-else expressions.\n+    pub single_line_if_else_max_width: usize,\n+}\n+\n+impl WidthHeuristics {\n+    // Using this WidthHeuristics means we ignore heuristics.\n+    fn null() -> WidthHeuristics {\n+        WidthHeuristics {\n+            fn_call_width: usize::max_value(),\n+            struct_lit_width: 0,\n+            struct_variant_width: 0,\n+            array_width: usize::max_value(),\n+            chain_width: usize::max_value(),\n+            single_line_if_else_max_width: 0,\n+        }\n+    }\n+}\n+\n+impl Default for WidthHeuristics {\n+    fn default() -> WidthHeuristics {\n+        WidthHeuristics {\n+            fn_call_width: 60,\n+            struct_lit_width: 18,\n+            struct_variant_width: 35,\n+            array_width: 60,\n+            chain_width: 60,\n+            single_line_if_else_max_width: 50,\n+        }\n+    }\n+}\n+\n+impl ::std::str::FromStr for WidthHeuristics {\n+    type Err = &'static str;\n+\n+    fn from_str(_: &str) -> Result<Self, Self::Err> {\n+        Err(\"WidthHeuristics is not parsable\")\n+    }\n+}\n+\n+impl ::config::ConfigType for WidthHeuristics {\n+    fn doc_hint() -> String {\n+        String::new()\n+    }\n+}\n+\n /// Trait for types that can be used in `Config`.\n pub trait ConfigType: Sized {\n     /// Returns hint text for use in `Config::print_docs()`. For enum types, this is a\n@@ -216,9 +279,11 @@ macro_rules! create_config {\n \n         impl PartialConfig {\n             pub fn to_toml(&self) -> Result<String, String> {\n-                // file_lines can't be specified in TOML\n+                // Non-user-facing options can't be specified in TOML\n                 let mut cloned = self.clone();\n                 cloned.file_lines = None;\n+                cloned.verbose = None;\n+                cloned.width_heuristics = None;\n \n                 toml::to_string(&cloned)\n                     .map_err(|e| format!(\"Could not output config: {}\", e.to_string()))\n@@ -236,6 +301,9 @@ macro_rules! create_config {\n             $(\n             pub fn $i(&mut self, value: $ty) {\n                 (self.0).$i.2 = value;\n+                if stringify!($i) == \"use_small_heuristics\" {\n+                    self.0.set_heuristics();\n+                }\n             }\n             )+\n         }\n@@ -303,6 +371,7 @@ macro_rules! create_config {\n                     }\n                 }\n             )+\n+                self.set_heuristics();\n                 self\n             }\n \n@@ -374,6 +443,10 @@ macro_rules! create_config {\n                     )+\n                     _ => panic!(\"Unknown config key in override: {}\", key)\n                 }\n+\n+                if key == \"use_small_heuristics\" {\n+                    self.set_heuristics();\n+                }\n             }\n \n             /// Construct a `Config` from the toml file specified at `file_path`.\n@@ -461,6 +534,14 @@ macro_rules! create_config {\n                     println!();\n                 )+\n             }\n+\n+            fn set_heuristics(&mut self) {\n+                if self.use_small_heuristics.2 {\n+                    self.set().width_heuristics(WidthHeuristics::default());\n+                } else {\n+                    self.set().width_heuristics(WidthHeuristics::null());\n+                }\n+            }\n         }\n \n         // Template for the default configuration\n@@ -507,6 +588,8 @@ create_config! {\n     tab_spaces: usize, 4, true, \"Number of spaces per tab\";\n     newline_style: NewlineStyle, NewlineStyle::Unix, true, \"Unix or Windows line endings\";\n     indent_style: IndentStyle, IndentStyle::Block, false, \"How do we indent expressions or items.\";\n+    use_small_heuristics: bool, true, false, \"Whether to use different formatting for items and\\\n+        expressions if they satisfy a heuristic notion of 'small'.\";\n \n     // strings and comments\n     format_strings: bool, false, false, \"Format string literals where necessary\";\n@@ -515,22 +598,6 @@ create_config! {\n         \"Maximum length of comments. No effect unless wrap_comments = true\";\n     normalize_comments: bool, false, true, \"Convert /* */ comments to // comments where possible\";\n \n-    // Width heuristics\n-    fn_call_width: usize, 60, false,\n-        \"Maximum width of the args of a function call before falling back to vertical formatting\";\n-    struct_lit_width: usize, 18, false,\n-        \"Maximum width in the body of a struct lit before falling back to vertical formatting\";\n-    struct_variant_width: usize, 35, false,\n-        \"Maximum width in the body of a struct variant before falling back to vertical formatting\";\n-    array_width: usize, 60, false,\n-        \"Maximum width of an array literal before falling back to vertical formatting\";\n-    array_horizontal_layout_threshold: usize, 0, false,\n-        \"How many elements array must have before rustfmt uses horizontal layout.\";\n-    chain_width: usize, 60, false, \"Maximum length of a chain to fit on a single line\";\n-    single_line_if_else_max_width: usize, 50, false, \"Maximum line length for single line if-else \\\n-                                                expressions. A value of zero means always break \\\n-                                                if-else expressions.\";\n-\n     // Single line expressions and items.\n     struct_lit_single_line: bool, true, false,\n         \"Put small struct literals on a single line\";\n@@ -618,19 +685,23 @@ create_config! {\n         \"Require a specific version of rustfmt.\";\n     unstable_features: bool, false, true,\n             \"Enables unstable features. Only available on nightly channel\";\n-    verbose: bool, false, false, \"Use verbose output\";\n     disable_all_formatting: bool, false, false, \"Don't reformat anything\";\n     skip_children: bool, false, false, \"Don't reformat out of line modules\";\n-    file_lines: FileLines, FileLines::all(), false,\n-        \"Lines to format; this is not supported in rustfmt.toml, and can only be specified \\\n-         via the --file-lines option\";\n     error_on_line_overflow: bool, true, false, \"Error if unable to get all lines within max_width\";\n     error_on_line_overflow_comments: bool, true, false,\n         \"Error if unable to get comments within max_width\";\n     report_todo: ReportTactic, ReportTactic::Never, false,\n         \"Report all, none or unnumbered occurrences of TODO in source file comments\";\n     report_fixme: ReportTactic, ReportTactic::Never, false,\n         \"Report all, none or unnumbered occurrences of FIXME in source file comments\";\n+\n+    // Not user-facing.\n+    verbose: bool, false, false, \"Use verbose output\";\n+    file_lines: FileLines, FileLines::all(), false,\n+        \"Lines to format; this is not supported in rustfmt.toml, and can only be specified \\\n+         via the --file-lines option\";\n+    width_heuristics: WidthHeuristics, WidthHeuristics::default(), false,\n+        \"'small' heuristic values\";\n }\n \n #[cfg(test)]\n@@ -650,14 +721,18 @@ mod test {\n     fn test_config_used_to_toml() {\n         let config = Config::default();\n \n-        let verbose = config.verbose();\n+        let merge_derives = config.merge_derives();\n         let skip_children = config.skip_children();\n \n         let used_options = config.used_options();\n         let toml = used_options.to_toml().unwrap();\n         assert_eq!(\n             toml,\n-            format!(\"verbose = {}\\nskip_children = {}\\n\", verbose, skip_children)\n+            format!(\n+                \"merge_derives = {}\\nskip_children = {}\\n\",\n+                merge_derives,\n+                skip_children,\n+            )\n         );\n     }\n "}, {"sha": "fb71d5c054bd690505b78a1d13aa116ded4ef8f2", "filename": "src/expr.rs", "status": "modified", "additions": 21, "deletions": 13, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=dd1fbca99a9518c6a0dfedd77300d0856c9d4a21", "patch": "@@ -451,13 +451,14 @@ where\n         .iter()\n         .any(|li| li.item.as_ref().map(|s| s.len() > 10).unwrap_or(false));\n \n-    let mut tactic = match context.config.indent_style() {\n+    let tactic = match context.config.indent_style() {\n         IndentStyle::Block => {\n             // FIXME wrong shape in one-line case\n             match shape.width.checked_sub(2 * bracket_size) {\n                 Some(width) => {\n-                    let tactic =\n-                        ListTactic::LimitedHorizontalVertical(context.config.array_width());\n+                    let tactic = ListTactic::LimitedHorizontalVertical(\n+                        context.config.width_heuristics().array_width,\n+                    );\n                     definitive_tactic(&items, tactic, Separator::Comma, width)\n                 }\n                 None => DefinitiveListTactic::Vertical,\n@@ -466,7 +467,9 @@ where\n         IndentStyle::Visual => if has_long_item || items.iter().any(ListItem::is_multiline) {\n             definitive_tactic(\n                 &items,\n-                ListTactic::LimitedHorizontalVertical(context.config.array_width()),\n+                ListTactic::LimitedHorizontalVertical(\n+                    context.config.width_heuristics().array_width,\n+                ),\n                 Separator::Comma,\n                 nested_shape.width,\n             )\n@@ -475,11 +478,6 @@ where\n         },\n     };\n     let ends_with_newline = tactic.ends_with_newline(context.config.indent_style());\n-    if context.config.array_horizontal_layout_threshold() > 0\n-        && items.len() > context.config.array_horizontal_layout_threshold()\n-    {\n-        tactic = DefinitiveListTactic::Mixed;\n-    }\n \n     let fmt = ListFormatting {\n         tactic: tactic,\n@@ -957,11 +955,21 @@ impl<'a> ControlFlow<'a> {\n             && !last_line_extendable(&pat_expr_string);\n \n         // Try to format if-else on single line.\n-        if self.allow_single_line && context.config.single_line_if_else_max_width() > 0 {\n+        if self.allow_single_line\n+            && context\n+                .config\n+                .width_heuristics()\n+                .single_line_if_else_max_width > 0\n+        {\n             let trial = self.rewrite_single_line(&pat_expr_string, context, shape.width);\n \n             if let Some(cond_str) = trial {\n-                if cond_str.len() <= context.config.single_line_if_else_max_width() {\n+                if cond_str.len()\n+                    <= context\n+                        .config\n+                        .width_heuristics()\n+                        .single_line_if_else_max_width\n+                {\n                     return Some((cond_str, 0));\n                 }\n             }\n@@ -1795,7 +1803,7 @@ pub fn rewrite_call(\n         &ptr_vec_to_ref_vec(args),\n         span,\n         shape,\n-        context.config.fn_call_width(),\n+        context.config.width_heuristics().fn_call_width,\n         force_trailing_comma,\n     )\n }\n@@ -2521,7 +2529,7 @@ where\n             items,\n             span,\n             shape,\n-            context.config.fn_call_width(),\n+            context.config.width_heuristics().fn_call_width,\n             force_trailing_comma,\n         )\n     } else {"}, {"sha": "695ee71f0c3a77388f7b0d834b4a03b10ad4bbdd", "filename": "src/items.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=dd1fbca99a9518c6a0dfedd77300d0856c9d4a21", "patch": "@@ -502,7 +502,8 @@ impl<'a> FmtVisitor<'a> {\n                 false,\n             ).collect()\n         };\n-        let mut items: Vec<_> = itemize_list_with(self.config.struct_variant_width());\n+        let mut items: Vec<_> =\n+            itemize_list_with(self.config.width_heuristics().struct_variant_width);\n         // If one of the variants use multiple lines, use multi-lined formatting for all variants.\n         let has_multiline_variant = items.iter().any(|item| item.inner_as_ref().contains(\"\\n\"));\n         let has_single_line_variant = items.iter().any(|item| !item.inner_as_ref().contains(\"\\n\"));\n@@ -1324,7 +1325,7 @@ fn format_tuple_struct(\n     } else {\n         let shape = Shape::indented(offset, context.config);\n         let fields = &fields.iter().map(|field| field).collect::<Vec<_>>()[..];\n-        let one_line_width = context.config.fn_call_width();\n+        let one_line_width = context.config.width_heuristics().fn_call_width;\n         result = rewrite_call_inner(context, &result, fields, span, shape, one_line_width, false)?;\n     }\n "}, {"sha": "edc896e26c2218ad94c231308f78a7e376fa90af", "filename": "src/lists.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/src%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/src%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flists.rs?ref=dd1fbca99a9518c6a0dfedd77300d0856c9d4a21", "patch": "@@ -780,7 +780,7 @@ pub fn struct_lit_shape(\n     };\n     let shape_width = shape.width.checked_sub(prefix_width + suffix_width);\n     if let Some(w) = shape_width {\n-        let shape_width = cmp::min(w, context.config.struct_lit_width());\n+        let shape_width = cmp::min(w, context.config.width_heuristics().struct_lit_width);\n         Some((Some(Shape::legacy(shape_width, shape.indent)), v_shape))\n     } else {\n         Some((None, v_shape))"}, {"sha": "8c8b50b7ca39fef13dabb110c33373ecd6655e89", "filename": "src/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=dd1fbca99a9518c6a0dfedd77300d0856c9d4a21", "patch": "@@ -208,7 +208,7 @@ pub fn rewrite_macro(\n                 &arg_vec.iter().map(|e| &*e).collect::<Vec<_>>()[..],\n                 mac.span,\n                 shape,\n-                context.config.fn_call_width(),\n+                context.config.width_heuristics().fn_call_width,\n                 trailing_comma,\n             ).map(|rw| match position {\n                 MacroPosition::Item => format!(\"{};\", rw),"}, {"sha": "472df014435c373d8cfc1085ee4e2d763757dc54", "filename": "tests/config/small_tabs.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/tests%2Fconfig%2Fsmall_tabs.toml", "raw_url": "https://github.com/rust-lang/rust/raw/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/tests%2Fconfig%2Fsmall_tabs.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fconfig%2Fsmall_tabs.toml?ref=dd1fbca99a9518c6a0dfedd77300d0856c9d4a21", "patch": "@@ -11,5 +11,4 @@ indent_style = \"Block\"\n report_todo = \"Always\"\n report_fixme = \"Never\"\n reorder_imports = false\n-single_line_if_else_max_width = 0\n format_strings = true"}, {"sha": "2fd3622588131b07a50517de694aa588803443b0", "filename": "tests/source/chains-visual.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/tests%2Fsource%2Fchains-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/tests%2Fsource%2Fchains-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fchains-visual.rs?ref=dd1fbca99a9518c6a0dfedd77300d0856c9d4a21", "patch": "@@ -1,5 +1,4 @@\n // rustfmt-normalize_comments: true\n-// rustfmt-single_line_if_else_max_width: 0\n // rustfmt-indent_style: Visual\n // Test chain formatting.\n "}, {"sha": "f14a0293123c1c30f913286e4dfe6a12f473551e", "filename": "tests/source/chains.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/tests%2Fsource%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/tests%2Fsource%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fchains.rs?ref=dd1fbca99a9518c6a0dfedd77300d0856c9d4a21", "patch": "@@ -1,6 +1,5 @@\n // rustfmt-normalize_comments: true\n-// rustfmt-single_line_if_else_max_width: 0\n-// rustfmt-chain_width: 100\n+// rustfmt-use_small_heuristics: false\n // Test chain formatting.\n \n fn main() {"}, {"sha": "3036f3598ef28e50bc37eb73b97c7c7418e48fa7", "filename": "tests/source/configs-array_horizontal_layout_threshold-1000-visual.rs", "status": "removed", "additions": 0, "deletions": 108, "changes": 108, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fconfigs-array_horizontal_layout_threshold-1000-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fconfigs-array_horizontal_layout_threshold-1000-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-array_horizontal_layout_threshold-1000-visual.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,108 +0,0 @@\n-// rustfmt-array_horizontal_layout_threshold: 1000\n-// rustfmt-indent_style: Visual\n-\n-const ARRAY: [u8; 2048] =\n-    [99, 72, 48, 104, 44, 112, 38, 62, 40, 93, 23, 24, 32, 21, 102, 76, 65, 29, 116,\n-     21, 18, 37, 61, 10, 108, 31, 85, 93, 2, 108, 103, 77, 109, 40, 92, 88, 114, 32, 31,\n-     87, 69, 42, 38, 25, 105, 6, 61, 128, 45, 6, 43, 81, 7, 3, 1, 125, 24, 123, 2,\n-     29, 111, 120, 26, 0, 78, 36, 115, 86, 66, 10, 52, 87, 27, 125, 122, 42, 126, 101,\n-     70, 78, 90, 62, 72, 43, 3, 111, 8, 110, 11, 124, 124, 102, 74, 35, 9, 83, 22, 121,\n-     34, 70, 69, 52, 31, 92, 94, 67, 21, 76, 65, 10, 79, 54, 17, 58, 105, 13, 96, 61, 99,\n-     31, 87, 41, 78, 88, 120, 35, 95, 25, 80, 100, 45, 79, 49, 56, 5, 114, 11, 25, 16, 97,\n-     2, 43, 17, 71, 63, 102, 81, 55, 14, 59, 102, 55, 101, 119, 29, 58, 103, 2, 88,\n-     85, 9, 70, 91, 73, 37, 70, 123, 15, 68, 50, 76, 52, 46, 126, 87, 44, 85, 3, 97,\n-     59, 39, 37, 79, 110, 25, 109, 90, 124, 109, 6, 47, 60, 79, 15, 40, 3, 40, 20, 98,\n-     9, 21, 65, 119, 2, 20, 64, 56, 34, 116, 22, 125, 113, 57, 30, 21, 92, 76, 10, 107,\n-     61, 8, 124, 110, 87, 64, 99, 26, 122, 56, 127, 94, 8, 121, 19, 24, 27, 61, 34,\n-     44, 73, 82, 10, 49, 95, 72, 89, 27, 124, 75, 33, 64, 48, 73, 21, 101, 34, 47,\n-     103, 114, 11, 31, 11, 93, 31, 54, 102, 117, 38, 31, 33, 84, 72, 128, 91, 3, 84, 92,\n-     48, 69, 39, 97, 113, 70, 26, 96, 107, 117, 76, 59, 50, 43, 66, 21, 90, 31, 102, 45,\n-     66, 5, 115, 63, 61, 83, 37, 16, 78, 22, 120, 52, 24, 25, 70, 71, 54, 11, 103, 45,\n-     44, 101, 106, 53, 39, 116, 83, 4, 68, 12, 59, 3, 37, 112, 123, 7, 120, 127, 93,\n-     34, 101, 48, 114, 127, 65, 69, 16, 79, 125, 18, 71, 69, 72, 54, 60, 107, 52, 18,\n-     92, 105, 119, 17, 32, 23, 37, 8, 127, 99, 71, 54, 80, 109, 54, 51, 44, 20, 40,\n-     52, 46, 81, 28, 46, 82, 39, 39, 70, 3, 90, 41, 40, 36, 127, 48, 124, 26, 115,\n-     47, 93, 104, 4, 70, 88, 3, 4, 34, 75, 46, 16, 65, 114, 53, 51, 123, 16, 36, 98,\n-     36, 37, 36, 80, 71, 3, 116, 89, 52, 74, 7, 116, 39, 48, 51, 54, 56, 105, 90, 50, 67,\n-     111, 111, 7, 55, 87, 30, 15, 75, 50, 23, 9, 115, 2, 27, 45, 75, 29, 15, 15, 47, 33,\n-     119, 85, 11, 116, 127, 53, 37, 3, 0, 116, 77, 4, 37, 56, 8, 92, 105, 86, 101,\n-     79, 103, 98, 70, 122, 110, 38, 50, 52, 51, 62, 98, 95, 49, 21, 116, 30, 61, 1,\n-     36, 96, 33, 78, 75, 23, 118, 88, 10, 4, 91, 38, 32, 96, 64, 71, 89, 108, 10, 106,\n-     62, 86, 104, 24, 117, 2, 72, 99, 60, 117, 109, 67, 112, 124, 111, 102, 4, 126, 95,\n-     23, 68, 115, 106, 15, 103, 101, 19, 30, 7, 29, 109, 62, 93, 22, 30, 106, 7, 52, 77,\n-     88, 8, 32, 3, 63, 77, 14, 86, 82, 114, 104, 119, 122, 40, 92, 3, 98, 128, 53,\n-     74, 40, 1, 94, 5, 112, 59, 29, 128, 119, 33, 67, 42, 109, 30, 93, 40, 113, 13, 85,\n-     17, 51, 63, 57, 4, 2, 102, 93, 25, 61, 39, 110, 56, 21, 102, 25, 4, 113, 84, 63,\n-     64, 63, 73, 83, 39, 123, 113, 68, 83, 95, 7, 23, 18, 73, 52, 16, 41, 81, 38, 55, 82,\n-     59, 93, 6, 30, 25, 65, 67, 44, 99, 18, 77, 74, 62, 126, 36, 110, 66, 4, 86, 123,\n-     21, 109, 46, 93, 112, 107, 35, 14, 127, 112, 54, 65, 0, 59, 76, 47, 94, 6, 94, 86,\n-     49, 118, 44, 10, 15, 5, 105, 12, 28, 5, 94, 56, 31, 79, 86, 116, 18, 32, 69, 1,\n-     83, 36, 38, 71, 38, 71, 23, 71, 9, 30, 64, 2, 6, 21, 112, 55, 1, 43, 126, 33, 79, 97,\n-     49, 86, 7, 84, 40, 42, 25, 35, 51, 118, 56, 115, 104, 103, 20, 103, 95, 92, 43,\n-     50, 42, 34, 122, 116, 75, 31, 109, 53, 44, 6, 48, 1, 52, 119, 123, 32, 50, 63,\n-     114, 105, 16, 79, 53, 19, 78, 86, 110, 4, 43, 97, 3, 18, 110, 84, 70, 23, 84, 23,\n-     48, 125, 36, 58, 25, 90, 111, 103, 83, 38, 112, 127, 28, 53, 86, 67, 78, 126, 86,\n-     8, 41, 76, 10, 54, 11, 22, 3, 12, 2, 50, 91, 82, 90, 42, 108, 29, 72, 86, 34, 91,\n-     115, 46, 86, 28, 46, 22, 97, 104, 48, 8, 22, 92, 10, 71, 102, 52, 116, 65, 15, 102,\n-     8, 113, 53, 110, 49, 81, 102, 48, 91, 32, 18, 67, 49, 124, 35, 83, 37, 16, 31, 8,\n-     58, 48, 77, 104, 71, 60, 40, 44, 74, 2, 40, 12, 22, 23, 49, 17, 98, 21, 83, 117, 64,\n-     115, 44, 4, 46, 70, 47, 115, 24, 66, 71, 80, 59, 32, 46, 81, 118, 8, 29, 93, 86, 81,\n-     20, 44, 46, 4, 116, 107, 117, 11, 30, 78, 13, 61, 110, 45, 101, 113, 34, 102, 19, 64,\n-     10, 36, 68, 94, 40, 87, 74, 105, 81, 70, 58, 44, 46, 108, 90, 60, 32, 36, 23, 115,\n-     40, 97, 43, 58, 16, 120, 74, 52, 42, 49, 16, 62, 122, 97, 107, 15, 104, 13, 17,\n-     103, 49, 112, 123, 23, 107, 49, 40, 101, 62, 9, 71, 92, 70, 57, 37, 42, 21, 83, 2,\n-     20, 116, 22, 8, 34, 61, 56, 65, 115, 121, 116, 67, 111, 52, 80, 94, 46, 18, 68, 72,\n-     3, 61, 96, 127, 46, 7, 90, 100, 31, 30, 80, 123, 72, 74, 115, 74, 81, 45, 79, 121,\n-     57, 85, 117, 5, 88, 101, 97, 10, 12, 43, 57, 107, 83, 25, 12, 117, 103, 72, 115, 29,\n-     58, 101, 103, 120, 115, 74, 125, 127, 70, 7, 24, 92, 15, 103, 58, 83, 54, 75, 30, 9,\n-     111, 68, 53, 29, 25, 19, 96, 38, 93, 123, 126, 63, 115, 92, 119, 76, 50, 7, 9,\n-     101, 68, 26, 122, 5, 77, 4, 116, 89, 81, 21, 8, 111, 5, 33, 66, 121, 20, 106, 42,\n-     54, 69, 34, 22, 21, 54, 78, 46, 76, 64, 47, 44, 38, 84, 19, 73, 18, 92, 74, 63,\n-     65, 40, 34, 12, 6, 127, 32, 90, 62, 47, 42, 72, 121, 128, 44, 77, 121, 23, 105, 95,\n-     43, 67, 63, 103, 22, 17, 45, 118, 28, 29, 17, 45, 85, 40, 3, 114, 36, 23, 109, 118,\n-     76, 16, 90, 111, 11, 98, 51, 127, 12, 68, 53, 116, 81, 47, 126, 118, 105, 10, 59, 12,\n-     101, 72, 114, 34, 19, 82, 68, 115, 12, 119, 123, 66, 21, 32, 106, 110, 49, 50, 20,\n-     3, 39, 119, 36, 53, 5, 13, 61, 70, 30, 57, 74, 61, 125, 39, 73, 9, 67, 79, 85,\n-     95, 74, 67, 61, 5, 30, 76, 39, 86, 32, 71, 108, 6, 49, 117, 60, 63, 57, 54, 107,\n-     126, 104, 57, 59, 120, 68, 6, 108, 81, 113, 126, 64, 36, 60, 123, 117, 13, 68, 8,\n-     116, 114, 119, 125, 61, 81, 98, 34, 53, 62, 11, 31, 117, 44, 54, 115, 30, 73, 69, 54,\n-     92, 70, 49, 59, 51, 104, 103, 62, 96, 121, 98, 26, 45, 77, 24, 124, 28, 70, 100,\n-     2, 98, 47, 25, 100, 37, 42, 115, 105, 42, 127, 65, 24, 102, 122, 33, 79, 87, 22, 47,\n-     35, 50, 59, 54, 68, 16, 36, 91, 127, 39, 16, 113, 68, 20, 76, 99, 93, 121, 18,\n-     23, 6, 32, 108, 8, 114, 65, 81, 106, 39, 91, 54, 8, 92, 6, 96, 12, 100, 33, 5,\n-     105, 50, 89, 70, 33, 40, 85, 39, 93, 119, 26, 97, 90, 18, 74, 11, 105, 114, 84,\n-     125, 124, 113, 86, 124, 90, 90, 87, 64, 83, 121, 39, 108, 66, 23, 55, 43, 31,\n-     110, 96, 42, 4, 64, 41, 110, 97, 24, 95, 121, 125, 118, 85, 97, 110, 115, 75, 74, 60,\n-     115, 47, 80, 55, 67, 92, 127, 120, 8, 42, 5, 50, 55, 35, 117, 60, 106, 127, 77, 58,\n-     81, 76, 66, 17, 108, 55, 17, 50, 31, 64, 102, 88, 5, 32, 12, 37, 120, 48, 46, 43, 99,\n-     12, 16, 114, 50, 49, 12, 3, 63, 64, 27, 54, 53, 31, 73, 2, 15, 39, 102, 12, 60, 100,\n-     27, 28, 24, 46, 101, 10, 104, 51, 127, 101, 60, 55, 114, 25, 3, 29, 20, 53, 108, 7,\n-     71, 4, 102, 14, 44, 72, 10, 56, 92, 86, 96, 56, 80, 20, 117, 65, 53, 58, 66, 5,\n-     103, 88, 17, 10, 34, 63, 83, 84, 43, 70, 41, 8, 111, 117, 31, 80, 29, 12, 115, 75,\n-     84, 91, 91, 10, 91, 26, 40, 30, 36, 44, 12, 18, 83, 29, 19, 15, 123, 98, 118, 26,\n-     19, 36, 35, 122, 29, 41, 23, 40, 74, 25, 70, 78, 24, 75, 109, 31, 0, 89, 45,\n-     128, 35, 120, 79, 108, 89, 84, 84, 81, 108, 47, 2, 112, 2, 42, 126, 12, 15, 15,\n-     109, 109, 97, 76, 126, 5, 23, 66, 65, 1, 39, 102, 121, 127, 24, 21, 68, 42, 49, 69,\n-     81, 111, 6, 11, 28, 5, 89, 31, 74, 33, 118, 15, 55, 105, 107, 30, 103, 54, 25,\n-     29, 60, 91, 72, 94, 15, 31, 98, 47, 16, 27, 100, 109, 99, 82, 53, 25, 122, 119,\n-     96, 65, 4, 24, 50, 79, 40, 65, 6, 91, 125, 7, 80, 103, 88, 22, 107, 38, 39, 100,\n-     102, 96, 1, 66, 44, 33, 101, 88, 61, 10, 35, 39, 47, 93, 63, 19, 59, 87, 128, 16, 46,\n-     51, 34, 34, 71, 117, 113, 66, 89, 126, 127, 35, 125, 11, 81, 120, 100, 41, 51,\n-     85, 30, 82, 68, 86, 114, 77, 56, 125, 10, 2, 95, 75, 31, 33, 84, 83, 22, 35, 99,\n-     12, 18, 40, 4, 88, 104, 46, 100, 99, 113, 45, 36, 51, 88, 53, 57, 15, 82, 60, 101, 10,\n-     16, 83, 23, 78, 47, 34, 27, 56, 85, 14, 14, 53, 20, 71, 101, 82, 14, 35, 3, 51,\n-     91, 16, 46, 117, 108, 30, 120, 124, 22, 89, 57, 119, 50, 91, 52, 77, 7, 10, 79,\n-     5, 21, 81, 43, 58, 61, 59, 39, 60, 122, 23, 68, 21, 19, 81, 3, 31, 64, 54, 126, 56,\n-     23, 64, 28, 32, 2, 119, 2, 55, 125, 57, 7, 51, 116, 93, 34, 15, 96, 120, 6, 73,\n-     100, 98, 53, 116, 22, 64, 63, 112, 19, 60, 77, 95, 32, 3, 2, 117, 41, 80, 96, 122,\n-     15, 45, 118, 102, 26, 89, 74, 2, 17, 63, 21, 52, 23, 82, 97, 22, 68, 39, 119,\n-     117, 128, 49, 71, 55, 38, 55, 87, 3, 76, 80, 13, 57, 47, 59, 91, 46, 124, 115,\n-     7, 74, 95, 26, 128, 86, 16, 20, 107, 117, 10, 72, 35, 30, 128, 75, 113, 45, 116,\n-     125, 1, 46, 98, 14, 34, 29, 100, 17, 122, 65, 35, 69, 72, 12, 6, 5, 65, 29, 112,\n-     47, 21, 103, 63, 118, 75, 21, 99, 6, 36, 46, 86, 59, 9, 117, 23, 82, 75, 13, 4, 9,\n-     104, 43, 73, 17, 111, 36, 60, 38, 120, 99, 114, 117, 110, 27, 100, 104, 63, 87, 53,\n-     54, 71, 38, 58, 86, 124, 3, 103, 92, 79, 127, 97, 17, 103, 13, 25, 65, 12, 28, 89,\n-     62, 48, 115, 30, 19, 80, 14, 7, 21, 124, 91, 104, 110, 97, 97, 0, 104, 124, 93, 24,\n-     70, 13, 99, 91, 73, 55, 84, 25, 22, 111, 115, 58, 45, 97, 8, 39, 125, 9, 22, 91,\n-     98, 19, 14, 54, 26, 33, 46, 61, 98, 122, 69, 72, 97, 71, 73, 106, 32, 105, 27, 0, 56,\n-     66, 51, 4, 94, 72, 117, 69];"}, {"sha": "c1fb8e9287295cdc755b59fee535ccc8f8bf4269", "filename": "tests/source/configs-array_horizontal_layout_threshold-1000.rs", "status": "removed", "additions": 0, "deletions": 107, "changes": 107, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fconfigs-array_horizontal_layout_threshold-1000.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fconfigs-array_horizontal_layout_threshold-1000.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-array_horizontal_layout_threshold-1000.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,107 +0,0 @@\n-// rustfmt-array_horizontal_layout_threshold: 1000\n-\n-const ARRAY: [u8; 2048] =\n-    [99, 72, 48, 104, 44, 112, 38, 62, 40, 93, 23, 24, 32, 21, 102, 76, 65, 29, 116,\n-     21, 18, 37, 61, 10, 108, 31, 85, 93, 2, 108, 103, 77, 109, 40, 92, 88, 114, 32, 31,\n-     87, 69, 42, 38, 25, 105, 6, 61, 128, 45, 6, 43, 81, 7, 3, 1, 125, 24, 123, 2,\n-     29, 111, 120, 26, 0, 78, 36, 115, 86, 66, 10, 52, 87, 27, 125, 122, 42, 126, 101,\n-     70, 78, 90, 62, 72, 43, 3, 111, 8, 110, 11, 124, 124, 102, 74, 35, 9, 83, 22, 121,\n-     34, 70, 69, 52, 31, 92, 94, 67, 21, 76, 65, 10, 79, 54, 17, 58, 105, 13, 96, 61, 99,\n-     31, 87, 41, 78, 88, 120, 35, 95, 25, 80, 100, 45, 79, 49, 56, 5, 114, 11, 25, 16, 97,\n-     2, 43, 17, 71, 63, 102, 81, 55, 14, 59, 102, 55, 101, 119, 29, 58, 103, 2, 88,\n-     85, 9, 70, 91, 73, 37, 70, 123, 15, 68, 50, 76, 52, 46, 126, 87, 44, 85, 3, 97,\n-     59, 39, 37, 79, 110, 25, 109, 90, 124, 109, 6, 47, 60, 79, 15, 40, 3, 40, 20, 98,\n-     9, 21, 65, 119, 2, 20, 64, 56, 34, 116, 22, 125, 113, 57, 30, 21, 92, 76, 10, 107,\n-     61, 8, 124, 110, 87, 64, 99, 26, 122, 56, 127, 94, 8, 121, 19, 24, 27, 61, 34,\n-     44, 73, 82, 10, 49, 95, 72, 89, 27, 124, 75, 33, 64, 48, 73, 21, 101, 34, 47,\n-     103, 114, 11, 31, 11, 93, 31, 54, 102, 117, 38, 31, 33, 84, 72, 128, 91, 3, 84, 92,\n-     48, 69, 39, 97, 113, 70, 26, 96, 107, 117, 76, 59, 50, 43, 66, 21, 90, 31, 102, 45,\n-     66, 5, 115, 63, 61, 83, 37, 16, 78, 22, 120, 52, 24, 25, 70, 71, 54, 11, 103, 45,\n-     44, 101, 106, 53, 39, 116, 83, 4, 68, 12, 59, 3, 37, 112, 123, 7, 120, 127, 93,\n-     34, 101, 48, 114, 127, 65, 69, 16, 79, 125, 18, 71, 69, 72, 54, 60, 107, 52, 18,\n-     92, 105, 119, 17, 32, 23, 37, 8, 127, 99, 71, 54, 80, 109, 54, 51, 44, 20, 40,\n-     52, 46, 81, 28, 46, 82, 39, 39, 70, 3, 90, 41, 40, 36, 127, 48, 124, 26, 115,\n-     47, 93, 104, 4, 70, 88, 3, 4, 34, 75, 46, 16, 65, 114, 53, 51, 123, 16, 36, 98,\n-     36, 37, 36, 80, 71, 3, 116, 89, 52, 74, 7, 116, 39, 48, 51, 54, 56, 105, 90, 50, 67,\n-     111, 111, 7, 55, 87, 30, 15, 75, 50, 23, 9, 115, 2, 27, 45, 75, 29, 15, 15, 47, 33,\n-     119, 85, 11, 116, 127, 53, 37, 3, 0, 116, 77, 4, 37, 56, 8, 92, 105, 86, 101,\n-     79, 103, 98, 70, 122, 110, 38, 50, 52, 51, 62, 98, 95, 49, 21, 116, 30, 61, 1,\n-     36, 96, 33, 78, 75, 23, 118, 88, 10, 4, 91, 38, 32, 96, 64, 71, 89, 108, 10, 106,\n-     62, 86, 104, 24, 117, 2, 72, 99, 60, 117, 109, 67, 112, 124, 111, 102, 4, 126, 95,\n-     23, 68, 115, 106, 15, 103, 101, 19, 30, 7, 29, 109, 62, 93, 22, 30, 106, 7, 52, 77,\n-     88, 8, 32, 3, 63, 77, 14, 86, 82, 114, 104, 119, 122, 40, 92, 3, 98, 128, 53,\n-     74, 40, 1, 94, 5, 112, 59, 29, 128, 119, 33, 67, 42, 109, 30, 93, 40, 113, 13, 85,\n-     17, 51, 63, 57, 4, 2, 102, 93, 25, 61, 39, 110, 56, 21, 102, 25, 4, 113, 84, 63,\n-     64, 63, 73, 83, 39, 123, 113, 68, 83, 95, 7, 23, 18, 73, 52, 16, 41, 81, 38, 55, 82,\n-     59, 93, 6, 30, 25, 65, 67, 44, 99, 18, 77, 74, 62, 126, 36, 110, 66, 4, 86, 123,\n-     21, 109, 46, 93, 112, 107, 35, 14, 127, 112, 54, 65, 0, 59, 76, 47, 94, 6, 94, 86,\n-     49, 118, 44, 10, 15, 5, 105, 12, 28, 5, 94, 56, 31, 79, 86, 116, 18, 32, 69, 1,\n-     83, 36, 38, 71, 38, 71, 23, 71, 9, 30, 64, 2, 6, 21, 112, 55, 1, 43, 126, 33, 79, 97,\n-     49, 86, 7, 84, 40, 42, 25, 35, 51, 118, 56, 115, 104, 103, 20, 103, 95, 92, 43,\n-     50, 42, 34, 122, 116, 75, 31, 109, 53, 44, 6, 48, 1, 52, 119, 123, 32, 50, 63,\n-     114, 105, 16, 79, 53, 19, 78, 86, 110, 4, 43, 97, 3, 18, 110, 84, 70, 23, 84, 23,\n-     48, 125, 36, 58, 25, 90, 111, 103, 83, 38, 112, 127, 28, 53, 86, 67, 78, 126, 86,\n-     8, 41, 76, 10, 54, 11, 22, 3, 12, 2, 50, 91, 82, 90, 42, 108, 29, 72, 86, 34, 91,\n-     115, 46, 86, 28, 46, 22, 97, 104, 48, 8, 22, 92, 10, 71, 102, 52, 116, 65, 15, 102,\n-     8, 113, 53, 110, 49, 81, 102, 48, 91, 32, 18, 67, 49, 124, 35, 83, 37, 16, 31, 8,\n-     58, 48, 77, 104, 71, 60, 40, 44, 74, 2, 40, 12, 22, 23, 49, 17, 98, 21, 83, 117, 64,\n-     115, 44, 4, 46, 70, 47, 115, 24, 66, 71, 80, 59, 32, 46, 81, 118, 8, 29, 93, 86, 81,\n-     20, 44, 46, 4, 116, 107, 117, 11, 30, 78, 13, 61, 110, 45, 101, 113, 34, 102, 19, 64,\n-     10, 36, 68, 94, 40, 87, 74, 105, 81, 70, 58, 44, 46, 108, 90, 60, 32, 36, 23, 115,\n-     40, 97, 43, 58, 16, 120, 74, 52, 42, 49, 16, 62, 122, 97, 107, 15, 104, 13, 17,\n-     103, 49, 112, 123, 23, 107, 49, 40, 101, 62, 9, 71, 92, 70, 57, 37, 42, 21, 83, 2,\n-     20, 116, 22, 8, 34, 61, 56, 65, 115, 121, 116, 67, 111, 52, 80, 94, 46, 18, 68, 72,\n-     3, 61, 96, 127, 46, 7, 90, 100, 31, 30, 80, 123, 72, 74, 115, 74, 81, 45, 79, 121,\n-     57, 85, 117, 5, 88, 101, 97, 10, 12, 43, 57, 107, 83, 25, 12, 117, 103, 72, 115, 29,\n-     58, 101, 103, 120, 115, 74, 125, 127, 70, 7, 24, 92, 15, 103, 58, 83, 54, 75, 30, 9,\n-     111, 68, 53, 29, 25, 19, 96, 38, 93, 123, 126, 63, 115, 92, 119, 76, 50, 7, 9,\n-     101, 68, 26, 122, 5, 77, 4, 116, 89, 81, 21, 8, 111, 5, 33, 66, 121, 20, 106, 42,\n-     54, 69, 34, 22, 21, 54, 78, 46, 76, 64, 47, 44, 38, 84, 19, 73, 18, 92, 74, 63,\n-     65, 40, 34, 12, 6, 127, 32, 90, 62, 47, 42, 72, 121, 128, 44, 77, 121, 23, 105, 95,\n-     43, 67, 63, 103, 22, 17, 45, 118, 28, 29, 17, 45, 85, 40, 3, 114, 36, 23, 109, 118,\n-     76, 16, 90, 111, 11, 98, 51, 127, 12, 68, 53, 116, 81, 47, 126, 118, 105, 10, 59, 12,\n-     101, 72, 114, 34, 19, 82, 68, 115, 12, 119, 123, 66, 21, 32, 106, 110, 49, 50, 20,\n-     3, 39, 119, 36, 53, 5, 13, 61, 70, 30, 57, 74, 61, 125, 39, 73, 9, 67, 79, 85,\n-     95, 74, 67, 61, 5, 30, 76, 39, 86, 32, 71, 108, 6, 49, 117, 60, 63, 57, 54, 107,\n-     126, 104, 57, 59, 120, 68, 6, 108, 81, 113, 126, 64, 36, 60, 123, 117, 13, 68, 8,\n-     116, 114, 119, 125, 61, 81, 98, 34, 53, 62, 11, 31, 117, 44, 54, 115, 30, 73, 69, 54,\n-     92, 70, 49, 59, 51, 104, 103, 62, 96, 121, 98, 26, 45, 77, 24, 124, 28, 70, 100,\n-     2, 98, 47, 25, 100, 37, 42, 115, 105, 42, 127, 65, 24, 102, 122, 33, 79, 87, 22, 47,\n-     35, 50, 59, 54, 68, 16, 36, 91, 127, 39, 16, 113, 68, 20, 76, 99, 93, 121, 18,\n-     23, 6, 32, 108, 8, 114, 65, 81, 106, 39, 91, 54, 8, 92, 6, 96, 12, 100, 33, 5,\n-     105, 50, 89, 70, 33, 40, 85, 39, 93, 119, 26, 97, 90, 18, 74, 11, 105, 114, 84,\n-     125, 124, 113, 86, 124, 90, 90, 87, 64, 83, 121, 39, 108, 66, 23, 55, 43, 31,\n-     110, 96, 42, 4, 64, 41, 110, 97, 24, 95, 121, 125, 118, 85, 97, 110, 115, 75, 74, 60,\n-     115, 47, 80, 55, 67, 92, 127, 120, 8, 42, 5, 50, 55, 35, 117, 60, 106, 127, 77, 58,\n-     81, 76, 66, 17, 108, 55, 17, 50, 31, 64, 102, 88, 5, 32, 12, 37, 120, 48, 46, 43, 99,\n-     12, 16, 114, 50, 49, 12, 3, 63, 64, 27, 54, 53, 31, 73, 2, 15, 39, 102, 12, 60, 100,\n-     27, 28, 24, 46, 101, 10, 104, 51, 127, 101, 60, 55, 114, 25, 3, 29, 20, 53, 108, 7,\n-     71, 4, 102, 14, 44, 72, 10, 56, 92, 86, 96, 56, 80, 20, 117, 65, 53, 58, 66, 5,\n-     103, 88, 17, 10, 34, 63, 83, 84, 43, 70, 41, 8, 111, 117, 31, 80, 29, 12, 115, 75,\n-     84, 91, 91, 10, 91, 26, 40, 30, 36, 44, 12, 18, 83, 29, 19, 15, 123, 98, 118, 26,\n-     19, 36, 35, 122, 29, 41, 23, 40, 74, 25, 70, 78, 24, 75, 109, 31, 0, 89, 45,\n-     128, 35, 120, 79, 108, 89, 84, 84, 81, 108, 47, 2, 112, 2, 42, 126, 12, 15, 15,\n-     109, 109, 97, 76, 126, 5, 23, 66, 65, 1, 39, 102, 121, 127, 24, 21, 68, 42, 49, 69,\n-     81, 111, 6, 11, 28, 5, 89, 31, 74, 33, 118, 15, 55, 105, 107, 30, 103, 54, 25,\n-     29, 60, 91, 72, 94, 15, 31, 98, 47, 16, 27, 100, 109, 99, 82, 53, 25, 122, 119,\n-     96, 65, 4, 24, 50, 79, 40, 65, 6, 91, 125, 7, 80, 103, 88, 22, 107, 38, 39, 100,\n-     102, 96, 1, 66, 44, 33, 101, 88, 61, 10, 35, 39, 47, 93, 63, 19, 59, 87, 128, 16, 46,\n-     51, 34, 34, 71, 117, 113, 66, 89, 126, 127, 35, 125, 11, 81, 120, 100, 41, 51,\n-     85, 30, 82, 68, 86, 114, 77, 56, 125, 10, 2, 95, 75, 31, 33, 84, 83, 22, 35, 99,\n-     12, 18, 40, 4, 88, 104, 46, 100, 99, 113, 45, 36, 51, 88, 53, 57, 15, 82, 60, 101, 10,\n-     16, 83, 23, 78, 47, 34, 27, 56, 85, 14, 14, 53, 20, 71, 101, 82, 14, 35, 3, 51,\n-     91, 16, 46, 117, 108, 30, 120, 124, 22, 89, 57, 119, 50, 91, 52, 77, 7, 10, 79,\n-     5, 21, 81, 43, 58, 61, 59, 39, 60, 122, 23, 68, 21, 19, 81, 3, 31, 64, 54, 126, 56,\n-     23, 64, 28, 32, 2, 119, 2, 55, 125, 57, 7, 51, 116, 93, 34, 15, 96, 120, 6, 73,\n-     100, 98, 53, 116, 22, 64, 63, 112, 19, 60, 77, 95, 32, 3, 2, 117, 41, 80, 96, 122,\n-     15, 45, 118, 102, 26, 89, 74, 2, 17, 63, 21, 52, 23, 82, 97, 22, 68, 39, 119,\n-     117, 128, 49, 71, 55, 38, 55, 87, 3, 76, 80, 13, 57, 47, 59, 91, 46, 124, 115,\n-     7, 74, 95, 26, 128, 86, 16, 20, 107, 117, 10, 72, 35, 30, 128, 75, 113, 45, 116,\n-     125, 1, 46, 98, 14, 34, 29, 100, 17, 122, 65, 35, 69, 72, 12, 6, 5, 65, 29, 112,\n-     47, 21, 103, 63, 118, 75, 21, 99, 6, 36, 46, 86, 59, 9, 117, 23, 82, 75, 13, 4, 9,\n-     104, 43, 73, 17, 111, 36, 60, 38, 120, 99, 114, 117, 110, 27, 100, 104, 63, 87, 53,\n-     54, 71, 38, 58, 86, 124, 3, 103, 92, 79, 127, 97, 17, 103, 13, 25, 65, 12, 28, 89,\n-     62, 48, 115, 30, 19, 80, 14, 7, 21, 124, 91, 104, 110, 97, 97, 0, 104, 124, 93, 24,\n-     70, 13, 99, 91, 73, 55, 84, 25, 22, 111, 115, 58, 45, 97, 8, 39, 125, 9, 22, 91,\n-     98, 19, 14, 54, 26, 33, 46, 61, 98, 122, 69, 72, 97, 71, 73, 106, 32, 105, 27, 0, 56,\n-     66, 51, 4, 94, 72, 117, 69];"}, {"sha": "020a984438e8e9a67bedb3ed4726b1eadaf407a9", "filename": "tests/source/configs-array_width-above.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fconfigs-array_width-above.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fconfigs-array_width-above.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-array_width-above.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,6 +0,0 @@\n-// rustfmt-array_width: 10\n-// Array width\n-\n-fn main() {\n-    let lorem = vec![\"ipsum\", \"dolor\", \"sit\", \"amet\", \"consectetur\", \"adipiscing\", \"elit\"];\n-}"}, {"sha": "d76d539773a0f30bfb4706be20e854edc5e39250", "filename": "tests/source/configs-array_width-below.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fconfigs-array_width-below.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fconfigs-array_width-below.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-array_width-below.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,6 +0,0 @@\n-// rustfmt-array_width: 100\n-// Array width\n-\n-fn main() {\n-    let lorem = vec![\"ipsum\", \"dolor\", \"sit\", \"amet\", \"consectetur\", \"adipiscing\", \"elit\"];\n-}"}, {"sha": "d26505b86286b7a773b0502b716be73eac0cda9d", "filename": "tests/source/configs-chain_width-above.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fconfigs-chain_width-above.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fconfigs-chain_width-above.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-chain_width-above.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,6 +0,0 @@\n-// rustfmt-chain_width: 10\n-// Chain one line max\n-\n-fn main() {\n-    let lorem = ipsum.dolor().sit().amet().consectetur().adipiscing().elit();\n-}"}, {"sha": "d877deb74eb31df4170291da79b585c17f5627ee", "filename": "tests/source/configs-chain_width-below.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fconfigs-chain_width-below.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fconfigs-chain_width-below.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-chain_width-below.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,6 +0,0 @@\n-// rustfmt-chain_width: 100\n-// Chain one line max\n-\n-fn main() {\n-    let lorem = ipsum.dolor().sit().amet().consectetur().adipiscing().elit();\n-}"}, {"sha": "237e72c3034c60fe6a6fa8cd11b9e8ee16b320e5", "filename": "tests/source/configs-fn_call_width-above.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fconfigs-fn_call_width-above.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fconfigs-fn_call_width-above.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-fn_call_width-above.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,6 +0,0 @@\n-// rustfmt-fn_call_width: 10\n-// Function call width\n-\n-fn main() {\n-    lorem(\"lorem\", \"ipsum\", \"dolor\", \"sit\", \"amet\", \"consectetur\", \"adipiscing\", \"elit\");\n-}"}, {"sha": "b79918f5b98368106e2edbf06ef1d0ee8dd7fde2", "filename": "tests/source/configs-fn_call_width-below.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fconfigs-fn_call_width-below.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fconfigs-fn_call_width-below.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-fn_call_width-below.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,6 +0,0 @@\n-// rustfmt-fn_call_width: 100\n-// Function call width\n-\n-fn main() {\n-    lorem(\"lorem\", \"ipsum\", \"dolor\");\n-}"}, {"sha": "e7db326155686c93e4a1b26a425b123b1b40a3f2", "filename": "tests/source/configs-fn_call_width-zero.rs", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fconfigs-fn_call_width-zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fconfigs-fn_call_width-zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-fn_call_width-zero.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,7 +0,0 @@\n-// rustfmt-fn_call_width: 0\n-// rustfmt-indent_style: block\n-\n-// #1508\n-fn a() {\n-    let x = f(y);\n-}"}, {"sha": "698fa8bc460f405f384e23d1007467f1829825d5", "filename": "tests/source/configs-single_line_if_else_max_width-above.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fconfigs-single_line_if_else_max_width-above.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fconfigs-single_line_if_else_max_width-above.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-single_line_if_else_max_width-above.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,6 +0,0 @@\n-// rustfmt-single_line_if_else_max_width: 10\n-// Single line if-else max width\n-\n-fn main() {\n-    let lorem = if ipsum { dolor } else { sit };\n-}"}, {"sha": "efafa6c4498c8875eac2a9403a617bad9ed4dac1", "filename": "tests/source/configs-single_line_if_else_max_width-below.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fconfigs-single_line_if_else_max_width-below.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fconfigs-single_line_if_else_max_width-below.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-single_line_if_else_max_width-below.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,6 +0,0 @@\n-// rustfmt-single_line_if_else_max_width: 100\n-// Single line if-else max width\n-\n-fn main() {\n-    let lorem = if ipsum { dolor } else { sit };\n-}"}, {"sha": "363bf5b114e2d5da741520c0ea22829669b982d1", "filename": "tests/source/configs-struct_lit_single_line-true.rs", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fconfigs-struct_lit_single_line-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fconfigs-struct_lit_single_line-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-struct_lit_single_line-true.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,7 +0,0 @@\n-// rustfmt-struct_lit_single_line: true\n-// rustfmt-struct_lit_width: 100\n-// Struct literal multiline-style\n-\n-fn main() {\n-    let lorem = Lorem { ipsum: dolor, sit: amet };\n-}"}, {"sha": "123fa59f90e19d3a704b7fbfc9cda4a1ea8a5700", "filename": "tests/source/configs-struct_lit_width-above.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fconfigs-struct_lit_width-above.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fconfigs-struct_lit_width-above.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-struct_lit_width-above.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,6 +0,0 @@\n-// rustfmt-struct_lit_width: 10\n-// Struct literal-style\n-\n-fn main() {\n-    let lorem = Lorem { ipsum: dolor, sit: amet };\n-}"}, {"sha": "7ffe4a32eaf976f28fde6901b823df3c32c58de0", "filename": "tests/source/configs-struct_lit_width-below.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fconfigs-struct_lit_width-below.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fconfigs-struct_lit_width-below.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-struct_lit_width-below.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,6 +0,0 @@\n-// rustfmt-struct_lit_width: 100\n-// Struct literal-style\n-\n-fn main() {\n-    let lorem = Lorem { ipsum: dolor, sit: amet };\n-}"}, {"sha": "13ceed0bc63657910d846a19d24a0b65bc71a66a", "filename": "tests/source/configs-struct_variant_width-above.rs", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fconfigs-struct_variant_width-above.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fconfigs-struct_variant_width-above.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-struct_variant_width-above.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,8 +0,0 @@\n-// rustfmt-struct_variant_width: 10\n-// Struct variant width\n-\n-enum Lorem {\n-    Ipsum,\n-    Dolor(bool),\n-    Sit { amet: Consectetur, adipiscing: Elit, },\n-}"}, {"sha": "a16a57e19b87100f0d7d58d02ca47a176e6ab16b", "filename": "tests/source/configs-struct_variant_width-below.rs", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fconfigs-struct_variant_width-below.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Fsource%2Fconfigs-struct_variant_width-below.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-struct_variant_width-below.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,8 +0,0 @@\n-// rustfmt-struct_variant_width: 100\n-// Struct variant width\n-\n-enum Lorem {\n-    Ipsum,\n-    Dolor(bool),\n-    Sit { amet: Consectetur, adipiscing: Elit },\n-}"}, {"sha": "7b4870fc65aa07a8714a627d0c609da1b6094bd9", "filename": "tests/source/else-if-brace-style-always-next-line.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/tests%2Fsource%2Felse-if-brace-style-always-next-line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/tests%2Fsource%2Felse-if-brace-style-always-next-line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Felse-if-brace-style-always-next-line.rs?ref=dd1fbca99a9518c6a0dfedd77300d0856c9d4a21", "patch": "@@ -1,4 +1,3 @@\n-// rustfmt-single_line_if_else_max_width: 0\n // rustfmt-control_brace_style: AlwaysNextLine\n \n fn main() {"}, {"sha": "41f5305bf8c404538306e6d49142d86c2bf46352", "filename": "tests/source/else-if-brace-style-always-same-line.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/tests%2Fsource%2Felse-if-brace-style-always-same-line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/tests%2Fsource%2Felse-if-brace-style-always-same-line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Felse-if-brace-style-always-same-line.rs?ref=dd1fbca99a9518c6a0dfedd77300d0856c9d4a21", "patch": "@@ -1,4 +1,3 @@\n-// rustfmt-single_line_if_else_max_width: 0\n // rustfmt-control_brace_style: AlwaysSameLine\n \n fn main() {"}, {"sha": "3b885b3faaa5da0c6112b2374e4fe818730e9f40", "filename": "tests/source/else-if-brace-style-closing-next-line.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/tests%2Fsource%2Felse-if-brace-style-closing-next-line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/tests%2Fsource%2Felse-if-brace-style-closing-next-line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Felse-if-brace-style-closing-next-line.rs?ref=dd1fbca99a9518c6a0dfedd77300d0856c9d4a21", "patch": "@@ -1,4 +1,3 @@\n-// rustfmt-single_line_if_else_max_width: 0\n // rustfmt-control_brace_style: ClosingNextLine\n \n fn main() {"}, {"sha": "f598ad881d0943de93ed6e80f0399029df7e4f74", "filename": "tests/source/hard-tabs.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/tests%2Fsource%2Fhard-tabs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/tests%2Fsource%2Fhard-tabs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fhard-tabs.rs?ref=dd1fbca99a9518c6a0dfedd77300d0856c9d4a21", "patch": "@@ -1,5 +1,4 @@\n // rustfmt-normalize_comments: true\n-// rustfmt-single_line_if_else_max_width: 0\n // rustfmt-wrap_comments: true\n // rustfmt-hard_tabs: true\n // rustfmt-error_on_line_overflow: false"}, {"sha": "bcde390d1164dd55abad76f2ff15f5e1ada76ef9", "filename": "tests/source/single-line-if-else.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/tests%2Fsource%2Fsingle-line-if-else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/tests%2Fsource%2Fsingle-line-if-else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fsingle-line-if-else.rs?ref=dd1fbca99a9518c6a0dfedd77300d0856c9d4a21", "patch": "@@ -1,4 +1,3 @@\n-// rustfmt-single_line_if_else_max_width: 100\n \n // Format if-else expressions on a single line, when possible.\n "}, {"sha": "abb81d8119c007bb01c02b6faeecb5f00d414837", "filename": "tests/target/chains-visual.rs", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/tests%2Ftarget%2Fchains-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/tests%2Ftarget%2Fchains-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fchains-visual.rs?ref=dd1fbca99a9518c6a0dfedd77300d0856c9d4a21", "patch": "@@ -1,5 +1,4 @@\n // rustfmt-normalize_comments: true\n-// rustfmt-single_line_if_else_max_width: 0\n // rustfmt-indent_style: Visual\n // Test chain formatting.\n \n@@ -21,11 +20,7 @@ fn main() {\n               false => (),\n           });\n \n-    loong_func().quux(move || if true {\n-                          1\n-                      } else {\n-                          2\n-                      });\n+    loong_func().quux(move || if true { 1 } else { 2 });\n \n     some_fuuuuuuuuunction().method_call_a(aaaaa, bbbbb, |c| {\n         let x = c;\n@@ -67,11 +62,7 @@ fn floaters() {\n                   field2: val2, }.method_call()\n             .method_call();\n \n-    let y = if cond {\n-                val1\n-            } else {\n-                val2\n-            }.method_call();\n+    let y = if cond { val1 } else { val2 }.method_call();\n \n     {\n         match x {"}, {"sha": "00855de4f9817bda353e61727cc66e078ce2e534", "filename": "tests/target/chains.rs", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/tests%2Ftarget%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/tests%2Ftarget%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fchains.rs?ref=dd1fbca99a9518c6a0dfedd77300d0856c9d4a21", "patch": "@@ -1,6 +1,5 @@\n // rustfmt-normalize_comments: true\n-// rustfmt-single_line_if_else_max_width: 0\n-// rustfmt-chain_width: 100\n+// rustfmt-use_small_heuristics: false\n // Test chain formatting.\n \n fn main() {\n@@ -102,11 +101,12 @@ fn floaters() {\n     }.bar()\n         .baz();\n \n-    Foo { x: val }\n-        .baz(|| {\n-            force();\n-            multiline();\n-        })\n+    Foo {\n+        x: val,\n+    }.baz(|| {\n+        force();\n+        multiline();\n+    })\n         .quux();\n \n     Foo {\n@@ -152,9 +152,7 @@ fn try_shorthand() {\n         .0\n         .x;\n \n-    parameterized(f, substs, def_id, Ns::Value, &[], |tcx| {\n-        tcx.lookup_item_type(def_id).generics\n-    })?;\n+    parameterized(f, substs, def_id, Ns::Value, &[], |tcx| tcx.lookup_item_type(def_id).generics)?;\n     fooooooooooooooooooooooooooo()?\n         .bar()?\n         .baaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaz()?;"}, {"sha": "78a3c828c5d22809d2bf7dc9ef84cb7cf6c0d7f7", "filename": "tests/target/configs-array_horizontal_layout_threshold-1000-visual.rs", "status": "removed", "additions": 0, "deletions": 96, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-array_horizontal_layout_threshold-1000-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-array_horizontal_layout_threshold-1000-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-array_horizontal_layout_threshold-1000-visual.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,96 +0,0 @@\n-// rustfmt-array_horizontal_layout_threshold: 1000\n-// rustfmt-indent_style: Visual\n-\n-const ARRAY: [u8; 2048] =\n-    [99, 72, 48, 104, 44, 112, 38, 62, 40, 93, 23, 24, 32, 21, 102, 76, 65, 29, 116, 21, 18, 37,\n-     61, 10, 108, 31, 85, 93, 2, 108, 103, 77, 109, 40, 92, 88, 114, 32, 31, 87, 69, 42, 38, 25,\n-     105, 6, 61, 128, 45, 6, 43, 81, 7, 3, 1, 125, 24, 123, 2, 29, 111, 120, 26, 0, 78, 36, 115,\n-     86, 66, 10, 52, 87, 27, 125, 122, 42, 126, 101, 70, 78, 90, 62, 72, 43, 3, 111, 8, 110, 11,\n-     124, 124, 102, 74, 35, 9, 83, 22, 121, 34, 70, 69, 52, 31, 92, 94, 67, 21, 76, 65, 10, 79,\n-     54, 17, 58, 105, 13, 96, 61, 99, 31, 87, 41, 78, 88, 120, 35, 95, 25, 80, 100, 45, 79, 49,\n-     56, 5, 114, 11, 25, 16, 97, 2, 43, 17, 71, 63, 102, 81, 55, 14, 59, 102, 55, 101, 119, 29,\n-     58, 103, 2, 88, 85, 9, 70, 91, 73, 37, 70, 123, 15, 68, 50, 76, 52, 46, 126, 87, 44, 85, 3,\n-     97, 59, 39, 37, 79, 110, 25, 109, 90, 124, 109, 6, 47, 60, 79, 15, 40, 3, 40, 20, 98, 9, 21,\n-     65, 119, 2, 20, 64, 56, 34, 116, 22, 125, 113, 57, 30, 21, 92, 76, 10, 107, 61, 8, 124, 110,\n-     87, 64, 99, 26, 122, 56, 127, 94, 8, 121, 19, 24, 27, 61, 34, 44, 73, 82, 10, 49, 95, 72, 89,\n-     27, 124, 75, 33, 64, 48, 73, 21, 101, 34, 47, 103, 114, 11, 31, 11, 93, 31, 54, 102, 117, 38,\n-     31, 33, 84, 72, 128, 91, 3, 84, 92, 48, 69, 39, 97, 113, 70, 26, 96, 107, 117, 76, 59, 50,\n-     43, 66, 21, 90, 31, 102, 45, 66, 5, 115, 63, 61, 83, 37, 16, 78, 22, 120, 52, 24, 25, 70, 71,\n-     54, 11, 103, 45, 44, 101, 106, 53, 39, 116, 83, 4, 68, 12, 59, 3, 37, 112, 123, 7, 120, 127,\n-     93, 34, 101, 48, 114, 127, 65, 69, 16, 79, 125, 18, 71, 69, 72, 54, 60, 107, 52, 18, 92, 105,\n-     119, 17, 32, 23, 37, 8, 127, 99, 71, 54, 80, 109, 54, 51, 44, 20, 40, 52, 46, 81, 28, 46, 82,\n-     39, 39, 70, 3, 90, 41, 40, 36, 127, 48, 124, 26, 115, 47, 93, 104, 4, 70, 88, 3, 4, 34, 75,\n-     46, 16, 65, 114, 53, 51, 123, 16, 36, 98, 36, 37, 36, 80, 71, 3, 116, 89, 52, 74, 7, 116, 39,\n-     48, 51, 54, 56, 105, 90, 50, 67, 111, 111, 7, 55, 87, 30, 15, 75, 50, 23, 9, 115, 2, 27, 45,\n-     75, 29, 15, 15, 47, 33, 119, 85, 11, 116, 127, 53, 37, 3, 0, 116, 77, 4, 37, 56, 8, 92, 105,\n-     86, 101, 79, 103, 98, 70, 122, 110, 38, 50, 52, 51, 62, 98, 95, 49, 21, 116, 30, 61, 1, 36,\n-     96, 33, 78, 75, 23, 118, 88, 10, 4, 91, 38, 32, 96, 64, 71, 89, 108, 10, 106, 62, 86, 104,\n-     24, 117, 2, 72, 99, 60, 117, 109, 67, 112, 124, 111, 102, 4, 126, 95, 23, 68, 115, 106, 15,\n-     103, 101, 19, 30, 7, 29, 109, 62, 93, 22, 30, 106, 7, 52, 77, 88, 8, 32, 3, 63, 77, 14, 86,\n-     82, 114, 104, 119, 122, 40, 92, 3, 98, 128, 53, 74, 40, 1, 94, 5, 112, 59, 29, 128, 119, 33,\n-     67, 42, 109, 30, 93, 40, 113, 13, 85, 17, 51, 63, 57, 4, 2, 102, 93, 25, 61, 39, 110, 56, 21,\n-     102, 25, 4, 113, 84, 63, 64, 63, 73, 83, 39, 123, 113, 68, 83, 95, 7, 23, 18, 73, 52, 16, 41,\n-     81, 38, 55, 82, 59, 93, 6, 30, 25, 65, 67, 44, 99, 18, 77, 74, 62, 126, 36, 110, 66, 4, 86,\n-     123, 21, 109, 46, 93, 112, 107, 35, 14, 127, 112, 54, 65, 0, 59, 76, 47, 94, 6, 94, 86, 49,\n-     118, 44, 10, 15, 5, 105, 12, 28, 5, 94, 56, 31, 79, 86, 116, 18, 32, 69, 1, 83, 36, 38, 71,\n-     38, 71, 23, 71, 9, 30, 64, 2, 6, 21, 112, 55, 1, 43, 126, 33, 79, 97, 49, 86, 7, 84, 40, 42,\n-     25, 35, 51, 118, 56, 115, 104, 103, 20, 103, 95, 92, 43, 50, 42, 34, 122, 116, 75, 31, 109,\n-     53, 44, 6, 48, 1, 52, 119, 123, 32, 50, 63, 114, 105, 16, 79, 53, 19, 78, 86, 110, 4, 43, 97,\n-     3, 18, 110, 84, 70, 23, 84, 23, 48, 125, 36, 58, 25, 90, 111, 103, 83, 38, 112, 127, 28, 53,\n-     86, 67, 78, 126, 86, 8, 41, 76, 10, 54, 11, 22, 3, 12, 2, 50, 91, 82, 90, 42, 108, 29, 72,\n-     86, 34, 91, 115, 46, 86, 28, 46, 22, 97, 104, 48, 8, 22, 92, 10, 71, 102, 52, 116, 65, 15,\n-     102, 8, 113, 53, 110, 49, 81, 102, 48, 91, 32, 18, 67, 49, 124, 35, 83, 37, 16, 31, 8, 58,\n-     48, 77, 104, 71, 60, 40, 44, 74, 2, 40, 12, 22, 23, 49, 17, 98, 21, 83, 117, 64, 115, 44, 4,\n-     46, 70, 47, 115, 24, 66, 71, 80, 59, 32, 46, 81, 118, 8, 29, 93, 86, 81, 20, 44, 46, 4, 116,\n-     107, 117, 11, 30, 78, 13, 61, 110, 45, 101, 113, 34, 102, 19, 64, 10, 36, 68, 94, 40, 87, 74,\n-     105, 81, 70, 58, 44, 46, 108, 90, 60, 32, 36, 23, 115, 40, 97, 43, 58, 16, 120, 74, 52, 42,\n-     49, 16, 62, 122, 97, 107, 15, 104, 13, 17, 103, 49, 112, 123, 23, 107, 49, 40, 101, 62, 9,\n-     71, 92, 70, 57, 37, 42, 21, 83, 2, 20, 116, 22, 8, 34, 61, 56, 65, 115, 121, 116, 67, 111,\n-     52, 80, 94, 46, 18, 68, 72, 3, 61, 96, 127, 46, 7, 90, 100, 31, 30, 80, 123, 72, 74, 115, 74,\n-     81, 45, 79, 121, 57, 85, 117, 5, 88, 101, 97, 10, 12, 43, 57, 107, 83, 25, 12, 117, 103, 72,\n-     115, 29, 58, 101, 103, 120, 115, 74, 125, 127, 70, 7, 24, 92, 15, 103, 58, 83, 54, 75, 30, 9,\n-     111, 68, 53, 29, 25, 19, 96, 38, 93, 123, 126, 63, 115, 92, 119, 76, 50, 7, 9, 101, 68, 26,\n-     122, 5, 77, 4, 116, 89, 81, 21, 8, 111, 5, 33, 66, 121, 20, 106, 42, 54, 69, 34, 22, 21, 54,\n-     78, 46, 76, 64, 47, 44, 38, 84, 19, 73, 18, 92, 74, 63, 65, 40, 34, 12, 6, 127, 32, 90, 62,\n-     47, 42, 72, 121, 128, 44, 77, 121, 23, 105, 95, 43, 67, 63, 103, 22, 17, 45, 118, 28, 29, 17,\n-     45, 85, 40, 3, 114, 36, 23, 109, 118, 76, 16, 90, 111, 11, 98, 51, 127, 12, 68, 53, 116, 81,\n-     47, 126, 118, 105, 10, 59, 12, 101, 72, 114, 34, 19, 82, 68, 115, 12, 119, 123, 66, 21, 32,\n-     106, 110, 49, 50, 20, 3, 39, 119, 36, 53, 5, 13, 61, 70, 30, 57, 74, 61, 125, 39, 73, 9, 67,\n-     79, 85, 95, 74, 67, 61, 5, 30, 76, 39, 86, 32, 71, 108, 6, 49, 117, 60, 63, 57, 54, 107, 126,\n-     104, 57, 59, 120, 68, 6, 108, 81, 113, 126, 64, 36, 60, 123, 117, 13, 68, 8, 116, 114, 119,\n-     125, 61, 81, 98, 34, 53, 62, 11, 31, 117, 44, 54, 115, 30, 73, 69, 54, 92, 70, 49, 59, 51,\n-     104, 103, 62, 96, 121, 98, 26, 45, 77, 24, 124, 28, 70, 100, 2, 98, 47, 25, 100, 37, 42, 115,\n-     105, 42, 127, 65, 24, 102, 122, 33, 79, 87, 22, 47, 35, 50, 59, 54, 68, 16, 36, 91, 127, 39,\n-     16, 113, 68, 20, 76, 99, 93, 121, 18, 23, 6, 32, 108, 8, 114, 65, 81, 106, 39, 91, 54, 8, 92,\n-     6, 96, 12, 100, 33, 5, 105, 50, 89, 70, 33, 40, 85, 39, 93, 119, 26, 97, 90, 18, 74, 11, 105,\n-     114, 84, 125, 124, 113, 86, 124, 90, 90, 87, 64, 83, 121, 39, 108, 66, 23, 55, 43, 31, 110,\n-     96, 42, 4, 64, 41, 110, 97, 24, 95, 121, 125, 118, 85, 97, 110, 115, 75, 74, 60, 115, 47, 80,\n-     55, 67, 92, 127, 120, 8, 42, 5, 50, 55, 35, 117, 60, 106, 127, 77, 58, 81, 76, 66, 17, 108,\n-     55, 17, 50, 31, 64, 102, 88, 5, 32, 12, 37, 120, 48, 46, 43, 99, 12, 16, 114, 50, 49, 12, 3,\n-     63, 64, 27, 54, 53, 31, 73, 2, 15, 39, 102, 12, 60, 100, 27, 28, 24, 46, 101, 10, 104, 51,\n-     127, 101, 60, 55, 114, 25, 3, 29, 20, 53, 108, 7, 71, 4, 102, 14, 44, 72, 10, 56, 92, 86, 96,\n-     56, 80, 20, 117, 65, 53, 58, 66, 5, 103, 88, 17, 10, 34, 63, 83, 84, 43, 70, 41, 8, 111, 117,\n-     31, 80, 29, 12, 115, 75, 84, 91, 91, 10, 91, 26, 40, 30, 36, 44, 12, 18, 83, 29, 19, 15, 123,\n-     98, 118, 26, 19, 36, 35, 122, 29, 41, 23, 40, 74, 25, 70, 78, 24, 75, 109, 31, 0, 89, 45,\n-     128, 35, 120, 79, 108, 89, 84, 84, 81, 108, 47, 2, 112, 2, 42, 126, 12, 15, 15, 109, 109, 97,\n-     76, 126, 5, 23, 66, 65, 1, 39, 102, 121, 127, 24, 21, 68, 42, 49, 69, 81, 111, 6, 11, 28, 5,\n-     89, 31, 74, 33, 118, 15, 55, 105, 107, 30, 103, 54, 25, 29, 60, 91, 72, 94, 15, 31, 98, 47,\n-     16, 27, 100, 109, 99, 82, 53, 25, 122, 119, 96, 65, 4, 24, 50, 79, 40, 65, 6, 91, 125, 7, 80,\n-     103, 88, 22, 107, 38, 39, 100, 102, 96, 1, 66, 44, 33, 101, 88, 61, 10, 35, 39, 47, 93, 63,\n-     19, 59, 87, 128, 16, 46, 51, 34, 34, 71, 117, 113, 66, 89, 126, 127, 35, 125, 11, 81, 120,\n-     100, 41, 51, 85, 30, 82, 68, 86, 114, 77, 56, 125, 10, 2, 95, 75, 31, 33, 84, 83, 22, 35, 99,\n-     12, 18, 40, 4, 88, 104, 46, 100, 99, 113, 45, 36, 51, 88, 53, 57, 15, 82, 60, 101, 10, 16,\n-     83, 23, 78, 47, 34, 27, 56, 85, 14, 14, 53, 20, 71, 101, 82, 14, 35, 3, 51, 91, 16, 46, 117,\n-     108, 30, 120, 124, 22, 89, 57, 119, 50, 91, 52, 77, 7, 10, 79, 5, 21, 81, 43, 58, 61, 59, 39,\n-     60, 122, 23, 68, 21, 19, 81, 3, 31, 64, 54, 126, 56, 23, 64, 28, 32, 2, 119, 2, 55, 125, 57,\n-     7, 51, 116, 93, 34, 15, 96, 120, 6, 73, 100, 98, 53, 116, 22, 64, 63, 112, 19, 60, 77, 95,\n-     32, 3, 2, 117, 41, 80, 96, 122, 15, 45, 118, 102, 26, 89, 74, 2, 17, 63, 21, 52, 23, 82, 97,\n-     22, 68, 39, 119, 117, 128, 49, 71, 55, 38, 55, 87, 3, 76, 80, 13, 57, 47, 59, 91, 46, 124,\n-     115, 7, 74, 95, 26, 128, 86, 16, 20, 107, 117, 10, 72, 35, 30, 128, 75, 113, 45, 116, 125, 1,\n-     46, 98, 14, 34, 29, 100, 17, 122, 65, 35, 69, 72, 12, 6, 5, 65, 29, 112, 47, 21, 103, 63,\n-     118, 75, 21, 99, 6, 36, 46, 86, 59, 9, 117, 23, 82, 75, 13, 4, 9, 104, 43, 73, 17, 111, 36,\n-     60, 38, 120, 99, 114, 117, 110, 27, 100, 104, 63, 87, 53, 54, 71, 38, 58, 86, 124, 3, 103,\n-     92, 79, 127, 97, 17, 103, 13, 25, 65, 12, 28, 89, 62, 48, 115, 30, 19, 80, 14, 7, 21, 124,\n-     91, 104, 110, 97, 97, 0, 104, 124, 93, 24, 70, 13, 99, 91, 73, 55, 84, 25, 22, 111, 115, 58,\n-     45, 97, 8, 39, 125, 9, 22, 91, 98, 19, 14, 54, 26, 33, 46, 61, 98, 122, 69, 72, 97, 71, 73,\n-     106, 32, 105, 27, 0, 56, 66, 51, 4, 94, 72, 117, 69];"}, {"sha": "7c4347f9519eea867df30c1df970b7e9f4cb1318", "filename": "tests/target/configs-array_horizontal_layout_threshold-1000.rs", "status": "removed", "additions": 0, "deletions": 94, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-array_horizontal_layout_threshold-1000.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-array_horizontal_layout_threshold-1000.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-array_horizontal_layout_threshold-1000.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,94 +0,0 @@\n-// rustfmt-array_horizontal_layout_threshold: 1000\n-\n-const ARRAY: [u8; 2048] = [\n-    99, 72, 48, 104, 44, 112, 38, 62, 40, 93, 23, 24, 32, 21, 102, 76, 65, 29, 116, 21, 18, 37, 61,\n-    10, 108, 31, 85, 93, 2, 108, 103, 77, 109, 40, 92, 88, 114, 32, 31, 87, 69, 42, 38, 25, 105, 6,\n-    61, 128, 45, 6, 43, 81, 7, 3, 1, 125, 24, 123, 2, 29, 111, 120, 26, 0, 78, 36, 115, 86, 66, 10,\n-    52, 87, 27, 125, 122, 42, 126, 101, 70, 78, 90, 62, 72, 43, 3, 111, 8, 110, 11, 124, 124, 102,\n-    74, 35, 9, 83, 22, 121, 34, 70, 69, 52, 31, 92, 94, 67, 21, 76, 65, 10, 79, 54, 17, 58, 105,\n-    13, 96, 61, 99, 31, 87, 41, 78, 88, 120, 35, 95, 25, 80, 100, 45, 79, 49, 56, 5, 114, 11, 25,\n-    16, 97, 2, 43, 17, 71, 63, 102, 81, 55, 14, 59, 102, 55, 101, 119, 29, 58, 103, 2, 88, 85, 9,\n-    70, 91, 73, 37, 70, 123, 15, 68, 50, 76, 52, 46, 126, 87, 44, 85, 3, 97, 59, 39, 37, 79, 110,\n-    25, 109, 90, 124, 109, 6, 47, 60, 79, 15, 40, 3, 40, 20, 98, 9, 21, 65, 119, 2, 20, 64, 56, 34,\n-    116, 22, 125, 113, 57, 30, 21, 92, 76, 10, 107, 61, 8, 124, 110, 87, 64, 99, 26, 122, 56, 127,\n-    94, 8, 121, 19, 24, 27, 61, 34, 44, 73, 82, 10, 49, 95, 72, 89, 27, 124, 75, 33, 64, 48, 73,\n-    21, 101, 34, 47, 103, 114, 11, 31, 11, 93, 31, 54, 102, 117, 38, 31, 33, 84, 72, 128, 91, 3,\n-    84, 92, 48, 69, 39, 97, 113, 70, 26, 96, 107, 117, 76, 59, 50, 43, 66, 21, 90, 31, 102, 45, 66,\n-    5, 115, 63, 61, 83, 37, 16, 78, 22, 120, 52, 24, 25, 70, 71, 54, 11, 103, 45, 44, 101, 106, 53,\n-    39, 116, 83, 4, 68, 12, 59, 3, 37, 112, 123, 7, 120, 127, 93, 34, 101, 48, 114, 127, 65, 69,\n-    16, 79, 125, 18, 71, 69, 72, 54, 60, 107, 52, 18, 92, 105, 119, 17, 32, 23, 37, 8, 127, 99, 71,\n-    54, 80, 109, 54, 51, 44, 20, 40, 52, 46, 81, 28, 46, 82, 39, 39, 70, 3, 90, 41, 40, 36, 127,\n-    48, 124, 26, 115, 47, 93, 104, 4, 70, 88, 3, 4, 34, 75, 46, 16, 65, 114, 53, 51, 123, 16, 36,\n-    98, 36, 37, 36, 80, 71, 3, 116, 89, 52, 74, 7, 116, 39, 48, 51, 54, 56, 105, 90, 50, 67, 111,\n-    111, 7, 55, 87, 30, 15, 75, 50, 23, 9, 115, 2, 27, 45, 75, 29, 15, 15, 47, 33, 119, 85, 11,\n-    116, 127, 53, 37, 3, 0, 116, 77, 4, 37, 56, 8, 92, 105, 86, 101, 79, 103, 98, 70, 122, 110, 38,\n-    50, 52, 51, 62, 98, 95, 49, 21, 116, 30, 61, 1, 36, 96, 33, 78, 75, 23, 118, 88, 10, 4, 91, 38,\n-    32, 96, 64, 71, 89, 108, 10, 106, 62, 86, 104, 24, 117, 2, 72, 99, 60, 117, 109, 67, 112, 124,\n-    111, 102, 4, 126, 95, 23, 68, 115, 106, 15, 103, 101, 19, 30, 7, 29, 109, 62, 93, 22, 30, 106,\n-    7, 52, 77, 88, 8, 32, 3, 63, 77, 14, 86, 82, 114, 104, 119, 122, 40, 92, 3, 98, 128, 53, 74,\n-    40, 1, 94, 5, 112, 59, 29, 128, 119, 33, 67, 42, 109, 30, 93, 40, 113, 13, 85, 17, 51, 63, 57,\n-    4, 2, 102, 93, 25, 61, 39, 110, 56, 21, 102, 25, 4, 113, 84, 63, 64, 63, 73, 83, 39, 123, 113,\n-    68, 83, 95, 7, 23, 18, 73, 52, 16, 41, 81, 38, 55, 82, 59, 93, 6, 30, 25, 65, 67, 44, 99, 18,\n-    77, 74, 62, 126, 36, 110, 66, 4, 86, 123, 21, 109, 46, 93, 112, 107, 35, 14, 127, 112, 54, 65,\n-    0, 59, 76, 47, 94, 6, 94, 86, 49, 118, 44, 10, 15, 5, 105, 12, 28, 5, 94, 56, 31, 79, 86, 116,\n-    18, 32, 69, 1, 83, 36, 38, 71, 38, 71, 23, 71, 9, 30, 64, 2, 6, 21, 112, 55, 1, 43, 126, 33,\n-    79, 97, 49, 86, 7, 84, 40, 42, 25, 35, 51, 118, 56, 115, 104, 103, 20, 103, 95, 92, 43, 50, 42,\n-    34, 122, 116, 75, 31, 109, 53, 44, 6, 48, 1, 52, 119, 123, 32, 50, 63, 114, 105, 16, 79, 53,\n-    19, 78, 86, 110, 4, 43, 97, 3, 18, 110, 84, 70, 23, 84, 23, 48, 125, 36, 58, 25, 90, 111, 103,\n-    83, 38, 112, 127, 28, 53, 86, 67, 78, 126, 86, 8, 41, 76, 10, 54, 11, 22, 3, 12, 2, 50, 91, 82,\n-    90, 42, 108, 29, 72, 86, 34, 91, 115, 46, 86, 28, 46, 22, 97, 104, 48, 8, 22, 92, 10, 71, 102,\n-    52, 116, 65, 15, 102, 8, 113, 53, 110, 49, 81, 102, 48, 91, 32, 18, 67, 49, 124, 35, 83, 37,\n-    16, 31, 8, 58, 48, 77, 104, 71, 60, 40, 44, 74, 2, 40, 12, 22, 23, 49, 17, 98, 21, 83, 117, 64,\n-    115, 44, 4, 46, 70, 47, 115, 24, 66, 71, 80, 59, 32, 46, 81, 118, 8, 29, 93, 86, 81, 20, 44,\n-    46, 4, 116, 107, 117, 11, 30, 78, 13, 61, 110, 45, 101, 113, 34, 102, 19, 64, 10, 36, 68, 94,\n-    40, 87, 74, 105, 81, 70, 58, 44, 46, 108, 90, 60, 32, 36, 23, 115, 40, 97, 43, 58, 16, 120, 74,\n-    52, 42, 49, 16, 62, 122, 97, 107, 15, 104, 13, 17, 103, 49, 112, 123, 23, 107, 49, 40, 101, 62,\n-    9, 71, 92, 70, 57, 37, 42, 21, 83, 2, 20, 116, 22, 8, 34, 61, 56, 65, 115, 121, 116, 67, 111,\n-    52, 80, 94, 46, 18, 68, 72, 3, 61, 96, 127, 46, 7, 90, 100, 31, 30, 80, 123, 72, 74, 115, 74,\n-    81, 45, 79, 121, 57, 85, 117, 5, 88, 101, 97, 10, 12, 43, 57, 107, 83, 25, 12, 117, 103, 72,\n-    115, 29, 58, 101, 103, 120, 115, 74, 125, 127, 70, 7, 24, 92, 15, 103, 58, 83, 54, 75, 30, 9,\n-    111, 68, 53, 29, 25, 19, 96, 38, 93, 123, 126, 63, 115, 92, 119, 76, 50, 7, 9, 101, 68, 26,\n-    122, 5, 77, 4, 116, 89, 81, 21, 8, 111, 5, 33, 66, 121, 20, 106, 42, 54, 69, 34, 22, 21, 54,\n-    78, 46, 76, 64, 47, 44, 38, 84, 19, 73, 18, 92, 74, 63, 65, 40, 34, 12, 6, 127, 32, 90, 62, 47,\n-    42, 72, 121, 128, 44, 77, 121, 23, 105, 95, 43, 67, 63, 103, 22, 17, 45, 118, 28, 29, 17, 45,\n-    85, 40, 3, 114, 36, 23, 109, 118, 76, 16, 90, 111, 11, 98, 51, 127, 12, 68, 53, 116, 81, 47,\n-    126, 118, 105, 10, 59, 12, 101, 72, 114, 34, 19, 82, 68, 115, 12, 119, 123, 66, 21, 32, 106,\n-    110, 49, 50, 20, 3, 39, 119, 36, 53, 5, 13, 61, 70, 30, 57, 74, 61, 125, 39, 73, 9, 67, 79, 85,\n-    95, 74, 67, 61, 5, 30, 76, 39, 86, 32, 71, 108, 6, 49, 117, 60, 63, 57, 54, 107, 126, 104, 57,\n-    59, 120, 68, 6, 108, 81, 113, 126, 64, 36, 60, 123, 117, 13, 68, 8, 116, 114, 119, 125, 61, 81,\n-    98, 34, 53, 62, 11, 31, 117, 44, 54, 115, 30, 73, 69, 54, 92, 70, 49, 59, 51, 104, 103, 62, 96,\n-    121, 98, 26, 45, 77, 24, 124, 28, 70, 100, 2, 98, 47, 25, 100, 37, 42, 115, 105, 42, 127, 65,\n-    24, 102, 122, 33, 79, 87, 22, 47, 35, 50, 59, 54, 68, 16, 36, 91, 127, 39, 16, 113, 68, 20, 76,\n-    99, 93, 121, 18, 23, 6, 32, 108, 8, 114, 65, 81, 106, 39, 91, 54, 8, 92, 6, 96, 12, 100, 33, 5,\n-    105, 50, 89, 70, 33, 40, 85, 39, 93, 119, 26, 97, 90, 18, 74, 11, 105, 114, 84, 125, 124, 113,\n-    86, 124, 90, 90, 87, 64, 83, 121, 39, 108, 66, 23, 55, 43, 31, 110, 96, 42, 4, 64, 41, 110, 97,\n-    24, 95, 121, 125, 118, 85, 97, 110, 115, 75, 74, 60, 115, 47, 80, 55, 67, 92, 127, 120, 8, 42,\n-    5, 50, 55, 35, 117, 60, 106, 127, 77, 58, 81, 76, 66, 17, 108, 55, 17, 50, 31, 64, 102, 88, 5,\n-    32, 12, 37, 120, 48, 46, 43, 99, 12, 16, 114, 50, 49, 12, 3, 63, 64, 27, 54, 53, 31, 73, 2, 15,\n-    39, 102, 12, 60, 100, 27, 28, 24, 46, 101, 10, 104, 51, 127, 101, 60, 55, 114, 25, 3, 29, 20,\n-    53, 108, 7, 71, 4, 102, 14, 44, 72, 10, 56, 92, 86, 96, 56, 80, 20, 117, 65, 53, 58, 66, 5,\n-    103, 88, 17, 10, 34, 63, 83, 84, 43, 70, 41, 8, 111, 117, 31, 80, 29, 12, 115, 75, 84, 91, 91,\n-    10, 91, 26, 40, 30, 36, 44, 12, 18, 83, 29, 19, 15, 123, 98, 118, 26, 19, 36, 35, 122, 29, 41,\n-    23, 40, 74, 25, 70, 78, 24, 75, 109, 31, 0, 89, 45, 128, 35, 120, 79, 108, 89, 84, 84, 81, 108,\n-    47, 2, 112, 2, 42, 126, 12, 15, 15, 109, 109, 97, 76, 126, 5, 23, 66, 65, 1, 39, 102, 121, 127,\n-    24, 21, 68, 42, 49, 69, 81, 111, 6, 11, 28, 5, 89, 31, 74, 33, 118, 15, 55, 105, 107, 30, 103,\n-    54, 25, 29, 60, 91, 72, 94, 15, 31, 98, 47, 16, 27, 100, 109, 99, 82, 53, 25, 122, 119, 96, 65,\n-    4, 24, 50, 79, 40, 65, 6, 91, 125, 7, 80, 103, 88, 22, 107, 38, 39, 100, 102, 96, 1, 66, 44,\n-    33, 101, 88, 61, 10, 35, 39, 47, 93, 63, 19, 59, 87, 128, 16, 46, 51, 34, 34, 71, 117, 113, 66,\n-    89, 126, 127, 35, 125, 11, 81, 120, 100, 41, 51, 85, 30, 82, 68, 86, 114, 77, 56, 125, 10, 2,\n-    95, 75, 31, 33, 84, 83, 22, 35, 99, 12, 18, 40, 4, 88, 104, 46, 100, 99, 113, 45, 36, 51, 88,\n-    53, 57, 15, 82, 60, 101, 10, 16, 83, 23, 78, 47, 34, 27, 56, 85, 14, 14, 53, 20, 71, 101, 82,\n-    14, 35, 3, 51, 91, 16, 46, 117, 108, 30, 120, 124, 22, 89, 57, 119, 50, 91, 52, 77, 7, 10, 79,\n-    5, 21, 81, 43, 58, 61, 59, 39, 60, 122, 23, 68, 21, 19, 81, 3, 31, 64, 54, 126, 56, 23, 64, 28,\n-    32, 2, 119, 2, 55, 125, 57, 7, 51, 116, 93, 34, 15, 96, 120, 6, 73, 100, 98, 53, 116, 22, 64,\n-    63, 112, 19, 60, 77, 95, 32, 3, 2, 117, 41, 80, 96, 122, 15, 45, 118, 102, 26, 89, 74, 2, 17,\n-    63, 21, 52, 23, 82, 97, 22, 68, 39, 119, 117, 128, 49, 71, 55, 38, 55, 87, 3, 76, 80, 13, 57,\n-    47, 59, 91, 46, 124, 115, 7, 74, 95, 26, 128, 86, 16, 20, 107, 117, 10, 72, 35, 30, 128, 75,\n-    113, 45, 116, 125, 1, 46, 98, 14, 34, 29, 100, 17, 122, 65, 35, 69, 72, 12, 6, 5, 65, 29, 112,\n-    47, 21, 103, 63, 118, 75, 21, 99, 6, 36, 46, 86, 59, 9, 117, 23, 82, 75, 13, 4, 9, 104, 43, 73,\n-    17, 111, 36, 60, 38, 120, 99, 114, 117, 110, 27, 100, 104, 63, 87, 53, 54, 71, 38, 58, 86, 124,\n-    3, 103, 92, 79, 127, 97, 17, 103, 13, 25, 65, 12, 28, 89, 62, 48, 115, 30, 19, 80, 14, 7, 21,\n-    124, 91, 104, 110, 97, 97, 0, 104, 124, 93, 24, 70, 13, 99, 91, 73, 55, 84, 25, 22, 111, 115,\n-    58, 45, 97, 8, 39, 125, 9, 22, 91, 98, 19, 14, 54, 26, 33, 46, 61, 98, 122, 69, 72, 97, 71, 73,\n-    106, 32, 105, 27, 0, 56, 66, 51, 4, 94, 72, 117, 69,\n-];"}, {"sha": "1265ebe0d8b1a796b607e819b3e335c8160a5659", "filename": "tests/target/configs-array_width-above.rs", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-array_width-above.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-array_width-above.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-array_width-above.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,14 +0,0 @@\n-// rustfmt-array_width: 10\n-// Array width\n-\n-fn main() {\n-    let lorem = vec![\n-        \"ipsum\",\n-        \"dolor\",\n-        \"sit\",\n-        \"amet\",\n-        \"consectetur\",\n-        \"adipiscing\",\n-        \"elit\",\n-    ];\n-}"}, {"sha": "d76d539773a0f30bfb4706be20e854edc5e39250", "filename": "tests/target/configs-array_width-below.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-array_width-below.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-array_width-below.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-array_width-below.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,6 +0,0 @@\n-// rustfmt-array_width: 100\n-// Array width\n-\n-fn main() {\n-    let lorem = vec![\"ipsum\", \"dolor\", \"sit\", \"amet\", \"consectetur\", \"adipiscing\", \"elit\"];\n-}"}, {"sha": "1b5e12c331aee17d232dd0a746d537041d94739c", "filename": "tests/target/configs-chain_width-above.rs", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-chain_width-above.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-chain_width-above.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-chain_width-above.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,12 +0,0 @@\n-// rustfmt-chain_width: 10\n-// Chain one line max\n-\n-fn main() {\n-    let lorem = ipsum\n-        .dolor()\n-        .sit()\n-        .amet()\n-        .consectetur()\n-        .adipiscing()\n-        .elit();\n-}"}, {"sha": "d877deb74eb31df4170291da79b585c17f5627ee", "filename": "tests/target/configs-chain_width-below.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-chain_width-below.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-chain_width-below.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-chain_width-below.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,6 +0,0 @@\n-// rustfmt-chain_width: 100\n-// Chain one line max\n-\n-fn main() {\n-    let lorem = ipsum.dolor().sit().amet().consectetur().adipiscing().elit();\n-}"}, {"sha": "3f84928ed59fe646364c382746c92aaa1faa25ef", "filename": "tests/target/configs-fn_call_width-above.rs", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-fn_call_width-above.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-fn_call_width-above.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-fn_call_width-above.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,15 +0,0 @@\n-// rustfmt-fn_call_width: 10\n-// Function call width\n-\n-fn main() {\n-    lorem(\n-        \"lorem\",\n-        \"ipsum\",\n-        \"dolor\",\n-        \"sit\",\n-        \"amet\",\n-        \"consectetur\",\n-        \"adipiscing\",\n-        \"elit\",\n-    );\n-}"}, {"sha": "b79918f5b98368106e2edbf06ef1d0ee8dd7fde2", "filename": "tests/target/configs-fn_call_width-below.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-fn_call_width-below.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-fn_call_width-below.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-fn_call_width-below.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,6 +0,0 @@\n-// rustfmt-fn_call_width: 100\n-// Function call width\n-\n-fn main() {\n-    lorem(\"lorem\", \"ipsum\", \"dolor\");\n-}"}, {"sha": "1455ecd967c843bb4ac65748eeb299033eae7516", "filename": "tests/target/configs-fn_call_width-zero.rs", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-fn_call_width-zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-fn_call_width-zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-fn_call_width-zero.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,9 +0,0 @@\n-// rustfmt-fn_call_width: 0\n-// rustfmt-indent_style: block\n-\n-// #1508\n-fn a() {\n-    let x = f(\n-        y,\n-    );\n-}"}, {"sha": "d883dbbb4698e861695fa68e8143be2ac3b6c0c0", "filename": "tests/target/configs-single_line_if_else_max_width-above.rs", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-single_line_if_else_max_width-above.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-single_line_if_else_max_width-above.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-single_line_if_else_max_width-above.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,10 +0,0 @@\n-// rustfmt-single_line_if_else_max_width: 10\n-// Single line if-else max width\n-\n-fn main() {\n-    let lorem = if ipsum {\n-        dolor\n-    } else {\n-        sit\n-    };\n-}"}, {"sha": "efafa6c4498c8875eac2a9403a617bad9ed4dac1", "filename": "tests/target/configs-single_line_if_else_max_width-below.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-single_line_if_else_max_width-below.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-single_line_if_else_max_width-below.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-single_line_if_else_max_width-below.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,6 +0,0 @@\n-// rustfmt-single_line_if_else_max_width: 100\n-// Single line if-else max width\n-\n-fn main() {\n-    let lorem = if ipsum { dolor } else { sit };\n-}"}, {"sha": "363bf5b114e2d5da741520c0ea22829669b982d1", "filename": "tests/target/configs-struct_lit_single_line-true.rs", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-struct_lit_single_line-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-struct_lit_single_line-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-struct_lit_single_line-true.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,7 +0,0 @@\n-// rustfmt-struct_lit_single_line: true\n-// rustfmt-struct_lit_width: 100\n-// Struct literal multiline-style\n-\n-fn main() {\n-    let lorem = Lorem { ipsum: dolor, sit: amet };\n-}"}, {"sha": "75a1a64095d57939def2d4fb7e2c3686e14816a4", "filename": "tests/target/configs-struct_lit_width-above.rs", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-struct_lit_width-above.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-struct_lit_width-above.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-struct_lit_width-above.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,9 +0,0 @@\n-// rustfmt-struct_lit_width: 10\n-// Struct literal-style\n-\n-fn main() {\n-    let lorem = Lorem {\n-        ipsum: dolor,\n-        sit: amet,\n-    };\n-}"}, {"sha": "7ffe4a32eaf976f28fde6901b823df3c32c58de0", "filename": "tests/target/configs-struct_lit_width-below.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-struct_lit_width-below.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-struct_lit_width-below.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-struct_lit_width-below.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,6 +0,0 @@\n-// rustfmt-struct_lit_width: 100\n-// Struct literal-style\n-\n-fn main() {\n-    let lorem = Lorem { ipsum: dolor, sit: amet };\n-}"}, {"sha": "54c93d4803155a21fe236513476d7c34465eca21", "filename": "tests/target/configs-struct_variant_width-0.rs", "status": "removed", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-struct_variant_width-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-struct_variant_width-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-struct_variant_width-0.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,29 +0,0 @@\n-// rustfmt-struct_variant_width: 0\n-\n-// Force vertical layout when struct_variant_width is set to 0.\n-\n-enum State {\n-    TryRecv {\n-        pos: usize,\n-        lap: u8,\n-        closed_count: usize,\n-    },\n-    Subscribe {\n-        pos: usize,\n-    },\n-    IsReady {\n-        pos: usize,\n-        ready: bool,\n-    },\n-    Unsubscribe {\n-        pos: usize,\n-        lap: u8,\n-        id_woken: usize,\n-    },\n-    FinalTryRecv {\n-        pos: usize,\n-        id_woken: usize,\n-    },\n-    TimedOut,\n-    Disconnected,\n-}"}, {"sha": "1fefbda81d5de7a7adeb59df8429fc21ba245c6f", "filename": "tests/target/configs-struct_variant_width-above.rs", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-struct_variant_width-above.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-struct_variant_width-above.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-struct_variant_width-above.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,11 +0,0 @@\n-// rustfmt-struct_variant_width: 10\n-// Struct variant width\n-\n-enum Lorem {\n-    Ipsum,\n-    Dolor(bool),\n-    Sit {\n-        amet: Consectetur,\n-        adipiscing: Elit,\n-    },\n-}"}, {"sha": "a16a57e19b87100f0d7d58d02ca47a176e6ab16b", "filename": "tests/target/configs-struct_variant_width-below.rs", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-struct_variant_width-below.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96886cd67f1faa83bfb360c31c6614e1aea46bf7/tests%2Ftarget%2Fconfigs-struct_variant_width-below.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-struct_variant_width-below.rs?ref=96886cd67f1faa83bfb360c31c6614e1aea46bf7", "patch": "@@ -1,8 +0,0 @@\n-// rustfmt-struct_variant_width: 100\n-// Struct variant width\n-\n-enum Lorem {\n-    Ipsum,\n-    Dolor(bool),\n-    Sit { amet: Consectetur, adipiscing: Elit },\n-}"}, {"sha": "c180ff697fcb23041ed5215727a90e2198e27a58", "filename": "tests/target/else-if-brace-style-always-next-line.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/tests%2Ftarget%2Felse-if-brace-style-always-next-line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/tests%2Ftarget%2Felse-if-brace-style-always-next-line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Felse-if-brace-style-always-next-line.rs?ref=dd1fbca99a9518c6a0dfedd77300d0856c9d4a21", "patch": "@@ -1,4 +1,3 @@\n-// rustfmt-single_line_if_else_max_width: 0\n // rustfmt-control_brace_style: AlwaysNextLine\n \n fn main() {\n@@ -16,14 +15,7 @@ fn main() {\n     }\n \n \n-    let a = if 0 > 1\n-    {\n-        unreachable!()\n-    }\n-    else\n-    {\n-        0x0\n-    };\n+    let a = if 0 > 1 { unreachable!() } else { 0x0 };\n \n \n     if true"}, {"sha": "4c6153d5f1f509091a792a00dc2abf66bdccddcc", "filename": "tests/target/else-if-brace-style-always-same-line.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/tests%2Ftarget%2Felse-if-brace-style-always-same-line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/tests%2Ftarget%2Felse-if-brace-style-always-same-line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Felse-if-brace-style-always-same-line.rs?ref=dd1fbca99a9518c6a0dfedd77300d0856c9d4a21", "patch": "@@ -1,4 +1,3 @@\n-// rustfmt-single_line_if_else_max_width: 0\n // rustfmt-control_brace_style: AlwaysSameLine\n \n fn main() {\n@@ -15,11 +14,7 @@ fn main() {\n     }\n \n \n-    let a = if 0 > 1 {\n-        unreachable!()\n-    } else {\n-        0x0\n-    };\n+    let a = if 0 > 1 { unreachable!() } else { 0x0 };\n \n \n     if true {"}, {"sha": "04ee82bb82840c2c241f22fca7795f8ef9f7a8ef", "filename": "tests/target/else-if-brace-style-closing-next-line.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/tests%2Ftarget%2Felse-if-brace-style-closing-next-line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/tests%2Ftarget%2Felse-if-brace-style-closing-next-line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Felse-if-brace-style-closing-next-line.rs?ref=dd1fbca99a9518c6a0dfedd77300d0856c9d4a21", "patch": "@@ -1,4 +1,3 @@\n-// rustfmt-single_line_if_else_max_width: 0\n // rustfmt-control_brace_style: ClosingNextLine\n \n fn main() {\n@@ -15,12 +14,7 @@ fn main() {\n     }\n \n \n-    let a = if 0 > 1 {\n-        unreachable!()\n-    }\n-    else {\n-        0x0\n-    };\n+    let a = if 0 > 1 { unreachable!() } else { 0x0 };\n \n \n     if true {"}, {"sha": "72d366b1fa1c0fb66ee2f6a80206dc9f18f50128", "filename": "tests/target/hard-tabs.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/tests%2Ftarget%2Fhard-tabs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/tests%2Ftarget%2Fhard-tabs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fhard-tabs.rs?ref=dd1fbca99a9518c6a0dfedd77300d0856c9d4a21", "patch": "@@ -1,5 +1,4 @@\n // rustfmt-normalize_comments: true\n-// rustfmt-single_line_if_else_max_width: 0\n // rustfmt-wrap_comments: true\n // rustfmt-hard_tabs: true\n // rustfmt-error_on_line_overflow: false\n@@ -73,13 +72,7 @@ fn main() {\n \t\targ(a, b, c, d, e)\n \t}\n \n-\tloong_func().quux(move || {\n-\t\tif true {\n-\t\t\t1\n-\t\t} else {\n-\t\t\t2\n-\t\t}\n-\t});\n+\tloong_func().quux(move || if true { 1 } else { 2 });\n \n \tfffffffffffffffffffffffffffffffffff(a, {\n \t\tSCRIPT_TASK_ROOT.with(|root| {"}, {"sha": "a4679463ba23ee4a887e9bd1637454fd76d6879a", "filename": "tests/target/issue-1802.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/tests%2Ftarget%2Fissue-1802.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/tests%2Ftarget%2Fissue-1802.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-1802.rs?ref=dd1fbca99a9518c6a0dfedd77300d0856c9d4a21", "patch": "@@ -1,11 +1,10 @@\n // rustfmt-tab_spaces: 2\n-// rustfmt-max_width: 10\n-// rustfmt-struct_variant_width: 10\n+// rustfmt-max_width: 30\n // rustfmt-error_on_line_overflow: false\n \n enum F {\n   X {\n-    a: d,\n-    b: e,\n+    a: dddddddddddddd,\n+    b: eeeeeeeeeeeeeee,\n   },\n }"}, {"sha": "98fd793cba2d846821aec70a37a1ab0bf6b59da0", "filename": "tests/target/single-line-if-else.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/tests%2Ftarget%2Fsingle-line-if-else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd1fbca99a9518c6a0dfedd77300d0856c9d4a21/tests%2Ftarget%2Fsingle-line-if-else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fsingle-line-if-else.rs?ref=dd1fbca99a9518c6a0dfedd77300d0856c9d4a21", "patch": "@@ -1,5 +1,3 @@\n-// rustfmt-single_line_if_else_max_width: 100\n-\n // Format if-else expressions on a single line, when possible.\n \n fn main() {\n@@ -28,7 +26,11 @@ fn main() {\n         10\n     };\n \n-    let d = if let Some(val) = turbo { \"cool\" } else { \"beans\" };\n+    let d = if let Some(val) = turbo {\n+        \"cool\"\n+    } else {\n+        \"beans\"\n+    };\n \n     if cond() {\n         statement();\n@@ -46,7 +48,11 @@ fn main() {\n         bbbbbbbbbb\n     };\n \n-    let x = if veeeeeeeeery_loooooong_condition() { aaaaaaaaaaaaaaaaaaaaaaaaa } else { bbbbbbbbbb };\n+    let x = if veeeeeeeeery_loooooong_condition() {\n+        aaaaaaaaaaaaaaaaaaaaaaaaa\n+    } else {\n+        bbbbbbbbbb\n+    };\n \n     funk(if test() { 1 } else { 2 }, arg2);\n }"}]}