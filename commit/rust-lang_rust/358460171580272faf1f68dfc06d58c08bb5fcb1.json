{"sha": "358460171580272faf1f68dfc06d58c08bb5fcb1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1ODQ2MDE3MTU4MDI3MmZhZjFmNjhkZmMwNmQ1OGMwOGJiNWZjYjE=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-07-23T00:21:35Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-08-05T14:54:49Z"}, "message": "Trigger stable feature lint for lib features", "tree": {"sha": "d8ec1d03408dd249d136b3142076750e93199c38", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8ec1d03408dd249d136b3142076750e93199c38"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/358460171580272faf1f68dfc06d58c08bb5fcb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/358460171580272faf1f68dfc06d58c08bb5fcb1", "html_url": "https://github.com/rust-lang/rust/commit/358460171580272faf1f68dfc06d58c08bb5fcb1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/358460171580272faf1f68dfc06d58c08bb5fcb1/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70ff6fd46f1e46faca928241448095866d46194d", "url": "https://api.github.com/repos/rust-lang/rust/commits/70ff6fd46f1e46faca928241448095866d46194d", "html_url": "https://github.com/rust-lang/rust/commit/70ff6fd46f1e46faca928241448095866d46194d"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "50f949854870cec5d4d57377ad7cebcce5588085", "filename": "src/librustc/middle/stability.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/358460171580272faf1f68dfc06d58c08bb5fcb1/src%2Flibrustc%2Fmiddle%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/358460171580272faf1f68dfc06d58c08bb5fcb1/src%2Flibrustc%2Fmiddle%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fstability.rs?ref=358460171580272faf1f68dfc06d58c08bb5fcb1", "patch": "@@ -833,6 +833,16 @@ pub fn check_unused_or_stable_features<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>) {\n     remaining_lib_features.remove(&Symbol::intern(\"libc\"));\n \n     for (feature, stable) in tcx.lib_features().iter() {\n+        // Warn if the user has enabled an already-stable feature.\n+        if let Some(since) = stable {\n+            if let Some(span) = remaining_lib_features.get(&feature) {\n+                tcx.lint_node(lint::builtin::STABLE_FEATURES,\n+                    ast::CRATE_NODE_ID,\n+                    *span,\n+                    &format_stable_since_msg(feature, &since.as_str()));\n+            }\n+        }\n+\n         remaining_lib_features.remove(&feature);\n     }\n "}]}