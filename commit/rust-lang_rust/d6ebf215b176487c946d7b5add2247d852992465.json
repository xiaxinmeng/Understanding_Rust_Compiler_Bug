{"sha": "d6ebf215b176487c946d7b5add2247d852992465", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2ZWJmMjE1YjE3NjQ4N2M5NDZkN2I1YWRkMjI0N2Q4NTI5OTI0NjU=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-03-20T08:02:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-20T08:02:11Z"}, "message": "Rollup merge of #70145 - lzutao:patch-1, r=Dylan-DPC\n\ndoc: Add quote to .init_array\n\nThe current formatting is not good without quotes:\n![without-quote](https://i.imgur.com/RkIm4cr.png)", "tree": {"sha": "91854615156e17ba6c0b549d0e39f82eef2d91b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91854615156e17ba6c0b549d0e39f82eef2d91b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6ebf215b176487c946d7b5add2247d852992465", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJedHiDCRBK7hj4Ov3rIwAAdHIIAEFVdiKvA5Sh466wCUCWODVv\nBZgdpCWCyOMe0m1e9Qp4m+DQqYfdfUOLNFF0v2stHLjmOLj41DG1pv9kf1pNdVsg\nX88xldAg+QiSLFB0XOproJGi2gzG5l6jf8wnRH1+vYoSagQhyv2gTW6DMjl+bCep\n9DHA9kLkSdzCaZkaP5+klUYST5auiuiFCX4QQJHGeNm4m2CPwsYeYyLeluY4tSEC\nP4e9rFmdqC0YHDmnzGLNFYFW9Pgm/ZU1XCF3PXUzuRvm2jZvTLQxsJZ0wu/WAsHx\nha0zUq2gidhEHZKSiAecjHtpQIjsUHeDnRYJlpbDhXn2okVFOAF7wuyxHPqAfdU=\n=dkMt\n-----END PGP SIGNATURE-----\n", "payload": "tree 91854615156e17ba6c0b549d0e39f82eef2d91b2\nparent 8615a365b605013be85fcd463471854b30df6740\nparent 2c38ecf72df871e9c564c1125e61d86fbcfb5679\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1584691331 +0900\ncommitter GitHub <noreply@github.com> 1584691331 +0900\n\nRollup merge of #70145 - lzutao:patch-1, r=Dylan-DPC\n\ndoc: Add quote to .init_array\n\nThe current formatting is not good without quotes:\n![without-quote](https://i.imgur.com/RkIm4cr.png)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6ebf215b176487c946d7b5add2247d852992465", "html_url": "https://github.com/rust-lang/rust/commit/d6ebf215b176487c946d7b5add2247d852992465", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6ebf215b176487c946d7b5add2247d852992465/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8615a365b605013be85fcd463471854b30df6740", "url": "https://api.github.com/repos/rust-lang/rust/commits/8615a365b605013be85fcd463471854b30df6740", "html_url": "https://github.com/rust-lang/rust/commit/8615a365b605013be85fcd463471854b30df6740"}, {"sha": "2c38ecf72df871e9c564c1125e61d86fbcfb5679", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c38ecf72df871e9c564c1125e61d86fbcfb5679", "html_url": "https://github.com/rust-lang/rust/commit/2c38ecf72df871e9c564c1125e61d86fbcfb5679"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "6aad082a97f9a48ac40f0308429915c431a9cfcb", "filename": "src/libstd/env.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d6ebf215b176487c946d7b5add2247d852992465/src%2Flibstd%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6ebf215b176487c946d7b5add2247d852992465/src%2Flibstd%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fenv.rs?ref=d6ebf215b176487c946d7b5add2247d852992465", "patch": "@@ -723,8 +723,8 @@ pub struct ArgsOs {\n /// (such as `*` and `?`). On Windows this is not done, and such arguments are\n /// passed as-is.\n ///\n-/// On glibc Linux, arguments are retrieved by placing a function in .init_array.\n-/// glibc passes argc, argv, and envp to functions in .init_array, as a non-standard extension.\n+/// On glibc Linux systems, arguments are retrieved by placing a function in \".init_array\".\n+/// Glibc passes argc, argv, and envp to functions in \".init_array\", as a non-standard extension.\n /// This allows `std::env::args` to work even in a `cdylib` or `staticlib`, as it does on macOS\n /// and Windows.\n ///\n@@ -758,8 +758,8 @@ pub fn args() -> Args {\n /// set to arbitrary text, and it may not even exist, so this property should\n /// not be relied upon for security purposes.\n ///\n-/// On glibc Linux, arguments are retrieved by placing a function in .init_array.\n-/// glibc passes argc, argv, and envp to functions in .init_array, as a non-standard extension.\n+/// On glibc Linux systems, arguments are retrieved by placing a function in \".init_array\".\n+/// Glibc passes argc, argv, and envp to functions in \".init_array\", as a non-standard extension.\n /// This allows `std::env::args` to work even in a `cdylib` or `staticlib`, as it does on macOS\n /// and Windows.\n ///"}]}