{"sha": "abe11831358f2c37a11ffddd679dd3e0a67827c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiZTExODMxMzU4ZjJjMzdhMTFmZmRkZDY3OWRkM2UwYTY3ODI3Yzg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-05-15T21:55:14Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-05-15T21:55:14Z"}, "message": "Auto merge of #41843 - cuviper:oxidized-installer, r=alexcrichton\n\nUpdate to the Rusty rust-installer\n\nThis updates the rust-installer submodule to the new version written in Rust (rust-lang/rust-installer#62), now moved to `src/tools/rust-installer` and invoked in `dist.rs` as a cargo-based tool command.  All of the former shell-script invocations now invoke the tool, otherwise keeping the same arguments as before.\n\nAs a small bonus, `rustc-src` now also uses the same tarball generator, so it gains a smaller `.tar.xz` too.\n\nFixes #41569.  r? @alexcrichton", "tree": {"sha": "582a4b8e2bfadea998e4e9c518a9858b77f4e8a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/582a4b8e2bfadea998e4e9c518a9858b77f4e8a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/abe11831358f2c37a11ffddd679dd3e0a67827c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/abe11831358f2c37a11ffddd679dd3e0a67827c8", "html_url": "https://github.com/rust-lang/rust/commit/abe11831358f2c37a11ffddd679dd3e0a67827c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/abe11831358f2c37a11ffddd679dd3e0a67827c8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75b05681239cb309a23fcb4f8864f177e5aa62da", "url": "https://api.github.com/repos/rust-lang/rust/commits/75b05681239cb309a23fcb4f8864f177e5aa62da", "html_url": "https://github.com/rust-lang/rust/commit/75b05681239cb309a23fcb4f8864f177e5aa62da"}, {"sha": "1e709fcff37a55ab4b8d746be615811a77286945", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e709fcff37a55ab4b8d746be615811a77286945", "html_url": "https://github.com/rust-lang/rust/commit/1e709fcff37a55ab4b8d746be615811a77286945"}], "stats": {"total": 330, "additions": 256, "deletions": 74}, "files": [{"sha": "791404344ef3ad4a3606d9884370036da4c193ea", "filename": ".gitmodules", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abe11831358f2c37a11ffddd679dd3e0a67827c8/.gitmodules", "raw_url": "https://github.com/rust-lang/rust/raw/abe11831358f2c37a11ffddd679dd3e0a67827c8/.gitmodules", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitmodules?ref=abe11831358f2c37a11ffddd679dd3e0a67827c8", "patch": "@@ -13,7 +13,7 @@\n \tpath = src/jemalloc\n \turl = https://github.com/rust-lang/jemalloc.git\n [submodule \"src/rust-installer\"]\n-\tpath = src/rust-installer\n+\tpath = src/tools/rust-installer\n \turl = https://github.com/rust-lang/rust-installer.git\n [submodule \"src/liblibc\"]\n \tpath = src/liblibc"}, {"sha": "9269fc0f448d8f87b60a312d5979f11efe60863f", "filename": "src/Cargo.lock", "status": "modified", "additions": 162, "deletions": 3, "changes": 165, "blob_url": "https://github.com/rust-lang/rust/blob/abe11831358f2c37a11ffddd679dd3e0a67827c8/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/abe11831358f2c37a11ffddd679dd3e0a67827c8/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=abe11831358f2c37a11ffddd679dd3e0a67827c8", "patch": "@@ -58,6 +58,29 @@ dependencies = [\n  \"winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"backtrace\"\n+version = \"0.3.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"backtrace-sys 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"cfg-if 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"dbghelp-sys 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-demangle 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"backtrace-sys\"\n+version = \"0.1.10\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"gcc 0.3.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"bitflags\"\n version = \"0.5.0\"\n@@ -102,6 +125,11 @@ dependencies = [\n name = \"cargotest2\"\n version = \"0.1.0\"\n \n+[[package]]\n+name = \"cfg-if\"\n+version = \"0.1.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n [[package]]\n name = \"clap\"\n version = \"2.22.1\"\n@@ -115,6 +143,7 @@ dependencies = [\n  \"unicode-segmentation 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unicode-width 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"vec_map 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"yaml-rust 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -158,6 +187,15 @@ dependencies = [\n name = \"core\"\n version = \"0.0.0\"\n \n+[[package]]\n+name = \"dbghelp-sys\"\n+version = \"0.2.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi-build 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"diff\"\n version = \"0.1.10\"\n@@ -177,6 +215,14 @@ dependencies = [\n  \"regex 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"error-chain\"\n+version = \"0.10.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"backtrace 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"error_index_generator\"\n version = \"0.0.0\"\n@@ -197,6 +243,15 @@ dependencies = [\n  \"gcc 0.3.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"flate2\"\n+version = \"0.2.19\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"libc 0.2.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"miniz-sys 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"fmt_macros\"\n version = \"0.0.0\"\n@@ -224,7 +279,7 @@ name = \"handlebars\"\n version = \"0.25.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"lazy_static 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"lazy_static 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"pest 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"quick-error 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -233,6 +288,21 @@ dependencies = [\n  \"serde_json 0.9.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"installer\"\n+version = \"0.0.0\"\n+dependencies = [\n+ \"clap 2.22.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"error-chain 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"flate2 0.2.19 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"lazy_static 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"tar 0.4.12 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"walkdir 1.0.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"xz2 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"itoa\"\n version = \"0.3.1\"\n@@ -249,7 +319,7 @@ dependencies = [\n \n [[package]]\n name = \"lazy_static\"\n-version = \"0.2.5\"\n+version = \"0.2.8\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n@@ -273,6 +343,16 @@ name = \"log\"\n version = \"0.3.7\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"lzma-sys\"\n+version = \"0.1.3\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"filetime 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"gcc 0.3.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"mdbook\"\n version = \"0.0.21\"\n@@ -298,6 +378,15 @@ dependencies = [\n  \"libc 0.2.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"miniz-sys\"\n+version = \"0.1.9\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"gcc 0.3.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"num-traits\"\n version = \"0.1.37\"\n@@ -453,6 +542,11 @@ dependencies = [\n  \"syntax_pos 0.0.0\",\n ]\n \n+[[package]]\n+name = \"rustc-demangle\"\n+version = \"0.1.4\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n [[package]]\n name = \"rustc-main\"\n version = \"0.0.0\"\n@@ -800,6 +894,15 @@ dependencies = [\n  \"syntax_pos 0.0.0\",\n ]\n \n+[[package]]\n+name = \"same-file\"\n+version = \"0.1.3\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"serde\"\n version = \"0.9.11\"\n@@ -887,6 +990,16 @@ dependencies = [\n  \"serialize 0.0.0\",\n ]\n \n+[[package]]\n+name = \"tar\"\n+version = \"0.4.12\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"filetime 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"xattr 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"term\"\n version = \"0.0.0\"\n@@ -980,6 +1093,16 @@ name = \"void\"\n version = \"1.0.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"walkdir\"\n+version = \"1.0.7\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"same-file 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"winapi\"\n version = \"0.2.8\"\n@@ -990,28 +1113,57 @@ name = \"winapi-build\"\n version = \"0.1.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"xattr\"\n+version = \"0.1.11\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"libc 0.2.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"xz2\"\n+version = \"0.1.3\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"lzma-sys 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"yaml-rust\"\n+version = \"0.3.5\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n [metadata]\n \"checksum aho-corasick 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"500909c4f87a9e52355b26626d890833e9e1d53ac566db76c36faa984b889699\"\n \"checksum ansi_term 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"23ac7c30002a5accbf7e8987d0632fa6de155b7c3d39d0067317a391e00a2ef6\"\n \"checksum atty 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d912da0db7fa85514874458ca3651fe2cddace8d0b0505571dbdcd41ab490159\"\n+\"checksum backtrace 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f551bc2ddd53aea015d453ef0b635af89444afa5ed2405dd0b2062ad5d600d80\"\n+\"checksum backtrace-sys 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d192fd129132fbc97497c1f2ec2c2c5174e376b95f535199ef4fe0a293d33842\"\n \"checksum bitflags 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4f67931368edf3a9a51d29886d245f1c3db2f1ef0dcc9e35ff70341b78c10d23\"\n \"checksum bitflags 0.8.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1370e9fc2a6ae53aea8b7a5110edbd08836ed87c88736dfabccade1c2b44bff4\"\n+\"checksum cfg-if 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"de1e760d7b6535af4241fca8bd8adf68e2e7edacc6b29f5d399050c5e48cf88c\"\n \"checksum clap 2.22.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e17a4a72ffea176f77d6e2db609c6c919ef221f23862c9915e687fb54d833485\"\n \"checksum cmake 0.1.23 (registry+https://github.com/rust-lang/crates.io-index)\" = \"92278eb79412c8f75cfc89e707a1bb3a6490b68f7f2e78d15c774f30fe701122\"\n+\"checksum dbghelp-sys 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"97590ba53bcb8ac28279161ca943a924d1fd4a8fb3fa63302591647c4fc5b850\"\n \"checksum diff 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0a515461b6c8c08419850ced27bc29e86166dcdcde8fbe76f8b1f0589bb49472\"\n \"checksum dtoa 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"80c8b71fd71146990a9742fc06dcbbde19161a267e0ad4e572c35162f4578c90\"\n \"checksum env_logger 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e3856f1697098606fc6cb97a93de88ca3f3bc35bb878c725920e6e82ecf05e83\"\n+\"checksum error-chain 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d9435d864e017c3c6afeac1654189b06cdb491cf2ff73dbf0d73b0f292f42ff8\"\n \"checksum filetime 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5363ab8e4139b8568a6237db5248646e5a8a2f89bd5ccb02092182b11fd3e922\"\n+\"checksum flate2 0.2.19 (registry+https://github.com/rust-lang/crates.io-index)\" = \"36df0166e856739905cd3d7e0b210fe818592211a008862599845e012d8d304c\"\n \"checksum gcc 0.3.46 (registry+https://github.com/rust-lang/crates.io-index)\" = \"181e3cebba1d663bd92eb90e2da787e10597e027eb00de8d742b260a7850948f\"\n \"checksum getopts 0.2.14 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d9047cfbd08a437050b363d35ef160452c5fe8ea5187ae0a624708c91581d685\"\n \"checksum handlebars 0.25.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"663e1728d8037fb0d4e13bcd1b1909fb5d913690a9929eb385922df157c2ff8f\"\n \"checksum itoa 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"eb2f404fbc66fd9aac13e998248505e7ecb2ad8e44ab6388684c5fb11c6c251c\"\n \"checksum kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7507624b29483431c0ba2d82aece8ca6cdba9382bff4ddd0f7490560c056098d\"\n-\"checksum lazy_static 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4732c563b9a21a406565c4747daa7b46742f082911ae4753f390dc9ec7ee1a97\"\n+\"checksum lazy_static 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3b37545ab726dd833ec6420aaba8231c5b320814b9029ad585555d2a03e94fbf\"\n \"checksum libc 0.2.21 (registry+https://github.com/rust-lang/crates.io-index)\" = \"88ee81885f9f04bff991e306fea7c1c60a5f0f9e409e99f6b40e3311a3363135\"\n \"checksum log 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5141eca02775a762cc6cd564d8d2c50f67c0ea3a372cbf1c51592b3e029e10ad\"\n+\"checksum lzma-sys 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c5eaaa53b35fa17482ee2c001b04242827b47ae0faba72663fee3dee32366248\"\n \"checksum mdbook 0.0.21 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f1e2e9d848514dcfad4195788d0d42ae5153a477c191d75d5b84fab10f222fbd\"\n \"checksum memchr 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1dbccc0e46f1ea47b9f17e6d67c5a96bd27030519c519c9c91327e31275a47b4\"\n+\"checksum miniz-sys 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"28eaee17666671fa872e567547e8428e83308ebe5808cdf6a0e28397dbe2c726\"\n \"checksum num-traits 0.1.37 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e1cbfa3781f3fe73dc05321bed52a06d2d491eaa764c52335cf4399f046ece99\"\n \"checksum num_cpus 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ca313f1862c7ec3e0dfe8ace9fa91b1d9cb5c84ace3d00f5ec4216238e93c167\"\n \"checksum open 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3478ed1686bd1300c8a981a940abc92b06fac9cbef747f4c668d4e032ff7b842\"\n@@ -1023,10 +1175,13 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum regex-syntax 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2f9191b1f57603095f105d317e375d19b1c9c5c3185ea9633a99a6dcbed04457\"\n \"checksum rls-data 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fc4277ce3c57f456b11fe3145b181a844a25201bab5cbaa1978457e6e2f27d47\"\n \"checksum rls-span 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5d7c7046dc6a92f2ae02ed302746db4382e75131b9ce20ce967259f6b5867a6a\"\n+\"checksum rustc-demangle 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3058a43ada2c2d0b92b3ae38007a2d0fa5e9db971be260e0171408a4ff471c95\"\n \"checksum rustc-serialize 0.3.23 (registry+https://github.com/rust-lang/crates.io-index)\" = \"684ce48436d6465300c9ea783b6b14c4361d6b8dcbb1375b486a69cc19e2dfb0\"\n+\"checksum same-file 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d931a44fdaa43b8637009e7632a02adc4f2b2e0733c08caa4cf00e8da4a117a7\"\n \"checksum serde 0.9.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a702319c807c016e51f672e5c77d6f0b46afddd744b5e437d6b8436b888b458f\"\n \"checksum serde_json 0.9.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dbc45439552eb8fb86907a2c41c1fd0ef97458efb87ff7f878db466eb581824e\"\n \"checksum strsim 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b4d15c810519a91cf877e7e36e63fe068815c678181439f2f29e2562147c3694\"\n+\"checksum tar 0.4.12 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ab0ef9ead2fe0aa9e18475a96a207bfd5143f4124779ef7429503a8665416ce8\"\n \"checksum term_size 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"07b6c1ac5b3fffd75073276bca1ceed01f67a28537097a2a9539e116e50fb21a\"\n \"checksum thread-id 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4437c97558c70d129e40629a5b385b3fb1ffac301e63941335e4d354081ec14a\"\n \"checksum thread_local 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c85048c6260d17cf486ceae3282d9fb6b90be220bf5b28c400f5485ffc29f0c7\"\n@@ -1038,5 +1193,9 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum utf8-ranges 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"662fab6525a98beff2921d7f61a39e7d59e0b425ebc7d0d9e66d316e55124122\"\n \"checksum vec_map 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f8cdc8b93bd0198ed872357fb2e667f7125646b1762f16d60b2c96350d361897\"\n \"checksum void 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6a02e4885ed3bc0f2de90ea6dd45ebcbb66dacffe03547fadbb0eeae2770887d\"\n+\"checksum walkdir 1.0.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bb08f9e670fab86099470b97cd2b252d6527f0b3cc1401acdb595ffc9dd288ff\"\n \"checksum winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"167dc9d6949a9b857f3451275e911c3f44255842c1f7a76f33c55103a909087a\"\n \"checksum winapi-build 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2d315eee3b34aca4797b2da6b13ed88266e6d612562a0c46390af8299fc699bc\"\n+\"checksum xattr 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5f04de8a1346489a2f9e9bd8526b73d135ec554227b17568456e86aa35b6f3fc\"\n+\"checksum xz2 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e9510bdf100731599107c61f77daf46713a69a568f75458999c1f9dbf6ba25b0\"\n+\"checksum yaml-rust 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e66366e18dc58b46801afbf2ca7661a9f59cc8c5962c29892b6039b4f86fa992\""}, {"sha": "99e8b9f256afc4fb0d182877b1b6f608206361f6", "filename": "src/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/abe11831358f2c37a11ffddd679dd3e0a67827c8/src%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/abe11831358f2c37a11ffddd679dd3e0a67827c8/src%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.toml?ref=abe11831358f2c37a11ffddd679dd3e0a67827c8", "patch": "@@ -13,6 +13,7 @@ members = [\n   \"tools/build-manifest\",\n   \"tools/remote-test-client\",\n   \"tools/remote-test-server\",\n+  \"tools/rust-installer\",\n ]\n \n # These projects have their own Cargo.lock"}, {"sha": "6557b8410b196344fbd07be01166a079a82ea7f0", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 69, "deletions": 68, "changes": 137, "blob_url": "https://github.com/rust-lang/rust/blob/abe11831358f2c37a11ffddd679dd3e0a67827c8/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abe11831358f2c37a11ffddd679dd3e0a67827c8/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=abe11831358f2c37a11ffddd679dd3e0a67827c8", "patch": "@@ -26,12 +26,6 @@ use std::process::{Command, Stdio};\n \n use build_helper::output;\n \n-#[cfg(not(target_os = \"solaris\"))]\n-const SH_CMD: &'static str = \"sh\";\n-// On Solaris, sh is the historical bourne shell, not a POSIX shell, or bash.\n-#[cfg(target_os = \"solaris\")]\n-const SH_CMD: &'static str = \"bash\";\n-\n use {Build, Compiler, Mode};\n use channel;\n use util::{cp_r, libdir, is_dylib, cp_filtered, copy, exe};\n@@ -55,6 +49,10 @@ pub fn tmpdir(build: &Build) -> PathBuf {\n     build.out.join(\"tmp/dist\")\n }\n \n+fn rust_installer(build: &Build) -> Command {\n+    build.tool_cmd(&Compiler::new(0, &build.config.build), \"rust-installer\")\n+}\n+\n /// Builds the `rust-docs` installer component.\n ///\n /// Slurps up documentation from the `stage`'s `host`.\n@@ -74,14 +72,14 @@ pub fn docs(build: &Build, stage: u32, host: &str) {\n     let src = build.out.join(host).join(\"doc\");\n     cp_r(&src, &dst);\n \n-    let mut cmd = Command::new(SH_CMD);\n-    cmd.arg(sanitize_sh(&build.src.join(\"src/rust-installer/gen-installer.sh\")))\n+    let mut cmd = rust_installer(build);\n+    cmd.arg(\"generate\")\n        .arg(\"--product-name=Rust-Documentation\")\n        .arg(\"--rel-manifest-dir=rustlib\")\n        .arg(\"--success-message=Rust-documentation-is-installed.\")\n-       .arg(format!(\"--image-dir={}\", sanitize_sh(&image)))\n-       .arg(format!(\"--work-dir={}\", sanitize_sh(&tmpdir(build))))\n-       .arg(format!(\"--output-dir={}\", sanitize_sh(&distdir(build))))\n+       .arg(\"--image-dir\").arg(&image)\n+       .arg(\"--work-dir\").arg(&tmpdir(build))\n+       .arg(\"--output-dir\").arg(&distdir(build))\n        .arg(format!(\"--package-name={}-{}\", name, host))\n        .arg(\"--component-name=rust-docs\")\n        .arg(\"--legacy-manifest-dirs=rustlib,cargo\")\n@@ -124,14 +122,14 @@ pub fn mingw(build: &Build, host: &str) {\n        .arg(host);\n     build.run(&mut cmd);\n \n-    let mut cmd = Command::new(SH_CMD);\n-    cmd.arg(sanitize_sh(&build.src.join(\"src/rust-installer/gen-installer.sh\")))\n+    let mut cmd = rust_installer(build);\n+    cmd.arg(\"generate\")\n        .arg(\"--product-name=Rust-MinGW\")\n        .arg(\"--rel-manifest-dir=rustlib\")\n        .arg(\"--success-message=Rust-MinGW-is-installed.\")\n-       .arg(format!(\"--image-dir={}\", sanitize_sh(&image)))\n-       .arg(format!(\"--work-dir={}\", sanitize_sh(&tmpdir(build))))\n-       .arg(format!(\"--output-dir={}\", sanitize_sh(&distdir(build))))\n+       .arg(\"--image-dir\").arg(&image)\n+       .arg(\"--work-dir\").arg(&tmpdir(build))\n+       .arg(\"--output-dir\").arg(&distdir(build))\n        .arg(format!(\"--package-name={}-{}\", name, host))\n        .arg(\"--component-name=rust-mingw\")\n        .arg(\"--legacy-manifest-dirs=rustlib,cargo\");\n@@ -190,15 +188,15 @@ pub fn rustc(build: &Build, stage: u32, host: &str) {\n     }\n \n     // Finally, wrap everything up in a nice tarball!\n-    let mut cmd = Command::new(SH_CMD);\n-    cmd.arg(sanitize_sh(&build.src.join(\"src/rust-installer/gen-installer.sh\")))\n+    let mut cmd = rust_installer(build);\n+    cmd.arg(\"generate\")\n        .arg(\"--product-name=Rust\")\n        .arg(\"--rel-manifest-dir=rustlib\")\n        .arg(\"--success-message=Rust-is-ready-to-roll.\")\n-       .arg(format!(\"--image-dir={}\", sanitize_sh(&image)))\n-       .arg(format!(\"--work-dir={}\", sanitize_sh(&tmpdir(build))))\n-       .arg(format!(\"--output-dir={}\", sanitize_sh(&distdir(build))))\n-       .arg(format!(\"--non-installed-overlay={}\", sanitize_sh(&overlay)))\n+       .arg(\"--image-dir\").arg(&image)\n+       .arg(\"--work-dir\").arg(&tmpdir(build))\n+       .arg(\"--output-dir\").arg(&distdir(build))\n+       .arg(\"--non-installed-overlay\").arg(&overlay)\n        .arg(format!(\"--package-name={}-{}\", name, host))\n        .arg(\"--component-name=rustc\")\n        .arg(\"--legacy-manifest-dirs=rustlib,cargo\");\n@@ -300,14 +298,14 @@ pub fn std(build: &Build, compiler: &Compiler, target: &str) {\n     let src = build.sysroot(compiler).join(\"lib/rustlib\");\n     cp_r(&src.join(target), &dst);\n \n-    let mut cmd = Command::new(SH_CMD);\n-    cmd.arg(sanitize_sh(&build.src.join(\"src/rust-installer/gen-installer.sh\")))\n+    let mut cmd = rust_installer(build);\n+    cmd.arg(\"generate\")\n        .arg(\"--product-name=Rust\")\n        .arg(\"--rel-manifest-dir=rustlib\")\n        .arg(\"--success-message=std-is-standing-at-the-ready.\")\n-       .arg(format!(\"--image-dir={}\", sanitize_sh(&image)))\n-       .arg(format!(\"--work-dir={}\", sanitize_sh(&tmpdir(build))))\n-       .arg(format!(\"--output-dir={}\", sanitize_sh(&distdir(build))))\n+       .arg(\"--image-dir\").arg(&image)\n+       .arg(\"--work-dir\").arg(&tmpdir(build))\n+       .arg(\"--output-dir\").arg(&distdir(build))\n        .arg(format!(\"--package-name={}-{}\", name, target))\n        .arg(format!(\"--component-name=rust-std-{}\", target))\n        .arg(\"--legacy-manifest-dirs=rustlib,cargo\");\n@@ -356,14 +354,14 @@ pub fn analysis(build: &Build, compiler: &Compiler, target: &str) {\n     println!(\"image_src: {:?}, dst: {:?}\", image_src, dst);\n     cp_r(&image_src, &dst);\n \n-    let mut cmd = Command::new(SH_CMD);\n-    cmd.arg(sanitize_sh(&build.src.join(\"src/rust-installer/gen-installer.sh\")))\n+    let mut cmd = rust_installer(build);\n+    cmd.arg(\"generate\")\n        .arg(\"--product-name=Rust\")\n        .arg(\"--rel-manifest-dir=rustlib\")\n        .arg(\"--success-message=save-analysis-saved.\")\n-       .arg(format!(\"--image-dir={}\", sanitize_sh(&image)))\n-       .arg(format!(\"--work-dir={}\", sanitize_sh(&tmpdir(build))))\n-       .arg(format!(\"--output-dir={}\", sanitize_sh(&distdir(build))))\n+       .arg(\"--image-dir\").arg(&image)\n+       .arg(\"--work-dir\").arg(&tmpdir(build))\n+       .arg(\"--output-dir\").arg(&distdir(build))\n        .arg(format!(\"--package-name={}-{}\", name, target))\n        .arg(format!(\"--component-name=rust-analysis-{}\", target))\n        .arg(\"--legacy-manifest-dirs=rustlib,cargo\");\n@@ -471,13 +469,17 @@ pub fn rust_src(build: &Build) {\n     write_file(&plain_dst_src.join(\"version\"), build.rust_version().as_bytes());\n \n     // Create plain source tarball\n-    let tarball = rust_src_location(build);\n+    let mut tarball = rust_src_location(build);\n+    tarball.set_extension(\"\"); // strip .gz\n+    tarball.set_extension(\"\"); // strip .tar\n     if let Some(dir) = tarball.parent() {\n         t!(fs::create_dir_all(dir));\n     }\n-    let mut cmd = Command::new(\"tar\");\n-    cmd.arg(\"-czf\").arg(sanitize_sh(&tarball))\n-       .arg(&plain_name)\n+    let mut cmd = rust_installer(build);\n+    cmd.arg(\"tarball\")\n+       .arg(\"--input\").arg(&plain_name)\n+       .arg(\"--output\").arg(&tarball)\n+       .arg(\"--work-dir=.\")\n        .current_dir(tmpdir(build));\n     build.run(&mut cmd);\n \n@@ -521,14 +523,14 @@ pub fn rust_src(build: &Build) {\n     }\n \n     // Create source tarball in rust-installer format\n-    let mut cmd = Command::new(SH_CMD);\n-    cmd.arg(sanitize_sh(&build.src.join(\"src/rust-installer/gen-installer.sh\")))\n+    let mut cmd = rust_installer(build);\n+    cmd.arg(\"generate\")\n        .arg(\"--product-name=Rust\")\n        .arg(\"--rel-manifest-dir=rustlib\")\n        .arg(\"--success-message=Awesome-Source.\")\n-       .arg(format!(\"--image-dir={}\", sanitize_sh(&image)))\n-       .arg(format!(\"--work-dir={}\", sanitize_sh(&tmpdir(build))))\n-       .arg(format!(\"--output-dir={}\", sanitize_sh(&distdir(build))))\n+       .arg(\"--image-dir\").arg(&image)\n+       .arg(\"--work-dir\").arg(&tmpdir(build))\n+       .arg(\"--output-dir\").arg(&distdir(build))\n        .arg(format!(\"--package-name={}\", name))\n        .arg(\"--component-name=rust-src\")\n        .arg(\"--legacy-manifest-dirs=rustlib,cargo\");\n@@ -622,15 +624,15 @@ pub fn cargo(build: &Build, stage: u32, target: &str) {\n     t!(t!(File::create(overlay.join(\"version\"))).write_all(version.as_bytes()));\n \n     // Generate the installer tarball\n-    let mut cmd = Command::new(\"sh\");\n-    cmd.arg(sanitize_sh(&build.src.join(\"src/rust-installer/gen-installer.sh\")))\n+    let mut cmd = rust_installer(build);\n+    cmd.arg(\"generate\")\n        .arg(\"--product-name=Rust\")\n        .arg(\"--rel-manifest-dir=rustlib\")\n        .arg(\"--success-message=Rust-is-ready-to-roll.\")\n-       .arg(format!(\"--image-dir={}\", sanitize_sh(&image)))\n-       .arg(format!(\"--work-dir={}\", sanitize_sh(&tmpdir(build))))\n-       .arg(format!(\"--output-dir={}\", sanitize_sh(&distdir(build))))\n-       .arg(format!(\"--non-installed-overlay={}\", sanitize_sh(&overlay)))\n+       .arg(\"--image-dir\").arg(&image)\n+       .arg(\"--work-dir\").arg(&tmpdir(build))\n+       .arg(\"--output-dir\").arg(&distdir(build))\n+       .arg(\"--non-installed-overlay\").arg(&overlay)\n        .arg(format!(\"--package-name={}-{}\", name, target))\n        .arg(\"--component-name=cargo\")\n        .arg(\"--legacy-manifest-dirs=rustlib,cargo\");\n@@ -671,15 +673,15 @@ pub fn rls(build: &Build, stage: u32, target: &str) {\n     t!(t!(File::create(overlay.join(\"version\"))).write_all(version.as_bytes()));\n \n     // Generate the installer tarball\n-    let mut cmd = Command::new(\"sh\");\n-    cmd.arg(sanitize_sh(&build.src.join(\"src/rust-installer/gen-installer.sh\")))\n+    let mut cmd = rust_installer(build);\n+    cmd.arg(\"generate\")\n        .arg(\"--product-name=Rust\")\n        .arg(\"--rel-manifest-dir=rustlib\")\n        .arg(\"--success-message=RLS-ready-to-serve.\")\n-       .arg(format!(\"--image-dir={}\", sanitize_sh(&image)))\n-       .arg(format!(\"--work-dir={}\", sanitize_sh(&tmpdir(build))))\n-       .arg(format!(\"--output-dir={}\", sanitize_sh(&distdir(build))))\n-       .arg(format!(\"--non-installed-overlay={}\", sanitize_sh(&overlay)))\n+       .arg(\"--image-dir\").arg(&image)\n+       .arg(\"--work-dir\").arg(&tmpdir(build))\n+       .arg(\"--output-dir\").arg(&distdir(build))\n+       .arg(\"--non-installed-overlay\").arg(&overlay)\n        .arg(format!(\"--package-name={}-{}\", name, target))\n        .arg(\"--component-name=rls\")\n        .arg(\"--legacy-manifest-dirs=rustlib,cargo\");\n@@ -730,29 +732,28 @@ pub fn extended(build: &Build, stage: u32, target: &str) {\n     // upgrades rustc was upgraded before rust-std. To avoid rustc clobbering\n     // the std files during uninstall. To do this ensure that rustc comes\n     // before rust-std in the list below.\n-    let mut input_tarballs = format!(\"{},{},{},{},{},{}\",\n-                                     sanitize_sh(&rustc_installer),\n-                                     sanitize_sh(&cargo_installer),\n-                                     sanitize_sh(&rls_installer),\n-                                     sanitize_sh(&analysis_installer),\n-                                     sanitize_sh(&docs_installer),\n-                                     sanitize_sh(&std_installer));\n+    let mut tarballs = vec![rustc_installer, cargo_installer, rls_installer,\n+                            analysis_installer, docs_installer, std_installer];\n     if target.contains(\"pc-windows-gnu\") {\n-        input_tarballs.push_str(\",\");\n-        input_tarballs.push_str(&sanitize_sh(&mingw_installer));\n+        tarballs.push(mingw_installer);\n+    }\n+    let mut input_tarballs = tarballs[0].as_os_str().to_owned();\n+    for tarball in &tarballs[1..] {\n+        input_tarballs.push(\",\");\n+        input_tarballs.push(tarball);\n     }\n \n-    let mut cmd = Command::new(SH_CMD);\n-    cmd.arg(sanitize_sh(&build.src.join(\"src/rust-installer/combine-installers.sh\")))\n+    let mut cmd = rust_installer(build);\n+    cmd.arg(\"combine\")\n        .arg(\"--product-name=Rust\")\n        .arg(\"--rel-manifest-dir=rustlib\")\n        .arg(\"--success-message=Rust-is-ready-to-roll.\")\n-       .arg(format!(\"--work-dir={}\", sanitize_sh(&work)))\n-       .arg(format!(\"--output-dir={}\", sanitize_sh(&distdir(build))))\n+       .arg(\"--work-dir\").arg(&work)\n+       .arg(\"--output-dir\").arg(&distdir(build))\n        .arg(format!(\"--package-name={}-{}\", pkgname(build, \"rust\"), target))\n        .arg(\"--legacy-manifest-dirs=rustlib,cargo\")\n-       .arg(format!(\"--input-tarballs={}\", input_tarballs))\n-       .arg(format!(\"--non-installed-overlay={}\", sanitize_sh(&overlay)));\n+       .arg(\"--input-tarballs\").arg(input_tarballs)\n+       .arg(\"--non-installed-overlay\").arg(&overlay);\n     build.run(&mut cmd);\n \n     let mut license = String::new();"}, {"sha": "92666e8e63907caec309922aae24759a968fdd33", "filename": "src/bootstrap/step.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/abe11831358f2c37a11ffddd679dd3e0a67827c8/src%2Fbootstrap%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abe11831358f2c37a11ffddd679dd3e0a67827c8/src%2Fbootstrap%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fstep.rs?ref=abe11831358f2c37a11ffddd679dd3e0a67827c8", "patch": "@@ -574,6 +574,10 @@ pub fn build_rules<'a>(build: &'a Build) -> Rules {\n          .dep(|s| s.name(\"maybe-clean-tools\"))\n          .dep(|s| s.name(\"libstd-tool\"))\n          .run(move |s| compile::tool(build, s.stage, s.target, \"remote-test-client\"));\n+    rules.build(\"tool-rust-installer\", \"src/tools/rust-installer\")\n+         .dep(|s| s.name(\"maybe-clean-tools\"))\n+         .dep(|s| s.name(\"libstd-tool\"))\n+         .run(move |s| compile::tool(build, s.stage, s.target, \"rust-installer\"));\n     rules.build(\"tool-cargo\", \"src/tools/cargo\")\n          .host(true)\n          .default(build.config.extended)\n@@ -704,6 +708,7 @@ pub fn build_rules<'a>(build: &'a Build) -> Rules {\n          .host(true)\n          .only_host_build(true)\n          .default(true)\n+         .dep(move |s| tool_rust_installer(build, s))\n          .run(move |s| dist::rustc(build, s.stage, s.target));\n     rules.dist(\"dist-std\", \"src/libstd\")\n          .dep(move |s| {\n@@ -718,10 +723,12 @@ pub fn build_rules<'a>(build: &'a Build) -> Rules {\n          })\n          .default(true)\n          .only_host_build(true)\n+         .dep(move |s| tool_rust_installer(build, s))\n          .run(move |s| dist::std(build, &s.compiler(), s.target));\n     rules.dist(\"dist-mingw\", \"path/to/nowhere\")\n          .default(true)\n          .only_host_build(true)\n+         .dep(move |s| tool_rust_installer(build, s))\n          .run(move |s| {\n              if s.target.contains(\"pc-windows-gnu\") {\n                  dist::mingw(build, s.target)\n@@ -732,21 +739,25 @@ pub fn build_rules<'a>(build: &'a Build) -> Rules {\n          .host(true)\n          .only_build(true)\n          .only_host_build(true)\n+         .dep(move |s| tool_rust_installer(build, s))\n          .run(move |_| dist::rust_src(build));\n     rules.dist(\"dist-docs\", \"src/doc\")\n          .default(true)\n          .only_host_build(true)\n          .dep(|s| s.name(\"default:doc\"))\n+         .dep(move |s| tool_rust_installer(build, s))\n          .run(move |s| dist::docs(build, s.stage, s.target));\n     rules.dist(\"dist-analysis\", \"analysis\")\n          .default(build.config.extended)\n          .dep(|s| s.name(\"dist-std\"))\n          .only_host_build(true)\n+         .dep(move |s| tool_rust_installer(build, s))\n          .run(move |s| dist::analysis(build, &s.compiler(), s.target));\n     rules.dist(\"dist-rls\", \"rls\")\n          .host(true)\n          .only_host_build(true)\n          .dep(|s| s.name(\"tool-rls\"))\n+         .dep(move |s| tool_rust_installer(build, s))\n          .run(move |s| dist::rls(build, s.stage, s.target));\n     rules.dist(\"install\", \"path/to/nowhere\")\n          .dep(|s| s.name(\"default:dist\"))\n@@ -755,6 +766,7 @@ pub fn build_rules<'a>(build: &'a Build) -> Rules {\n          .host(true)\n          .only_host_build(true)\n          .dep(|s| s.name(\"tool-cargo\"))\n+         .dep(move |s| tool_rust_installer(build, s))\n          .run(move |s| dist::cargo(build, s.stage, s.target));\n     rules.dist(\"dist-extended\", \"extended\")\n          .default(build.config.extended)\n@@ -767,6 +779,7 @@ pub fn build_rules<'a>(build: &'a Build) -> Rules {\n          .dep(|d| d.name(\"dist-cargo\"))\n          .dep(|d| d.name(\"dist-rls\"))\n          .dep(|d| d.name(\"dist-analysis\"))\n+         .dep(move |s| tool_rust_installer(build, s))\n          .run(move |s| dist::extended(build, s.stage, s.target));\n \n     rules.dist(\"dist-sign\", \"hash-and-sign\")\n@@ -778,6 +791,14 @@ pub fn build_rules<'a>(build: &'a Build) -> Rules {\n \n     rules.verify();\n     return rules;\n+\n+    /// Helper to depend on a stage0 build-only rust-installer tool.\n+    fn tool_rust_installer<'a>(build: &'a Build, step: &Step<'a>) -> Step<'a> {\n+        step.name(\"tool-rust-installer\")\n+            .host(&build.config.build)\n+            .target(&build.config.build)\n+            .stage(0)\n+    }\n }\n \n #[derive(PartialEq, Eq, Hash, Clone, Debug)]"}, {"sha": "2e6417f6af5218a29a8ee72ed17af085560b9b9c", "filename": "src/rust-installer", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frust-installer?ref=75b05681239cb309a23fcb4f8864f177e5aa62da", "patch": "@@ -1 +0,0 @@\n-Subproject commit 2e6417f6af5218a29a8ee72ed17af085560b9b9c"}, {"sha": "6a2c5d129101762d204185b888d62a244011c422", "filename": "src/tools/rust-installer", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frust-installer?ref=abe11831358f2c37a11ffddd679dd3e0a67827c8", "patch": "@@ -0,0 +1 @@\n+Subproject commit 6a2c5d129101762d204185b888d62a244011c422"}, {"sha": "6b666fa809f7a8cbfeb1d099ff25289eaed5834f", "filename": "src/tools/tidy/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abe11831358f2c37a11ffddd679dd3e0a67827c8/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abe11831358f2c37a11ffddd679dd3e0a67827c8/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs?ref=abe11831358f2c37a11ffddd679dd3e0a67827c8", "patch": "@@ -81,12 +81,12 @@ fn filter_dirs(path: &Path) -> bool {\n         \"src/libbacktrace\",\n         \"src/compiler-rt\",\n         \"src/rustllvm\",\n-        \"src/rust-installer\",\n         \"src/liblibc\",\n         \"src/vendor\",\n         \"src/rt/hoedown\",\n         \"src/tools/cargo\",\n         \"src/tools/rls\",\n+        \"src/tools/rust-installer\",\n     ];\n     skip.iter().any(|p| path.ends_with(p))\n }"}]}