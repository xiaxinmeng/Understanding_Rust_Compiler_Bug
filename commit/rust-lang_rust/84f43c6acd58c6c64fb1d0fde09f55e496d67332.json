{"sha": "84f43c6acd58c6c64fb1d0fde09f55e496d67332", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0ZjQzYzZhY2Q1OGM2YzY0ZmIxZDBmZGUwOWY1NWU0OTZkNjczMzI=", "commit": {"author": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2014-05-20T20:53:30Z"}, "committer": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2014-05-20T20:53:30Z"}, "message": "Add non-utf8 byte to the bytes!() example\n\nOnly an example was needed, as the ability to write uints into the string is\nalready mentioned.\n\nFix #7102.", "tree": {"sha": "00c6ae15e00e497087600989df3ac6fba9e249b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00c6ae15e00e497087600989df3ac6fba9e249b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84f43c6acd58c6c64fb1d0fde09f55e496d67332", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84f43c6acd58c6c64fb1d0fde09f55e496d67332", "html_url": "https://github.com/rust-lang/rust/commit/84f43c6acd58c6c64fb1d0fde09f55e496d67332", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84f43c6acd58c6c64fb1d0fde09f55e496d67332/comments", "author": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9bd6b4e3900da77f06ebad04ae6bada1e26e042", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9bd6b4e3900da77f06ebad04ae6bada1e26e042", "html_url": "https://github.com/rust-lang/rust/commit/f9bd6b4e3900da77f06ebad04ae6bada1e26e042"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "1c616bdcbbf7c774b5f09d2a61f6d2c0a31d87cc", "filename": "src/libstd/macros.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/84f43c6acd58c6c64fb1d0fde09f55e496d67332/src%2Flibstd%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84f43c6acd58c6c64fb1d0fde09f55e496d67332/src%2Flibstd%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmacros.rs?ref=84f43c6acd58c6c64fb1d0fde09f55e496d67332", "patch": "@@ -471,8 +471,9 @@ pub mod builtin {\n     /// # Example\n     ///\n     /// ```\n-    /// let rust = bytes!(\"r\", 'u', \"st\");\n+    /// let rust = bytes!(\"r\", 'u', \"st\", 255);\n     /// assert_eq!(rust[1], 'u' as u8);\n+    /// assert_eq!(rust[5], 255);\n     /// ```\n     #[macro_export]\n     macro_rules! bytes( ($($e:expr),*) => ({ /* compiler built-in */ }) )"}]}