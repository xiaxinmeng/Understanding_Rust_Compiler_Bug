{"sha": "ff24ac4f2b1415cc93e0cc3edb70097df6dae073", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmMjRhYzRmMmIxNDE1Y2M5M2UwY2MzZWRiNzAwOTdkZjZkYWUwNzM=", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-08-25T14:30:09Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-08-27T05:07:38Z"}, "message": "Try fixing some tests", "tree": {"sha": "c7ac8411e8155a93a9f5bea53c70c0fe7b44a2af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7ac8411e8155a93a9f5bea53c70c0fe7b44a2af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff24ac4f2b1415cc93e0cc3edb70097df6dae073", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEQ7Fl7qPq2YcWF1dqAn35M4hird0FAmEocxoACgkQAn35M4hi\nrd3o5Q/+JBMSpo02ohzx4dQKgl0zC3SsYepNQtI8vHNQNptTLWMDybRtuzINvSNY\nImjgl3h62/705+zcP9Nbr0ZeI1gVN0HpKKKxeV8Yv7ev1Hjd8HC9S947XCSUtAry\nqtvbQg16VPCENtK3RNvLYsMJVHubSIttRBgtMiOHnZx2pI7ySkC8aqISOX4fhOYm\nqLVvFvRcjo+vpMKXNq99V8lwy8jg/Rj+74lKOp71hbnzX40ouFo3uR9VxsGu8wSU\nCOWr24Hl0lROxLIGbtS+4wXhUGDEm/8NedYPFwwXRBuxUMkMFA5SXisLsb/+9MkC\n/t2z+TtN9dhmxVH/CiPKnUuONsNwBeg0AF+wpWFjC7YNqHObDsHz42Itw/BDgL14\nUqZkjl4lIEUplqQHsc4h5DXe0mqPyy/HNucUwa9wMfCamE/IOO8IpI63y8dFDaQZ\n9x0ybu4HX+53ioaJ4CL3x1V+rUMvEXMGt2gHA2VH5a8I6pM9xoDOI5ck3xFCEcrl\niXGvbWO1gY9HbXUGzJUNZ3Am1R3HBgxkjJhA2s6ah10Z+7d/D1AH43O0bvmje5f/\ngr/pabUxZxjMOhde5vJJPawyIYVzgVueAGtxcEHnCW6kclxX0fY9AKl4BCRHdanz\n6oxr0dJ6Y+CubXSig3Bl0HU58PicUVk6MbTmVBFR4xFShfL3DhU=\n=eJz/\n-----END PGP SIGNATURE-----", "payload": "tree c7ac8411e8155a93a9f5bea53c70c0fe7b44a2af\nparent 1164c946b0a5889f6f0ca1dba48db0cf36c32915\nauthor Deadbeef <ent3rm4n@gmail.com> 1629901809 +0000\ncommitter Deadbeef <ent3rm4n@gmail.com> 1630040858 +0000\n\nTry fixing some tests\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff24ac4f2b1415cc93e0cc3edb70097df6dae073", "html_url": "https://github.com/rust-lang/rust/commit/ff24ac4f2b1415cc93e0cc3edb70097df6dae073", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff24ac4f2b1415cc93e0cc3edb70097df6dae073/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1164c946b0a5889f6f0ca1dba48db0cf36c32915", "url": "https://api.github.com/repos/rust-lang/rust/commits/1164c946b0a5889f6f0ca1dba48db0cf36c32915", "html_url": "https://github.com/rust-lang/rust/commit/1164c946b0a5889f6f0ca1dba48db0cf36c32915"}], "stats": {"total": 307, "additions": 52, "deletions": 255}, "files": [{"sha": "5853b66b868a5898cb71870e3959866bc0fb0700", "filename": "src/test/ui/rfc-2632-const-trait-impl/call-generic-method-dup-bound.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ff24ac4f2b1415cc93e0cc3edb70097df6dae073/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-dup-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff24ac4f2b1415cc93e0cc3edb70097df6dae073/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-dup-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-dup-bound.rs?ref=ff24ac4f2b1415cc93e0cc3edb70097df6dae073", "patch": "@@ -1,9 +1,7 @@\n // check-pass\n \n #![feature(const_trait_impl)]\n-#![feature(const_trait_bound_opt_out)]\n #![feature(const_fn_trait_bound)]\n-#![allow(incomplete_features)]\n \n struct S;\n \n@@ -16,9 +14,9 @@ impl const PartialEq for S {\n     }\n }\n \n-// This duplicate bound should not result in ambiguities. It should be equivalent to a single const\n+// This duplicate bound should not result in ambiguities. It should be equivalent to a single ~const\n // bound.\n-const fn equals_self<T: PartialEq + ?const PartialEq>(t: &T) -> bool {\n+const fn equals_self<T: PartialEq + ~const PartialEq>(t: &T) -> bool {\n     *t == *t\n }\n "}, {"sha": "e96249ff2fd5a4710f2c9b68166e438e136dc9f0", "filename": "src/test/ui/rfc-2632-const-trait-impl/call-generic-method-fail.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff24ac4f2b1415cc93e0cc3edb70097df6dae073/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff24ac4f2b1415cc93e0cc3edb70097df6dae073/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-fail.rs?ref=ff24ac4f2b1415cc93e0cc3edb70097df6dae073", "patch": "@@ -1,9 +1,7 @@\n #![feature(const_fn_trait_bound)]\n #![feature(const_trait_impl)]\n-#![feature(const_trait_bound_opt_out)]\n-#![allow(incomplete_features)]\n \n-pub const fn equals_self<T: ?const PartialEq>(t: &T) -> bool {\n+pub const fn equals_self<T: PartialEq>(t: &T) -> bool {\n     *t == *t\n     //~^ ERROR calls in constant functions are limited to constant functions\n }"}, {"sha": "585b65988f390ade606315e687ef8895e48fad73", "filename": "src/test/ui/rfc-2632-const-trait-impl/call-generic-method-nonconst-bound.rs", "status": "renamed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ff24ac4f2b1415cc93e0cc3edb70097df6dae073/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-nonconst-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff24ac4f2b1415cc93e0cc3edb70097df6dae073/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-nonconst-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-nonconst-bound.rs?ref=ff24ac4f2b1415cc93e0cc3edb70097df6dae073", "patch": "@@ -1,9 +1,6 @@\n // check-pass\n \n #![feature(const_fn_trait_bound)]\n-#![feature(const_trait_impl)]\n-#![feature(const_trait_bound_opt_out)]\n-#![allow(incomplete_features)]\n \n struct S;\n ", "previous_filename": "src/test/ui/rfc-2632-const-trait-impl/call-generic-method-nonconst-opt-out.rs"}, {"sha": "58041454d5901058fa3cc093586d8b9f48cc852d", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/feature-gate.gated.stderr", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Ffeature-gate.gated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Ffeature-gate.gated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Ffeature-gate.gated.stderr?ref=1164c946b0a5889f6f0ca1dba48db0cf36c32915", "patch": "@@ -1,8 +0,0 @@\n-error: fatal error triggered by #[rustc_error]\n-  --> $DIR/feature-gate.rs:17:1\n-   |\n-LL | fn main() {}\n-   | ^^^^^^^^^\n-\n-error: aborting due to previous error\n-"}, {"sha": "4452ad7ea239c1992fbe59e70ea382cef839c4d1", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/feature-gate.rs", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Ffeature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Ffeature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Ffeature-gate.rs?ref=1164c946b0a5889f6f0ca1dba48db0cf36c32915", "patch": "@@ -1,17 +0,0 @@\n-// revisions: stock gated\n-// gate-test-const_trait_bound_opt_out\n-\n-#![cfg_attr(gated, feature(const_trait_bound_opt_out))]\n-#![allow(incomplete_features)]\n-#![feature(rustc_attrs)]\n-#![feature(const_fn_trait_bound)]\n-\n-trait T {\n-    const CONST: i32;\n-}\n-\n-const fn get_assoc_const<S: ?const T>() -> i32 { <S as T>::CONST }\n-//[stock]~^ ERROR `?const` on trait bounds is experimental\n-\n-#[rustc_error]\n-fn main() {} //[gated]~ ERROR fatal error triggered by #[rustc_error]"}, {"sha": "8ae8b8868ddedaccb09b96b8af1d45e9cf28bf5b", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/feature-gate.stock.stderr", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Ffeature-gate.stock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Ffeature-gate.stock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Ffeature-gate.stock.stderr?ref=1164c946b0a5889f6f0ca1dba48db0cf36c32915", "patch": "@@ -1,12 +0,0 @@\n-error[E0658]: `?const` on trait bounds is experimental\n-  --> $DIR/feature-gate.rs:13:29\n-   |\n-LL | const fn get_assoc_const<S: ?const T>() -> i32 { <S as T>::CONST }\n-   |                             ^^^^^^\n-   |\n-   = note: see issue #67794 <https://github.com/rust-lang/rust/issues/67794> for more information\n-   = help: add `#![feature(const_trait_bound_opt_out)]` to the crate attributes to enable\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0658`."}, {"sha": "f5561a922ddcd7555d6803c57332fc405f372266", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/in-impl-trait.rs", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-impl-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-impl-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-impl-trait.rs?ref=1164c946b0a5889f6f0ca1dba48db0cf36c32915", "patch": "@@ -1,21 +0,0 @@\n-#![feature(const_trait_bound_opt_out)]\n-#![feature(associated_type_bounds)]\n-#![allow(incomplete_features)]\n-\n-trait T {}\n-struct S;\n-impl T for S {}\n-\n-fn rpit() -> impl ?const T { S }\n-//~^ ERROR `?const` is not permitted in `impl Trait`\n-\n-fn apit(_: impl ?const T) {}\n-//~^ ERROR `?const` is not permitted in `impl Trait`\n-\n-fn rpit_assoc_bound() -> impl IntoIterator<Item: ?const T> { Some(S) }\n-//~^ ERROR `?const` is not permitted in `impl Trait`\n-\n-fn apit_assoc_bound(_: impl IntoIterator<Item: ?const T>) {}\n-//~^ ERROR `?const` is not permitted in `impl Trait`\n-\n-fn main() {}"}, {"sha": "06cd00a956a2d99999ad837e585e3c4668af4404", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/in-impl-trait.stderr", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-impl-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-impl-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-impl-trait.stderr?ref=1164c946b0a5889f6f0ca1dba48db0cf36c32915", "patch": "@@ -1,26 +0,0 @@\n-error: `?const` is not permitted in `impl Trait`\n-  --> $DIR/in-impl-trait.rs:9:19\n-   |\n-LL | fn rpit() -> impl ?const T { S }\n-   |                   ^^^^^^^^\n-\n-error: `?const` is not permitted in `impl Trait`\n-  --> $DIR/in-impl-trait.rs:12:17\n-   |\n-LL | fn apit(_: impl ?const T) {}\n-   |                 ^^^^^^^^\n-\n-error: `?const` is not permitted in `impl Trait`\n-  --> $DIR/in-impl-trait.rs:15:50\n-   |\n-LL | fn rpit_assoc_bound() -> impl IntoIterator<Item: ?const T> { Some(S) }\n-   |                                                  ^^^^^^^^\n-\n-error: `?const` is not permitted in `impl Trait`\n-  --> $DIR/in-impl-trait.rs:18:48\n-   |\n-LL | fn apit_assoc_bound(_: impl IntoIterator<Item: ?const T>) {}\n-   |                                                ^^^^^^^^\n-\n-error: aborting due to 4 previous errors\n-"}, {"sha": "fc9ed5b1dc22e10ab2101576d623266c0dccef17", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/in-trait-bounds.rs", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-bounds.rs?ref=1164c946b0a5889f6f0ca1dba48db0cf36c32915", "patch": "@@ -1,8 +0,0 @@\n-#![feature(const_trait_bound_opt_out)]\n-#![allow(incomplete_features)]\n-\n-trait Super {}\n-trait T: ?const Super {}\n-//~^ ERROR `?const` is not permitted in supertraits\n-\n-fn main() {}"}, {"sha": "a0d8f95acd2a839313f73b39b3ed399f9f351b68", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/in-trait-bounds.stderr", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-bounds.stderr?ref=1164c946b0a5889f6f0ca1dba48db0cf36c32915", "patch": "@@ -1,8 +0,0 @@\n-error: `?const` is not permitted in supertraits\n-  --> $DIR/in-trait-bounds.rs:5:10\n-   |\n-LL | trait T: ?const Super {}\n-   |          ^^^^^^^^^^^^\n-\n-error: aborting due to previous error\n-"}, {"sha": "b3d1f48ace147403190ef7e220b17950619c95c1", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/in-trait-object.rs", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-object.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-object.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-object.rs?ref=1164c946b0a5889f6f0ca1dba48db0cf36c32915", "patch": "@@ -1,19 +0,0 @@\n-#![feature(const_trait_bound_opt_out)]\n-#![allow(bare_trait_objects)]\n-#![allow(incomplete_features)]\n-\n-struct S;\n-trait T {}\n-impl T for S {}\n-\n-// An inherent impl for the trait object `?const T`.\n-impl ?const T {}\n-//~^ ERROR `?const` is not permitted in trait objects\n-\n-fn trait_object() -> &'static dyn ?const T { &S }\n-//~^ ERROR `?const` is not permitted in trait objects\n-\n-fn trait_object_in_apit(_: impl IntoIterator<Item = Box<dyn ?const T>>) {}\n-//~^ ERROR `?const` is not permitted in trait objects\n-\n-fn main() {}"}, {"sha": "331fe0423fa9499abfedb7cb525dbc99bc9fb178", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/in-trait-object.stderr", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-object.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-object.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fin-trait-object.stderr?ref=1164c946b0a5889f6f0ca1dba48db0cf36c32915", "patch": "@@ -1,20 +0,0 @@\n-error: `?const` is not permitted in trait objects\n-  --> $DIR/in-trait-object.rs:10:6\n-   |\n-LL | impl ?const T {}\n-   |      ^^^^^^^^\n-\n-error: `?const` is not permitted in trait objects\n-  --> $DIR/in-trait-object.rs:13:35\n-   |\n-LL | fn trait_object() -> &'static dyn ?const T { &S }\n-   |                                   ^^^^^^^^\n-\n-error: `?const` is not permitted in trait objects\n-  --> $DIR/in-trait-object.rs:16:61\n-   |\n-LL | fn trait_object_in_apit(_: impl IntoIterator<Item = Box<dyn ?const T>>) {}\n-   |                                                             ^^^^^^^^\n-\n-error: aborting due to 3 previous errors\n-"}, {"sha": "01e941a8fba451fe03f59f59041d29a1c4fa1af2", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/opt-out-twice.rs", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fopt-out-twice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fopt-out-twice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fopt-out-twice.rs?ref=1164c946b0a5889f6f0ca1dba48db0cf36c32915", "patch": "@@ -1,8 +0,0 @@\n-// compile-flags: -Z parse-only\n-\n-#![feature(const_trait_bound_opt_out)]\n-#![allow(incomplete_features)]\n-\n-struct S<T: ?const ?const Tr>;\n-//~^ ERROR expected identifier, found keyword `const`\n-//~| ERROR expected one of `(`, `+`, `,`, `::`, `<`, `=`, or `>`"}, {"sha": "f7924b3f24db39a0b176323c00824bdfca18d3d5", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/opt-out-twice.stderr", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fopt-out-twice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fopt-out-twice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fopt-out-twice.stderr?ref=1164c946b0a5889f6f0ca1dba48db0cf36c32915", "patch": "@@ -1,14 +0,0 @@\n-error: expected identifier, found keyword `const`\n-  --> $DIR/opt-out-twice.rs:6:21\n-   |\n-LL | struct S<T: ?const ?const Tr>;\n-   |                     ^^^^^ expected identifier, found keyword\n-\n-error: expected one of `(`, `+`, `,`, `::`, `<`, `=`, or `>`, found `Tr`\n-  --> $DIR/opt-out-twice.rs:6:27\n-   |\n-LL | struct S<T: ?const ?const Tr>;\n-   |                           ^^ expected one of 7 possible tokens\n-\n-error: aborting due to 2 previous errors\n-"}, {"sha": "a0d9610bbb5e2b6517648d34923757c46894be62", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/syntax.rs", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fsyntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fsyntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fsyntax.rs?ref=1164c946b0a5889f6f0ca1dba48db0cf36c32915", "patch": "@@ -1,10 +0,0 @@\n-// compile-flags: -Z parse-only\n-// check-pass\n-\n-#![feature(const_trait_bound_opt_out)]\n-#![allow(incomplete_features)]\n-\n-struct S<\n-    T: ?const ?for<'a> Tr<'a> + 'static + ?const std::ops::Add,\n-    T: ?const ?for<'a: 'b> m::Trait<'a>,\n->;"}, {"sha": "c2c8689e2942bcd33ba2ad795acd56b809544537", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/with-maybe-sized.rs", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fwith-maybe-sized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fwith-maybe-sized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fwith-maybe-sized.rs?ref=1164c946b0a5889f6f0ca1dba48db0cf36c32915", "patch": "@@ -1,7 +0,0 @@\n-#![feature(const_trait_bound_opt_out)]\n-#![allow(incomplete_features)]\n-\n-struct S<T: ?const ?Sized>(std::marker::PhantomData<T>);\n-//~^ ERROR `?const` and `?` are mutually exclusive\n-\n-fn main() {}"}, {"sha": "e8e9d6c1e76215671845463d21c0656e70b5e111", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/with-maybe-sized.stderr", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fwith-maybe-sized.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fwith-maybe-sized.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fwith-maybe-sized.stderr?ref=1164c946b0a5889f6f0ca1dba48db0cf36c32915", "patch": "@@ -1,8 +0,0 @@\n-error: `?const` and `?` are mutually exclusive\n-  --> $DIR/with-maybe-sized.rs:4:13\n-   |\n-LL | struct S<T: ?const ?Sized>(std::marker::PhantomData<T>);\n-   |             ^^^^^^^^^^^^^\n-\n-error: aborting due to previous error\n-"}, {"sha": "b904a2eec0dd0f531e998be78a2694059869f0f5", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/without-question-mark.rs", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fwithout-question-mark.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fwithout-question-mark.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fwithout-question-mark.rs?ref=1164c946b0a5889f6f0ca1dba48db0cf36c32915", "patch": "@@ -1,7 +0,0 @@\n-// compile-flags: -Z parse-only\n-\n-#![feature(const_trait_bound_opt_out)]\n-#![allow(incomplete_features)]\n-\n-struct S<T: const Tr>;\n-//~^ ERROR expected one of `!`, `(`, `,`, `=`, `>`, `?`, `for`, lifetime, or path"}, {"sha": "0dbca952c037ec8161df6a9bcc3a94d56328916a", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-trait-bound-opt-out/without-question-mark.stderr", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fwithout-question-mark.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fwithout-question-mark.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-trait-bound-opt-out%2Fwithout-question-mark.stderr?ref=1164c946b0a5889f6f0ca1dba48db0cf36c32915", "patch": "@@ -1,8 +0,0 @@\n-error: expected one of `!`, `(`, `,`, `=`, `>`, `?`, `for`, lifetime, or path, found keyword `const`\n-  --> $DIR/without-question-mark.rs:6:13\n-   |\n-LL | struct S<T: const Tr>;\n-   |             ^^^^^ expected one of 9 possible tokens\n-\n-error: aborting due to previous error\n-"}, {"sha": "8f923efb093f3f0feffae3c9e765a661b0535a93", "filename": "src/test/ui/rfc-2632-const-trait-impl/impl-opt-out-trait.stderr", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fimpl-opt-out-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fimpl-opt-out-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fimpl-opt-out-trait.stderr?ref=1164c946b0a5889f6f0ca1dba48db0cf36c32915", "patch": "@@ -1,8 +0,0 @@\n-error: expected a trait, found type\n-  --> $DIR/impl-opt-out-trait.rs:8:6\n-   |\n-LL | impl ?const T for S {}\n-   |      ^^^^^^^^\n-\n-error: aborting due to previous error\n-"}, {"sha": "05b26465c5b0c395ba57e625bde6abb6a5b47161", "filename": "src/test/ui/rfc-2632-const-trait-impl/impl-tilde-const-trait.rs", "status": "renamed", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff24ac4f2b1415cc93e0cc3edb70097df6dae073/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fimpl-tilde-const-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff24ac4f2b1415cc93e0cc3edb70097df6dae073/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fimpl-tilde-const-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fimpl-tilde-const-trait.rs?ref=ff24ac4f2b1415cc93e0cc3edb70097df6dae073", "patch": "@@ -1,11 +1,9 @@\n-#![feature(const_trait_bound_opt_out)]\n #![feature(const_trait_impl)]\n-#![allow(incomplete_features)]\n \n struct S;\n trait T {}\n \n-impl ?const T for S {}\n+impl ~const T for S {}\n //~^ ERROR expected a trait, found type\n \n fn main() {}", "previous_filename": "src/test/ui/rfc-2632-const-trait-impl/impl-opt-out-trait.rs"}, {"sha": "afd0d137bb4aadf8565a12443527e43e2ba5a760", "filename": "src/test/ui/rfc-2632-const-trait-impl/inherent-impl.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff24ac4f2b1415cc93e0cc3edb70097df6dae073/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Finherent-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff24ac4f2b1415cc93e0cc3edb70097df6dae073/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Finherent-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Finherent-impl.rs?ref=ff24ac4f2b1415cc93e0cc3edb70097df6dae073", "patch": "@@ -1,6 +1,4 @@\n #![feature(const_trait_impl)]\n-#![feature(const_trait_bound_opt_out)]\n-#![allow(incomplete_features)]\n #![allow(bare_trait_objects)]\n \n struct S;"}, {"sha": "7ac2458e3992850d051422629f17de153eca752f", "filename": "src/test/ui/rfc-2632-const-trait-impl/syntax.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff24ac4f2b1415cc93e0cc3edb70097df6dae073/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fsyntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff24ac4f2b1415cc93e0cc3edb70097df6dae073/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fsyntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fsyntax.rs?ref=ff24ac4f2b1415cc93e0cc3edb70097df6dae073", "patch": "@@ -5,4 +5,4 @@\n #![feature(const_trait_impl)]\n \n // For now, this parses since an error does not occur until AST lowering.\n-impl ?const T {}\n+impl ~const T {}"}, {"sha": "a8912705d94587ce8e2109ddd1c802b87dd07c30", "filename": "src/test/ui/rfc-2632-const-trait-impl/tilde-const-invalid-places.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/ff24ac4f2b1415cc93e0cc3edb70097df6dae073/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ftilde-const-invalid-places.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff24ac4f2b1415cc93e0cc3edb70097df6dae073/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ftilde-const-invalid-places.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ftilde-const-invalid-places.rs?ref=ff24ac4f2b1415cc93e0cc3edb70097df6dae073", "patch": "@@ -0,0 +1,38 @@\n+#![feature(const_trait_impl)]\n+#![feature(associated_type_bounds)]\n+\n+trait T {}\n+struct S;\n+impl T for S {}\n+\n+fn rpit() -> impl ~const T { S }\n+//~^ ERROR `~const` is not allowed\n+\n+fn apit(_: impl ~const T) {}\n+//~^ ERROR `~const` is not allowed\n+\n+fn rpit_assoc_bound() -> impl IntoIterator<Item: ~const T> { Some(S) }\n+//~^ ERROR `~const` is not allowed\n+\n+fn apit_assoc_bound(_: impl IntoIterator<Item: ~const T>) {}\n+//~^ ERROR `~const` is not allowed\n+\n+fn generic<T: ~const T>() {}\n+//~^ ERROR `~const` is not allowed\n+\n+fn where_clause<T>() where T: ~const T {}\n+//~^ ERROR `~const` is not allowed\n+\n+impl ~const T {}\n+//~^ ERROR `~const` is not allowed\n+\n+fn trait_object() -> &'static dyn ~const T { &S }\n+//~^ ERROR `~const` is not allowed\n+\n+fn trait_object_in_apit(_: impl IntoIterator<Item = Box<dyn ~const T>>) {}\n+//~^ ERROR `~const` is not allowed\n+\n+struct S<T: ~const ?Sized>(std::marker::PhantomData<T>);\n+//~^ ERROR `~const` and `?` are mutually exclusive\n+\n+fn main() {}"}, {"sha": "cde5233d4c88bc968686d88f4d0a3f2ccbadf422", "filename": "src/test/ui/rfc-2632-const-trait-impl/tilde-const-on-non-const-fn.rs", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ftilde-const-on-non-const-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ftilde-const-on-non-const-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ftilde-const-on-non-const-fn.rs?ref=1164c946b0a5889f6f0ca1dba48db0cf36c32915", "patch": "@@ -1,12 +0,0 @@\n-#![feature(const_trait_impl)]\n-fn a<T: ~const From<u8>>() {}\n-//~^ ERROR: `~const` is not allowed\n-\n-struct S;\n-\n-impl S {\n-    fn b<T: ~const From<u8>>() {}\n-    //~^ ERROR: `~const` is not allowed\n-}\n-\n-fn main() {}"}, {"sha": "4f81a607f6eaf1bffd45d79f7455c43c96da0e9d", "filename": "src/test/ui/rfc-2632-const-trait-impl/tilde-const-on-non-const-fn.stderr", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ftilde-const-on-non-const-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1164c946b0a5889f6f0ca1dba48db0cf36c32915/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ftilde-const-on-non-const-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ftilde-const-on-non-const-fn.stderr?ref=1164c946b0a5889f6f0ca1dba48db0cf36c32915", "patch": "@@ -1,18 +0,0 @@\n-error: `~const` is not allowed here\n-  --> $DIR/tilde-const-on-non-const-fn.rs:2:9\n-   |\n-LL | fn a<T: ~const From<u8>>() {}\n-   |         ^^^^^^^^^^^^^^^\n-   |\n-   = note: only allowed on bounds on traits' associated types, const fns, const impls and its associated functions\n-\n-error: `~const` is not allowed here\n-  --> $DIR/tilde-const-on-non-const-fn.rs:8:13\n-   |\n-LL |     fn b<T: ~const From<u8>>() {}\n-   |             ^^^^^^^^^^^^^^^\n-   |\n-   = note: only allowed on bounds on traits' associated types, const fns, const impls and its associated functions\n-\n-error: aborting due to 2 previous errors\n-"}, {"sha": "9b3c2cf2a3b04334b072234c588c1c821a559f8a", "filename": "src/test/ui/rfc-2632-const-trait-impl/tilde-const-syntax.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ff24ac4f2b1415cc93e0cc3edb70097df6dae073/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ftilde-const-syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff24ac4f2b1415cc93e0cc3edb70097df6dae073/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ftilde-const-syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ftilde-const-syntax.rs?ref=ff24ac4f2b1415cc93e0cc3edb70097df6dae073", "patch": "@@ -0,0 +1,9 @@\n+// compile-flags: -Z parse-only\n+// check-pass\n+\n+#![feature(const_trait_impl)]\n+\n+struct S<\n+    T: ~const ?for<'a> Tr<'a> + 'static + ~const std::ops::Add,\n+    T: ~const ?for<'a: 'b> m::Trait<'a>,\n+>;"}]}