{"sha": "19175e9b75234647963c84247db653f53c8c936a", "node_id": "C_kwDOAAsO6NoAKDE5MTc1ZTliNzUyMzQ2NDc5NjNjODQyNDdkYjY1M2Y1M2M4YzkzNmE", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-05T05:44:24Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-05T05:45:12Z"}, "message": "Synthesize generics for bad auto traits in dyn types", "tree": {"sha": "c0cf5cdaf31439489e60ce1b9f7bec0d8e448cca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0cf5cdaf31439489e60ce1b9f7bec0d8e448cca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19175e9b75234647963c84247db653f53c8c936a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19175e9b75234647963c84247db653f53c8c936a", "html_url": "https://github.com/rust-lang/rust/commit/19175e9b75234647963c84247db653f53c8c936a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19175e9b75234647963c84247db653f53c8c936a/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1449560e31f7f801d81268a3dad783181656dff", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1449560e31f7f801d81268a3dad783181656dff", "html_url": "https://github.com/rust-lang/rust/commit/d1449560e31f7f801d81268a3dad783181656dff"}], "stats": {"total": 46, "additions": 44, "deletions": 2}, "files": [{"sha": "8e69824e6c790a0e221f05f25c70dfeaf42ce064", "filename": "compiler/rustc_middle/src/ty/sty.rs", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/19175e9b75234647963c84247db653f53c8c936a/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19175e9b75234647963c84247db653f53c8c936a/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs?ref=19175e9b75234647963c84247db653f53c8c936a", "patch": "@@ -722,8 +722,28 @@ impl<'tcx> PolyExistentialPredicate<'tcx> {\n                 self.rebind(p.with_self_ty(tcx, self_ty)).to_predicate(tcx)\n             }\n             ExistentialPredicate::AutoTrait(did) => {\n-                let trait_ref = self.rebind(tcx.mk_trait_ref(did, [self_ty]));\n-                trait_ref.without_const().to_predicate(tcx)\n+                let generics = tcx.generics_of(did);\n+                let trait_ref = if generics.params.len() == 1 {\n+                    tcx.mk_trait_ref(did, [self_ty])\n+                } else {\n+                    // If this is an ill-formed auto trait, then synthesize\n+                    // new error substs for the missing generics.\n+                    let err_substs = ty::InternalSubsts::for_item(tcx, did, |def, substs| {\n+                        if def.index == 0 {\n+                            self_ty.into()\n+                        } else {\n+                            match &def.kind {\n+                                ty::GenericParamDefKind::Lifetime => tcx.lifetimes.re_static.into(),\n+                                ty::GenericParamDefKind::Type { .. } => tcx.ty_error().into(),\n+                                ty::GenericParamDefKind::Const { .. } => tcx\n+                                    .const_error(tcx.bound_type_of(def.def_id).subst(tcx, substs))\n+                                    .into(),\n+                            }\n+                        }\n+                    });\n+                    tcx.mk_trait_ref(did, err_substs)\n+                };\n+                self.rebind(trait_ref).without_const().to_predicate(tcx)\n             }\n         }\n     }"}, {"sha": "3f8ac14c72d9538078dcf3317166b6e80a5f6750", "filename": "src/test/ui/auto-traits/bad-generics-on-dyn.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/19175e9b75234647963c84247db653f53c8c936a/src%2Ftest%2Fui%2Fauto-traits%2Fbad-generics-on-dyn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19175e9b75234647963c84247db653f53c8c936a/src%2Ftest%2Fui%2Fauto-traits%2Fbad-generics-on-dyn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fauto-traits%2Fbad-generics-on-dyn.rs?ref=19175e9b75234647963c84247db653f53c8c936a", "patch": "@@ -0,0 +1,11 @@\n+#![feature(auto_traits)]\n+\n+auto trait Trait1<'a> {}\n+//~^ ERROR auto traits cannot have generic parameters\n+\n+fn f<'a>(x: &dyn Trait1<'a>)\n+{}\n+\n+fn main() {\n+    f(&1);\n+}"}, {"sha": "ade69ced6060d32cff0b96abcf4eafe1aa999d81", "filename": "src/test/ui/auto-traits/bad-generics-on-dyn.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/19175e9b75234647963c84247db653f53c8c936a/src%2Ftest%2Fui%2Fauto-traits%2Fbad-generics-on-dyn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19175e9b75234647963c84247db653f53c8c936a/src%2Ftest%2Fui%2Fauto-traits%2Fbad-generics-on-dyn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fauto-traits%2Fbad-generics-on-dyn.stderr?ref=19175e9b75234647963c84247db653f53c8c936a", "patch": "@@ -0,0 +1,11 @@\n+error[E0567]: auto traits cannot have generic parameters\n+  --> $DIR/bad-generics-on-dyn.rs:3:18\n+   |\n+LL | auto trait Trait1<'a> {}\n+   |            ------^^^^ help: remove the parameters\n+   |            |\n+   |            auto trait cannot have generic parameters\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0567`."}]}