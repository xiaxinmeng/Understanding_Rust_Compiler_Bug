{"sha": "1a276f8959b063324efc05d8972d4ffe7bab3fd8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhMjc2Zjg5NTliMDYzMzI0ZWZjMDVkODk3MmQ0ZmZlN2JhYjNmZDg=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-03-06T20:21:18Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-03-06T20:21:18Z"}, "message": "Only replace quotes in replace_string_with_char assist", "tree": {"sha": "6dd2dcaa436675aad5ddbc3fd7cbead018e16246", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6dd2dcaa436675aad5ddbc3fd7cbead018e16246"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a276f8959b063324efc05d8972d4ffe7bab3fd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a276f8959b063324efc05d8972d4ffe7bab3fd8", "html_url": "https://github.com/rust-lang/rust/commit/1a276f8959b063324efc05d8972d4ffe7bab3fd8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a276f8959b063324efc05d8972d4ffe7bab3fd8/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "856c2850cd4ab90b79ef6f9232e2bcfc04d8fde2", "url": "https://api.github.com/repos/rust-lang/rust/commits/856c2850cd4ab90b79ef6f9232e2bcfc04d8fde2", "html_url": "https://github.com/rust-lang/rust/commit/856c2850cd4ab90b79ef6f9232e2bcfc04d8fde2"}], "stats": {"total": 136, "additions": 77, "deletions": 59}, "files": [{"sha": "634b9c0b7915753700bee65f6ceabd7eb79428f7", "filename": "crates/ide_assists/src/handlers/replace_string_with_char.rs", "status": "modified", "additions": 77, "deletions": 59, "changes": 136, "blob_url": "https://github.com/rust-lang/rust/blob/1a276f8959b063324efc05d8972d4ffe7bab3fd8/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_string_with_char.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a276f8959b063324efc05d8972d4ffe7bab3fd8/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_string_with_char.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_string_with_char.rs?ref=1a276f8959b063324efc05d8972d4ffe7bab3fd8", "patch": "@@ -25,15 +25,16 @@ pub(crate) fn replace_string_with_char(acc: &mut Assists, ctx: &AssistContext) -\n     if value.chars().take(2).count() != 1 {\n         return None;\n     }\n+    let quote_offets = token.quote_offsets()?;\n \n     acc.add(\n         AssistId(\"replace_string_with_char\", AssistKind::RefactorRewrite),\n         \"Replace string with char\",\n         target,\n         |edit| {\n-            let token_text = token.syntax().text();\n-            let inner_text = &token_text[1..token_text.len() - 1];\n-            edit.replace(token.syntax().text_range(), format!(\"'{}'\", inner_text));\n+            let (left, right) = quote_offets.quotes;\n+            edit.replace(left, String::from('\\''));\n+            edit.replace(right, String::from('\\''));\n         },\n     )\n }\n@@ -49,10 +50,10 @@ mod tests {\n         check_assist_target(\n             replace_string_with_char,\n             r#\"\n-            fn f() {\n-                let s = \"$0c\";\n-            }\n-            \"#,\n+fn f() {\n+    let s = \"$0c\";\n+}\n+\"#,\n             r#\"\"c\"\"#,\n         );\n     }\n@@ -62,15 +63,15 @@ mod tests {\n         check_assist(\n             replace_string_with_char,\n             r#\"\n-    fn f() {\n-        let s = \"$0c\";\n-    }\n-    \"#,\n+fn f() {\n+    let s = \"$0c\";\n+}\n+\"#,\n             r##\"\n-    fn f() {\n-        let s = 'c';\n-    }\n-    \"##,\n+fn f() {\n+    let s = 'c';\n+}\n+\"##,\n         )\n     }\n \n@@ -79,15 +80,15 @@ mod tests {\n         check_assist(\n             replace_string_with_char,\n             r#\"\n-    fn f() {\n-        let s = \"$0\ud83d\ude00\";\n-    }\n-    \"#,\n+fn f() {\n+    let s = \"$0\ud83d\ude00\";\n+}\n+\"#,\n             r##\"\n-    fn f() {\n-        let s = '\ud83d\ude00';\n-    }\n-    \"##,\n+fn f() {\n+    let s = '\ud83d\ude00';\n+}\n+\"##,\n         )\n     }\n \n@@ -96,10 +97,10 @@ mod tests {\n         check_assist_not_applicable(\n             replace_string_with_char,\n             r#\"\n-    fn f() {\n-        let s = \"$0test\";\n-    }\n-    \"#,\n+fn f() {\n+    let s = \"$0test\";\n+}\n+\"#,\n         )\n     }\n \n@@ -108,15 +109,15 @@ mod tests {\n         check_assist(\n             replace_string_with_char,\n             r#\"\n-                fn f() {\n-                    format!($0\"x\", 92)\n-                }\n-                \"#,\n+fn f() {\n+    format!($0\"x\", 92)\n+}\n+\"#,\n             r##\"\n-                fn f() {\n-                    format!('x', 92)\n-                }\n-                \"##,\n+fn f() {\n+    format!('x', 92)\n+}\n+\"##,\n         )\n     }\n \n@@ -125,15 +126,15 @@ mod tests {\n         check_assist(\n             replace_string_with_char,\n             r#\"\n-                fn f() {\n-                    find($0\"x\");\n-                }\n-                \"#,\n+fn f() {\n+    find($0\"x\");\n+}\n+\"#,\n             r##\"\n-                fn f() {\n-                    find('x');\n-                }\n-                \"##,\n+fn f() {\n+    find('x');\n+}\n+\"##,\n         )\n     }\n \n@@ -142,15 +143,15 @@ mod tests {\n         check_assist(\n             replace_string_with_char,\n             r#\"\n-                fn f() {\n-                    find($0\"\\n\");\n-                }\n-                \"#,\n+fn f() {\n+    find($0\"\\n\");\n+}\n+\"#,\n             r##\"\n-                fn f() {\n-                    find('\\n');\n-                }\n-                \"##,\n+fn f() {\n+    find('\\n');\n+}\n+\"##,\n         )\n     }\n \n@@ -159,15 +160,32 @@ mod tests {\n         check_assist(\n             replace_string_with_char,\n             r#\"\n-                fn f() {\n-                    find($0\"\\u{7FFF}\");\n-                }\n-                \"#,\n+fn f() {\n+    find($0\"\\u{7FFF}\");\n+}\n+\"#,\n+            r##\"\n+fn f() {\n+    find('\\u{7FFF}');\n+}\n+\"##,\n+        )\n+    }\n+\n+    #[test]\n+    fn replace_raw_string_with_char() {\n+        check_assist(\n+            replace_string_with_char,\n             r##\"\n-                fn f() {\n-                    find('\\u{7FFF}');\n-                }\n-                \"##,\n+fn f() {\n+    $0r#\"X\"#\n+}\n+\"##,\n+            r##\"\n+fn f() {\n+    'X'\n+}\n+\"##,\n         )\n     }\n }"}]}