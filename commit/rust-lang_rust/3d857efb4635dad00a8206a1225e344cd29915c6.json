{"sha": "3d857efb4635dad00a8206a1225e344cd29915c6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkODU3ZWZiNDYzNWRhZDAwYTgyMDZhMTIyNWUzNDRjZDI5OTE1YzY=", "commit": {"author": {"name": "Ivan Tham", "email": "pickfire@riseup.net", "date": "2020-01-05T15:10:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-05T15:10:30Z"}, "message": "Use `as_deref()` to replace `as_ref().map(...)`\n\nSuggested by @lzutao", "tree": {"sha": "44194ce9e5fc3fb0704cede3ebc7ec8ce233924a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44194ce9e5fc3fb0704cede3ebc7ec8ce233924a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d857efb4635dad00a8206a1225e344cd29915c6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeEfxmCRBK7hj4Ov3rIwAAdHIIAGHsSdyC5BlptLWogt3JRw1C\nHqARtNVVdRIH2cwzRV7o8dw9R2UJo3i+Zf/W8MifkzOPNQqNBoHgEz6XauLYlc+r\nKZLrnjEtWEXGeSedHCWE7575hvjnByHdrZVxF7wLhGhCixKduERLlqawPV2J1UfI\nNgnAXOlaR+ZSDKEb0o58RwYJQCR17IiQtd82Yvpze+GUHrUGuLqaNEpKv24nVGbE\nw23RpC0GhZZmWQUtal160tCwtVe6SjymB6qzKNkQWKJA0/mDV2dHWtBDhsAlFkKM\nHVHjkmETWDfmzIUo9MCrC7MeEi/DhKq5T6Sb1TXiZyyljDP3MVAUtnkjjZmqado=\n=j2Fp\n-----END PGP SIGNATURE-----\n", "payload": "tree 44194ce9e5fc3fb0704cede3ebc7ec8ce233924a\nparent 7785834159030e8d734af31d27bef4acfeabd9f2\nauthor Ivan Tham <pickfire@riseup.net> 1578237030 +0800\ncommitter GitHub <noreply@github.com> 1578237030 +0800\n\nUse `as_deref()` to replace `as_ref().map(...)`\n\nSuggested by @lzutao"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d857efb4635dad00a8206a1225e344cd29915c6", "html_url": "https://github.com/rust-lang/rust/commit/3d857efb4635dad00a8206a1225e344cd29915c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d857efb4635dad00a8206a1225e344cd29915c6/comments", "author": {"login": "pickfire", "id": 4687791, "node_id": "MDQ6VXNlcjQ2ODc3OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4687791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pickfire", "html_url": "https://github.com/pickfire", "followers_url": "https://api.github.com/users/pickfire/followers", "following_url": "https://api.github.com/users/pickfire/following{/other_user}", "gists_url": "https://api.github.com/users/pickfire/gists{/gist_id}", "starred_url": "https://api.github.com/users/pickfire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pickfire/subscriptions", "organizations_url": "https://api.github.com/users/pickfire/orgs", "repos_url": "https://api.github.com/users/pickfire/repos", "events_url": "https://api.github.com/users/pickfire/events{/privacy}", "received_events_url": "https://api.github.com/users/pickfire/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7785834159030e8d734af31d27bef4acfeabd9f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/7785834159030e8d734af31d27bef4acfeabd9f2", "html_url": "https://github.com/rust-lang/rust/commit/7785834159030e8d734af31d27bef4acfeabd9f2"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "85661621fbaf68c1b672120cee91269bb0543d51", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3d857efb4635dad00a8206a1225e344cd29915c6/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d857efb4635dad00a8206a1225e344cd29915c6/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=3d857efb4635dad00a8206a1225e344cd29915c6", "patch": "@@ -2152,7 +2152,7 @@ fn stability_tags(item: &clean::Item) -> String {\n     }\n \n     if let Some(stab) = item.stability.as_ref().filter(|s| s.level == stability::Unstable) {\n-        if stab.feature.as_ref().map(|s| &**s) == Some(\"rustc_private\") {\n+        if stab.feature.as_deref() == Some(\"rustc_private\") {\n             tags += &tag_html(\"internal\", \"Internal\");\n         } else {\n             tags += &tag_html(\"unstable\", \"Experimental\");\n@@ -2205,7 +2205,7 @@ fn short_stability(item: &clean::Item, cx: &Context) -> Vec<String> {\n     }\n \n     if let Some(stab) = item.stability.as_ref().filter(|stab| stab.level == stability::Unstable) {\n-        let is_rustc_private = stab.feature.as_ref().map(|s| &**s) == Some(\"rustc_private\");\n+        let is_rustc_private = stab.feature.as_deref() == Some(\"rustc_private\");\n \n         let mut message = if is_rustc_private {\n             \"<span class='emoji'>\u2699\ufe0f</span> This is an internal compiler API.\"\n@@ -2214,7 +2214,7 @@ fn short_stability(item: &clean::Item, cx: &Context) -> Vec<String> {\n         }\n         .to_owned();\n \n-        if let Some(feature) = stab.feature.as_ref() {\n+        if let Some(feature) = stab.feature.as_deref() {\n             let mut feature = format!(\"<code>{}</code>\", Escape(&feature));\n             if let (Some(url), Some(issue)) = (&cx.shared.issue_tracker_base_url, stab.issue) {\n                 feature.push_str(&format!("}]}