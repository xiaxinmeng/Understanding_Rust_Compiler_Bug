{"sha": "74f8ea263e119f947264f373229a8f1a940ae877", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0ZjhlYTI2M2UxMTlmOTQ3MjY0ZjM3MzIyOWE4ZjFhOTQwYWU4Nzc=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2017-04-03T00:03:12Z"}, "committer": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2017-04-03T00:03:19Z"}, "message": "iter: Simplification in rfind's provided implementation\n\n- Prefer simpler constructs instead of going through &mut I's Iterator\n  implementation.", "tree": {"sha": "1e2b234907fe9e85246776dcfa09ae9933499607", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e2b234907fe9e85246776dcfa09ae9933499607"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74f8ea263e119f947264f373229a8f1a940ae877", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74f8ea263e119f947264f373229a8f1a940ae877", "html_url": "https://github.com/rust-lang/rust/commit/74f8ea263e119f947264f373229a8f1a940ae877", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74f8ea263e119f947264f373229a8f1a940ae877/comments", "author": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29a6a9e8d23e9dc178851f0bc49e2b46afcc8c49", "url": "https://api.github.com/repos/rust-lang/rust/commits/29a6a9e8d23e9dc178851f0bc49e2b46afcc8c49", "html_url": "https://github.com/rust-lang/rust/commit/29a6a9e8d23e9dc178851f0bc49e2b46afcc8c49"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "798dda199281310a58c3740c084803a41fa37a5e", "filename": "src/libcore/iter/traits.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74f8ea263e119f947264f373229a8f1a940ae877/src%2Flibcore%2Fiter%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74f8ea263e119f947264f373229a8f1a940ae877/src%2Flibcore%2Fiter%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Ftraits.rs?ref=74f8ea263e119f947264f373229a8f1a940ae877", "patch": "@@ -467,7 +467,7 @@ pub trait DoubleEndedIterator: Iterator {\n         Self: Sized,\n         P: FnMut(&Self::Item) -> bool\n     {\n-        for x in self.by_ref().rev() {\n+        while let Some(x) = self.next_back() {\n             if predicate(&x) { return Some(x) }\n         }\n         None"}]}