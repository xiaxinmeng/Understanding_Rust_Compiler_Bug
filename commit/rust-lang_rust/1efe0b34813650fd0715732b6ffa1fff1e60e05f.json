{"sha": "1efe0b34813650fd0715732b6ffa1fff1e60e05f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlZmUwYjM0ODEzNjUwZmQwNzE1NzMyYjZmZmExZmZmMWU2MGUwNWY=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-03-23T18:02:14Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-03-23T18:02:14Z"}, "message": "Rename variables in rustc\u2019s SelectionContext::copy_clone_conditions", "tree": {"sha": "8113a1e32436875499d0538f100c08ec7bfba318", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8113a1e32436875499d0538f100c08ec7bfba318"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1efe0b34813650fd0715732b6ffa1fff1e60e05f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1efe0b34813650fd0715732b6ffa1fff1e60e05f", "html_url": "https://github.com/rust-lang/rust/commit/1efe0b34813650fd0715732b6ffa1fff1e60e05f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1efe0b34813650fd0715732b6ffa1fff1e60e05f/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00721de714785a8abf95a6403a66a19de6a58fc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/00721de714785a8abf95a6403a66a19de6a58fc3", "html_url": "https://github.com/rust-lang/rust/commit/00721de714785a8abf95a6403a66a19de6a58fc3"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "11daa96134c59c909a56dc10ddad709482d4e8a1", "filename": "src/librustc/traits/select.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1efe0b34813650fd0715732b6ffa1fff1e60e05f/src%2Flibrustc%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1efe0b34813650fd0715732b6ffa1fff1e60e05f/src%2Flibrustc%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fselect.rs?ref=1efe0b34813650fd0715732b6ffa1fff1e60e05f", "patch": "@@ -2086,10 +2086,9 @@ impl<'cx, 'gcx, 'tcx> SelectionContext<'cx, 'gcx, 'tcx> {\n \n             ty::TyClosure(def_id, substs) => {\n                 let trait_id = obligation.predicate.def_id();\n-                let copy_closures = Some(trait_id) == self.tcx().lang_items().copy_trait();\n-                let clone_closures = Some(trait_id) == self.tcx().lang_items().clone_trait();\n-\n-                if copy_closures || clone_closures {\n+                let is_copy_trait = Some(trait_id) == self.tcx().lang_items().copy_trait();\n+                let is_clone_trait = Some(trait_id) == self.tcx().lang_items().clone_trait();\n+                if is_copy_trait || is_clone_trait {\n                     Where(ty::Binder(substs.upvar_tys(def_id, self.tcx()).collect()))\n                 } else {\n                     Never"}]}