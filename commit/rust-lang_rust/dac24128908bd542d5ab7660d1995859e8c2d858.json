{"sha": "dac24128908bd542d5ab7660d1995859e8c2d858", "node_id": "C_kwDOAAsO6NoAKGRhYzI0MTI4OTA4YmQ1NDJkNWFiNzY2MGQxOTk1ODU5ZThjMmQ4NTg", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-10-26T08:50:11Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-10-26T08:50:11Z"}, "message": "account for different max thread name lengths on different platforms", "tree": {"sha": "df6cc21793abe00e22f107c8b1a290d891a00e0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df6cc21793abe00e22f107c8b1a290d891a00e0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dac24128908bd542d5ab7660d1995859e8c2d858", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dac24128908bd542d5ab7660d1995859e8c2d858", "html_url": "https://github.com/rust-lang/rust/commit/dac24128908bd542d5ab7660d1995859e8c2d858", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dac24128908bd542d5ab7660d1995859e8c2d858/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70087eaa35c66e99dd428c55edef9a43a4873fac", "url": "https://api.github.com/repos/rust-lang/rust/commits/70087eaa35c66e99dd428c55edef9a43a4873fac", "html_url": "https://github.com/rust-lang/rust/commit/70087eaa35c66e99dd428c55edef9a43a4873fac"}], "stats": {"total": 30, "additions": 23, "deletions": 7}, "files": [{"sha": "d755e5f10bae897947b7bd6bc41da1def3f196c7", "filename": "src/tools/miri/src/shims/unix/freebsd/foreign_items.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dac24128908bd542d5ab7660d1995859e8c2d858/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Funix%2Ffreebsd%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dac24128908bd542d5ab7660d1995859e8c2d858/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Funix%2Ffreebsd%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Funix%2Ffreebsd%2Fforeign_items.rs?ref=dac24128908bd542d5ab7660d1995859e8c2d858", "patch": "@@ -26,8 +26,12 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriInterpCxExt<'mir, 'tcx> {\n             \"pthread_set_name_np\" => {\n                 let [thread, name] =\n                     this.check_shim(abi, Abi::C { unwind: false }, link_name, args)?;\n-                let res =\n-                    this.pthread_setname_np(this.read_scalar(thread)?, this.read_scalar(name)?)?;\n+                let max_len = usize::MAX; // freebsd does not seem to have a limit.\n+                let res = this.pthread_setname_np(\n+                    this.read_scalar(thread)?,\n+                    this.read_scalar(name)?,\n+                    max_len,\n+                )?;\n                 this.write_scalar(res, dest)?;\n             }\n "}, {"sha": "2b53152688bb787abd713355236435213048034c", "filename": "src/tools/miri/src/shims/unix/linux/foreign_items.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dac24128908bd542d5ab7660d1995859e8c2d858/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Funix%2Flinux%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dac24128908bd542d5ab7660d1995859e8c2d858/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Funix%2Flinux%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Funix%2Flinux%2Fforeign_items.rs?ref=dac24128908bd542d5ab7660d1995859e8c2d858", "patch": "@@ -68,8 +68,12 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriInterpCxExt<'mir, 'tcx> {\n             \"pthread_setname_np\" => {\n                 let [thread, name] =\n                     this.check_shim(abi, Abi::C { unwind: false }, link_name, args)?;\n-                let res =\n-                    this.pthread_setname_np(this.read_scalar(thread)?, this.read_scalar(name)?)?;\n+                let max_len = 16;\n+                let res = this.pthread_setname_np(\n+                    this.read_scalar(thread)?,\n+                    this.read_scalar(name)?,\n+                    max_len,\n+                )?;\n                 this.write_scalar(res, dest)?;\n             }\n             \"pthread_getname_np\" => {"}, {"sha": "371f56ca3555077abba010b91266352031505a8e", "filename": "src/tools/miri/src/shims/unix/macos/foreign_items.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/dac24128908bd542d5ab7660d1995859e8c2d858/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Funix%2Fmacos%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dac24128908bd542d5ab7660d1995859e8c2d858/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Funix%2Fmacos%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Funix%2Fmacos%2Fforeign_items.rs?ref=dac24128908bd542d5ab7660d1995859e8c2d858", "patch": "@@ -176,7 +176,12 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriInterpCxExt<'mir, 'tcx> {\n             \"pthread_setname_np\" => {\n                 let [name] = this.check_shim(abi, Abi::C { unwind: false }, link_name, args)?;\n                 let thread = this.pthread_self()?;\n-                this.pthread_setname_np(thread, this.read_scalar(name)?)?;\n+                let max_len = this.eval_libc(\"MAXTHREADNAMESIZE\")?.to_machine_usize(this)?;\n+                this.pthread_setname_np(\n+                    thread,\n+                    this.read_scalar(name)?,\n+                    max_len.try_into().unwrap(),\n+                )?;\n             }\n             \"pthread_getname_np\" => {\n                 let [thread, name, len] ="}, {"sha": "b43682710bbe5c4adfba87955bb184f259348845", "filename": "src/tools/miri/src/shims/unix/thread.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/dac24128908bd542d5ab7660d1995859e8c2d858/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dac24128908bd542d5ab7660d1995859e8c2d858/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Funix%2Fthread.rs?ref=dac24128908bd542d5ab7660d1995859e8c2d858", "patch": "@@ -67,10 +67,13 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriInterpCxExt<'mir, 'tcx> {\n         Ok(Scalar::from_machine_usize(thread_id.into(), this))\n     }\n \n+    /// Set the name of the current thread. `max_name_len` is the maximal length of the name\n+    /// including the null terminator.\n     fn pthread_setname_np(\n         &mut self,\n         thread: Scalar<Provenance>,\n         name: Scalar<Provenance>,\n+        max_name_len: usize,\n     ) -> InterpResult<'tcx, Scalar<Provenance>> {\n         let this = self.eval_context_mut();\n \n@@ -79,8 +82,8 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriInterpCxExt<'mir, 'tcx> {\n \n         let name = this.read_c_str(name)?.to_owned();\n \n-        if name.len() > 15 {\n-            // Thread names are limited to 16 characaters, including the null terminator.\n+        // Comparing with `>=` to account for null terminator.\n+        if name.len() >= max_name_len {\n             return this.eval_libc(\"ERANGE\");\n         }\n "}]}