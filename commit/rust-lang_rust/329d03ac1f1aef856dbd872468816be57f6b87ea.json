{"sha": "329d03ac1f1aef856dbd872468816be57f6b87ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyOWQwM2FjMWYxYWVmODU2ZGJkODcyNDY4ODE2YmU1N2Y2Yjg3ZWE=", "commit": {"author": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-05-02T10:12:28Z"}, "committer": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-07-05T10:47:00Z"}, "message": "update test", "tree": {"sha": "6439a35b3f24c83c8a2834b9eb8ea54eca329693", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6439a35b3f24c83c8a2834b9eb8ea54eca329693"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/329d03ac1f1aef856dbd872468816be57f6b87ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/329d03ac1f1aef856dbd872468816be57f6b87ea", "html_url": "https://github.com/rust-lang/rust/commit/329d03ac1f1aef856dbd872468816be57f6b87ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/329d03ac1f1aef856dbd872468816be57f6b87ea/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2f3577131d3c87a5a0c0517d778bfe7834dc966", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2f3577131d3c87a5a0c0517d778bfe7834dc966", "html_url": "https://github.com/rust-lang/rust/commit/e2f3577131d3c87a5a0c0517d778bfe7834dc966"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "e32df036ef4b77b5d71806b35c38136f94dc2bd4", "filename": "src/test/ui/chalkify/lower_env1.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/329d03ac1f1aef856dbd872468816be57f6b87ea/src%2Ftest%2Fui%2Fchalkify%2Flower_env1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/329d03ac1f1aef856dbd872468816be57f6b87ea/src%2Ftest%2Fui%2Fchalkify%2Flower_env1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fchalkify%2Flower_env1.stderr?ref=329d03ac1f1aef856dbd872468816be57f6b87ea", "patch": "@@ -7,6 +7,8 @@ LL | #[rustc_dump_program_clauses] //~ ERROR program clause dump\n    = note: FromEnv(Self: Foo) :- FromEnv(Self: Bar).\n    = note: FromEnv(Self: Foo) :- FromEnv(Self: Bar).\n    = note: Implemented(Self: Bar) :- FromEnv(Self: Bar).\n+   = note: WellFormed(Self: Bar) :- Implemented(Self: Bar), WellFormed(Self: Bar).\n+   = note: WellFormed(Self: Bar) :- Implemented(Self: Bar), WellFormed(Self: Foo).\n \n error: program clause dump\n   --> $DIR/lower_env1.rs:19:1\n@@ -19,6 +21,8 @@ LL | #[rustc_dump_env_program_clauses] //~ ERROR program clause dump\n    = note: Implemented(Self: Bar) :- FromEnv(Self: Bar).\n    = note: Implemented(Self: Foo) :- FromEnv(Self: Foo).\n    = note: Implemented(Self: std::marker::Sized) :- FromEnv(Self: std::marker::Sized).\n+   = note: WellFormed(Self: Bar) :- Implemented(Self: Bar), WellFormed(Self: Bar).\n+   = note: WellFormed(Self: Bar) :- Implemented(Self: Bar), WellFormed(Self: Foo).\n \n error: aborting due to 2 previous errors\n "}, {"sha": "4e03fc634cc52b29a5d9cdade7d31a77a81e1f09", "filename": "src/test/ui/chalkify/lower_trait.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/329d03ac1f1aef856dbd872468816be57f6b87ea/src%2Ftest%2Fui%2Fchalkify%2Flower_trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/329d03ac1f1aef856dbd872468816be57f6b87ea/src%2Ftest%2Fui%2Fchalkify%2Flower_trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fchalkify%2Flower_trait.stderr?ref=329d03ac1f1aef856dbd872468816be57f6b87ea", "patch": "@@ -8,6 +8,9 @@ LL | #[rustc_dump_program_clauses] //~ ERROR program clause dump\n    = note: FromEnv(T: std::marker::Sized) :- FromEnv(Self: Foo<S, T, U>).\n    = note: FromEnv(U: std::marker::Sized) :- FromEnv(Self: Foo<S, T, U>).\n    = note: Implemented(Self: Foo<S, T, U>) :- FromEnv(Self: Foo<S, T, U>).\n+   = note: WellFormed(Self: Foo<S, T, U>) :- Implemented(Self: Foo<S, T, U>), WellFormed(S: std::marker::Sized).\n+   = note: WellFormed(Self: Foo<S, T, U>) :- Implemented(Self: Foo<S, T, U>), WellFormed(T: std::marker::Sized).\n+   = note: WellFormed(Self: Foo<S, T, U>) :- Implemented(Self: Foo<S, T, U>), WellFormed(U: std::marker::Sized).\n \n error: aborting due to previous error\n "}, {"sha": "891f0453561ea0a044429a1b5e308cdcb378cef5", "filename": "src/test/ui/chalkify/lower_trait_higher_rank.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/329d03ac1f1aef856dbd872468816be57f6b87ea/src%2Ftest%2Fui%2Fchalkify%2Flower_trait_higher_rank.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/329d03ac1f1aef856dbd872468816be57f6b87ea/src%2Ftest%2Fui%2Fchalkify%2Flower_trait_higher_rank.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fchalkify%2Flower_trait_higher_rank.stderr?ref=329d03ac1f1aef856dbd872468816be57f6b87ea", "patch": "@@ -8,6 +8,9 @@ LL | #[rustc_dump_program_clauses] //~ ERROR program clause dump\n    = note: FromEnv(F: std::ops::Fn<(&'a (u8, u16),)>) :- FromEnv(Self: Foo<F>).\n    = note: Implemented(Self: Foo<F>) :- FromEnv(Self: Foo<F>).\n    = note: ProjectionEq(<F as std::ops::FnOnce<(&'a (u8, u16),)>>::Output == &'a u8) :- FromEnv(Self: Foo<F>).\n+   = note: WellFormed(Self: Foo<F>) :- Implemented(Self: Foo<F>), WellFormed(F: std::marker::Sized).\n+   = note: WellFormed(Self: Foo<F>) :- Implemented(Self: Foo<F>), forall<> { WellFormed(<F as std::ops::FnOnce<(&'a (u8, u16),)>>::Output == &'a u8) }.\n+   = note: WellFormed(Self: Foo<F>) :- Implemented(Self: Foo<F>), forall<> { WellFormed(F: std::ops::Fn<(&'a (u8, u16),)>) }.\n \n error: aborting due to previous error\n "}, {"sha": "db5a795e3011dfd7d280ed9a848e1a97b614689f", "filename": "src/test/ui/chalkify/lower_trait_where_clause.stderr", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/329d03ac1f1aef856dbd872468816be57f6b87ea/src%2Ftest%2Fui%2Fchalkify%2Flower_trait_where_clause.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/329d03ac1f1aef856dbd872468816be57f6b87ea/src%2Ftest%2Fui%2Fchalkify%2Flower_trait_where_clause.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fchalkify%2Flower_trait_where_clause.stderr?ref=329d03ac1f1aef856dbd872468816be57f6b87ea", "patch": "@@ -11,6 +11,12 @@ LL | #[rustc_dump_program_clauses] //~ ERROR program clause dump\n    = note: Implemented(Self: Foo<'a, 'b, S, T, U>) :- FromEnv(Self: Foo<'a, 'b, S, T, U>).\n    = note: RegionOutlives('a : 'b) :- FromEnv(Self: Foo<'a, 'b, S, T, U>).\n    = note: TypeOutlives(U : 'b) :- FromEnv(Self: Foo<'a, 'b, S, T, U>).\n+   = note: WellFormed(Self: Foo<'a, 'b, S, T, U>) :- Implemented(Self: Foo<'a, 'b, S, T, U>), RegionOutlives('a : 'b).\n+   = note: WellFormed(Self: Foo<'a, 'b, S, T, U>) :- Implemented(Self: Foo<'a, 'b, S, T, U>), TypeOutlives(U : 'b).\n+   = note: WellFormed(Self: Foo<'a, 'b, S, T, U>) :- Implemented(Self: Foo<'a, 'b, S, T, U>), WellFormed(S: std::fmt::Debug).\n+   = note: WellFormed(Self: Foo<'a, 'b, S, T, U>) :- Implemented(Self: Foo<'a, 'b, S, T, U>), WellFormed(S: std::marker::Sized).\n+   = note: WellFormed(Self: Foo<'a, 'b, S, T, U>) :- Implemented(Self: Foo<'a, 'b, S, T, U>), WellFormed(T: std::borrow::Borrow<U>).\n+   = note: WellFormed(Self: Foo<'a, 'b, S, T, U>) :- Implemented(Self: Foo<'a, 'b, S, T, U>), WellFormed(T: std::marker::Sized).\n \n error: aborting due to previous error\n "}]}