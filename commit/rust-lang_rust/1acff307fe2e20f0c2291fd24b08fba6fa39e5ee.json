{"sha": "1acff307fe2e20f0c2291fd24b08fba6fa39e5ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhY2ZmMzA3ZmUyZTIwZjBjMjI5MWZkMjRiMDhmYmE2ZmEzOWU1ZWU=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-01-19T18:57:43Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-01-30T20:39:34Z"}, "message": "Move expr_scopes query to its module", "tree": {"sha": "18046068a9d7bb72747bbabfc22d1121fea1604a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18046068a9d7bb72747bbabfc22d1121fea1604a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1acff307fe2e20f0c2291fd24b08fba6fa39e5ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1acff307fe2e20f0c2291fd24b08fba6fa39e5ee", "html_url": "https://github.com/rust-lang/rust/commit/1acff307fe2e20f0c2291fd24b08fba6fa39e5ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1acff307fe2e20f0c2291fd24b08fba6fa39e5ee/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65864d85f992300bad3913438a542af1bd736a24", "url": "https://api.github.com/repos/rust-lang/rust/commits/65864d85f992300bad3913438a542af1bd736a24", "html_url": "https://github.com/rust-lang/rust/commit/65864d85f992300bad3913438a542af1bd736a24"}], "stats": {"total": 28, "additions": 17, "deletions": 11}, "files": [{"sha": "189649841a7e4b583ff5452b52e85250a1de376e", "filename": "crates/ra_hir/src/db.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1acff307fe2e20f0c2291fd24b08fba6fa39e5ee/crates%2Fra_hir%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1acff307fe2e20f0c2291fd24b08fba6fa39e5ee/crates%2Fra_hir%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fdb.rs?ref=1acff307fe2e20f0c2291fd24b08fba6fa39e5ee", "patch": "@@ -27,7 +27,7 @@ pub trait HirDatabase: SourceDatabase + AsRef<HirInterner> {\n     #[salsa::invoke(crate::macros::expand_macro_invocation)]\n     fn expand_macro_invocation(&self, invoc: MacroCallId) -> Option<Arc<MacroExpansion>>;\n \n-    #[salsa::invoke(query_definitions::expr_scopes)]\n+    #[salsa::invoke(ExprScopes::expr_scopes_query)]\n     fn expr_scopes(&self, func: Function) -> Arc<ExprScopes>;\n \n     #[salsa::invoke(crate::adt::StructData::struct_data_query)]"}, {"sha": "f8b5ba581c43d17ecfd90cfcb7b17a5f66011c9f", "filename": "crates/ra_hir/src/expr/scope.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1acff307fe2e20f0c2291fd24b08fba6fa39e5ee/crates%2Fra_hir%2Fsrc%2Fexpr%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1acff307fe2e20f0c2291fd24b08fba6fa39e5ee/crates%2Fra_hir%2Fsrc%2Fexpr%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fexpr%2Fscope.rs?ref=1acff307fe2e20f0c2291fd24b08fba6fa39e5ee", "patch": "@@ -9,7 +9,11 @@ use ra_syntax::{\n };\n use ra_arena::{Arena, RawId, impl_arena_id};\n \n-use crate::{Name, AsName, expr::{PatId, ExprId, Pat, Expr, Body, Statement, BodySyntaxMapping}};\n+use crate::{\n+    Name, AsName, Function,\n+    expr::{PatId, ExprId, Pat, Expr, Body, Statement, BodySyntaxMapping},\n+    db::HirDatabase,\n+};\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]\n pub struct ScopeId(RawId);\n@@ -35,7 +39,14 @@ pub struct ScopeData {\n }\n \n impl ExprScopes {\n-    pub(crate) fn new(body: Arc<Body>) -> ExprScopes {\n+    // TODO: This should take something more general than Function\n+    pub(crate) fn expr_scopes_query(db: &impl HirDatabase, function: Function) -> Arc<ExprScopes> {\n+        let body = db.body_hir(function);\n+        let res = ExprScopes::new(body);\n+        Arc::new(res)\n+    }\n+\n+    fn new(body: Arc<Body>) -> ExprScopes {\n         let mut scopes = ExprScopes {\n             body: body.clone(),\n             scopes: Arena::default(),"}, {"sha": "734a982820a227edf1e7ec77e99f47beb564efae", "filename": "crates/ra_hir/src/query_definitions.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1acff307fe2e20f0c2291fd24b08fba6fa39e5ee/crates%2Fra_hir%2Fsrc%2Fquery_definitions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1acff307fe2e20f0c2291fd24b08fba6fa39e5ee/crates%2Fra_hir%2Fsrc%2Fquery_definitions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fquery_definitions.rs?ref=1acff307fe2e20f0c2291fd24b08fba6fa39e5ee", "patch": "@@ -1,19 +1,14 @@\n use std::sync::Arc;\n \n-use ra_syntax::{SyntaxNode, TreeArc};\n+use ra_syntax::{\n+    SyntaxNode, TreeArc,\n+};\n \n use crate::{\n     SourceFileItems, SourceItemId, HirFileId,\n-    Function, ExprScopes,\n     db::HirDatabase,\n };\n \n-pub(super) fn expr_scopes(db: &impl HirDatabase, func: Function) -> Arc<ExprScopes> {\n-    let body = db.body_hir(func);\n-    let res = ExprScopes::new(body);\n-    Arc::new(res)\n-}\n-\n pub(super) fn file_items(db: &impl HirDatabase, file_id: HirFileId) -> Arc<SourceFileItems> {\n     let source_file = db.hir_parse(file_id);\n     let res = SourceFileItems::new(file_id, &source_file);"}]}