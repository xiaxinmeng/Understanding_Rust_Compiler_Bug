{"sha": "c9061733c6b04803079d5cc141c53b999858dfc4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5MDYxNzMzYzZiMDQ4MDMwNzlkNWNjMTQxYzUzYjk5OTg1OGRmYzQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-11-22T06:45:14Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-11-29T20:51:07Z"}, "message": "misc fixes", "tree": {"sha": "bebf705d96b860e9a851c354723a9c7e19bf7689", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bebf705d96b860e9a851c354723a9c7e19bf7689"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9061733c6b04803079d5cc141c53b999858dfc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9061733c6b04803079d5cc141c53b999858dfc4", "html_url": "https://github.com/rust-lang/rust/commit/c9061733c6b04803079d5cc141c53b999858dfc4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9061733c6b04803079d5cc141c53b999858dfc4/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c12c7c7f5462b56bad567112f8680dc81f9d68d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c12c7c7f5462b56bad567112f8680dc81f9d68d", "html_url": "https://github.com/rust-lang/rust/commit/9c12c7c7f5462b56bad567112f8680dc81f9d68d"}], "stats": {"total": 247, "additions": 137, "deletions": 110}, "files": [{"sha": "f1cb3d9276f13d5da87b0c6e1f6c7f8c6db24ff4", "filename": "configure", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c9061733c6b04803079d5cc141c53b999858dfc4/configure", "raw_url": "https://github.com/rust-lang/rust/raw/c9061733c6b04803079d5cc141c53b999858dfc4/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=c9061733c6b04803079d5cc141c53b999858dfc4", "patch": "@@ -349,9 +349,7 @@ step_msg \"making directories\"\n for i in \\\n     doc doc/std \\\n     nd nd/std \\\n-    dl \\\n-    test/run-pass test/run-fail test/compile-fail \\\n-    test/bench test/perf test/pretty\n+    dl\n do\n     make_dir $i\n done\n@@ -399,6 +397,13 @@ do\n             make_dir $h/stage$i/lib/rustc/$t/lib\n         done\n     done\n+\n+    make_dir $h/test/run-pass\n+    make_dir $h/test/run-fail\n+    make_dir $h/test/compile-fail\n+    make_dir $h/test/bench\n+    make_dir $h/test/perf\n+    make_dir $h/test/pretty\n done\n \n # Configure submodules"}, {"sha": "6eb3ff61c26da01bad265866a2dd3b0d14892d68", "filename": "mk/tests.mk", "status": "modified", "additions": 129, "deletions": 107, "changes": 236, "blob_url": "https://github.com/rust-lang/rust/blob/c9061733c6b04803079d5cc141c53b999858dfc4/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/c9061733c6b04803079d5cc141c53b999858dfc4/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=c9061733c6b04803079d5cc141c53b999858dfc4", "patch": "@@ -115,63 +115,63 @@ define TEST_STAGEN\n # $(2) is the target triple to test\n # $(3) is the host triple to test\n \n-check-stage$(1)-$(2)-H-$(3): tidy\t\t\t\t\\\n-\tcheck-stage$(1)-$(2)-H-$(3)-rustc\t\t\t\\\n-\tcheck-stage$(1)-$(2)-H-$(3)-std\t\t\t\t\\\n-\tcheck-stage$(1)-$(2)-H-$(3)-rpass\t\t\t\\\n-\tcheck-stage$(1)-$(2)-H-$(3)-rfail\t\t\t\\\n-\tcheck-stage$(1)-$(2)-H-$(3)-cfail\t\t\t\\\n-\tcheck-stage$(1)-$(2)-H-$(3)-bench\t\t\t\\\n-\tcheck-stage$(1)-$(2)-H-$(3)-pretty\n+check-stage$(1)-T-$(2)-H-$(3): tidy\t\t\t\t\\\n+\tcheck-stage$(1)-T-$(2)-H-$(3)-rustc\t\t\t\\\n+\tcheck-stage$(1)-T-$(2)-H-$(3)-std\t\t\t\\\n+\tcheck-stage$(1)-T-$(2)-H-$(3)-rpass\t\t\t\\\n+\tcheck-stage$(1)-T-$(2)-H-$(3)-rfail\t\t\t\\\n+\tcheck-stage$(1)-T-$(2)-H-$(3)-cfail\t\t\t\\\n+\tcheck-stage$(1)-T-$(2)-H-$(3)-bench\t\t\t\\\n+\tcheck-stage$(1)-T-$(2)-H-$(3)-pretty\n \n-check-stage$(1)-$(2)-H-$(3)-std:\t\t\t\t\\\n-\tcheck-stage$(1)-$(2)-H-$(3)-std-dummy\n+check-stage$(1)-T-$(2)-H-$(3)-std:\t\t\t\t\\\n+\tcheck-stage$(1)-T-$(2)-H-$(3)-std-dummy\n \n-check-stage$(1)-$(2)-H-$(3)-rustc:\t\t\t\t\\\n-\tcheck-stage$(1)-$(2)-H-$(3)-rustc-dummy\n+check-stage$(1)-T-$(2)-H-$(3)-rustc:\t\t\t\t\\\n+\tcheck-stage$(1)-T-$(2)-H-$(3)-rustc-dummy\n \n-check-stage$(1)-$(2)-H-$(3)-cfail:\t\t\t\t\\\n-\tcheck-stage$(1)-$(2)-H-$(3)-cfail-dummy\n+check-stage$(1)-T-$(2)-H-$(3)-cfail:\t\t\t\t\\\n+\tcheck-stage$(1)-T-$(2)-H-$(3)-cfail-dummy\n \n-check-stage$(1)-$(2)-H-$(3)-rfail:\t\t\t\t\\\n-\tcheck-stage$(1)-$(2)-H-$(3)-rfail-dummy\n+check-stage$(1)-T-$(2)-H-$(3)-rfail:\t\t\t\t\\\n+\tcheck-stage$(1)-T-$(2)-H-$(3)-rfail-dummy\n \n-check-stage$(1)-$(2)-H-$(3)-rpass:\t\t\t\t\\\n-\tcheck-stage$(1)-$(2)-H-$(3)-rpass-dummy\n+check-stage$(1)-T-$(2)-H-$(3)-rpass:\t\t\t\t\\\n+\tcheck-stage$(1)-T-$(2)-H-$(3)-rpass-dummy\n \n-check-stage$(1)-$(2)-H-$(3)-bench:\t\t\t\t\\\n-\tcheck-stage$(1)-$(2)-H-$(3)-bench-dummy\n+check-stage$(1)-T-$(2)-H-$(3)-bench:\t\t\t\t\\\n+\tcheck-stage$(1)-T-$(2)-H-$(3)-bench-dummy\n \n-check-stage$(1)-$(2)-H-$(3)-perf:\t\t\t\t\\\n-\tcheck-stage$(1)-$(2)-H-$(3)-perf-dummy\n+check-stage$(1)-T-$(2)-H-$(3)-perf:\t\t\t\t\\\n+\tcheck-stage$(1)-T-$(2)-H-$(3)-perf-dummy\n \n-check-stage$(1)-$(2)-H-$(3)-pretty:\t\t\t\t\\\n-\tcheck-stage$(1)-$(2)-H-$(3)-pretty-rpass\t\\\n-    check-stage$(1)-$(2)-H-$(3)-pretty-rfail\t\\\n-    check-stage$(1)-$(2)-H-$(3)-pretty-bench\t\\\n-    check-stage$(1)-$(2)-H-$(3)-pretty-pretty\n+check-stage$(1)-T-$(2)-H-$(3)-pretty:\t\t\t\\\n+\tcheck-stage$(1)-T-$(2)-H-$(3)-pretty-rpass\t\\\n+    check-stage$(1)-T-$(2)-H-$(3)-pretty-rfail\t\\\n+    check-stage$(1)-T-$(2)-H-$(3)-pretty-bench\t\\\n+    check-stage$(1)-T-$(2)-H-$(3)-pretty-pretty\n \n-check-stage$(1)-$(2)-H-$(3)-pretty-rpass:\t\t\t\\\n-\tcheck-stage$(1)-$(2)-H-$(3)-pretty-rpass-dummy\n+check-stage$(1)-T-$(2)-H-$(3)-pretty-rpass:\t\t\t\\\n+\tcheck-stage$(1)-T-$(2)-H-$(3)-pretty-rpass-dummy\n \n-check-stage$(1)-$(2)-H-$(3)-pretty-rfail:\t\t\t\\\n-\tcheck-stage$(1)-$(2)-H-$(3)-pretty-rfail-dummy\n+check-stage$(1)-T-$(2)-H-$(3)-pretty-rfail:\t\t\t\\\n+\tcheck-stage$(1)-T-$(2)-H-$(3)-pretty-rfail-dummy\n \n-check-stage$(1)-$(2)-H-$(3)-pretty-bench:\t\t\t\\\n-\tcheck-stage$(1)-$(2)-H-$(3)-pretty-bench-dummy\n+check-stage$(1)-T-$(2)-H-$(3)-pretty-bench:\t\t\t\\\n+\tcheck-stage$(1)-T-$(2)-H-$(3)-pretty-bench-dummy\n \n-check-stage$(1)-$(2)-H-$(3)-pretty-pretty:\t\t\t\t\\\n-\tcheck-stage$(1)-$(2)-H-$(3)-pretty-pretty-dummy\n+check-stage$(1)-T-$(2)-H-$(3)-pretty-pretty:\t\t\t\t\\\n+\tcheck-stage$(1)-T-$(2)-H-$(3)-pretty-pretty-dummy\n \n # Rules for the standard library test runner\n \n $(3)/test/stdtest.stage$(1)-$(2)$$(X):\t\t\t\\\n \t\t$$(STDTEST_CRATE) $$(STDTEST_INPUTS)\t\\\n         $$(SREQ$(1)_T_$(2)_H_$(3))\n \t@$$(call E, compile_and_link: $$@)\n-\t$$(STAGE$(1)_$(2)) -o $$@ $$< --test\n+\t$$(STAGE$(1)_T_$(2)_H_$(3)) -o $$@ $$< --test\n \n-check-stage$(1)-$(2)-H-$(3)-std-dummy:\t\t\t\\\n+check-stage$(1)-T-$(2)-H-$(3)-std-dummy:\t\t\t\\\n \t\t$(3)/test/stdtest.stage$(1)-$(2)$$(X)\n \t@$$(call E, run: $$<)\n \t$$(Q)$$(call CFG_RUN_TEST,$$<) $$(TESTARGS)\n@@ -182,131 +182,140 @@ $(3)/test/rustctest.stage$(1)-$(2)$$(X):\t\t\t\t\t\\\n \t\t$$(COMPILER_CRATE)\t\t\t\t\t\t\t\t\t\\\n \t\t$$(COMPILER_INPUTS)\t\t\t\t\t\t\t\t\t\\\n \t\t$$(SREQ$(1)_T_$(2)_H_$(3))\t\t\t\t\t\t\t\\\n-\t\t$$(TARGET_LIB$(1)_T_$(2)_H_$(3))/$$(CFG_RUSTLLVM)\n+\t\t$$(TLIB$(1)_T_$(2)_H_$(3))/$$(CFG_RUSTLLVM)\n \t@$$(call E, compile_and_link: $$@)\n-\t$$(STAGE$(1)_$(2)) -o $$@ $$< --test\n+\t$$(STAGE$(1)_T_$(2)_H_$(3)) -o $$@ $$< --test\n \n-check-stage$(1)-$(2)-H-$(3)-rustc-dummy:\t\t\\\n+check-stage$(1)-T-$(2)-H-$(3)-rustc-dummy:\t\t\\\n \t\t$(3)/test/rustctest.stage$(1)-$(2)$$(X)\n \t@$$(call E, run: $$<)\n \t$$(Q)$$(call CFG_RUN_TEST,$$<) $$(TESTARGS)\n \n # Rules for the cfail/rfail/rpass/bench/perf test runner\n \n-CTEST_COMMON_ARGS$(1)-$(2)-$(3) :=\t\t\t\t\t\t\t\\\n+CTEST_COMMON_ARGS$(1)-T-$(2)-H-$(3) :=\t\t\t\t\t\t\\\n \t\t--compile-lib-path $$(HLIB$(1)_H_$(3))\t\t\t\t\\\n         --run-lib-path $$(TLIB$(1)_T_$(2)_H_$(3))\t\t\t\\\n         --rustc-path $$(HBIN$(1)_H_$(3))/rustc$$(X)\t\t\t\\\n         --stage-id stage$(1)-$(2)\t\t\t\t\t\t\t\\\n         --rustcflags \"$$(CFG_RUSTC_FLAGS) --target=$(2)\"\t\\\n         $$(CTEST_TESTARGS)\n \n-CFAIL_ARGS$(1)-$(2)-$(3) := $$(CTEST_COMMON_ARGS$(1)-$(2)-$(3))\t\\\n-        --src-base $$(S)src/test/compile-fail/\t\t\t\t\t\\\n-        --build-base test/compile-fail/\t\t\t\t\t\t\t\\\n+CFAIL_ARGS$(1)-T-$(2)-H-$(3) := \t\t\t\t\\\n+\t\t$$(CTEST_COMMON_ARGS$(1)-T-$(2)-H-$(3))\t\\\n+        --src-base $$(S)src/test/compile-fail/\t\\\n+        --build-base test/compile-fail/\t\t\t\\\n         --mode compile-fail\n \n-RFAIL_ARGS$(1)-$(2)-$(3) := $$(CTEST_COMMON_ARGS$(1)-$(2)-$(3))\t\\\n-        --src-base $$(S)src/test/run-fail/\t\t\t\t\t\t\\\n-        --build-base test/run-fail/\t\t\t\t\t\t\t\t\\\n-        --mode run-fail\t\t\t\t\t\t\t\t\t\t\t\\\n+RFAIL_ARGS$(1)-T-$(2)-H-$(3) := \t\t\t\t\\\n+\t\t$$(CTEST_COMMON_ARGS$(1)-T-$(2)-H-$(3))\t\\\n+        --src-base $$(S)src/test/run-fail/\t\t\\\n+        --build-base test/run-fail/\t\t\t\t\\\n+        --mode run-fail\t\t\t\t\t\t\t\\\n         $$(CTEST_RUNTOOL)\n \n-RPASS_ARGS$(1)-$(2)-$(3) := $$(CTEST_COMMON_ARGS$(1)-$(2)-$(3))\t\\\n-        --src-base $$(S)src/test/run-pass/\t\t\t\t\t\t\\\n-        --build-base test/run-pass/\t\t\t\t\t\t\t\t\\\n-        --mode run-pass\t\t\t\t\t\t\t\t\t\t\t\\\n+RPASS_ARGS$(1)-T-$(2)-H-$(3) := \t\t\t\t\\\n+\t\t$$(CTEST_COMMON_ARGS$(1)-T-$(2)-H-$(3))\t\\\n+        --src-base $$(S)src/test/run-pass/\t\t\\\n+        --build-base test/run-pass/\t\t\t\t\\\n+        --mode run-pass\t\t\t\t\t\t\t\\\n         $$(CTEST_RUNTOOL)\n \n-BENCH_ARGS$(1)-$(2)-$(3) := $$(CTEST_COMMON_ARGS$(1)-$(2)-$(3))\t\\\n-        --src-base $$(S)src/test/bench/\t\t\t\t\t\t\t\\\n-        --build-base test/bench/\t\t\t\t\t\t\t\t\\\n-        --mode run-pass\t\t\t\t\t\t\t\t\t\t\t\\\n+BENCH_ARGS$(1)-T-$(2)-H-$(3) := \t\t\t\t\\\n+\t\t$$(CTEST_COMMON_ARGS$(1)-T-$(2)-H-$(3))\t\\\n+        --src-base $$(S)src/test/bench/\t\t\t\\\n+        --build-base test/bench/\t\t\t\t\\\n+        --mode run-pass\t\t\t\t\t\t\t\\\n         $$(CTEST_RUNTOOL)\n \n-PERF_ARGS$(1)-$(2)-$(3) := $$(CTEST_COMMON_ARGS$(1)-$(2)-$(3))\t\\\n-        --src-base $$(S)src/test/bench/\t\t\t\t\t\t\t\\\n-        --build-base test/perf/\t\t\t\t\t\t\t\t\t\\\n-        --mode run-pass\t\t\t\t\t\t\t\t\t\t\t\\\n+PERF_ARGS$(1)-T-$(2)-H-$(3) := \t\t\t\t\t\\\n+\t\t$$(CTEST_COMMON_ARGS$(1)-T-$(2)-H-$(3))\t\\\n+        --src-base $$(S)src/test/bench/\t\t\t\\\n+        --build-base test/perf/\t\t\t\t\t\\\n+        --mode run-pass\t\t\t\t\t\t\t\\\n         $$(CTEST_PERF_RUNTOOL)\n \n-PRETTY_RPASS_ARGS$(1)-$(2)-$(3) := $$(CTEST_COMMON_ARGS$(1)-$(2)-$(3))\t\\\n-                         --src-base $$(S)src/test/run-pass/\t\t\t\t\\\n-                         --build-base test/run-pass/\t\t\t\t\t\\\n-                         --mode pretty\n-\n-PRETTY_RFAIL_ARGS$(1)-$(2)-$(3) := $$(CTEST_COMMON_ARGS$(1)-$(2)-$(3))\t\\\n-                         --src-base $$(S)src/test/run-fail/\t\t\t\t\\\n-                         --build-base test/run-fail/\t\t\t\t\t\\\n-                         --mode pretty\n-\n-PRETTY_BENCH_ARGS$(1)-$(2)-$(3) := $$(CTEST_COMMON_ARGS$(1)-$(2)-$(3))\t\\\n-                         --src-base $$(S)src/test/bench/\t\t\t\t\\\n-                         --build-base test/bench/\t\t\t\t\t\t\\\n-                         --mode pretty\n-\n-PRETTY_PRETTY_ARGS$(1)-$(2)-$(3) := $$(CTEST_COMMON_ARGS$(1)-$(2)-$(3))\t\\\n-                          --src-base $$(S)src/test/pretty/\t\t\t\t\\\n-                          --build-base test/pretty/\t\t\t\t\t\t\\\n-                          --mode pretty\n-\n-check-stage$(1)-$(2)-$(3)-cfail-dummy:\t\t\t\\\n+PRETTY_RPASS_ARGS$(1)-T-$(2)-H-$(3) := \t\t\t\\\n+\t\t$$(CTEST_COMMON_ARGS$(1)-T-$(2)-H-$(3))\t\\\n+        --src-base $$(S)src/test/run-pass/\t\t\\\n+        --build-base test/run-pass/\t\t\t\t\\\n+        --mode pretty\n+\n+PRETTY_RFAIL_ARGS$(1)-T-$(2)-H-$(3) := \t\t\t\\\n+\t\t$$(CTEST_COMMON_ARGS$(1)-T-$(2)-H-$(3))\t\\\n+        --src-base $$(S)src/test/run-fail/\t\t\\\n+        --build-base test/run-fail/\t\t\t\t\\\n+        --mode pretty\n+\n+PRETTY_BENCH_ARGS$(1)-T-$(2)-H-$(3) := \t\t\t\\\n+\t\t$$(CTEST_COMMON_ARGS$(1)-T-$(2)-H-$(3))\t\\\n+        --src-base $$(S)src/test/bench/\t\t\t\\\n+        --build-base test/bench/\t\t\t\t\\\n+        --mode pretty\n+\n+PRETTY_PRETTY_ARGS$(1)-T-$(2)-H-$(3) := \t\t\\\n+\t\t$$(CTEST_COMMON_ARGS$(1)-T-$(2)-H-$(3))\t\\\n+        --src-base $$(S)src/test/pretty/\t\t\\\n+        --build-base test/pretty/\t\t\t\t\\\n+        --mode pretty\n+\n+check-stage$(1)-T-$(2)-H-$(3)-cfail-dummy:\t\t\t\\\n \t\t$$(HBIN$(1)_H_$(3))/compiletest$$(X)\t\\\n \t    $$(SREQ$(1)_T_$(2)_H_$(3))\t\t\t\t\\\n         $$(CFAIL_TESTS)\n \t@$$(call E, run: $$<)\n \t$$(Q)$$(call CFG_RUN_CTEST,$(1),$$<) $$(CFAIL_ARGS$(1)-$(2))\n \n-check-stage$(1)-$(2)-$(3)-rfail-dummy:\t\t\t\\\n+check-stage$(1)-T-$(2)-H-$(3)-rfail-dummy:\t\t\t\\\n \t\t$$(HBIN$(1)_H_$(3))/compiletest$$(X)\t\\\n \t    $$(SREQ$(1)_T_$(2)_H_$(3))\t\t\t\t\\\n         $$(RFAIL_TESTS)\n \t@$$(call E, run: $$<)\n \t$$(Q)$$(call CFG_RUN_CTEST,$(1),$$<) $$(RFAIL_ARGS$(1)-$(2))\n \n-check-stage$(1)-$(2)-$(3)-rpass-dummy:\t\t\t\\\n+check-stage$(1)-T-$(2)-H-$(3)-rpass-dummy:\t\t\t\\\n \t\t$$(HBIN$(1)_H_$(3))/compiletest$$(X)\t\\\n \t    $$(SREQ$(1)_T_$(2)_H_$(3))\t\t\t\t\\\n         $$(RPASS_TESTS)\n \t@$$(call E, run: $$<)\n \t$$(Q)$$(call CFG_RUN_CTEST,$(1),$$<) $$(RPASS_ARGS$(1)-$(2))\n \n-check-stage$(1)-$(2)-$(3)-bench-dummy:\t\t\t\\\n+check-stage$(1)-T-$(2)-H-$(3)-bench-dummy:\t\t\t\\\n \t\t$$(HBIN$(1)_H_$(3))/compiletest$$(X)\t\\\n \t    $$(SREQ$(1)_T_$(2)_H_$(3))\t\t\t\t\\\n         $$(BENCH_TESTS)\n \t@$$(call E, run: $$<)\n \t$$(Q)$$(call CFG_RUN_CTEST,$(1),$$<) $$(BENCH_ARGS$(1)-$(2))\n \n-check-stage$(1)-$(2)-$(3)-perf-dummy:\t\t\t\\\n+check-stage$(1)-T-$(2)-H-$(3)-perf-dummy:\t\t\t\\\n \t\t$$(HBIN$(1)_H_$(3))/compiletest$$(X)\t\\\n         $$(SREQ$(1)_T_$(2)_H_$(3))\t\t\t\t\\\n         $$(BENCH_TESTS)\n \t@$$(call E, perf: $$<)\n \t$$(Q)$$(call CFG_RUN_CTEST,$(1),$$<) $$(PERF_ARGS$(1)-$(2))\n \n-check-stage$(1)-$(2)-$(3)-pretty-rpass-dummy:\t\\\n+check-stage$(1)-T-$(2)-H-$(3)-pretty-rpass-dummy:\t\\\n \t\t$$(HBIN$(1)_H_$(3))/compiletest$$(X)\t\\\n         $$(SREQ$(1)_T_$(2)_H_$(3))\t\t\t\t\\\n         $$(RPASS_TESTS)\n \t@$$(call E, run: $$<)\n \t$$(Q)$$(call CFG_RUN_CTEST,$(1),$$<) $$(PRETTY_RPASS_ARGS$(1)-$(2))\n \n-check-stage$(1)-$(2)-pretty-rfail-dummy:\t\t\\\n+check-stage$(1)-T-$(2)-H-$(3)-pretty-rfail-dummy:\t\\\n \t\t$$(HBIN$(1)_H_$(3))/compiletest$$(X)\t\\\n         $$(SREQ$(1)_T_$(2)_H_$(3))\t\t\t\t\\\n         $$(RFAIL_TESTS)\n \t@$$(call E, run: $$<)\n \t$$(Q)$$(call CFG_RUN_CTEST,$(1),$$<) $$(PRETTY_RFAIL_ARGS$(1)-$(2))\n \n-check-stage$(1)-$(2)-pretty-bench-dummy:\t\t\\\n+check-stage$(1)-T-$(2)-H-$(3)-pretty-bench-dummy:\t\\\n \t\t$$(HBIN$(1)_H_$(3))/compiletest$$(X)\t\\\n \t\t$$(SREQ$(1)_T_$(2)_H_$(3))\t\t\t\t\\\n         $$(BENCH_TESTS)\n \t@$$(call E, run: $$<)\n \t$$(Q)$$(call CFG_RUN_CTEST,$(1),$$<) $$(PRETTY_BENCH_ARGS$(1)-$(2))\n \n-check-stage$(1)-$(2)-pretty-pretty-dummy:\t\t\\\n+check-stage$(1)-T-$(2)-H-$(3)-pretty-pretty-dummy:\t\\\n \t\t$$(HBIN$(1)_H_$(3))/compiletest$$(X)\t\\\n         $$(SREQ$(1)_T_$(2)_H_$(3))\t\t\t\t\\\n         $$(PRETTY_TESTS)\n@@ -317,33 +326,46 @@ endef\n \n # Instantiate the template for stage 0, 1, 2, 3\n \n-$(foreach target,$(CFG_TARGET_TRIPLES), \\\n- $(eval $(call TEST_STAGEN,0,$(target))) \\\n- $(eval $(call TEST_STAGEN,1,$(target))) \\\n- $(eval $(call TEST_STAGEN,2,$(target))) \\\n- $(eval $(call TEST_STAGEN,3,$(target))))\n+$(foreach host,$(CFG_TARGET_TRIPLES), \\\n+ $(eval $(foreach target,$(CFG_TARGET_TRIPLES), \\\n+  $(eval $(foreach stage,$(STAGES), \\\n+   $(eval $(call TEST_STAGEN,$(stage),$(target),$(host))))))))\n \n # Make convenient Shorthand Targets for use on command\n # line or by other rules:\n \n-define DEF_CHECK_STAGE\n+define DEF_CHECK_SAME\n \n-check-stage$(1):        check-stage$(1)-$$(CFG_HOST_TRIPLE)\n-check-stage$(1)-perf:   check-stage$(1)-$$(CFG_HOST_TRIPLE)-perf\n-check-stage$(1)-rustc:  check-stage$(1)-$$(CFG_HOST_TRIPLE)-rustc\n-check-stage$(1)-std:    check-stage$(1)-$$(CFG_HOST_TRIPLE)-std\n-check-stage$(1)-rpass:  check-stage$(1)-$$(CFG_HOST_TRIPLE)-rpass\n-check-stage$(1)-rfail:  check-stage$(1)-$$(CFG_HOST_TRIPLE)-rfail\n-check-stage$(1)-cfail:  check-stage$(1)-$$(CFG_HOST_TRIPLE)-cfail\n-check-stage$(1)-bench:  check-stage$(1)-$$(CFG_HOST_TRIPLE)-bench\n+check-stage$(1)-H-$(2):        check-stage$(1)-T-$(2)-H-$(2)\n+check-stage$(1)-H-$(2)-perf:   check-stage$(1)-T-$(2)-H-$(2)-perf\n+check-stage$(1)-H-$(2)-rustc:  check-stage$(1)-T-$(2)-H-$(2)-rustc\n+check-stage$(1)-H-$(2)-std:    check-stage$(1)-T-$(2)-H-$(2)-std\n+check-stage$(1)-H-$(2)-rpass:  check-stage$(1)-T-$(2)-H-$(2)-rpass\n+check-stage$(1)-H-$(2)-rfail:  check-stage$(1)-T-$(2)-H-$(2)-rfail\n+check-stage$(1)-H-$(2)-cfail:  check-stage$(1)-T-$(2)-H-$(2)-cfail\n+check-stage$(1)-H-$(2)-bench:  check-stage$(1)-T-$(2)-H-$(2)-bench\n \n endef\n \n-$(eval $(call DEF_CHECK_STAGE,0))\n-$(eval $(call DEF_CHECK_STAGE,1))\n-$(eval $(call DEF_CHECK_STAGE,2))\n-$(eval $(call DEF_CHECK_STAGE,3))\n+$(foreach stage,$(STAGES),\t\t\t\t\t\t\t\t\\\n+ $(eval $(foreach target,$(CFG_TARGET_TRIPLES),\t\t\t\\\n+  $(eval $(call DEF_CHECK_SAME,$(stage),$(target))))))\n+\n+define DEF_CHECK_HOST\n+\n+check-stage$(1):        check-stage$(1)-H-$(CFG_HOST_TRIPLE)\n+check-stage$(1)-perf:   check-stage$(1)-H-$(CFG_HOST_TRIPLE)-perf\n+check-stage$(1)-rustc:  check-stage$(1)-H-$(CFG_HOST_TRIPLE)-rustc\n+check-stage$(1)-std:    check-stage$(1)-H-$(CFG_HOST_TRIPLE)-std\n+check-stage$(1)-rpass:  check-stage$(1)-H-$(CFG_HOST_TRIPLE)-rpass\n+check-stage$(1)-rfail:  check-stage$(1)-H-$(CFG_HOST_TRIPLE)-rfail\n+check-stage$(1)-cfail:  check-stage$(1)-H-$(CFG_HOST_TRIPLE)-cfail\n+check-stage$(1)-bench:  check-stage$(1)-H-$(CFG_HOST_TRIPLE)-bench\n+\n+endef\n \n+$(foreach stage,$(STAGES),\t\t\t\t\t\t\\\n+ $(eval $(call DEF_CHECK_HOST,$(stage))))\n \n ######################################################################\n # Fast-test rules"}]}