{"sha": "89c201e3be38fb91922c45dcceced1f2dfdf599c", "node_id": "C_kwDOAAsO6NoAKDg5YzIwMWUzYmUzOGZiOTE5MjJjNDVkY2NlY2VkMWYyZGZkZjU5OWM", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2023-02-22T09:35:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-22T09:35:07Z"}, "message": "Rollup merge of #108168 - clubby789:recursive-type-alias, r=compiler-errors\n\nFix ICE on type alias in recursion\n\nFixes #108160", "tree": {"sha": "6620d77d2956df4d7a0cd173793646749f336098", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6620d77d2956df4d7a0cd173793646749f336098"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89c201e3be38fb91922c45dcceced1f2dfdf599c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj9eHLCRBK7hj4Ov3rIwAAzUAIADdypVRIZ9dUK1QT3yHlhIzv\nNTODbGsRkCnjx0eYSTmokpzsFTaq+ahz8uDiJjj4dJHfMkXIELeqQQNUSwDkWgtc\ny4s4mYR+7siuQITt3oG8G92RGfljuep5lNQR44QnvTtpPvdmZ0sQTaKuCVNjka2/\n03zC1v5rdA1SvOzUaQq3Pvv+Lo0sFIkOTd8Q1w/c7/dZ1YheMn/S7uUf/0ATj09q\nBCgl5bNh51oNF0njmrMUlQ7Vjcg0tVuz6S6v84RNK9btefh7dJgXTFZPodywBvhj\nNolIwSEIZftob1lSb/2HFZF4prmHLlkmg4DElZ/bRiOwJmJH+lRyTrBvEcNa+uo=\n=XLwT\n-----END PGP SIGNATURE-----\n", "payload": "tree 6620d77d2956df4d7a0cd173793646749f336098\nparent f1ad7f07f23f5c6922eff61308ae02173723844b\nparent 21bcd2ee9c9e8d4453afc28a7f736ee754241457\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1677058507 +0100\ncommitter GitHub <noreply@github.com> 1677058507 +0100\n\nRollup merge of #108168 - clubby789:recursive-type-alias, r=compiler-errors\n\nFix ICE on type alias in recursion\n\nFixes #108160\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89c201e3be38fb91922c45dcceced1f2dfdf599c", "html_url": "https://github.com/rust-lang/rust/commit/89c201e3be38fb91922c45dcceced1f2dfdf599c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89c201e3be38fb91922c45dcceced1f2dfdf599c/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1ad7f07f23f5c6922eff61308ae02173723844b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1ad7f07f23f5c6922eff61308ae02173723844b", "html_url": "https://github.com/rust-lang/rust/commit/f1ad7f07f23f5c6922eff61308ae02173723844b"}, {"sha": "21bcd2ee9c9e8d4453afc28a7f736ee754241457", "url": "https://api.github.com/repos/rust-lang/rust/commits/21bcd2ee9c9e8d4453afc28a7f736ee754241457", "html_url": "https://github.com/rust-lang/rust/commit/21bcd2ee9c9e8d4453afc28a7f736ee754241457"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "21f3ef9267ff35227b5976fbcd7ad02ef52decec", "filename": "compiler/rustc_middle/src/values.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/89c201e3be38fb91922c45dcceced1f2dfdf599c/compiler%2Frustc_middle%2Fsrc%2Fvalues.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89c201e3be38fb91922c45dcceced1f2dfdf599c/compiler%2Frustc_middle%2Fsrc%2Fvalues.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fvalues.rs?ref=89c201e3be38fb91922c45dcceced1f2dfdf599c", "patch": "@@ -2,7 +2,7 @@ use crate::dep_graph::DepKind;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::{pluralize, struct_span_err, Applicability, MultiSpan};\n use rustc_hir as hir;\n-use rustc_hir::def::DefKind;\n+use rustc_hir::def::{DefKind, Res};\n use rustc_middle::ty::Representability;\n use rustc_middle::ty::{self, DefIdTree, Ty, TyCtxt};\n use rustc_query_system::query::QueryInfo;\n@@ -199,7 +199,8 @@ fn find_item_ty_spans(\n ) {\n     match ty.kind {\n         hir::TyKind::Path(hir::QPath::Resolved(_, path)) => {\n-            if let Some(def_id) = path.res.opt_def_id() {\n+            if let Res::Def(kind, def_id) = path.res\n+                && kind != DefKind::TyAlias {\n                 let check_params = def_id.as_local().map_or(true, |def_id| {\n                     if def_id == needle {\n                         spans.push(ty.span);"}, {"sha": "59add7eb18bdb92355f27278a6d76ec6cf0e4ce2", "filename": "tests/ui/infinite/auxiliary/alias.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/89c201e3be38fb91922c45dcceced1f2dfdf599c/tests%2Fui%2Finfinite%2Fauxiliary%2Falias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89c201e3be38fb91922c45dcceced1f2dfdf599c/tests%2Fui%2Finfinite%2Fauxiliary%2Falias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfinite%2Fauxiliary%2Falias.rs?ref=89c201e3be38fb91922c45dcceced1f2dfdf599c", "patch": "@@ -0,0 +1,2 @@\n+pub struct W<T>(T);\n+pub type Wrapper<T> = W<T>;"}, {"sha": "45356f359ceded3a0916be4376dbdbb930bfe7e3", "filename": "tests/ui/infinite/infinite-alias.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/89c201e3be38fb91922c45dcceced1f2dfdf599c/tests%2Fui%2Finfinite%2Finfinite-alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89c201e3be38fb91922c45dcceced1f2dfdf599c/tests%2Fui%2Finfinite%2Finfinite-alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfinite%2Finfinite-alias.rs?ref=89c201e3be38fb91922c45dcceced1f2dfdf599c", "patch": "@@ -0,0 +1,9 @@\n+// aux-build: alias.rs\n+// regression test for 108160\n+\n+extern crate alias;\n+\n+use alias::Wrapper;\n+struct Rec(Wrapper<Rec>); //~ ERROR recursive type `Rec` has infinite\n+\n+fn main() {}"}, {"sha": "9d9265f8c367c44ae82d239fac544fac6fdc3e28", "filename": "tests/ui/infinite/infinite-alias.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/89c201e3be38fb91922c45dcceced1f2dfdf599c/tests%2Fui%2Finfinite%2Finfinite-alias.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/89c201e3be38fb91922c45dcceced1f2dfdf599c/tests%2Fui%2Finfinite%2Finfinite-alias.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfinite%2Finfinite-alias.stderr?ref=89c201e3be38fb91922c45dcceced1f2dfdf599c", "patch": "@@ -0,0 +1,14 @@\n+error[E0072]: recursive type `Rec` has infinite size\n+  --> $DIR/infinite-alias.rs:7:1\n+   |\n+LL | struct Rec(Wrapper<Rec>);\n+   | ^^^^^^^^^^ ------------ recursive without indirection\n+   |\n+help: insert some indirection (e.g., a `Box`, `Rc`, or `&`) to break the cycle\n+   |\n+LL | struct Rec(Box<Wrapper<Rec>>);\n+   |            ++++            +\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0072`."}]}