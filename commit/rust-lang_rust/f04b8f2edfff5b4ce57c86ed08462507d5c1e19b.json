{"sha": "f04b8f2edfff5b4ce57c86ed08462507d5c1e19b", "node_id": "C_kwDOAAsO6NoAKGYwNGI4ZjJlZGZmZjViNGNlNTdjODZlZDA4NDYyNTA3ZDVjMWUxOWI", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2021-12-06T00:21:23Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2021-12-06T00:48:57Z"}, "message": "Make treatment of generator drop shims explicit\n\nNotably, the passes at the end of `make_shim` aren't applied to them.", "tree": {"sha": "65d69fa3dc4711b6cd2b345fa63b5f90c1eba269", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65d69fa3dc4711b6cd2b345fa63b5f90c1eba269"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f04b8f2edfff5b4ce57c86ed08462507d5c1e19b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f04b8f2edfff5b4ce57c86ed08462507d5c1e19b", "html_url": "https://github.com/rust-lang/rust/commit/f04b8f2edfff5b4ce57c86ed08462507d5c1e19b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f04b8f2edfff5b4ce57c86ed08462507d5c1e19b/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6afbfcaa3ec1053d806af2055ded58b1faff4dee", "url": "https://api.github.com/repos/rust-lang/rust/commits/6afbfcaa3ec1053d806af2055ded58b1faff4dee", "html_url": "https://github.com/rust-lang/rust/commit/6afbfcaa3ec1053d806af2055ded58b1faff4dee"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "a913c1f0d5ba8e756534d27efb896554c0284092", "filename": "compiler/rustc_mir_transform/src/shim.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f04b8f2edfff5b4ce57c86ed08462507d5c1e19b/compiler%2Frustc_mir_transform%2Fsrc%2Fshim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f04b8f2edfff5b4ce57c86ed08462507d5c1e19b/compiler%2Frustc_mir_transform%2Fsrc%2Fshim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fshim.rs?ref=f04b8f2edfff5b4ce57c86ed08462507d5c1e19b", "patch": "@@ -64,7 +64,19 @@ fn make_shim<'tcx>(tcx: TyCtxt<'tcx>, instance: ty::InstanceDef<'tcx>) -> Body<'\n \n             build_call_shim(tcx, instance, Some(Adjustment::RefMut), CallKind::Direct(call_mut))\n         }\n-        ty::InstanceDef::DropGlue(def_id, ty) => build_drop_shim(tcx, def_id, ty),\n+\n+        ty::InstanceDef::DropGlue(def_id, ty) => {\n+            // FIXME(#91576): Drop shims for generators aren't subject to the MIR passes at the end\n+            // of this function. Is this intentional?\n+            if let Some(ty::Generator(gen_def_id, substs, _)) = ty.map(ty::TyS::kind) {\n+                let body = tcx.optimized_mir(*gen_def_id).generator_drop().unwrap();\n+                let body = body.clone().subst(tcx, substs);\n+                debug!(\"make_shim({:?}) = {:?}\", instance, body);\n+                return body;\n+            }\n+\n+            build_drop_shim(tcx, def_id, ty)\n+        }\n         ty::InstanceDef::CloneShim(def_id, ty) => build_clone_shim(tcx, def_id, ty),\n         ty::InstanceDef::Virtual(..) => {\n             bug!(\"InstanceDef::Virtual ({:?}) is for direct calls only\", instance)\n@@ -75,14 +87,6 @@ fn make_shim<'tcx>(tcx: TyCtxt<'tcx>, instance: ty::InstanceDef<'tcx>) -> Body<'\n     };\n     debug!(\"make_shim({:?}) = untransformed {:?}\", instance, result);\n \n-    // In some of the above cases, we seem to be invoking the passes for non-shim MIR bodies.\n-    // If that happens, there's no need to run them again.\n-    //\n-    // FIXME: Is this intentional?\n-    if result.phase >= MirPhase::Const {\n-        return result;\n-    }\n-\n     pm::run_passes(\n         tcx,\n         &mut result,\n@@ -140,11 +144,7 @@ fn local_decls_for_sig<'tcx>(\n fn build_drop_shim<'tcx>(tcx: TyCtxt<'tcx>, def_id: DefId, ty: Option<Ty<'tcx>>) -> Body<'tcx> {\n     debug!(\"build_drop_shim(def_id={:?}, ty={:?})\", def_id, ty);\n \n-    // Check if this is a generator, if so, return the drop glue for it\n-    if let Some(&ty::Generator(gen_def_id, substs, _)) = ty.map(|ty| ty.kind()) {\n-        let body = tcx.optimized_mir(gen_def_id).generator_drop().unwrap();\n-        return body.clone().subst(tcx, substs);\n-    }\n+    assert!(!matches!(ty, Some(ty) if ty.is_generator()));\n \n     let substs = if let Some(ty) = ty {\n         tcx.intern_substs(&[ty.into()])"}]}