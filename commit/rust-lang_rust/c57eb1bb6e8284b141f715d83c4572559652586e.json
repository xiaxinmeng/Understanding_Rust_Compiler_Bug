{"sha": "c57eb1bb6e8284b141f715d83c4572559652586e", "node_id": "C_kwDOAAsO6NoAKGM1N2ViMWJiNmU4Mjg0YjE0MWY3MTVkODNjNDU3MjU1OTY1MjU4NmU", "commit": {"author": {"name": "jyn", "email": "github@jyn.dev", "date": "2023-06-03T19:31:36Z"}, "committer": {"name": "jyn", "email": "github@jyn.dev", "date": "2023-06-03T19:31:36Z"}, "message": "rename src/dst to original/link\n\nthis is consistent with std and makes it much easier to understand what's actually happening", "tree": {"sha": "d36a5a2657363253e5eeff0b7e9a561a13fc654f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d36a5a2657363253e5eeff0b7e9a561a13fc654f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c57eb1bb6e8284b141f715d83c4572559652586e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c57eb1bb6e8284b141f715d83c4572559652586e", "html_url": "https://github.com/rust-lang/rust/commit/c57eb1bb6e8284b141f715d83c4572559652586e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c57eb1bb6e8284b141f715d83c4572559652586e/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6611d34f13be7b105a6eda384aa25e30f3c733b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6611d34f13be7b105a6eda384aa25e30f3c733b", "html_url": "https://github.com/rust-lang/rust/commit/f6611d34f13be7b105a6eda384aa25e30f3c733b"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "15337a4f8d672a60501c9a951ca268c1b1411233", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c57eb1bb6e8284b141f715d83c4572559652586e/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c57eb1bb6e8284b141f715d83c4572559652586e/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=c57eb1bb6e8284b141f715d83c4572559652586e", "patch": "@@ -959,21 +959,21 @@ impl Step for UnstableBookGen {\n     }\n }\n \n-fn symlink_dir_force(config: &Config, src: &Path, dst: &Path) -> io::Result<()> {\n+fn symlink_dir_force(config: &Config, original: &Path, link: &Path) -> io::Result<()> {\n     if config.dry_run() {\n         return Ok(());\n     }\n-    if let Ok(m) = fs::symlink_metadata(dst) {\n+    if let Ok(m) = fs::symlink_metadata(link) {\n         if m.file_type().is_dir() {\n-            fs::remove_dir_all(dst)?;\n+            fs::remove_dir_all(link)?;\n         } else {\n             // handle directory junctions on windows by falling back to\n             // `remove_dir`.\n-            fs::remove_file(dst).or_else(|_| fs::remove_dir(dst))?;\n+            fs::remove_file(link).or_else(|_| fs::remove_dir(link))?;\n         }\n     }\n \n-    symlink_dir(config, src, dst)\n+    symlink_dir(config, original, link)\n }\n \n #[derive(Ord, PartialOrd, Debug, Copy, Clone, Hash, PartialEq, Eq)]"}, {"sha": "7e29f671f028b96d60b63413f6c18fd8f2eed83a", "filename": "src/bootstrap/util.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c57eb1bb6e8284b141f715d83c4572559652586e/src%2Fbootstrap%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c57eb1bb6e8284b141f715d83c4572559652586e/src%2Fbootstrap%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Futil.rs?ref=c57eb1bb6e8284b141f715d83c4572559652586e", "patch": "@@ -134,17 +134,17 @@ pub(crate) fn program_out_of_date(stamp: &Path, key: &str) -> bool {\n \n /// Symlinks two directories, using junctions on Windows and normal symlinks on\n /// Unix.\n-pub fn symlink_dir(config: &Config, src: &Path, dest: &Path) -> io::Result<()> {\n+pub fn symlink_dir(config: &Config, original: &Path, link: &Path) -> io::Result<()> {\n     if config.dry_run() {\n         return Ok(());\n     }\n-    let _ = fs::remove_dir(dest);\n-    return symlink_dir_inner(src, dest);\n+    let _ = fs::remove_dir(link);\n+    return symlink_dir_inner(original, link);\n \n     #[cfg(not(windows))]\n-    fn symlink_dir_inner(src: &Path, dest: &Path) -> io::Result<()> {\n+    fn symlink_dir_inner(original: &Path, link: &Path) -> io::Result<()> {\n         use std::os::unix::fs;\n-        fs::symlink(src, dest)\n+        fs::symlink(original, link)\n     }\n \n     #[cfg(windows)]"}]}