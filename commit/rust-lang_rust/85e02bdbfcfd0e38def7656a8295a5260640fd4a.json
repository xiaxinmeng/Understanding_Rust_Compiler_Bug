{"sha": "85e02bdbfcfd0e38def7656a8295a5260640fd4a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1ZTAyYmRiZmNmZDBlMzhkZWY3NjU2YTgyOTVhNTI2MDY0MGZkNGE=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2017-03-08T23:13:43Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2017-03-14T04:39:23Z"}, "message": "Add tests.", "tree": {"sha": "fe8322efbb1430d52e930aa3c9c4d2fd83615268", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe8322efbb1430d52e930aa3c9c4d2fd83615268"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85e02bdbfcfd0e38def7656a8295a5260640fd4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85e02bdbfcfd0e38def7656a8295a5260640fd4a", "html_url": "https://github.com/rust-lang/rust/commit/85e02bdbfcfd0e38def7656a8295a5260640fd4a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85e02bdbfcfd0e38def7656a8295a5260640fd4a/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "839c2860ccb7cd3d381abf2838dfba566f52618e", "url": "https://api.github.com/repos/rust-lang/rust/commits/839c2860ccb7cd3d381abf2838dfba566f52618e", "html_url": "https://github.com/rust-lang/rust/commit/839c2860ccb7cd3d381abf2838dfba566f52618e"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "df881bedec1bbf5202dfd618eefe913c658c13fc", "filename": "src/test/compile-fail-fulldeps/proc-macro/proc-macro-attributes.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/85e02bdbfcfd0e38def7656a8295a5260640fd4a/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fproc-macro-attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85e02bdbfcfd0e38def7656a8295a5260640fd4a/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fproc-macro-attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fproc-macro-attributes.rs?ref=85e02bdbfcfd0e38def7656a8295a5260640fd4a", "patch": "@@ -20,6 +20,7 @@ extern crate derive_b;\n #[C] //~ ERROR: The attribute `C` is currently unknown to the compiler\n #[B(D)]\n #[B(E = \"foo\")]\n+#[B arbitrary tokens] //~ expected one of `(` or `=`, found `arbitrary`\n struct B;\n \n fn main() {}"}, {"sha": "c28e22d58f9db8f6adc2f1a104903e9a47112cac", "filename": "src/test/compile-fail/macro-with-seps-err-msg.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/85e02bdbfcfd0e38def7656a8295a5260640fd4a/src%2Ftest%2Fcompile-fail%2Fmacro-with-seps-err-msg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85e02bdbfcfd0e38def7656a8295a5260640fd4a/src%2Ftest%2Fcompile-fail%2Fmacro-with-seps-err-msg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-with-seps-err-msg.rs?ref=85e02bdbfcfd0e38def7656a8295a5260640fd4a", "patch": "@@ -14,4 +14,5 @@ fn main() {\n     globnar::brotz!(); //~ ERROR non-ident macro paths are experimental\n     ::foo!(); //~ ERROR non-ident macro paths are experimental\n     foo::<T>!(); //~ ERROR type parameters are not allowed on macros\n+    #[derive(foo::Bar)] struct T; //~ ERROR non-ident macro paths are experimental\n }"}, {"sha": "8a9fdd7536770dc07fdd3357f63e0893e08654c9", "filename": "src/test/run-pass-fulldeps/proc-macro/attr-args.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/85e02bdbfcfd0e38def7656a8295a5260640fd4a/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fattr-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85e02bdbfcfd0e38def7656a8295a5260640fd4a/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fattr-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fattr-args.rs?ref=85e02bdbfcfd0e38def7656a8295a5260640fd4a", "patch": "@@ -19,6 +19,6 @@ use attr_args::attr_with_args;\n #[attr_with_args(text = \"Hello, world!\")]\n fn foo() {}\n \n-fn main() {\n-    assert_eq!(foo(), \"Hello, world!\");\n-}\n+#[::attr_args::identity\n+  fn main() { assert_eq!(foo(), \"Hello, world!\"); }]\n+struct Dummy;"}, {"sha": "989c77f1089cfbe913b11adb77663bc3d194c429", "filename": "src/test/run-pass-fulldeps/proc-macro/auxiliary/attr-args.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/85e02bdbfcfd0e38def7656a8295a5260640fd4a/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fattr-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85e02bdbfcfd0e38def7656a8295a5260640fd4a/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fattr-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fattr-args.rs?ref=85e02bdbfcfd0e38def7656a8295a5260640fd4a", "patch": "@@ -30,3 +30,8 @@ pub fn attr_with_args(args: TokenStream, input: TokenStream) -> TokenStream {\n         fn foo() -> &'static str { \"Hello, world!\" }\n     \"#.parse().unwrap()\n }\n+\n+#[proc_macro_attribute]\n+pub fn identity(attr_args: TokenStream, _: TokenStream) -> TokenStream {\n+    attr_args\n+}"}, {"sha": "7b521f2b9138a21bb01c40d2ae9ea1d7ff0ebdb5", "filename": "src/test/run-pass-fulldeps/proc-macro/auxiliary/derive-b.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/85e02bdbfcfd0e38def7656a8295a5260640fd4a/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fderive-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85e02bdbfcfd0e38def7656a8295a5260640fd4a/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fderive-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fderive-b.rs?ref=85e02bdbfcfd0e38def7656a8295a5260640fd4a", "patch": "@@ -19,7 +19,7 @@ use proc_macro::TokenStream;\n #[proc_macro_derive(B, attributes(B, C))]\n pub fn derive(input: TokenStream) -> TokenStream {\n     let input = input.to_string();\n-    assert!(input.contains(\"#[B]\"));\n+    assert!(input.contains(\"#[B arbitrary tokens]\"));\n     assert!(input.contains(\"struct B {\"));\n     assert!(input.contains(\"#[C]\"));\n     \"\".parse().unwrap()"}, {"sha": "995dc65729a5059f8719c88ee9b3f7380886cc02", "filename": "src/test/run-pass-fulldeps/proc-macro/derive-b.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/85e02bdbfcfd0e38def7656a8295a5260640fd4a/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fderive-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85e02bdbfcfd0e38def7656a8295a5260640fd4a/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fderive-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fderive-b.rs?ref=85e02bdbfcfd0e38def7656a8295a5260640fd4a", "patch": "@@ -11,11 +11,12 @@\n // aux-build:derive-b.rs\n // ignore-stage1\n \n-#[macro_use]\n+#![feature(proc_macro)]\n+\n extern crate derive_b;\n \n-#[derive(Debug, PartialEq, B, Eq, Copy, Clone)]\n-#[B]\n+#[derive(Debug, PartialEq, derive_b::B, Eq, Copy, Clone)]\n+#[cfg_attr(all(), B arbitrary tokens)]\n struct B {\n     #[C]\n     a: u64"}]}