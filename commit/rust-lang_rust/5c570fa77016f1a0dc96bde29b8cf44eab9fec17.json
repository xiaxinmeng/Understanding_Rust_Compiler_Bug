{"sha": "5c570fa77016f1a0dc96bde29b8cf44eab9fec17", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjNTcwZmE3NzAxNmYxYTBkYzk2YmRlMjliOGNmNDRlYWI5ZmVjMTc=", "commit": {"author": {"name": "Hirokazu Hata", "email": "h.hata.ai.t@gmail.com", "date": "2019-01-15T00:26:20Z"}, "committer": {"name": "Hirokazu Hata", "email": "h.hata.ai.t@gmail.com", "date": "2019-01-16T14:39:14Z"}, "message": "Remove unneeded code", "tree": {"sha": "5ae7019ed9b383a8ce933f38879c04df7bb72fc6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ae7019ed9b383a8ce933f38879c04df7bb72fc6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c570fa77016f1a0dc96bde29b8cf44eab9fec17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c570fa77016f1a0dc96bde29b8cf44eab9fec17", "html_url": "https://github.com/rust-lang/rust/commit/5c570fa77016f1a0dc96bde29b8cf44eab9fec17", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c570fa77016f1a0dc96bde29b8cf44eab9fec17/comments", "author": {"login": "h-michael", "id": 4556097, "node_id": "MDQ6VXNlcjQ1NTYwOTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4556097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/h-michael", "html_url": "https://github.com/h-michael", "followers_url": "https://api.github.com/users/h-michael/followers", "following_url": "https://api.github.com/users/h-michael/following{/other_user}", "gists_url": "https://api.github.com/users/h-michael/gists{/gist_id}", "starred_url": "https://api.github.com/users/h-michael/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/h-michael/subscriptions", "organizations_url": "https://api.github.com/users/h-michael/orgs", "repos_url": "https://api.github.com/users/h-michael/repos", "events_url": "https://api.github.com/users/h-michael/events{/privacy}", "received_events_url": "https://api.github.com/users/h-michael/received_events", "type": "User", "site_admin": false}, "committer": {"login": "h-michael", "id": 4556097, "node_id": "MDQ6VXNlcjQ1NTYwOTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4556097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/h-michael", "html_url": "https://github.com/h-michael", "followers_url": "https://api.github.com/users/h-michael/followers", "following_url": "https://api.github.com/users/h-michael/following{/other_user}", "gists_url": "https://api.github.com/users/h-michael/gists{/gist_id}", "starred_url": "https://api.github.com/users/h-michael/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/h-michael/subscriptions", "organizations_url": "https://api.github.com/users/h-michael/orgs", "repos_url": "https://api.github.com/users/h-michael/repos", "events_url": "https://api.github.com/users/h-michael/events{/privacy}", "received_events_url": "https://api.github.com/users/h-michael/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "478ce1c8b5288432509f39aeb5b611e7614d0e03", "url": "https://api.github.com/repos/rust-lang/rust/commits/478ce1c8b5288432509f39aeb5b611e7614d0e03", "html_url": "https://github.com/rust-lang/rust/commit/478ce1c8b5288432509f39aeb5b611e7614d0e03"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "55373b05af8d3ea7bb297f3d16000e60d014c2c1", "filename": "crates/ra_hir/src/ty.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5c570fa77016f1a0dc96bde29b8cf44eab9fec17/crates%2Fra_hir%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c570fa77016f1a0dc96bde29b8cf44eab9fec17/crates%2Fra_hir%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty.rs?ref=5c570fa77016f1a0dc96bde29b8cf44eab9fec17", "patch": "@@ -1107,13 +1107,13 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n                 Ty::Tuple(Arc::from(ty_vec))\n             },\n             Expr::Array { exprs } => {\n-                let mut elem_ty = match &expected.ty {\n+                let elem_ty = match &expected.ty {\n                     Ty::Slice(inner) | Ty::Array(inner) => Ty::clone(&inner),\n                     _ => self.new_type_var(),\n                 };\n \n                 for expr in exprs.iter() {\n-                    elem_ty = self.infer_expr(*expr, &Expectation::has_type(elem_ty.clone()));\n+                    self.infer_expr(*expr, &Expectation::has_type(elem_ty.clone()));\n                 }\n \n                 Ty::Array(Arc::new(elem_ty))"}]}