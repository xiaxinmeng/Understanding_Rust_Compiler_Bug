{"sha": "e02642dbb32dff0c0c2294f6953975e3e04ef696", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwMjY0MmRiYjMyZGZmMGMwYzIyOTRmNjk1Mzk3NWUzZTA0ZWY2OTY=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-07-03T18:55:28Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-08-19T19:02:32Z"}, "message": "Fix confirm.rs", "tree": {"sha": "8a7bcd24caf54d1cdff3de031ad15708d917be26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a7bcd24caf54d1cdff3de031ad15708d917be26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e02642dbb32dff0c0c2294f6953975e3e04ef696", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e02642dbb32dff0c0c2294f6953975e3e04ef696", "html_url": "https://github.com/rust-lang/rust/commit/e02642dbb32dff0c0c2294f6953975e3e04ef696", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e02642dbb32dff0c0c2294f6953975e3e04ef696/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "340a7fc4f5c9c8c9e8526d16c8a20ff48e0b514f", "url": "https://api.github.com/repos/rust-lang/rust/commits/340a7fc4f5c9c8c9e8526d16c8a20ff48e0b514f", "html_url": "https://github.com/rust-lang/rust/commit/340a7fc4f5c9c8c9e8526d16c8a20ff48e0b514f"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "c9ac02928b3bad2a52f9b99ff49ab50564d4020c", "filename": "src/librustc_typeck/check/method/confirm.rs", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/e02642dbb32dff0c0c2294f6953975e3e04ef696/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e02642dbb32dff0c0c2294f6953975e3e04ef696/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs?ref=e02642dbb32dff0c0c2294f6953975e3e04ef696", "patch": "@@ -323,12 +323,26 @@ impl<'a, 'gcx, 'tcx> ConfirmContext<'a, 'gcx, 'tcx> {\n         // parameters from the type and those from the method.\n         assert_eq!(method_generics.parent_count, parent_substs.len());\n \n+        let inferred_lifetimes = if if let Some(ref data) = segment.args {\n+            !data.args.iter().any(|arg| match arg {\n+                GenericArg::Lifetime(_) => true,\n+                _ => false,\n+            })\n+        } else {\n+            true\n+        } {\n+            method_generics.own_counts().lifetimes\n+        } else {\n+            0\n+        };\n+\n         Substs::for_item(self.tcx, pick.item.def_id, |param, _| {\n-            let i = param.index as usize;\n-            if i < parent_substs.len() {\n-                parent_substs[i]\n+            let param_idx = param.index as usize;\n+            if param_idx < parent_substs.len() {\n+                parent_substs[param_idx]\n             } else {\n-                let param_idx = i - parent_substs.len();\n+                let param_idx = (param.index as usize - parent_substs.len())\n+                    .saturating_sub(inferred_lifetimes);\n \n                 if let Some(ref data) = segment.args {\n                     if let Some(arg) = data.args.get(param_idx) {"}]}