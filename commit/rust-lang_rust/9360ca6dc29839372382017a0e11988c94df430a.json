{"sha": "9360ca6dc29839372382017a0e11988c94df430a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzNjBjYTZkYzI5ODM5MzcyMzgyMDE3YTBlMTE5ODhjOTRkZjQzMGE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-17T16:49:03Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-17T16:49:03Z"}, "message": "Auto merge of #5908 - giraffate:fix_fp_for_same_item_push, r=flip1995\n\nFix FP for `same_item_push`\n\nFixes https://github.com/rust-lang/rust-clippy/issues/5902\n\nchangelog: Fix FP for `same_item_push` where the pushed variable is mutated.", "tree": {"sha": "d837dde12637bf204a263c6bec17de136a6c7857", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d837dde12637bf204a263c6bec17de136a6c7857"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9360ca6dc29839372382017a0e11988c94df430a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9360ca6dc29839372382017a0e11988c94df430a", "html_url": "https://github.com/rust-lang/rust/commit/9360ca6dc29839372382017a0e11988c94df430a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9360ca6dc29839372382017a0e11988c94df430a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "838c201af9a4d44cd93d2003ee06b6319067d5b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/838c201af9a4d44cd93d2003ee06b6319067d5b0", "html_url": "https://github.com/rust-lang/rust/commit/838c201af9a4d44cd93d2003ee06b6319067d5b0"}, {"sha": "99ba290a14c6654164cea8339b827d8da0ff600d", "url": "https://api.github.com/repos/rust-lang/rust/commits/99ba290a14c6654164cea8339b827d8da0ff600d", "html_url": "https://github.com/rust-lang/rust/commit/99ba290a14c6654164cea8339b827d8da0ff600d"}], "stats": {"total": 38, "additions": 33, "deletions": 5}, "files": [{"sha": "df06031d999e60af859cef06263e468ee170ea88", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 25, "deletions": 5, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/9360ca6dc29839372382017a0e11988c94df430a/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9360ca6dc29839372382017a0e11988c94df430a/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=9360ca6dc29839372382017a0e11988c94df430a", "patch": "@@ -1141,11 +1141,31 @@ fn detect_same_item_push<'tcx>(\n     if same_item_push_visitor.should_lint {\n         if let Some((vec, pushed_item)) = same_item_push_visitor.vec_push {\n             // Make sure that the push does not involve possibly mutating values\n-            if mutated_variables(pushed_item, cx).map_or(false, |mutvars| mutvars.is_empty()) {\n-                if let PatKind::Wild = pat.kind {\n-                    let vec_str = snippet_with_macro_callsite(cx, vec.span, \"\");\n-                    let item_str = snippet_with_macro_callsite(cx, pushed_item.span, \"\");\n-\n+            if let PatKind::Wild = pat.kind {\n+                let vec_str = snippet_with_macro_callsite(cx, vec.span, \"\");\n+                let item_str = snippet_with_macro_callsite(cx, pushed_item.span, \"\");\n+                if let ExprKind::Path(ref qpath) = pushed_item.kind {\n+                    if_chain! {\n+                        if let Res::Local(hir_id) = qpath_res(cx, qpath, pushed_item.hir_id);\n+                        let node = cx.tcx.hir().get(hir_id);\n+                        if let Node::Binding(pat) = node;\n+                        if let PatKind::Binding(bind_ann, ..) = pat.kind;\n+                        if !matches!(bind_ann, BindingAnnotation::RefMut | BindingAnnotation::Mutable);\n+                        then {\n+                            span_lint_and_help(\n+                                cx,\n+                                SAME_ITEM_PUSH,\n+                                vec.span,\n+                                \"it looks like the same item is being pushed into this Vec\",\n+                                None,\n+                                &format!(\n+                                    \"try using vec![{};SIZE] or {}.resize(NEW_SIZE, {})\",\n+                                    item_str, vec_str, item_str\n+                                ),\n+                            )\n+                        }\n+                    }\n+                } else if mutated_variables(pushed_item, cx).map_or(false, |mutvars| mutvars.is_empty()) {\n                     span_lint_and_help(\n                         cx,\n                         SAME_ITEM_PUSH,"}, {"sha": "bfe27e020445c77b83c4ddfb14f773eb4ee36b85", "filename": "tests/ui/same_item_push.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9360ca6dc29839372382017a0e11988c94df430a/tests%2Fui%2Fsame_item_push.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9360ca6dc29839372382017a0e11988c94df430a/tests%2Fui%2Fsame_item_push.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsame_item_push.rs?ref=9360ca6dc29839372382017a0e11988c94df430a", "patch": "@@ -86,4 +86,12 @@ fn main() {\n     for a in vec_a {\n         vec12.push(2u8.pow(a.kind));\n     }\n+\n+    // Fix #5902\n+    let mut vec13: Vec<u8> = Vec::new();\n+    let mut item = 0;\n+    for _ in 0..10 {\n+        vec13.push(item);\n+        item += 10;\n+    }\n }"}]}