{"sha": "d04ea41d1fbf8c60115bf0746fd9756ff17183c2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwNGVhNDFkMWZiZjhjNjAxMTViZjA3NDZmZDk3NTZmZjE3MTgzYzI=", "commit": {"author": {"name": "Yusuke Tanaka", "email": "yusuktan@maguro.dev", "date": "2021-02-10T15:55:32Z"}, "committer": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2021-03-02T09:40:24Z"}, "message": "Move transmute_int_to_bool to its own module", "tree": {"sha": "27a80447e4da8b8075eaf968bc9750118a90ff2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27a80447e4da8b8075eaf968bc9750118a90ff2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d04ea41d1fbf8c60115bf0746fd9756ff17183c2", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEij1UXJ/PQTcb99vTHKDfKvWdaKUFAmA+CAgACgkQHKDfKvWd\naKVv9Q/9GopSBtJZeOMU8HUN2Q5EwR0fxZdE6d7xS8UOnn3IaA7DmporZOX08UYg\nAT89JNMNDP0X6oCRrVRK+aWYK51gKQ63H4IFjkqjQzHUphV+OTgXTloCLpaDg1GH\n4p5cGni9MlA0vpAX4NC63IJ4sIU4gekoPhdEY7UmjzvA7eI8o8EMwC/td+wMUHfw\neYsj3WaaasRt4W02j27rQFX2CyIhVmDD5Bi3H881wsVVY66SxQatFXR7upTJ+Fis\nQZvH1eZjqiPCCk00seN6K4csmwuAQP59MaZc+4o6IvphzQ5YywgFIPz6ElY1ij93\nhCzLQA4osxF5crI1EBeVGn8H0OM7NjaludnTWYRtM/nZf1Wwe2S3y8X0OI6OLhug\nhcvjZQL5jjcKPvO5V6Nkco9aKZ6f72l9viFkryxYl0WQbk/uN+gRslomrVHQt+6i\nxTHSUQGnPwQYaWkxC8sX6/2c2yyNcFYQD6tWp7Ruq9IZhjO6nYQiY1Tc1TMQs4mR\nmprs59Tci0IETc36yDhN3ZqcScqwhITk9A4zRgBe9wFvCTF9if/QL8DmAmqodY3N\n4hlpih63vSLRprlFKk/08ylxMYK7YsJc7WBQHZZ3I0Km8ZP4h6B06tp9MJS/7n4T\nPfat88aDRfiOgZS9GdSn5Uh1jWqxGVwL2gFwhfsFiFc2As/T9YU=\n=lJro\n-----END PGP SIGNATURE-----", "payload": "tree 27a80447e4da8b8075eaf968bc9750118a90ff2a\nparent f8bc0e249c532ceacc9897ea08f7b97ecba5408e\nauthor Yusuke Tanaka <yusuktan@maguro.dev> 1612972532 +0900\ncommitter flip1995 <philipp.krones@embecosm.com> 1614678024 +0100\n\nMove transmute_int_to_bool to its own module\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d04ea41d1fbf8c60115bf0746fd9756ff17183c2", "html_url": "https://github.com/rust-lang/rust/commit/d04ea41d1fbf8c60115bf0746fd9756ff17183c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d04ea41d1fbf8c60115bf0746fd9756ff17183c2/comments", "author": {"login": "magurotuna", "id": 23649474, "node_id": "MDQ6VXNlcjIzNjQ5NDc0", "avatar_url": "https://avatars.githubusercontent.com/u/23649474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/magurotuna", "html_url": "https://github.com/magurotuna", "followers_url": "https://api.github.com/users/magurotuna/followers", "following_url": "https://api.github.com/users/magurotuna/following{/other_user}", "gists_url": "https://api.github.com/users/magurotuna/gists{/gist_id}", "starred_url": "https://api.github.com/users/magurotuna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/magurotuna/subscriptions", "organizations_url": "https://api.github.com/users/magurotuna/orgs", "repos_url": "https://api.github.com/users/magurotuna/repos", "events_url": "https://api.github.com/users/magurotuna/events{/privacy}", "received_events_url": "https://api.github.com/users/magurotuna/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8bc0e249c532ceacc9897ea08f7b97ecba5408e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8bc0e249c532ceacc9897ea08f7b97ecba5408e", "html_url": "https://github.com/rust-lang/rust/commit/f8bc0e249c532ceacc9897ea08f7b97ecba5408e"}], "stats": {"total": 65, "additions": 47, "deletions": 18}, "files": [{"sha": "fa9edc9ae2cb4aa2b24a922cb4177e14f1808ba6", "filename": "clippy_lints/src/transmute/mod.rs", "status": "modified", "additions": 5, "deletions": 18, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/d04ea41d1fbf8c60115bf0746fd9756ff17183c2/clippy_lints%2Fsrc%2Ftransmute%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d04ea41d1fbf8c60115bf0746fd9756ff17183c2/clippy_lints%2Fsrc%2Ftransmute%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Fmod.rs?ref=d04ea41d1fbf8c60115bf0746fd9756ff17183c2", "patch": "@@ -1,4 +1,5 @@\n mod crosspointer_transmute;\n+mod transmute_int_to_bool;\n mod transmute_int_to_char;\n mod transmute_ptr_to_ptr;\n mod transmute_ptr_to_ref;\n@@ -380,26 +381,12 @@ impl<'tcx> LateLintPass<'tcx> for Transmute {\n                 if triggered {\n                     return;\n                 }\n+                let triggered = transmute_int_to_bool::check(cx, e, from_ty, to_ty, args);\n+                if triggered {\n+                    return;\n+                }\n \n                 match (&from_ty.kind(), &to_ty.kind()) {\n-                    (ty::Int(ty::IntTy::I8) | ty::Uint(ty::UintTy::U8), ty::Bool) => {\n-                        span_lint_and_then(\n-                            cx,\n-                            TRANSMUTE_INT_TO_BOOL,\n-                            e.span,\n-                            &format!(\"transmute from a `{}` to a `bool`\", from_ty),\n-                            |diag| {\n-                                let arg = sugg::Sugg::hir(cx, &args[0], \"..\");\n-                                let zero = sugg::Sugg::NonParen(Cow::from(\"0\"));\n-                                diag.span_suggestion(\n-                                    e.span,\n-                                    \"consider using\",\n-                                    sugg::make_binop(ast::BinOpKind::Ne, &arg, &zero).to_string(),\n-                                    Applicability::Unspecified,\n-                                );\n-                            },\n-                        )\n-                    },\n                     (ty::Int(_) | ty::Uint(_), ty::Float(_)) if !const_context => span_lint_and_then(\n                         cx,\n                         TRANSMUTE_INT_TO_FLOAT,"}, {"sha": "c66c7bff23257ced5b2551b0551ba53f03493539", "filename": "clippy_lints/src/transmute/transmute_int_to_bool.rs", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/d04ea41d1fbf8c60115bf0746fd9756ff17183c2/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_int_to_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d04ea41d1fbf8c60115bf0746fd9756ff17183c2/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_int_to_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_int_to_bool.rs?ref=d04ea41d1fbf8c60115bf0746fd9756ff17183c2", "patch": "@@ -0,0 +1,42 @@\n+use super::TRANSMUTE_INT_TO_BOOL;\n+use crate::utils::{span_lint_and_then, sugg};\n+use rustc_ast as ast;\n+use rustc_errors::Applicability;\n+use rustc_hir::Expr;\n+use rustc_lint::LateContext;\n+use rustc_middle::ty;\n+use rustc_middle::ty::Ty;\n+use std::borrow::Cow;\n+\n+/// Checks for `transmute_int_to_bool` lint.\n+/// Returns `true` if it's triggered, otherwise returns `false`.\n+pub(super) fn check<'tcx>(\n+    cx: &LateContext<'tcx>,\n+    e: &'tcx Expr<'_>,\n+    from_ty: Ty<'tcx>,\n+    to_ty: Ty<'tcx>,\n+    args: &'tcx [Expr<'_>],\n+) -> bool {\n+    match (&from_ty.kind(), &to_ty.kind()) {\n+        (ty::Int(ty::IntTy::I8) | ty::Uint(ty::UintTy::U8), ty::Bool) => {\n+            span_lint_and_then(\n+                cx,\n+                TRANSMUTE_INT_TO_BOOL,\n+                e.span,\n+                &format!(\"transmute from a `{}` to a `bool`\", from_ty),\n+                |diag| {\n+                    let arg = sugg::Sugg::hir(cx, &args[0], \"..\");\n+                    let zero = sugg::Sugg::NonParen(Cow::from(\"0\"));\n+                    diag.span_suggestion(\n+                        e.span,\n+                        \"consider using\",\n+                        sugg::make_binop(ast::BinOpKind::Ne, &arg, &zero).to_string(),\n+                        Applicability::Unspecified,\n+                    );\n+                },\n+            );\n+            true\n+        },\n+        _ => false,\n+    }\n+}"}]}