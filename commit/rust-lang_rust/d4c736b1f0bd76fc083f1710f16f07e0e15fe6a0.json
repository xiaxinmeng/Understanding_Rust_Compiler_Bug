{"sha": "d4c736b1f0bd76fc083f1710f16f07e0e15fe6a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0YzczNmIxZjBiZDc2ZmMwODNmMTcxMGYxNmYwN2UwZTE1ZmU2YTA=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-08-07T03:12:48Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-08-13T18:30:15Z"}, "message": "core: Deprecate ImmutableSlice::tailn and initn\n\nThese are equivalent to slice_from and slice_to.", "tree": {"sha": "ff971a3e328bf284aa041c365b0fdb241a703583", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff971a3e328bf284aa041c365b0fdb241a703583"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4c736b1f0bd76fc083f1710f16f07e0e15fe6a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4c736b1f0bd76fc083f1710f16f07e0e15fe6a0", "html_url": "https://github.com/rust-lang/rust/commit/d4c736b1f0bd76fc083f1710f16f07e0e15fe6a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4c736b1f0bd76fc083f1710f16f07e0e15fe6a0/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "033f28d4364e0bd0ff7031b67e6bd0356fe00bfd", "url": "https://api.github.com/repos/rust-lang/rust/commits/033f28d4364e0bd0ff7031b67e6bd0356fe00bfd", "html_url": "https://github.com/rust-lang/rust/commit/033f28d4364e0bd0ff7031b67e6bd0356fe00bfd"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "0eb972413071f7ac3e4919924974f034e5828ea6", "filename": "src/libcore/slice.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d4c736b1f0bd76fc083f1710f16f07e0e15fe6a0/src%2Flibcore%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4c736b1f0bd76fc083f1710f16f07e0e15fe6a0/src%2Flibcore%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice.rs?ref=d4c736b1f0bd76fc083f1710f16f07e0e15fe6a0", "patch": "@@ -163,10 +163,12 @@ pub trait ImmutableSlice<'a, T> {\n     /// Returns all but the first element of a vector\n     fn tail(&self) -> &'a [T];\n     /// Returns all but the first `n' elements of a vector\n+    #[deprecated = \"use slice_from\"]\n     fn tailn(&self, n: uint) -> &'a [T];\n     /// Returns all but the last element of a vector\n     fn init(&self) -> &'a [T];\n     /// Returns all but the last `n' elements of a vector\n+    #[deprecated = \"use slice_to but note the arguments are different\"]\n     fn initn(&self, n: uint) -> &'a [T];\n     /// Returns the last element of a vector, or `None` if it is empty.\n     fn last(&self) -> Option<&'a T>;\n@@ -339,6 +341,7 @@ impl<'a,T> ImmutableSlice<'a, T> for &'a [T] {\n     fn tail(&self) -> &'a [T] { self.slice(1, self.len()) }\n \n     #[inline]\n+    #[deprecated = \"use slice_from\"]\n     fn tailn(&self, n: uint) -> &'a [T] { self.slice(n, self.len()) }\n \n     #[inline]\n@@ -347,6 +350,7 @@ impl<'a,T> ImmutableSlice<'a, T> for &'a [T] {\n     }\n \n     #[inline]\n+    #[deprecated = \"use slice_to but note the arguments are different\"]\n     fn initn(&self, n: uint) -> &'a [T] {\n         self.slice(0, self.len() - n)\n     }"}]}