{"sha": "4139c0ac74c45803affb6c60f693a809c590778c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxMzljMGFjNzRjNDU4MDNhZmZiNmM2MGY2OTNhODA5YzU5MDc3OGM=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-02-10T06:23:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-02-10T06:23:59Z"}, "message": "Rollup merge of #48051 - ollie27:rustdoc_fn_unit_return, r=QuietMisdreavus\n\nrustdoc: Hide `-> ()` in cross crate inlined Fn* bounds", "tree": {"sha": "26a5f966b60d04d66d4c54f220a0b4aef463d55e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26a5f966b60d04d66d4c54f220a0b4aef463d55e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4139c0ac74c45803affb6c60f693a809c590778c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJafo//CRBK7hj4Ov3rIwAAdHIIABSv7awk/ub00sIWu5zlREkm\n2qWQOMBmZn62zml7I7C/3ZylnuRknE6YZ3fO9RgyXsX9fuP0CMb2/XpDZ+PH8gdi\nyjcLqVpMjMialwZHXxqn6oCvMWWGk8SA/ztME9Ln2uSI504546FKrfnedUfWsXK4\nEcg04/Qnbb6IfRQr+VXzm+M3h5vUCIYDoguqm/gyqlof1o7Wxs/371l5JhJafueL\nBpsmtdczoIGlE26qzk6xHfF4vo8O67mfkWwyH/bVV4cEW6yV2O/qzovwF4qaEDPn\nbP9QB3vLTLN4SzZiLX5xb1Lf4jUmjGQRHuzNRRLL5/iPrR6wu/uSP/lhvrNwG2o=\n=9zvU\n-----END PGP SIGNATURE-----\n", "payload": "tree 26a5f966b60d04d66d4c54f220a0b4aef463d55e\nparent c04ec2c3f966f989b2d1ce80846fca5dbd00b174\nparent 528d6b65b69a163fd34450d3d8806f1a4f37412d\nauthor kennytm <kennytm@gmail.com> 1518243839 +0800\ncommitter GitHub <noreply@github.com> 1518243839 +0800\n\nRollup merge of #48051 - ollie27:rustdoc_fn_unit_return, r=QuietMisdreavus\n\nrustdoc: Hide `-> ()` in cross crate inlined Fn* bounds\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4139c0ac74c45803affb6c60f693a809c590778c", "html_url": "https://github.com/rust-lang/rust/commit/4139c0ac74c45803affb6c60f693a809c590778c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4139c0ac74c45803affb6c60f693a809c590778c/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c04ec2c3f966f989b2d1ce80846fca5dbd00b174", "url": "https://api.github.com/repos/rust-lang/rust/commits/c04ec2c3f966f989b2d1ce80846fca5dbd00b174", "html_url": "https://github.com/rust-lang/rust/commit/c04ec2c3f966f989b2d1ce80846fca5dbd00b174"}, {"sha": "528d6b65b69a163fd34450d3d8806f1a4f37412d", "url": "https://api.github.com/repos/rust-lang/rust/commits/528d6b65b69a163fd34450d3d8806f1a4f37412d", "html_url": "https://github.com/rust-lang/rust/commit/528d6b65b69a163fd34450d3d8806f1a4f37412d"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "0eb4f9ba7e581469b0c4d41f843266aa8c66eb50", "filename": "src/librustdoc/clean/simplify.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4139c0ac74c45803affb6c60f693a809c590778c/src%2Flibrustdoc%2Fclean%2Fsimplify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4139c0ac74c45803affb6c60f693a809c590778c/src%2Flibrustdoc%2Fclean%2Fsimplify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fsimplify.rs?ref=4139c0ac74c45803affb6c60f693a809c590778c", "patch": "@@ -106,7 +106,9 @@ pub fn where_clauses(cx: &DocContext, clauses: Vec<WP>) -> Vec<WP> {\n                 }\n                 PP::Parenthesized { ref mut output, .. } => {\n                     assert!(output.is_none());\n-                    *output = Some(rhs.clone());\n+                    if *rhs != clean::Type::Tuple(Vec::new()) {\n+                        *output = Some(rhs.clone());\n+                    }\n                 }\n             };\n             true"}, {"sha": "1b30a6a43282f9272a91ec92037f3770c0fbcad4", "filename": "src/test/rustdoc/auxiliary/unit-return.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4139c0ac74c45803affb6c60f693a809c590778c/src%2Ftest%2Frustdoc%2Fauxiliary%2Funit-return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4139c0ac74c45803affb6c60f693a809c590778c/src%2Ftest%2Frustdoc%2Fauxiliary%2Funit-return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fauxiliary%2Funit-return.rs?ref=4139c0ac74c45803affb6c60f693a809c590778c", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn f2<F: FnMut(u32) + Clone>(f: F) {}\n+\n+pub fn f3<F: FnMut(u64) -> () + Clone>(f: F) {}"}, {"sha": "757e8979edd4ffa72d1b18062863d3e53805c151", "filename": "src/test/rustdoc/unit-return.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/4139c0ac74c45803affb6c60f693a809c590778c/src%2Ftest%2Frustdoc%2Funit-return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4139c0ac74c45803affb6c60f693a809c590778c/src%2Ftest%2Frustdoc%2Funit-return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Funit-return.rs?ref=4139c0ac74c45803affb6c60f693a809c590778c", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:unit-return.rs\n+\n+#![crate_name = \"foo\"]\n+\n+extern crate unit_return;\n+\n+// @has 'foo/fn.f0.html' '//*[@class=\"rust fn\"]' 'F: FnMut(u8) + Clone'\n+pub fn f0<F: FnMut(u8) + Clone>(f: F) {}\n+\n+// @has 'foo/fn.f1.html' '//*[@class=\"rust fn\"]' 'F: FnMut(u16) + Clone'\n+pub fn f1<F: FnMut(u16) -> () + Clone>(f: F) {}\n+\n+// @has 'foo/fn.f2.html' '//*[@class=\"rust fn\"]' 'F: FnMut(u32) + Clone'\n+pub use unit_return::f2;\n+\n+// @has 'foo/fn.f3.html' '//*[@class=\"rust fn\"]' 'F: FnMut(u64) + Clone'\n+pub use unit_return::f3;"}]}