{"sha": "47e749e5be33e62058f6209aa33460c51ab54f92", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3ZTc0OWU1YmUzM2U2MjA1OGY2MjA5YWEzMzQ2MGM1MWFiNTRmOTI=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-21T10:56:57Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-21T20:23:41Z"}, "message": "Fix errors from #22592", "tree": {"sha": "1ddeb25277d40e9ae417436a796e2920a65b007e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ddeb25277d40e9ae417436a796e2920a65b007e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47e749e5be33e62058f6209aa33460c51ab54f92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47e749e5be33e62058f6209aa33460c51ab54f92", "html_url": "https://github.com/rust-lang/rust/commit/47e749e5be33e62058f6209aa33460c51ab54f92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47e749e5be33e62058f6209aa33460c51ab54f92/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d316a34ec2cfb983dbfa1458678accc49a6156ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/d316a34ec2cfb983dbfa1458678accc49a6156ad", "html_url": "https://github.com/rust-lang/rust/commit/d316a34ec2cfb983dbfa1458678accc49a6156ad"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "bc239d0c7c2698fb5d097579ff555f56202ff8ea", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/47e749e5be33e62058f6209aa33460c51ab54f92/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47e749e5be33e62058f6209aa33460c51ab54f92/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=47e749e5be33e62058f6209aa33460c51ab54f92", "patch": "@@ -1980,7 +1980,7 @@ foo_module!();\n         // the xx binding should bind all of the xx varrefs:\n         for (idx,v) in varrefs.iter().filter(|p| {\n             p.segments.len() == 1\n-            && \"xx\" == &token::get_ident(p.segments[0].identifier)\n+            && \"xx\" == &*token::get_ident(p.segments[0].identifier)\n         }).enumerate() {\n             if mtwt::resolve(v.segments[0].identifier) != resolved_binding {\n                 println!(\"uh oh, xx binding didn't match xx varref:\");"}, {"sha": "43dfcbae57e497b0a82f493ff427bbaccfe75fe4", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/47e749e5be33e62058f6209aa33460c51ab54f92/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47e749e5be33e62058f6209aa33460c51ab54f92/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=47e749e5be33e62058f6209aa33460c51ab54f92", "patch": "@@ -827,19 +827,19 @@ mod test {\n              ast::TtDelimited(_, ref macro_delimed)]\n             if name_macro_rules.as_str() == \"macro_rules\"\n             && name_zip.as_str() == \"zip\" => {\n-                match &macro_delimed.tts {\n+                match &macro_delimed.tts[..] {\n                     [ast::TtDelimited(_, ref first_delimed),\n                      ast::TtToken(_, token::FatArrow),\n                      ast::TtDelimited(_, ref second_delimed)]\n                     if macro_delimed.delim == token::Paren => {\n-                        match &first_delimed.tts {\n+                        match &first_delimed.tts[..] {\n                             [ast::TtToken(_, token::Dollar),\n                              ast::TtToken(_, token::Ident(name, token::Plain))]\n                             if first_delimed.delim == token::Paren\n                             && name.as_str() == \"a\" => {},\n                             _ => panic!(\"value 3: {:?}\", **first_delimed),\n                         }\n-                        match &second_delimed.tts {\n+                        match &second_delimed.tts[..] {\n                             [ast::TtToken(_, token::Dollar),\n                              ast::TtToken(_, token::Ident(name, token::Plain))]\n                             if second_delimed.delim == token::Paren\n@@ -1207,7 +1207,7 @@ mod test {\n \n         let source = \"/// doc comment\\r\\n/// line 2\\r\\nfn foo() {}\".to_string();\n         let item = parse_item_from_source_str(name.clone(), source, Vec::new(), &sess).unwrap();\n-        let docs = item.attrs.iter().filter(|a| &a.name() == \"doc\")\n+        let docs = item.attrs.iter().filter(|a| &*a.name() == \"doc\")\n                     .map(|a| a.value_str().unwrap().to_string()).collect::<Vec<_>>();\n         let b: &[_] = &[\"/// doc comment\".to_string(), \"/// line 2\".to_string()];\n         assert_eq!(&docs[..], b);"}]}