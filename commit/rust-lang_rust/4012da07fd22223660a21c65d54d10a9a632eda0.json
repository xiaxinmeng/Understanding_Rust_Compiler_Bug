{"sha": "4012da07fd22223660a21c65d54d10a9a632eda0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwMTJkYTA3ZmQyMjIyMzY2MGEyMWM2NWQ1NGQxMGE5YTYzMmVkYTA=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-11-19T14:56:48Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-11-19T14:56:48Z"}, "message": "Change return type of expand_macro", "tree": {"sha": "1081edcfc24b16ba0d0433d40e499458039aa5f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1081edcfc24b16ba0d0433d40e499458039aa5f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4012da07fd22223660a21c65d54d10a9a632eda0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4012da07fd22223660a21c65d54d10a9a632eda0", "html_url": "https://github.com/rust-lang/rust/commit/4012da07fd22223660a21c65d54d10a9a632eda0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4012da07fd22223660a21c65d54d10a9a632eda0/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94c63d280246971983cad4fa6ce2d333e3ba9f02", "url": "https://api.github.com/repos/rust-lang/rust/commits/94c63d280246971983cad4fa6ce2d333e3ba9f02", "html_url": "https://github.com/rust-lang/rust/commit/94c63d280246971983cad4fa6ce2d333e3ba9f02"}], "stats": {"total": 46, "additions": 33, "deletions": 13}, "files": [{"sha": "44e77ba5028f5582e9df6d650e810ad6bab22ae6", "filename": "crates/ra_ide_api/src/expand_macro.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4012da07fd22223660a21c65d54d10a9a632eda0/crates%2Fra_ide_api%2Fsrc%2Fexpand_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4012da07fd22223660a21c65d54d10a9a632eda0/crates%2Fra_ide_api%2Fsrc%2Fexpand_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fexpand_macro.rs?ref=4012da07fd22223660a21c65d54d10a9a632eda0", "patch": "@@ -11,7 +11,12 @@ use ra_syntax::{\n     AstNode, NodeOrToken, SyntaxKind, SyntaxNode, WalkEvent,\n };\n \n-pub(crate) fn expand_macro(db: &RootDatabase, position: FilePosition) -> Option<(String, String)> {\n+pub struct ExpandedMacro {\n+    pub name: String,\n+    pub expansion: String,\n+}\n+\n+pub(crate) fn expand_macro(db: &RootDatabase, position: FilePosition) -> Option<ExpandedMacro> {\n     let parse = db.parse(position.file_id);\n     let file = parse.tree();\n     let name_ref = find_node_at_offset::<ast::NameRef>(file.syntax(), position.offset)?;\n@@ -23,8 +28,8 @@ pub(crate) fn expand_macro(db: &RootDatabase, position: FilePosition) -> Option<\n     // FIXME:\n     // macro expansion may lose all white space information\n     // But we hope someday we can use ra_fmt for that\n-    let res = insert_whitespaces(expanded);\n-    Some((name_ref.text().to_string(), res))\n+    let expansion = insert_whitespaces(expanded);\n+    Some(ExpandedMacro { name: name_ref.text().to_string(), expansion })\n }\n \n fn expand_macro_recur(\n@@ -87,7 +92,8 @@ mod tests {\n         let (analysis, pos) = analysis_and_position(fixture);\n \n         let result = analysis.expand_macro(pos).unwrap().unwrap();\n-        assert_eq!(result, (expected.0.to_string(), expected.1.to_string()));\n+        assert_eq!(result.name, expected.0.to_string());\n+        assert_eq!(result.expansion, expected.1.to_string());\n     }\n \n     #[test]"}, {"sha": "57ed9714706b5ee79b33526ed5007f9f720b711a", "filename": "crates/ra_ide_api/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4012da07fd22223660a21c65d54d10a9a632eda0/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4012da07fd22223660a21c65d54d10a9a632eda0/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Flib.rs?ref=4012da07fd22223660a21c65d54d10a9a632eda0", "patch": "@@ -66,6 +66,7 @@ pub use crate::{\n     completion::{CompletionItem, CompletionItemKind, InsertTextFormat},\n     diagnostics::Severity,\n     display::{file_structure, FunctionSignature, NavigationTarget, StructureNode},\n+    expand_macro::ExpandedMacro,\n     feature_flags::FeatureFlags,\n     folding_ranges::{Fold, FoldKind},\n     hover::HoverResult,\n@@ -297,7 +298,7 @@ impl Analysis {\n         self.with_db(|db| syntax_tree::syntax_tree(&db, file_id, text_range))\n     }\n \n-    pub fn expand_macro(&self, position: FilePosition) -> Cancelable<Option<(String, String)>> {\n+    pub fn expand_macro(&self, position: FilePosition) -> Cancelable<Option<ExpandedMacro>> {\n         self.with_db(|db| expand_macro::expand_macro(db, position))\n     }\n "}, {"sha": "0461bf385422e31eac8ffbf702c1e080da4f818d", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4012da07fd22223660a21c65d54d10a9a632eda0/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4012da07fd22223660a21c65d54d10a9a632eda0/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=4012da07fd22223660a21c65d54d10a9a632eda0", "patch": "@@ -50,15 +50,18 @@ pub fn handle_syntax_tree(world: WorldSnapshot, params: req::SyntaxTreeParams) -\n pub fn handle_expand_macro(\n     world: WorldSnapshot,\n     params: req::ExpandMacroParams,\n-) -> Result<Option<(String, String)>> {\n+) -> Result<Option<req::ExpandedMacro>> {\n     let _p = profile(\"handle_expand_macro\");\n     let file_id = params.text_document.try_conv_with(&world)?;\n     let line_index = world.analysis().file_line_index(file_id)?;\n     let offset = params.position.map(|p| p.conv_with(&line_index));\n \n     match offset {\n         None => Ok(None),\n-        Some(offset) => Ok(world.analysis().expand_macro(FilePosition { file_id, offset })?),\n+        Some(offset) => {\n+            let res = world.analysis().expand_macro(FilePosition { file_id, offset })?;\n+            Ok(res.map(|it| req::ExpandedMacro { name: it.name, expansion: it.expansion }))\n+        }\n     }\n }\n "}, {"sha": "39361b7e8fd32ed57200fd1e164f83a8b0104ca8", "filename": "crates/ra_lsp_server/src/req.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4012da07fd22223660a21c65d54d10a9a632eda0/crates%2Fra_lsp_server%2Fsrc%2Freq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4012da07fd22223660a21c65d54d10a9a632eda0/crates%2Fra_lsp_server%2Fsrc%2Freq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Freq.rs?ref=4012da07fd22223660a21c65d54d10a9a632eda0", "patch": "@@ -45,11 +45,18 @@ pub struct SyntaxTreeParams {\n     pub range: Option<Range>,\n }\n \n+#[derive(Serialize, Debug)]\n+#[serde(rename_all = \"camelCase\")]\n+pub struct ExpandedMacro {\n+    pub name: String,\n+    pub expansion: String,\n+}\n+\n pub enum ExpandMacro {}\n \n impl Request for ExpandMacro {\n     type Params = ExpandMacroParams;\n-    type Result = Option<(String, String)>;\n+    type Result = Option<ExpandedMacro>;\n     const METHOD: &'static str = \"rust-analyzer/expandMacro\";\n }\n "}, {"sha": "3fc3e0391725f7a321e8464206ab3827fde3b059", "filename": "editors/code/src/commands/expand_macro.ts", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4012da07fd22223660a21c65d54d10a9a632eda0/editors%2Fcode%2Fsrc%2Fcommands%2Fexpand_macro.ts", "raw_url": "https://github.com/rust-lang/rust/raw/4012da07fd22223660a21c65d54d10a9a632eda0/editors%2Fcode%2Fsrc%2Fcommands%2Fexpand_macro.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fexpand_macro.ts?ref=4012da07fd22223660a21c65d54d10a9a632eda0", "patch": "@@ -2,13 +2,16 @@ import * as vscode from 'vscode';\n import { Position, TextDocumentIdentifier } from 'vscode-languageclient';\n import { Server } from '../server';\n \n-type ExpandMacroResult = [string, string];\n+interface ExpandedMacro {\n+    name: string,\n+    expansion: string,\n+}\n \n-function code_format([name, text]: [string, string]): vscode.MarkdownString {\n+function code_format(expanded: ExpandedMacro): vscode.MarkdownString {\n     const markdown = new vscode.MarkdownString(\n-        `#### Recursive expansion of ${name}! macro`\n+        `#### Recursive expansion of ${expanded.name}! macro`\n     );\n-    markdown.appendCodeblock(text, 'rust');\n+    markdown.appendCodeblock(expanded.expansion, 'rust');\n     return markdown;\n }\n \n@@ -23,7 +26,7 @@ export class ExpandMacroHoverProvider implements vscode.HoverProvider {\n                 textDocument: { uri: document.uri.toString() },\n                 position\n             };\n-            const result = await Server.client.sendRequest<ExpandMacroResult>(\n+            const result = await Server.client.sendRequest<ExpandedMacro>(\n                 'rust-analyzer/expandMacro',\n                 request\n             );"}]}