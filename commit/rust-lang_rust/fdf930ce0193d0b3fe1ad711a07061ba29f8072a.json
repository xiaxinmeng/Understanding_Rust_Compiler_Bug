{"sha": "fdf930ce0193d0b3fe1ad711a07061ba29f8072a", "node_id": "C_kwDOAAsO6NoAKGZkZjkzMGNlMDE5M2QwYjNmZTFhZDcxMWEwNzA2MWJhMjlmODA3MmE", "commit": {"author": {"name": "Taylor Yu", "email": "tlyu@mit.edu", "date": "2022-01-20T21:37:44Z"}, "committer": {"name": "Taylor Yu", "email": "tlyu@mit.edu", "date": "2022-01-20T21:37:44Z"}, "message": "delete `Stdin::split` forwarder", "tree": {"sha": "aaf0b30422ce53c3a053a002820adab046310b45", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aaf0b30422ce53c3a053a002820adab046310b45"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fdf930ce0193d0b3fe1ad711a07061ba29f8072a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fdf930ce0193d0b3fe1ad711a07061ba29f8072a", "html_url": "https://github.com/rust-lang/rust/commit/fdf930ce0193d0b3fe1ad711a07061ba29f8072a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fdf930ce0193d0b3fe1ad711a07061ba29f8072a/comments", "author": {"login": "tlyu", "id": 431873, "node_id": "MDQ6VXNlcjQzMTg3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/431873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tlyu", "html_url": "https://github.com/tlyu", "followers_url": "https://api.github.com/users/tlyu/followers", "following_url": "https://api.github.com/users/tlyu/following{/other_user}", "gists_url": "https://api.github.com/users/tlyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/tlyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tlyu/subscriptions", "organizations_url": "https://api.github.com/users/tlyu/orgs", "repos_url": "https://api.github.com/users/tlyu/repos", "events_url": "https://api.github.com/users/tlyu/events{/privacy}", "received_events_url": "https://api.github.com/users/tlyu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tlyu", "id": 431873, "node_id": "MDQ6VXNlcjQzMTg3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/431873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tlyu", "html_url": "https://github.com/tlyu", "followers_url": "https://api.github.com/users/tlyu/followers", "following_url": "https://api.github.com/users/tlyu/following{/other_user}", "gists_url": "https://api.github.com/users/tlyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/tlyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tlyu/subscriptions", "organizations_url": "https://api.github.com/users/tlyu/orgs", "repos_url": "https://api.github.com/users/tlyu/repos", "events_url": "https://api.github.com/users/tlyu/events{/privacy}", "received_events_url": "https://api.github.com/users/tlyu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74fbbefea8d13683cca5eee62e4740706cb3144a", "url": "https://api.github.com/repos/rust-lang/rust/commits/74fbbefea8d13683cca5eee62e4740706cb3144a", "html_url": "https://github.com/rust-lang/rust/commit/74fbbefea8d13683cca5eee62e4740706cb3144a"}], "stats": {"total": 25, "additions": 1, "deletions": 24}, "files": [{"sha": "3d6de20d8609142a50544cf4331a9e87e68746d3", "filename": "library/std/src/io/stdio.rs", "status": "modified", "additions": 1, "deletions": 24, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/fdf930ce0193d0b3fe1ad711a07061ba29f8072a/library%2Fstd%2Fsrc%2Fio%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdf930ce0193d0b3fe1ad711a07061ba29f8072a/library%2Fstd%2Fsrc%2Fio%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fstdio.rs?ref=fdf930ce0193d0b3fe1ad711a07061ba29f8072a", "patch": "@@ -7,7 +7,7 @@ use crate::io::prelude::*;\n \n use crate::cell::{Cell, RefCell};\n use crate::fmt;\n-use crate::io::{self, BufReader, IoSlice, IoSliceMut, LineWriter, Lines, Split};\n+use crate::io::{self, BufReader, IoSlice, IoSliceMut, LineWriter, Lines};\n use crate::lazy::SyncOnceCell;\n use crate::pin::Pin;\n use crate::sync::atomic::{AtomicBool, Ordering};\n@@ -465,29 +465,6 @@ impl Stdin {\n     pub fn lines(self) -> Lines<StdinLock<'static>> {\n         self.into_locked().lines()\n     }\n-\n-    /// Consumes this handle and returns an iterator over input bytes,\n-    /// split at the specified byte value.\n-    ///\n-    /// For detailed semantics of this method, see the documentation on\n-    /// [`BufRead::split`].\n-    ///\n-    /// # Examples\n-    ///\n-    /// ```no_run\n-    /// #![feature(stdin_forwarders)]\n-    /// use std::io;\n-    ///\n-    /// let splits = io::stdin().split(b'-');\n-    /// for split in splits {\n-    ///     println!(\"got a chunk: {}\", String::from_utf8_lossy(&split.unwrap()));\n-    /// }\n-    /// ```\n-    #[must_use = \"`self` will be dropped if the result is not used\"]\n-    #[unstable(feature = \"stdin_forwarders\", issue = \"87096\")]\n-    pub fn split(self, byte: u8) -> Split<StdinLock<'static>> {\n-        self.into_locked().split(byte)\n-    }\n }\n \n #[stable(feature = \"std_debug\", since = \"1.16.0\")]"}]}