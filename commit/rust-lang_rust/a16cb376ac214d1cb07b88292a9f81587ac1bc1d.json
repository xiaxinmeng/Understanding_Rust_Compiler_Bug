{"sha": "a16cb376ac214d1cb07b88292a9f81587ac1bc1d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExNmNiMzc2YWMyMTRkMWNiMDdiODgyOTJhOWY4MTU4N2FjMWJjMWQ=", "commit": {"author": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2012-05-22T18:44:00Z"}, "committer": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2012-05-23T23:23:11Z"}, "message": "Update reserved words for syntax highlighters (vim is still behind, though)", "tree": {"sha": "a4e6acb2cd83f4cf6a0e5e858e2e3037b66dcf25", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4e6acb2cd83f4cf6a0e5e858e2e3037b66dcf25"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a16cb376ac214d1cb07b88292a9f81587ac1bc1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a16cb376ac214d1cb07b88292a9f81587ac1bc1d", "html_url": "https://github.com/rust-lang/rust/commit/a16cb376ac214d1cb07b88292a9f81587ac1bc1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a16cb376ac214d1cb07b88292a9f81587ac1bc1d/comments", "author": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f154770e2e921e717127b9fe95e09856305fd6f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f154770e2e921e717127b9fe95e09856305fd6f", "html_url": "https://github.com/rust-lang/rust/commit/5f154770e2e921e717127b9fe95e09856305fd6f"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "412a43d796ee9d1d88d91d570d35afca7bb6f9fd", "filename": "src/etc/emacs/rust-mode.el", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a16cb376ac214d1cb07b88292a9f81587ac1bc1d/src%2Fetc%2Femacs%2Frust-mode.el", "raw_url": "https://github.com/rust-lang/rust/raw/a16cb376ac214d1cb07b88292a9f81587ac1bc1d/src%2Fetc%2Femacs%2Frust-mode.el", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Femacs%2Frust-mode.el?ref=a16cb376ac214d1cb07b88292a9f81587ac1bc1d", "patch": "@@ -54,9 +54,21 @@\n   (let ((table (make-hash-table :test 'equal)))\n     (dolist (word '(\"mod\" \"type\" \"resource\" \"fn\" \"enum\" \"iface\" \"impl\"))\n       (puthash word 'def table))\n-    (dolist (word '(\"if\" \"else\" \"while\" \"do\" \"for\" \"break\" \"cont\" \"ret\" \"be\" \"fail\" \"const\"\n-                    \"check\" \"assert\" \"claim\" \"prove\" \"native\" \"import\" \"export\" \"let\" \"mut\" \"log\"\n-                    \"use\" \"pure\" \"unsafe\"))\n+    (dolist (word '(\"assert\"\n+                    \"be\" \"break\"\n+                    \"check\" \"claim\" \"class\" \"const\" \"cont\" \"copy\" \"crust\"\n+                    \"drop\"\n+                    \"else\" \"export\"\n+                    \"fail\" \"for\"\n+                    \"if\" \"import\"\n+                    \"let\" \"log\" \"loop\"\n+                    \"mut\"\n+                    \"native\" \"new\"\n+                    \"pure\"\n+                    \"ret\"\n+                    \"trait\"\n+                    \"unchecked\" \"unsafe\"\n+                    \"while\"))\n       (puthash word t table))\n     (puthash \"alt\" 'alt table)\n     (dolist (word '(\"true\" \"false\")) (puthash word 'atom table))"}, {"sha": "94b889e010fc5240ccd4d86b205cd081904a8d96", "filename": "src/etc/vim/syntax/rust.vim", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a16cb376ac214d1cb07b88292a9f81587ac1bc1d/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "raw_url": "https://github.com/rust-lang/rust/raw/a16cb376ac214d1cb07b88292a9f81587ac1bc1d/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim?ref=a16cb376ac214d1cb07b88292a9f81587ac1bc1d", "patch": "@@ -15,7 +15,7 @@ if !exists(\"main_syntax\")\n endif\n \n syn keyword   rustKeyword     alt as assert be bind break\n-syn keyword   rustKeyword     check claim cont const copy do else export fail\n+syn keyword   rustKeyword     check claim cont const copy else export fail\n syn keyword   rustKeyword     for if impl import in inline lambda let log\n syn keyword   rustKeyword     loop mod mut mutable native note of prove pure\n syn keyword   rustKeyword     ret self syntax to unchecked"}]}