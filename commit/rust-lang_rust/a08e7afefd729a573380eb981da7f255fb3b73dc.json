{"sha": "a08e7afefd729a573380eb981da7f255fb3b73dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwOGU3YWZlZmQ3MjlhNTczMzgwZWI5ODFkYTdmMjU1ZmIzYjczZGM=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-11-10T13:45:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-10T13:45:23Z"}, "message": "Rollup merge of #78887 - camelid:dataflow-state-decl, r=jonas-schievink\n\nAdd comments to explain memory usage optimization\n\nAdd explanatory comments so that people understand that it's just an optimization and doesn't affect behavior.", "tree": {"sha": "ed87e4459561b103a46a25c7512a5ebe251fc2f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed87e4459561b103a46a25c7512a5ebe251fc2f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a08e7afefd729a573380eb981da7f255fb3b73dc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfqplzCRBK7hj4Ov3rIwAAdHIIAA1JzMnE/rsX/I6kUwemacsW\nHfHQrp3oWiQu9P68z0uXpH/ft31yTEKhwXbuqc23qsyo/A93MUbDJACtjIBg5b7T\nB5oSTFSzZF90qeUKTL617VXtX7SPjRjB/iQaQtCwCt3izyojJmUTlHNGYkZ9apdw\nMGWqMJvbGvT3/eoE3s+cQSCDIdeJDRRASHvrtSHK1NxhS5rh/FpYXG2IDUWIRv6B\n6zQGRp7VzEc6zYGBXlWbIyGktemTkDDZbrp/bzKS3n0Qg8qmgifd+TBbNThe03YK\nVUQcf8CD/g2WBqq7lkNSqc975gJmlbw0hAC+XARVxdwDO5aU18C2gdAlPa+WWVc=\n=qMWl\n-----END PGP SIGNATURE-----\n", "payload": "tree ed87e4459561b103a46a25c7512a5ebe251fc2f6\nparent 105f4b879291deb15f3ef40b783b209faefe2c6a\nparent 0242f963c631a130a3c405d7e54f4695ef10a139\nauthor Jonas Schievink <jonasschievink@gmail.com> 1605015923 +0100\ncommitter GitHub <noreply@github.com> 1605015923 +0100\n\nRollup merge of #78887 - camelid:dataflow-state-decl, r=jonas-schievink\n\nAdd comments to explain memory usage optimization\n\nAdd explanatory comments so that people understand that it's just an optimization and doesn't affect behavior.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a08e7afefd729a573380eb981da7f255fb3b73dc", "html_url": "https://github.com/rust-lang/rust/commit/a08e7afefd729a573380eb981da7f255fb3b73dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a08e7afefd729a573380eb981da7f255fb3b73dc/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "105f4b879291deb15f3ef40b783b209faefe2c6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/105f4b879291deb15f3ef40b783b209faefe2c6a", "html_url": "https://github.com/rust-lang/rust/commit/105f4b879291deb15f3ef40b783b209faefe2c6a"}, {"sha": "0242f963c631a130a3c405d7e54f4695ef10a139", "url": "https://api.github.com/repos/rust-lang/rust/commits/0242f963c631a130a3c405d7e54f4695ef10a139", "html_url": "https://github.com/rust-lang/rust/commit/0242f963c631a130a3c405d7e54f4695ef10a139"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "3f9f558223bb00dabc2d89860953553237da139e", "filename": "compiler/rustc_mir/src/dataflow/framework/engine.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a08e7afefd729a573380eb981da7f255fb3b73dc/compiler%2Frustc_mir%2Fsrc%2Fdataflow%2Fframework%2Fengine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a08e7afefd729a573380eb981da7f255fb3b73dc/compiler%2Frustc_mir%2Fsrc%2Fdataflow%2Fframework%2Fengine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fdataflow%2Fframework%2Fengine.rs?ref=a08e7afefd729a573380eb981da7f255fb3b73dc", "patch": "@@ -208,12 +208,19 @@ where\n             }\n         }\n \n+        // `state` is not actually used between iterations;\n+        // this is just an optimization to avoid reallocating\n+        // every iteration.\n         let mut state = analysis.bottom_value(body);\n         while let Some(bb) = dirty_queue.pop() {\n             let bb_data = &body[bb];\n \n-            // Apply the block transfer function, using the cached one if it exists.\n+            // Set the state to the entry state of the block.\n+            // This is equivalent to `state = entry_sets[bb].clone()`,\n+            // but it saves an allocation, thus improving compile times.\n             state.clone_from(&entry_sets[bb]);\n+\n+            // Apply the block transfer function, using the cached one if it exists.\n             match &apply_trans_for_block {\n                 Some(apply) => apply(bb, &mut state),\n                 None => A::Direction::apply_effects_in_block(&analysis, &mut state, bb, bb_data),"}]}