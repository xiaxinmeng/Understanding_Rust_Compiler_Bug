{"sha": "3c61d2e172becefe72a7468d2de0c67e69716163", "node_id": "C_kwDOAAsO6NoAKDNjNjFkMmUxNzJiZWNlZmU3MmE3NDY4ZDJkZTBjNjdlNjk3MTYxNjM", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2022-01-25T11:14:17Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2022-01-27T10:45:45Z"}, "message": "[debuginfo] Fix and unify handling of fat pointers in debuginfo: Fix some debuginfo tests for old GDB versions and 32-bit targets.", "tree": {"sha": "1f3851c7798a809d90a1e76d80f40b7203918846", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f3851c7798a809d90a1e76d80f40b7203918846"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c61d2e172becefe72a7468d2de0c67e69716163", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c61d2e172becefe72a7468d2de0c67e69716163", "html_url": "https://github.com/rust-lang/rust/commit/3c61d2e172becefe72a7468d2de0c67e69716163", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c61d2e172becefe72a7468d2de0c67e69716163/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e577f71a0695b5e47fc6d62ab02b9d09cb269f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e577f71a0695b5e47fc6d62ab02b9d09cb269f8", "html_url": "https://github.com/rust-lang/rust/commit/5e577f71a0695b5e47fc6d62ab02b9d09cb269f8"}], "stats": {"total": 63, "additions": 31, "deletions": 32}, "files": [{"sha": "ebd40f9dda21c3e5d4f5b8b5b3c0288865fb1b2b", "filename": "src/test/debuginfo/unsized.rs", "status": "modified", "additions": 11, "deletions": 15, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/3c61d2e172becefe72a7468d2de0c67e69716163/src%2Ftest%2Fdebuginfo%2Funsized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c61d2e172becefe72a7468d2de0c67e69716163/src%2Ftest%2Fdebuginfo%2Funsized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Funsized.rs?ref=3c61d2e172becefe72a7468d2de0c67e69716163", "patch": "@@ -5,50 +5,44 @@\n // gdb-command:run\n \n // gdb-command:print a\n-// gdbg-check:$1 = {data_ptr: [...], length: 4}\n+// gdbg-check:$1 = {data_ptr = [...], length = 4}\n // gdbr-check:$1 = &unsized::Foo<[u8]> {data_ptr: [...], length: 4}\n \n // gdb-command:print b\n-// gdbg-check:$2 = {data_ptr: [...], length: 4}\n+// gdbg-check:$2 = {data_ptr = [...], length = 4}\n // gdbr-check:$2 = &unsized::Foo<unsized::Foo<[u8]>> {data_ptr: [...], length: 4}\n \n // gdb-command:print c\n-// gdbg-check:$3 = {pointer: [...], vtable: [...]}\n+// gdbg-check:$3 = {pointer = [...], vtable = [...]}\n // gdbr-check:$3 = &unsized::Foo<dyn core::fmt::Debug> {pointer: [...], vtable: [...]}\n \n-\n // === CDB TESTS ===================================================================================\n \n // cdb-command: g\n // cdb-command:dx a\n // cdb-check:a                [Type: ref$<unsized::Foo<slice$<u8> > >]\n // cdb-check:    [+0x000] data_ptr         : 0x[...] [Type: unsized::Foo<slice$<u8> > *]\n-// cdb-check:    [+0x008] length           : 0x4 [Type: unsigned __int64]\n+// cdb-check:    [...] length           : 0x4 [Type: unsigned [...]int[...]\n \n // cdb-command:dx b\n // cdb-check:b                [Type: ref$<unsized::Foo<unsized::Foo<slice$<u8> > > >]\n // cdb-check:    [+0x000] data_ptr         : 0x[...] [Type: unsized::Foo<unsized::Foo<slice$<u8> > > *]\n-// cdb-check:    [+0x008] length           : 0x4 [Type: unsigned __int64]\n+// cdb-check:    [...] length           : 0x4 [Type: unsigned [...]int[...]\n \n // cdb-command:dx c\n // cdb-check:c                [Type: ref$<unsized::Foo<dyn$<core::fmt::Debug> > >]\n // cdb-check:    [+0x000] pointer          : 0x[...] [Type: unsized::Foo<dyn$<core::fmt::Debug> > *]\n-// cdb-check:    [+0x008] vtable           : 0x[...] [Type: unsigned __int64 (*)[3]]\n-\n+// cdb-check:    [...] vtable           : 0x[...] [Type: unsigned [...]int[...] (*)[3]]\n \n #![feature(omit_gdb_pretty_printer_section)]\n #![omit_gdb_pretty_printer_section]\n \n struct Foo<T: ?Sized> {\n-    value: T\n+    value: T,\n }\n \n fn main() {\n-    let foo: Foo<Foo<[u8; 4]>> = Foo {\n-        value: Foo {\n-            value: *b\"abc\\0\"\n-        }\n-    };\n+    let foo: Foo<Foo<[u8; 4]>> = Foo { value: Foo { value: *b\"abc\\0\" } };\n \n     // We expect `a`, `b`, and `c` to all be fat pointers.\n     // `a` and `b` should be slice-like and thus have a `data_ptr` and `length` field.\n@@ -60,4 +54,6 @@ fn main() {\n     zzz(); // #break\n }\n \n-fn zzz() { () }\n+fn zzz() {\n+    ()\n+}"}, {"sha": "7d88e45caf2576cdedb2cce5115832d63844ac8e", "filename": "src/test/debuginfo/vec-slices.rs", "status": "modified", "additions": 20, "deletions": 17, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/3c61d2e172becefe72a7468d2de0c67e69716163/src%2Ftest%2Fdebuginfo%2Fvec-slices.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c61d2e172becefe72a7468d2de0c67e69716163/src%2Ftest%2Fdebuginfo%2Fvec-slices.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fvec-slices.rs?ref=3c61d2e172becefe72a7468d2de0c67e69716163", "patch": "@@ -48,21 +48,24 @@\n // gdbg-check:$13 = {x = 13, y = 14, z = 15}\n // gdbr-check:$13 = vec_slices::AStruct {x: 13, y: 14, z: 15}\n \n-// gdbg-command:print 'vec_slices::MUT_VECT_SLICE'.length\n-// gdbr-command:print MUT_VECT_SLICE.length\n-// gdb-check:$14 = 2\n-// gdbg-command:print *((i64[2]*)('vec_slices::MUT_VECT_SLICE'.data_ptr))\n-// gdbr-command:print *(MUT_VECT_SLICE.data_ptr as *const [i64; 2])\n-// gdbg-check:$15 = {64, 65}\n-// gdbr-check:$15 = [64, 65]\n-\n // gdb-command:print mut_slice.length\n-// gdb-check:$16 = 5\n+// gdb-check:$14 = 5\n // gdbg-command:print *((i64[5]*)(mut_slice.data_ptr))\n // gdbr-command:print *(mut_slice.data_ptr as *const [i64; 5])\n-// gdbg-check:$17 = {1, 2, 3, 4, 5}\n-// gdbr-check:$17 = [1, 2, 3, 4, 5]\n+// gdbg-check:$15 = {1, 2, 3, 4, 5}\n+// gdbr-check:$15 = [1, 2, 3, 4, 5]\n \n+// Some lines below are marked with [ignored] because old GDB versions seem to have trouble\n+// accessing globals.\n+\n+// [ignored] gdbg-command:print 'vec_slices::MUT_VECT_SLICE'.length\n+// gdbr-command:print MUT_VECT_SLICE.length\n+// [ignored] gdbg-check:$16 = 2\n+// gdbr-check:$16 = 2\n+// [ignored] gdbg-command:print *((i64[2]*)('vec_slices::MUT_VECT_SLICE'.data_ptr))\n+// gdbr-command:print *(MUT_VECT_SLICE.data_ptr as *const [i64; 2])\n+// [ignored] gdbg-check:$17 = {64, 65}\n+// gdbr-check:$17 = [64, 65]\n \n // === LLDB TESTS ==================================================================================\n \n@@ -99,7 +102,7 @@\n struct AStruct {\n     x: i16,\n     y: i32,\n-    z: i16\n+    z: i16,\n }\n \n static VECT_SLICE: &'static [i64] = &[64, 65];\n@@ -113,10 +116,8 @@ fn main() {\n \n     let padded_tuple: &[(i32, i16)] = &[(6, 7), (8, 9)];\n \n-    let padded_struct: &[AStruct] = &[\n-        AStruct { x: 10, y: 11, z: 12 },\n-        AStruct { x: 13, y: 14, z: 15 }\n-    ];\n+    let padded_struct: &[AStruct] =\n+        &[AStruct { x: 10, y: 11, z: 12 }, AStruct { x: 13, y: 14, z: 15 }];\n \n     unsafe {\n         MUT_VECT_SLICE = VECT_SLICE;\n@@ -127,4 +128,6 @@ fn main() {\n     zzz(); // #break\n }\n \n-fn zzz() {()}\n+fn zzz() {\n+    ()\n+}"}]}