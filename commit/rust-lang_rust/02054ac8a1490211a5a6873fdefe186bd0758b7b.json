{"sha": "02054ac8a1490211a5a6873fdefe186bd0758b7b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyMDU0YWM4YTE0OTAyMTFhNWE2ODczZmRlZmUxODZiZDA3NThiN2I=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-09-30T04:08:46Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-10-01T06:21:20Z"}, "message": "rfail: Remove usage of fmt!", "tree": {"sha": "a06b22941f248a302ccd094f5b1187597d1f907c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a06b22941f248a302ccd094f5b1187597d1f907c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02054ac8a1490211a5a6873fdefe186bd0758b7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02054ac8a1490211a5a6873fdefe186bd0758b7b", "html_url": "https://github.com/rust-lang/rust/commit/02054ac8a1490211a5a6873fdefe186bd0758b7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02054ac8a1490211a5a6873fdefe186bd0758b7b/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebf5f406ef6e291655ec9eca5aa8bd95775cc67c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebf5f406ef6e291655ec9eca5aa8bd95775cc67c", "html_url": "https://github.com/rust-lang/rust/commit/ebf5f406ef6e291655ec9eca5aa8bd95775cc67c"}], "stats": {"total": 228, "additions": 114, "deletions": 114}, "files": [{"sha": "d936368cc33d381bd40e15d04d4c699e7b20bb2f", "filename": "src/test/run-fail/args-fail.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fargs-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fargs-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fargs-fail.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -9,6 +9,6 @@\n // except according to those terms.\n \n // error-pattern:meep\n-fn f(_a: int, _b: int, _c: @int) { fail!(\"moop\"); }\n+fn f(_a: int, _b: int, _c: @int) { fail2!(\"moop\"); }\n \n-fn main() { f(1, fail!(\"meep\"), @42); }\n+fn main() { f(1, fail2!(\"meep\"), @42); }"}, {"sha": "53a37c5d68445c6792e839b16caf4540d965fc29", "filename": "src/test/run-fail/assert-macro-fmt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fassert-macro-fmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fassert-macro-fmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fassert-macro-fmt.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -11,5 +11,5 @@\n // error-pattern:failed at 'test-assert-fmt 42 rust'\n \n fn main() {\n-    assert!(false, \"test-assert-fmt %d %s\", 42, \"rust\");\n+    assert!(false, \"test-assert-fmt {} {}\", 42, \"rust\");\n }"}, {"sha": "1038d2025c78369f606b4d9ac978afcfdabfe5b0", "filename": "src/test/run-fail/binop-fail-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fbinop-fail-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fbinop-fail-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fbinop-fail-2.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -9,5 +9,5 @@\n // except according to those terms.\n \n // error-pattern:quux\n-fn my_err(s: ~str) -> ! { error!(s); fail!(\"quux\"); }\n+fn my_err(s: ~str) -> ! { error2!(\"{}\", s); fail2!(\"quux\"); }\n fn main() { 3u == my_err(~\"bye\"); }"}, {"sha": "b46d5251e22344697bf1b7b8ee062bc9b9ae2a38", "filename": "src/test/run-fail/binop-fail-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fbinop-fail-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fbinop-fail-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fbinop-fail-3.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -9,5 +9,5 @@\n // except according to those terms.\n \n // error-pattern:quux\n-fn foo() -> ! { fail!(\"quux\"); }\n+fn foo() -> ! { fail2!(\"quux\"); }\n fn main() { foo() == foo(); }"}, {"sha": "1038d2025c78369f606b4d9ac978afcfdabfe5b0", "filename": "src/test/run-fail/binop-fail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fbinop-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fbinop-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fbinop-fail.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -9,5 +9,5 @@\n // except according to those terms.\n \n // error-pattern:quux\n-fn my_err(s: ~str) -> ! { error!(s); fail!(\"quux\"); }\n+fn my_err(s: ~str) -> ! { error2!(\"{}\", s); fail2!(\"quux\"); }\n fn main() { 3u == my_err(~\"bye\"); }"}, {"sha": "083ea5b8f190c028bbbb21ad70d16aaab912545a", "filename": "src/test/run-fail/bug-2470-bounds-check-overflow.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fbug-2470-bounds-check-overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fbug-2470-bounds-check-overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fbug-2470-bounds-check-overflow.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -24,13 +24,13 @@ fn main() {\n     do x.as_imm_buf |p, _len| {\n         let base = p as uint;\n         let idx = base / sys::size_of::<uint>();\n-        error!(\"ov1 base = 0x%x\", base);\n-        error!(\"ov1 idx = 0x%x\", idx);\n-        error!(\"ov1 sizeof::<uint>() = 0x%x\", sys::size_of::<uint>());\n-        error!(\"ov1 idx * sizeof::<uint>() = 0x%x\",\n+        error2!(\"ov1 base = 0x{:x}\", base);\n+        error2!(\"ov1 idx = 0x{:x}\", idx);\n+        error2!(\"ov1 sizeof::<uint>() = 0x{:x}\", sys::size_of::<uint>());\n+        error2!(\"ov1 idx * sizeof::<uint>() = 0x{:x}\",\n                idx * sys::size_of::<uint>());\n \n         // This should fail.\n-        error!(\"ov1 0x%x\",  x[idx]);\n+        error2!(\"ov1 0x{:x}\",  x[idx]);\n     }\n }"}, {"sha": "b41062043cfd828e130d5352eff3cbd7cfece85a", "filename": "src/test/run-fail/bug-811.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fbug-811.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fbug-811.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fbug-811.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -19,6 +19,6 @@ struct chan_t<T> {\n     port: port_id,\n }\n \n-fn send<T:Send>(_ch: chan_t<T>, _data: T) { fail!(); }\n+fn send<T:Send>(_ch: chan_t<T>, _data: T) { fail2!(); }\n \n-fn main() { fail!(\"quux\"); }\n+fn main() { fail2!(\"quux\"); }"}, {"sha": "3310ffe909a7f2bb53dc75dcb0d1839d38a663a8", "filename": "src/test/run-fail/die-macro-expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fdie-macro-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fdie-macro-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fdie-macro-expr.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -1,5 +1,5 @@\n // error-pattern:test\n \n fn main() {\n-    let _i: int = fail!(\"test\");\n+    let _i: int = fail2!(\"test\");\n }"}, {"sha": "6d0f5909c4dedf3b5c8afc78a89585fbb3ae52cb", "filename": "src/test/run-fail/die-macro-pure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fdie-macro-pure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fdie-macro-pure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fdie-macro-pure.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -1,7 +1,7 @@\n // error-pattern:test\n \n fn f() {\n-    fail!(\"test\");\n+    fail2!(\"test\");\n }\n \n fn main() {"}, {"sha": "678ac65558045595129731782d9c8be1222a7ede", "filename": "src/test/run-fail/die-macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fdie-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fdie-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fdie-macro.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -1,5 +1,5 @@\n // error-pattern:test\n \n fn main() {\n-    fail!(\"test\");\n+    fail2!(\"test\");\n }"}, {"sha": "ee59823e8ad27bb1201cbb840dfa6ca5c7f2adf9", "filename": "src/test/run-fail/doublefail.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fdoublefail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fdoublefail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fdoublefail.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -12,6 +12,6 @@\n \n //error-pattern:One\n fn main() {\n-    fail!(\"One\");\n-    fail!(\"Two\");\n+    fail2!(\"One\");\n+    fail2!(\"Two\");\n }"}, {"sha": "c1d2e986f1247f5e997da4ed2f3105370e59a9ae", "filename": "src/test/run-fail/explicit-fail-msg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fexplicit-fail-msg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fexplicit-fail-msg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fexplicit-fail-msg.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -15,5 +15,5 @@\n fn main() {\n     let mut a = 1;\n     if 1 == 1 { a = 2; }\n-    fail!(~\"woooo\" + \"o\");\n+    fail2!(~\"woooo\" + \"o\");\n }"}, {"sha": "78a407bbbd5f9ab297d46600ee67d3b36cad6f67", "filename": "src/test/run-fail/explicit-fail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fexplicit-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fexplicit-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fexplicit-fail.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -12,4 +12,4 @@\n \n \n // error-pattern:explicit\n-fn main() { fail!(); }\n+fn main() { fail2!(); }"}, {"sha": "a8714fdbdc83582796ede6653a691d08ace7e2b4", "filename": "src/test/run-fail/expr-fn-fail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fexpr-fn-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fexpr-fn-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fexpr-fn-fail.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -12,6 +12,6 @@\n \n \n // error-pattern:explicit failure\n-fn f() -> ! { fail!() }\n+fn f() -> ! { fail2!() }\n \n fn main() { f(); }"}, {"sha": "8ecc2cdf0f4f67dd5b7eb137baff550ef4df5ac3", "filename": "src/test/run-fail/expr-if-fail-fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fexpr-if-fail-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fexpr-if-fail-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fexpr-if-fail-fn.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -12,7 +12,7 @@\n \n \n // error-pattern:explicit failure\n-fn f() -> ! { fail!() }\n+fn f() -> ! { fail2!() }\n \n fn g() -> int { let x = if true { f() } else { 10 }; return x; }\n "}, {"sha": "50778f6556043573fd3fdf9c4c20f484de5b5f58", "filename": "src/test/run-fail/expr-if-fail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fexpr-if-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fexpr-if-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fexpr-if-fail.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -12,4 +12,4 @@\n \n \n // error-pattern:explicit failure\n-fn main() { let _x = if false { 0 } else if true { fail!() } else { 10 }; }\n+fn main() { let _x = if false { 0 } else if true { fail2!() } else { 10 }; }"}, {"sha": "98cc3c230a04989429ace004beea6f4154756fa0", "filename": "src/test/run-fail/expr-match-fail-fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fexpr-match-fail-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fexpr-match-fail-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fexpr-match-fail-fn.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -12,7 +12,7 @@\n \n \n // error-pattern:explicit failure\n-fn f() -> ! { fail!() }\n+fn f() -> ! { fail2!() }\n \n fn g() -> int { let x = match true { true => { f() } false => { 10 } }; return x; }\n "}, {"sha": "c8cab907d7d1c67d895385c171e38438e7d18e61", "filename": "src/test/run-fail/expr-match-fail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fexpr-match-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fexpr-match-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fexpr-match-fail.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -12,4 +12,4 @@\n \n \n // error-pattern:explicit failure\n-fn main() { let _x = match true { false => { 0 } true => { fail!() } }; }\n+fn main() { let _x = match true { false => { 0 } true => { fail2!() } }; }"}, {"sha": "17059107c011ba7119c1a57e42a9d8fdaf25c051", "filename": "src/test/run-fail/extern-fail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fextern-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fextern-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fextern-fail.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -45,7 +45,7 @@ fn main() {\n         do task::spawn {\n             let result = count(5u);\n             info!(\"result = %?\", result);\n-            fail!();\n+            fail2!();\n         };\n     }\n }"}, {"sha": "29baa4b31704e6140a20d2059369ef6c4cb1c5fe", "filename": "src/test/run-fail/fail-arg.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Ffail-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Ffail-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffail-arg.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -9,6 +9,6 @@\n // except according to those terms.\n \n // error-pattern:woe\n-fn f(a: int) { info!(a); }\n+fn f(a: int) { info2!(\"{}\", a); }\n \n-fn main() { f(fail!(\"woe\")); }\n+fn main() { f(fail2!(\"woe\")); }"}, {"sha": "ca6abee03bfa997308944c66a69c454721415ff6", "filename": "src/test/run-fail/fail-macro-explicit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Ffail-macro-explicit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Ffail-macro-explicit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffail-macro-explicit.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -11,5 +11,5 @@\n // error-pattern:failed at 'explicit failure'\n \n fn main() {\n-    fail!();\n+    fail2!();\n }"}, {"sha": "90d9ff9b0ec89ec0e0d50358ebd024dd021810d8", "filename": "src/test/run-fail/fail-macro-fmt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Ffail-macro-fmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Ffail-macro-fmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffail-macro-fmt.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -11,5 +11,5 @@\n // error-pattern:failed at 'test-fail-fmt 42 rust'\n \n fn main() {\n-    fail!(\"test-fail-fmt %d %s\", 42, \"rust\");\n+    fail2!(\"test-fail-fmt {} {}\", 42, \"rust\");\n }"}, {"sha": "fa461fefb88c160fc7dc040f68b4047c7fe5b9aa", "filename": "src/test/run-fail/fail-macro-owned.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Ffail-macro-owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Ffail-macro-owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffail-macro-owned.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -11,5 +11,5 @@\n // error-pattern:failed at 'test-fail-owned'\n \n fn main() {\n-    fail!(\"test-fail-owned\");\n+    fail2!(\"test-fail-owned\");\n }"}, {"sha": "f05a68a5fcb242757f5e3629f25182103ab70809", "filename": "src/test/run-fail/fail-macro-static.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Ffail-macro-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Ffail-macro-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffail-macro-static.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -11,5 +11,5 @@\n // error-pattern:failed at 'test-fail-static'\n \n fn main() {\n-    fail!(\"test-fail-static\");\n+    fail2!(\"test-fail-static\");\n }"}, {"sha": "2691beed27252ca045ae9f497f6951e3ece7241c", "filename": "src/test/run-fail/fail-main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Ffail-main.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Ffail-main.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffail-main.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -10,4 +10,4 @@\n \n // error-pattern:moop\n extern mod extra;\n-fn main() { fail!(\"moop\"); }\n+fn main() { fail2!(\"moop\"); }"}, {"sha": "79f46f47fb30cffdf12e7466d05dbf0d2c9332ad", "filename": "src/test/run-fail/fail-parens.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Ffail-parens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Ffail-parens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffail-parens.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -13,8 +13,8 @@\n // error-pattern:oops\n \n fn bigfail() {\n-    while (fail!(\"oops\")) { if (fail!()) {\n-        match (fail!()) { () => {\n+    while (fail2!(\"oops\")) { if (fail2!()) {\n+        match (fail2!()) { () => {\n         }\n                      }\n     }};"}, {"sha": "1c6298a6c8d2be7136cc27cab3a3009c6d8155fc", "filename": "src/test/run-fail/fmt-fail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Ffmt-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Ffmt-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffmt-fail.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -11,4 +11,4 @@\n // error-pattern:meh\n extern mod extra;\n \n-fn main() { let str_var: ~str = ~\"meh\"; fail!(fmt!(\"%s\", str_var)); }\n+fn main() { let str_var: ~str = ~\"meh\"; fail2!(\"{}\", str_var); }"}, {"sha": "032460d20796ac2dcdfa608ef00bf45a962e509d", "filename": "src/test/run-fail/for-each-loop-fail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Ffor-each-loop-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Ffor-each-loop-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffor-each-loop-fail.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -11,4 +11,4 @@\n // error-pattern:moop\n extern mod extra;\n \n-fn main() { for _ in range(0u, 10u) { fail!(\"moop\"); } }\n+fn main() { for _ in range(0u, 10u) { fail2!(\"moop\"); } }"}, {"sha": "e8a1cad53ad115f1f6dca064e5adcba581477942", "filename": "src/test/run-fail/if-check-fail.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fif-check-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fif-check-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fif-check-fail.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -17,9 +17,9 @@ fn even(x: uint) -> bool {\n \n fn foo(x: uint) {\n     if even(x) {\n-        info!(x);\n+        info2!(\"{}\", x);\n     } else {\n-        fail!(\"Number is odd\");\n+        fail2!(\"Number is odd\");\n     }\n }\n "}, {"sha": "d596a11f1cbdcf0077f118b05d6975ce66773d21", "filename": "src/test/run-fail/if-cond-bot.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fif-cond-bot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fif-cond-bot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fif-cond-bot.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -9,5 +9,5 @@\n // except according to those terms.\n \n // error-pattern:quux\n-fn my_err(s: ~str) -> ! { error!(s); fail!(\"quux\"); }\n+fn my_err(s: ~str) -> ! { error2!(\"{}\", s); fail2!(\"quux\"); }\n fn main() { if my_err(~\"bye\") { } }"}, {"sha": "78422347f784237e8348889936e8e16ca701c610", "filename": "src/test/run-fail/issue-2156.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fissue-2156.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fissue-2156.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fissue-2156.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -19,6 +19,6 @@ use std::io;\n \n fn main() {\n     do io::with_str_reader(~\"\") |rdr| {\n-        match rdr.read_char() { '=' => { } _ => { fail!() } }\n+        match rdr.read_char() { '=' => { } _ => { fail2!() } }\n     }\n }"}, {"sha": "9b8ecca96a6fa8a38c9297475baa8c56874e0133", "filename": "src/test/run-fail/issue-2272.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fissue-2272.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fissue-2272.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fissue-2272.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -22,5 +22,5 @@ fn main() {\n         },\n         a: ~0\n     };\n-    fail!();\n+    fail2!();\n }"}, {"sha": "b15c54c7b6eb81a6edb64bbb515ac2cbcf4e5e30", "filename": "src/test/run-fail/issue-2444.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fissue-2444.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fissue-2444.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fissue-2444.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -15,7 +15,7 @@ use extra::arc;\n \n enum e<T> { e(arc::Arc<T>) }\n \n-fn foo() -> e<int> {fail!();}\n+fn foo() -> e<int> {fail2!();}\n \n fn main() {\n    let _f = foo();"}, {"sha": "5d20c49945e084ff7404b1c29fd25dbccb5f4f01", "filename": "src/test/run-fail/issue-3029.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fissue-3029.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fissue-3029.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fissue-3029.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -16,7 +16,7 @@\n fn main() {\n     let mut x = ~[];\n     let y = ~[3];\n-    fail!(\"so long\");\n+    fail2!(\"so long\");\n     x.push_all_move(y);\n     ~\"good\" + ~\"bye\";\n }"}, {"sha": "39d741e5169e2f5aad2fc1b3a336e3f7dfd043b3", "filename": "src/test/run-fail/issue-948.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fissue-948.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fissue-948.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fissue-948.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -16,5 +16,5 @@ struct Point { x: int, y: int }\n \n fn main() {\n     let origin = Point {x: 0, y: 0};\n-    let f: Point = Point {x: (fail!(\"beep boop\")),.. origin};\n+    let f: Point = Point {x: (fail2!(\"beep boop\")),.. origin};\n }"}, {"sha": "d99cfe40da43e1d901796800a006a984493417f9", "filename": "src/test/run-fail/linked-failure2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Flinked-failure2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Flinked-failure2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Flinked-failure2.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -16,7 +16,7 @@\n use std::comm;\n use std::task;\n \n-fn child() { fail!(); }\n+fn child() { fail2!(); }\n \n fn main() {\n     let (p, _c) = comm::stream::<()>();"}, {"sha": "fd330bba1c57e4e780a84e1edc3796b1e50e3144", "filename": "src/test/run-fail/linked-failure3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Flinked-failure3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Flinked-failure3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Flinked-failure3.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -16,7 +16,7 @@\n use std::comm;\n use std::task;\n \n-fn grandchild() { fail!(\"grandchild dies\"); }\n+fn grandchild() { fail2!(\"grandchild dies\"); }\n \n fn child() {\n     let (p, _c) = comm::stream::<int>();"}, {"sha": "7b1d6bea499d309e12476224bf687aae68e51eb0", "filename": "src/test/run-fail/match-bot-fail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fmatch-bot-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fmatch-bot-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmatch-bot-fail.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -17,6 +17,6 @@ fn foo(s: ~str) { }\n \n fn main() {\n     let i =\n-        match Some::<int>(3) { None::<int> => { fail!() } Some::<int>(_) => { fail!() } };\n+        match Some::<int>(3) { None::<int> => { fail2!() } Some::<int>(_) => { fail2!() } };\n     foo(i);\n }"}, {"sha": "9b38a381a58edab353e6bd5c9eb10e4619e73e94", "filename": "src/test/run-fail/match-disc-bot.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fmatch-disc-bot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fmatch-disc-bot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmatch-disc-bot.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -9,6 +9,6 @@\n // except according to those terms.\n \n // error-pattern:quux\n-fn f() -> ! { fail!(\"quux\") }\n+fn f() -> ! { fail2!(\"quux\") }\n fn g() -> int { match f() { true => { 1 } false => { 0 } } }\n fn main() { g(); }"}, {"sha": "535b3340a4d01d664b4856a3b06a6581bd55ef8a", "filename": "src/test/run-fail/match-wildcards.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fmatch-wildcards.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fmatch-wildcards.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmatch-wildcards.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -11,10 +11,10 @@\n // error-pattern:squirrelcupcake\n fn cmp() -> int {\n     match (Some('a'), None::<char>) {\n-        (Some(_), _) => { fail!(\"squirrelcupcake\"); }\n-        (_, Some(_)) => { fail!(); }\n-        _                    => { fail!(\"wat\"); }\n+        (Some(_), _) => { fail2!(\"squirrelcupcake\"); }\n+        (_, Some(_)) => { fail2!(); }\n+        _                    => { fail2!(\"wat\"); }\n     }\n }\n \n-fn main() { error!(cmp()); }\n+fn main() { error2!(\"{}\", cmp()); }"}, {"sha": "35c19c47f52864d99296df2cd26c90b44f618537", "filename": "src/test/run-fail/morestack1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fmorestack1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fmorestack1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmorestack1.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -14,7 +14,7 @@ fn getbig(i: int) {\n     if i != 0 {\n         getbig(i - 1);\n     } else {\n-        fail!();\n+        fail2!();\n     }\n }\n "}, {"sha": "9af45cebe6871d77f9b1e66ab61ceb93b86646c9", "filename": "src/test/run-fail/morestack2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fmorestack2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fmorestack2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmorestack2.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -35,7 +35,7 @@ fn getbig_call_c_and_fail(i: int) {\n     } else {\n         unsafe {\n             rustrt::rust_get_argc();\n-            fail!();\n+            fail2!();\n         }\n     }\n }"}, {"sha": "fea9155116131cf494a06bd79b682950999dae44", "filename": "src/test/run-fail/morestack3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fmorestack3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fmorestack3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmorestack3.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -22,7 +22,7 @@ fn getbig_and_fail(i: int) {\n     if i != 0 {\n         getbig_and_fail(i - 1);\n     } else {\n-        fail!();\n+        fail2!();\n     }\n }\n "}, {"sha": "a4df5e57923f213b2f75ad2553880f4dd4ba33d7", "filename": "src/test/run-fail/morestack4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fmorestack4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fmorestack4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmorestack4.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -22,7 +22,7 @@ fn getbig_and_fail(i: int) {\n     if i != 0 {\n         getbig_and_fail(i - 1);\n     } else {\n-        fail!();\n+        fail2!();\n     }\n }\n "}, {"sha": "c3f4250b05385f4b84698bc57b9a8a6d48c1b4ea", "filename": "src/test/run-fail/result-get-fail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fresult-get-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fresult-get-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fresult-get-fail.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -13,5 +13,5 @@\n use std::result;\n \n fn main() {\n-    error!(result::Err::<int,~str>(~\"kitty\").unwrap());\n+    error2!(\"{:?}\", result::Err::<int,~str>(~\"kitty\").unwrap());\n }"}, {"sha": "5e09536fb4d3265b1b933e38a63105b30067689b", "filename": "src/test/run-fail/rhs-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Frhs-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Frhs-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Frhs-type.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -18,6 +18,6 @@\n struct T { t: ~str }\n \n fn main() {\n-    let pth = fail!(\"bye\");\n+    let pth = fail2!(\"bye\");\n     let _rs: T = T {t: pth};\n }"}, {"sha": "5c854825c28a2ad70dc6f55e3d554653db6149e2", "filename": "src/test/run-fail/rt-set-exit-status-fail.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Frt-set-exit-status-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Frt-set-exit-status-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Frt-set-exit-status-fail.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -13,10 +13,10 @@\n use std::os;\n \n fn main() {\n-    error!(~\"whatever\");\n+    error2!(\"whatever\");\n     // Setting the exit status only works when the scheduler terminates\n     // normally. In this case we're going to fail, so instead of of\n     // returning 50 the process will return the typical rt failure code.\n     os::set_exit_status(50);\n-    fail!();\n+    fail2!();\n }"}, {"sha": "493420e3ee622a54ff1dca56459b2852bff1290d", "filename": "src/test/run-fail/rt-set-exit-status-fail2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Frt-set-exit-status-fail2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Frt-set-exit-status-fail2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Frt-set-exit-status-fail2.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -33,9 +33,9 @@ fn r(x:int) -> r {\n }\n \n fn main() {\n-    error!(~\"whatever\");\n+    error2!(\"whatever\");\n     do task::spawn {\n       let _i = r(5);\n     };\n-    fail!();\n+    fail2!();\n }"}, {"sha": "4dc1386d850de7f6ebad5719e321be7087823563", "filename": "src/test/run-fail/rt-set-exit-status.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Frt-set-exit-status.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Frt-set-exit-status.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Frt-set-exit-status.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -13,7 +13,7 @@\n use std::os;\n \n fn main() {\n-    error!(~\"whatever\");\n+    error2!(\"whatever\");\n     // 101 is the code the runtime uses on task failure and the value\n     // compiletest expects run-fail tests to return.\n     os::set_exit_status(101);"}, {"sha": "622e2e326e564041c7a5edf6d741093fab07827b", "filename": "src/test/run-fail/run-unexported-tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Frun-unexported-tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Frun-unexported-tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Frun-unexported-tests.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -17,5 +17,5 @@ mod m {\n     pub fn exported() { }\n \n     #[test]\n-    fn unexported() { fail!(\"runned an unexported test\"); }\n+    fn unexported() { fail2!(\"runned an unexported test\"); }\n }"}, {"sha": "a016af24451ae07047126aca8af7a02d6c96d94b", "filename": "src/test/run-fail/small-negative-indexing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fsmall-negative-indexing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fsmall-negative-indexing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fsmall-negative-indexing.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -15,5 +15,5 @@ use std::vec;\n fn main() {\n     let v = vec::from_fn(1024u, {|n| n});\n     // this should trip a bounds check\n-    error!(v[-1i8]);\n+    error2!(\"{:?}\", v[-1i8]);\n }"}, {"sha": "dad8ead8d65a6da63f0465fe102ebac22f0807e8", "filename": "src/test/run-fail/spawnfail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fspawnfail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fspawnfail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fspawnfail.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -17,7 +17,7 @@ use std::task;\n // We don't want to see any invalid reads\n fn main() {\n     fn f() {\n-        fail!();\n+        fail2!();\n     }\n     task::spawn(|| f() );\n }"}, {"sha": "840db545dec771193927c6f95bbbc510e1a5c329", "filename": "src/test/run-fail/task-comm-recv-block.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Ftask-comm-recv-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Ftask-comm-recv-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ftask-comm-recv-block.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -16,7 +16,7 @@ use std::task;\n \n fn goodfail() {\n     task::deschedule();\n-    fail!(\"goodfail\");\n+    fail2!(\"goodfail\");\n }\n \n fn main() {\n@@ -25,5 +25,5 @@ fn main() {\n     // We shouldn't be able to get past this recv since there's no\n     // message available\n     let i: int = po.recv();\n-    fail!(\"badfail\");\n+    fail2!(\"badfail\");\n }"}, {"sha": "419d8c1320f9142615806f8581d36915613c420d", "filename": "src/test/run-fail/tls-exit-status.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Ftls-exit-status.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Ftls-exit-status.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ftls-exit-status.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -15,5 +15,5 @@ use std::os;\n \n fn main() {\n     os::args();\n-    fail!(\"please have a nonzero exit status\");\n+    fail2!(\"please have a nonzero exit status\");\n }"}, {"sha": "d1d816f7f793268bf5f1bc9a038606d441058ab9", "filename": "src/test/run-fail/unique-fail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funique-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funique-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funique-fail.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -9,4 +9,4 @@\n // except according to those terms.\n \n // error-pattern: fail\n-fn main() { ~fail!(); }\n+fn main() { ~fail2!(); }"}, {"sha": "0050002a22e8e473f30d6040d8982a7532cde33c", "filename": "src/test/run-fail/unwind-box-fn-unique.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-box-fn-unique.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-box-fn-unique.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-box-fn-unique.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -11,14 +11,14 @@\n // error-pattern:fail\n \n fn failfn() {\n-    fail!();\n+    fail2!();\n }\n \n fn main() {\n     let y = ~0;\n     let x: @~fn() = @(|| {\n-        error!(y.clone());\n+        error2!(\"{:?}\", y.clone());\n     });\n     failfn();\n-    error!(x);\n+    error2!(\"{:?}\", x);\n }"}, {"sha": "02d2218f536d42bbfad568338203b835f65ea315", "filename": "src/test/run-fail/unwind-box-res.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-box-res.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-box-res.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-box-res.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -13,7 +13,7 @@\n use std::cast;\n \n fn failfn() {\n-    fail!();\n+    fail2!();\n }\n \n struct r {\n@@ -41,6 +41,6 @@ fn main() {\n         cast::forget(i1);\n         let x = @r(i1p);\n         failfn();\n-        error!(x);\n+        error2!(\"{:?}\", x);\n     }\n }"}, {"sha": "2086a23c6af7ebfbfa76e9292512343577d99bc8", "filename": "src/test/run-fail/unwind-box-str.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-box-str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-box-str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-box-str.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -11,11 +11,11 @@\n // error-pattern:fail\n \n fn failfn() {\n-    fail!();\n+    fail2!();\n }\n \n fn main() {\n     let x = @~\"hi\";\n     failfn();\n-    error!(x);\n+    error2!(\"{:?}\", x);\n }"}, {"sha": "b8534483fb52efbff173b3823a0a316dbef12b85", "filename": "src/test/run-fail/unwind-box-trait.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-box-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-box-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-box-trait.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -11,7 +11,7 @@\n // error-pattern:fail\n \n fn failfn() {\n-    fail!();\n+    fail2!();\n }\n \n trait i {\n@@ -25,5 +25,5 @@ impl i for ~int {\n fn main() {\n     let x = @~0 as @i;\n     failfn();\n-    error!(x);\n+    error2!(\"{:?}\", x);\n }"}, {"sha": "3abf5330e408f6e3372510d636ea0407824ea0d0", "filename": "src/test/run-fail/unwind-box-unique-unique.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-box-unique-unique.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-box-unique-unique.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-box-unique-unique.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -11,11 +11,11 @@\n // error-pattern:fail\n \n fn failfn() {\n-    fail!();\n+    fail2!();\n }\n \n fn main() {\n     let x = @~~0;\n     failfn();\n-    error!(x);\n+    error2!(\"{:?}\", x);\n }"}, {"sha": "5b3bf74f89e2511f92b9fbabafd5819f031fd65c", "filename": "src/test/run-fail/unwind-box-unique.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-box-unique.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-box-unique.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-box-unique.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -11,11 +11,11 @@\n // error-pattern:fail\n \n fn failfn() {\n-    fail!();\n+    fail2!();\n }\n \n fn main() {\n     let x = @~0;\n     failfn();\n-    error!(x);\n+    error2!(\"{:?}\", x);\n }"}, {"sha": "3b767839a0dd62df4c68380a66dc1f3386c73864", "filename": "src/test/run-fail/unwind-box-vec.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-box-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-box-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-box-vec.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -11,11 +11,11 @@\n // error-pattern:fail\n \n fn failfn() {\n-    fail!();\n+    fail2!();\n }\n \n fn main() {\n     let x = @~[0, 1, 2, 3, 4, 5];\n     failfn();\n-    error!(x);\n+    error2!(\"{:?}\", x);\n }"}, {"sha": "0b144b6c1edd4cdcc67f494ee11f97835b26d442", "filename": "src/test/run-fail/unwind-box.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-box.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -11,7 +11,7 @@\n // error-pattern:fail\n \n fn failfn() {\n-    fail!();\n+    fail2!();\n }\n \n fn main() {"}, {"sha": "df6c2be860f7adfae887b033bae6b755c81cfd37", "filename": "src/test/run-fail/unwind-fail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-fail.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -12,5 +12,5 @@\n \n fn main() {\n     @0;\n-    fail!();\n+    fail2!();\n }"}, {"sha": "8a71d1d34560a93e7c76835a79619214f7d04105", "filename": "src/test/run-fail/unwind-initializer-indirect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-initializer-indirect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-initializer-indirect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-initializer-indirect.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -10,7 +10,7 @@\n \n // error-pattern:fail\n \n-fn f() -> @int { fail!(); }\n+fn f() -> @int { fail2!(); }\n \n fn main() {\n     let _a: @int = f();"}, {"sha": "a4161ad424b17a0fece03ebb46ceb0ca6f464163", "filename": "src/test/run-fail/unwind-initializer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-initializer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-initializer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-initializer.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -12,6 +12,6 @@\n \n fn main() {\n     let _a: @int = {\n-        fail!();\n+        fail2!();\n     };\n }"}, {"sha": "cfd8d555c2e8b1519625fac3be7f663e18c61b1b", "filename": "src/test/run-fail/unwind-interleaved.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-interleaved.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-interleaved.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-interleaved.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -12,7 +12,7 @@\n \n fn a() { }\n \n-fn b() { fail!(); }\n+fn b() { fail2!(); }\n \n fn main() {\n     let _x = ~[0];"}, {"sha": "4c9125bde99c8dc3fa4e8eefd8988f92f354a1a7", "filename": "src/test/run-fail/unwind-iter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-iter.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -14,7 +14,7 @@\n #[allow(unused_variable)];\n \n fn x(it: &fn(int)) {\n-    fail!();\n+    fail2!();\n     it(0);\n }\n "}, {"sha": "11fbcfaff78c59f1f1562bd3cb5622bbe4c1b191", "filename": "src/test/run-fail/unwind-iter2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-iter2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-iter2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-iter2.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -16,5 +16,5 @@ fn x(it: &fn(int)) {\n }\n \n fn main() {\n-    x(|_x| fail!() );\n+    x(|_x| fail2!() );\n }"}, {"sha": "4857a38519c19783705f3eca2759a5ca94c50623", "filename": "src/test/run-fail/unwind-lambda.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-lambda.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-lambda.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-lambda.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -22,7 +22,7 @@ fn main() {\n         let cheese = cheese.clone();\n         let f: &fn() = || {\n             let _chew = mush + cheese;\n-            fail!(\"so yummy\")\n+            fail2!(\"so yummy\")\n         };\n         f();\n     });"}, {"sha": "c017ddc49f0f8a4b7a23d57730b438333c04e2b9", "filename": "src/test/run-fail/unwind-match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-match.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -15,7 +15,7 @@ fn test_box() {\n }\n fn test_str() {\n   let res = match false { true => { ~\"happy\" },\n-     _ => fail!(\"non-exhaustive match failure\") };\n+     _ => fail2!(\"non-exhaustive match failure\") };\n   assert_eq!(res, ~\"happy\");\n }\n fn main() {"}, {"sha": "dc5e5a3b9956f155f97c1b5e16c2347a4c655da1", "filename": "src/test/run-fail/unwind-misc-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-misc-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-misc-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-misc-1.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -19,7 +19,7 @@ fn main() {\n         arr.push(@~\"key stuff\");\n         map.insert(arr.clone(), arr + &[@~\"value stuff\"]);\n         if arr.len() == 5 {\n-            fail!();\n+            fail2!();\n         }\n     }\n }"}, {"sha": "626228cd225955ac5b3f88619c734094f86c5ee1", "filename": "src/test/run-fail/unwind-move.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-move.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-move.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-move.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -10,7 +10,7 @@\n \n // error-pattern:fail\n fn f(_a: @int) {\n-    fail!();\n+    fail2!();\n }\n \n fn main() {"}, {"sha": "ae543c9a88c42e224c7663a839e3e20da9a6636b", "filename": "src/test/run-fail/unwind-nested.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-nested.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-nested.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-nested.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -15,7 +15,7 @@ fn main() {\n     {\n         let _b = @0;\n         {\n-            fail!();\n+            fail2!();\n         }\n     }\n }"}, {"sha": "933bd62bc0cae0963e5163f2dc9c160f9c4ada36", "filename": "src/test/run-fail/unwind-partial-box.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-partial-box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-partial-box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-partial-box.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -10,7 +10,7 @@\n \n // error-pattern:fail\n \n-fn f() -> ~[int] { fail!(); }\n+fn f() -> ~[int] { fail2!(); }\n \n // Voodoo. In unwind-alt we had to do this to trigger the bug. Might\n // have been to do with memory allocation patterns."}, {"sha": "b627103485ca24d62a90eae6bfd411e05130fe04", "filename": "src/test/run-fail/unwind-partial-unique.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-partial-unique.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-partial-unique.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-partial-unique.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -10,7 +10,7 @@\n \n // error-pattern:fail\n \n-fn f() -> ~[int] { fail!(); }\n+fn f() -> ~[int] { fail2!(); }\n \n // Voodoo. In unwind-alt we had to do this to trigger the bug. Might\n // have been to do with memory allocation patterns."}, {"sha": "348989659067a30726795204339e3af8de24c079", "filename": "src/test/run-fail/unwind-partial-vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-partial-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-partial-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-partial-vec.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -10,7 +10,7 @@\n \n // error-pattern:fail\n \n-fn f() -> ~[int] { fail!(); }\n+fn f() -> ~[int] { fail2!(); }\n \n // Voodoo. In unwind-alt we had to do this to trigger the bug. Might\n // have been to do with memory allocation patterns."}, {"sha": "3858fe3923f1b434168036f365204679a71014ae", "filename": "src/test/run-fail/unwind-rec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-rec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-rec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-rec.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -11,7 +11,7 @@\n // error-pattern:fail\n \n fn build() -> ~[int] {\n-    fail!();\n+    fail2!();\n }\n \n struct Blk { node: ~[int] }"}, {"sha": "a5aaf46b4b2efdc41376c695ca3c1dd7f6924611", "filename": "src/test/run-fail/unwind-rec2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-rec2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-rec2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-rec2.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -15,7 +15,7 @@ fn build1() -> ~[int] {\n }\n \n fn build2() -> ~[int] {\n-    fail!();\n+    fail2!();\n }\n \n struct Blk { node: ~[int], span: ~[int] }"}, {"sha": "5b9917979694dbc5d131944c102bbdd8281334e0", "filename": "src/test/run-fail/unwind-resource-fail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-resource-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-resource-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-resource-fail.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -15,7 +15,7 @@ struct r {\n }\n \n impl Drop for r {\n-    fn drop(&mut self) { fail!(\"squirrel\") }\n+    fn drop(&mut self) { fail2!(\"squirrel\") }\n }\n \n fn r(i: int) -> r { r { i: i } }"}, {"sha": "652bf31dee405b02843f67e3ebb09a374f3155da", "filename": "src/test/run-fail/unwind-resource-fail2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-resource-fail2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-resource-fail2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-resource-fail2.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -16,13 +16,13 @@ struct r {\n }\n \n impl Drop for r {\n-    fn drop(&mut self) { fail!(\"wombat\") }\n+    fn drop(&mut self) { fail2!(\"wombat\") }\n }\n \n fn r(i: int) -> r { r { i: i } }\n \n fn main() {\n     @0;\n     let r = r(0);\n-    fail!();\n+    fail2!();\n }"}, {"sha": "92b10cef31998eba19740b2c8625b70597664147", "filename": "src/test/run-fail/unwind-resource-fail3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-resource-fail3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-resource-fail3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-resource-fail3.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -20,7 +20,7 @@ fn faily_box(i: @int) -> faily_box { faily_box { i: i } }\n #[unsafe_destructor]\n impl Drop for faily_box {\n     fn drop(&mut self) {\n-        fail!(\"quux\");\n+        fail2!(\"quux\");\n     }\n }\n "}, {"sha": "ab28cb8a9ee44fbc934827a7664337407f16ddd3", "filename": "src/test/run-fail/unwind-stacked.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-stacked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-stacked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-stacked.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -12,7 +12,7 @@\n \n fn f() {\n     let _a = @0;\n-    fail!();\n+    fail2!();\n }\n \n fn g() {"}, {"sha": "efb69b9f9576fa5461993753e713db897c451bcb", "filename": "src/test/run-fail/unwind-tup.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-tup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-tup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-tup.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -11,7 +11,7 @@\n // error-pattern:fail\n \n fn fold_local() -> @~[int]{\n-    fail!();\n+    fail2!();\n }\n \n fn main() {"}, {"sha": "20d394bafac837900e3aee4abddaf03a603f8348", "filename": "src/test/run-fail/unwind-tup2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-tup2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-tup2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-tup2.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -15,7 +15,7 @@ fn fold_local() -> @~[int]{\n }\n \n fn fold_remote() -> @~[int]{\n-    fail!();\n+    fail2!();\n }\n \n fn main() {"}, {"sha": "d61a4927db8bce2d6417a9692fa021808b55ab5c", "filename": "src/test/run-fail/unwind-uninitialized.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-uninitialized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-uninitialized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-uninitialized.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -11,7 +11,7 @@\n // error-pattern:fail\n \n fn f() {\n-    fail!();\n+    fail2!();\n }\n \n fn main() {"}, {"sha": "9ede24d28c48685b0a8a66ff59125f68f4536453", "filename": "src/test/run-fail/unwind-unique.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-unique.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Funwind-unique.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-unique.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -11,7 +11,7 @@\n // error-pattern:fail\n \n fn failfn() {\n-    fail!();\n+    fail2!();\n }\n \n fn main() {"}, {"sha": "c0a1033efe0469897c70ec455916ab6297ab51c7", "filename": "src/test/run-fail/while-body-fails.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fwhile-body-fails.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fwhile-body-fails.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fwhile-body-fails.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -11,4 +11,4 @@\n #[allow(while_true)];\n \n // error-pattern:quux\n-fn main() { let _x: int = { while true { fail!(\"quux\"); } ; 8 } ; }\n+fn main() { let _x: int = { while true { fail2!(\"quux\"); } ; 8 } ; }"}, {"sha": "e42cb5e778cf2f95870182ac896b7dc3431e7398", "filename": "src/test/run-fail/while-fail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fwhile-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02054ac8a1490211a5a6873fdefe186bd0758b7b/src%2Ftest%2Frun-fail%2Fwhile-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fwhile-fail.rs?ref=02054ac8a1490211a5a6873fdefe186bd0758b7b", "patch": "@@ -12,5 +12,5 @@\n \n // error-pattern:giraffe\n fn main() {\n-    fail!({ while true { fail!(\"giraffe\") }; \"clandestine\" });\n+    fail2!({ while true { fail2!(\"giraffe\") }; \"clandestine\" });\n }"}]}