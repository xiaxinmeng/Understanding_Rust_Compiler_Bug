{"sha": "e7dd73ea9e1df22a4432a39daf3869a9028a3fb4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3ZGQ3M2VhOWUxZGYyMmE0NDMyYTM5ZGFmMzg2OWE5MDI4YTNmYjQ=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-12-25T17:15:31Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-12-25T17:15:31Z"}, "message": "Fix type typo in add_missing_impl_members doc", "tree": {"sha": "9f5ebcabbd79650cb5fa8cabf319f7f6a0ff3415", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f5ebcabbd79650cb5fa8cabf319f7f6a0ff3415"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7dd73ea9e1df22a4432a39daf3869a9028a3fb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7dd73ea9e1df22a4432a39daf3869a9028a3fb4", "html_url": "https://github.com/rust-lang/rust/commit/e7dd73ea9e1df22a4432a39daf3869a9028a3fb4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7dd73ea9e1df22a4432a39daf3869a9028a3fb4/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1acb0ca5ca2162be068fd6a07f7cc4ae171ed81", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1acb0ca5ca2162be068fd6a07f7cc4ae171ed81", "html_url": "https://github.com/rust-lang/rust/commit/e1acb0ca5ca2162be068fd6a07f7cc4ae171ed81"}], "stats": {"total": 32, "additions": 18, "deletions": 14}, "files": [{"sha": "7df05b84125f8c733fe39335a52c9ec14a34975b", "filename": "crates/assists/src/handlers/add_missing_impl_members.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e7dd73ea9e1df22a4432a39daf3869a9028a3fb4/crates%2Fassists%2Fsrc%2Fhandlers%2Fadd_missing_impl_members.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7dd73ea9e1df22a4432a39daf3869a9028a3fb4/crates%2Fassists%2Fsrc%2Fhandlers%2Fadd_missing_impl_members.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fadd_missing_impl_members.rs?ref=e7dd73ea9e1df22a4432a39daf3869a9028a3fb4", "patch": "@@ -15,7 +15,7 @@ use crate::{\n //\n // ```\n // trait Trait<T> {\n-//     Type X;\n+//     type X;\n //     fn foo(&self) -> T;\n //     fn bar(&self) {}\n // }\n@@ -27,14 +27,16 @@ use crate::{\n // ->\n // ```\n // trait Trait<T> {\n-//     Type X;\n+//     type X;\n //     fn foo(&self) -> T;\n //     fn bar(&self) {}\n // }\n //\n // impl Trait<u32> for () {\n+//     $0type X;\n+//\n //     fn foo(&self) -> u32 {\n-//         ${0:todo!()}\n+//         todo!()\n //     }\n // }\n // ```\n@@ -54,27 +56,27 @@ pub(crate) fn add_missing_impl_members(acc: &mut Assists, ctx: &AssistContext) -\n //\n // ```\n // trait Trait {\n-//     Type X;\n+//     type X;\n //     fn foo(&self);\n //     fn bar(&self) {}\n // }\n //\n // impl Trait for () {\n-//     Type X = ();\n+//     type X = ();\n //     fn foo(&self) {}<|>\n //\n // }\n // ```\n // ->\n // ```\n // trait Trait {\n-//     Type X;\n+//     type X;\n //     fn foo(&self);\n //     fn bar(&self) {}\n // }\n //\n // impl Trait for () {\n-//     Type X = ();\n+//     type X = ();\n //     fn foo(&self) {}\n //\n //     $0fn bar(&self) {}"}, {"sha": "d3dfe24e7c6834358d917f06b4aa3e9f5028395c", "filename": "crates/assists/src/tests/generated.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e7dd73ea9e1df22a4432a39daf3869a9028a3fb4/crates%2Fassists%2Fsrc%2Ftests%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7dd73ea9e1df22a4432a39daf3869a9028a3fb4/crates%2Fassists%2Fsrc%2Ftests%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Ftests%2Fgenerated.rs?ref=e7dd73ea9e1df22a4432a39daf3869a9028a3fb4", "patch": "@@ -42,26 +42,26 @@ fn doctest_add_impl_default_members() {\n         \"add_impl_default_members\",\n         r#####\"\n trait Trait {\n-    Type X;\n+    type X;\n     fn foo(&self);\n     fn bar(&self) {}\n }\n \n impl Trait for () {\n-    Type X = ();\n+    type X = ();\n     fn foo(&self) {}<|>\n \n }\n \"#####,\n         r#####\"\n trait Trait {\n-    Type X;\n+    type X;\n     fn foo(&self);\n     fn bar(&self) {}\n }\n \n impl Trait for () {\n-    Type X = ();\n+    type X = ();\n     fn foo(&self) {}\n \n     $0fn bar(&self) {}\n@@ -76,7 +76,7 @@ fn doctest_add_impl_missing_members() {\n         \"add_impl_missing_members\",\n         r#####\"\n trait Trait<T> {\n-    Type X;\n+    type X;\n     fn foo(&self) -> T;\n     fn bar(&self) {}\n }\n@@ -87,14 +87,16 @@ impl Trait<u32> for () {<|>\n \"#####,\n         r#####\"\n trait Trait<T> {\n-    Type X;\n+    type X;\n     fn foo(&self) -> T;\n     fn bar(&self) {}\n }\n \n impl Trait<u32> for () {\n+    $0type X;\n+\n     fn foo(&self) -> u32 {\n-        ${0:todo!()}\n+        todo!()\n     }\n }\n \"#####,"}]}