{"sha": "d9f1d6b7f69f293ba5f060fd9e179de228d9497b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5ZjFkNmI3ZjY5ZjI5M2JhNWYwNjBmZDllMTc5ZGUyMjhkOTQ5N2I=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-18T09:31:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-18T09:31:22Z"}, "message": "auto merge of #15732 : bgamari/rust/to-tokens, r=alexcrichton\n\nHere I add a `ToTokens` impl for `Attribute_` and `Option<T>`, as well as generalize the impl for `Vec<T>`", "tree": {"sha": "58ea2bf65c6eb86048034eaaaa2f24083dd7cbbe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58ea2bf65c6eb86048034eaaaa2f24083dd7cbbe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d9f1d6b7f69f293ba5f060fd9e179de228d9497b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d9f1d6b7f69f293ba5f060fd9e179de228d9497b", "html_url": "https://github.com/rust-lang/rust/commit/d9f1d6b7f69f293ba5f060fd9e179de228d9497b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d9f1d6b7f69f293ba5f060fd9e179de228d9497b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5980aa0f22849b8d4f25c8d30584e0e2bc82a9b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/5980aa0f22849b8d4f25c8d30584e0e2bc82a9b8", "html_url": "https://github.com/rust-lang/rust/commit/5980aa0f22849b8d4f25c8d30584e0e2bc82a9b8"}, {"sha": "e4f8cec416d727a7ca2d732cbbae99448228f76d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4f8cec416d727a7ca2d732cbbae99448228f76d", "html_url": "https://github.com/rust-lang/rust/commit/e4f8cec416d727a7ca2d732cbbae99448228f76d"}], "stats": {"total": 38, "additions": 35, "deletions": 3}, "files": [{"sha": "49bd3697884c72750ff2455ca8cffbc91ea1a4ed", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d9f1d6b7f69f293ba5f060fd9e179de228d9497b/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9f1d6b7f69f293ba5f060fd9e179de228d9497b/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=d9f1d6b7f69f293ba5f060fd9e179de228d9497b", "patch": "@@ -371,6 +371,9 @@ pub fn syntax_expander_table() -> SyntaxEnv {\n     syntax_expanders.insert(intern(\"quote_ty\"),\n                        builtin_normal_expander(\n                             ext::quote::expand_quote_ty));\n+    syntax_expanders.insert(intern(\"quote_method\"),\n+                       builtin_normal_expander(\n+                            ext::quote::expand_quote_method));\n     syntax_expanders.insert(intern(\"quote_item\"),\n                        builtin_normal_expander(\n                             ext::quote::expand_quote_item));"}, {"sha": "a7ede6f742d9f86718bd5fbefc929e0289cd2000", "filename": "src/libsyntax/ext/quote.rs", "status": "modified", "additions": 32, "deletions": 3, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/d9f1d6b7f69f293ba5f060fd9e179de228d9497b/src%2Flibsyntax%2Fext%2Fquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9f1d6b7f69f293ba5f060fd9e179de228d9497b/src%2Flibsyntax%2Fext%2Fquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fquote.rs?ref=d9f1d6b7f69f293ba5f060fd9e179de228d9497b", "patch": "@@ -54,9 +54,10 @@ pub mod rt {\n         }\n     }\n \n-    impl ToTokens for Vec<TokenTree> {\n-        fn to_tokens(&self, _cx: &ExtCtxt) -> Vec<TokenTree> {\n-            (*self).clone()\n+    impl<T: ToTokens> ToTokens for Vec<T> {\n+        fn to_tokens(&self, cx: &ExtCtxt) -> Vec<TokenTree> {\n+            let a = self.iter().flat_map(|t| t.to_tokens(cx).move_iter());\n+            FromIterator::from_iter(a)\n         }\n     }\n \n@@ -67,6 +68,15 @@ pub mod rt {\n         }\n     }\n \n+    impl<T: ToTokens> ToTokens for Option<T> {\n+        fn to_tokens(&self, cx: &ExtCtxt) -> Vec<TokenTree> {\n+            match self {\n+                &Some(ref t) => t.to_tokens(cx),\n+                &None => Vec::new(),\n+            }\n+        }\n+    }\n+\n     /* Should be (when bugs in default methods are fixed):\n \n     trait ToSource : ToTokens {\n@@ -133,11 +143,18 @@ pub mod rt {\n     impl_to_source!(ast::Arg, arg_to_string)\n     impl_to_source!(Generics, generics_to_string)\n     impl_to_source!(Gc<ast::Item>, item_to_string)\n+    impl_to_source!(Gc<ast::Method>, method_to_string)\n     impl_to_source!(Gc<ast::Expr>, expr_to_string)\n     impl_to_source!(Gc<ast::Pat>, pat_to_string)\n     impl_to_source_slice!(ast::Ty, \", \")\n     impl_to_source_slice!(Gc<ast::Item>, \"\\n\\n\")\n \n+    impl ToSource for ast::Attribute_ {\n+        fn to_source(&self) -> String {\n+            pprust::attribute_to_string(&dummy_spanned(*self))\n+        }\n+    }\n+\n     impl<'a> ToSource for &'a str {\n         fn to_source(&self) -> String {\n             let lit = dummy_spanned(ast::LitStr(\n@@ -222,13 +239,15 @@ pub mod rt {\n     impl_to_tokens!(ast::Ident)\n     impl_to_tokens!(Gc<ast::Item>)\n     impl_to_tokens!(Gc<ast::Pat>)\n+    impl_to_tokens!(Gc<ast::Method>)\n     impl_to_tokens_lifetime!(&'a [Gc<ast::Item>])\n     impl_to_tokens!(ast::Ty)\n     impl_to_tokens_lifetime!(&'a [ast::Ty])\n     impl_to_tokens!(Generics)\n     impl_to_tokens!(Gc<ast::Expr>)\n     impl_to_tokens!(ast::Block)\n     impl_to_tokens!(ast::Arg)\n+    impl_to_tokens!(ast::Attribute_)\n     impl_to_tokens_lifetime!(&'a str)\n     impl_to_tokens!(())\n     impl_to_tokens!(char)\n@@ -336,6 +355,16 @@ pub fn expand_quote_ty(cx: &mut ExtCtxt,\n     base::MacExpr::new(expanded)\n }\n \n+pub fn expand_quote_method(cx: &mut ExtCtxt,\n+                           sp: Span,\n+                           tts: &[ast::TokenTree])\n+                           -> Box<base::MacResult> {\n+    let e_param_colons = cx.expr_none(sp);\n+    let expanded = expand_parse_call(cx, sp, \"parse_method\",\n+                                     vec!(e_param_colons), tts);\n+    base::MacExpr::new(expanded)\n+}\n+\n pub fn expand_quote_stmt(cx: &mut ExtCtxt,\n                          sp: Span,\n                          tts: &[ast::TokenTree])"}]}