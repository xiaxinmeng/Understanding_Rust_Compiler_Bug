{"sha": "e7bc2a012a56efe7cd8fb553de4ea72eff68661b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3YmMyYTAxMmE1NmVmZTdjZDhmYjU1M2RlNGVhNzJlZmY2ODY2MWI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2021-07-06T13:19:02Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2021-07-07T09:30:08Z"}, "message": "Add tests for reexports (both public and private)", "tree": {"sha": "37c4ec636471f5d7e2f8c2593814d8dc4444ce20", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37c4ec636471f5d7e2f8c2593814d8dc4444ce20"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7bc2a012a56efe7cd8fb553de4ea72eff68661b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7bc2a012a56efe7cd8fb553de4ea72eff68661b", "html_url": "https://github.com/rust-lang/rust/commit/e7bc2a012a56efe7cd8fb553de4ea72eff68661b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7bc2a012a56efe7cd8fb553de4ea72eff68661b/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc0932641a58e262338d6372ecb102a5db88938a", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc0932641a58e262338d6372ecb102a5db88938a", "html_url": "https://github.com/rust-lang/rust/commit/cc0932641a58e262338d6372ecb102a5db88938a"}], "stats": {"total": 151, "additions": 137, "deletions": 14}, "files": [{"sha": "6de018d136002cdef9adf59275de3ff481ab97d2", "filename": "src/test/rustdoc/auxiliary/macro-2-reexport.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cc0932641a58e262338d6372ecb102a5db88938a/src%2Ftest%2Frustdoc%2Fauxiliary%2Fmacro-2-reexport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc0932641a58e262338d6372ecb102a5db88938a/src%2Ftest%2Frustdoc%2Fauxiliary%2Fmacro-2-reexport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fauxiliary%2Fmacro-2-reexport.rs?ref=cc0932641a58e262338d6372ecb102a5db88938a", "patch": "@@ -1,6 +0,0 @@\n-#![crate_name = \"macro_2_reexport\"]\n-#![feature(decl_macro)]\n-\n-pub macro addr_of($place:expr) {\n-    &raw const $place\n-}"}, {"sha": "e04b786a864a1b63ed8ceda82dfbbcd9ecf6ef2f", "filename": "src/test/rustdoc/auxiliary/reexports.rs", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/e7bc2a012a56efe7cd8fb553de4ea72eff68661b/src%2Ftest%2Frustdoc%2Fauxiliary%2Freexports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7bc2a012a56efe7cd8fb553de4ea72eff68661b/src%2Ftest%2Frustdoc%2Fauxiliary%2Freexports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fauxiliary%2Freexports.rs?ref=e7bc2a012a56efe7cd8fb553de4ea72eff68661b", "patch": "@@ -0,0 +1,42 @@\n+#![feature(decl_macro)]\n+\n+pub macro addr_of($place:expr) {\n+    &raw const $place\n+}\n+\n+pub macro addr_of_self($place:expr) {\n+    &raw const $place\n+}\n+\n+pub macro addr_of_crate($place:expr) {\n+    &raw const $place\n+}\n+\n+pub struct Foo;\n+pub struct FooSelf;\n+pub struct FooCrate;\n+\n+pub enum Bar { Foo, }\n+pub enum BarSelf { Foo, }\n+pub enum BarCrate { Foo, }\n+\n+pub fn foo() {}\n+pub fn foo_self() {}\n+pub fn foo_crate() {}\n+\n+pub type Type = i32;\n+pub type TypeSelf = i32;\n+pub type TypeCrate = i32;\n+\n+pub union Union {\n+    a: i8,\n+    b: i8,\n+}\n+pub union UnionSelf {\n+    a: i8,\n+    b: i8,\n+}\n+pub union UnionCrate {\n+    a: i8,\n+    b: i8,\n+}"}, {"sha": "f1ac8fa963e9c77a835cab8430f4bffa48650649", "filename": "src/test/rustdoc/macro-2-reexport.rs", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cc0932641a58e262338d6372ecb102a5db88938a/src%2Ftest%2Frustdoc%2Fmacro-2-reexport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc0932641a58e262338d6372ecb102a5db88938a/src%2Ftest%2Frustdoc%2Fmacro-2-reexport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fmacro-2-reexport.rs?ref=cc0932641a58e262338d6372ecb102a5db88938a", "patch": "@@ -1,8 +0,0 @@\n-// aux-build: macro-2-reexport.rs\n-\n-#![crate_name = \"foo\"]\n-\n-extern crate macro_2_reexport;\n-\n-// @has 'foo/macro.addr_of.html' '//*[@class=\"docblock type-decl\"]' 'macro addr_of($place : expr) {'\n-pub use macro_2_reexport::addr_of;"}, {"sha": "a0a415e29dd41bd3e86d0e17d81bcb08de49e540", "filename": "src/test/rustdoc/reexports-priv.rs", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/e7bc2a012a56efe7cd8fb553de4ea72eff68661b/src%2Ftest%2Frustdoc%2Freexports-priv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7bc2a012a56efe7cd8fb553de4ea72eff68661b/src%2Ftest%2Frustdoc%2Freexports-priv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Freexports-priv.rs?ref=e7bc2a012a56efe7cd8fb553de4ea72eff68661b", "patch": "@@ -0,0 +1,48 @@\n+// aux-build: reexports.rs\n+// compile-flags: --document-private-items\n+\n+#![crate_name = \"foo\"]\n+\n+extern crate reexports;\n+\n+// @has 'foo/macro.addr_of.html' '//*[@class=\"docblock type-decl\"]' 'pub macro addr_of($place : expr) {'\n+pub use reexports::addr_of;\n+// @has 'foo/macro.addr_of_crate.html' '//*[@class=\"docblock type-decl\"]' 'pub(crate) macro addr_of_crate($place : expr) {'\n+pub(crate) use reexports::addr_of_crate;\n+// @has 'foo/macro.addr_of_self.html' '//*[@class=\"docblock type-decl\"]' 'pub(crate) macro addr_of_self($place : expr) {'\n+pub(self) use reexports::addr_of_self;\n+\n+// @has 'foo/struct.Foo.html' '//*[@class=\"docblock type-decl\"]' 'pub struct Foo;'\n+pub use reexports::Foo;\n+// @has 'foo/struct.FooCrate.html' '//*[@class=\"docblock type-decl\"]' 'pub(crate) struct FooCrate;'\n+pub(crate) use reexports::FooCrate;\n+// @has 'foo/struct.FooSelf.html' '//*[@class=\"docblock type-decl\"]' 'pub(crate) struct FooSelf;'\n+pub(self) use reexports::FooSelf;\n+\n+// @has 'foo/enum.Bar.html' '//*[@class=\"docblock type-decl\"]' 'pub enum Bar {'\n+pub use reexports::Bar;\n+// @has 'foo/enum.BarCrate.html' '//*[@class=\"docblock type-decl\"]' 'pub(crate) enum BarCrate {'\n+pub(crate) use reexports::BarCrate;\n+// @has 'foo/enum.BarSelf.html' '//*[@class=\"docblock type-decl\"]' 'pub(crate) enum BarSelf {'\n+pub(self) use reexports::BarSelf;\n+\n+// @has 'foo/fn.foo.html' '//*[@class=\"rust fn\"]' 'pub fn foo()'\n+pub use reexports::foo;\n+// @has 'foo/fn.foo_crate.html' '//*[@class=\"rust fn\"]' 'pub(crate) fn foo_crate()'\n+pub(crate) use reexports::foo_crate;\n+// @has 'foo/fn.foo_self.html' '//*[@class=\"rust fn\"]' 'pub(crate) fn foo_self()'\n+pub(self) use reexports::foo_self;\n+\n+// @has 'foo/type.Type.html' '//*[@class=\"rust typedef\"]' 'pub type Type ='\n+pub use reexports::Type;\n+// @has 'foo/type.TypeCrate.html' '//*[@class=\"rust typedef\"]' 'pub(crate) type TypeCrate ='\n+pub(crate) use reexports::TypeCrate;\n+// @has 'foo/type.TypeSelf.html' '//*[@class=\"rust typedef\"]' 'pub(crate) type TypeSelf ='\n+pub(self) use reexports::TypeSelf;\n+\n+// @has 'foo/union.Union.html' '//*[@class=\"docblock type-decl\"]' 'pub union Union {'\n+pub use reexports::Union;\n+// @has 'foo/union.UnionCrate.html' '//*[@class=\"docblock type-decl\"]' 'pub(crate) union UnionCrate {'\n+pub(crate) use reexports::UnionCrate;\n+// @has 'foo/union.UnionSelf.html' '//*[@class=\"docblock type-decl\"]' 'pub(crate) union UnionSelf {'\n+pub(self) use reexports::UnionSelf;"}, {"sha": "ab4c5bc74390784b2b32d9071a20e0d3293506fa", "filename": "src/test/rustdoc/reexports.rs", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/e7bc2a012a56efe7cd8fb553de4ea72eff68661b/src%2Ftest%2Frustdoc%2Freexports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7bc2a012a56efe7cd8fb553de4ea72eff68661b/src%2Ftest%2Frustdoc%2Freexports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Freexports.rs?ref=e7bc2a012a56efe7cd8fb553de4ea72eff68661b", "patch": "@@ -0,0 +1,47 @@\n+// aux-build: reexports.rs\n+\n+#![crate_name = \"foo\"]\n+\n+extern crate reexports;\n+\n+// @has 'foo/macro.addr_of.html' '//*[@class=\"docblock type-decl\"]' 'pub macro addr_of($place : expr) {'\n+pub use reexports::addr_of;\n+// @!has 'foo/macro.addr_of_crate.html'\n+pub(crate) use reexports::addr_of_crate;\n+// @!has 'foo/macro.addr_of_self.html'\n+pub(self) use reexports::addr_of_self;\n+\n+// @has 'foo/struct.Foo.html' '//*[@class=\"docblock type-decl\"]' 'pub struct Foo;'\n+pub use reexports::Foo;\n+// @!has 'foo/struct.FooCrate.html'\n+pub(crate) use reexports::FooCrate;\n+// @!has 'foo/struct.FooSelf.html'\n+pub(self) use reexports::FooSelf;\n+\n+// @has 'foo/enum.Bar.html' '//*[@class=\"docblock type-decl\"]' 'pub enum Bar {'\n+pub use reexports::Bar;\n+// @!has 'foo/enum.BarCrate.html'\n+pub(crate) use reexports::BarCrate;\n+// @!has 'foo/enum.BarSelf.html'\n+pub(self) use reexports::BarSelf;\n+\n+// @has 'foo/fn.foo.html' '//*[@class=\"rust fn\"]' 'pub fn foo()'\n+pub use reexports::foo;\n+// @!has 'foo/fn.foo_crate.html'\n+pub(crate) use reexports::foo_crate;\n+// @!has 'foo/fn.foo_self.html'\n+pub(self) use reexports::foo_self;\n+\n+// @has 'foo/type.Type.html' '//*[@class=\"rust typedef\"]' 'pub type Type ='\n+pub use reexports::Type;\n+// @!has 'foo/type.TypeCrate.html'\n+pub(crate) use reexports::TypeCrate;\n+// @!has 'foo/type.TypeSelf.html'\n+pub(self) use reexports::TypeSelf;\n+\n+// @has 'foo/union.Union.html' '//*[@class=\"docblock type-decl\"]' 'pub union Union {'\n+pub use reexports::Union;\n+// @!has 'foo/union.UnionCrate.html'\n+pub(crate) use reexports::UnionCrate;\n+// @!has 'foo/union.UnionSelf.html'\n+pub(self) use reexports::UnionSelf;"}]}