{"sha": "ea76d3f454c53623fdd957b79a6652c7d1f2dcc8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhNzZkM2Y0NTRjNTM2MjNmZGQ5NTdiNzlhNjY1MmM3ZDFmMmRjYzg=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-09T05:42:04Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-10T03:00:16Z"}, "message": "rt: Add rust_task::call_on_c_stack", "tree": {"sha": "fc956e53733a79e7e147652895e693d42fef575c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc956e53733a79e7e147652895e693d42fef575c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea76d3f454c53623fdd957b79a6652c7d1f2dcc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea76d3f454c53623fdd957b79a6652c7d1f2dcc8", "html_url": "https://github.com/rust-lang/rust/commit/ea76d3f454c53623fdd957b79a6652c7d1f2dcc8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea76d3f454c53623fdd957b79a6652c7d1f2dcc8/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e2fe4ab8f132e6e84568b050dfaaabdaeae0c43", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e2fe4ab8f132e6e84568b050dfaaabdaeae0c43", "html_url": "https://github.com/rust-lang/rust/commit/1e2fe4ab8f132e6e84568b050dfaaabdaeae0c43"}], "stats": {"total": 31, "additions": 24, "deletions": 7}, "files": [{"sha": "571766c0c2aa435085d41f6a51669f39eb7e49ea", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ea76d3f454c53623fdd957b79a6652c7d1f2dcc8/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/ea76d3f454c53623fdd957b79a6652c7d1f2dcc8/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=ea76d3f454c53623fdd957b79a6652c7d1f2dcc8", "patch": "@@ -194,7 +194,7 @@ void task_start_wrapper(spawn_args *a)\n \n     // The cleanup work needs lots of stack\n     cleanup_args ca = {a, threw_exception};\n-    task->thread->c_context.call_and_change_stacks(&ca, (void*)cleanup_task);\n+    task->call_on_c_stack(&ca, (void*)cleanup_task);\n \n     task->ctx.next->swap(task->ctx);\n }\n@@ -699,7 +699,18 @@ Returns true if we're currently running on the Rust stack\n  */\n bool\n rust_task::on_rust_stack() {\n-    return sp_in_stk_seg(get_sp(), stk);\n+    uintptr_t sp = get_sp();\n+    bool in_first_segment = sp_in_stk_seg(sp, stk);\n+    if (in_first_segment) {\n+        return true;\n+    } else if (stk->next != NULL) {\n+        // This happens only when calling the upcall to delete\n+        // a stack segment\n+        bool in_second_segment = sp_in_stk_seg(sp, stk->next);\n+        return in_second_segment;\n+    } else {\n+        return false;\n+    }\n }\n \n void\n@@ -713,6 +724,12 @@ rust_task::config_notify(chan_handle chan) {\n     notify_chan = chan;\n }\n \n+void\n+rust_task::call_on_c_stack(void *args, void *fn_ptr) {\n+    I(thread, on_rust_stack());\n+    thread->c_context.call_and_change_stacks(args, fn_ptr);\n+}\n+\n //\n // Local Variables:\n // mode: C++"}, {"sha": "c4939d208c10396ddbb4c66f09d19967c64fcde8", "filename": "src/rt/rust_task.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea76d3f454c53623fdd957b79a6652c7d1f2dcc8/src%2Frt%2Frust_task.h", "raw_url": "https://github.com/rust-lang/rust/raw/ea76d3f454c53623fdd957b79a6652c7d1f2dcc8/src%2Frt%2Frust_task.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.h?ref=ea76d3f454c53623fdd957b79a6652c7d1f2dcc8", "patch": "@@ -181,6 +181,8 @@ rust_task : public kernel_owned<rust_task>, rust_cond\n     void check_stack_canary();\n \n     void config_notify(chan_handle chan);\n+\n+    void call_on_c_stack(void *args, void *fn_ptr);\n };\n \n //"}, {"sha": "d12e7311303c55346d9e51e71a691ef60a658b5e", "filename": "src/rt/rust_upcall.cpp", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ea76d3f454c53623fdd957b79a6652c7d1f2dcc8/src%2Frt%2Frust_upcall.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/ea76d3f454c53623fdd957b79a6652c7d1f2dcc8/src%2Frt%2Frust_upcall.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_upcall.cpp?ref=ea76d3f454c53623fdd957b79a6652c7d1f2dcc8", "patch": "@@ -47,8 +47,7 @@ inline void\n call_upcall_on_c_stack(void *args, void *fn_ptr) {\n     check_stack_alignment();\n     rust_task *task = rust_task_thread::get_task();\n-    rust_task_thread *thread = task->thread;\n-    thread->c_context.call_and_change_stacks(args, fn_ptr);\n+    task->call_on_c_stack(args, fn_ptr);\n }\n \n extern \"C\" void record_sp(void *limit);\n@@ -69,11 +68,10 @@ upcall_call_shim_on_c_stack(void *args, void *fn_ptr) {\n     // stack.\n     record_sp(0);\n \n-    rust_task_thread *thread = task->thread;\n     try {\n-        thread->c_context.call_and_change_stacks(args, fn_ptr);\n+        task->call_on_c_stack(args, fn_ptr);\n     } catch (...) {\n-        A(thread, false, \"Native code threw an exception\");\n+        A(task->thread, false, \"Native code threw an exception\");\n     }\n \n     task = rust_task_thread::get_task();"}]}