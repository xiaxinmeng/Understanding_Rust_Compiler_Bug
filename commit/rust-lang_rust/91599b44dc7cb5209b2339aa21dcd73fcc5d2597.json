{"sha": "91599b44dc7cb5209b2339aa21dcd73fcc5d2597", "node_id": "C_kwDOAAsO6NoAKDkxNTk5YjQ0ZGM3Y2I1MjA5YjIzMzlhYTIxZGNkNzNmY2M1ZDI1OTc", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2022-07-25T16:16:28Z"}, "committer": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2022-07-25T16:16:28Z"}, "message": "Fix some broken link fragments.", "tree": {"sha": "44b357958a832245e6f5588e0a75addae9978571", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44b357958a832245e6f5588e0a75addae9978571"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91599b44dc7cb5209b2339aa21dcd73fcc5d2597", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91599b44dc7cb5209b2339aa21dcd73fcc5d2597", "html_url": "https://github.com/rust-lang/rust/commit/91599b44dc7cb5209b2339aa21dcd73fcc5d2597", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91599b44dc7cb5209b2339aa21dcd73fcc5d2597/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7fe022f5aa32bbbb33c3a58755729d6667a461a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/7fe022f5aa32bbbb33c3a58755729d6667a461a9", "html_url": "https://github.com/rust-lang/rust/commit/7fe022f5aa32bbbb33c3a58755729d6667a461a9"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "9438948af544a86a22fac07b7d79b87b2777ce97", "filename": "src/doc/rustdoc/src/deprecated-features.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/91599b44dc7cb5209b2339aa21dcd73fcc5d2597/src%2Fdoc%2Frustdoc%2Fsrc%2Fdeprecated-features.md", "raw_url": "https://github.com/rust-lang/rust/raw/91599b44dc7cb5209b2339aa21dcd73fcc5d2597/src%2Fdoc%2Frustdoc%2Fsrc%2Fdeprecated-features.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fdeprecated-features.md?ref=91599b44dc7cb5209b2339aa21dcd73fcc5d2597", "patch": "@@ -10,4 +10,4 @@ change in any release.\n \n In the past the most common use case for customizing passes was to omit the `strip-private` pass.\n You can do this more easily, and without risk of the pass being changed, by passing\n-[`--document-private-items`](./unstable-features.md#--document-private-items).\n+[`--document-private-items`](command-line-arguments.md#--document-private-items-show-items-that-are-not-public)."}, {"sha": "32b350074903e14e24e62212020e052c18be7183", "filename": "src/doc/rustdoc/src/unstable-features.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/91599b44dc7cb5209b2339aa21dcd73fcc5d2597/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "raw_url": "https://github.com/rust-lang/rust/raw/91599b44dc7cb5209b2339aa21dcd73fcc5d2597/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md?ref=91599b44dc7cb5209b2339aa21dcd73fcc5d2597", "patch": "@@ -466,7 +466,7 @@ Note that the third item is the crate root, which in this case is undocumented.\n and is also accepted on stable toolchains.\n \n It can also be used with `--show-coverage`. Take a look at its\n-[documentation](#--show-coverage-get-statistics-about-code-documentation-coverage) for more\n+[documentation](#--show-coverage-calculate-the-percentage-of-items-with-documentation) for more\n information.\n \n ### `--enable-per-target-ignores`: allow `ignore-foo` style filters for doctests"}, {"sha": "a7c78d80ccd768d1cd0484bed46b93a997040cb5", "filename": "src/tools/linkchecker/main.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/91599b44dc7cb5209b2339aa21dcd73fcc5d2597/src%2Ftools%2Flinkchecker%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91599b44dc7cb5209b2339aa21dcd73fcc5d2597/src%2Ftools%2Flinkchecker%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Flinkchecker%2Fmain.rs?ref=91599b44dc7cb5209b2339aa21dcd73fcc5d2597", "patch": "@@ -348,11 +348,6 @@ impl Checker {\n                     return;\n                 }\n \n-                // These appear to be broken in mdbook right now?\n-                if fragment.starts_with('-') {\n-                    return;\n-                }\n-\n                 parse_ids(&mut target_ids.borrow_mut(), &pretty_path, target_source, report);\n \n                 if target_ids.borrow().contains(*fragment) {"}]}