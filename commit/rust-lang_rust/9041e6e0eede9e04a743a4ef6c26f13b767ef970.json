{"sha": "9041e6e0eede9e04a743a4ef6c26f13b767ef970", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwNDFlNmUwZWVkZTllMDRhNzQzYTRlZjZjMjZmMTNiNzY3ZWY5NzA=", "commit": {"author": {"name": "Hyeon Kim", "email": "simnalamburt@gmail.com", "date": "2015-01-05T03:59:47Z"}, "committer": {"name": "Hyeon Kim", "email": "simnalamburt@gmail.com", "date": "2015-01-07T03:43:12Z"}, "message": "Let `size_of` always be multiple of `min_align_of`\n\nThis change fixes the issue #20460", "tree": {"sha": "190178329b18e56ec29239d7ff70498496a2715a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/190178329b18e56ec29239d7ff70498496a2715a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9041e6e0eede9e04a743a4ef6c26f13b767ef970", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9041e6e0eede9e04a743a4ef6c26f13b767ef970", "html_url": "https://github.com/rust-lang/rust/commit/9041e6e0eede9e04a743a4ef6c26f13b767ef970", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9041e6e0eede9e04a743a4ef6c26f13b767ef970/comments", "author": {"login": "simnalamburt", "id": 4435445, "node_id": "MDQ6VXNlcjQ0MzU0NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/4435445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simnalamburt", "html_url": "https://github.com/simnalamburt", "followers_url": "https://api.github.com/users/simnalamburt/followers", "following_url": "https://api.github.com/users/simnalamburt/following{/other_user}", "gists_url": "https://api.github.com/users/simnalamburt/gists{/gist_id}", "starred_url": "https://api.github.com/users/simnalamburt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simnalamburt/subscriptions", "organizations_url": "https://api.github.com/users/simnalamburt/orgs", "repos_url": "https://api.github.com/users/simnalamburt/repos", "events_url": "https://api.github.com/users/simnalamburt/events{/privacy}", "received_events_url": "https://api.github.com/users/simnalamburt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "simnalamburt", "id": 4435445, "node_id": "MDQ6VXNlcjQ0MzU0NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/4435445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simnalamburt", "html_url": "https://github.com/simnalamburt", "followers_url": "https://api.github.com/users/simnalamburt/followers", "following_url": "https://api.github.com/users/simnalamburt/following{/other_user}", "gists_url": "https://api.github.com/users/simnalamburt/gists{/gist_id}", "starred_url": "https://api.github.com/users/simnalamburt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simnalamburt/subscriptions", "organizations_url": "https://api.github.com/users/simnalamburt/orgs", "repos_url": "https://api.github.com/users/simnalamburt/repos", "events_url": "https://api.github.com/users/simnalamburt/events{/privacy}", "received_events_url": "https://api.github.com/users/simnalamburt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1bc3c960f4a803007ceb74b9085d15c61a88de11", "url": "https://api.github.com/repos/rust-lang/rust/commits/1bc3c960f4a803007ceb74b9085d15c61a88de11", "html_url": "https://github.com/rust-lang/rust/commit/1bc3c960f4a803007ceb74b9085d15c61a88de11"}], "stats": {"total": 72, "additions": 71, "deletions": 1}, "files": [{"sha": "1ce67f7934ad73dba769089564d9092bef81e086", "filename": "src/librustc_trans/trans/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9041e6e0eede9e04a743a4ef6c26f13b767ef970/src%2Flibrustc_trans%2Ftrans%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9041e6e0eede9e04a743a4ef6c26f13b767ef970/src%2Flibrustc_trans%2Ftrans%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fintrinsic.rs?ref=9041e6e0eede9e04a743a4ef6c26f13b767ef970", "patch": "@@ -311,7 +311,7 @@ pub fn trans_intrinsic_call<'a, 'blk, 'tcx>(mut bcx: Block<'blk, 'tcx>,\n         (_, \"size_of\") => {\n             let tp_ty = *substs.types.get(FnSpace, 0);\n             let lltp_ty = type_of::type_of(ccx, tp_ty);\n-            C_uint(ccx, machine::llsize_of_real(ccx, lltp_ty))\n+            C_uint(ccx, machine::llsize_of_alloc(ccx, lltp_ty))\n         }\n         (_, \"min_align_of\") => {\n             let tp_ty = *substs.types.get(FnSpace, 0);"}, {"sha": "582810f0def339528bf4d6316901f18974636b6b", "filename": "src/test/run-pass/simd-size-align.rs", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/9041e6e0eede9e04a743a4ef6c26f13b767ef970/src%2Ftest%2Frun-pass%2Fsimd-size-align.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9041e6e0eede9e04a743a4ef6c26f13b767ef970/src%2Ftest%2Frun-pass%2Fsimd-size-align.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsimd-size-align.rs?ref=9041e6e0eede9e04a743a4ef6c26f13b767ef970", "patch": "@@ -0,0 +1,70 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(simd)]\n+#![allow(non_camel_case_types)]\n+\n+use std::mem;\n+\n+/// `T` should satisfy `size_of T (mod min_align_of T) === 0` to be stored at `Vec<T>` properly\n+/// Please consult the issue #20460\n+fn check<T>() {\n+    assert_eq!(mem::size_of::<T>() % mem::min_align_of::<T>(), 0)\n+}\n+\n+fn main() {\n+    check::<u8x2>();\n+    check::<u8x3>();\n+    check::<u8x4>();\n+    check::<u8x5>();\n+    check::<u8x6>();\n+    check::<u8x7>();\n+    check::<u8x8>();\n+\n+    check::<i16x2>();\n+    check::<i16x3>();\n+    check::<i16x4>();\n+    check::<i16x5>();\n+    check::<i16x6>();\n+    check::<i16x7>();\n+    check::<i16x8>();\n+\n+    check::<f32x2>();\n+    check::<f32x3>();\n+    check::<f32x4>();\n+    check::<f32x5>();\n+    check::<f32x6>();\n+    check::<f32x7>();\n+    check::<f32x8>();\n+}\n+\n+#[simd] struct u8x2(u8, u8);\n+#[simd] struct u8x3(u8, u8, u8);\n+#[simd] struct u8x4(u8, u8, u8, u8);\n+#[simd] struct u8x5(u8, u8, u8, u8, u8);\n+#[simd] struct u8x6(u8, u8, u8, u8, u8, u8);\n+#[simd] struct u8x7(u8, u8, u8, u8, u8, u8, u8);\n+#[simd] struct u8x8(u8, u8, u8, u8, u8, u8, u8, u8);\n+\n+#[simd] struct i16x2(i16, i16);\n+#[simd] struct i16x3(i16, i16, i16);\n+#[simd] struct i16x4(i16, i16, i16, i16);\n+#[simd] struct i16x5(i16, i16, i16, i16, i16);\n+#[simd] struct i16x6(i16, i16, i16, i16, i16, i16);\n+#[simd] struct i16x7(i16, i16, i16, i16, i16, i16, i16);\n+#[simd] struct i16x8(i16, i16, i16, i16, i16, i16, i16, i16);\n+\n+#[simd] struct f32x2(f32, f32);\n+#[simd] struct f32x3(f32, f32, f32);\n+#[simd] struct f32x4(f32, f32, f32, f32);\n+#[simd] struct f32x5(f32, f32, f32, f32, f32);\n+#[simd] struct f32x6(f32, f32, f32, f32, f32, f32);\n+#[simd] struct f32x7(f32, f32, f32, f32, f32, f32, f32);\n+#[simd] struct f32x8(f32, f32, f32, f32, f32, f32, f32, f32);"}]}