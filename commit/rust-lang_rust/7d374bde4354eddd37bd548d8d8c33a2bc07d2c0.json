{"sha": "7d374bde4354eddd37bd548d8d8c33a2bc07d2c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkMzc0YmRlNDM1NGVkZGQzN2JkNTQ4ZDhkOGMzM2EyYmMwN2QyYzA=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-08-07T14:14:44Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-08-07T14:14:44Z"}, "message": "add lint mode for deprecated pattern usage", "tree": {"sha": "1cab86c57470d60b73afaebbb48d4ed8fe169af9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1cab86c57470d60b73afaebbb48d4ed8fe169af9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d374bde4354eddd37bd548d8d8c33a2bc07d2c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d374bde4354eddd37bd548d8d8c33a2bc07d2c0", "html_url": "https://github.com/rust-lang/rust/commit/7d374bde4354eddd37bd548d8d8c33a2bc07d2c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d374bde4354eddd37bd548d8d8c33a2bc07d2c0/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dbef6e593dfb1b164c6750ee99ca2b80c249c4f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/dbef6e593dfb1b164c6750ee99ca2b80c249c4f5", "html_url": "https://github.com/rust-lang/rust/commit/dbef6e593dfb1b164c6750ee99ca2b80c249c4f5"}], "stats": {"total": 43, "additions": 37, "deletions": 6}, "files": [{"sha": "638c583ba9a87f131092a03fbc48f71ac5f73b61", "filename": "src/rustc/middle/lint.rs", "status": "modified", "additions": 36, "deletions": 6, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/7d374bde4354eddd37bd548d8d8c33a2bc07d2c0/src%2Frustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d374bde4354eddd37bd548d8d8c33a2bc07d2c0/src%2Frustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Flint.rs?ref=7d374bde4354eddd37bd548d8d8c33a2bc07d2c0", "patch": "@@ -8,7 +8,9 @@ import std::map::{map,hashmap,int_hash,hash_from_strs};\n import std::smallintmap::{map,smallintmap};\n import io::writer_util;\n import util::ppaux::{ty_to_str};\n-import syntax::print::pprust::{expr_to_str, mode_to_str};\n+import middle::pat_util::{pat_bindings};\n+import syntax::ast_util::{path_to_ident};\n+import syntax::print::pprust::{expr_to_str, mode_to_str, pat_to_str};\n export lint, ctypes, unused_imports, while_true, path_statement, old_vecs;\n export unrecognized_lint, non_implicitly_copyable_typarams;\n export vecs_implicitly_copyable, implicit_copies;\n@@ -49,6 +51,7 @@ enum lint {\n     non_implicitly_copyable_typarams,\n     vecs_implicitly_copyable,\n     deprecated_mode,\n+    deprecated_pattern,\n     non_camel_case_types\n }\n \n@@ -140,6 +143,11 @@ fn get_lint_dict() -> lint_dict {\n            desc: ~\"warn about deprecated uses of modes\",\n            default: allow}),\n \n+        (~\"deprecated_pattern\",\n+         @{lint: deprecated_pattern,\n+           desc: ~\"warn about deprecated uses of pattern bindings\",\n+           default: allow}),\n+\n         (~\"non_camel_case_types\",\n          @{lint: non_camel_case_types,\n            desc: ~\"types, variants and traits must have camel case names\",\n@@ -474,6 +482,27 @@ fn check_item_non_camel_case_types(cx: ty::ctxt, it: @ast::item) {\n     }\n }\n \n+fn check_pat(tcx: ty::ctxt, pat: @ast::pat) {\n+    debug!{\"lint check_pat pat=%s\", pat_to_str(pat)};\n+\n+    do pat_bindings(tcx.def_map, pat) |binding_mode, id, span, path| {\n+        match binding_mode {\n+          ast::bind_by_ref(_) | ast::bind_by_value => {}\n+          ast::bind_by_implicit_ref => {\n+            let pat_ty = ty::node_id_to_type(tcx, id);\n+            let kind = ty::type_kind(tcx, pat_ty);\n+            if !ty::kind_is_safe_for_default_mode(kind) {\n+                tcx.sess.span_lint(\n+                    deprecated_pattern, id, id,\n+                    span,\n+                    fmt!{\"binding `%s` should use ref or copy mode\",\n+                         *path_to_ident(path)});\n+            }\n+          }\n+        }\n+    }\n+}\n+\n fn check_fn(tcx: ty::ctxt, fk: visit::fn_kind, decl: ast::fn_decl,\n             _body: ast::blk, span: span, id: ast::node_id) {\n     debug!{\"lint check_fn fk=%? id=%?\", fk, id};\n@@ -527,11 +556,12 @@ fn check_fn(tcx: ty::ctxt, fk: visit::fn_kind, decl: ast::fn_decl,\n fn check_crate(tcx: ty::ctxt, crate: @ast::crate) {\n \n     let v = visit::mk_simple_visitor(@{\n-        visit_item:\n-            |it| check_item(it, tcx),\n-        visit_fn:\n-            |fk, decl, body, span, id| check_fn(tcx, fk, decl, body,\n-                                                span, id),\n+        visit_item: |it|\n+            check_item(it, tcx),\n+        visit_fn: |fk, decl, body, span, id|\n+            check_fn(tcx, fk, decl, body, span, id),\n+        visit_pat: |pat|\n+            check_pat(tcx, pat),\n         with *visit::default_simple_visitor()\n     });\n     visit::visit_crate(*crate, (), v);"}, {"sha": "ce921f6d39a79acb6922a923e37f035e6ed31eca", "filename": "src/rustc/rustc.rc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7d374bde4354eddd37bd548d8d8c33a2bc07d2c0/src%2Frustc%2Frustc.rc", "raw_url": "https://github.com/rust-lang/rust/raw/7d374bde4354eddd37bd548d8d8c33a2bc07d2c0/src%2Frustc%2Frustc.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Frustc.rc?ref=7d374bde4354eddd37bd548d8d8c33a2bc07d2c0", "patch": "@@ -12,6 +12,7 @@\n #[no_core];\n \n #[allow(vecs_implicitly_copyable)];\n+// #[warn(deprecated_pattern)];\n \n use core(vers = \"0.3\");\n use std(vers = \"0.3\");"}]}