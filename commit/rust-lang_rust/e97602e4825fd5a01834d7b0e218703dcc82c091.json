{"sha": "e97602e4825fd5a01834d7b0e218703dcc82c091", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5NzYwMmU0ODI1ZmQ1YTAxODM0ZDdiMGUyMTg3MDNkY2M4MmMwOTE=", "commit": {"author": {"name": "henil", "email": "dedaniahenil@gmail.com", "date": "2020-10-26T13:58:22Z"}, "committer": {"name": "henil", "email": "dedaniahenil@gmail.com", "date": "2020-10-29T13:38:52Z"}, "message": "Update existing arithmetic lint and add new tests related to it.", "tree": {"sha": "20d50d0082c89018c9cc3cdfe30cf98ebd409253", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20d50d0082c89018c9cc3cdfe30cf98ebd409253"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e97602e4825fd5a01834d7b0e218703dcc82c091", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e97602e4825fd5a01834d7b0e218703dcc82c091", "html_url": "https://github.com/rust-lang/rust/commit/e97602e4825fd5a01834d7b0e218703dcc82c091", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e97602e4825fd5a01834d7b0e218703dcc82c091/comments", "author": {"login": "henil", "id": 71698300, "node_id": "MDQ6VXNlcjcxNjk4MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/71698300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/henil", "html_url": "https://github.com/henil", "followers_url": "https://api.github.com/users/henil/followers", "following_url": "https://api.github.com/users/henil/following{/other_user}", "gists_url": "https://api.github.com/users/henil/gists{/gist_id}", "starred_url": "https://api.github.com/users/henil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/henil/subscriptions", "organizations_url": "https://api.github.com/users/henil/orgs", "repos_url": "https://api.github.com/users/henil/repos", "events_url": "https://api.github.com/users/henil/events{/privacy}", "received_events_url": "https://api.github.com/users/henil/received_events", "type": "User", "site_admin": false}, "committer": {"login": "henil", "id": 71698300, "node_id": "MDQ6VXNlcjcxNjk4MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/71698300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/henil", "html_url": "https://github.com/henil", "followers_url": "https://api.github.com/users/henil/followers", "following_url": "https://api.github.com/users/henil/following{/other_user}", "gists_url": "https://api.github.com/users/henil/gists{/gist_id}", "starred_url": "https://api.github.com/users/henil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/henil/subscriptions", "organizations_url": "https://api.github.com/users/henil/orgs", "repos_url": "https://api.github.com/users/henil/repos", "events_url": "https://api.github.com/users/henil/events{/privacy}", "received_events_url": "https://api.github.com/users/henil/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d5cd6eb8dc2618a289d838ca7e3f0b6d0053ba0", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d5cd6eb8dc2618a289d838ca7e3f0b6d0053ba0", "html_url": "https://github.com/rust-lang/rust/commit/6d5cd6eb8dc2618a289d838ca7e3f0b6d0053ba0"}], "stats": {"total": 140, "additions": 112, "deletions": 28}, "files": [{"sha": "b1cdbab6de96e98c19c72b1a6bcfdd48bab5acc9", "filename": "clippy_lints/src/arithmetic.rs", "status": "modified", "additions": 27, "deletions": 3, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/e97602e4825fd5a01834d7b0e218703dcc82c091/clippy_lints%2Fsrc%2Farithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e97602e4825fd5a01834d7b0e218703dcc82c091/clippy_lints%2Fsrc%2Farithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Farithmetic.rs?ref=e97602e4825fd5a01834d7b0e218703dcc82c091", "patch": "@@ -88,9 +88,33 @@ impl<'tcx> LateLintPass<'tcx> for Arithmetic {\n \n                 let (l_ty, r_ty) = (cx.typeck_results().expr_ty(l), cx.typeck_results().expr_ty(r));\n                 if l_ty.peel_refs().is_integral() && r_ty.peel_refs().is_integral() {\n-                    span_lint(cx, INTEGER_ARITHMETIC, expr.span, \"integer arithmetic detected\");\n-                    self.expr_span = Some(expr.span);\n-                } else if l_ty.peel_refs().is_floating_point() && r_ty.peel_refs().is_floating_point() {\n+                    match op.node {\n+                        hir::BinOpKind::Div | hir::BinOpKind::Rem => match &r.kind {\n+                            hir::ExprKind::Lit(lit) => {\n+                                if let rustc_ast::ast::LitKind::Int(0, _) = lit.node {\n+                                    span_lint(cx, INTEGER_ARITHMETIC, expr.span, \"integer arithmetic detected\");\n+                                    self.expr_span = Some(expr.span);\n+                                }\n+                            },\n+                            hir::ExprKind::Unary(hir::UnOp::UnNeg, expr) => {\n+                                if let hir::ExprKind::Lit(lit) = &expr.kind {\n+                                    if let rustc_ast::ast::LitKind::Int(1, _) = lit.node {\n+                                        span_lint(cx, INTEGER_ARITHMETIC, expr.span, \"integer arithmetic detected\");\n+                                        self.expr_span = Some(expr.span);\n+                                    }\n+                                }\n+                            },\n+                            _ => {\n+                                span_lint(cx, INTEGER_ARITHMETIC, expr.span, \"integer arithmetic detected\");\n+                                self.expr_span = Some(expr.span);\n+                            },\n+                        },\n+                        _ => {\n+                            span_lint(cx, INTEGER_ARITHMETIC, expr.span, \"integer arithmetic detected\");\n+                            self.expr_span = Some(expr.span);\n+                        },\n+                    }\n+                } else if r_ty.peel_refs().is_floating_point() && r_ty.peel_refs().is_floating_point() {\n                     span_lint(cx, FLOAT_ARITHMETIC, expr.span, \"floating-point arithmetic detected\");\n                     self.expr_span = Some(expr.span);\n                 }"}, {"sha": "b74c93dc4a666d445b8b324de3c32b4f9c641515", "filename": "tests/ui/integer_arithmetic.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e97602e4825fd5a01834d7b0e218703dcc82c091/tests%2Fui%2Finteger_arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e97602e4825fd5a01834d7b0e218703dcc82c091/tests%2Fui%2Finteger_arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finteger_arithmetic.rs?ref=e97602e4825fd5a01834d7b0e218703dcc82c091", "patch": "@@ -11,6 +11,8 @@\n #[rustfmt::skip]\n fn main() {\n     let mut i = 1i32;\n+    let mut var1 = 0i32;\n+    let mut var2 = -1i32;\n     1 + i;\n     i * 2;\n     1 %\n@@ -32,7 +34,15 @@ fn main() {\n     i -= 1;\n     i *= 2;\n     i /= 2;\n+    i /= 0;\n+    i /= -1;\n+    i /= var1;\n+    i /= var2;\n     i %= 2;\n+    i %= 0;\n+    i %= -1;\n+    i %= var1;\n+    i %= var2;\n     i <<= 3;\n     i >>= 2;\n "}, {"sha": "20356afc3581e23ac14041eb96448bd146cd6684", "filename": "tests/ui/integer_arithmetic.stderr", "status": "modified", "additions": 75, "deletions": 25, "changes": 100, "blob_url": "https://github.com/rust-lang/rust/blob/e97602e4825fd5a01834d7b0e218703dcc82c091/tests%2Fui%2Finteger_arithmetic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e97602e4825fd5a01834d7b0e218703dcc82c091/tests%2Fui%2Finteger_arithmetic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finteger_arithmetic.stderr?ref=e97602e4825fd5a01834d7b0e218703dcc82c091", "patch": "@@ -1,131 +1,181 @@\n+error: this operation will panic at runtime\n+  --> $DIR/integer_arithmetic.rs:37:5\n+   |\n+LL |     i /= 0;\n+   |     ^^^^^^ attempt to divide `_` by zero\n+   |\n+   = note: `#[deny(unconditional_panic)]` on by default\n+\n+error: this operation will panic at runtime\n+  --> $DIR/integer_arithmetic.rs:42:5\n+   |\n+LL |     i %= 0;\n+   |     ^^^^^^ attempt to calculate the remainder of `_` with a divisor of zero\n+\n error: integer arithmetic detected\n-  --> $DIR/integer_arithmetic.rs:14:5\n+  --> $DIR/integer_arithmetic.rs:16:5\n    |\n LL |     1 + i;\n    |     ^^^^^\n    |\n    = note: `-D clippy::integer-arithmetic` implied by `-D warnings`\n \n error: integer arithmetic detected\n-  --> $DIR/integer_arithmetic.rs:15:5\n+  --> $DIR/integer_arithmetic.rs:17:5\n    |\n LL |     i * 2;\n    |     ^^^^^\n \n error: integer arithmetic detected\n-  --> $DIR/integer_arithmetic.rs:16:5\n+  --> $DIR/integer_arithmetic.rs:18:5\n    |\n LL | /     1 %\n LL | |     i / 2; // no error, this is part of the expression in the preceding line\n-   | |_________^\n+   | |_____^\n \n error: integer arithmetic detected\n-  --> $DIR/integer_arithmetic.rs:18:5\n+  --> $DIR/integer_arithmetic.rs:20:5\n    |\n LL |     i - 2 + 2 - i;\n    |     ^^^^^^^^^^^^^\n \n error: integer arithmetic detected\n-  --> $DIR/integer_arithmetic.rs:19:5\n+  --> $DIR/integer_arithmetic.rs:21:5\n    |\n LL |     -i;\n    |     ^^\n \n error: integer arithmetic detected\n-  --> $DIR/integer_arithmetic.rs:20:5\n+  --> $DIR/integer_arithmetic.rs:22:5\n    |\n LL |     i >> 1;\n    |     ^^^^^^\n \n error: integer arithmetic detected\n-  --> $DIR/integer_arithmetic.rs:21:5\n+  --> $DIR/integer_arithmetic.rs:23:5\n    |\n LL |     i << 1;\n    |     ^^^^^^\n \n error: integer arithmetic detected\n-  --> $DIR/integer_arithmetic.rs:31:5\n+  --> $DIR/integer_arithmetic.rs:33:5\n    |\n LL |     i += 1;\n    |     ^^^^^^\n \n error: integer arithmetic detected\n-  --> $DIR/integer_arithmetic.rs:32:5\n+  --> $DIR/integer_arithmetic.rs:34:5\n    |\n LL |     i -= 1;\n    |     ^^^^^^\n \n error: integer arithmetic detected\n-  --> $DIR/integer_arithmetic.rs:33:5\n+  --> $DIR/integer_arithmetic.rs:35:5\n    |\n LL |     i *= 2;\n    |     ^^^^^^\n \n error: integer arithmetic detected\n-  --> $DIR/integer_arithmetic.rs:34:5\n+  --> $DIR/integer_arithmetic.rs:37:5\n    |\n-LL |     i /= 2;\n+LL |     i /= 0;\n    |     ^^^^^^\n \n error: integer arithmetic detected\n-  --> $DIR/integer_arithmetic.rs:35:5\n+  --> $DIR/integer_arithmetic.rs:38:11\n+   |\n+LL |     i /= -1;\n+   |           ^\n+\n+error: integer arithmetic detected\n+  --> $DIR/integer_arithmetic.rs:39:5\n+   |\n+LL |     i /= var1;\n+   |     ^^^^^^^^^\n+\n+error: integer arithmetic detected\n+  --> $DIR/integer_arithmetic.rs:40:5\n+   |\n+LL |     i /= var2;\n+   |     ^^^^^^^^^\n+\n+error: integer arithmetic detected\n+  --> $DIR/integer_arithmetic.rs:42:5\n    |\n-LL |     i %= 2;\n+LL |     i %= 0;\n    |     ^^^^^^\n \n error: integer arithmetic detected\n-  --> $DIR/integer_arithmetic.rs:36:5\n+  --> $DIR/integer_arithmetic.rs:43:11\n+   |\n+LL |     i %= -1;\n+   |           ^\n+\n+error: integer arithmetic detected\n+  --> $DIR/integer_arithmetic.rs:44:5\n+   |\n+LL |     i %= var1;\n+   |     ^^^^^^^^^\n+\n+error: integer arithmetic detected\n+  --> $DIR/integer_arithmetic.rs:45:5\n+   |\n+LL |     i %= var2;\n+   |     ^^^^^^^^^\n+\n+error: integer arithmetic detected\n+  --> $DIR/integer_arithmetic.rs:46:5\n    |\n LL |     i <<= 3;\n    |     ^^^^^^^\n \n error: integer arithmetic detected\n-  --> $DIR/integer_arithmetic.rs:37:5\n+  --> $DIR/integer_arithmetic.rs:47:5\n    |\n LL |     i >>= 2;\n    |     ^^^^^^^\n \n error: integer arithmetic detected\n-  --> $DIR/integer_arithmetic.rs:79:5\n+  --> $DIR/integer_arithmetic.rs:89:5\n    |\n LL |     3 + &1;\n    |     ^^^^^^\n \n error: integer arithmetic detected\n-  --> $DIR/integer_arithmetic.rs:80:5\n+  --> $DIR/integer_arithmetic.rs:90:5\n    |\n LL |     &3 + 1;\n    |     ^^^^^^\n \n error: integer arithmetic detected\n-  --> $DIR/integer_arithmetic.rs:81:5\n+  --> $DIR/integer_arithmetic.rs:91:5\n    |\n LL |     &3 + &1;\n    |     ^^^^^^^\n \n error: integer arithmetic detected\n-  --> $DIR/integer_arithmetic.rs:86:5\n+  --> $DIR/integer_arithmetic.rs:96:5\n    |\n LL |     a + x\n    |     ^^^^^\n \n error: integer arithmetic detected\n-  --> $DIR/integer_arithmetic.rs:90:5\n+  --> $DIR/integer_arithmetic.rs:100:5\n    |\n LL |     x + y\n    |     ^^^^^\n \n error: integer arithmetic detected\n-  --> $DIR/integer_arithmetic.rs:94:5\n+  --> $DIR/integer_arithmetic.rs:104:5\n    |\n LL |     x + y\n    |     ^^^^^\n \n error: integer arithmetic detected\n-  --> $DIR/integer_arithmetic.rs:98:5\n+  --> $DIR/integer_arithmetic.rs:108:5\n    |\n LL |     (&x + &y)\n    |     ^^^^^^^^^\n \n-error: aborting due to 21 previous errors\n+error: aborting due to 29 previous errors\n "}]}