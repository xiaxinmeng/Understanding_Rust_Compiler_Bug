{"sha": "87536f00e32cd01392cebc7c39dc14e49766586b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3NTM2ZjAwZTMyY2QwMTM5MmNlYmM3YzM5ZGMxNGU0OTc2NjU4NmI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-10-24T05:20:45Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-10-24T05:20:45Z"}, "message": "Auto merge of #4675 - lzutao:improve-shellscript, r=phansch\n\nbuild: improve script and travis config\n\n* fix a diff failure on windows\n\nSee https://travis-ci.com/rust-lang/rust-clippy/jobs/245971932#L1625\nfor an example.\n\n* use cmp instead of diff > /dev/null\n\n* clone single branch instead of clone then checking out\n\n* do not decrypt key if have no diff change\n\nchangelog: none", "tree": {"sha": "e07c77b5b39c53217a8f93c6359f7be58952dbdf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e07c77b5b39c53217a8f93c6359f7be58952dbdf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87536f00e32cd01392cebc7c39dc14e49766586b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87536f00e32cd01392cebc7c39dc14e49766586b", "html_url": "https://github.com/rust-lang/rust/commit/87536f00e32cd01392cebc7c39dc14e49766586b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87536f00e32cd01392cebc7c39dc14e49766586b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "850dfdae60cd8b28a40b099f8e390534205b9ede", "url": "https://api.github.com/repos/rust-lang/rust/commits/850dfdae60cd8b28a40b099f8e390534205b9ede", "html_url": "https://github.com/rust-lang/rust/commit/850dfdae60cd8b28a40b099f8e390534205b9ede"}, {"sha": "088d528be9b6999623cb3280e8f84ec09b5ccfb6", "url": "https://api.github.com/repos/rust-lang/rust/commits/088d528be9b6999623cb3280e8f84ec09b5ccfb6", "html_url": "https://github.com/rust-lang/rust/commit/088d528be9b6999623cb3280e8f84ec09b5ccfb6"}], "stats": {"total": 220, "additions": 107, "deletions": 113}, "files": [{"sha": "b8209159284669ce911cad9e89f07d66cc6d5109", "filename": ".github/deploy.sh", "status": "modified", "additions": 25, "deletions": 30, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/87536f00e32cd01392cebc7c39dc14e49766586b/.github%2Fdeploy.sh", "raw_url": "https://github.com/rust-lang/rust/raw/87536f00e32cd01392cebc7c39dc14e49766586b/.github%2Fdeploy.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fdeploy.sh?ref=87536f00e32cd01392cebc7c39dc14e49766586b", "patch": "@@ -13,11 +13,7 @@ SSH_REPO=${REPO/https:\\/\\/github.com\\//git@github.com:}\n SHA=$(git rev-parse --verify HEAD)\n \n # Clone the existing gh-pages for this repo into out/\n-(\n-    git clone \"$REPO\" out\n-    cd out\n-    git checkout $TARGET_BRANCH\n-)\n+git clone --quiet --single-branch --branch \"$TARGET_BRANCH\" \"$REPO\" out\n \n echo \"Removing the current docs for master\"\n rm -rf out/master/ || exit 0\n@@ -27,35 +23,44 @@ mkdir out/master/\n cp util/gh-pages/index.html out/master\n python ./util/export.py out/master/lints.json\n \n-if [ -n \"$TRAVIS_TAG\" ]; then\n+if [[ -n \"$TRAVIS_TAG\" ]]; then\n     echo \"Save the doc for the current tag ($TRAVIS_TAG) and point current/ to it\"\n     cp -r out/master \"out/$TRAVIS_TAG\"\n     rm -f out/current\n     ln -s \"$TRAVIS_TAG\" out/current\n fi\n \n # Generate version index that is shown as root index page\n-(\n-    cp util/gh-pages/versions.html out/index.html\n-\n-    cd out\n-    python -c '\\\n-        import os, json;\\\n-        print json.dumps([\\\n-            dir for dir in os.listdir(\".\")\\\n-            if not dir.startswith(\".\") and os.path.isdir(dir)\\\n-        ])' > versions.json\n-)\n+cp util/gh-pages/versions.html out/index.html\n+pushd out\n+\n+cat <<-EOF | python - > versions.json\n+import os, json\n+print json.dumps([\n+    dir for dir in os.listdir(\".\") if not dir.startswith(\".\") and os.path.isdir(dir)\n+])\n+EOF\n+popd\n \n # Pull requests and commits to other branches shouldn't try to deploy, just build to verify\n-if [ \"$TRAVIS_PULL_REQUEST\" != \"false\" ] || [ \"$TRAVIS_BRANCH\" != \"$SOURCE_BRANCH\" ]; then\n+if [[ \"$TRAVIS_PULL_REQUEST\" != \"false\" ]] || [[ \"$TRAVIS_BRANCH\" != \"$SOURCE_BRANCH\" ]]; then\n     # Tags should deploy\n-    if [ -z \"$TRAVIS_TAG\" ]; then\n+    if [[ -z \"$TRAVIS_TAG\" ]]; then\n         echo \"Generated, won't push\"\n         exit 0\n     fi\n fi\n \n+# Now let's go have some fun with the cloned repo\n+cd out\n+git config user.name \"Travis CI\"\n+git config user.email \"travis@ci.invalid\"\n+\n+if git diff --exit-code --quiet; then\n+    echo \"No changes to the output on this push; exiting.\"\n+    exit 0\n+fi\n+\n # Get the deploy key by using Travis's stored variables to decrypt deploy_key.enc\n ENCRYPTION_LABEL=e3a2d77100be\n ENCRYPTED_KEY_VAR=\"encrypted_${ENCRYPTION_LABEL}_key\"\n@@ -64,19 +69,9 @@ ENCRYPTED_KEY=${!ENCRYPTED_KEY_VAR}\n ENCRYPTED_IV=${!ENCRYPTED_IV_VAR}\n openssl aes-256-cbc -K \"$ENCRYPTED_KEY\" -iv \"$ENCRYPTED_IV\" -in .github/deploy_key.enc -out .github/deploy_key -d\n chmod 600 .github/deploy_key\n-eval $(ssh-agent -s)\n+eval \"$(ssh-agent -s)\"\n ssh-add .github/deploy_key\n \n-# Now let's go have some fun with the cloned repo\n-cd out\n-git config user.name \"Travis CI\"\n-git config user.email \"travis@ci.invalid\"\n-\n-if [ -z \"$(git diff --exit-code)\" ]; then\n-    echo \"No changes to the output on this push; exiting.\"\n-    exit 0\n-fi\n-\n git add .\n git commit -m \"Automatic deploy to GitHub Pages: ${SHA}\"\n "}, {"sha": "64036ec3aa3a183c9f2b08c384b44121bbd29337", "filename": ".travis.yml", "status": "modified", "additions": 24, "deletions": 32, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/87536f00e32cd01392cebc7c39dc14e49766586b/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/87536f00e32cd01392cebc7c39dc14e49766586b/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=87536f00e32cd01392cebc7c39dc14e49766586b", "patch": "@@ -1,11 +1,6 @@\n dist: xenial\n language: bash\n \n-os:\n-  - linux\n-  - osx\n-  - windows\n-\n branches:\n   # Don't build these branches\n   except:\n@@ -34,13 +29,12 @@ install:\n       if ! rustup component add rustfmt; then\n         cargo install -Z install-upgrade --git https://github.com/rust-lang/rustfmt --bin rustfmt\n       fi\n-      if [ \"$TRAVIS_OS_NAME\" == \"linux\" ]; then\n+      if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then\n         . $HOME/.nvm/nvm.sh\n         nvm install stable\n         nvm use stable\n         npm install remark-cli remark-lint\n-      fi\n-      if [ \"$TRAVIS_OS_NAME\" == \"windows\" ]; then\n+      elif [[ \"$TRAVIS_OS_NAME\" == \"windows\" ]]; then\n         choco install windows-sdk-10.1\n       fi\n     fi\n@@ -53,11 +47,9 @@ matrix:\n   include:\n     # Builds that are executed for every PR\n     - os: osx # run base tests on both platforms\n-      env: BASE_TESTS=true\n     - os: linux\n-      env: BASE_TESTS=true\n     - os: windows\n-      env: CARGO_INCREMENTAL=0 BASE_TESTS=true OS_WINDOWS=true\n+      env: CARGO_INCREMENTAL=0 OS_WINDOWS=true\n \n     # Builds that are only executed when a PR is r+ed or a try build is started\n     # We don't want to run these always because they go towards\n@@ -95,51 +87,51 @@ matrix:\n       if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n   allow_failures:\n     - os: windows\n-      env: CARGO_INCREMENTAL=0 BASE_TESTS=true OS_WINDOWS=true\n-  # prevent these jobs with default env vars\n-  exclude:\n-    - os: linux\n-    - os: osx\n-    - os: windows\n+      env: CARGO_INCREMENTAL=0 OS_WINDOWS=true\n \n before_script:\n   - |\n-    if [ \"$TRAVIS_BRANCH\" == \"auto\" ] || [ \"$TRAVIS_BRANCH\" == \"try\" ]; then\n-      pr=$(echo $TRAVIS_COMMIT_MESSAGE | grep -o \"#[0-9]*\" | head -1 | sed 's/^#//g')\n-      output=$(curl -H \"Authorization: token $GITHUB_API_TOKEN\" -s \"https://api.github.com/repos/rust-lang/rust-clippy/pulls/$pr\" | \\\n+    if [[ \"$TRAVIS_BRANCH\" == \"auto\" ]] || [[ \"$TRAVIS_BRANCH\" == \"try\" ]]; then\n+      PR=$(echo \"$TRAVIS_COMMIT_MESSAGE\" | grep -o \"#[0-9]*\" | head -1 | sed 's/^#//g')\n+      output=$(curl -H \"Authorization: token $GITHUB_API_TOKEN\" -s \"https://api.github.com/repos/rust-lang/rust-clippy/pulls/$PR\" | \\\n         python -c \"import sys, json; print(json.load(sys.stdin)['body'])\" | \\\n         grep \"^changelog: \" | \\\n         sed \"s/changelog: //g\")\n-      if [ -z \"$output\" ]; then\n+      if [[ -z \"$output\" ]]; then\n         echo \"ERROR: PR body must contain 'changelog: ...'\"\n         exit 1\n-      elif [ \"$output\" = \"none\" ]; then\n+      elif [[ \"$output\" = \"none\" ]]; then\n         echo \"WARNING: changelog is 'none'\"\n       fi\n     fi\n   - |\n     rm rust-toolchain\n     ./setup-toolchain.sh\n   - |\n-    if [ \"$TRAVIS_OS_NAME\" == \"windows\" ]; then\n-      export PATH=$PATH:$(rustc --print sysroot)/bin\n-    else\n-      export LD_LIBRARY_PATH=$(rustc --print sysroot)/lib\n-    fi\n+    SYSROOT=$(rustc --print sysroot)\n+    case \"$TRAVIS_OS_NAME\" in\n+      windows ) export PATH=\"${SYSROOT}/bin:${PATH}\" ;;\n+      linux ) export LD_LIBRARY_PATH=\"${SYSROOT}/lib\" ;;\n+      osx )\n+        # See <https://github.com/nteract/nteract/issues/1523#issuecomment-301623519>\n+        sudo mkdir -p /usr/local/lib\n+        sudo find \"$SYSROOT/lib\" -maxdepth 1 -name '*.dylib' -exec ln -s {} /usr/local/lib \\;\n+        ;;\n+    esac\n \n script:\n   - |\n-    if [ -z ${INTEGRATION} ]; then\n-      travis_wait 30 ./ci/base-tests.sh && sleep 5\n-    else\n+    if [[ -n ${INTEGRATION} ]]; then\n       ./ci/integration-tests.sh && sleep 5\n+    else\n+      ./ci/base-tests.sh && sleep 5\n     fi\n \n after_success:\n   - |\n-    if [ \"$TRAVIS_OS_NAME\" == \"linux\" ]; then\n+    if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then\n       set -e\n-      if [ -z ${INTEGRATION} ]; then\n+      if [[ -z ${INTEGRATION} ]]; then\n         ./.github/deploy.sh\n       else\n         echo \"Not deploying, because we're in an integration test run\""}, {"sha": "4a64b19d80ab714fd337514fc566bc2fc6e015b6", "filename": "ci/base-tests.sh", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/87536f00e32cd01392cebc7c39dc14e49766586b/ci%2Fbase-tests.sh", "raw_url": "https://github.com/rust-lang/rust/raw/87536f00e32cd01392cebc7c39dc14e49766586b/ci%2Fbase-tests.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ci%2Fbase-tests.sh?ref=87536f00e32cd01392cebc7c39dc14e49766586b", "patch": "@@ -1,16 +1,20 @@\n+#!/usr/bin/env bash\n set -ex\n \n+# for faster build, share target dir between subcrates\n+CARGO_TARGET_DIR=$(pwd)/target/\n+export CARGO_TARGET_DIR\n+\n echo \"Running clippy base tests\"\n \n PATH=$PATH:./node_modules/.bin\n-if [ \"$TRAVIS_OS_NAME\" == \"linux\" ]; then\n-  remark -f *.md -f doc/*.md > /dev/null\n+if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then\n+  remark -f ./*.md -f doc/*.md > /dev/null\n fi\n # build clippy in debug mode and run tests\n cargo build --features \"debugging deny-warnings\"\n cargo test --features \"debugging deny-warnings\"\n-# for faster build, share target dir between subcrates\n-export CARGO_TARGET_DIR=`pwd`/target/\n+\n (cd clippy_lints && cargo test)\n (cd rustc_tools_util && cargo test)\n (cd clippy_dev && cargo test)\n@@ -29,26 +33,27 @@ export CARGO_TARGET_DIR=`pwd`/target/\n (\n   # Check sysroot handling\n   sysroot=$(./target/debug/clippy-driver --print sysroot)\n-  test $sysroot = $(rustc --print sysroot)\n+  test \"$sysroot\" = \"$(rustc --print sysroot)\"\n \n-  if [ -z $OS_WINDOWS ]; then\n+  if [[ -z \"$OS_WINDOWS\" ]]; then\n     desired_sysroot=/tmp\n   else\n     desired_sysroot=C:/tmp\n   fi\n   sysroot=$(./target/debug/clippy-driver --sysroot $desired_sysroot --print sysroot)\n-  test $sysroot = $desired_sysroot\n+  test \"$sysroot\" = $desired_sysroot\n \n   sysroot=$(SYSROOT=$desired_sysroot ./target/debug/clippy-driver --print sysroot)\n-  test $sysroot = $desired_sysroot\n+  test \"$sysroot\" = $desired_sysroot\n \n   # Make sure this isn't set - clippy-driver should cope without it\n   unset CARGO_MANIFEST_DIR\n \n   # Run a lint and make sure it produces the expected output. It's also expected to exit with code 1\n-  # XXX How to match the clippy invocation in compile-test.rs?\n-  ! ./target/debug/clippy-driver -Dwarnings -Aunused -Zui-testing --emit metadata --crate-type bin tests/ui/cstring.rs 2> cstring.stderr\n-  diff <(sed -e 's,tests/ui,$DIR,' -e '/= help/d' cstring.stderr) tests/ui/cstring.stderr\n+  # FIXME: How to match the clippy invocation in compile-test.rs?\n+  ./target/debug/clippy-driver -Dwarnings -Aunused -Zui-testing --emit metadata --crate-type bin tests/ui/cstring.rs 2> cstring.stderr && exit 1\n+  sed -e 's,tests/ui,$DIR,' -e '/= help/d' cstring.stderr > normalized.stderr\n+  diff normalized.stderr tests/ui/cstring.stderr\n \n   # TODO: CLIPPY_CONF_DIR / CARGO_MANIFEST_DIR\n )"}, {"sha": "1095ec65dac912571574a28c21177eb502095164", "filename": "ci/integration-tests.sh", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/87536f00e32cd01392cebc7c39dc14e49766586b/ci%2Fintegration-tests.sh", "raw_url": "https://github.com/rust-lang/rust/raw/87536f00e32cd01392cebc7c39dc14e49766586b/ci%2Fintegration-tests.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ci%2Fintegration-tests.sh?ref=87536f00e32cd01392cebc7c39dc14e49766586b", "patch": "@@ -1,10 +1,13 @@\n #!/usr/bin/env bash\n-set -x\n+set -ex\n \n if [[ -z \"$INTEGRATION\" ]]; then\n     exit 0\n fi\n \n+CARGO_TARGET_DIR=$(pwd)/target/\n+export CARGO_TARGET_DIR\n+\n rm ~/.cargo/bin/cargo-clippy\n cargo install --force --debug --path .\n "}, {"sha": "7028b251ea0307bb669524afb702a8d62a038924", "filename": "tests/ui-toml/update-all-references.sh", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/87536f00e32cd01392cebc7c39dc14e49766586b/tests%2Fui-toml%2Fupdate-all-references.sh", "raw_url": "https://github.com/rust-lang/rust/raw/87536f00e32cd01392cebc7c39dc14e49766586b/tests%2Fui-toml%2Fupdate-all-references.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fupdate-all-references.sh?ref=87536f00e32cd01392cebc7c39dc14e49766586b", "patch": "@@ -13,6 +13,6 @@ if [[ \"$1\" == \"--help\" || \"$1\" == \"-h\" ]]; then\n fi\n \n BUILD_DIR=$PWD/target/debug/test_build_base\n-MY_DIR=$(dirname $0)\n-cd $MY_DIR\n-find . -name '*.rs' | xargs ./update-references.sh $BUILD_DIR\n+MY_DIR=$(dirname \"$0\")\n+cd \"$MY_DIR\" || exit\n+find . -name '*.rs' -exec ./update-references.sh \"$BUILD_DIR\" {} +"}, {"sha": "50d42678734e9caca32b8d6c806ed576f4b04a8e", "filename": "tests/ui-toml/update-references.sh", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/87536f00e32cd01392cebc7c39dc14e49766586b/tests%2Fui-toml%2Fupdate-references.sh", "raw_url": "https://github.com/rust-lang/rust/raw/87536f00e32cd01392cebc7c39dc14e49766586b/tests%2Fui-toml%2Fupdate-references.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fupdate-references.sh?ref=87536f00e32cd01392cebc7c39dc14e49766586b", "patch": "@@ -16,7 +16,7 @@ if [[ \"$1\" == \"--help\" || \"$1\" == \"-h\" || \"$1\" == \"\" || \"$2\" == \"\" ]]; then\n     echo \"   $0 ../../../build/x86_64-apple-darwin/test/ui *.rs */*.rs\"\n fi\n \n-MYDIR=$(dirname $0)\n+MYDIR=$(dirname \"$0\")\n \n BUILD_DIR=\"$1\"\n shift\n@@ -25,16 +25,14 @@ while [[ \"$1\" != \"\" ]]; do\n     STDERR_NAME=\"${1/%.rs/.stderr}\"\n     STDOUT_NAME=\"${1/%.rs/.stdout}\"\n     shift\n-    if [ -f $BUILD_DIR/$STDOUT_NAME ] && \\\n-           ! (diff $BUILD_DIR/$STDOUT_NAME $MYDIR/$STDOUT_NAME >& /dev/null); then\n-        echo updating $MYDIR/$STDOUT_NAME\n-        cp $BUILD_DIR/$STDOUT_NAME $MYDIR/$STDOUT_NAME\n+    if [[ -f \"$BUILD_DIR\"/\"$STDOUT_NAME\" ]] && \\\n+           ! (cmp -s -- \"$BUILD_DIR\"/\"$STDOUT_NAME\" \"$MYDIR\"/\"$STDOUT_NAME\"); then\n+        echo updating \"$MYDIR\"/\"$STDOUT_NAME\"\n+        cp \"$BUILD_DIR\"/\"$STDOUT_NAME\" \"$MYDIR\"/\"$STDOUT_NAME\"\n     fi\n-    if [ -f $BUILD_DIR/$STDERR_NAME ] && \\\n-           ! (diff $BUILD_DIR/$STDERR_NAME $MYDIR/$STDERR_NAME >& /dev/null); then\n-        echo updating $MYDIR/$STDERR_NAME\n-        cp $BUILD_DIR/$STDERR_NAME $MYDIR/$STDERR_NAME\n+    if [[ -f \"$BUILD_DIR\"/\"$STDERR_NAME\" ]] && \\\n+           ! (cmp -s -- \"$BUILD_DIR\"/\"$STDERR_NAME\" \"$MYDIR\"/\"$STDERR_NAME\"); then\n+        echo updating \"$MYDIR\"/\"$STDERR_NAME\"\n+        cp \"$BUILD_DIR\"/\"$STDERR_NAME\" \"$MYDIR\"/\"$STDERR_NAME\"\n     fi\n done\n-\n-"}, {"sha": "9f970ea26b71560542a2a098bf5d6b448cae07a9", "filename": "tests/ui/update-all-references.sh", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/87536f00e32cd01392cebc7c39dc14e49766586b/tests%2Fui%2Fupdate-all-references.sh", "raw_url": "https://github.com/rust-lang/rust/raw/87536f00e32cd01392cebc7c39dc14e49766586b/tests%2Fui%2Fupdate-all-references.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fupdate-all-references.sh?ref=87536f00e32cd01392cebc7c39dc14e49766586b", "patch": "@@ -13,6 +13,6 @@ if [[ \"$1\" == \"--help\" || \"$1\" == \"-h\" ]]; then\n fi\n \n BUILD_DIR=$PWD/target/debug/test_build_base\n-MY_DIR=$(dirname $0)\n-cd $MY_DIR\n-find . -name '*.rs' | xargs ./update-references.sh $BUILD_DIR\n+MY_DIR=$(dirname \"$0\")\n+cd \"$MY_DIR\" || exit\n+find . -name '*.rs' -exec ./update-references.sh \"$BUILD_DIR\" {} +"}, {"sha": "2c13c327d79802247ea86914133f9c36df1682b4", "filename": "tests/ui/update-references.sh", "status": "modified", "additions": 13, "deletions": 15, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/87536f00e32cd01392cebc7c39dc14e49766586b/tests%2Fui%2Fupdate-references.sh", "raw_url": "https://github.com/rust-lang/rust/raw/87536f00e32cd01392cebc7c39dc14e49766586b/tests%2Fui%2Fupdate-references.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fupdate-references.sh?ref=87536f00e32cd01392cebc7c39dc14e49766586b", "patch": "@@ -16,7 +16,7 @@ if [[ \"$1\" == \"--help\" || \"$1\" == \"-h\" || \"$1\" == \"\" || \"$2\" == \"\" ]]; then\n     echo \"   $0 ../../../build/x86_64-apple-darwin/test/ui *.rs */*.rs\"\n fi\n \n-MYDIR=$(dirname $0)\n+MYDIR=$(dirname \"$0\")\n \n BUILD_DIR=\"$1\"\n shift\n@@ -26,21 +26,19 @@ while [[ \"$1\" != \"\" ]]; do\n     STDOUT_NAME=\"${1/%.rs/.stdout}\"\n     FIXED_NAME=\"${1/%.rs/.fixed}\"\n     shift\n-    if [ -f $BUILD_DIR/$STDOUT_NAME ] && \\\n-           ! (diff $BUILD_DIR/$STDOUT_NAME $MYDIR/$STDOUT_NAME >& /dev/null); then\n-        echo updating $MYDIR/$STDOUT_NAME\n-        cp $BUILD_DIR/$STDOUT_NAME $MYDIR/$STDOUT_NAME\n+    if [[ -f \"$BUILD_DIR\"/\"$STDOUT_NAME\" ]] && \\\n+           ! (cmp -s -- \"$BUILD_DIR\"/\"$STDOUT_NAME\" \"$MYDIR\"/\"$STDOUT_NAME\"); then\n+        echo updating \"$MYDIR\"/\"$STDOUT_NAME\"\n+        cp \"$BUILD_DIR\"/\"$STDOUT_NAME\" \"$MYDIR\"/\"$STDOUT_NAME\"\n     fi\n-    if [ -f $BUILD_DIR/$STDERR_NAME ] && \\\n-           ! (diff $BUILD_DIR/$STDERR_NAME $MYDIR/$STDERR_NAME >& /dev/null); then\n-        echo updating $MYDIR/$STDERR_NAME\n-        cp $BUILD_DIR/$STDERR_NAME $MYDIR/$STDERR_NAME\n+    if [[ -f \"$BUILD_DIR\"/\"$STDERR_NAME\" ]] && \\\n+           ! (cmp -s -- \"$BUILD_DIR\"/\"$STDERR_NAME\" \"$MYDIR\"/\"$STDERR_NAME\"); then\n+        echo updating \"$MYDIR\"/\"$STDERR_NAME\"\n+        cp \"$BUILD_DIR\"/\"$STDERR_NAME\" \"$MYDIR\"/\"$STDERR_NAME\"\n     fi\n-    if [ -f $BUILD_DIR/$FIXED_NAME ] && \\\n-           ! (diff $BUILD_DIR/$FIXED_NAME $MYDIR/$FIXED_NAME >& /dev/null); then\n-        echo updating $MYDIR/$FIXED_NAME\n-        cp $BUILD_DIR/$FIXED_NAME $MYDIR/$FIXED_NAME\n+    if [[ -f \"$BUILD_DIR\"/\"$FIXED_NAME\" ]] && \\\n+           ! (cmp -s -- \"$BUILD_DIR\"/\"$FIXED_NAME\" \"$MYDIR\"/\"$FIXED_NAME\"); then\n+        echo updating \"$MYDIR\"/\"$FIXED_NAME\"\n+        cp \"$BUILD_DIR\"/\"$FIXED_NAME\" \"$MYDIR\"/\"$FIXED_NAME\"\n     fi\n done\n-\n-"}, {"sha": "8e3ed97f98d51eca1265dfda6ed9f5a41bc178c8", "filename": "util/dev", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/87536f00e32cd01392cebc7c39dc14e49766586b/util%2Fdev", "raw_url": "https://github.com/rust-lang/rust/raw/87536f00e32cd01392cebc7c39dc14e49766586b/util%2Fdev", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/util%2Fdev?ref=87536f00e32cd01392cebc7c39dc14e49766586b", "patch": "@@ -1,3 +1,5 @@\n #!/bin/sh\n+CARGO_TARGET_DIR=$(pwd)/target/\n+export CARGO_TARGET_DIR\n \n-cd clippy_dev && cargo run -- $@\n+cd clippy_dev && cargo run -- \"$@\""}, {"sha": "881aba196e72340e5149ee68a3f102642e8a8035", "filename": "util/fetch_prs_between.sh", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/87536f00e32cd01392cebc7c39dc14e49766586b/util%2Ffetch_prs_between.sh", "raw_url": "https://github.com/rust-lang/rust/raw/87536f00e32cd01392cebc7c39dc14e49766586b/util%2Ffetch_prs_between.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/util%2Ffetch_prs_between.sh?ref=87536f00e32cd01392cebc7c39dc14e49766586b", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/sh\n+#!/bin/bash\n \n # Fetches the merge commits between two git commits and prints the PR URL\n # together with the full commit message\n@@ -12,14 +12,15 @@ last=$2\n IFS='\n '\n for pr in $(git log --oneline --grep \"Merge #\" --grep \"Merge pull request\" --grep \"Auto merge of\" --grep \"Rollup merge of\" \"$first...$last\" | sort -rn | uniq); do\n-  id=$(echo $pr | rg -o '#[0-9]{3,5}' | cut -c 2-)\n-  commit=$(echo $pr | cut -d' ' -f 1)\n-  message=$(git --no-pager show --pretty=medium $commit)\n-  if [ ! -z $(echo \"$message\" | rg \"^[\\s]{4}changelog: [nN]one\\.*$\") ]; then\n+  id=$(echo \"$pr\" | rg -o '#[0-9]{3,5}' | cut -c 2-)\n+  commit=$(echo \"$pr\" | cut -d' ' -f 1)\n+  message=$(git --no-pager show --pretty=medium \"$commit\")\n+  if [[ -n $(echo \"$message\" | rg \"^[\\s]{4}changelog: [nN]one\\.*$\") ]]; then\n     continue\n   fi\n \n   echo \"URL: https://github.com/rust-lang/rust-clippy/pull/$id\"\n   echo \"$message\"\n-  echo \"---------------------------------------------------------\\n\"\n+  echo \"---------------------------------------------------------\"\n+  echo\n done"}]}