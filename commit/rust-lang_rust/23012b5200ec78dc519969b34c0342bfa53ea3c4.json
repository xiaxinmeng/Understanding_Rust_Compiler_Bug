{"sha": "23012b5200ec78dc519969b34c0342bfa53ea3c4", "node_id": "C_kwDOAAsO6NoAKDIzMDEyYjUyMDBlYzc4ZGM1MTk5NjliMzRjMDM0MmJmYTUzZWEzYzQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-04T23:38:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-04T23:38:00Z"}, "message": "Rollup merge of #91355 - alexcrichton:stabilize-thread-local-const, r=m-ou-se\n\nstd: Stabilize the `thread_local_const_init` feature\n\nThis commit is intended to follow the stabilization disposition of the\nFCP that has now finished in #84223. This stabilizes the ability to flag\nthread local initializers as `const` expressions which enables the macro\nto generate more efficient code for accessing it, notably removing\nruntime checks for initialization.\n\nMore information can also be found in #84223 as well as the tests where\nthe feature usage was removed in this PR.\n\nCloses #84223", "tree": {"sha": "54770a648e163aff341732a456229523c0ea32e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54770a648e163aff341732a456229523c0ea32e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23012b5200ec78dc519969b34c0342bfa53ea3c4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhq/vYCRBK7hj4Ov3rIwAA5hkIAAn2LhVsPtLyAWwjzFAqHxyH\nNHF2uw/MOpGiya4dzFm2hkS8OuJD48pNNLBUc8AugbOG4xWPD3t1GgA3KdrOEh+X\nmoNDK009nrhAPXUiW8jIAJOl90/GSenxvqQfBw4CUV5HWfqU1q3PVeBkjTyMF28+\ngEoxCEehvlRByfdtKuY+8PJa205y0Tax+O2k6480VCxoimPOba77nD5x5JqMUnDv\nTl1TOr8rPRMefFOki+M+y/nXJdQZWRqXz3OYExvEa0PRU/jusnl3kLRobdhlhZ93\ni5eL5SpwU28A6WlNscm6SOgAU6N2d94jUahnnPmLGSSKqfHxvI6fsimmvOIiqLA=\n=1ef0\n-----END PGP SIGNATURE-----\n", "payload": "tree 54770a648e163aff341732a456229523c0ea32e9\nparent 4af985ac004fc0578cc6102f8e47844c227d0967\nparent a0c959750abec28bb875be492c5f0532920a8907\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1638661080 +0100\ncommitter GitHub <noreply@github.com> 1638661080 +0100\n\nRollup merge of #91355 - alexcrichton:stabilize-thread-local-const, r=m-ou-se\n\nstd: Stabilize the `thread_local_const_init` feature\n\nThis commit is intended to follow the stabilization disposition of the\nFCP that has now finished in #84223. This stabilizes the ability to flag\nthread local initializers as `const` expressions which enables the macro\nto generate more efficient code for accessing it, notably removing\nruntime checks for initialization.\n\nMore information can also be found in #84223 as well as the tests where\nthe feature usage was removed in this PR.\n\nCloses #84223\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23012b5200ec78dc519969b34c0342bfa53ea3c4", "html_url": "https://github.com/rust-lang/rust/commit/23012b5200ec78dc519969b34c0342bfa53ea3c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23012b5200ec78dc519969b34c0342bfa53ea3c4/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4af985ac004fc0578cc6102f8e47844c227d0967", "url": "https://api.github.com/repos/rust-lang/rust/commits/4af985ac004fc0578cc6102f8e47844c227d0967", "html_url": "https://github.com/rust-lang/rust/commit/4af985ac004fc0578cc6102f8e47844c227d0967"}, {"sha": "a0c959750abec28bb875be492c5f0532920a8907", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0c959750abec28bb875be492c5f0532920a8907", "html_url": "https://github.com/rust-lang/rust/commit/a0c959750abec28bb875be492c5f0532920a8907"}], "stats": {"total": 35, "additions": 1, "deletions": 34}, "files": [{"sha": "66d1ae1420a143d11f46ff2aaaae422cb38e4862", "filename": "compiler/rustc_middle/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/23012b5200ec78dc519969b34c0342bfa53ea3c4/compiler%2Frustc_middle%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23012b5200ec78dc519969b34c0342bfa53ea3c4/compiler%2Frustc_middle%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Flib.rs?ref=23012b5200ec78dc519969b34c0342bfa53ea3c4", "patch": "@@ -51,7 +51,6 @@\n #![feature(control_flow_enum)]\n #![feature(associated_type_defaults)]\n #![feature(iter_zip)]\n-#![feature(thread_local_const_init)]\n #![feature(trusted_step)]\n #![feature(try_blocks)]\n #![feature(try_reserve_kind)]"}, {"sha": "0da141f6836f68a3281c963124009697b81c4eeb", "filename": "compiler/rustc_query_system/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/23012b5200ec78dc519969b34c0342bfa53ea3c4/compiler%2Frustc_query_system%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23012b5200ec78dc519969b34c0342bfa53ea3c4/compiler%2Frustc_query_system%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Flib.rs?ref=23012b5200ec78dc519969b34c0342bfa53ea3c4", "patch": "@@ -5,7 +5,6 @@\n #![feature(iter_zip)]\n #![feature(let_else)]\n #![feature(min_specialization)]\n-#![feature(thread_local_const_init)]\n #![feature(extern_types)]\n \n #[macro_use]"}, {"sha": "ea3d3363b80655edbfb5eb15f7e0b885356600a0", "filename": "compiler/rustc_span/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/23012b5200ec78dc519969b34c0342bfa53ea3c4/compiler%2Frustc_span%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23012b5200ec78dc519969b34c0342bfa53ea3c4/compiler%2Frustc_span%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Flib.rs?ref=23012b5200ec78dc519969b34c0342bfa53ea3c4", "patch": "@@ -20,7 +20,6 @@\n #![feature(negative_impls)]\n #![feature(nll)]\n #![feature(min_specialization)]\n-#![feature(thread_local_const_init)]\n \n #[macro_use]\n extern crate rustc_macros;"}, {"sha": "67846e78835706581d67db9adb889278312be023", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/23012b5200ec78dc519969b34c0342bfa53ea3c4/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23012b5200ec78dc519969b34c0342bfa53ea3c4/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=23012b5200ec78dc519969b34c0342bfa53ea3c4", "patch": "@@ -216,10 +216,7 @@\n // std may use features in a platform-specific way\n #![allow(unused_features)]\n #![feature(rustc_allow_const_fn_unstable)]\n-#![cfg_attr(\n-    test,\n-    feature(internal_output_capture, print_internals, update_panic_count, thread_local_const_init)\n-)]\n+#![cfg_attr(test, feature(internal_output_capture, print_internals, update_panic_count))]\n #![cfg_attr(\n     all(target_vendor = \"fortanix\", target_env = \"sgx\"),\n     feature(slice_index_methods, coerce_unsized, sgx_platform)"}, {"sha": "c03fe116320aa4378a38a4acd7d76fb12714847a", "filename": "library/std/src/thread/local.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/23012b5200ec78dc519969b34c0342bfa53ea3c4/library%2Fstd%2Fsrc%2Fthread%2Flocal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23012b5200ec78dc519969b34c0342bfa53ea3c4/library%2Fstd%2Fsrc%2Fthread%2Flocal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fthread%2Flocal.rs?ref=23012b5200ec78dc519969b34c0342bfa53ea3c4", "patch": "@@ -178,7 +178,6 @@ macro_rules! __thread_local_inner {\n     (@key $t:ty, const $init:expr) => {{\n         #[cfg_attr(not(windows), inline)] // see comments below\n         unsafe fn __getit() -> $crate::option::Option<&'static $t> {\n-            const _REQUIRE_UNSTABLE: () = $crate::thread::require_unstable_const_init_thread_local();\n             const INIT_EXPR: $t = $init;\n \n             // wasm without atomics maps directly to `static mut`, and dtors"}, {"sha": "64f6c7fa022fc7268392897dacbf9bb7ae47dd9b", "filename": "library/std/src/thread/mod.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/23012b5200ec78dc519969b34c0342bfa53ea3c4/library%2Fstd%2Fsrc%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23012b5200ec78dc519969b34c0342bfa53ea3c4/library%2Fstd%2Fsrc%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fthread%2Fmod.rs?ref=23012b5200ec78dc519969b34c0342bfa53ea3c4", "patch": "@@ -204,13 +204,6 @@ pub use self::local::os::Key as __OsLocalKeyInner;\n #[doc(hidden)]\n pub use self::local::statik::Key as __StaticLocalKeyInner;\n \n-// This is only used to make thread locals with `const { .. }` initialization\n-// expressions unstable. If and/or when that syntax is stabilized with thread\n-// locals this will simply be removed.\n-#[doc(hidden)]\n-#[unstable(feature = \"thread_local_const_init\", issue = \"84223\")]\n-pub const fn require_unstable_const_init_thread_local() {}\n-\n ////////////////////////////////////////////////////////////////////////////////\n // Builder\n ////////////////////////////////////////////////////////////////////////////////"}, {"sha": "bebaa7754dd5a55dd061beac22bbdb5a63b8661e", "filename": "src/test/codegen/auxiliary/thread_local_aux.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/23012b5200ec78dc519969b34c0342bfa53ea3c4/src%2Ftest%2Fcodegen%2Fauxiliary%2Fthread_local_aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23012b5200ec78dc519969b34c0342bfa53ea3c4/src%2Ftest%2Fcodegen%2Fauxiliary%2Fthread_local_aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fauxiliary%2Fthread_local_aux.rs?ref=23012b5200ec78dc519969b34c0342bfa53ea3c4", "patch": "@@ -1,5 +1,4 @@\n #![crate_type = \"lib\"]\n-#![feature(thread_local_const_init)]\n \n use std::cell::Cell;\n "}, {"sha": "5ac30d949fa4e4c5aff0611d88ca4fca41a6e892", "filename": "src/test/codegen/thread-local.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/23012b5200ec78dc519969b34c0342bfa53ea3c4/src%2Ftest%2Fcodegen%2Fthread-local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23012b5200ec78dc519969b34c0342bfa53ea3c4/src%2Ftest%2Fcodegen%2Fthread-local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fthread-local.rs?ref=23012b5200ec78dc519969b34c0342bfa53ea3c4", "patch": "@@ -6,7 +6,6 @@\n // ignore-android does not use #[thread_local]\n \n #![crate_type = \"lib\"]\n-#![feature(thread_local_const_init)]\n \n extern crate thread_local_aux as aux;\n "}, {"sha": "6584ffa7cf949f91833cdf9e69b55a851bd8ba74", "filename": "src/test/ui/feature-gates/thread-local-const-init.rs", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4af985ac004fc0578cc6102f8e47844c227d0967/src%2Ftest%2Fui%2Ffeature-gates%2Fthread-local-const-init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4af985ac004fc0578cc6102f8e47844c227d0967/src%2Ftest%2Fui%2Ffeature-gates%2Fthread-local-const-init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fthread-local-const-init.rs?ref=4af985ac004fc0578cc6102f8e47844c227d0967", "patch": "@@ -1,4 +0,0 @@\n-thread_local!(static X: u32 = const { 0 });\n-//~^ ERROR: use of unstable library feature 'thread_local_const_init'\n-\n-fn main() {}"}, {"sha": "f80506831b4e8172a3c3d4a69f99e8a17ba2b12f", "filename": "src/test/ui/feature-gates/thread-local-const-init.stderr", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4af985ac004fc0578cc6102f8e47844c227d0967/src%2Ftest%2Fui%2Ffeature-gates%2Fthread-local-const-init.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4af985ac004fc0578cc6102f8e47844c227d0967/src%2Ftest%2Fui%2Ffeature-gates%2Fthread-local-const-init.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fthread-local-const-init.stderr?ref=4af985ac004fc0578cc6102f8e47844c227d0967", "patch": "@@ -1,13 +0,0 @@\n-error[E0658]: use of unstable library feature 'thread_local_const_init'\n-  --> $DIR/thread-local-const-init.rs:1:1\n-   |\n-LL | thread_local!(static X: u32 = const { 0 });\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: see issue #84223 <https://github.com/rust-lang/rust/issues/84223> for more information\n-   = help: add `#![feature(thread_local_const_init)]` to the crate attributes to enable\n-   = note: this error originates in the macro `$crate::__thread_local_inner` (in Nightly builds, run with -Z macro-backtrace for more info)\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0658`."}]}