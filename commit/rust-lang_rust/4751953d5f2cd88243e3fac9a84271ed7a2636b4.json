{"sha": "4751953d5f2cd88243e3fac9a84271ed7a2636b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3NTE5NTNkNWYyY2Q4ODI0M2UzZmFjOWE4NDI3MWVkN2EyNjM2YjQ=", "commit": {"author": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2018-10-22T00:58:34Z"}, "committer": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2018-11-03T04:09:34Z"}, "message": "Added tests.", "tree": {"sha": "0a1ccc463583f7d85f6423667282d2eeb57cd6ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a1ccc463583f7d85f6423667282d2eeb57cd6ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4751953d5f2cd88243e3fac9a84271ed7a2636b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4751953d5f2cd88243e3fac9a84271ed7a2636b4", "html_url": "https://github.com/rust-lang/rust/commit/4751953d5f2cd88243e3fac9a84271ed7a2636b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4751953d5f2cd88243e3fac9a84271ed7a2636b4/comments", "author": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90041d638b1363d3ed89dde8245563bac4c4062c", "url": "https://api.github.com/repos/rust-lang/rust/commits/90041d638b1363d3ed89dde8245563bac4c4062c", "html_url": "https://github.com/rust-lang/rust/commit/90041d638b1363d3ed89dde8245563bac4c4062c"}], "stats": {"total": 190, "additions": 82, "deletions": 108}, "files": [{"sha": "0d59c8e0bd1324f20261a7d34e7d85c97d2c3b7b", "filename": "src/test/run-pass/traits/trait-alias-bounds.rs", "status": "renamed", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/4751953d5f2cd88243e3fac9a84271ed7a2636b4/src%2Ftest%2Frun-pass%2Ftraits%2Ftrait-alias-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4751953d5f2cd88243e3fac9a84271ed7a2636b4/src%2Ftest%2Frun-pass%2Ftraits%2Ftrait-alias-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftraits%2Ftrait-alias-bounds.rs?ref=4751953d5f2cd88243e3fac9a84271ed7a2636b4", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2017-2018 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -10,21 +10,23 @@\n \n #![feature(trait_alias)]\n \n-trait SimpleAlias = Default; //~ERROR E0645\n-trait GenericAlias<T> = Iterator<Item=T>; //~ERROR E0645\n-trait Partial<T> = IntoIterator<Item=T>; //~ERROR E0645\n+trait SimpleAlias = Default;\n+trait GenericAlias<T> = Iterator<Item=T>;\n+trait Partial<T> = IntoIterator<Item=T>;\n \n trait Things<T> {}\n trait Romeo {}\n+#[allow(dead_code)]\n struct The<T>(T);\n+#[allow(dead_code)]\n struct Fore<T>(T);\n impl<T, U> Things<T> for The<U> {}\n impl<T> Romeo for Fore<T> {}\n \n-trait WithWhere<Art, Thou> = Romeo + Romeo where Fore<(Art, Thou)>: Romeo; //~ERROR E0645\n-trait BareWhere<Wild, Are> = where The<Wild>: Things<Are>; //~ERROR E0645\n+trait WithWhere<Art, Thou> = Romeo + Romeo where Fore<(Art, Thou)>: Romeo;\n+trait BareWhere<Wild, Are> = where The<Wild>: Things<Are>;\n \n-trait CD = Clone + Default; //~ERROR E0645\n+trait CD = Clone + Default;\n \n fn foo<T: CD>() -> (T, T) {\n     let one = T::default();\n@@ -33,11 +35,10 @@ fn foo<T: CD>() -> (T, T) {\n }\n \n fn main() {\n-    let both = foo();\n+    let both = foo::<i32>();\n     assert_eq!(both.0, 0);\n     assert_eq!(both.1, 0);\n     let both: (i32, i32) = foo();\n     assert_eq!(both.0, 0);\n     assert_eq!(both.1, 0);\n }\n-", "previous_filename": "src/test/ui/traits/trait-alias.rs"}, {"sha": "3f0be573b289223e520e665bcefb8f54c0ce7752", "filename": "src/test/run-pass/traits/trait-alias-object-type.rs", "status": "renamed", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/4751953d5f2cd88243e3fac9a84271ed7a2636b4/src%2Ftest%2Frun-pass%2Ftraits%2Ftrait-alias-object-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4751953d5f2cd88243e3fac9a84271ed7a2636b4/src%2Ftest%2Frun-pass%2Ftraits%2Ftrait-alias-object-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftraits%2Ftrait-alias-object-type.rs?ref=4751953d5f2cd88243e3fac9a84271ed7a2636b4", "patch": "@@ -10,19 +10,12 @@\n \n #![feature(trait_alias)]\n \n-type Foo = std::fmt::Debug;\n-type Bar = Foo;\n-\n-fn foo<T: Foo>(v: &T) {\n-    println!(\"{:?}\", v);\n-}\n+trait Foo = PartialEq<i32> + Send;\n+trait Bar = Foo + Sync;\n \n pub fn main() {\n-    foo(&12345);\n-\n-    let bar1: &Bar = &54321;\n-    println!(\"{:?}\", bar1);\n-\n-    let bar2 = Box::new(42) as Box<dyn Foo>;\n-    println!(\"{:?}\", bar2);\n+    let a: &Bar = &123;\n+    assert!(*a == 123);\n+    let b = Box::new(456) as Box<dyn Foo>;\n+    assert!(*b == 456);\n }", "previous_filename": "src/test/run-pass/traits/trait-alias.rs"}, {"sha": "f60f1dfcf3772e0979c224d3a9e5e40fc2416472", "filename": "src/test/ui/codemap_tests/two_files.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4751953d5f2cd88243e3fac9a84271ed7a2636b4/src%2Ftest%2Fui%2Fcodemap_tests%2Ftwo_files.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4751953d5f2cd88243e3fac9a84271ed7a2636b4/src%2Ftest%2Fui%2Fcodemap_tests%2Ftwo_files.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Ftwo_files.stderr?ref=4751953d5f2cd88243e3fac9a84271ed7a2636b4", "patch": "@@ -2,7 +2,9 @@ error[E0404]: expected trait, found type alias `Bar`\n   --> $DIR/two_files.rs:15:6\n    |\n LL | impl Bar for Baz { } //~ ERROR expected trait, found type alias\n-   |      ^^^ type aliases cannot be used for traits\n+   |      ^^^ type aliases cannot be used as traits\n+   |\n+   = note: did you mean to use a trait alias?\n \n error: aborting due to previous error\n "}, {"sha": "a2a183f80f92e91fd0e8fa35a98859059baf5494", "filename": "src/test/ui/feature-gates/feature-gate-trait-alias.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4751953d5f2cd88243e3fac9a84271ed7a2636b4/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-trait-alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4751953d5f2cd88243e3fac9a84271ed7a2636b4/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-trait-alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-trait-alias.rs?ref=4751953d5f2cd88243e3fac9a84271ed7a2636b4", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait Foo = Default;\n+\n+fn main() {}"}, {"sha": "e02dfe27805a4aef1ea32ff98b6e5c8936852cc5", "filename": "src/test/ui/feature-gates/feature-gate-trait-alias.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4751953d5f2cd88243e3fac9a84271ed7a2636b4/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-trait-alias.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4751953d5f2cd88243e3fac9a84271ed7a2636b4/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-trait-alias.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-trait-alias.stderr?ref=4751953d5f2cd88243e3fac9a84271ed7a2636b4", "patch": "@@ -0,0 +1,11 @@\n+error[E0658]: trait aliases are experimental (see issue #41517)\n+  --> $DIR/feature-gate-trait-alias.rs:11:1\n+   |\n+LL | trait Foo = Default;\n+   | ^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: add #![feature(trait_alias)] to the crate attributes to enable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "3e330f9de6547a668b193379b029b9e8b0c47f4e", "filename": "src/test/ui/resolve/issue-3907.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4751953d5f2cd88243e3fac9a84271ed7a2636b4/src%2Ftest%2Fui%2Fresolve%2Fissue-3907.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4751953d5f2cd88243e3fac9a84271ed7a2636b4/src%2Ftest%2Fui%2Fresolve%2Fissue-3907.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-3907.stderr?ref=4751953d5f2cd88243e3fac9a84271ed7a2636b4", "patch": "@@ -2,7 +2,9 @@ error[E0404]: expected trait, found type alias `Foo`\n   --> $DIR/issue-3907.rs:20:6\n    |\n LL | impl Foo for S { //~ ERROR expected trait, found type alias `Foo`\n-   |      ^^^ type aliases cannot be used for traits\n+   |      ^^^ type aliases cannot be used as traits\n+   |\n+   = note: did you mean to use a trait alias?\n help: possible better candidate is found in another module, you can import it into scope\n    |\n LL | use issue_3907::Foo;"}, {"sha": "0acc5c8a93ec689c1e2fc5ef56d9d06207ddb825", "filename": "src/test/ui/resolve/issue-5035.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4751953d5f2cd88243e3fac9a84271ed7a2636b4/src%2Ftest%2Fui%2Fresolve%2Fissue-5035.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4751953d5f2cd88243e3fac9a84271ed7a2636b4/src%2Ftest%2Fui%2Fresolve%2Fissue-5035.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-5035.stderr?ref=4751953d5f2cd88243e3fac9a84271ed7a2636b4", "patch": "@@ -11,7 +11,9 @@ LL | impl K for isize {} //~ ERROR expected trait, found type alias `K`\n    |      ^\n    |      |\n    |      did you mean `I`?\n-   |      type aliases cannot be used for traits\n+   |      type aliases cannot be used as traits\n+   |\n+   = note: did you mean to use a trait alias?\n \n error: aborting due to 2 previous errors\n "}, {"sha": "d293a77392e8997b80458653ce86b26259d5511f", "filename": "src/test/ui/resolve/unboxed-closure-sugar-nonexistent-trait.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4751953d5f2cd88243e3fac9a84271ed7a2636b4/src%2Ftest%2Fui%2Fresolve%2Funboxed-closure-sugar-nonexistent-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4751953d5f2cd88243e3fac9a84271ed7a2636b4/src%2Ftest%2Fui%2Fresolve%2Funboxed-closure-sugar-nonexistent-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Funboxed-closure-sugar-nonexistent-trait.stderr?ref=4751953d5f2cd88243e3fac9a84271ed7a2636b4", "patch": "@@ -8,7 +8,9 @@ error[E0404]: expected trait, found type alias `Typedef`\n   --> $DIR/unboxed-closure-sugar-nonexistent-trait.rs:16:8\n    |\n LL | fn g<F:Typedef(isize) -> isize>(x: F) {}\n-   |        ^^^^^^^^^^^^^^^^^^^^^^^ type aliases cannot be used for traits\n+   |        ^^^^^^^^^^^^^^^^^^^^^^^ type aliases cannot be used as traits\n+   |\n+   = note: did you mean to use a trait alias?\n \n error: aborting due to 2 previous errors\n "}, {"sha": "7aca227a76c484b3af95ef7659614b23b4576d84", "filename": "src/test/ui/trait-alias-fail.rs", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/90041d638b1363d3ed89dde8245563bac4c4062c/src%2Ftest%2Fui%2Ftrait-alias-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90041d638b1363d3ed89dde8245563bac4c4062c/src%2Ftest%2Fui%2Ftrait-alias-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrait-alias-fail.rs?ref=90041d638b1363d3ed89dde8245563bac4c4062c", "patch": "@@ -1,27 +0,0 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// gate-test-trait_alias\n-\n-trait Alias1<T> = Default where T: Clone; // ok\n-    //~^ERROR trait aliases are not yet fully implemented\n-trait Alias2<T: Clone = ()> = Default;\n-    //~^ERROR type parameters on the left side of a trait alias cannot be bounded\n-    //~^^ERROR type parameters on the left side of a trait alias cannot have defaults\n-    //~^^^ERROR trait aliases are not yet fully implemented\n-\n-impl Alias1 { //~ERROR expected type, found trait alias\n-}\n-\n-impl Alias1 for () { //~ERROR expected trait, found trait alias\n-}\n-\n-fn main() {}\n-"}, {"sha": "3a47593a8e1508bd87aec722f528d1759520748d", "filename": "src/test/ui/traits/trait-alias-fail.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/4751953d5f2cd88243e3fac9a84271ed7a2636b4/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4751953d5f2cd88243e3fac9a84271ed7a2636b4/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-fail.rs?ref=4751953d5f2cd88243e3fac9a84271ed7a2636b4", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2017-2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// gate-test-trait_alias\n+\n+trait Alias1<T> = Default where T: Clone;\n+trait Alias2<T: Clone = ()> = Default;\n+\n+impl Alias1 {}\n+\n+impl Alias1 for () {}\n+\n+fn main() {}"}, {"sha": "829a316ccb81e514dfb957197446903901d0de2d", "filename": "src/test/ui/traits/trait-alias-fail.stderr", "status": "renamed", "additions": 10, "deletions": 16, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/4751953d5f2cd88243e3fac9a84271ed7a2636b4/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4751953d5f2cd88243e3fac9a84271ed7a2636b4/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-fail.stderr?ref=4751953d5f2cd88243e3fac9a84271ed7a2636b4", "patch": "@@ -1,44 +1,38 @@\n error: type parameters on the left side of a trait alias cannot be bounded\n-  --> $DIR/trait-alias-fail.rs:15:14\n+  --> $DIR/trait-alias-fail.rs:14:14\n    |\n LL | trait Alias2<T: Clone = ()> = Default;\n    |              ^\n \n error: type parameters on the left side of a trait alias cannot have defaults\n-  --> $DIR/trait-alias-fail.rs:15:14\n+  --> $DIR/trait-alias-fail.rs:14:14\n    |\n LL | trait Alias2<T: Clone = ()> = Default;\n    |              ^\n \n-error[E0573]: expected type, found trait alias `Alias1`\n-  --> $DIR/trait-alias-fail.rs:20:6\n-   |\n-LL | impl Alias1 { //~ERROR expected type, found trait alias\n-   |      ^^^^^^ not a type\n-\n error[E0404]: expected trait, found trait alias `Alias1`\n-  --> $DIR/trait-alias-fail.rs:23:6\n+  --> $DIR/trait-alias-fail.rs:18:6\n    |\n-LL | impl Alias1 for () { //~ERROR expected trait, found trait alias\n+LL | impl Alias1 for () {}\n    |      ^^^^^^ not a trait\n \n-error[E0658]: trait aliases are not yet fully implemented (see issue #41517)\n+error[E0658]: trait aliases are experimental (see issue #41517)\n   --> $DIR/trait-alias-fail.rs:13:1\n    |\n-LL | trait Alias1<T> = Default where T: Clone; // ok\n+LL | trait Alias1<T> = Default where T: Clone;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: add #![feature(trait_alias)] to the crate attributes to enable\n \n-error[E0658]: trait aliases are not yet fully implemented (see issue #41517)\n-  --> $DIR/trait-alias-fail.rs:15:1\n+error[E0658]: trait aliases are experimental (see issue #41517)\n+  --> $DIR/trait-alias-fail.rs:14:1\n    |\n LL | trait Alias2<T: Clone = ()> = Default;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: add #![feature(trait_alias)] to the crate attributes to enable\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 5 previous errors\n \n-Some errors occurred: E0404, E0573, E0658.\n+Some errors occurred: E0404, E0658.\n For more information about an error, try `rustc --explain E0404`.", "previous_filename": "src/test/ui/trait-alias-fail.stderr"}, {"sha": "5d290e5c7fba11189dc7e4612d3c8411ea047313", "filename": "src/test/ui/traits/trait-alias.stderr", "status": "removed", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/90041d638b1363d3ed89dde8245563bac4c4062c/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90041d638b1363d3ed89dde8245563bac4c4062c/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias.stderr?ref=90041d638b1363d3ed89dde8245563bac4c4062c", "patch": "@@ -1,39 +0,0 @@\n-error[E0645]: trait aliases are not yet implemented (see issue #41517)\n-  --> $DIR/trait-alias.rs:13:1\n-   |\n-LL | trait SimpleAlias = Default; //~ERROR E0645\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error[E0645]: trait aliases are not yet implemented (see issue #41517)\n-  --> $DIR/trait-alias.rs:14:1\n-   |\n-LL | trait GenericAlias<T> = Iterator<Item=T>; //~ERROR E0645\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error[E0645]: trait aliases are not yet implemented (see issue #41517)\n-  --> $DIR/trait-alias.rs:15:1\n-   |\n-LL | trait Partial<T> = IntoIterator<Item=T>; //~ERROR E0645\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error[E0645]: trait aliases are not yet implemented (see issue #41517)\n-  --> $DIR/trait-alias.rs:24:1\n-   |\n-LL | trait WithWhere<Art, Thou> = Romeo + Romeo where Fore<(Art, Thou)>: Romeo; //~ERROR E0645\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error[E0645]: trait aliases are not yet implemented (see issue #41517)\n-  --> $DIR/trait-alias.rs:25:1\n-   |\n-LL | trait BareWhere<Wild, Are> = where The<Wild>: Things<Are>; //~ERROR E0645\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error[E0645]: trait aliases are not yet implemented (see issue #41517)\n-  --> $DIR/trait-alias.rs:27:1\n-   |\n-LL | trait CD = Clone + Default; //~ERROR E0645\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: aborting due to 6 previous errors\n-\n-For more information about this error, try `rustc --explain E0645`."}]}