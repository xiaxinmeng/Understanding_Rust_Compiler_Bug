{"sha": "0924ac7290435a92ab2ea671991d56fcf532b459", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5MjRhYzcyOTA0MzVhOTJhYjJlYTY3MTk5MWQ1NmZjZjUzMmI0NTk=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-30T20:43:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-07-30T20:43:40Z"}, "message": "Rollup merge of #63147 - Mark-Simulacrum:XAMPPRocky-master, r=Mark-Simulacrum\n\nUpdated RELEASES.md for 1.37.0\n\nSquashed https://github.com/rust-lang/rust/pull/62653.", "tree": {"sha": "dfd5d70b264bda1dc773876c3e0b6da9a36ffd16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dfd5d70b264bda1dc773876c3e0b6da9a36ffd16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0924ac7290435a92ab2ea671991d56fcf532b459", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdQKv8CRBK7hj4Ov3rIwAAdHIIAGSM5OnYehQ8MKAqRKBG3x7B\nM146SWGViuGTSS9AtijW6YaeXeIpbxMel89TgBi+IFr5BDSXxxJZ8ktnk9KAPdxC\n87QySv4U2uh0BKkY8aXSP/ZfJuvPUiUwsYpMrQMQMBjr0i3RmlTvwXJhvI2GK8eC\nZ3B3aWpUkmYXHAFXCaSg8H6bP7pHIAuhLMnTvpdT3I9/E+WbLblaPeQBdiy8SL3e\nyZP1va+2LC1KkI96xViXUmEVTvoXihOlbPbnviBu4k1gh5PSBx6nqFKQIh+Bm6RZ\nS17uR4vXC/VtRcN5jKhyMsR6wPNQEjUUKw9Hm0mM/yJE9I5h/gcs5AjjSQPg1H4=\n=dv3E\n-----END PGP SIGNATURE-----\n", "payload": "tree dfd5d70b264bda1dc773876c3e0b6da9a36ffd16\nparent d87164500fa2535dbd10eb9c250be59c714ffe1d\nparent c599fcce7023d714cba3aff76e488a46a1b99f10\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1564519420 +0200\ncommitter GitHub <noreply@github.com> 1564519420 +0200\n\nRollup merge of #63147 - Mark-Simulacrum:XAMPPRocky-master, r=Mark-Simulacrum\n\nUpdated RELEASES.md for 1.37.0\n\nSquashed https://github.com/rust-lang/rust/pull/62653.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0924ac7290435a92ab2ea671991d56fcf532b459", "html_url": "https://github.com/rust-lang/rust/commit/0924ac7290435a92ab2ea671991d56fcf532b459", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0924ac7290435a92ab2ea671991d56fcf532b459/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d87164500fa2535dbd10eb9c250be59c714ffe1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d87164500fa2535dbd10eb9c250be59c714ffe1d", "html_url": "https://github.com/rust-lang/rust/commit/d87164500fa2535dbd10eb9c250be59c714ffe1d"}, {"sha": "c599fcce7023d714cba3aff76e488a46a1b99f10", "url": "https://api.github.com/repos/rust-lang/rust/commits/c599fcce7023d714cba3aff76e488a46a1b99f10", "html_url": "https://github.com/rust-lang/rust/commit/c599fcce7023d714cba3aff76e488a46a1b99f10"}], "stats": {"total": 120, "additions": 119, "deletions": 1}, "files": [{"sha": "51cd6578ec5312305a61d1bcfa1b5d51fdb333f3", "filename": "RELEASES.md", "status": "modified", "additions": 119, "deletions": 1, "changes": 120, "blob_url": "https://github.com/rust-lang/rust/blob/0924ac7290435a92ab2ea671991d56fcf532b459/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/0924ac7290435a92ab2ea671991d56fcf532b459/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=0924ac7290435a92ab2ea671991d56fcf532b459", "patch": "@@ -1,3 +1,121 @@\n+Version 1.37.0 (2019-08-15)\n+==========================\n+\n+Language\n+--------\n+- `#[must_use]` will now warn if the type is contained in a [tuple][61100],\n+  [`Box`][62228], or an [array][62235] and unused.\n+- [You can now use the `cfg` and `cfg_attr` attributes on\n+  generic parameters.][61547]\n+- [You can now use enum variants through type alias.][61682] e.g. You can\n+  write the following:\n+  ```rust\n+  type MyOption = Option<u8>;\n+\n+  fn increment_or_zero(x: MyOption) -> u8 {\n+      match x {\n+          MyOption::Some(y) => y + 1,\n+          MyOption::None => 0,\n+      }\n+  }\n+  ```\n+- [You can now use `_` as an identifier for consts.][61347] e.g. You can write\n+  `const _: u32 = 5;`.\n+- [You can now use `#[repr(align(X)]` on enums.][61229]\n+- [The  `?`/_\"Kleene\"_ macro operator is now available in the\n+  2015 edition.][60932]\n+\n+Compiler\n+--------\n+- [You can now enable Profile-Guided Optimization with the `-C profile-generate`\n+  and `-C profile-use` flags.][61268] For more information on how to use profile\n+  guided optimization, please refer to the [rustc book][rustc-book-pgo].\n+- [The `rust-lldb` wrapper script should now work again.][61827]\n+\n+Libraries\n+---------\n+- [`mem::MaybeUninit<T>` is now ABI-compatible with `T`.][61802]\n+\n+Stabilized APIs\n+---------------\n+- [`BufReader::buffer`]\n+- [`BufWriter::buffer`]\n+- [`Cell::from_mut`]\n+- [`Cell<[T]>::as_slice_of_cells`][`Cell<slice>::as_slice_of_cells`]\n+- [`DoubleEndedIterator::nth_back`]\n+- [`Option::xor`]\n+- [`Wrapping::reverse_bits`]\n+- [`i128::reverse_bits`]\n+- [`i16::reverse_bits`]\n+- [`i32::reverse_bits`]\n+- [`i64::reverse_bits`]\n+- [`i8::reverse_bits`]\n+- [`isize::reverse_bits`]\n+- [`slice::copy_within`]\n+- [`u128::reverse_bits`]\n+- [`u16::reverse_bits`]\n+- [`u32::reverse_bits`]\n+- [`u64::reverse_bits`]\n+- [`u8::reverse_bits`]\n+- [`usize::reverse_bits`]\n+\n+Cargo\n+-----\n+- [`Cargo.lock` files are now included by default when publishing executable crates\n+  with executables.][cargo/7026]\n+- [You can now specify `default-run=\"foo\"` in `[package]` to specify the\n+  default executable to use for `cargo run`.][cargo/7056]\n+\n+Misc\n+----\n+\n+Compatibility Notes\n+-------------------\n+- [Using `...` for inclusive range patterns will now warn by default.][61342]\n+  Please transition your code to using the `..=` syntax for inclusive\n+  ranges instead.\n+- [Using a trait object without the `dyn` will now warn by default.][61203]\n+  Please transition your code to use `dyn Trait` for trait objects instead.\n+\n+[62228]: https://github.com/rust-lang/rust/pull/62228/\n+[62235]: https://github.com/rust-lang/rust/pull/62235/\n+[61802]: https://github.com/rust-lang/rust/pull/61802/\n+[61827]: https://github.com/rust-lang/rust/pull/61827/\n+[61547]: https://github.com/rust-lang/rust/pull/61547/\n+[61682]: https://github.com/rust-lang/rust/pull/61682/\n+[61268]: https://github.com/rust-lang/rust/pull/61268/\n+[61342]: https://github.com/rust-lang/rust/pull/61342/\n+[61347]: https://github.com/rust-lang/rust/pull/61347/\n+[61100]: https://github.com/rust-lang/rust/pull/61100/\n+[61203]: https://github.com/rust-lang/rust/pull/61203/\n+[61229]: https://github.com/rust-lang/rust/pull/61229/\n+[60932]: https://github.com/rust-lang/rust/pull/60932/\n+[cargo/7026]: https://github.com/rust-lang/cargo/pull/7026/\n+[cargo/7056]: https://github.com/rust-lang/cargo/pull/7056/\n+[`BufReader::buffer`]: https://doc.rust-lang.org/std/io/struct.BufReader.html#method.buffer\n+[`BufWriter::buffer`]: https://doc.rust-lang.org/std/io/struct.BufWriter.html#method.buffer\n+[`Cell::from_mut`]: https://doc.rust-lang.org/std/cell/struct.Cell.html#method.from_mut\n+[`Cell<slice>::as_slice_of_cells`]: https://doc.rust-lang.org/std/cell/struct.Cell.html#method.as_slice_of_cells\n+[`DoubleEndedIterator::nth_back`]: https://doc.rust-lang.org/std/iter/trait.DoubleEndedIterator.html#method.nth_back\n+[`Option::xor`]: https://doc.rust-lang.org/std/option/enum.Option.html#method.xor\n+[`RefCell::try_borrow_unguarded`]: https://doc.rust-lang.org/std/cell/struct.RefCell.html#method.try_borrow_unguarded\n+[`Wrapping::reverse_bits`]: https://doc.rust-lang.org/std/num/struct.Wrapping.html#method.reverse_bits\n+[`i128::reverse_bits`]: https://doc.rust-lang.org/std/primitive.i128.html#method.reverse_bits\n+[`i16::reverse_bits`]: https://doc.rust-lang.org/std/primitive.i16.html#method.reverse_bits\n+[`i32::reverse_bits`]: https://doc.rust-lang.org/std/primitive.i32.html#method.reverse_bits\n+[`i64::reverse_bits`]: https://doc.rust-lang.org/std/primitive.i64.html#method.reverse_bits\n+[`i8::reverse_bits`]: https://doc.rust-lang.org/std/primitive.i8.html#method.reverse_bits\n+[`isize::reverse_bits`]: https://doc.rust-lang.org/std/primitive.isize.html#method.reverse_bits\n+[`slice::copy_within`]: https://doc.rust-lang.org/std/primitive.slice.html#method.copy_within\n+[`u128::reverse_bits`]: https://doc.rust-lang.org/std/primitive.u128.html#method.reverse_bits\n+[`u16::reverse_bits`]: https://doc.rust-lang.org/std/primitive.u16.html#method.reverse_bits\n+[`u32::reverse_bits`]: https://doc.rust-lang.org/std/primitive.u32.html#method.reverse_bits\n+[`u64::reverse_bits`]: https://doc.rust-lang.org/std/primitive.u64.html#method.reverse_bits\n+[`u8::reverse_bits`]: https://doc.rust-lang.org/std/primitive.u8.html#method.reverse_bits\n+[`usize::reverse_bits`]: https://doc.rust-lang.org/std/primitive.usize.html#method.reverse_bits\n+[rustc-book-pgo]: https://doc.rust-lang.org/rustc/profile-guided-optimization.html\n+\n+\n Version 1.36.0 (2019-07-04)\n ==========================\n \n@@ -39,7 +157,7 @@ Stabilized APIs\n - [`mem::MaybeUninit`]\n - [`pointer::align_offset`]\n - [`future::Future`]\n-- [`task::Context`] \n+- [`task::Context`]\n - [`task::RawWaker`]\n - [`task::RawWakerVTable`]\n - [`task::Waker`]"}]}