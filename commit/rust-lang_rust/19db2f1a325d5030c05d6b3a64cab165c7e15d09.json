{"sha": "19db2f1a325d5030c05d6b3a64cab165c7e15d09", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5ZGIyZjFhMzI1ZDUwMzBjMDVkNmIzYTY0Y2FiMTY1YzdlMTVkMDk=", "commit": {"author": {"name": "daxpedda", "email": "daxpedda@users.noreply.github.com", "date": "2018-12-05T10:26:40Z"}, "committer": {"name": "daxpedda", "email": "daxpedda@users.noreply.github.com", "date": "2018-12-05T10:26:40Z"}, "message": "Appeasing the Test Gods.\nSeems I'm not smart enough to run the tests locally before committing.", "tree": {"sha": "ef521e98564ff9a31fc51319a424ddf92a6fb7aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef521e98564ff9a31fc51319a424ddf92a6fb7aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19db2f1a325d5030c05d6b3a64cab165c7e15d09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19db2f1a325d5030c05d6b3a64cab165c7e15d09", "html_url": "https://github.com/rust-lang/rust/commit/19db2f1a325d5030c05d6b3a64cab165c7e15d09", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19db2f1a325d5030c05d6b3a64cab165c7e15d09/comments", "author": {"login": "daxpedda", "id": 1645124, "node_id": "MDQ6VXNlcjE2NDUxMjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1645124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daxpedda", "html_url": "https://github.com/daxpedda", "followers_url": "https://api.github.com/users/daxpedda/followers", "following_url": "https://api.github.com/users/daxpedda/following{/other_user}", "gists_url": "https://api.github.com/users/daxpedda/gists{/gist_id}", "starred_url": "https://api.github.com/users/daxpedda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daxpedda/subscriptions", "organizations_url": "https://api.github.com/users/daxpedda/orgs", "repos_url": "https://api.github.com/users/daxpedda/repos", "events_url": "https://api.github.com/users/daxpedda/events{/privacy}", "received_events_url": "https://api.github.com/users/daxpedda/received_events", "type": "User", "site_admin": false}, "committer": {"login": "daxpedda", "id": 1645124, "node_id": "MDQ6VXNlcjE2NDUxMjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1645124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daxpedda", "html_url": "https://github.com/daxpedda", "followers_url": "https://api.github.com/users/daxpedda/followers", "following_url": "https://api.github.com/users/daxpedda/following{/other_user}", "gists_url": "https://api.github.com/users/daxpedda/gists{/gist_id}", "starred_url": "https://api.github.com/users/daxpedda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daxpedda/subscriptions", "organizations_url": "https://api.github.com/users/daxpedda/orgs", "repos_url": "https://api.github.com/users/daxpedda/repos", "events_url": "https://api.github.com/users/daxpedda/events{/privacy}", "received_events_url": "https://api.github.com/users/daxpedda/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "978f8c65ee44b43243a83a047be6cdacb6df1320", "url": "https://api.github.com/repos/rust-lang/rust/commits/978f8c65ee44b43243a83a047be6cdacb6df1320", "html_url": "https://github.com/rust-lang/rust/commit/978f8c65ee44b43243a83a047be6cdacb6df1320"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "cb0535a03acb5593a1c84b489ae0fd6d88bf4428", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19db2f1a325d5030c05d6b3a64cab165c7e15d09/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19db2f1a325d5030c05d6b3a64cab165c7e15d09/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=19db2f1a325d5030c05d6b3a64cab165c7e15d09", "patch": "@@ -372,7 +372,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n     reg.register_late_lint_pass(box unicode::Unicode);\n     reg.register_late_lint_pass(box strings::StringAdd);\n     reg.register_early_lint_pass(box returns::ReturnPass);\n-    reg.register_late_lint_pass(box missing_returns::MissingReturnsPass);\n+    reg.register_late_lint_pass(box missing_returns::Pass);\n     reg.register_late_lint_pass(box methods::Pass);\n     reg.register_late_lint_pass(box map_clone::Pass);\n     reg.register_late_lint_pass(box shadow::Pass);"}, {"sha": "71dc71d563b3a64d5321755fb4f61c615a4b26a8", "filename": "clippy_lints/src/missing_returns.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/19db2f1a325d5030c05d6b3a64cab165c7e15d09/clippy_lints%2Fsrc%2Fmissing_returns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19db2f1a325d5030c05d6b3a64cab165c7e15d09/clippy_lints%2Fsrc%2Fmissing_returns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_returns.rs?ref=19db2f1a325d5030c05d6b3a64cab165c7e15d09", "patch": "@@ -39,9 +39,9 @@ declare_clippy_lint! {\n     \"use a return statement like `return expr` instead of an expression\"\n }\n \n-pub struct MissingReturnsPass;\n+pub struct Pass;\n \n-impl MissingReturnsPass {\n+impl Pass {\n     fn show_suggestion(cx: &LateContext<'_, '_>, span: syntax_pos::Span) {\n         span_lint_and_then(cx, MISSING_RETURNS, span, \"missing return statement\", |db| {\n             if let Some(snippet) = snippet_opt(cx, span) {\n@@ -80,13 +80,13 @@ impl MissingReturnsPass {\n     }\n }\n \n-impl LintPass for MissingReturnsPass {\n+impl LintPass for Pass {\n     fn get_lints(&self) -> LintArray {\n         lint_array!(MISSING_RETURNS)\n     }\n }\n \n-impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MissingReturnsPass {\n+impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n     fn check_fn(\n         &mut self,\n         cx: &LateContext<'a, 'tcx>,"}]}