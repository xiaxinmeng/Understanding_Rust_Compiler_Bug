{"sha": "cea73bfb1596f1e5e1f3a6faa9863d2983a3ccea", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlYTczYmZiMTU5NmYxZTVlMWYzYTZmYWE5ODYzZDI5ODNhM2NjZWE=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-05-05T07:27:44Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-05-14T03:28:01Z"}, "message": "move out function data", "tree": {"sha": "f205d4b3abc3bcd922c7e2b3d6be7c9f2a7364e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f205d4b3abc3bcd922c7e2b3d6be7c9f2a7364e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cea73bfb1596f1e5e1f3a6faa9863d2983a3ccea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cea73bfb1596f1e5e1f3a6faa9863d2983a3ccea", "html_url": "https://github.com/rust-lang/rust/commit/cea73bfb1596f1e5e1f3a6faa9863d2983a3ccea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cea73bfb1596f1e5e1f3a6faa9863d2983a3ccea/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b248ee8746c4c016dd3001e59086f2c2f868f07e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b248ee8746c4c016dd3001e59086f2c2f868f07e", "html_url": "https://github.com/rust-lang/rust/commit/b248ee8746c4c016dd3001e59086f2c2f868f07e"}], "stats": {"total": 64, "additions": 57, "deletions": 7}, "files": [{"sha": "d3493251e2f42c3d33deb8c68e120def99fc83c4", "filename": "src/librustc_trans/save/dump_csv.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/cea73bfb1596f1e5e1f3a6faa9863d2983a3ccea/src%2Flibrustc_trans%2Fsave%2Fdump_csv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cea73bfb1596f1e5e1f3a6faa9863d2983a3ccea/src%2Flibrustc_trans%2Fsave%2Fdump_csv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fsave%2Fdump_csv.rs?ref=cea73bfb1596f1e5e1f3a6faa9863d2983a3ccea", "patch": "@@ -55,7 +55,7 @@ use util::ppaux;\n \n \n pub struct DumpCsvVisitor<'l, 'tcx: 'l> {\n-    save_ctxt: SaveContext<'l>,\n+    save_ctxt: SaveContext<'l, 'tcx>,\n     sess: &'l Session,\n     analysis: &'l ty::CrateAnalysis<'tcx>,\n \n@@ -74,7 +74,10 @@ impl <'l, 'tcx> DumpCsvVisitor<'l, 'tcx> {\n                output_file: Box<File>) -> DumpCsvVisitor<'l, 'tcx> {\n         DumpCsvVisitor {\n             sess: sess,\n-            save_ctxt: SaveContext { sess: sess },\n+            save_ctxt: SaveContext::new(sess, analysis, SpanUtils {\n+                sess: sess,\n+                err_count: Cell::new(0)\n+            }),\n             analysis: analysis,\n             collected_paths: vec![],\n             collecting: false,"}, {"sha": "98672a546cb117eab34426c75026e3cf31616bdf", "filename": "src/librustc_trans/save/mod.rs", "status": "modified", "additions": 52, "deletions": 5, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/cea73bfb1596f1e5e1f3a6faa9863d2983a3ccea/src%2Flibrustc_trans%2Fsave%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cea73bfb1596f1e5e1f3a6faa9863d2983a3ccea/src%2Flibrustc_trans%2Fsave%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fsave%2Fmod.rs?ref=cea73bfb1596f1e5e1f3a6faa9863d2983a3ccea", "patch": "@@ -15,27 +15,50 @@ use std::env;\n use std::fs::{self, File};\n use std::path::{Path, PathBuf};\n \n-use syntax::{ast, attr, visit};\n+use syntax::{attr, visit};\n+use syntax::ast::{self, NodeId, DefId};\n+use syntax::parse::token::keywords;\n use syntax::codemap::*;\n \n+use self::span_utils::SpanUtils;\n+\n mod span_utils;\n mod recorder;\n \n mod dump_csv;\n \n-pub struct SaveContext<'l> {\n+pub struct SaveContext<'l, 'tcx: 'l> {\n     sess: &'l Session,\n+    analysis: &'l ty::CrateAnalysis<'tcx>,\n+    span_utils: SpanUtils<'l>,\n }\n \n pub struct CrateData {\n     pub name: String,\n     pub number: u32,\n }\n \n-impl<'l> SaveContext<'l> {\n-    pub fn new<'ll>(sess: &'ll Session) -> SaveContext<'ll> {\n+pub enum Data {\n+    FunctionData(FunctionData),\n+}\n+\n+pub struct FunctionData {\n+    pub id: NodeId,\n+    pub qualname: String,\n+    pub declaration: Option<DefId>,\n+    pub span: Span,\n+    pub scope: NodeId,\n+}\n+\n+impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n+    pub fn new(sess: &'l Session,\n+               analysis: &'l ty::CrateAnalysis<'tcx>,\n+               span_utils: SpanUtils<'l>)\n+               -> SaveContext<'l, 'tcx> {\n         SaveContext {\n-            sess: sess\n+            sess: sess,\n+            analysis: analysis,\n+            span_utils: span_utils,\n         }\n     }\n \n@@ -49,6 +72,30 @@ impl<'l> SaveContext<'l> {\n \n         result\n     }\n+\n+    pub fn get_item_data(&self, item: &ast::Item) -> Data {\n+        match item.node {\n+            ast::Item_::ItemFn(..) => {\n+                let qualname = format!(\"::{}\", self.analysis.ty_cx.map.path_to_string(item.id));\n+                let sub_span = self.span_utils.sub_span_after_keyword(item.span, keywords::Fn);\n+\n+                Data::FunctionData(FunctionData {\n+                    id: item.id,\n+                    qualname: qualname,\n+                    declaration: None,\n+                    span: sub_span.unwrap(),\n+                    scope: self.analysis.ty_cx.map.get_parent(item.id),\n+                })\n+            }\n+            _ => {\n+                unimplemented!();\n+            }\n+        }\n+    }\n+\n+    pub fn get_data_for_id(&self, id: &NodeId) -> Data {\n+        unimplemented!();        \n+    }\n }\n \n #[allow(deprecated)]"}]}