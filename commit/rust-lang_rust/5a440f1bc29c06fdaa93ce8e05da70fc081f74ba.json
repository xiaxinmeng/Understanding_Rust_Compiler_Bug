{"sha": "5a440f1bc29c06fdaa93ce8e05da70fc081f74ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhNDQwZjFiYzI5YzA2ZmRhYTkzY2U4ZTA1ZGE3MGZjMDgxZjc0YmE=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2020-09-29T00:03:02Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2020-10-21T20:46:03Z"}, "message": "Fix control flow check for breaking with diverging values", "tree": {"sha": "96024f642dc57e56ea16f6c5ad69d2fa4eb952b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96024f642dc57e56ea16f6c5ad69d2fa4eb952b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a440f1bc29c06fdaa93ce8e05da70fc081f74ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a440f1bc29c06fdaa93ce8e05da70fc081f74ba", "html_url": "https://github.com/rust-lang/rust/commit/5a440f1bc29c06fdaa93ce8e05da70fc081f74ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a440f1bc29c06fdaa93ce8e05da70fc081f74ba/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d2726726f8f3128e98191e4c6cb94bd76d0ddd4", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d2726726f8f3128e98191e4c6cb94bd76d0ddd4", "html_url": "https://github.com/rust-lang/rust/commit/1d2726726f8f3128e98191e4c6cb94bd76d0ddd4"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "15820d367c0a669c7998c2c571f45b9db9c85195", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5a440f1bc29c06fdaa93ce8e05da70fc081f74ba/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a440f1bc29c06fdaa93ce8e05da70fc081f74ba/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=5a440f1bc29c06fdaa93ce8e05da70fc081f74ba", "patch": "@@ -627,7 +627,10 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 assert!(expr_opt.is_none() || self.tcx.sess.has_errors());\n             }\n \n-            ctxt.may_break = true;\n+            // If we encountered a `break`, then (no surprise) it may be possible to break from the\n+            // loop... unless the value being returned from the loop diverges itself, e.g.\n+            // `break return 5` or `break loop {}`.\n+            ctxt.may_break |= !e_ty.is_never();\n \n             // the type of a `break` is always `!`, since it diverges\n             tcx.types.never"}, {"sha": "0498580c7bd8a9e82f953be4cc2fd2d4e76bcc6b", "filename": "src/test/ui/break-diverging-value.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/5a440f1bc29c06fdaa93ce8e05da70fc081f74ba/src%2Ftest%2Fui%2Fbreak-diverging-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a440f1bc29c06fdaa93ce8e05da70fc081f74ba/src%2Ftest%2Fui%2Fbreak-diverging-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbreak-diverging-value.rs?ref=5a440f1bc29c06fdaa93ce8e05da70fc081f74ba", "patch": "@@ -0,0 +1,13 @@\n+fn loop_break_return() -> i32 {\n+    let loop_value = loop { break return 0 }; // ok\n+}\n+\n+fn loop_break_loop() -> i32 {\n+    let loop_value = loop { break loop {} }; // ok\n+}\n+\n+fn loop_break_break() -> i32 { //~ ERROR mismatched types\n+    let loop_value = loop { break break };\n+}\n+\n+fn main() {}"}, {"sha": "78a8d78ed3400f1fcb8f4352bb99a2d3a3a6699a", "filename": "src/test/ui/break-diverging-value.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5a440f1bc29c06fdaa93ce8e05da70fc081f74ba/src%2Ftest%2Fui%2Fbreak-diverging-value.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5a440f1bc29c06fdaa93ce8e05da70fc081f74ba/src%2Ftest%2Fui%2Fbreak-diverging-value.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbreak-diverging-value.stderr?ref=5a440f1bc29c06fdaa93ce8e05da70fc081f74ba", "patch": "@@ -0,0 +1,11 @@\n+error[E0308]: mismatched types\n+  --> $DIR/break-diverging-value.rs:9:26\n+   |\n+LL | fn loop_break_break() -> i32 {\n+   |    ----------------      ^^^ expected `i32`, found `()`\n+   |    |\n+   |    implicitly returns `()` as its body has no tail or `return` expression\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}]}