{"sha": "f1decfc1106fb25f5d36dfbd789370e5d59f251c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxZGVjZmMxMTA2ZmIyNWY1ZDM2ZGZiZDc4OTM3MGU1ZDU5ZjI1MWM=", "commit": {"author": {"name": "Zac Pullar-Strecker", "email": "zacmps@gmail.com", "date": "2020-09-03T08:13:02Z"}, "committer": {"name": "Zac Pullar-Strecker", "email": "zacmps@gmail.com", "date": "2020-10-08T02:04:57Z"}, "message": "Fix send->sent typo", "tree": {"sha": "967ff899d4ba0a002120057a8f8bf0a19df6ec60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/967ff899d4ba0a002120057a8f8bf0a19df6ec60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1decfc1106fb25f5d36dfbd789370e5d59f251c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1decfc1106fb25f5d36dfbd789370e5d59f251c", "html_url": "https://github.com/rust-lang/rust/commit/f1decfc1106fb25f5d36dfbd789370e5d59f251c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1decfc1106fb25f5d36dfbd789370e5d59f251c/comments", "author": {"login": "zacps", "id": 9827696, "node_id": "MDQ6VXNlcjk4Mjc2OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/9827696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zacps", "html_url": "https://github.com/zacps", "followers_url": "https://api.github.com/users/zacps/followers", "following_url": "https://api.github.com/users/zacps/following{/other_user}", "gists_url": "https://api.github.com/users/zacps/gists{/gist_id}", "starred_url": "https://api.github.com/users/zacps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zacps/subscriptions", "organizations_url": "https://api.github.com/users/zacps/orgs", "repos_url": "https://api.github.com/users/zacps/repos", "events_url": "https://api.github.com/users/zacps/events{/privacy}", "received_events_url": "https://api.github.com/users/zacps/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zacps", "id": 9827696, "node_id": "MDQ6VXNlcjk4Mjc2OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/9827696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zacps", "html_url": "https://github.com/zacps", "followers_url": "https://api.github.com/users/zacps/followers", "following_url": "https://api.github.com/users/zacps/following{/other_user}", "gists_url": "https://api.github.com/users/zacps/gists{/gist_id}", "starred_url": "https://api.github.com/users/zacps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zacps/subscriptions", "organizations_url": "https://api.github.com/users/zacps/orgs", "repos_url": "https://api.github.com/users/zacps/repos", "events_url": "https://api.github.com/users/zacps/events{/privacy}", "received_events_url": "https://api.github.com/users/zacps/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26086faab2dab6baeaa050f73a7f64b83ead6807", "url": "https://api.github.com/repos/rust-lang/rust/commits/26086faab2dab6baeaa050f73a7f64b83ead6807", "html_url": "https://github.com/rust-lang/rust/commit/26086faab2dab6baeaa050f73a7f64b83ead6807"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "3f861f3e00d3b0c5bd6437d94b1a71cce3acb529", "filename": "docs/dev/lsp-extensions.md", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f1decfc1106fb25f5d36dfbd789370e5d59f251c/docs%2Fdev%2Flsp-extensions.md", "raw_url": "https://github.com/rust-lang/rust/raw/f1decfc1106fb25f5d36dfbd789370e5d59f251c/docs%2Fdev%2Flsp-extensions.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Flsp-extensions.md?ref=f1decfc1106fb25f5d36dfbd789370e5d59f251c", "patch": "@@ -129,7 +129,7 @@ As a result of the command call the client will get the respective workspace edi\n \n **Server Capability:** `{ \"parentModule\": boolean }`\n \n-This request is send from client to server to handle \"Goto Parent Module\" editor action.\n+This request is sent from client to server to handle \"Goto Parent Module\" editor action.\n \n **Method:** `experimental/parentModule`\n \n@@ -163,7 +163,7 @@ mod foo;\n \n **Server Capability:** `{ \"joinLines\": boolean }`\n \n-This request is send from client to server to handle \"Join Lines\" editor action.\n+This request is sent from client to server to handle \"Join Lines\" editor action.\n \n **Method:** `experimental/joinLines`\n \n@@ -210,7 +210,7 @@ fn main() {\n \n **Server Capability:** `{ \"onEnter\": boolean }`\n \n-This request is send from client to server to handle <kbd>Enter</kbd> keypress.\n+This request is sent from client to server to handle <kbd>Enter</kbd> keypress.\n \n **Method:** `experimental/onEnter`\n \n@@ -261,7 +261,7 @@ As proper cursor positioning is raison-d'etat for `onEnter`, it uses `SnippetTex\n \n **Server Capability:** `{ \"ssr\": boolean }`\n \n-This request is send from client to server to handle structural search replace -- automated syntax tree based transformation of the source.\n+This request is sent from client to server to handle structural search replace -- automated syntax tree based transformation of the source.\n \n **Method:** `experimental/ssr`\n \n@@ -348,7 +348,7 @@ Moreover, it would be cool if editors didn't need to implement even basic langua\n \n **Server Capability:** `{ \"runnables\": { \"kinds\": string[] } }`\n \n-This request is send from client to server to get the list of things that can be run (tests, binaries, `cargo check -p`).\n+This request is sent from client to server to get the list of things that can be run (tests, binaries, `cargo check -p`).\n \n **Method:** `experimental/runnables`\n \n@@ -388,7 +388,7 @@ rust-analyzer supports only one `kind`, `\"cargo\"`. The `args` for `\"cargo\"` look\n \n ## Open External Documentation\n \n-This request is send from client to server to get a URL to documentation for the symbol under the cursor, if available.\n+This request is sent from client to server to get a URL to documentation for the symbol under the cursor, if available.\n \n **Method** `experimental/externalDocs`\n \n@@ -488,7 +488,7 @@ Expands macro call at a given position.\n \n **Method:** `rust-analyzer/inlayHints`\n \n-This request is send from client to server to render \"inlay hints\" -- virtual text inserted into editor to show things like inferred types.\n+This request is sent from client to server to render \"inlay hints\" -- virtual text inserted into editor to show things like inferred types.\n Generally, the client should re-query inlay hints after every modification.\n Note that we plan to move this request to `experimental/inlayHints`, as it is not really Rust-specific, but the current API is not necessary the right one.\n Upstream issue: https://github.com/microsoft/language-server-protocol/issues/956"}]}