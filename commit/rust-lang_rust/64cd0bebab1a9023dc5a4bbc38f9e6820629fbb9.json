{"sha": "64cd0bebab1a9023dc5a4bbc38f9e6820629fbb9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0Y2QwYmViYWIxYTkwMjNkYzVhNGJiYzM4ZjllNjgyMDYyOWZiYjk=", "commit": {"author": {"name": "Donnie Bishop", "email": "donnie.a.bishop@gmail.com", "date": "2017-03-25T16:22:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-03-25T16:22:23Z"}, "message": "Remove trailing whitespace", "tree": {"sha": "ef61a6b4c56233497fecbb178423a1fa13f1da77", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef61a6b4c56233497fecbb178423a1fa13f1da77"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64cd0bebab1a9023dc5a4bbc38f9e6820629fbb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64cd0bebab1a9023dc5a4bbc38f9e6820629fbb9", "html_url": "https://github.com/rust-lang/rust/commit/64cd0bebab1a9023dc5a4bbc38f9e6820629fbb9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64cd0bebab1a9023dc5a4bbc38f9e6820629fbb9/comments", "author": {"login": "donniebishop", "id": 7742572, "node_id": "MDQ6VXNlcjc3NDI1NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/7742572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/donniebishop", "html_url": "https://github.com/donniebishop", "followers_url": "https://api.github.com/users/donniebishop/followers", "following_url": "https://api.github.com/users/donniebishop/following{/other_user}", "gists_url": "https://api.github.com/users/donniebishop/gists{/gist_id}", "starred_url": "https://api.github.com/users/donniebishop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/donniebishop/subscriptions", "organizations_url": "https://api.github.com/users/donniebishop/orgs", "repos_url": "https://api.github.com/users/donniebishop/repos", "events_url": "https://api.github.com/users/donniebishop/events{/privacy}", "received_events_url": "https://api.github.com/users/donniebishop/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33a6a07d586437e8d4894dc35413a21ee5cfba54", "url": "https://api.github.com/repos/rust-lang/rust/commits/33a6a07d586437e8d4894dc35413a21ee5cfba54", "html_url": "https://github.com/rust-lang/rust/commit/33a6a07d586437e8d4894dc35413a21ee5cfba54"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "ae08a3d0a9a7d0619c9a4dbcb1d5a09c41b0f96a", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/64cd0bebab1a9023dc5a4bbc38f9e6820629fbb9/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64cd0bebab1a9023dc5a4bbc38f9e6820629fbb9/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=64cd0bebab1a9023dc5a4bbc38f9e6820629fbb9", "patch": "@@ -43,28 +43,28 @@ pub mod pattern;\n /// ```\n /// use std::str::FromStr;\n /// use std::num::ParseIntError;\n-/// \n+///\n /// #[derive(Debug, PartialEq)]\n /// struct Point {\n ///     x: i32,\n ///     y: i32\n /// }\n-/// \n+///\n /// impl FromStr for Point {\n ///     type Err = ParseIntError;\n-/// \n+///\n ///     fn from_str(s: &str) -> Result<Self, Self::Err> {\n ///         let coords: Vec<&str> = s.trim_matches(|p| p == '(' || p == ')' )\n ///                                  .split(\",\")\n ///                                  .collect();\n-/// \n+///\n ///         let x_fromstr = try!(coords[0].parse::<i32>());\n ///         let y_fromstr = try!(coords[1].parse::<i32>());\n-/// \n+///\n ///         Ok(Point { x: x_fromstr, y: y_fromstr })\n ///     }\n /// }\n-/// \n+///\n /// let p = Point::from_str(\"(1,2)\");\n /// assert_eq!(p.unwrap(), Point{ x: 1, y: 2} )\n /// ```"}]}