{"sha": "699ee5e31cbf6c8c97eafef635fc6df8d17e358f", "node_id": "C_kwDOAAsO6NoAKDY5OWVlNWUzMWNiZjZjOGM5N2VhZmVmNjM1ZmM2ZGY4ZDE3ZTM1OGY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-02-05T00:32:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-02-05T00:32:10Z"}, "message": "Auto merge of #8376 - dswij:8373, r=camsteffen\n\n[`chars_next_cmp`] Fix unescaped suggestion\n\ncloses #8373\n\nchangelog: [`chars_next_cmp`] Fix unescaped suggestion", "tree": {"sha": "d79018d5f941ba5d1da583a99aaa666963992eb4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d79018d5f941ba5d1da583a99aaa666963992eb4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/699ee5e31cbf6c8c97eafef635fc6df8d17e358f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/699ee5e31cbf6c8c97eafef635fc6df8d17e358f", "html_url": "https://github.com/rust-lang/rust/commit/699ee5e31cbf6c8c97eafef635fc6df8d17e358f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/699ee5e31cbf6c8c97eafef635fc6df8d17e358f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bef92b864d3591cffbee23ea88461b26af0b4d75", "url": "https://api.github.com/repos/rust-lang/rust/commits/bef92b864d3591cffbee23ea88461b26af0b4d75", "html_url": "https://github.com/rust-lang/rust/commit/bef92b864d3591cffbee23ea88461b26af0b4d75"}, {"sha": "5faa7ebb709dfbd8d0b7274ffda05b08d70b8a3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5faa7ebb709dfbd8d0b7274ffda05b08d70b8a3d", "html_url": "https://github.com/rust-lang/rust/commit/5faa7ebb709dfbd8d0b7274ffda05b08d70b8a3d"}], "stats": {"total": 72, "additions": 56, "deletions": 16}, "files": [{"sha": "a7c0e43923e139b3cc378b6f54aa19161d396f6e", "filename": "clippy_lints/src/methods/chars_cmp_with_unwrap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/699ee5e31cbf6c8c97eafef635fc6df8d17e358f/clippy_lints%2Fsrc%2Fmethods%2Fchars_cmp_with_unwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/699ee5e31cbf6c8c97eafef635fc6df8d17e358f/clippy_lints%2Fsrc%2Fmethods%2Fchars_cmp_with_unwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fchars_cmp_with_unwrap.rs?ref=699ee5e31cbf6c8c97eafef635fc6df8d17e358f", "patch": "@@ -32,7 +32,7 @@ pub(super) fn check<'tcx>(\n                         if info.eq { \"\" } else { \"!\" },\n                         snippet_with_applicability(cx, args[0][0].span, \"..\", &mut applicability),\n                         suggest,\n-                        c),\n+                        c.escape_default()),\n                 applicability,\n             );\n "}, {"sha": "983fac7afe69a58c42ea43c4a1cfc7881a9b3bd7", "filename": "tests/ui/starts_ends_with.fixed", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/699ee5e31cbf6c8c97eafef635fc6df8d17e358f/tests%2Fui%2Fstarts_ends_with.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/699ee5e31cbf6c8c97eafef635fc6df8d17e358f/tests%2Fui%2Fstarts_ends_with.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstarts_ends_with.fixed?ref=699ee5e31cbf6c8c97eafef635fc6df8d17e358f", "patch": "@@ -7,6 +7,10 @@ fn main() {}\n fn starts_with() {\n     \"\".starts_with(' ');\n     !\"\".starts_with(' ');\n+\n+    // Ensure that suggestion is escaped correctly\n+    \"\".starts_with('\\n');\n+    !\"\".starts_with('\\n');\n }\n \n fn chars_cmp_with_unwrap() {\n@@ -31,7 +35,7 @@ fn chars_cmp_with_unwrap() {\n         // !s.ends_with('o')\n         // Nothing here\n     }\n-    if !s.ends_with('o') {\n+    if !s.ends_with('\\n') {\n         // !s.ends_with('o')\n         // Nothing here\n     }\n@@ -43,4 +47,8 @@ fn ends_with() {\n     !\"\".ends_with(' ');\n     \"\".ends_with(' ');\n     !\"\".ends_with(' ');\n+\n+    // Ensure that suggestion is escaped correctly\n+    \"\".ends_with('\\n');\n+    !\"\".ends_with('\\n');\n }"}, {"sha": "e3335dd2e2ef7727f6e92500fbeebb4450a47164", "filename": "tests/ui/starts_ends_with.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/699ee5e31cbf6c8c97eafef635fc6df8d17e358f/tests%2Fui%2Fstarts_ends_with.rs", "raw_url": "https://github.com/rust-lang/rust/raw/699ee5e31cbf6c8c97eafef635fc6df8d17e358f/tests%2Fui%2Fstarts_ends_with.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstarts_ends_with.rs?ref=699ee5e31cbf6c8c97eafef635fc6df8d17e358f", "patch": "@@ -7,6 +7,10 @@ fn main() {}\n fn starts_with() {\n     \"\".chars().next() == Some(' ');\n     Some(' ') != \"\".chars().next();\n+\n+    // Ensure that suggestion is escaped correctly\n+    \"\".chars().next() == Some('\\n');\n+    Some('\\n') != \"\".chars().next();\n }\n \n fn chars_cmp_with_unwrap() {\n@@ -31,7 +35,7 @@ fn chars_cmp_with_unwrap() {\n         // !s.ends_with('o')\n         // Nothing here\n     }\n-    if s.chars().last().unwrap() != 'o' {\n+    if s.chars().last().unwrap() != '\\n' {\n         // !s.ends_with('o')\n         // Nothing here\n     }\n@@ -43,4 +47,8 @@ fn ends_with() {\n     Some(' ') != \"\".chars().last();\n     \"\".chars().next_back() == Some(' ');\n     Some(' ') != \"\".chars().next_back();\n+\n+    // Ensure that suggestion is escaped correctly\n+    \"\".chars().last() == Some('\\n');\n+    Some('\\n') != \"\".chars().last();\n }"}, {"sha": "2dd9f53b8026afd215c7fdd3b436fab8e61bad21", "filename": "tests/ui/starts_ends_with.stderr", "status": "modified", "additions": 37, "deletions": 13, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/699ee5e31cbf6c8c97eafef635fc6df8d17e358f/tests%2Fui%2Fstarts_ends_with.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/699ee5e31cbf6c8c97eafef635fc6df8d17e358f/tests%2Fui%2Fstarts_ends_with.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstarts_ends_with.stderr?ref=699ee5e31cbf6c8c97eafef635fc6df8d17e358f", "patch": "@@ -13,66 +13,90 @@ LL |     Some(' ') != \"\".chars().next();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `!\"\".starts_with(' ')`\n \n error: you should use the `starts_with` method\n-  --> $DIR/starts_ends_with.rs:14:8\n+  --> $DIR/starts_ends_with.rs:12:5\n+   |\n+LL |     \"\".chars().next() == Some('/n');\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `\"\".starts_with('/n')`\n+\n+error: you should use the `starts_with` method\n+  --> $DIR/starts_ends_with.rs:13:5\n+   |\n+LL |     Some('/n') != \"\".chars().next();\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `!\"\".starts_with('/n')`\n+\n+error: you should use the `starts_with` method\n+  --> $DIR/starts_ends_with.rs:18:8\n    |\n LL |     if s.chars().next().unwrap() == 'f' {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `s.starts_with('f')`\n \n error: you should use the `ends_with` method\n-  --> $DIR/starts_ends_with.rs:18:8\n+  --> $DIR/starts_ends_with.rs:22:8\n    |\n LL |     if s.chars().next_back().unwrap() == 'o' {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `s.ends_with('o')`\n    |\n    = note: `-D clippy::chars-last-cmp` implied by `-D warnings`\n \n error: you should use the `ends_with` method\n-  --> $DIR/starts_ends_with.rs:22:8\n+  --> $DIR/starts_ends_with.rs:26:8\n    |\n LL |     if s.chars().last().unwrap() == 'o' {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `s.ends_with('o')`\n \n error: you should use the `starts_with` method\n-  --> $DIR/starts_ends_with.rs:26:8\n+  --> $DIR/starts_ends_with.rs:30:8\n    |\n LL |     if s.chars().next().unwrap() != 'f' {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `!s.starts_with('f')`\n \n error: you should use the `ends_with` method\n-  --> $DIR/starts_ends_with.rs:30:8\n+  --> $DIR/starts_ends_with.rs:34:8\n    |\n LL |     if s.chars().next_back().unwrap() != 'o' {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `!s.ends_with('o')`\n \n error: you should use the `ends_with` method\n-  --> $DIR/starts_ends_with.rs:34:8\n+  --> $DIR/starts_ends_with.rs:38:8\n    |\n-LL |     if s.chars().last().unwrap() != 'o' {\n-   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `!s.ends_with('o')`\n+LL |     if s.chars().last().unwrap() != '/n' {\n+   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `!s.ends_with('/n')`\n \n error: you should use the `ends_with` method\n-  --> $DIR/starts_ends_with.rs:42:5\n+  --> $DIR/starts_ends_with.rs:46:5\n    |\n LL |     \"\".chars().last() == Some(' ');\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `\"\".ends_with(' ')`\n \n error: you should use the `ends_with` method\n-  --> $DIR/starts_ends_with.rs:43:5\n+  --> $DIR/starts_ends_with.rs:47:5\n    |\n LL |     Some(' ') != \"\".chars().last();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `!\"\".ends_with(' ')`\n \n error: you should use the `ends_with` method\n-  --> $DIR/starts_ends_with.rs:44:5\n+  --> $DIR/starts_ends_with.rs:48:5\n    |\n LL |     \"\".chars().next_back() == Some(' ');\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `\"\".ends_with(' ')`\n \n error: you should use the `ends_with` method\n-  --> $DIR/starts_ends_with.rs:45:5\n+  --> $DIR/starts_ends_with.rs:49:5\n    |\n LL |     Some(' ') != \"\".chars().next_back();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `!\"\".ends_with(' ')`\n \n-error: aborting due to 12 previous errors\n+error: you should use the `ends_with` method\n+  --> $DIR/starts_ends_with.rs:52:5\n+   |\n+LL |     \"\".chars().last() == Some('/n');\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `\"\".ends_with('/n')`\n+\n+error: you should use the `ends_with` method\n+  --> $DIR/starts_ends_with.rs:53:5\n+   |\n+LL |     Some('/n') != \"\".chars().last();\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `!\"\".ends_with('/n')`\n+\n+error: aborting due to 16 previous errors\n "}]}