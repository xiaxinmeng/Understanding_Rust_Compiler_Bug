{"sha": "08f3deb3d5a2164d8a601d37c87f2453b2f09eed", "node_id": "C_kwDOAAsO6NoAKDA4ZjNkZWIzZDVhMjE2NGQ4YTYwMWQzN2M4N2YyNDUzYjJmMDllZWQ", "commit": {"author": {"name": "Lukas Markeffsky", "email": "@", "date": "2023-03-25T21:27:24Z"}, "committer": {"name": "Lukas Markeffsky", "email": "@", "date": "2023-03-25T21:27:24Z"}, "message": "fix type suggestions in match arms", "tree": {"sha": "c11ae8b76ce17360276c041e7707e47bbed846ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c11ae8b76ce17360276c041e7707e47bbed846ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08f3deb3d5a2164d8a601d37c87f2453b2f09eed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08f3deb3d5a2164d8a601d37c87f2453b2f09eed", "html_url": "https://github.com/rust-lang/rust/commit/08f3deb3d5a2164d8a601d37c87f2453b2f09eed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08f3deb3d5a2164d8a601d37c87f2453b2f09eed/comments", "author": null, "committer": null, "parents": [{"sha": "b72e896268bd741a2a2bb10028dca9e6f8d0ae63", "url": "https://api.github.com/repos/rust-lang/rust/commits/b72e896268bd741a2a2bb10028dca9e6f8d0ae63", "html_url": "https://github.com/rust-lang/rust/commit/b72e896268bd741a2a2bb10028dca9e6f8d0ae63"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "75c3d9f641ddaad282be8e526e17dea465853894", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/08f3deb3d5a2164d8a601d37c87f2453b2f09eed/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08f3deb3d5a2164d8a601d37c87f2453b2f09eed/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=08f3deb3d5a2164d8a601d37c87f2453b2f09eed", "patch": "@@ -1942,7 +1942,8 @@ impl<'tcx> TypeErrCtxt<'_, 'tcx> {\n                     escaped\n                 }\n                 let mut err = struct_span_err!(self.tcx.sess, span, E0308, \"{}\", failure_str);\n-                if let Some((expected, found)) = trace.values.ty() {\n+                let values = self.resolve_vars_if_possible(trace.values);\n+                if let Some((expected, found)) = values.ty() {\n                     match (expected.kind(), found.kind()) {\n                         (ty::Tuple(_), ty::Tuple(_)) => {}\n                         // If a tuple of length one was expected and the found expression has"}, {"sha": "1621a279f03ff7abb1b2bb65aeac25603928cd8c", "filename": "tests/ui/inference/char-as-str-single.fixed", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/08f3deb3d5a2164d8a601d37c87f2453b2f09eed/tests%2Fui%2Finference%2Fchar-as-str-single.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/08f3deb3d5a2164d8a601d37c87f2453b2f09eed/tests%2Fui%2Finference%2Fchar-as-str-single.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finference%2Fchar-as-str-single.fixed?ref=08f3deb3d5a2164d8a601d37c87f2453b2f09eed", "patch": "@@ -10,3 +10,12 @@ fn main() {\n     let _: char = '\u4eba'; //~ ERROR mismatched types\n     let _: char = '\\''; //~ ERROR mismatched types\n }\n+\n+// regression test for https://github.com/rust-lang/rust/issues/109586\n+#[allow(dead_code)]\n+fn convert_c_to_str(c: char) {\n+    match c {\n+        'A' => {} //~ ERROR mismatched types\n+        _ => {}\n+    }\n+}"}, {"sha": "2903142f1599195a67cab54d7f90c7407c268049", "filename": "tests/ui/inference/char-as-str-single.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/08f3deb3d5a2164d8a601d37c87f2453b2f09eed/tests%2Fui%2Finference%2Fchar-as-str-single.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08f3deb3d5a2164d8a601d37c87f2453b2f09eed/tests%2Fui%2Finference%2Fchar-as-str-single.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finference%2Fchar-as-str-single.rs?ref=08f3deb3d5a2164d8a601d37c87f2453b2f09eed", "patch": "@@ -10,3 +10,12 @@ fn main() {\n     let _: char = \"\u4eba\"; //~ ERROR mismatched types\n     let _: char = \"'\"; //~ ERROR mismatched types\n }\n+\n+// regression test for https://github.com/rust-lang/rust/issues/109586\n+#[allow(dead_code)]\n+fn convert_c_to_str(c: char) {\n+    match c {\n+        \"A\" => {} //~ ERROR mismatched types\n+        _ => {}\n+    }\n+}"}, {"sha": "9149efe32407119524112b8319edf1d9f2018e0e", "filename": "tests/ui/inference/char-as-str-single.stderr", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/08f3deb3d5a2164d8a601d37c87f2453b2f09eed/tests%2Fui%2Finference%2Fchar-as-str-single.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/08f3deb3d5a2164d8a601d37c87f2453b2f09eed/tests%2Fui%2Finference%2Fchar-as-str-single.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finference%2Fchar-as-str-single.stderr?ref=08f3deb3d5a2164d8a601d37c87f2453b2f09eed", "patch": "@@ -37,6 +37,19 @@ help: if you meant to write a `char` literal, use single quotes\n LL |     let _: char = '\\'';\n    |                   ~~~~\n \n-error: aborting due to 3 previous errors\n+error[E0308]: mismatched types\n+  --> $DIR/char-as-str-single.rs:18:9\n+   |\n+LL |     match c {\n+   |           - this expression has type `char`\n+LL |         \"A\" => {}\n+   |         ^^^ expected `char`, found `&str`\n+   |\n+help: if you meant to write a `char` literal, use single quotes\n+   |\n+LL |         'A' => {}\n+   |         ~~~\n+\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0308`."}]}