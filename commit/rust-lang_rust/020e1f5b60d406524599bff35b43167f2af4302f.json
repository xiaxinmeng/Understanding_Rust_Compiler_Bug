{"sha": "020e1f5b60d406524599bff35b43167f2af4302f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyMGUxZjViNjBkNDA2NTI0NTk5YmZmMzViNDMxNjdmMmFmNDMwMmY=", "commit": {"author": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2019-01-11T17:40:05Z"}, "committer": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2019-01-11T18:00:44Z"}, "message": "don't unwrap unexpected tokens in `format!`\n\nFixes #57512.", "tree": {"sha": "cc5da22bf157c57f487c8dd812a41ca8ec09420c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc5da22bf157c57f487c8dd812a41ca8ec09420c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/020e1f5b60d406524599bff35b43167f2af4302f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFKBAABCAA0FiEELriChyEaiMu0yCg7viIhAz7bw3QFAlw42dEWHGFydXNzZWxs\nMTIzQGdtYWlsLmNvbQAKCRC+IiEDPtvDdIaqCACELU9rgw67Une6q9jv7H1ioZMR\nbzjqYyEGW0UA/z+He9cm5JdrdOR1digh8f74QJN9w6uqSKQk7oMGa8nZy01/Yf3s\nK1jzEYrnrdU1M3YC2RhMGLORZHp+le9Rrrk3NMAZOuMRML8u+yUk2cCiEIvAAqoj\nxK7PvA5Wy0pMmUWH2PTWBuk5crv8PWD7gZ1sD5OOTAfHeQloYmY6ag3/zwJRCrR3\nPXb0SmvUN40eSiB7BPo3UEkMq57A1ysfGx7ce/2DC7eM5Z4U99TzY/B5zOB89j2t\nIQB3hwFrWkobv2OS4iJGaA05EO+uzhd5hsLyOrx6Er3SHMiCieyZtoBo4pcI\n=0PLH\n-----END PGP SIGNATURE-----", "payload": "tree cc5da22bf157c57f487c8dd812a41ca8ec09420c\nparent 6ecad338381cc3b8d56e2df22e5971a598eddd6c\nauthor Andy Russell <arussell123@gmail.com> 1547228405 -0500\ncommitter Andy Russell <arussell123@gmail.com> 1547229644 -0500\n\ndon't unwrap unexpected tokens in `format!`\n\nFixes #57512.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/020e1f5b60d406524599bff35b43167f2af4302f", "html_url": "https://github.com/rust-lang/rust/commit/020e1f5b60d406524599bff35b43167f2af4302f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/020e1f5b60d406524599bff35b43167f2af4302f/comments", "author": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ecad338381cc3b8d56e2df22e5971a598eddd6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ecad338381cc3b8d56e2df22e5971a598eddd6c", "html_url": "https://github.com/rust-lang/rust/commit/6ecad338381cc3b8d56e2df22e5971a598eddd6c"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "3e3bca7080fb6d4b9f77ce95272ffc6a68b5ee8b", "filename": "src/libsyntax_ext/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/020e1f5b60d406524599bff35b43167f2af4302f/src%2Flibsyntax_ext%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/020e1f5b60d406524599bff35b43167f2af4302f/src%2Flibsyntax_ext%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fformat.rs?ref=020e1f5b60d406524599bff35b43167f2af4302f", "patch": "@@ -159,7 +159,7 @@ fn parse_args<'a>(\n             };\n             let name: &str = &ident.as_str();\n \n-            p.expect(&token::Eq).unwrap();\n+            p.expect(&token::Eq)?;\n             let e = p.parse_expr()?;\n             if let Some(prev) = names.get(name) {\n                 ecx.struct_span_err(e.span, &format!(\"duplicate argument named `{}`\", name))"}, {"sha": "96aee5e6aeed5cc9c9561f90ccd1f61d2661c6f4", "filename": "src/test/ui/macros/format-parse-errors.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/020e1f5b60d406524599bff35b43167f2af4302f/src%2Ftest%2Fui%2Fmacros%2Fformat-parse-errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/020e1f5b60d406524599bff35b43167f2af4302f/src%2Ftest%2Fui%2Fmacros%2Fformat-parse-errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fformat-parse-errors.rs?ref=020e1f5b60d406524599bff35b43167f2af4302f", "patch": "@@ -2,6 +2,7 @@ fn main() {\n     format!(); //~ ERROR requires at least a format string argument\n     format!(struct); //~ ERROR expected expression\n     format!(\"s\", name =); //~ ERROR expected expression\n+    format!(\"s\", foo = foo, bar); //~ ERROR expected `=`\n     format!(\"s\", foo = struct); //~ ERROR expected expression\n     format!(\"s\", struct); //~ ERROR expected expression\n "}, {"sha": "a3d2786bce1119ef10d39e387245096d5c0e2475", "filename": "src/test/ui/macros/format-parse-errors.stderr", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/020e1f5b60d406524599bff35b43167f2af4302f/src%2Ftest%2Fui%2Fmacros%2Fformat-parse-errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/020e1f5b60d406524599bff35b43167f2af4302f/src%2Ftest%2Fui%2Fmacros%2Fformat-parse-errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fformat-parse-errors.stderr?ref=020e1f5b60d406524599bff35b43167f2af4302f", "patch": "@@ -18,20 +18,26 @@ error: expected expression, found `<eof>`\n LL |     format!(\"s\", name =); //~ ERROR expected expression\n    |                       ^ expected expression\n \n+error: expected `=`, found `<eof>`\n+  --> $DIR/format-parse-errors.rs:5:29\n+   |\n+LL |     format!(\"s\", foo = foo, bar); //~ ERROR expected `=`\n+   |                             ^^^ expected `=`\n+\n error: expected expression, found keyword `struct`\n-  --> $DIR/format-parse-errors.rs:5:24\n+  --> $DIR/format-parse-errors.rs:6:24\n    |\n LL |     format!(\"s\", foo = struct); //~ ERROR expected expression\n    |                        ^^^^^^ expected expression\n \n error: expected expression, found keyword `struct`\n-  --> $DIR/format-parse-errors.rs:6:18\n+  --> $DIR/format-parse-errors.rs:7:18\n    |\n LL |     format!(\"s\", struct); //~ ERROR expected expression\n    |                  ^^^^^^ expected expression\n \n error: format argument must be a string literal\n-  --> $DIR/format-parse-errors.rs:9:13\n+  --> $DIR/format-parse-errors.rs:10:13\n    |\n LL |     format!(123); //~ ERROR format argument must be a string literal\n    |             ^^^\n@@ -40,5 +46,5 @@ help: you might be missing a string literal to format with\n LL |     format!(\"{}\", 123); //~ ERROR format argument must be a string literal\n    |             ^^^^^\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 7 previous errors\n "}]}