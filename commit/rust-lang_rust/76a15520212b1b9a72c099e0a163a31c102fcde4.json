{"sha": "76a15520212b1b9a72c099e0a163a31c102fcde4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2YTE1NTIwMjEyYjFiOWE3MmMwOTllMGExNjNhMzFjMTAyZmNkZTQ=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-07-14T21:13:38Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-07-21T17:59:57Z"}, "message": "First pass at line comment correctness", "tree": {"sha": "aa71c1078da8f7cb7da367f2d091efbb61cab931", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa71c1078da8f7cb7da367f2d091efbb61cab931"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76a15520212b1b9a72c099e0a163a31c102fcde4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76a15520212b1b9a72c099e0a163a31c102fcde4", "html_url": "https://github.com/rust-lang/rust/commit/76a15520212b1b9a72c099e0a163a31c102fcde4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76a15520212b1b9a72c099e0a163a31c102fcde4/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a1a9d54456355cc0ebdd397fd04871abe27f78c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a1a9d54456355cc0ebdd397fd04871abe27f78c", "html_url": "https://github.com/rust-lang/rust/commit/1a1a9d54456355cc0ebdd397fd04871abe27f78c"}], "stats": {"total": 45, "additions": 30, "deletions": 15}, "files": [{"sha": "f5d535a129f7ccc0f49e998cd6edca3107d2cbd9", "filename": "src/grammar/RustLexer.g4", "status": "modified", "additions": 30, "deletions": 15, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/76a15520212b1b9a72c099e0a163a31c102fcde4/src%2Fgrammar%2FRustLexer.g4", "raw_url": "https://github.com/rust-lang/rust/raw/76a15520212b1b9a72c099e0a163a31c102fcde4/src%2Fgrammar%2FRustLexer.g4", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2FRustLexer.g4?ref=76a15520212b1b9a72c099e0a163a31c102fcde4", "patch": "@@ -1,11 +1,23 @@\n lexer grammar RustLexer;\n \n+tokens {\n+    EQ, LT, LE, EQEQ, NE, GE, GT, ANDAND, OROR, NOT, TILDE, PLUT,\n+    MINUS, STAR, SLASH, PERCENT, CARET, AND, OR, SHL, SHR, BINOP,\n+    BINOPEQ, AT, DOT, DOTDOT, DOTDOTDOT, COMMA, SEMI, COLON,\n+    MOD_SEP, RARROW, FAT_ARROW, LPAREN, RPAREN, LBRACKET, RBRACKET,\n+    LBRACE, RBRACE, POUND, DOLLAR, UNDERSCORE, LIT_CHAR,\n+    LIT_INTEGER, LIT_FLOAT, LIT_STR, LIT_STR_RAW, LIT_BINARY,\n+    LIT_BINARY_RAW, IDENT, LIFETIME, WHITESPACE, DOC_COMMENT,\n+    COMMENT\n+}\n+\n /* Note: due to antlr limitations, we can't represent XID_start and\n  * XID_continue properly. ASCII-only substitute. */\n \n fragment XID_start : [_a-zA-Z] ;\n fragment XID_continue : [_a-zA-Z0-9] ;\n \n+\n /* Expression-operator symbols */\n \n EQ      : '=' ;\n@@ -83,7 +95,7 @@ LIT_CHAR\n   : '\\'' ( '\\\\' CHAR_ESCAPE | ~[\\\\'\\n\\t\\r] ) '\\''\n   ;\n \n-INT_SUFFIX\n+fragment INT_SUFFIX\n   : 'i'\n   | 'i8'\n   | 'i16'\n@@ -141,25 +153,28 @@ LIFETIME : '\\'' IDENT ;\n \n WHITESPACE : [ \\r\\n\\t]+ ;\n \n-COMMENT\n-  : '//' ~[\\r\\n]*\n-  | '////' ~[\\r\\n]*\n-  | BLOCK_COMMENT\n-  ;\n+LINE_COMMENT_NOT_A_TOKEN : '//' -> more, pushMode(LINE_COMMENT) ;\n \n-mode DOCCOMMENT;\n \n-fragment DOC_BLOCK_COMMENT\n-  : ('/**' | '/*!') (DOC_BLOCK_COMMENT | .)*? '*/'\n+DOC_BLOCK_COMMENT\n+  : ('/**' | '/*!') (DOC_BLOCK_COMMENT | .)*? '*/' -> type(DOC_COMMENT)\n   ;\n \n-DOC_COMMENT\n-  : '///' ~[\\r\\n]*\n-  | '//!' ~[\\r\\n]*\n-  | DOC_BLOCK_COMMENT\n+BLOCK_COMMENT : '/*' (BLOCK_COMMENT | .)*? '*/' -> type(COMMENT) ;\n+\n+mode LINE_COMMENT;\n+\n+MAYBE_DOC_COMMENT\n+  : '/' -> more, pushMode(LINE_DOC_COMMENT)\n   ;\n \n-fragment BLOCK_COMMENT\n-  : '/*' (BLOCK_COMMENT | .)*? '*/'\n+MAYBE_OUTER_DOC_COMMENT\n+  : '!' ~[\\r\\n]* -> type(LINE_DOC_COMMENT), popMode\n   ;\n \n+COMMENT : ~[\\r\\n]* -> popMode ;\n+\n+mode LINE_DOC_COMMENT;\n+\n+ACTUALLY_A_COMMENT : '/' ~[\\r\\n]* -> type(COMMENT), popMode ;\n+REALLY_A_DOC_COMMENT : ~[\\r\\n]* -> type(DOC_COMMENT), popMode ;"}]}