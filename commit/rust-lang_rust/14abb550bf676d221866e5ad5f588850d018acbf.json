{"sha": "14abb550bf676d221866e5ad5f588850d018acbf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0YWJiNTUwYmY2NzZkMjIxODY2ZTVhZDVmNTg4ODUwZDAxOGFjYmY=", "commit": {"author": {"name": "Steve Pentland", "email": "stevepentland@gmail.com", "date": "2018-05-01T23:57:42Z"}, "committer": {"name": "Steve Pentland", "email": "stevepentland@gmail.com", "date": "2018-06-19T01:34:11Z"}, "message": "Add ability to apply custom derive to union types.\n\nThe Union item type has been included in the allowed types for a custom\nderive. Closes #50223", "tree": {"sha": "bee4262b4b596c163910bce96f51d3bb15e6df37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bee4262b4b596c163910bce96f51d3bb15e6df37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14abb550bf676d221866e5ad5f588850d018acbf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEsyeFqPS0Jam4eiIQU9xZAFDqNxwFAlsoXZMACgkQU9xZAFDq\nNxw2Wg//U92xHrzWvzKDd3gLgmp/mB5Yd8GVuirLVic3XbLEkNJ+L46y1Wd8NIrs\nAca/nO2XJe/FoOmV16MCBjfqtqcWeFJP88KdcPnZCtojnRAdyM9kiKMtg2ZN7Kl4\n5aQmLmCosz6+IW+VcWMVZHUXB0hX57IguGNbEtJuKrVSvF9xTsQHDstjP2efDEsJ\nlouNqVaUhfqUkYnPC9e3NuAvZJCgTx2HWbeYfg/+TDd9gbnTYMBQ7RlUXZDFem1M\n8l73I7gsEf/n2wZoa7L93v4EAd0EoNV7bCMh4Lm55ytidccdbBVS5EPbnA+a+WYX\nFe4TkyFkbp3uIEIJzAdAr3cjmaOXbljpDd2OxUA9XLQqhYjMchSfp4k0dtXAJ9UN\nAKX8bvG5Ki711T8sGqWE+U4FH2gCvq8tjFN6U6vuMwVTPbvr0uMwrJtuGwKRYxPo\nqI/f94No6wp3JwobJj8tGQhNcnl24mbgM5mZvUsYLO9kg69PQnlamoc18e+Htz3J\nORfOpsvKEZTxViN+UDhnHYzo/V37tL0dmls2VJQvw5jfhK0YXCEwRiwtK9U+puLn\n+a3Pdo0Tn1O/GTNhDiu/4iJ4qCM9f9gN0InB0JTVLrRBqhuvdrNAr+h8UczGq2JW\nQ2UJe6sWTV4aPpCxqQmxkpsg0xJ7J72aHGY1o+nDwoSHOhfyEO0=\n=ZIH0\n-----END PGP SIGNATURE-----", "payload": "tree bee4262b4b596c163910bce96f51d3bb15e6df37\nparent 5230979794db209de492b3f7cc688020b72bc7c6\nauthor Steve Pentland <stevepentland@gmail.com> 1525219062 -0400\ncommitter Steve Pentland <stevepentland@gmail.com> 1529372051 -0400\n\nAdd ability to apply custom derive to union types.\n\nThe Union item type has been included in the allowed types for a custom\nderive. Closes #50223\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14abb550bf676d221866e5ad5f588850d018acbf", "html_url": "https://github.com/rust-lang/rust/commit/14abb550bf676d221866e5ad5f588850d018acbf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14abb550bf676d221866e5ad5f588850d018acbf/comments", "author": {"login": "stevepentland", "id": 8147610, "node_id": "MDQ6VXNlcjgxNDc2MTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8147610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stevepentland", "html_url": "https://github.com/stevepentland", "followers_url": "https://api.github.com/users/stevepentland/followers", "following_url": "https://api.github.com/users/stevepentland/following{/other_user}", "gists_url": "https://api.github.com/users/stevepentland/gists{/gist_id}", "starred_url": "https://api.github.com/users/stevepentland/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stevepentland/subscriptions", "organizations_url": "https://api.github.com/users/stevepentland/orgs", "repos_url": "https://api.github.com/users/stevepentland/repos", "events_url": "https://api.github.com/users/stevepentland/events{/privacy}", "received_events_url": "https://api.github.com/users/stevepentland/received_events", "type": "User", "site_admin": false}, "committer": {"login": "stevepentland", "id": 8147610, "node_id": "MDQ6VXNlcjgxNDc2MTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8147610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stevepentland", "html_url": "https://github.com/stevepentland", "followers_url": "https://api.github.com/users/stevepentland/followers", "following_url": "https://api.github.com/users/stevepentland/following{/other_user}", "gists_url": "https://api.github.com/users/stevepentland/gists{/gist_id}", "starred_url": "https://api.github.com/users/stevepentland/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stevepentland/subscriptions", "organizations_url": "https://api.github.com/users/stevepentland/orgs", "repos_url": "https://api.github.com/users/stevepentland/repos", "events_url": "https://api.github.com/users/stevepentland/events{/privacy}", "received_events_url": "https://api.github.com/users/stevepentland/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5230979794db209de492b3f7cc688020b72bc7c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/5230979794db209de492b3f7cc688020b72bc7c6", "html_url": "https://github.com/rust-lang/rust/commit/5230979794db209de492b3f7cc688020b72bc7c6"}], "stats": {"total": 59, "additions": 56, "deletions": 3}, "files": [{"sha": "c3958bb58ddf6bf4c3ddd105c602e3ab09ffc396", "filename": "src/libsyntax_ext/deriving/custom.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/14abb550bf676d221866e5ad5f588850d018acbf/src%2Flibsyntax_ext%2Fderiving%2Fcustom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14abb550bf676d221866e5ad5f588850d018acbf/src%2Flibsyntax_ext%2Fderiving%2Fcustom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fcustom.rs?ref=14abb550bf676d221866e5ad5f588850d018acbf", "patch": "@@ -57,16 +57,17 @@ impl MultiItemModifier for ProcMacroDerive {\n             Annotatable::Stmt(_) |\n             Annotatable::Expr(_) => {\n                 ecx.span_err(span, \"proc-macro derives may only be \\\n-                                    applied to struct/enum items\");\n+                                    applied to a struct, enum, or union\");\n                 return Vec::new()\n             }\n         };\n         match item.node {\n             ItemKind::Struct(..) |\n-            ItemKind::Enum(..) => {},\n+            ItemKind::Enum(..) |\n+            ItemKind::Union(..) => {},\n             _ => {\n                 ecx.span_err(span, \"proc-macro derives may only be \\\n-                                    applied to struct/enum items\");\n+                                    applied to a struct, enum, or union\");\n                 return Vec::new()\n             }\n         }"}, {"sha": "41bb88a0a92c186772be491eb939381c662d68c4", "filename": "src/test/run-pass-fulldeps/proc-macro/auxiliary/derive-union.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/14abb550bf676d221866e5ad5f588850d018acbf/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fderive-union.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14abb550bf676d221866e5ad5f588850d018acbf/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fderive-union.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fderive-union.rs?ref=14abb550bf676d221866e5ad5f588850d018acbf", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+\n+#![crate_type = \"proc-macro\"]\n+\n+extern crate proc_macro;\n+\n+use proc_macro::TokenStream;\n+\n+#[proc_macro_derive(UnionTest)]\n+pub fn derive(input: TokenStream) -> TokenStream {\n+    let input = input.to_string();\n+    assert!(input.contains(\"#[repr(C)]\"));\n+    assert!(input.contains(\"union Test {\"));\n+    assert!(input.contains(\"a: u8,\"));\n+    assert!(input.contains(\"}\"));\n+    \"\".parse().unwrap()\n+}"}, {"sha": "71807e21d962e4dbe9bac59f09d8559115703940", "filename": "src/test/run-pass-fulldeps/proc-macro/derive-union.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/14abb550bf676d221866e5ad5f588850d018acbf/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fderive-union.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14abb550bf676d221866e5ad5f588850d018acbf/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fderive-union.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fderive-union.rs?ref=14abb550bf676d221866e5ad5f588850d018acbf", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:derive-union.rs\n+// ignore-stage1\n+\n+#[macro_use]\n+extern crate derive_union;\n+\n+#[repr(C)]\n+#[derive(UnionTest)]\n+union Test {\n+    a: u8,\n+}\n+\n+fn main() {\n+    let t = Test { a: 0 };\n+}"}]}