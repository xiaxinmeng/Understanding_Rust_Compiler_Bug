{"sha": "da3a57377ea34c1ddb0c0c41defb456b8dceed53", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhM2E1NzM3N2VhMzRjMWRkYjBjMGM0MWRlZmI0NTZiOGRjZWVkNTM=", "commit": {"author": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-02-28T12:44:07Z"}, "committer": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-02-28T13:10:44Z"}, "message": "Fix false positives on procedural macros of `missing_inline_in_public_items` lint", "tree": {"sha": "8d6250638b225fc1ba6727cda06a0996193e3b01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d6250638b225fc1ba6727cda06a0996193e3b01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da3a57377ea34c1ddb0c0c41defb456b8dceed53", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niIsEABYIADMWIQRJ2jPMDdiQ+U4U42Z0+n/VuNoUuAUCYDuWVBUceWQtaHVhbmdA\nb3V0bG9vay5jb20ACgkQdPp/1bjaFLgYxwEA+CPoXaBw/0odNZ9M0/oeUPL3wjdj\nx17ewOUbdAjG0WQBAMNjJqTfk6IUHgfYzBEVltVN8p0FnKzfW88i8kYiYyQO\n=eDLS\n-----END PGP SIGNATURE-----", "payload": "tree 8d6250638b225fc1ba6727cda06a0996193e3b01\nparent abd2c7ebfb47b3e2dbbb3ce3a7a54ef3847bb7dc\nauthor hyd-dev <yd-huang@outlook.com> 1614516247 +0800\ncommitter hyd-dev <yd-huang@outlook.com> 1614517844 +0800\n\nFix false positives on procedural macros of `missing_inline_in_public_items` lint\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da3a57377ea34c1ddb0c0c41defb456b8dceed53", "html_url": "https://github.com/rust-lang/rust/commit/da3a57377ea34c1ddb0c0c41defb456b8dceed53", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da3a57377ea34c1ddb0c0c41defb456b8dceed53/comments", "author": null, "committer": null, "parents": [{"sha": "abd2c7ebfb47b3e2dbbb3ce3a7a54ef3847bb7dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/abd2c7ebfb47b3e2dbbb3ce3a7a54ef3847bb7dc", "html_url": "https://github.com/rust-lang/rust/commit/abd2c7ebfb47b3e2dbbb3ce3a7a54ef3847bb7dc"}], "stats": {"total": 36, "additions": 32, "deletions": 4}, "files": [{"sha": "2448325e899803d830ea38b576ede5bec6ffa56b", "filename": "clippy_lints/src/missing_inline.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/da3a57377ea34c1ddb0c0c41defb456b8dceed53/clippy_lints%2Fsrc%2Fmissing_inline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da3a57377ea34c1ddb0c0c41defb456b8dceed53/clippy_lints%2Fsrc%2Fmissing_inline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_inline.rs?ref=da3a57377ea34c1ddb0c0c41defb456b8dceed53", "patch": "@@ -69,21 +69,21 @@ fn check_missing_inline_attrs(cx: &LateContext<'_>, attrs: &[ast::Attribute], sp\n     }\n }\n \n-fn is_executable(cx: &LateContext<'_>) -> bool {\n+fn is_executable_or_proc_macro(cx: &LateContext<'_>) -> bool {\n     use rustc_session::config::CrateType;\n \n     cx.tcx\n         .sess\n         .crate_types()\n         .iter()\n-        .any(|t: &CrateType| matches!(t, CrateType::Executable))\n+        .any(|t: &CrateType| matches!(t, CrateType::Executable | CrateType::ProcMacro))\n }\n \n declare_lint_pass!(MissingInline => [MISSING_INLINE_IN_PUBLIC_ITEMS]);\n \n impl<'tcx> LateLintPass<'tcx> for MissingInline {\n     fn check_item(&mut self, cx: &LateContext<'tcx>, it: &'tcx hir::Item<'_>) {\n-        if rustc_middle::lint::in_external_macro(cx.sess(), it.span) || is_executable(cx) {\n+        if rustc_middle::lint::in_external_macro(cx.sess(), it.span) || is_executable_or_proc_macro(cx) {\n             return;\n         }\n \n@@ -133,7 +133,7 @@ impl<'tcx> LateLintPass<'tcx> for MissingInline {\n \n     fn check_impl_item(&mut self, cx: &LateContext<'tcx>, impl_item: &'tcx hir::ImplItem<'_>) {\n         use rustc_middle::ty::{ImplContainer, TraitContainer};\n-        if rustc_middle::lint::in_external_macro(cx.sess(), impl_item.span) || is_executable(cx) {\n+        if rustc_middle::lint::in_external_macro(cx.sess(), impl_item.span) || is_executable_or_proc_macro(cx) {\n             return;\n         }\n "}, {"sha": "6e0400ac935bb1e1df78e3336e75e2d3ec76b094", "filename": "tests/ui/missing_inline_executable.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/da3a57377ea34c1ddb0c0c41defb456b8dceed53/tests%2Fui%2Fmissing_inline_executable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da3a57377ea34c1ddb0c0c41defb456b8dceed53/tests%2Fui%2Fmissing_inline_executable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing_inline_executable.rs?ref=da3a57377ea34c1ddb0c0c41defb456b8dceed53", "patch": "@@ -0,0 +1,5 @@\n+#![warn(clippy::missing_inline_in_public_items)]\n+\n+pub fn foo() {}\n+\n+fn main() {}"}, {"sha": "3c68fb905f12d2db85b8509c0f2d2551fc111696", "filename": "tests/ui/missing_inline_proc_macro.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/da3a57377ea34c1ddb0c0c41defb456b8dceed53/tests%2Fui%2Fmissing_inline_proc_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da3a57377ea34c1ddb0c0c41defb456b8dceed53/tests%2Fui%2Fmissing_inline_proc_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing_inline_proc_macro.rs?ref=da3a57377ea34c1ddb0c0c41defb456b8dceed53", "patch": "@@ -0,0 +1,23 @@\n+#![warn(clippy::missing_inline_in_public_items)]\n+#![crate_type = \"proc-macro\"]\n+\n+extern crate proc_macro;\n+\n+use proc_macro::TokenStream;\n+\n+fn _foo() {}\n+\n+#[proc_macro]\n+pub fn function_like(_: TokenStream) -> TokenStream {\n+    TokenStream::new()\n+}\n+\n+#[proc_macro_attribute]\n+pub fn attribute(_: TokenStream, _: TokenStream) -> TokenStream {\n+    TokenStream::new()\n+}\n+\n+#[proc_macro_derive(Derive)]\n+pub fn derive(_: TokenStream) -> TokenStream {\n+    TokenStream::new()\n+}"}]}