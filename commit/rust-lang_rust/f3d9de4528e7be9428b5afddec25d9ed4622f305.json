{"sha": "f3d9de4528e7be9428b5afddec25d9ed4622f305", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzZDlkZTQ1MjhlN2JlOTQyOGI1YWZkZGVjMjVkOWVkNDYyMmYzMDU=", "commit": {"author": {"name": "Jake Goulding", "email": "jake.goulding@gmail.com", "date": "2016-06-09T13:57:22Z"}, "committer": {"name": "Jake Goulding", "email": "jake.goulding@gmail.com", "date": "2016-06-09T19:59:27Z"}, "message": "Remove unneeded indirection of GET_ARCHIVE", "tree": {"sha": "30af972e98e2d642a222433f460a889c9bfd69d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30af972e98e2d642a222433f460a889c9bfd69d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3d9de4528e7be9428b5afddec25d9ed4622f305", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3d9de4528e7be9428b5afddec25d9ed4622f305", "html_url": "https://github.com/rust-lang/rust/commit/f3d9de4528e7be9428b5afddec25d9ed4622f305", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3d9de4528e7be9428b5afddec25d9ed4622f305/comments", "author": {"login": "shepmaster", "id": 174509, "node_id": "MDQ6VXNlcjE3NDUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/174509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shepmaster", "html_url": "https://github.com/shepmaster", "followers_url": "https://api.github.com/users/shepmaster/followers", "following_url": "https://api.github.com/users/shepmaster/following{/other_user}", "gists_url": "https://api.github.com/users/shepmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/shepmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shepmaster/subscriptions", "organizations_url": "https://api.github.com/users/shepmaster/orgs", "repos_url": "https://api.github.com/users/shepmaster/repos", "events_url": "https://api.github.com/users/shepmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/shepmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "shepmaster", "id": 174509, "node_id": "MDQ6VXNlcjE3NDUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/174509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shepmaster", "html_url": "https://github.com/shepmaster", "followers_url": "https://api.github.com/users/shepmaster/followers", "following_url": "https://api.github.com/users/shepmaster/following{/other_user}", "gists_url": "https://api.github.com/users/shepmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/shepmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shepmaster/subscriptions", "organizations_url": "https://api.github.com/users/shepmaster/orgs", "repos_url": "https://api.github.com/users/shepmaster/repos", "events_url": "https://api.github.com/users/shepmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/shepmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f01329e0eb48c9481e91ff1749367a4c0048d70", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f01329e0eb48c9481e91ff1749367a4c0048d70", "html_url": "https://github.com/rust-lang/rust/commit/4f01329e0eb48c9481e91ff1749367a4c0048d70"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "1e7b04c814cee2ae3f85d19d6a88f93dbcaf933b", "filename": "src/rustllvm/ArchiveWrapper.cpp", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f3d9de4528e7be9428b5afddec25d9ed4622f305/src%2Frustllvm%2FArchiveWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/f3d9de4528e7be9428b5afddec25d9ed4622f305/src%2Frustllvm%2FArchiveWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FArchiveWrapper.cpp?ref=f3d9de4528e7be9428b5afddec25d9ed4622f305", "patch": "@@ -32,7 +32,6 @@ struct LLVMRustArchiveMember {\n };\n \n typedef OwningBinary<Archive> RustArchive;\n-#define GET_ARCHIVE(a) ((a)->getBinary())\n \n extern \"C\" void*\n LLVMRustOpenArchive(char *path) {\n@@ -70,7 +69,7 @@ struct RustArchiveIterator {\n \n extern \"C\" RustArchiveIterator*\n LLVMRustArchiveIteratorNew(RustArchive *ra) {\n-    Archive *ar = GET_ARCHIVE(ra);\n+    Archive *ar = ra->getBinary();\n     RustArchiveIterator *rai = new RustArchiveIterator();\n     rai->cur = ar->child_begin();\n     rai->end = ar->child_end();"}]}