{"sha": "17b01041c24d5537a3f82a81f7c6642b9db48521", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3YjAxMDQxYzI0ZDU1MzdhM2Y4MmE4MWY3YzY2NDJiOWRiNDg1MjE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-02-01T00:17:48Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-02-01T14:44:49Z"}, "message": "librustc: Remove one more `@str` from librustc", "tree": {"sha": "ab7b4448d8acf23c70c7b38a75b915b6805366c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab7b4448d8acf23c70c7b38a75b915b6805366c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17b01041c24d5537a3f82a81f7c6642b9db48521", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17b01041c24d5537a3f82a81f7c6642b9db48521", "html_url": "https://github.com/rust-lang/rust/commit/17b01041c24d5537a3f82a81f7c6642b9db48521", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17b01041c24d5537a3f82a81f7c6642b9db48521/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4018d77f22c6c620b3cdc6cbf9c86284bbb7a050", "url": "https://api.github.com/repos/rust-lang/rust/commits/4018d77f22c6c620b3cdc6cbf9c86284bbb7a050", "html_url": "https://github.com/rust-lang/rust/commit/4018d77f22c6c620b3cdc6cbf9c86284bbb7a050"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "00b878a7bf7429751dcdf1c8e178203b36043de2", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/17b01041c24d5537a3f82a81f7c6642b9db48521/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17b01041c24d5537a3f82a81f7c6642b9db48521/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=17b01041c24d5537a3f82a81f7c6642b9db48521", "patch": "@@ -1112,17 +1112,17 @@ pub fn build_output_filenames(input: &Input,\n \n           let mut stem = match *input {\n               // FIXME (#9639): This needs to handle non-utf8 paths\n-              FileInput(ref ifile) => (*ifile).filestem_str().unwrap().to_managed(),\n-              StrInput(_) => @\"rust_out\"\n+              FileInput(ref ifile) => {\n+                  (*ifile).filestem_str().unwrap().to_str()\n+              }\n+              StrInput(_) => ~\"rust_out\"\n           };\n \n           // If a crateid is present, we use it as the link name\n           let crateid = attr::find_crateid(attrs);\n           match crateid {\n               None => {}\n-              Some(crateid) => {\n-                  stem = crateid.name.to_managed()\n-              }\n+              Some(crateid) => stem = crateid.name.to_str(),\n           }\n \n           if sess.building_library.get() {"}]}