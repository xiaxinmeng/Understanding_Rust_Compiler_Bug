{"sha": "a1c831be25100672d1ab8757bac90748ce935bcd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExYzgzMWJlMjUxMDA2NzJkMWFiODc1N2JhYzkwNzQ4Y2U5MzViY2Q=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-12T00:50:44Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-12T01:18:53Z"}, "message": "manual: avoid describing 'assert' as 'like check', note future removal.", "tree": {"sha": "ae86745f458ed59f2c37dfc1026531a2c5c5a254", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae86745f458ed59f2c37dfc1026531a2c5c5a254"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1c831be25100672d1ab8757bac90748ce935bcd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1c831be25100672d1ab8757bac90748ce935bcd", "html_url": "https://github.com/rust-lang/rust/commit/a1c831be25100672d1ab8757bac90748ce935bcd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1c831be25100672d1ab8757bac90748ce935bcd/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73d4417dc75b32d3a22f1a747afa3afea6e52252", "url": "https://api.github.com/repos/rust-lang/rust/commits/73d4417dc75b32d3a22f1a747afa3afea6e52252", "html_url": "https://github.com/rust-lang/rust/commit/73d4417dc75b32d3a22f1a747afa3afea6e52252"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "372f87ff0f8cbca616f6496875411f9bf179b285", "filename": "doc/rust.md", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a1c831be25100672d1ab8757bac90748ce935bcd/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/a1c831be25100672d1ab8757bac90748ce935bcd/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=a1c831be25100672d1ab8757bac90748ce935bcd", "patch": "@@ -2404,11 +2404,10 @@ It is therefore recommended to use the macro forms of logging (`error!`, `debug!\n assert_expr : \"assert\" expr ;\n ~~~~~~~~\n \n-An `assert` expression is similar to a `check` expression, except\n-the condition may be any boolean-typed expression, and the compiler makes no\n-use of the knowledge that the condition holds if the program continues to\n-execute after the `assert`.\n+> **Note:** In future versions of Rust, `assert` will be changed from a full expression to a macro.\n \n+An `assert` expression causes the program to fail if its `expr` argument evaluates to `false`.\n+The failure carries string representation of the false expression.\n \n # Type system\n "}]}