{"sha": "d915606d50c273b084bf71bff1f31e347f0ccdee", "node_id": "C_kwDOAAsO6NoAKGQ5MTU2MDZkNTBjMjczYjA4NGJmNzFiZmYxZjMxZTM0N2YwY2NkZWU", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-02-16T03:59:04Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-03-24T05:31:57Z"}, "message": "Remove error recovery todos", "tree": {"sha": "59f9ba2532e122d6e8b32e349242af0242056d56", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59f9ba2532e122d6e8b32e349242af0242056d56"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d915606d50c273b084bf71bff1f31e347f0ccdee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d915606d50c273b084bf71bff1f31e347f0ccdee", "html_url": "https://github.com/rust-lang/rust/commit/d915606d50c273b084bf71bff1f31e347f0ccdee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d915606d50c273b084bf71bff1f31e347f0ccdee/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9cc43aa66911b38e9da68de6c2c7ee1f37911ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9cc43aa66911b38e9da68de6c2c7ee1f37911ea", "html_url": "https://github.com/rust-lang/rust/commit/c9cc43aa66911b38e9da68de6c2c7ee1f37911ea"}], "stats": {"total": 24, "additions": 9, "deletions": 15}, "files": [{"sha": "b29ea808d3240e908629afaf9a8c2b0314e5ffbd", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 9, "deletions": 15, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/d915606d50c273b084bf71bff1f31e347f0ccdee/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d915606d50c273b084bf71bff1f31e347f0ccdee/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=d915606d50c273b084bf71bff1f31e347f0ccdee", "patch": "@@ -1294,8 +1294,8 @@ impl<'a> Parser<'a> {\n \n     fn prefix_inc_dec_suggest_and_recover(\n         &mut self,\n-        base: P<Expr>,\n-        mut err: DiagnosticBuilder<'_>,\n+        _base: P<Expr>,\n+        mut err: DiagnosticBuilder<'a>,\n         kind: IncDecRecovery,\n         ident: Ident,\n         (pre_span, post_span): (Span, Span),\n@@ -1308,15 +1308,13 @@ impl<'a> Parser<'a> {\n             ],\n             Applicability::MachineApplicable,\n         );\n-        err.emit();\n-        // TODO: recover\n-        Ok(base)\n+        Err(err)\n     }\n \n     fn postfix_inc_dec_suggest_and_recover(\n         &mut self,\n-        base: P<Expr>,\n-        mut err: DiagnosticBuilder<'_>,\n+        _base: P<Expr>,\n+        mut err: DiagnosticBuilder<'a>,\n         kind: IncDecRecovery,\n         ident: Ident,\n         (pre_span, post_span): (Span, Span),\n@@ -1329,15 +1327,13 @@ impl<'a> Parser<'a> {\n             ],\n             Applicability::MachineApplicable,\n         );\n-        err.emit();\n-        // TODO: recover\n-        Ok(base)\n+        Err(err)\n     }\n \n     fn inc_dec_standalone_recovery(\n         &mut self,\n-        base: P<Expr>,\n-        mut err: DiagnosticBuilder<'_>,\n+        _base: P<Expr>,\n+        mut err: DiagnosticBuilder<'a>,\n         kind: IncDecRecovery,\n         _ident: Ident,\n         (pre_span, post_span): (Span, Span),\n@@ -1347,9 +1343,7 @@ impl<'a> Parser<'a> {\n             vec![(pre_span, String::new()), (post_span, format!(\" {}= 1\", kind.op.chr()))],\n             Applicability::MachineApplicable,\n         );\n-        err.emit();\n-        // TODO: recover\n-        Ok(base)\n+        Err(err)\n     }\n \n     /// Tries to recover from associated item paths like `[T]::AssocItem` / `(T, U)::AssocItem`."}]}