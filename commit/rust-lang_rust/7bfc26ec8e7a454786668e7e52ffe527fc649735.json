{"sha": "7bfc26ec8e7a454786668e7e52ffe527fc649735", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiZmMyNmVjOGU3YTQ1NDc4NjY2OGU3ZTUyZmZlNTI3ZmM2NDk3MzU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-12T09:13:53Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-12T09:13:53Z"}, "message": "Auto merge of #7558 - flip1995:rustup, r=flip1995\n\nRustup\n\nr? `@ghost`\n\nchangelog: none", "tree": {"sha": "a6c7910f0bf64f9882450c356a3bdcdd0c333775", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6c7910f0bf64f9882450c356a3bdcdd0c333775"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7bfc26ec8e7a454786668e7e52ffe527fc649735", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7bfc26ec8e7a454786668e7e52ffe527fc649735", "html_url": "https://github.com/rust-lang/rust/commit/7bfc26ec8e7a454786668e7e52ffe527fc649735", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7bfc26ec8e7a454786668e7e52ffe527fc649735/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62f4187ed01c3c6ef10485d2549d501fe23ca012", "url": "https://api.github.com/repos/rust-lang/rust/commits/62f4187ed01c3c6ef10485d2549d501fe23ca012", "html_url": "https://github.com/rust-lang/rust/commit/62f4187ed01c3c6ef10485d2549d501fe23ca012"}, {"sha": "c3995b5edcf898111ce1ab05df3d0e72088f8a00", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3995b5edcf898111ce1ab05df3d0e72088f8a00", "html_url": "https://github.com/rust-lang/rust/commit/c3995b5edcf898111ce1ab05df3d0e72088f8a00"}], "stats": {"total": 2019, "additions": 1025, "deletions": 994}, "files": [{"sha": "16b6c207a5f19bc1c77297f8dc8e2cfdee2b9c81", "filename": "Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -1,7 +1,6 @@\n [package]\n name = \"clippy\"\n version = \"0.1.56\"\n-authors = [\"The Rust Clippy Developers\"]\n description = \"A bunch of helpful lints to avoid common pitfalls in Rust\"\n repository = \"https://github.com/rust-lang/rust-clippy\"\n readme = \"README.md\""}, {"sha": "0fae8c7b9afcfbf47778d814f47815d9391d7d89", "filename": "clippy_dev/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_dev%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_dev%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2FCargo.toml?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -1,7 +1,6 @@\n [package]\n name = \"clippy_dev\"\n version = \"0.0.1\"\n-authors = [\"The Rust Clippy Developers\"]\n edition = \"2018\"\n \n [dependencies]"}, {"sha": "a1707bad5c2680bf266a59284aa26e4c6ffad368", "filename": "clippy_dummy/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_dummy%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_dummy%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dummy%2FCargo.toml?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -1,7 +1,6 @@\n [package]\n name = \"clippy_dummy\" # rename to clippy before publishing\n version = \"0.0.303\"\n-authors = [\"The Rust Clippy Developers\"]\n edition = \"2018\"\n readme = \"crates-readme.md\"\n description = \"A bunch of helpful lints to avoid common pitfalls in Rust.\""}, {"sha": "a3b92e1faa1a9d908932a411c21e4f098812f017", "filename": "clippy_lints/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_lints%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_lints%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2FCargo.toml?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -3,7 +3,6 @@ name = \"clippy_lints\"\n # begin automatic update\n version = \"0.1.56\"\n # end automatic update\n-authors = [\"The Rust Clippy Developers\"]\n description = \"A bunch of helpful lints to avoid common pitfalls in Rust\"\n repository = \"https://github.com/rust-lang/rust-clippy\"\n readme = \"README.md\""}, {"sha": "75561cfde369bc73bfd871eebfc42f55671a46bf", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 7, "deletions": 21, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -21,6 +21,7 @@ use rustc_parse::maybe_new_parser_from_source_str;\n use rustc_parse::parser::ForceCollect;\n use rustc_session::parse::ParseSess;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n+use rustc_span::def_id::LocalDefId;\n use rustc_span::edition::Edition;\n use rustc_span::source_map::{BytePos, FilePathMapping, MultiSpan, SourceMap, Span};\n use rustc_span::{sym, FileName, Pos};\n@@ -229,15 +230,7 @@ impl<'tcx> LateLintPass<'tcx> for DocMarkdown {\n                         panic_span: None,\n                     };\n                     fpu.visit_expr(&body.value);\n-                    lint_for_missing_headers(\n-                        cx,\n-                        item.hir_id(),\n-                        item.span,\n-                        sig,\n-                        headers,\n-                        Some(body_id),\n-                        fpu.panic_span,\n-                    );\n+                    lint_for_missing_headers(cx, item.def_id, item.span, sig, headers, Some(body_id), fpu.panic_span);\n                 }\n             },\n             hir::ItemKind::Impl(ref impl_) => {\n@@ -258,7 +251,7 @@ impl<'tcx> LateLintPass<'tcx> for DocMarkdown {\n         let headers = check_attrs(cx, &self.valid_idents, attrs);\n         if let hir::TraitItemKind::Fn(ref sig, ..) = item.kind {\n             if !in_external_macro(cx.tcx.sess, item.span) {\n-                lint_for_missing_headers(cx, item.hir_id(), item.span, sig, headers, None, None);\n+                lint_for_missing_headers(cx, item.def_id, item.span, sig, headers, None, None);\n             }\n         }\n     }\n@@ -277,29 +270,21 @@ impl<'tcx> LateLintPass<'tcx> for DocMarkdown {\n                 panic_span: None,\n             };\n             fpu.visit_expr(&body.value);\n-            lint_for_missing_headers(\n-                cx,\n-                item.hir_id(),\n-                item.span,\n-                sig,\n-                headers,\n-                Some(body_id),\n-                fpu.panic_span,\n-            );\n+            lint_for_missing_headers(cx, item.def_id, item.span, sig, headers, Some(body_id), fpu.panic_span);\n         }\n     }\n }\n \n fn lint_for_missing_headers<'tcx>(\n     cx: &LateContext<'tcx>,\n-    hir_id: hir::HirId,\n+    def_id: LocalDefId,\n     span: impl Into<MultiSpan> + Copy,\n     sig: &hir::FnSig<'_>,\n     headers: DocHeaders,\n     body_id: Option<hir::BodyId>,\n     panic_span: Option<Span>,\n ) {\n-    if !cx.access_levels.is_exported(hir_id) {\n+    if !cx.access_levels.is_exported(def_id) {\n         return; // Private functions do not require doc comments\n     }\n     if !headers.safety && sig.header.unsafety == hir::Unsafety::Unsafe {\n@@ -321,6 +306,7 @@ fn lint_for_missing_headers<'tcx>(\n         );\n     }\n     if !headers.errors {\n+        let hir_id = cx.tcx.hir().local_def_id_to_hir_id(def_id);\n         if is_type_diagnostic_item(cx, return_ty(cx, hir_id), sym::result_type) {\n             span_lint(\n                 cx,"}, {"sha": "174260fabd228688c47943efa52d9cae07f84481", "filename": "clippy_lints/src/enum_variants.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_lints%2Fsrc%2Fenum_variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_lints%2Fsrc%2Fenum_variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_variants.rs?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -297,7 +297,7 @@ impl LateLintPass<'_> for EnumVariantNames {\n             }\n         }\n         if let ItemKind::Enum(ref def, _) = item.kind {\n-            if !(self.avoid_breaking_exported_api && cx.access_levels.is_exported(item.hir_id())) {\n+            if !(self.avoid_breaking_exported_api && cx.access_levels.is_exported(item.def_id)) {\n                 check_variant(cx, self.threshold, def, &item_name, item_name_chars, item.span);\n             }\n         }"}, {"sha": "bb4684ce38b3d7eba4b74988aa8fe5cad9ddf05f", "filename": "clippy_lints/src/exhaustive_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_lints%2Fsrc%2Fexhaustive_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_lints%2Fsrc%2Fexhaustive_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fexhaustive_items.rs?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -71,7 +71,7 @@ impl LateLintPass<'_> for ExhaustiveItems {\n     fn check_item(&mut self, cx: &LateContext<'_>, item: &Item<'_>) {\n         if_chain! {\n             if let ItemKind::Enum(..) | ItemKind::Struct(..) = item.kind;\n-            if cx.access_levels.is_exported(item.hir_id());\n+            if cx.access_levels.is_exported(item.def_id);\n             let attrs = cx.tcx.hir().attrs(item.hir_id());\n             if !attrs.iter().any(|a| a.has_name(sym::non_exhaustive));\n             then {"}, {"sha": "ea6193acbe84518ade96aef8d33277b5c5bedac7", "filename": "clippy_lints/src/functions/must_use.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_lints%2Fsrc%2Ffunctions%2Fmust_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_lints%2Fsrc%2Ffunctions%2Fmust_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions%2Fmust_use.rs?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -1,6 +1,6 @@\n use rustc_ast::ast::Attribute;\n use rustc_errors::Applicability;\n-use rustc_hir::def_id::DefIdSet;\n+use rustc_hir::def_id::{DefIdSet, LocalDefId};\n use rustc_hir::{self as hir, def::Res, intravisit, QPath};\n use rustc_lint::{LateContext, LintContext};\n use rustc_middle::{\n@@ -22,7 +22,7 @@ pub(super) fn check_item(cx: &LateContext<'tcx>, item: &'tcx hir::Item<'_>) {\n     let attrs = cx.tcx.hir().attrs(item.hir_id());\n     let attr = must_use_attr(attrs);\n     if let hir::ItemKind::Fn(ref sig, ref _generics, ref body_id) = item.kind {\n-        let is_public = cx.access_levels.is_exported(item.hir_id());\n+        let is_public = cx.access_levels.is_exported(item.def_id);\n         let fn_header_span = item.span.with_hi(sig.decl.output.span().hi());\n         if let Some(attr) = attr {\n             check_needless_must_use(cx, sig.decl, item.hir_id(), item.span, fn_header_span, attr);\n@@ -33,7 +33,7 @@ pub(super) fn check_item(cx: &LateContext<'tcx>, item: &'tcx hir::Item<'_>) {\n                 sig.decl,\n                 cx.tcx.hir().body(*body_id),\n                 item.span,\n-                item.hir_id(),\n+                item.def_id,\n                 item.span.with_hi(sig.decl.output.span().hi()),\n                 \"this function could have a `#[must_use]` attribute\",\n             );\n@@ -43,7 +43,7 @@ pub(super) fn check_item(cx: &LateContext<'tcx>, item: &'tcx hir::Item<'_>) {\n \n pub(super) fn check_impl_item(cx: &LateContext<'tcx>, item: &'tcx hir::ImplItem<'_>) {\n     if let hir::ImplItemKind::Fn(ref sig, ref body_id) = item.kind {\n-        let is_public = cx.access_levels.is_exported(item.hir_id());\n+        let is_public = cx.access_levels.is_exported(item.def_id);\n         let fn_header_span = item.span.with_hi(sig.decl.output.span().hi());\n         let attrs = cx.tcx.hir().attrs(item.hir_id());\n         let attr = must_use_attr(attrs);\n@@ -55,7 +55,7 @@ pub(super) fn check_impl_item(cx: &LateContext<'tcx>, item: &'tcx hir::ImplItem<\n                 sig.decl,\n                 cx.tcx.hir().body(*body_id),\n                 item.span,\n-                item.hir_id(),\n+                item.def_id,\n                 item.span.with_hi(sig.decl.output.span().hi()),\n                 \"this method could have a `#[must_use]` attribute\",\n             );\n@@ -65,7 +65,7 @@ pub(super) fn check_impl_item(cx: &LateContext<'tcx>, item: &'tcx hir::ImplItem<\n \n pub(super) fn check_trait_item(cx: &LateContext<'tcx>, item: &'tcx hir::TraitItem<'_>) {\n     if let hir::TraitItemKind::Fn(ref sig, ref eid) = item.kind {\n-        let is_public = cx.access_levels.is_exported(item.hir_id());\n+        let is_public = cx.access_levels.is_exported(item.def_id);\n         let fn_header_span = item.span.with_hi(sig.decl.output.span().hi());\n \n         let attrs = cx.tcx.hir().attrs(item.hir_id());\n@@ -80,7 +80,7 @@ pub(super) fn check_trait_item(cx: &LateContext<'tcx>, item: &'tcx hir::TraitIte\n                     sig.decl,\n                     body,\n                     item.span,\n-                    item.hir_id(),\n+                    item.def_id,\n                     item.span.with_hi(sig.decl.output.span().hi()),\n                     \"this method could have a `#[must_use]` attribute\",\n                 );\n@@ -132,7 +132,7 @@ fn check_must_use_candidate<'tcx>(\n     decl: &'tcx hir::FnDecl<'_>,\n     body: &'tcx hir::Body<'_>,\n     item_span: Span,\n-    item_id: hir::HirId,\n+    item_id: LocalDefId,\n     fn_span: Span,\n     msg: &str,\n ) {\n@@ -141,7 +141,7 @@ fn check_must_use_candidate<'tcx>(\n         || in_external_macro(cx.sess(), item_span)\n         || returns_unit(decl)\n         || !cx.access_levels.is_exported(item_id)\n-        || is_must_use_ty(cx, return_ty(cx, item_id))\n+        || is_must_use_ty(cx, return_ty(cx, cx.tcx.hir().local_def_id_to_hir_id(item_id)))\n     {\n         return;\n     }"}, {"sha": "f83789bb2199e0e2bfff2fb35eb2d64297c1e7ac", "filename": "clippy_lints/src/functions/not_unsafe_ptr_arg_deref.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_lints%2Fsrc%2Ffunctions%2Fnot_unsafe_ptr_arg_deref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_lints%2Fsrc%2Ffunctions%2Fnot_unsafe_ptr_arg_deref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions%2Fnot_unsafe_ptr_arg_deref.rs?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -1,6 +1,7 @@\n use rustc_hir::{self as hir, intravisit, HirIdSet};\n use rustc_lint::LateContext;\n use rustc_middle::{hir::map::Map, ty};\n+use rustc_span::def_id::LocalDefId;\n \n use clippy_utils::diagnostics::span_lint;\n use clippy_utils::ty::type_is_unsafe_function;\n@@ -21,13 +22,13 @@ pub(super) fn check_fn(\n         intravisit::FnKind::Closure => return,\n     };\n \n-    check_raw_ptr(cx, unsafety, decl, body, hir_id);\n+    check_raw_ptr(cx, unsafety, decl, body, cx.tcx.hir().local_def_id(hir_id));\n }\n \n pub(super) fn check_trait_item(cx: &LateContext<'tcx>, item: &'tcx hir::TraitItem<'_>) {\n     if let hir::TraitItemKind::Fn(ref sig, hir::TraitFn::Provided(eid)) = item.kind {\n         let body = cx.tcx.hir().body(eid);\n-        check_raw_ptr(cx, sig.header.unsafety, sig.decl, body, item.hir_id());\n+        check_raw_ptr(cx, sig.header.unsafety, sig.decl, body, item.def_id);\n     }\n }\n \n@@ -36,10 +37,10 @@ fn check_raw_ptr(\n     unsafety: hir::Unsafety,\n     decl: &'tcx hir::FnDecl<'tcx>,\n     body: &'tcx hir::Body<'tcx>,\n-    hir_id: hir::HirId,\n+    def_id: LocalDefId,\n ) {\n     let expr = &body.value;\n-    if unsafety == hir::Unsafety::Normal && cx.access_levels.is_exported(hir_id) {\n+    if unsafety == hir::Unsafety::Normal && cx.access_levels.is_exported(def_id) {\n         let raw_ptrs = iter_input_pats(decl, body)\n             .zip(decl.inputs.iter())\n             .filter_map(|(arg, ty)| raw_ptr_arg(arg, ty))"}, {"sha": "13863ec8381bba34f37939e66b4e3abe8cdbe40b", "filename": "clippy_lints/src/functions/result_unit_err.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_lints%2Fsrc%2Ffunctions%2Fresult_unit_err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_lints%2Fsrc%2Ffunctions%2Fresult_unit_err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions%2Fresult_unit_err.rs?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -15,7 +15,7 @@ use super::RESULT_UNIT_ERR;\n \n pub(super) fn check_item(cx: &LateContext<'tcx>, item: &'tcx hir::Item<'_>) {\n     if let hir::ItemKind::Fn(ref sig, ref _generics, _) = item.kind {\n-        let is_public = cx.access_levels.is_exported(item.hir_id());\n+        let is_public = cx.access_levels.is_exported(item.def_id);\n         let fn_header_span = item.span.with_hi(sig.decl.output.span().hi());\n         if is_public {\n             check_result_unit_err(cx, sig.decl, item.span, fn_header_span);\n@@ -25,7 +25,7 @@ pub(super) fn check_item(cx: &LateContext<'tcx>, item: &'tcx hir::Item<'_>) {\n \n pub(super) fn check_impl_item(cx: &LateContext<'tcx>, item: &'tcx hir::ImplItem<'_>) {\n     if let hir::ImplItemKind::Fn(ref sig, _) = item.kind {\n-        let is_public = cx.access_levels.is_exported(item.hir_id());\n+        let is_public = cx.access_levels.is_exported(item.def_id);\n         let fn_header_span = item.span.with_hi(sig.decl.output.span().hi());\n         if is_public && trait_ref_of_method(cx, item.hir_id()).is_none() {\n             check_result_unit_err(cx, sig.decl, item.span, fn_header_span);\n@@ -35,7 +35,7 @@ pub(super) fn check_impl_item(cx: &LateContext<'tcx>, item: &'tcx hir::ImplItem<\n \n pub(super) fn check_trait_item(cx: &LateContext<'tcx>, item: &'tcx hir::TraitItem<'_>) {\n     if let hir::TraitItemKind::Fn(ref sig, _) = item.kind {\n-        let is_public = cx.access_levels.is_exported(item.hir_id());\n+        let is_public = cx.access_levels.is_exported(item.def_id);\n         let fn_header_span = item.span.with_hi(sig.decl.output.span().hi());\n         if is_public {\n             check_result_unit_err(cx, sig.decl, item.span, fn_header_span);"}, {"sha": "6b407c7bb6724b5d288ab5dbb61d2af55960c941", "filename": "clippy_lints/src/implicit_hasher.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_lints%2Fsrc%2Fimplicit_hasher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_lints%2Fsrc%2Fimplicit_hasher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fimplicit_hasher.rs?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -112,7 +112,7 @@ impl<'tcx> LateLintPass<'tcx> for ImplicitHasher {\n             }\n         }\n \n-        if !cx.access_levels.is_exported(item.hir_id()) {\n+        if !cx.access_levels.is_exported(item.def_id) {\n             return;\n         }\n "}, {"sha": "a519ad90df54a2c84b5858e5234fe033cc3b95e7", "filename": "clippy_lints/src/len_zero.rs", "status": "modified", "additions": 11, "deletions": 18, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_lints%2Fsrc%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_lints%2Fsrc%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flen_zero.rs?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -131,7 +131,7 @@ impl<'tcx> LateLintPass<'tcx> for LenZero {\n             if item.ident.name == sym::len;\n             if let ImplItemKind::Fn(sig, _) = &item.kind;\n             if sig.decl.implicit_self.has_implicit_self();\n-            if cx.access_levels.is_exported(item.hir_id());\n+            if cx.access_levels.is_exported(item.def_id);\n             if matches!(sig.decl.output, FnRetTy::Return(_));\n             if let Some(imp) = get_parent_as_impl(cx.tcx, item.hir_id());\n             if imp.of_trait.is_none();\n@@ -207,8 +207,7 @@ fn check_trait_items(cx: &LateContext<'_>, visited_trait: &Item<'_>, trait_items\n         }\n     }\n \n-    if cx.access_levels.is_exported(visited_trait.hir_id())\n-        && trait_items.iter().any(|i| is_named_self(cx, i, sym::len))\n+    if cx.access_levels.is_exported(visited_trait.def_id) && trait_items.iter().any(|i| is_named_self(cx, i, sym::len))\n     {\n         let mut current_and_super_traits = DefIdSet::default();\n         fill_trait_set(visited_trait.def_id.to_def_id(), &mut current_and_super_traits, cx);\n@@ -331,21 +330,15 @@ fn check_for_is_empty(\n             None,\n             None,\n         ),\n-        Some(is_empty)\n-            if !cx\n-                .access_levels\n-                .is_exported(cx.tcx.hir().local_def_id_to_hir_id(is_empty.def_id.expect_local())) =>\n-        {\n-            (\n-                format!(\n-                    \"{} `{}` has a public `len` method, but a private `is_empty` method\",\n-                    item_kind,\n-                    item_name.as_str(),\n-                ),\n-                Some(cx.tcx.def_span(is_empty.def_id)),\n-                None,\n-            )\n-        },\n+        Some(is_empty) if !cx.access_levels.is_exported(is_empty.def_id.expect_local()) => (\n+            format!(\n+                \"{} `{}` has a public `len` method, but a private `is_empty` method\",\n+                item_kind,\n+                item_name.as_str(),\n+            ),\n+            Some(cx.tcx.def_span(is_empty.def_id)),\n+            None,\n+        ),\n         Some(is_empty)\n             if !(is_empty.fn_has_self_parameter\n                 && check_is_empty_sig(cx.tcx.fn_sig(is_empty.def_id).skip_binder(), self_kind, output)) =>"}, {"sha": "91606ed3b2bb0d9bc83dfddb0085208451d78415", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -1930,7 +1930,7 @@ impl<'tcx> LateLintPass<'tcx> for Methods {\n \n             then {\n                 // if this impl block implements a trait, lint in trait definition instead\n-                if !implements_trait && cx.access_levels.is_exported(impl_item.hir_id()) {\n+                if !implements_trait && cx.access_levels.is_exported(impl_item.def_id) {\n                     // check missing trait implementations\n                     for method_config in &TRAIT_METHODS {\n                         if name == method_config.method_name &&\n@@ -1962,7 +1962,7 @@ impl<'tcx> LateLintPass<'tcx> for Methods {\n \n                 if sig.decl.implicit_self.has_implicit_self()\n                     && !(self.avoid_breaking_exported_api\n-                        && cx.access_levels.is_exported(impl_item.hir_id()))\n+                        && cx.access_levels.is_exported(impl_item.def_id))\n                 {\n                     wrong_self_convention::check(\n                         cx,"}, {"sha": "977e6d966e873779cd4d72e909278e2cbced50ea", "filename": "clippy_lints/src/missing_inline.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_lints%2Fsrc%2Fmissing_inline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_lints%2Fsrc%2Fmissing_inline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_inline.rs?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -87,7 +87,7 @@ impl<'tcx> LateLintPass<'tcx> for MissingInline {\n             return;\n         }\n \n-        if !cx.access_levels.is_exported(it.hir_id()) {\n+        if !cx.access_levels.is_exported(it.def_id) {\n             return;\n         }\n         match it.kind {\n@@ -140,7 +140,7 @@ impl<'tcx> LateLintPass<'tcx> for MissingInline {\n         }\n \n         // If the item being implemented is not exported, then we don't need #[inline]\n-        if !cx.access_levels.is_exported(impl_item.hir_id()) {\n+        if !cx.access_levels.is_exported(impl_item.def_id) {\n             return;\n         }\n \n@@ -155,7 +155,7 @@ impl<'tcx> LateLintPass<'tcx> for MissingInline {\n         };\n \n         if let Some(trait_def_id) = trait_def_id {\n-            if trait_def_id.is_local() && !cx.access_levels.is_exported(impl_item.hir_id()) {\n+            if trait_def_id.is_local() && !cx.access_levels.is_exported(impl_item.def_id) {\n                 // If a trait is being implemented for an item, and the\n                 // trait is not exported, we don't need #[inline]\n                 return;"}, {"sha": "0ad616a39d266bf9657b6875a0c05ce793b1348e", "filename": "clippy_lints/src/new_without_default.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_lints%2Fsrc%2Fnew_without_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_lints%2Fsrc%2Fnew_without_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnew_without_default.rs?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -99,7 +99,7 @@ impl<'tcx> LateLintPass<'tcx> for NewWithoutDefault {\n                         if_chain! {\n                             if sig.decl.inputs.is_empty();\n                             if name == sym::new;\n-                            if cx.access_levels.is_reachable(id);\n+                            if cx.access_levels.is_reachable(impl_item.def_id);\n                             let self_def_id = cx.tcx.hir().local_def_id(cx.tcx.hir().get_parent_item(id));\n                             let self_ty = cx.tcx.type_of(self_def_id);\n                             if TyS::same_type(self_ty, return_ty(cx, id));"}, {"sha": "157b18c1f6b1fb8a8287c653f54827552aef5cf9", "filename": "clippy_lints/src/pass_by_ref_or_value.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_lints%2Fsrc%2Fpass_by_ref_or_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_lints%2Fsrc%2Fpass_by_ref_or_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpass_by_ref_or_value.rs?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -14,6 +14,7 @@ use rustc_hir::{BindingAnnotation, Body, FnDecl, HirId, Impl, ItemKind, MutTy, M\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::ty;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n+use rustc_span::def_id::LocalDefId;\n use rustc_span::{sym, Span};\n use rustc_target::abi::LayoutOf;\n use rustc_target::spec::abi::Abi;\n@@ -134,13 +135,12 @@ impl<'tcx> PassByRefOrValue {\n         }\n     }\n \n-    fn check_poly_fn(&mut self, cx: &LateContext<'tcx>, hir_id: HirId, decl: &FnDecl<'_>, span: Option<Span>) {\n-        if self.avoid_breaking_exported_api && cx.access_levels.is_exported(hir_id) {\n+    fn check_poly_fn(&mut self, cx: &LateContext<'tcx>, def_id: LocalDefId, decl: &FnDecl<'_>, span: Option<Span>) {\n+        if self.avoid_breaking_exported_api && cx.access_levels.is_exported(def_id) {\n             return;\n         }\n-        let fn_def_id = cx.tcx.hir().local_def_id(hir_id);\n \n-        let fn_sig = cx.tcx.fn_sig(fn_def_id);\n+        let fn_sig = cx.tcx.fn_sig(def_id);\n         let fn_sig = cx.tcx.erase_late_bound_regions(fn_sig);\n \n         let fn_body = cx.enclosing_body.map(|id| cx.tcx.hir().body(id));\n@@ -231,7 +231,7 @@ impl<'tcx> LateLintPass<'tcx> for PassByRefOrValue {\n         }\n \n         if let hir::TraitItemKind::Fn(method_sig, _) = &item.kind {\n-            self.check_poly_fn(cx, item.hir_id(), &*method_sig.decl, None);\n+            self.check_poly_fn(cx, item.def_id, &*method_sig.decl, None);\n         }\n     }\n \n@@ -278,6 +278,6 @@ impl<'tcx> LateLintPass<'tcx> for PassByRefOrValue {\n             }\n         }\n \n-        self.check_poly_fn(cx, hir_id, decl, Some(span));\n+        self.check_poly_fn(cx, cx.tcx.hir().local_def_id(hir_id), decl, Some(span));\n     }\n }"}, {"sha": "ed2e1f90fa597a76737ddfaf9b38fc7bfd1cebc8", "filename": "clippy_lints/src/redundant_pub_crate.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_lints%2Fsrc%2Fredundant_pub_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_lints%2Fsrc%2Fredundant_pub_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_pub_crate.rs?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -41,7 +41,7 @@ impl_lint_pass!(RedundantPubCrate => [REDUNDANT_PUB_CRATE]);\n impl<'tcx> LateLintPass<'tcx> for RedundantPubCrate {\n     fn check_item(&mut self, cx: &LateContext<'tcx>, item: &'tcx Item<'tcx>) {\n         if let VisibilityKind::Crate { .. } = item.vis.node {\n-            if !cx.access_levels.is_exported(item.hir_id()) {\n+            if !cx.access_levels.is_exported(item.def_id) {\n                 if let Some(false) = self.is_exported.last() {\n                     let span = item.span.with_hi(item.ident.span.hi());\n                     let descr = cx.tcx.def_kind(item.def_id).descr(item.def_id.to_def_id());\n@@ -64,7 +64,7 @@ impl<'tcx> LateLintPass<'tcx> for RedundantPubCrate {\n         }\n \n         if let ItemKind::Mod { .. } = item.kind {\n-            self.is_exported.push(cx.access_levels.is_exported(item.hir_id()));\n+            self.is_exported.push(cx.access_levels.is_exported(item.def_id));\n         }\n     }\n "}, {"sha": "5ca861a14bf2d121ebf180ebc893e00d790bf726", "filename": "clippy_lints/src/unnecessary_wraps.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_lints%2Fsrc%2Funnecessary_wraps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_lints%2Fsrc%2Funnecessary_wraps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funnecessary_wraps.rs?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -81,7 +81,8 @@ impl<'tcx> LateLintPass<'tcx> for UnnecessaryWraps {\n         // Abort if public function/method or closure.\n         match fn_kind {\n             FnKind::ItemFn(..) | FnKind::Method(..) => {\n-                if self.avoid_breaking_exported_api && cx.access_levels.is_exported(hir_id) {\n+                let def_id = cx.tcx.hir().local_def_id(hir_id);\n+                if self.avoid_breaking_exported_api && cx.access_levels.is_exported(def_id) {\n                     return;\n                 }\n             },"}, {"sha": "dbf335a70c83118eee6fcc88f1829ab6e6baffd8", "filename": "clippy_lints/src/upper_case_acronyms.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_lints%2Fsrc%2Fupper_case_acronyms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_lints%2Fsrc%2Fupper_case_acronyms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fupper_case_acronyms.rs?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -104,7 +104,7 @@ impl LateLintPass<'_> for UpperCaseAcronyms {\n     fn check_item(&mut self, cx: &LateContext<'_>, it: &Item<'_>) {\n         // do not lint public items or in macros\n         if in_external_macro(cx.sess(), it.span)\n-            || (self.avoid_breaking_exported_api && cx.access_levels.is_exported(it.hir_id()))\n+            || (self.avoid_breaking_exported_api && cx.access_levels.is_exported(it.def_id))\n         {\n             return;\n         }"}, {"sha": "c65b2958ec56d7f02673e6a74e141ba77c111e9a", "filename": "clippy_utils/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_utils%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/clippy_utils%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2FCargo.toml?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -1,7 +1,6 @@\n [package]\n name = \"clippy_utils\"\n version = \"0.1.56\"\n-authors = [\"The Rust Clippy Developers\"]\n edition = \"2018\"\n publish = false\n "}, {"sha": "8c33fa372eccb07aed9139810d40240c2dcd1dd2", "filename": "lintcheck/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/lintcheck%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/lintcheck%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lintcheck%2FCargo.toml?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -1,7 +1,6 @@\n [package]\n name = \"lintcheck\"\n version = \"0.0.1\"\n-authors = [\"The Rust Clippy Developers\"]\n description = \"tool to monitor impact of changes in Clippys lints on a part of the ecosystem\"\n readme = \"README.md\"\n license = \"MIT OR Apache-2.0\""}, {"sha": "23887f178454972c47b777c305ded39a12d84fbf", "filename": "rust-toolchain", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/rust-toolchain", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/rust-toolchain", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-toolchain?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -1,3 +1,3 @@\n [toolchain]\n-channel = \"nightly-2021-07-29\"\n+channel = \"nightly-2021-08-12\"\n components = [\"llvm-tools-preview\", \"rustc-dev\", \"rust-src\"]"}, {"sha": "9554d4d6c003c7b5f15eb8081e317fa0267f16e2", "filename": "rustc_tools_util/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/rustc_tools_util%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/rustc_tools_util%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustc_tools_util%2FCargo.toml?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -1,7 +1,6 @@\n [package]\n name = \"rustc_tools_util\"\n version = \"0.2.0\"\n-authors = [\"The Rust Clippy Developers\"]\n description = \"small helper to generate version information for git packages\"\n repository = \"https://github.com/rust-lang/rust-clippy\"\n readme = \"README.md\""}, {"sha": "04b1dc93d4a4241b811ebba75729a2defc99d5eb", "filename": "tests/ui/assign_ops2.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fassign_ops2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fassign_ops2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassign_ops2.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -8,11 +8,11 @@ LL |     a += a + 1;\n help: did you mean `a = a + 1` or `a = a + a + 1`? Consider replacing it with\n    |\n LL |     a += 1;\n-   |     ^^^^^^\n+   |     ~~~~~~\n help: or\n    |\n LL |     a = a + a + 1;\n-   |     ^^^^^^^^^^^^^\n+   |     ~~~~~~~~~~~~~\n \n error: variable appears on both sides of an assignment operation\n   --> $DIR/assign_ops2.rs:6:5\n@@ -23,11 +23,11 @@ LL |     a += 1 + a;\n help: did you mean `a = a + 1` or `a = a + 1 + a`? Consider replacing it with\n    |\n LL |     a += 1;\n-   |     ^^^^^^\n+   |     ~~~~~~\n help: or\n    |\n LL |     a = a + 1 + a;\n-   |     ^^^^^^^^^^^^^\n+   |     ~~~~~~~~~~~~~\n \n error: variable appears on both sides of an assignment operation\n   --> $DIR/assign_ops2.rs:7:5\n@@ -38,11 +38,11 @@ LL |     a -= a - 1;\n help: did you mean `a = a - 1` or `a = a - (a - 1)`? Consider replacing it with\n    |\n LL |     a -= 1;\n-   |     ^^^^^^\n+   |     ~~~~~~\n help: or\n    |\n LL |     a = a - (a - 1);\n-   |     ^^^^^^^^^^^^^^^\n+   |     ~~~~~~~~~~~~~~~\n \n error: variable appears on both sides of an assignment operation\n   --> $DIR/assign_ops2.rs:8:5\n@@ -53,11 +53,11 @@ LL |     a *= a * 99;\n help: did you mean `a = a * 99` or `a = a * a * 99`? Consider replacing it with\n    |\n LL |     a *= 99;\n-   |     ^^^^^^^\n+   |     ~~~~~~~\n help: or\n    |\n LL |     a = a * a * 99;\n-   |     ^^^^^^^^^^^^^^\n+   |     ~~~~~~~~~~~~~~\n \n error: variable appears on both sides of an assignment operation\n   --> $DIR/assign_ops2.rs:9:5\n@@ -68,11 +68,11 @@ LL |     a *= 42 * a;\n help: did you mean `a = a * 42` or `a = a * 42 * a`? Consider replacing it with\n    |\n LL |     a *= 42;\n-   |     ^^^^^^^\n+   |     ~~~~~~~\n help: or\n    |\n LL |     a = a * 42 * a;\n-   |     ^^^^^^^^^^^^^^\n+   |     ~~~~~~~~~~~~~~\n \n error: variable appears on both sides of an assignment operation\n   --> $DIR/assign_ops2.rs:10:5\n@@ -83,11 +83,11 @@ LL |     a /= a / 2;\n help: did you mean `a = a / 2` or `a = a / (a / 2)`? Consider replacing it with\n    |\n LL |     a /= 2;\n-   |     ^^^^^^\n+   |     ~~~~~~\n help: or\n    |\n LL |     a = a / (a / 2);\n-   |     ^^^^^^^^^^^^^^^\n+   |     ~~~~~~~~~~~~~~~\n \n error: variable appears on both sides of an assignment operation\n   --> $DIR/assign_ops2.rs:11:5\n@@ -98,11 +98,11 @@ LL |     a %= a % 5;\n help: did you mean `a = a % 5` or `a = a % (a % 5)`? Consider replacing it with\n    |\n LL |     a %= 5;\n-   |     ^^^^^^\n+   |     ~~~~~~\n help: or\n    |\n LL |     a = a % (a % 5);\n-   |     ^^^^^^^^^^^^^^^\n+   |     ~~~~~~~~~~~~~~~\n \n error: variable appears on both sides of an assignment operation\n   --> $DIR/assign_ops2.rs:12:5\n@@ -113,11 +113,11 @@ LL |     a &= a & 1;\n help: did you mean `a = a & 1` or `a = a & a & 1`? Consider replacing it with\n    |\n LL |     a &= 1;\n-   |     ^^^^^^\n+   |     ~~~~~~\n help: or\n    |\n LL |     a = a & a & 1;\n-   |     ^^^^^^^^^^^^^\n+   |     ~~~~~~~~~~~~~\n \n error: variable appears on both sides of an assignment operation\n   --> $DIR/assign_ops2.rs:13:5\n@@ -128,11 +128,11 @@ LL |     a *= a * a;\n help: did you mean `a = a * a` or `a = a * a * a`? Consider replacing it with\n    |\n LL |     a *= a;\n-   |     ^^^^^^\n+   |     ~~~~~~\n help: or\n    |\n LL |     a = a * a * a;\n-   |     ^^^^^^^^^^^^^\n+   |     ~~~~~~~~~~~~~\n \n error: manual implementation of an assign operation\n   --> $DIR/assign_ops2.rs:50:5"}, {"sha": "3f2051458f677c219930503943f5ef00ae44224a", "filename": "tests/ui/async_yields_async.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fasync_yields_async.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fasync_yields_async.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync_yields_async.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -14,9 +14,9 @@ LL |  |     };\n    = note: `-D clippy::async-yields-async` implied by `-D warnings`\n help: consider awaiting this value\n    |\n-LL |         async {\n-LL |             3\n-LL |         }.await\n+LL ~         async {\n+LL +             3\n+LL +         }.await\n    |\n \n error: an async construct yields a type which is itself awaitable\n@@ -47,9 +47,9 @@ LL |  |     };\n    |\n help: consider awaiting this value\n    |\n-LL |         async {\n-LL |             3\n-LL |         }.await\n+LL ~         async {\n+LL +             3\n+LL +         }.await\n    |\n \n error: an async construct yields a type which is itself awaitable"}, {"sha": "e4f605a4de3059ae15e3230b72f9dc143da2c70a", "filename": "tests/ui/bind_instead_of_map_multipart.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fbind_instead_of_map_multipart.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fbind_instead_of_map_multipart.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbind_instead_of_map_multipart.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -12,7 +12,7 @@ LL | #![deny(clippy::bind_instead_of_map)]\n help: try this\n    |\n LL |     let _ = Some(\"42\").map(|s| if s.len() < 42 { 0 } else { s.len() });\n-   |                        ^^^                       ^          ^^^^^^^\n+   |                        ~~~                       ~          ~~~~~~~\n \n error: using `Result.and_then(|x| Ok(y))`, which is more succinctly expressed as `map(|x| y)`\n   --> $DIR/bind_instead_of_map_multipart.rs:8:13\n@@ -23,7 +23,7 @@ LL |     let _ = Ok::<_, ()>(\"42\").and_then(|s| if s.len() < 42 { Ok(0) } else {\n help: try this\n    |\n LL |     let _ = Ok::<_, ()>(\"42\").map(|s| if s.len() < 42 { 0 } else { s.len() });\n-   |                               ^^^                       ^          ^^^^^^^\n+   |                               ~~~                       ~          ~~~~~~~\n \n error: using `Result.or_else(|x| Err(y))`, which is more succinctly expressed as `map_err(|x| y)`\n   --> $DIR/bind_instead_of_map_multipart.rs:11:13\n@@ -34,7 +34,7 @@ LL |     let _ = Err::<(), _>(\"42\").or_else(|s| if s.len() < 42 { Err(s.len() +\n help: try this\n    |\n LL |     let _ = Err::<(), _>(\"42\").map_err(|s| if s.len() < 42 { s.len() + 20 } else { s.len() });\n-   |                                ^^^^^^^                       ^^^^^^^^^^^^          ^^^^^^^\n+   |                                ~~~~~~~                       ~~~~~~~~~~~~          ~~~~~~~\n \n error: using `Option.and_then(|x| Some(y))`, which is more succinctly expressed as `map(|x| y)`\n   --> $DIR/bind_instead_of_map_multipart.rs:19:5\n@@ -50,10 +50,10 @@ LL | |     });\n    |\n help: try this\n    |\n-LL |     Some(\"42\").map(|s| {\n+LL ~     Some(\"42\").map(|s| {\n LL |         if {\n LL |             if s == \"43\" {\n-LL |                 return 43;\n+LL ~                 return 43;\n LL |             }\n LL |             s == \"42\"\n  ...\n@@ -67,7 +67,7 @@ LL |     let _ = Some(\"\").and_then(|s| if s.len() == 20 { Some(m!()) } else { So\n help: try this\n    |\n LL |     let _ = Some(\"\").map(|s| if s.len() == 20 { m!() } else { Some(20) });\n-   |                      ^^^                        ^^^^          ^^^^^^^^\n+   |                      ~~~                        ~~~~          ~~~~~~~~\n \n error: aborting due to 5 previous errors\n "}, {"sha": "079f2feb5c4868b46079ba2b2e1c9d7d24d8808a", "filename": "tests/ui/blocks_in_if_conditions.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fblocks_in_if_conditions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fblocks_in_if_conditions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fblocks_in_if_conditions.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -10,10 +10,10 @@ LL | |     } {\n    = note: `-D clippy::blocks-in-if-conditions` implied by `-D warnings`\n help: try\n    |\n-LL |     let res = {\n-LL |         let x = 3;\n-LL |         x == 3\n-LL |     }; if res {\n+LL ~     let res = {\n+LL +         let x = 3;\n+LL +         x == 3\n+LL ~     }; if res {\n    |\n \n error: omit braces around single expression condition"}, {"sha": "e3c1bbee994238afed1c34a98822c82a029205b1", "filename": "tests/ui/branches_sharing_code/shared_at_bottom.stderr", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_bottom.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_bottom.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_bottom.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -15,10 +15,10 @@ LL | #![deny(clippy::if_same_then_else, clippy::branches_sharing_code)]\n    = note: The end suggestion probably needs some adjustments to use the expression result correctly\n help: consider moving the end statements out like this\n    |\n-LL |     }\n-LL |     let result = false;\n-LL |     println!(\"Block end!\");\n-LL |     result;\n+LL ~     }\n+LL +     let result = false;\n+LL +     println!(\"Block end!\");\n+LL ~     result;\n    |\n \n error: all if blocks contain the same code at the end\n@@ -30,8 +30,8 @@ LL | |     }\n    |\n help: consider moving the end statements out like this\n    |\n-LL |     }\n-LL |     println!(\"Same end of block\");\n+LL ~     }\n+LL +     println!(\"Same end of block\");\n    |\n \n error: all if blocks contain the same code at the end\n@@ -46,11 +46,11 @@ LL | |     }\n    |\n help: consider moving the end statements out like this\n    |\n-LL |     }\n-LL |     println!(\n-LL |         \"I'm moveable because I know: `outer_scope_value`: '{}'\",\n-LL |         outer_scope_value\n-LL |     );\n+LL ~     }\n+LL +     println!(\n+LL +         \"I'm moveable because I know: `outer_scope_value`: '{}'\",\n+LL +         outer_scope_value\n+LL +     );\n    |\n \n error: all if blocks contain the same code at the end\n@@ -62,8 +62,8 @@ LL | |         }\n    |\n help: consider moving the end statements out like this\n    |\n-LL |         }\n-LL |         println!(\"Hello World\");\n+LL ~         }\n+LL +         println!(\"Hello World\");\n    |\n \n error: all if blocks contain the same code at the end\n@@ -78,9 +78,9 @@ LL | |     }\n    = warning: Some moved values might need to be renamed to avoid wrong references\n help: consider moving the end statements out like this\n    |\n-LL |     }\n-LL |     let later_used_value = \"A string value\";\n-LL |     println!(\"{}\", later_used_value);\n+LL ~     }\n+LL +     let later_used_value = \"A string value\";\n+LL +     println!(\"{}\", later_used_value);\n    |\n \n error: all if blocks contain the same code at the end\n@@ -94,9 +94,9 @@ LL | |     }\n    = warning: Some moved values might need to be renamed to avoid wrong references\n help: consider moving the end statements out like this\n    |\n-LL |     }\n-LL |     let simple_examples = \"I now identify as a &str :)\";\n-LL |     println!(\"This is the new simple_example: {}\", simple_examples);\n+LL ~     }\n+LL +     let simple_examples = \"I now identify as a &str :)\";\n+LL +     println!(\"This is the new simple_example: {}\", simple_examples);\n    |\n \n error: all if blocks contain the same code at the end\n@@ -109,8 +109,8 @@ LL | |     };\n    = note: The end suggestion probably needs some adjustments to use the expression result correctly\n help: consider moving the end statements out like this\n    |\n-LL |     }\n-LL |     x << 2;\n+LL ~     }\n+LL ~     x << 2;\n    |\n \n error: all if blocks contain the same code at the end\n@@ -123,8 +123,8 @@ LL | |     }\n    = note: The end suggestion probably needs some adjustments to use the expression result correctly\n help: consider moving the end statements out like this\n    |\n-LL |     }\n-LL |     x * 4\n+LL ~     }\n+LL +     x * 4\n    |\n \n error: all if blocks contain the same code at the end\n@@ -135,8 +135,8 @@ LL |     if x == 17 { b = 1; a = 0x99; } else { a = 0x99; }\n    |\n help: consider moving the end statements out like this\n    |\n-LL |     if x == 17 { b = 1; a = 0x99; } else { }\n-LL |     a = 0x99;\n+LL ~     if x == 17 { b = 1; a = 0x99; } else { }\n+LL +     a = 0x99;\n    |\n \n error: aborting due to 9 previous errors"}, {"sha": "8d78fa5de7e498b5e436346570295397bd8011e2", "filename": "tests/ui/branches_sharing_code/shared_at_top.stderr", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -12,8 +12,8 @@ LL | #![deny(clippy::if_same_then_else, clippy::branches_sharing_code)]\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n help: consider moving the start statements out like this\n    |\n-LL |     println!(\"Hello World!\");\n-LL |     if true {\n+LL ~     println!(\"Hello World!\");\n+LL +     if true {\n    |\n \n error: all if blocks contain the same code at the start\n@@ -28,10 +28,10 @@ LL | |         let _z = y;\n    = warning: Some moved values might need to be renamed to avoid wrong references\n help: consider moving the start statements out like this\n    |\n-LL |     let y = 9;\n-LL |     println!(\"The value y was set to: `{}`\", y);\n-LL |     let _z = y;\n-LL |     if x == 0 {\n+LL ~     let y = 9;\n+LL +     println!(\"The value y was set to: `{}`\", y);\n+LL +     let _z = y;\n+LL +     if x == 0 {\n    |\n \n error: all if blocks contain the same code at the start\n@@ -43,8 +43,8 @@ LL | |         let y = 16;\n    |\n help: consider moving the start statements out like this\n    |\n-LL |     let y = 16;\n-LL |     let _ = if x == 7 {\n+LL ~     let y = 16;\n+LL +     let _ = if x == 7 {\n    |\n \n error: all if blocks contain the same code at the start\n@@ -58,9 +58,9 @@ LL | |         println!(\"Str: {}\", used_value_name);\n    = warning: Some moved values might need to be renamed to avoid wrong references\n help: consider moving the start statements out like this\n    |\n-LL |     let used_value_name = \"Different type\";\n-LL |     println!(\"Str: {}\", used_value_name);\n-LL |     if x == 10 {\n+LL ~     let used_value_name = \"Different type\";\n+LL +     println!(\"Str: {}\", used_value_name);\n+LL +     if x == 10 {\n    |\n \n error: all if blocks contain the same code at the start\n@@ -74,9 +74,9 @@ LL | |         println!(\"I'm also moveable\");\n    = warning: Some moved values might need to be renamed to avoid wrong references\n help: consider moving the start statements out like this\n    |\n-LL |     let can_be_overridden = \"Move me\";\n-LL |     println!(\"I'm also moveable\");\n-LL |     if x == 11 {\n+LL ~     let can_be_overridden = \"Move me\";\n+LL +     println!(\"I'm also moveable\");\n+LL +     if x == 11 {\n    |\n \n error: all if blocks contain the same code at the start\n@@ -89,9 +89,9 @@ LL | |         println!(\"Because `IF_SAME_THEN_ELSE` is allowed here\");\n    |\n help: consider moving the start statements out like this\n    |\n-LL |     println!(\"This should trigger the `SHARED_CODE_IN_IF_BLOCKS` lint.\");\n-LL |     println!(\"Because `IF_SAME_THEN_ELSE` is allowed here\");\n-LL |     if x == 2020 {\n+LL ~     println!(\"This should trigger the `SHARED_CODE_IN_IF_BLOCKS` lint.\");\n+LL +     println!(\"Because `IF_SAME_THEN_ELSE` is allowed here\");\n+LL +     if x == 2020 {\n    |\n \n error: this `if` has identical blocks"}, {"sha": "1db2343d3fe971b7830b1808785cde5751dc4823", "filename": "tests/ui/branches_sharing_code/shared_at_top_and_bottom.stderr", "status": "modified", "additions": 31, "deletions": 31, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top_and_bottom.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top_and_bottom.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_top_and_bottom.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -20,15 +20,15 @@ LL | |     }\n    | |_____^\n help: consider moving the start statements out like this\n    |\n-LL |     let t = 7;\n-LL |     let _overlap_start = t * 2;\n-LL |     let _overlap_end = 2 * t;\n-LL |     if x == 7 {\n+LL ~     let t = 7;\n+LL +     let _overlap_start = t * 2;\n+LL +     let _overlap_end = 2 * t;\n+LL +     if x == 7 {\n    |\n help: and consider moving the end statements out like this\n    |\n-LL |     }\n-LL |     let _u = 9;\n+LL ~     }\n+LL +     let _u = 9;\n    |\n \n error: all if blocks contain the same code at the start and the end. Here at the start\n@@ -50,16 +50,16 @@ LL | |     }\n    = warning: Some moved values might need to be renamed to avoid wrong references\n help: consider moving the start statements out like this\n    |\n-LL |     let r = 7;\n-LL |     let _overlap_start = r;\n-LL |     let _overlap_middle = r * r;\n-LL |     if x == 99 {\n+LL ~     let r = 7;\n+LL +     let _overlap_start = r;\n+LL +     let _overlap_middle = r * r;\n+LL +     if x == 99 {\n    |\n help: and consider moving the end statements out like this\n    |\n-LL |     }\n-LL |     let _overlap_end = r * r * r;\n-LL |     let z = \"end\";\n+LL ~     }\n+LL +     let _overlap_end = r * r * r;\n+LL +     let z = \"end\";\n    |\n \n error: all if blocks contain the same code at the start and the end. Here at the start\n@@ -85,19 +85,19 @@ LL | |     }\n    = warning: Some moved values might need to be renamed to avoid wrong references\n help: consider moving the start statements out like this\n    |\n-LL |     let a = 0xcafe;\n-LL |     let b = 0xffff00ff;\n-LL |     let e_id = gen_id(a, b);\n-LL |     if (x > 7 && y < 13) || (x + y) % 2 == 1 {\n+LL ~     let a = 0xcafe;\n+LL +     let b = 0xffff00ff;\n+LL +     let e_id = gen_id(a, b);\n+LL +     if (x > 7 && y < 13) || (x + y) % 2 == 1 {\n    |\n help: and consider moving the end statements out like this\n    |\n-LL |     }\n-LL |     let pack = DataPack {\n-LL |         id: e_id,\n-LL |         name: \"Player 1\".to_string(),\n-LL |         some_data: vec![0x12, 0x34, 0x56, 0x78, 0x90],\n-LL |     };\n+LL ~     }\n+LL +     let pack = DataPack {\n+LL +         id: e_id,\n+LL +         name: \"Player 1\".to_string(),\n+LL +         some_data: vec![0x12, 0x34, 0x56, 0x78, 0x90],\n+LL +     };\n  ...\n \n error: all if blocks contain the same code at the start and the end. Here at the start\n@@ -116,13 +116,13 @@ LL | |     };\n    = note: The end suggestion probably needs some adjustments to use the expression result correctly\n help: consider moving the start statements out like this\n    |\n-LL |     let _ = 19;\n-LL |     let _ = if x == 7 {\n+LL ~     let _ = 19;\n+LL +     let _ = if x == 7 {\n    |\n help: and consider moving the end statements out like this\n    |\n-LL |     }\n-LL |     x << 2;\n+LL ~     }\n+LL ~     x << 2;\n    |\n \n error: all if blocks contain the same code at the start and the end. Here at the start\n@@ -141,13 +141,13 @@ LL | |     }\n    = note: The end suggestion probably needs some adjustments to use the expression result correctly\n help: consider moving the start statements out like this\n    |\n-LL |     let _ = 17;\n-LL |     if x == 9 {\n+LL ~     let _ = 17;\n+LL +     if x == 9 {\n    |\n help: and consider moving the end statements out like this\n    |\n-LL |     }\n-LL |     x * 4\n+LL ~     }\n+LL +     x * 4\n    |\n \n error: aborting due to 5 previous errors"}, {"sha": "6970f66097908ee23aa202b1f86370f6cd742646", "filename": "tests/ui/collapsible_else_if.stderr", "status": "modified", "additions": 36, "deletions": 36, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fcollapsible_else_if.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fcollapsible_else_if.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcollapsible_else_if.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -12,9 +12,9 @@ LL | |     }\n    = note: `-D clippy::collapsible-else-if` implied by `-D warnings`\n help: collapse nested if block\n    |\n-LL |     } else if y == \"world\" {\n-LL |         println!(\"world!\")\n-LL |     }\n+LL ~     } else if y == \"world\" {\n+LL +         println!(\"world!\")\n+LL +     }\n    |\n \n error: this `else { if .. }` block can be collapsed\n@@ -30,9 +30,9 @@ LL | |     }\n    |\n help: collapse nested if block\n    |\n-LL |     } else if let Some(42) = Some(42) {\n-LL |         println!(\"world!\")\n-LL |     }\n+LL ~     } else if let Some(42) = Some(42) {\n+LL +         println!(\"world!\")\n+LL +     }\n    |\n \n error: this `else { if .. }` block can be collapsed\n@@ -50,12 +50,12 @@ LL | |     }\n    |\n help: collapse nested if block\n    |\n-LL |     } else if y == \"world\" {\n-LL |         println!(\"world\")\n-LL |     }\n-LL |     else {\n-LL |         println!(\"!\")\n-LL |     }\n+LL ~     } else if y == \"world\" {\n+LL +         println!(\"world\")\n+LL +     }\n+LL +     else {\n+LL +         println!(\"!\")\n+LL +     }\n    |\n \n error: this `else { if .. }` block can be collapsed\n@@ -73,12 +73,12 @@ LL | |     }\n    |\n help: collapse nested if block\n    |\n-LL |     } else if let Some(42) = Some(42) {\n-LL |         println!(\"world\")\n-LL |     }\n-LL |     else {\n-LL |         println!(\"!\")\n-LL |     }\n+LL ~     } else if let Some(42) = Some(42) {\n+LL +         println!(\"world\")\n+LL +     }\n+LL +     else {\n+LL +         println!(\"!\")\n+LL +     }\n    |\n \n error: this `else { if .. }` block can be collapsed\n@@ -96,12 +96,12 @@ LL | |     }\n    |\n help: collapse nested if block\n    |\n-LL |     } else if let Some(42) = Some(42) {\n-LL |         println!(\"world\")\n-LL |     }\n-LL |     else {\n-LL |         println!(\"!\")\n-LL |     }\n+LL ~     } else if let Some(42) = Some(42) {\n+LL +         println!(\"world\")\n+LL +     }\n+LL +     else {\n+LL +         println!(\"!\")\n+LL +     }\n    |\n \n error: this `else { if .. }` block can be collapsed\n@@ -119,12 +119,12 @@ LL | |     }\n    |\n help: collapse nested if block\n    |\n-LL |     } else if x == \"hello\" {\n-LL |         println!(\"world\")\n-LL |     }\n-LL |     else {\n-LL |         println!(\"!\")\n-LL |     }\n+LL ~     } else if x == \"hello\" {\n+LL +         println!(\"world\")\n+LL +     }\n+LL +     else {\n+LL +         println!(\"!\")\n+LL +     }\n    |\n \n error: this `else { if .. }` block can be collapsed\n@@ -142,12 +142,12 @@ LL | |     }\n    |\n help: collapse nested if block\n    |\n-LL |     } else if let Some(42) = Some(42) {\n-LL |         println!(\"world\")\n-LL |     }\n-LL |     else {\n-LL |         println!(\"!\")\n-LL |     }\n+LL ~     } else if let Some(42) = Some(42) {\n+LL +         println!(\"world\")\n+LL +     }\n+LL +     else {\n+LL +         println!(\"!\")\n+LL +     }\n    |\n \n error: aborting due to 7 previous errors"}, {"sha": "6749612388fe3726374e02b864cc2d3e37343935", "filename": "tests/ui/collapsible_if.stderr", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fcollapsible_if.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fcollapsible_if.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcollapsible_if.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -11,9 +11,9 @@ LL | |     }\n    = note: `-D clippy::collapsible-if` implied by `-D warnings`\n help: collapse nested if block\n    |\n-LL |     if x == \"hello\" && y == \"world\" {\n-LL |         println!(\"Hello world!\");\n-LL |     }\n+LL ~     if x == \"hello\" && y == \"world\" {\n+LL +         println!(\"Hello world!\");\n+LL +     }\n    |\n \n error: this `if` statement can be collapsed\n@@ -28,9 +28,9 @@ LL | |     }\n    |\n help: collapse nested if block\n    |\n-LL |     if (x == \"hello\" || x == \"world\") && (y == \"world\" || y == \"hello\") {\n-LL |         println!(\"Hello world!\");\n-LL |     }\n+LL ~     if (x == \"hello\" || x == \"world\") && (y == \"world\" || y == \"hello\") {\n+LL +         println!(\"Hello world!\");\n+LL +     }\n    |\n \n error: this `if` statement can be collapsed\n@@ -45,9 +45,9 @@ LL | |     }\n    |\n help: collapse nested if block\n    |\n-LL |     if x == \"hello\" && x == \"world\" && (y == \"world\" || y == \"hello\") {\n-LL |         println!(\"Hello world!\");\n-LL |     }\n+LL ~     if x == \"hello\" && x == \"world\" && (y == \"world\" || y == \"hello\") {\n+LL +         println!(\"Hello world!\");\n+LL +     }\n    |\n \n error: this `if` statement can be collapsed\n@@ -62,9 +62,9 @@ LL | |     }\n    |\n help: collapse nested if block\n    |\n-LL |     if (x == \"hello\" || x == \"world\") && y == \"world\" && y == \"hello\" {\n-LL |         println!(\"Hello world!\");\n-LL |     }\n+LL ~     if (x == \"hello\" || x == \"world\") && y == \"world\" && y == \"hello\" {\n+LL +         println!(\"Hello world!\");\n+LL +     }\n    |\n \n error: this `if` statement can be collapsed\n@@ -79,9 +79,9 @@ LL | |     }\n    |\n help: collapse nested if block\n    |\n-LL |     if x == \"hello\" && x == \"world\" && y == \"world\" && y == \"hello\" {\n-LL |         println!(\"Hello world!\");\n-LL |     }\n+LL ~     if x == \"hello\" && x == \"world\" && y == \"world\" && y == \"hello\" {\n+LL +         println!(\"Hello world!\");\n+LL +     }\n    |\n \n error: this `if` statement can be collapsed\n@@ -96,9 +96,9 @@ LL | |     }\n    |\n help: collapse nested if block\n    |\n-LL |     if 42 == 1337 && 'a' != 'A' {\n-LL |         println!(\"world!\")\n-LL |     }\n+LL ~     if 42 == 1337 && 'a' != 'A' {\n+LL +         println!(\"world!\")\n+LL +     }\n    |\n \n error: this `if` statement can be collapsed\n@@ -113,9 +113,9 @@ LL | |     }\n    |\n help: collapse nested if block\n    |\n-LL |     if x == \"hello\" && y == \"world\" { // Collapsible\n-LL |         println!(\"Hello world!\");\n-LL |     }\n+LL ~     if x == \"hello\" && y == \"world\" { // Collapsible\n+LL +         println!(\"Hello world!\");\n+LL +     }\n    |\n \n error: this `if` statement can be collapsed"}, {"sha": "4d3d617b693756062f9b9ffcc7a86e7ec10c7361", "filename": "tests/ui/crashes/ice-3717.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fcrashes%2Fice-3717.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fcrashes%2Fice-3717.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-3717.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -12,11 +12,11 @@ LL | #![deny(clippy::implicit_hasher)]\n help: consider adding a type parameter\n    |\n LL | pub fn ice_3717<S: ::std::hash::BuildHasher + Default>(_: &HashSet<usize, S>) {\n-   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^\n+   |                +++++++++++++++++++++++++++++++++++++++     ~~~~~~~~~~~~~~~~~\n help: ...and use generic constructor\n    |\n LL |     let _: HashSet<usize> = HashSet::default();\n-   |                             ^^^^^^^^^^^^^^^^^^\n+   |                             ~~~~~~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "439884b7d274aef2d3cd92637a0b8847e1bedbd8", "filename": "tests/ui/crashes/ice-6250.stderr", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fcrashes%2Fice-6250.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fcrashes%2Fice-6250.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-6250.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -25,10 +25,12 @@ error[E0308]: mismatched types\n   --> $DIR/ice-6250.rs:12:14\n    |\n LL |         Some(reference) = cache.data.get(key) {\n-   |              ^^^^^^^^^\n-   |              |\n-   |              expected integer, found `&i32`\n-   |              help: consider dereferencing the borrow: `*reference`\n+   |              ^^^^^^^^^ expected integer, found `&i32`\n+   |\n+help: consider dereferencing the borrow\n+   |\n+LL |         Some(*reference) = cache.data.get(key) {\n+   |              +\n \n error[E0308]: mismatched types\n   --> $DIR/ice-6250.rs:12:9"}, {"sha": "14c71e884b6ea9779cc867b6104d156e6821bf2c", "filename": "tests/ui/crashes/ice-6251.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fcrashes%2Fice-6251.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fcrashes%2Fice-6251.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-6251.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -17,7 +17,7 @@ LL | fn bug<T>() -> impl Iterator<Item = [(); { |x: [u8]| x }]> {\n help: function arguments must have a statically known size, borrowed types always have a known size\n    |\n LL | fn bug<T>() -> impl Iterator<Item = [(); { |x: &[u8]| x }]> {\n-   |                                                ^\n+   |                                                +\n \n error[E0277]: the size for values of type `[u8]` cannot be known at compilation time\n   --> $DIR/ice-6251.rs:4:54"}, {"sha": "0abe953af26139b40754ae010550e106450f42ae", "filename": "tests/ui/dbg_macro.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fdbg_macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fdbg_macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdbg_macro.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -8,7 +8,7 @@ LL |     if let Some(n) = dbg!(n.checked_sub(4)) { n } else { n }\n help: ensure to avoid having uses of it in version control\n    |\n LL |     if let Some(n) = n.checked_sub(4) { n } else { n }\n-   |                      ^^^^^^^^^^^^^^^^\n+   |                      ~~~~~~~~~~~~~~~~\n \n error: `dbg!` macro is intended as a debugging tool\n   --> $DIR/dbg_macro.rs:8:8\n@@ -19,7 +19,7 @@ LL |     if dbg!(n <= 1) {\n help: ensure to avoid having uses of it in version control\n    |\n LL |     if n <= 1 {\n-   |        ^^^^^^\n+   |        ~~~~~~\n \n error: `dbg!` macro is intended as a debugging tool\n   --> $DIR/dbg_macro.rs:9:9\n@@ -52,7 +52,7 @@ LL |     dbg!(42);\n help: ensure to avoid having uses of it in version control\n    |\n LL |     42;\n-   |     ^^\n+   |     ~~\n \n error: `dbg!` macro is intended as a debugging tool\n   --> $DIR/dbg_macro.rs:17:5\n@@ -63,7 +63,7 @@ LL |     dbg!(dbg!(dbg!(42)));\n help: ensure to avoid having uses of it in version control\n    |\n LL |     dbg!(dbg!(42));\n-   |     ^^^^^^^^^^^^^^\n+   |     ~~~~~~~~~~~~~~\n \n error: `dbg!` macro is intended as a debugging tool\n   --> $DIR/dbg_macro.rs:18:14\n@@ -74,7 +74,7 @@ LL |     foo(3) + dbg!(factorial(4));\n help: ensure to avoid having uses of it in version control\n    |\n LL |     foo(3) + factorial(4);\n-   |              ^^^^^^^^^^^^\n+   |              ~~~~~~~~~~~~\n \n error: aborting due to 7 previous errors\n "}, {"sha": "8f2e383d675da8fdd43c49910f2529093eeeed09", "filename": "tests/ui/entry.stderr", "status": "modified", "additions": 44, "deletions": 44, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fentry.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fentry.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fentry.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -22,12 +22,12 @@ LL | |     }\n    |\n help: try this\n    |\n-LL |     m.entry(k).or_insert_with(|| {\n-LL |         if true {\n-LL |             v\n-LL |         } else {\n-LL |             v2\n-LL |         }\n+LL ~     m.entry(k).or_insert_with(|| {\n+LL +         if true {\n+LL +             v\n+LL +         } else {\n+LL +             v2\n+LL +         }\n  ...\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n@@ -44,12 +44,12 @@ LL | |     }\n    |\n help: try this\n    |\n-LL |     m.entry(k).or_insert_with(|| {\n-LL |         if true {\n-LL |             v\n-LL |         } else {\n-LL |             v2\n-LL |         }\n+LL ~     m.entry(k).or_insert_with(|| {\n+LL +         if true {\n+LL +             v\n+LL +         } else {\n+LL +             v2\n+LL +         }\n  ...\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n@@ -66,12 +66,12 @@ LL | |     }\n    |\n help: try this\n    |\n-LL |     if let std::collections::hash_map::Entry::Vacant(e) = m.entry(k) {\n-LL |         if true {\n-LL |             e.insert(v);\n-LL |         } else {\n-LL |             e.insert(v2);\n-LL |             return;\n+LL ~     if let std::collections::hash_map::Entry::Vacant(e) = m.entry(k) {\n+LL +         if true {\n+LL +             e.insert(v);\n+LL +         } else {\n+LL +             e.insert(v2);\n+LL +             return;\n  ...\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n@@ -85,10 +85,10 @@ LL | |     }\n    |\n help: try this\n    |\n-LL |     m.entry(k).or_insert_with(|| {\n-LL |         foo();\n-LL |         v\n-LL |     });\n+LL ~     m.entry(k).or_insert_with(|| {\n+LL +         foo();\n+LL +         v\n+LL +     });\n    |\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n@@ -105,12 +105,12 @@ LL | |     }\n    |\n help: try this\n    |\n-LL |     m.entry(k).or_insert_with(|| {\n-LL |         match 0 {\n-LL |             1 if true => {\n-LL |                 v\n-LL |             },\n-LL |             _ => {\n+LL ~     m.entry(k).or_insert_with(|| {\n+LL +         match 0 {\n+LL +             1 if true => {\n+LL +                 v\n+LL +             },\n+LL +             _ => {\n  ...\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n@@ -127,12 +127,12 @@ LL | |     }\n    |\n help: try this\n    |\n-LL |     if let std::collections::hash_map::Entry::Vacant(e) = m.entry(k) {\n-LL |         match 0 {\n-LL |             0 => foo(),\n-LL |             _ => {\n-LL |                 e.insert(v2);\n-LL |             },\n+LL ~     if let std::collections::hash_map::Entry::Vacant(e) = m.entry(k) {\n+LL +         match 0 {\n+LL +             0 => foo(),\n+LL +             _ => {\n+LL +                 e.insert(v2);\n+LL +             },\n  ...\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n@@ -149,12 +149,12 @@ LL | |     }\n    |\n help: try this\n    |\n-LL |     m.entry(k).or_insert_with(|| {\n-LL |         foo();\n-LL |         match 0 {\n-LL |             0 if false => {\n-LL |                 v\n-LL |             },\n+LL ~     m.entry(k).or_insert_with(|| {\n+LL +         foo();\n+LL +         match 0 {\n+LL +             0 if false => {\n+LL +                 v\n+LL +             },\n  ...\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n@@ -176,10 +176,10 @@ LL | |     }\n    |\n help: try this\n    |\n-LL |     if let std::collections::btree_map::Entry::Vacant(e) = m.entry(k) {\n-LL |         e.insert(v);\n-LL |         foo();\n-LL |     }\n+LL ~     if let std::collections::btree_map::Entry::Vacant(e) = m.entry(k) {\n+LL +         e.insert(v);\n+LL +         foo();\n+LL +     }\n    |\n \n error: aborting due to 10 previous errors"}, {"sha": "7279efc5959596a194ce52aa151f11fa5dbed542", "filename": "tests/ui/entry_with_else.stderr", "status": "modified", "additions": 40, "deletions": 40, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fentry_with_else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fentry_with_else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fentry_with_else.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -11,12 +11,12 @@ LL | |     }\n    = note: `-D clippy::map-entry` implied by `-D warnings`\n help: try this\n    |\n-LL |     match m.entry(k) {\n-LL |         std::collections::hash_map::Entry::Vacant(e) => {\n-LL |             e.insert(v);\n-LL |         }\n-LL |         std::collections::hash_map::Entry::Occupied(mut e) => {\n-LL |             e.insert(v2);\n+LL ~     match m.entry(k) {\n+LL +         std::collections::hash_map::Entry::Vacant(e) => {\n+LL +             e.insert(v);\n+LL +         }\n+LL +         std::collections::hash_map::Entry::Occupied(mut e) => {\n+LL +             e.insert(v2);\n  ...\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n@@ -31,12 +31,12 @@ LL | |     }\n    |\n help: try this\n    |\n-LL |     match m.entry(k) {\n-LL |         std::collections::hash_map::Entry::Occupied(mut e) => {\n-LL |             e.insert(v);\n-LL |         }\n-LL |         std::collections::hash_map::Entry::Vacant(e) => {\n-LL |             e.insert(v2);\n+LL ~     match m.entry(k) {\n+LL +         std::collections::hash_map::Entry::Occupied(mut e) => {\n+LL +             e.insert(v);\n+LL +         }\n+LL +         std::collections::hash_map::Entry::Vacant(e) => {\n+LL +             e.insert(v2);\n  ...\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n@@ -51,11 +51,11 @@ LL | |     }\n    |\n help: try this\n    |\n-LL |     if let std::collections::hash_map::Entry::Vacant(e) = m.entry(k) {\n-LL |         e.insert(v);\n-LL |     } else {\n-LL |         foo();\n-LL |     }\n+LL ~     if let std::collections::hash_map::Entry::Vacant(e) = m.entry(k) {\n+LL +         e.insert(v);\n+LL +     } else {\n+LL +         foo();\n+LL +     }\n    |\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n@@ -70,11 +70,11 @@ LL | |     }\n    |\n help: try this\n    |\n-LL |     if let std::collections::hash_map::Entry::Occupied(mut e) = m.entry(k) {\n-LL |         e.insert(v);\n-LL |     } else {\n-LL |         foo();\n-LL |     }\n+LL ~     if let std::collections::hash_map::Entry::Occupied(mut e) = m.entry(k) {\n+LL +         e.insert(v);\n+LL +     } else {\n+LL +         foo();\n+LL +     }\n    |\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n@@ -89,12 +89,12 @@ LL | |     }\n    |\n help: try this\n    |\n-LL |     match m.entry(k) {\n-LL |         std::collections::hash_map::Entry::Vacant(e) => {\n-LL |             e.insert(v);\n-LL |         }\n-LL |         std::collections::hash_map::Entry::Occupied(mut e) => {\n-LL |             e.insert(v2);\n+LL ~     match m.entry(k) {\n+LL +         std::collections::hash_map::Entry::Vacant(e) => {\n+LL +             e.insert(v);\n+LL +         }\n+LL +         std::collections::hash_map::Entry::Occupied(mut e) => {\n+LL +             e.insert(v2);\n  ...\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n@@ -109,12 +109,12 @@ LL | |     };\n    |\n help: try this\n    |\n-LL |     match m.entry(k) {\n-LL |         std::collections::hash_map::Entry::Occupied(mut e) => {\n-LL |             if true { Some(e.insert(v)) } else { Some(e.insert(v2)) }\n-LL |         }\n-LL |         std::collections::hash_map::Entry::Vacant(e) => {\n-LL |             e.insert(v);\n+LL ~     match m.entry(k) {\n+LL +         std::collections::hash_map::Entry::Occupied(mut e) => {\n+LL +             if true { Some(e.insert(v)) } else { Some(e.insert(v2)) }\n+LL +         }\n+LL +         std::collections::hash_map::Entry::Vacant(e) => {\n+LL +             e.insert(v);\n  ...\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n@@ -130,12 +130,12 @@ LL | |     };\n    |\n help: try this\n    |\n-LL |     if let std::collections::hash_map::Entry::Occupied(mut e) = m.entry(k) {\n-LL |         foo();\n-LL |         Some(e.insert(v))\n-LL |     } else {\n-LL |         None\n-LL |     };\n+LL ~     if let std::collections::hash_map::Entry::Occupied(mut e) = m.entry(k) {\n+LL +         foo();\n+LL +         Some(e.insert(v))\n+LL +     } else {\n+LL +         None\n+LL ~     };\n    |\n \n error: aborting due to 7 previous errors"}, {"sha": "090dae3733d91910d43f1d97c1f5883551b2a1d1", "filename": "tests/ui/eprint_with_newline.stderr", "status": "modified", "additions": 28, "deletions": 20, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Feprint_with_newline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Feprint_with_newline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feprint_with_newline.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -7,8 +7,9 @@ LL |     eprint!(\"Hello/n\");\n    = note: `-D clippy::print-with-newline` implied by `-D warnings`\n help: use `eprintln!` instead\n    |\n-LL |     eprintln!(\"Hello\");\n-   |     ^^^^^^^^       --\n+LL -     eprint!(\"Hello/n\");\n+LL +     eprintln!(\"Hello\");\n+   | \n \n error: using `eprint!()` with a format string that ends in a single newline\n   --> $DIR/eprint_with_newline.rs:6:5\n@@ -18,8 +19,9 @@ LL |     eprint!(\"Hello {}/n\", \"world\");\n    |\n help: use `eprintln!` instead\n    |\n-LL |     eprintln!(\"Hello {}\", \"world\");\n-   |     ^^^^^^^^          --\n+LL -     eprint!(\"Hello {}/n\", \"world\");\n+LL +     eprintln!(\"Hello {}\", \"world\");\n+   | \n \n error: using `eprint!()` with a format string that ends in a single newline\n   --> $DIR/eprint_with_newline.rs:7:5\n@@ -29,8 +31,9 @@ LL |     eprint!(\"Hello {} {}/n\", \"world\", \"#2\");\n    |\n help: use `eprintln!` instead\n    |\n-LL |     eprintln!(\"Hello {} {}\", \"world\", \"#2\");\n-   |     ^^^^^^^^             --\n+LL -     eprint!(\"Hello {} {}/n\", \"world\", \"#2\");\n+LL +     eprintln!(\"Hello {} {}\", \"world\", \"#2\");\n+   | \n \n error: using `eprint!()` with a format string that ends in a single newline\n   --> $DIR/eprint_with_newline.rs:8:5\n@@ -40,8 +43,9 @@ LL |     eprint!(\"{}/n\", 1265);\n    |\n help: use `eprintln!` instead\n    |\n-LL |     eprintln!(\"{}\", 1265);\n-   |     ^^^^^^^^    --\n+LL -     eprint!(\"{}/n\", 1265);\n+LL +     eprintln!(\"{}\", 1265);\n+   | \n \n error: using `eprint!()` with a format string that ends in a single newline\n   --> $DIR/eprint_with_newline.rs:9:5\n@@ -51,8 +55,9 @@ LL |     eprint!(\"/n\");\n    |\n help: use `eprintln!` instead\n    |\n-LL |     eprintln!();\n-   |     ^^^^^^^^ --\n+LL -     eprint!(\"/n\");\n+LL +     eprintln!();\n+   | \n \n error: using `eprint!()` with a format string that ends in a single newline\n   --> $DIR/eprint_with_newline.rs:28:5\n@@ -62,8 +67,9 @@ LL |     eprint!(\"//n\"); // should fail\n    |\n help: use `eprintln!` instead\n    |\n-LL |     eprintln!(\"/\"); // should fail\n-   |     ^^^^^^^^    --\n+LL -     eprint!(\"//n\"); // should fail\n+LL +     eprintln!(\"/\"); // should fail\n+   | \n \n error: using `eprint!()` with a format string that ends in a single newline\n   --> $DIR/eprint_with_newline.rs:35:5\n@@ -76,8 +82,8 @@ LL | |     );\n    |\n help: use `eprintln!` instead\n    |\n-LL |     eprintln!(\n-LL |         \"\"\n+LL ~     eprintln!(\n+LL ~         \"\"\n    |\n \n error: using `eprint!()` with a format string that ends in a single newline\n@@ -91,8 +97,8 @@ LL | |     );\n    |\n help: use `eprintln!` instead\n    |\n-LL |     eprintln!(\n-LL |         r\"\"\n+LL ~     eprintln!(\n+LL ~         r\"\"\n    |\n \n error: using `eprint!()` with a format string that ends in a single newline\n@@ -103,8 +109,9 @@ LL |     eprint!(\"/r/n\"); //~ ERROR\n    |\n help: use `eprintln!` instead\n    |\n-LL |     eprintln!(\"/r\"); //~ ERROR\n-   |     ^^^^^^^^     --\n+LL -     eprint!(\"/r/n\"); //~ ERROR\n+LL +     eprintln!(\"/r\"); //~ ERROR\n+   | \n \n error: using `eprint!()` with a format string that ends in a single newline\n   --> $DIR/eprint_with_newline.rs:48:5\n@@ -114,8 +121,9 @@ LL |     eprint!(\"foo/rbar/n\") // ~ ERROR\n    |\n help: use `eprintln!` instead\n    |\n-LL |     eprintln!(\"foo/rbar\") // ~ ERROR\n-   |     ^^^^^^^^          --\n+LL -     eprint!(\"foo/rbar/n\") // ~ ERROR\n+LL +     eprintln!(\"foo/rbar\") // ~ ERROR\n+   | \n \n error: aborting due to 10 previous errors\n "}, {"sha": "f46ebd477b8f2d24e6a24b8884e2ce8a1d24503a", "filename": "tests/ui/exhaustive_items.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fexhaustive_items.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fexhaustive_items.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexhaustive_items.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -16,8 +16,8 @@ LL | #![deny(clippy::exhaustive_enums, clippy::exhaustive_structs)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^\n help: try adding #[non_exhaustive]\n    |\n-LL |     #[non_exhaustive]\n-LL |     pub enum Exhaustive {\n+LL ~     #[non_exhaustive]\n+LL ~     pub enum Exhaustive {\n    |\n \n error: exported enums should not be exhaustive\n@@ -33,8 +33,8 @@ LL | |     }\n    |\n help: try adding #[non_exhaustive]\n    |\n-LL |     #[non_exhaustive]\n-LL |     pub enum ExhaustiveWithAttrs {\n+LL ~     #[non_exhaustive]\n+LL ~     pub enum ExhaustiveWithAttrs {\n    |\n \n error: exported structs should not be exhaustive\n@@ -53,8 +53,8 @@ LL | #![deny(clippy::exhaustive_enums, clippy::exhaustive_structs)]\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^\n help: try adding #[non_exhaustive]\n    |\n-LL |     #[non_exhaustive]\n-LL |     pub struct Exhaustive {\n+LL ~     #[non_exhaustive]\n+LL ~     pub struct Exhaustive {\n    |\n \n error: aborting due to 3 previous errors"}, {"sha": "e5cc7c1466ab4a4e117532413477ca699224871d", "filename": "tests/ui/for_kv_map.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Ffor_kv_map.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Ffor_kv_map.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_kv_map.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -8,7 +8,7 @@ LL |     for (_, v) in &m {\n help: use the corresponding method\n    |\n LL |     for v in m.values() {\n-   |         ^    ^^^^^^^^^^\n+   |         ~    ~~~~~~~~~~\n \n error: you seem to want to iterate on a map's values\n   --> $DIR/for_kv_map.rs:14:19\n@@ -19,7 +19,7 @@ LL |     for (_, v) in &*m {\n help: use the corresponding method\n    |\n LL |     for v in (*m).values() {\n-   |         ^    ^^^^^^^^^^^^^\n+   |         ~    ~~~~~~~~~~~~~\n \n error: you seem to want to iterate on a map's values\n   --> $DIR/for_kv_map.rs:22:19\n@@ -30,7 +30,7 @@ LL |     for (_, v) in &mut m {\n help: use the corresponding method\n    |\n LL |     for v in m.values_mut() {\n-   |         ^    ^^^^^^^^^^^^^^\n+   |         ~    ~~~~~~~~~~~~~~\n \n error: you seem to want to iterate on a map's values\n   --> $DIR/for_kv_map.rs:27:19\n@@ -41,7 +41,7 @@ LL |     for (_, v) in &mut *m {\n help: use the corresponding method\n    |\n LL |     for v in (*m).values_mut() {\n-   |         ^    ^^^^^^^^^^^^^^^^^\n+   |         ~    ~~~~~~~~~~~~~~~~~\n \n error: you seem to want to iterate on a map's keys\n   --> $DIR/for_kv_map.rs:33:24\n@@ -52,7 +52,7 @@ LL |     for (k, _value) in rm {\n help: use the corresponding method\n    |\n LL |     for k in rm.keys() {\n-   |         ^    ^^^^^^^^^\n+   |         ~    ~~~~~~~~~\n \n error: aborting due to 5 previous errors\n "}, {"sha": "496a083497dfaced8f257537fa3444d4454b7822", "filename": "tests/ui/format.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fformat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fformat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -29,8 +29,8 @@ LL | |     );\n    |\n help: consider using `.to_string()`\n    |\n-LL |     r##\"foo {}\n-LL | \" bar\"##.to_string();\n+LL ~     r##\"foo {}\n+LL + \" bar\"##.to_string();\n    |\n \n error: useless use of `format!`"}, {"sha": "134ce9d24116b85f33dafa8faa230edc60b0a385", "filename": "tests/ui/if_let_some_result.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fif_let_some_result.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fif_let_some_result.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_let_some_result.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -8,7 +8,7 @@ LL |     if let Some(y) = x.parse().ok() { y } else { 0 }\n help: consider matching on `Ok(y)` and removing the call to `ok` instead\n    |\n LL |     if let Ok(y) = x.parse() { y } else { 0 }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: matching on `Some` with `ok()` is redundant\n   --> $DIR/if_let_some_result.rs:16:9\n@@ -19,7 +19,7 @@ LL |         if let Some(y) = x   .   parse()   .   ok   ()    {\n help: consider matching on `Ok(y)` and removing the call to `ok` instead\n    |\n LL |         if let Ok(y) = x   .   parse()       {\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to 2 previous errors\n "}, {"sha": "2e62dd30f9fc59f7b11ca90b7145a517dc28037f", "filename": "tests/ui/implicit_hasher.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fimplicit_hasher.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fimplicit_hasher.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplicit_hasher.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -12,11 +12,11 @@ LL | #![deny(clippy::implicit_hasher)]\n help: consider adding a type parameter\n    |\n LL | impl<K: Hash + Eq, V, S: ::std::hash::BuildHasher + Default> Foo<i8> for HashMap<K, V, S> {\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^             ^^^^^^^^^^^^^^^^\n+   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~             ~~~~~~~~~~~~~~~~\n help: ...and use generic constructor\n    |\n LL |         (HashMap::default(), HashMap::with_capacity_and_hasher(10, Default::default()))\n-   |          ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |          ~~~~~~~~~~~~~~~~~~  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: impl for `HashMap` should be generalized over different hashers\n   --> $DIR/implicit_hasher.rs:25:36\n@@ -27,11 +27,11 @@ LL | impl<K: Hash + Eq, V> Foo<i8> for (HashMap<K, V>,) {\n help: consider adding a type parameter\n    |\n LL | impl<K: Hash + Eq, V, S: ::std::hash::BuildHasher + Default> Foo<i8> for (HashMap<K, V, S>,) {\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^              ^^^^^^^^^^^^^^^^\n+   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~              ~~~~~~~~~~~~~~~~\n help: ...and use generic constructor\n    |\n LL |         ((HashMap::default(),), (HashMap::with_capacity_and_hasher(10, Default::default()),))\n-   |           ^^^^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |           ~~~~~~~~~~~~~~~~~~     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: impl for `HashMap` should be generalized over different hashers\n   --> $DIR/implicit_hasher.rs:30:19\n@@ -42,11 +42,11 @@ LL | impl Foo<i16> for HashMap<String, String> {\n help: consider adding a type parameter\n    |\n LL | impl<S: ::std::hash::BuildHasher + Default> Foo<i16> for HashMap<String, String, S> {\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     +++++++++++++++++++++++++++++++++++++++              ~~~~~~~~~~~~~~~~~~~~~~~~~~\n help: ...and use generic constructor\n    |\n LL |         (HashMap::default(), HashMap::with_capacity_and_hasher(10, Default::default()))\n-   |          ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |          ~~~~~~~~~~~~~~~~~~  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: impl for `HashSet` should be generalized over different hashers\n   --> $DIR/implicit_hasher.rs:47:32\n@@ -57,11 +57,11 @@ LL | impl<T: Hash + Eq> Foo<i8> for HashSet<T> {\n help: consider adding a type parameter\n    |\n LL | impl<T: Hash + Eq, S: ::std::hash::BuildHasher + Default> Foo<i8> for HashSet<T, S> {\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^             ^^^^^^^^^^^^^\n+   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~             ~~~~~~~~~~~~~\n help: ...and use generic constructor\n    |\n LL |         (HashSet::default(), HashSet::with_capacity_and_hasher(10, Default::default()))\n-   |          ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |          ~~~~~~~~~~~~~~~~~~  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: impl for `HashSet` should be generalized over different hashers\n   --> $DIR/implicit_hasher.rs:52:19\n@@ -72,11 +72,11 @@ LL | impl Foo<i16> for HashSet<String> {\n help: consider adding a type parameter\n    |\n LL | impl<S: ::std::hash::BuildHasher + Default> Foo<i16> for HashSet<String, S> {\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^              ^^^^^^^^^^^^^^^^^^\n+   |     +++++++++++++++++++++++++++++++++++++++              ~~~~~~~~~~~~~~~~~~\n help: ...and use generic constructor\n    |\n LL |         (HashSet::default(), HashSet::with_capacity_and_hasher(10, Default::default()))\n-   |          ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |          ~~~~~~~~~~~~~~~~~~  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: parameter of type `HashMap` should be generalized over different hashers\n   --> $DIR/implicit_hasher.rs:69:23\n@@ -87,7 +87,7 @@ LL | pub fn foo(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {}\n help: consider adding a type parameter\n    |\n LL | pub fn foo<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i32, S>, _set: &mut HashSet<i32>) {}\n-   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^            ^^^^^^^^^^^^^^^^^^^^\n+   |           +++++++++++++++++++++++++++++            ~~~~~~~~~~~~~~~~~~~~\n \n error: parameter of type `HashSet` should be generalized over different hashers\n   --> $DIR/implicit_hasher.rs:69:53\n@@ -98,7 +98,7 @@ LL | pub fn foo(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {}\n help: consider adding a type parameter\n    |\n LL | pub fn foo<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32, S>) {}\n-   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                          ^^^^^^^^^^^^^^^\n+   |           +++++++++++++++++++++++++++++                                          ~~~~~~~~~~~~~~~\n \n error: impl for `HashMap` should be generalized over different hashers\n   --> $DIR/implicit_hasher.rs:73:43\n@@ -113,11 +113,11 @@ LL | gen!(impl);\n help: consider adding a type parameter\n    |\n LL |         impl<K: Hash + Eq, V, S: ::std::hash::BuildHasher + Default> Foo<u8> for HashMap<K, V, S> {\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^             ^^^^^^^^^^^^^^^^\n+   |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~             ~~~~~~~~~~~~~~~~\n help: ...and use generic constructor\n    |\n LL |                 (HashMap::default(), HashMap::with_capacity_and_hasher(10, Default::default()))\n-   |                  ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                  ~~~~~~~~~~~~~~~~~~  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: parameter of type `HashMap` should be generalized over different hashers\n   --> $DIR/implicit_hasher.rs:81:33\n@@ -132,7 +132,7 @@ LL | gen!(fn bar);\n help: consider adding a type parameter\n    |\n LL |         pub fn $name<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i32, S>, _set: &mut HashSet<i32>) {}\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^            ^^^^^^^^^^^^^^^^^^^^\n+   |                     +++++++++++++++++++++++++++++            ~~~~~~~~~~~~~~~~~~~~\n \n error: parameter of type `HashSet` should be generalized over different hashers\n   --> $DIR/implicit_hasher.rs:81:63\n@@ -147,7 +147,7 @@ LL | gen!(fn bar);\n help: consider adding a type parameter\n    |\n LL |         pub fn $name<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32, S>) {}\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                          ^^^^^^^^^^^^^^^\n+   |                     +++++++++++++++++++++++++++++                                          ~~~~~~~~~~~~~~~\n \n error: aborting due to 10 previous errors\n "}, {"sha": "5e078b15ce393f6070b3f932ec0553d0c880f91f", "filename": "tests/ui/implicit_return.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fimplicit_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fimplicit_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplicit_return.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -94,9 +94,9 @@ LL | |     }\n    |\n help: add `return` as shown\n    |\n-LL |     return loop {\n-LL |         m!(true);\n-LL |     }\n+LL ~     return loop {\n+LL +         m!(true);\n+LL +     }\n    |\n \n error: missing `return` statement"}, {"sha": "0eac28fbd35003d6a1c8009f6eeb59de653ac9eb", "filename": "tests/ui/large_enum_variant.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Flarge_enum_variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Flarge_enum_variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flarge_enum_variant.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -13,7 +13,7 @@ LL |     A(i32),\n help: consider boxing the large fields to reduce the total size of the enum\n    |\n LL |     B(Box<[i32; 8000]>),\n-   |       ^^^^^^^^^^^^^^^^\n+   |       ~~~~~~~~~~~~~~~~\n \n error: large size difference between variants\n   --> $DIR/large_enum_variant.rs:36:5\n@@ -29,7 +29,7 @@ LL |     VariantOk(i32, u32),\n help: consider boxing the large fields to reduce the total size of the enum\n    |\n LL |     ContainingLargeEnum(Box<LargeEnum>),\n-   |                         ^^^^^^^^^^^^^^\n+   |                         ~~~~~~~~~~~~~~\n \n error: large size difference between variants\n   --> $DIR/large_enum_variant.rs:46:5\n@@ -62,7 +62,7 @@ LL |     VariantOk(i32, u32),\n help: consider boxing the large fields to reduce the total size of the enum\n    |\n LL |     StructLikeLarge2 { x: Box<[i32; 8000]> },\n-   |                           ^^^^^^^^^^^^^^^^\n+   |                           ~~~~~~~~~~~~~~~~\n \n error: aborting due to 4 previous errors\n "}, {"sha": "17fd694bf7ac9ab12b7c1366b9812b62a99842c0", "filename": "tests/ui/let_and_return.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Flet_and_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Flet_and_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_and_return.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -9,8 +9,8 @@ LL |     x\n    = note: `-D clippy::let-and-return` implied by `-D warnings`\n help: return the expression directly\n    |\n-LL |     \n-LL |     5\n+LL ~     \n+LL ~     5\n    |\n \n error: returning the result of a `let` binding from a block\n@@ -23,8 +23,8 @@ LL |         x\n    |\n help: return the expression directly\n    |\n-LL |         \n-LL |         5\n+LL ~         \n+LL ~         5\n    |\n \n error: returning the result of a `let` binding from a block\n@@ -37,8 +37,8 @@ LL |             clone\n    |\n help: return the expression directly\n    |\n-LL |             \n-LL |             Arc::clone(&self.foo) as _\n+LL ~             \n+LL ~             Arc::clone(&self.foo) as _\n    |\n \n error: aborting due to 3 previous errors"}, {"sha": "f2600c6c22883ef6f28434f10efa95a7c8268eea", "filename": "tests/ui/let_unit.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Flet_unit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Flet_unit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_unit.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -26,12 +26,12 @@ LL | |         .unwrap();\n    |\n help: omit the `let` binding\n    |\n-LL |     v\n-LL |         .into_iter()\n-LL |         .map(|i| i * 2)\n-LL |         .filter(|i| i % 2 == 0)\n-LL |         .map(|_| ())\n-LL |         .next()\n+LL ~     v\n+LL +         .into_iter()\n+LL +         .map(|i| i * 2)\n+LL +         .filter(|i| i % 2 == 0)\n+LL +         .map(|_| ())\n+LL +         .next()\n  ...\n \n error: aborting due to 3 previous errors"}, {"sha": "99542e20f785fea9f916c59976b20850fcd8edc7", "filename": "tests/ui/literals.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fliterals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fliterals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fliterals.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -28,11 +28,11 @@ LL |     let fail_multi_zero = 000_123usize;\n help: if you mean to use a decimal constant, remove the `0` to avoid confusion\n    |\n LL |     let fail_multi_zero = 123usize;\n-   |                           ^^^^^^^^\n+   |                           ~~~~~~~~\n help: if you mean to use an octal constant, use `0o`\n    |\n LL |     let fail_multi_zero = 0o123usize;\n-   |                           ^^^^^^^^^^\n+   |                           ~~~~~~~~~~\n \n error: this is a decimal constant\n   --> $DIR/literals.rs:21:17\n@@ -43,11 +43,11 @@ LL |     let fail8 = 0123;\n help: if you mean to use a decimal constant, remove the `0` to avoid confusion\n    |\n LL |     let fail8 = 123;\n-   |                 ^^^\n+   |                 ~~~\n help: if you mean to use an octal constant, use `0o`\n    |\n LL |     let fail8 = 0o123;\n-   |                 ^^^^^\n+   |                 ~~~~~\n \n error: digits grouped inconsistently by underscores\n   --> $DIR/literals.rs:33:18"}, {"sha": "51f1a52b6dd65154d3b50d0a56bedfb8d24c37c9", "filename": "tests/ui/manual_async_fn.stderr", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fmanual_async_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fmanual_async_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_async_fn.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -8,11 +8,11 @@ LL | fn fut() -> impl Future<Output = i32> {\n help: make the function `async` and return the output of the future directly\n    |\n LL | async fn fut() -> i32 {\n-   | ^^^^^^^^^^^^^^^^^^^^^\n+   | ~~~~~~~~~~~~~~~~~~~~~\n help: move the body of the async block to the enclosing function\n    |\n LL | fn fut() -> impl Future<Output = i32> { 42 }\n-   |                                       ^^^^^^\n+   |                                       ~~~~~~\n \n error: this function can be simplified using the `async fn` syntax\n   --> $DIR/manual_async_fn.rs:13:1\n@@ -23,11 +23,11 @@ LL | fn fut2() ->impl Future<Output = i32> {\n help: make the function `async` and return the output of the future directly\n    |\n LL | async fn fut2() -> i32 {\n-   | ^^^^^^^^^^^^^^^^^^^^^^\n+   | ~~~~~~~~~~~~~~~~~~~~~~\n help: move the body of the async block to the enclosing function\n    |\n LL | fn fut2() ->impl Future<Output = i32> { 42 }\n-   |                                       ^^^^^^\n+   |                                       ~~~~~~\n \n error: this function can be simplified using the `async fn` syntax\n   --> $DIR/manual_async_fn.rs:18:1\n@@ -38,11 +38,11 @@ LL | fn fut3()-> impl Future<Output = i32> {\n help: make the function `async` and return the output of the future directly\n    |\n LL | async fn fut3() -> i32 {\n-   | ^^^^^^^^^^^^^^^^^^^^^^\n+   | ~~~~~~~~~~~~~~~~~~~~~~\n help: move the body of the async block to the enclosing function\n    |\n LL | fn fut3()-> impl Future<Output = i32> { 42 }\n-   |                                       ^^^^^^\n+   |                                       ~~~~~~\n \n error: this function can be simplified using the `async fn` syntax\n   --> $DIR/manual_async_fn.rs:22:1\n@@ -53,11 +53,11 @@ LL | fn empty_fut() -> impl Future<Output = ()> {\n help: make the function `async` and remove the return type\n    |\n LL | async fn empty_fut() {\n-   | ^^^^^^^^^^^^^^^^^^^^\n+   | ~~~~~~~~~~~~~~~~~~~~\n help: move the body of the async block to the enclosing function\n    |\n LL | fn empty_fut() -> impl Future<Output = ()> {}\n-   |                                            ^^\n+   |                                            ~~\n \n error: this function can be simplified using the `async fn` syntax\n   --> $DIR/manual_async_fn.rs:27:1\n@@ -68,11 +68,11 @@ LL | fn empty_fut2() ->impl Future<Output = ()> {\n help: make the function `async` and remove the return type\n    |\n LL | async fn empty_fut2() {\n-   | ^^^^^^^^^^^^^^^^^^^^^\n+   | ~~~~~~~~~~~~~~~~~~~~~\n help: move the body of the async block to the enclosing function\n    |\n LL | fn empty_fut2() ->impl Future<Output = ()> {}\n-   |                                            ^^\n+   |                                            ~~\n \n error: this function can be simplified using the `async fn` syntax\n   --> $DIR/manual_async_fn.rs:32:1\n@@ -83,11 +83,11 @@ LL | fn empty_fut3()-> impl Future<Output = ()> {\n help: make the function `async` and remove the return type\n    |\n LL | async fn empty_fut3() {\n-   | ^^^^^^^^^^^^^^^^^^^^^\n+   | ~~~~~~~~~~~~~~~~~~~~~\n help: move the body of the async block to the enclosing function\n    |\n LL | fn empty_fut3()-> impl Future<Output = ()> {}\n-   |                                            ^^\n+   |                                            ~~\n \n error: this function can be simplified using the `async fn` syntax\n   --> $DIR/manual_async_fn.rs:36:1\n@@ -98,11 +98,11 @@ LL | fn core_fut() -> impl core::future::Future<Output = i32> {\n help: make the function `async` and return the output of the future directly\n    |\n LL | async fn core_fut() -> i32 {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   | ~~~~~~~~~~~~~~~~~~~~~~~~~~\n help: move the body of the async block to the enclosing function\n    |\n LL | fn core_fut() -> impl core::future::Future<Output = i32> { 42 }\n-   |                                                          ^^^^^^\n+   |                                                          ~~~~~~\n \n error: this function can be simplified using the `async fn` syntax\n   --> $DIR/manual_async_fn.rs:58:5\n@@ -113,15 +113,15 @@ LL |     fn inh_fut() -> impl Future<Output = i32> {\n help: make the function `async` and return the output of the future directly\n    |\n LL |     async fn inh_fut() -> i32 {\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ~~~~~~~~~~~~~~~~~~~~~~~~~\n help: move the body of the async block to the enclosing function\n    |\n-LL |     fn inh_fut() -> impl Future<Output = i32> {\n-LL |         // NOTE: this code is here just to check that the indentation is correct in the suggested fix\n-LL |         let a = 42;\n-LL |         let b = 21;\n-LL |         if a < b {\n-LL |             let c = 21;\n+LL ~     fn inh_fut() -> impl Future<Output = i32> {\n+LL +         // NOTE: this code is here just to check that the indentation is correct in the suggested fix\n+LL +         let a = 42;\n+LL +         let b = 21;\n+LL +         if a < b {\n+LL +             let c = 21;\n  ...\n \n error: this function can be simplified using the `async fn` syntax\n@@ -133,11 +133,11 @@ LL | fn elided(_: &i32) -> impl Future<Output = i32> + '_ {\n help: make the function `async` and return the output of the future directly\n    |\n LL | async fn elided(_: &i32) -> i32 {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n help: move the body of the async block to the enclosing function\n    |\n LL | fn elided(_: &i32) -> impl Future<Output = i32> + '_ { 42 }\n-   |                                                      ^^^^^^\n+   |                                                      ~~~~~~\n \n error: this function can be simplified using the `async fn` syntax\n   --> $DIR/manual_async_fn.rs:102:1\n@@ -148,11 +148,11 @@ LL | fn explicit<'a, 'b>(_: &'a i32, _: &'b i32) -> impl Future<Output = i32> +\n help: make the function `async` and return the output of the future directly\n    |\n LL | async fn explicit<'a, 'b>(_: &'a i32, _: &'b i32) -> i32 {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n help: move the body of the async block to the enclosing function\n    |\n LL | fn explicit<'a, 'b>(_: &'a i32, _: &'b i32) -> impl Future<Output = i32> + 'a + 'b { 42 }\n-   |                                                                                    ^^^^^^\n+   |                                                                                    ~~~~~~\n \n error: aborting due to 10 previous errors\n "}, {"sha": "0243158dec50747ee4a944b7c8b08bb35c177f9b", "filename": "tests/ui/manual_memcpy/with_loop_counters.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fmanual_memcpy%2Fwith_loop_counters.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fmanual_memcpy%2Fwith_loop_counters.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_memcpy%2Fwith_loop_counters.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -85,8 +85,8 @@ LL | |     }\n    |\n help: try replacing the loop by\n    |\n-LL |     dst[3..(src.len() + 3)].clone_from_slice(&src[..]);\n-LL |     dst2[30..(src.len() + 30)].clone_from_slice(&src[..]);\n+LL ~     dst[3..(src.len() + 3)].clone_from_slice(&src[..]);\n+LL +     dst2[30..(src.len() + 30)].clone_from_slice(&src[..]);\n    |\n \n error: it looks like you're manually copying between slices"}, {"sha": "8ff0137a8120e1a413ce53da92a3cfac11675f55", "filename": "tests/ui/manual_memcpy/without_loop_counters.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fmanual_memcpy%2Fwithout_loop_counters.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fmanual_memcpy%2Fwithout_loop_counters.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_memcpy%2Fwithout_loop_counters.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -51,8 +51,8 @@ LL | |     }\n    |\n help: try replacing the loop by\n    |\n-LL |     dst[10..256].clone_from_slice(&src[(10 - 5)..(256 - 5)]);\n-LL |     dst2[(10 + 500)..(256 + 500)].clone_from_slice(&src[10..256]);\n+LL ~     dst[10..256].clone_from_slice(&src[(10 - 5)..(256 - 5)]);\n+LL +     dst2[(10 + 500)..(256 + 500)].clone_from_slice(&src[10..256]);\n    |\n \n error: it looks like you're manually copying between slices"}, {"sha": "65459a097384b08dedd024e2a3d2fc172b4f7524", "filename": "tests/ui/manual_ok_or.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fmanual_ok_or.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fmanual_ok_or.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_ok_or.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -32,9 +32,9 @@ LL | |     );\n    |\n help: replace with\n    |\n-LL |     foo.ok_or(&format!(\n-LL |         \"{}{}{}{}{}{}{}\",\n-LL |         \"Alice\", \"Bob\", \"Sarah\", \"Marc\", \"Sandra\", \"Eric\", \"Jenifer\"));\n+LL ~     foo.ok_or(&format!(\n+LL +         \"{}{}{}{}{}{}{}\",\n+LL ~         \"Alice\", \"Bob\", \"Sarah\", \"Marc\", \"Sandra\", \"Eric\", \"Jenifer\"));\n    |\n \n error: aborting due to 4 previous errors"}, {"sha": "896edf2ae516df33cd1713f4e8197ef9010f8201", "filename": "tests/ui/manual_strip.stderr", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fmanual_strip.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fmanual_strip.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_strip.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -12,12 +12,12 @@ LL |     if s.starts_with(\"ab\") {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n help: try using the `strip_prefix` method\n    |\n-LL |     if let Some(<stripped>) = s.strip_prefix(\"ab\") {\n-LL |         str::to_string(<stripped>);\n-LL |         <stripped>.to_string();\n+LL ~     if let Some(<stripped>) = s.strip_prefix(\"ab\") {\n+LL ~         str::to_string(<stripped>);\n+LL ~         <stripped>.to_string();\n LL | \n-LL |         str::to_string(<stripped>);\n-LL |         <stripped>.to_string();\n+LL ~         str::to_string(<stripped>);\n+LL ~         <stripped>.to_string();\n    |\n \n error: stripping a suffix manually\n@@ -33,12 +33,12 @@ LL |     if s.ends_with(\"bc\") {\n    |     ^^^^^^^^^^^^^^^^^^^^^\n help: try using the `strip_suffix` method\n    |\n-LL |     if let Some(<stripped>) = s.strip_suffix(\"bc\") {\n-LL |         str::to_string(<stripped>);\n-LL |         <stripped>.to_string();\n+LL ~     if let Some(<stripped>) = s.strip_suffix(\"bc\") {\n+LL ~         str::to_string(<stripped>);\n+LL ~         <stripped>.to_string();\n LL | \n-LL |         str::to_string(<stripped>);\n-LL |         <stripped>.to_string();\n+LL ~         str::to_string(<stripped>);\n+LL ~         <stripped>.to_string();\n    |\n \n error: stripping a prefix manually\n@@ -54,9 +54,9 @@ LL |     if s.starts_with('a') {\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n help: try using the `strip_prefix` method\n    |\n-LL |     if let Some(<stripped>) = s.strip_prefix('a') {\n-LL |         str::to_string(<stripped>);\n-LL |         <stripped>.to_string();\n+LL ~     if let Some(<stripped>) = s.strip_prefix('a') {\n+LL ~         str::to_string(<stripped>);\n+LL ~         <stripped>.to_string();\n    |\n \n error: stripping a prefix manually\n@@ -72,8 +72,8 @@ LL |     if s.starts_with(prefix) {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n help: try using the `strip_prefix` method\n    |\n-LL |     if let Some(<stripped>) = s.strip_prefix(prefix) {\n-LL |         str::to_string(<stripped>);\n+LL ~     if let Some(<stripped>) = s.strip_prefix(prefix) {\n+LL ~         str::to_string(<stripped>);\n    |\n \n error: stripping a prefix manually\n@@ -89,9 +89,9 @@ LL |     if s.starts_with(PREFIX) {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n help: try using the `strip_prefix` method\n    |\n-LL |     if let Some(<stripped>) = s.strip_prefix(PREFIX) {\n-LL |         str::to_string(<stripped>);\n-LL |         str::to_string(<stripped>);\n+LL ~     if let Some(<stripped>) = s.strip_prefix(PREFIX) {\n+LL ~         str::to_string(<stripped>);\n+LL ~         str::to_string(<stripped>);\n    |\n \n error: stripping a prefix manually\n@@ -107,8 +107,8 @@ LL |     if TARGET.starts_with(prefix) {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n help: try using the `strip_prefix` method\n    |\n-LL |     if let Some(<stripped>) = TARGET.strip_prefix(prefix) {\n-LL |         str::to_string(<stripped>);\n+LL ~     if let Some(<stripped>) = TARGET.strip_prefix(prefix) {\n+LL ~         str::to_string(<stripped>);\n    |\n \n error: stripping a prefix manually\n@@ -124,8 +124,8 @@ LL |     if s1.starts_with(\"ab\") {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n help: try using the `strip_prefix` method\n    |\n-LL |     if let Some(<stripped>) = s1.strip_prefix(\"ab\") {\n-LL |         <stripped>.to_uppercase();\n+LL ~     if let Some(<stripped>) = s1.strip_prefix(\"ab\") {\n+LL ~         <stripped>.to_uppercase();\n    |\n \n error: aborting due to 7 previous errors"}, {"sha": "0e4cb798d455eaeb7e2be23442d57ee1cf10b646", "filename": "tests/ui/manual_unwrap_or.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fmanual_unwrap_or.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fmanual_unwrap_or.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_unwrap_or.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -41,11 +41,11 @@ LL | |     };\n    |\n help: replace with\n    |\n-LL |     Some(1).unwrap_or({\n-LL |         42 + 42\n-LL |             + 42 + 42 + 42\n-LL |             + 42 + 42 + 42\n-LL |     });\n+LL ~     Some(1).unwrap_or({\n+LL +         42 + 42\n+LL +             + 42 + 42 + 42\n+LL +             + 42 + 42 + 42\n+LL ~     });\n    |\n \n error: this pattern reimplements `Option::unwrap_or`\n@@ -125,11 +125,11 @@ LL | |     };\n    |\n help: replace with\n    |\n-LL |     Ok::<i32, &str>(1).unwrap_or({\n-LL |         42 + 42\n-LL |             + 42 + 42 + 42\n-LL |             + 42 + 42 + 42\n-LL |     });\n+LL ~     Ok::<i32, &str>(1).unwrap_or({\n+LL +         42 + 42\n+LL +             + 42 + 42 + 42\n+LL +             + 42 + 42 + 42\n+LL ~     });\n    |\n \n error: this pattern reimplements `Result::unwrap_or`"}, {"sha": "954000b8b76d2f598c6f18453512ab78a2d14bdb", "filename": "tests/ui/map_unwrap_or.stderr", "status": "modified", "additions": 19, "deletions": 15, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fmap_unwrap_or.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fmap_unwrap_or.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmap_unwrap_or.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -10,8 +10,9 @@ LL | |         .unwrap_or(0);\n    = note: `-D clippy::map-unwrap-or` implied by `-D warnings`\n help: use `map_or(<a>, <f>)` instead\n    |\n-LL |     let _ = opt.map_or(0, |x| x + 1);\n-   |                 ^^^^^^ ^^          --\n+LL -     let _ = opt.map(|x| x + 1)\n+LL +     let _ = opt.map_or(0, |x| x + 1);\n+   | \n \n error: called `map(<f>).unwrap_or(<a>)` on an `Option` value. This can be done more directly by calling `map_or(<a>, <f>)` instead\n   --> $DIR/map_unwrap_or.rs:20:13\n@@ -25,10 +26,10 @@ LL | |     ).unwrap_or(0);\n    |\n help: use `map_or(<a>, <f>)` instead\n    |\n-LL |     let _ = opt.map_or(0, |x| {\n+LL ~     let _ = opt.map_or(0, |x| {\n LL |         x + 1\n LL |     }\n-LL |     );\n+LL ~     );\n    |\n \n error: called `map(<f>).unwrap_or(<a>)` on an `Option` value. This can be done more directly by calling `map_or(<a>, <f>)` instead\n@@ -43,9 +44,9 @@ LL | |         });\n    |\n help: use `map_or(<a>, <f>)` instead\n    |\n-LL |     let _ = opt.map_or({\n-LL |             0\n-LL |         }, |x| x + 1);\n+LL ~     let _ = opt.map_or({\n+LL +             0\n+LL ~         }, |x| x + 1);\n    |\n \n error: called `map(<f>).unwrap_or(None)` on an `Option` value. This can be done more directly by calling `and_then(<f>)` instead\n@@ -56,8 +57,9 @@ LL |     let _ = opt.map(|x| Some(x + 1)).unwrap_or(None);\n    |\n help: use `and_then(<f>)` instead\n    |\n-LL |     let _ = opt.and_then(|x| Some(x + 1));\n-   |                 ^^^^^^^^                --\n+LL -     let _ = opt.map(|x| Some(x + 1)).unwrap_or(None);\n+LL +     let _ = opt.and_then(|x| Some(x + 1));\n+   | \n \n error: called `map(<f>).unwrap_or(None)` on an `Option` value. This can be done more directly by calling `and_then(<f>)` instead\n   --> $DIR/map_unwrap_or.rs:31:13\n@@ -71,10 +73,10 @@ LL | |     ).unwrap_or(None);\n    |\n help: use `and_then(<f>)` instead\n    |\n-LL |     let _ = opt.and_then(|x| {\n+LL ~     let _ = opt.and_then(|x| {\n LL |         Some(x + 1)\n LL |     }\n-LL |     );\n+LL ~     );\n    |\n \n error: called `map(<f>).unwrap_or(None)` on an `Option` value. This can be done more directly by calling `and_then(<f>)` instead\n@@ -88,8 +90,9 @@ LL | |         .unwrap_or(None);\n    |\n help: use `and_then(<f>)` instead\n    |\n-LL |         .and_then(|x| Some(x + 1));\n-   |          ^^^^^^^^                --\n+LL -         .map(|x| Some(x + 1))\n+LL +         .and_then(|x| Some(x + 1));\n+   | \n \n error: called `map(<f>).unwrap_or(<a>)` on an `Option` value. This can be done more directly by calling `map_or(<a>, <f>)` instead\n   --> $DIR/map_unwrap_or.rs:46:13\n@@ -99,8 +102,9 @@ LL |     let _ = Some(\"prefix\").map(|p| format!(\"{}.\", p)).unwrap_or(id);\n    |\n help: use `map_or(<a>, <f>)` instead\n    |\n-LL |     let _ = Some(\"prefix\").map_or(id, |p| format!(\"{}.\", p));\n-   |                            ^^^^^^ ^^^                      --\n+LL -     let _ = Some(\"prefix\").map(|p| format!(\"{}.\", p)).unwrap_or(id);\n+LL +     let _ = Some(\"prefix\").map_or(id, |p| format!(\"{}.\", p));\n+   | \n \n error: called `map(<f>).unwrap_or_else(<g>)` on an `Option` value. This can be done more directly by calling `map_or_else(<g>, <f>)` instead\n   --> $DIR/map_unwrap_or.rs:50:13"}, {"sha": "3fd0468e51de8e77215e92e3d0eda16bf3e9acdd", "filename": "tests/ui/match_bool.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fmatch_bool.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fmatch_bool.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_bool.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -43,9 +43,9 @@ LL | |     };\n    |\n help: consider using an `if`/`else` expression\n    |\n-LL |     if !test {\n-LL |         println!(\"Noooo!\");\n-LL |     };\n+LL ~     if !test {\n+LL +         println!(\"Noooo!\");\n+LL ~     };\n    |\n \n error: you seem to be trying to match on a boolean expression\n@@ -61,9 +61,9 @@ LL | |     };\n    |\n help: consider using an `if`/`else` expression\n    |\n-LL |     if !test {\n-LL |         println!(\"Noooo!\");\n-LL |     };\n+LL ~     if !test {\n+LL +         println!(\"Noooo!\");\n+LL ~     };\n    |\n \n error: you seem to be trying to match on a boolean expression\n@@ -79,9 +79,9 @@ LL | |     };\n    |\n help: consider using an `if`/`else` expression\n    |\n-LL |     if !(test && test) {\n-LL |         println!(\"Noooo!\");\n-LL |     };\n+LL ~     if !(test && test) {\n+LL +         println!(\"Noooo!\");\n+LL ~     };\n    |\n \n error: equal expressions as operands to `&&`\n@@ -106,11 +106,11 @@ LL | |     };\n    |\n help: consider using an `if`/`else` expression\n    |\n-LL |     if test {\n-LL |         println!(\"Yes!\");\n-LL |     } else {\n-LL |         println!(\"Noooo!\");\n-LL |     };\n+LL ~     if test {\n+LL +         println!(\"Yes!\");\n+LL +     } else {\n+LL +         println!(\"Noooo!\");\n+LL ~     };\n    |\n \n error: aborting due to 8 previous errors"}, {"sha": "366ef36c367bfb3f031f42968dc77f170c3c1ec5", "filename": "tests/ui/match_expr_like_matches_macro.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fmatch_expr_like_matches_macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fmatch_expr_like_matches_macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_expr_like_matches_macro.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -123,8 +123,8 @@ LL | |         };\n    = note: `-D clippy::match-ref-pats` implied by `-D warnings`\n help: try\n    |\n-LL |         let _res = match val {\n-LL |             Some(ref _a) => true,\n+LL ~         let _res = match val {\n+LL ~             Some(ref _a) => true,\n    |\n \n error: match expression looks like `matches!` macro\n@@ -149,8 +149,8 @@ LL | |         };\n    |\n help: try\n    |\n-LL |         let _res = match val {\n-LL |             Some(ref _a) => true,\n+LL ~         let _res = match val {\n+LL ~             Some(ref _a) => true,\n    |\n \n error: aborting due to 14 previous errors"}, {"sha": "a57a338b2763434e95af9ee7b94606447ddab33f", "filename": "tests/ui/match_ref_pats.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fmatch_ref_pats.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fmatch_ref_pats.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_ref_pats.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -10,9 +10,9 @@ LL | |         }\n    = note: `-D clippy::match-ref-pats` implied by `-D warnings`\n help: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n-LL |         match *v {\n-LL |             Some(v) => println!(\"{:?}\", v),\n-LL |             None => println!(\"none\"),\n+LL ~         match *v {\n+LL ~             Some(v) => println!(\"{:?}\", v),\n+LL ~             None => println!(\"none\"),\n    |\n \n error: you don't need to add `&` to all patterns\n@@ -26,8 +26,8 @@ LL | |     }\n    |\n help: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n-LL |     match *tup {\n-LL |         (v, 1) => println!(\"{}\", v),\n+LL ~     match *tup {\n+LL ~         (v, 1) => println!(\"{}\", v),\n    |\n \n error: you don't need to add `&` to both the expression and the patterns\n@@ -41,9 +41,9 @@ LL | |     }\n    |\n help: try\n    |\n-LL |     match w {\n-LL |         Some(v) => println!(\"{:?}\", v),\n-LL |         None => println!(\"none\"),\n+LL ~     match w {\n+LL ~         Some(v) => println!(\"{:?}\", v),\n+LL ~         None => println!(\"none\"),\n    |\n \n error: redundant pattern matching, consider using `is_none()`\n@@ -65,7 +65,7 @@ LL | |     }\n help: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n LL |     if let None = *a {\n-   |            ^^^^   ^^\n+   |            ~~~~   ~~\n \n error: redundant pattern matching, consider using `is_none()`\n   --> $DIR/match_ref_pats.rs:40:12\n@@ -84,7 +84,7 @@ LL | |     }\n help: try\n    |\n LL |     if let None = b {\n-   |            ^^^^   ^\n+   |            ~~~~   ~\n \n error: you don't need to add `&` to all patterns\n   --> $DIR/match_ref_pats.rs:67:9\n@@ -97,8 +97,8 @@ LL | |         }\n    |\n help: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n-LL |         match *foo_variant!(0) {\n-LL |             Foo::A => println!(\"A\"),\n+LL ~         match *foo_variant!(0) {\n+LL ~             Foo::A => println!(\"A\"),\n    |\n \n error: aborting due to 8 previous errors"}, {"sha": "291fa77dc2ee1e78186bcb933163d35e8fddd8e9", "filename": "tests/ui/match_single_binding.stderr", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fmatch_single_binding.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fmatch_single_binding.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_single_binding.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -11,10 +11,10 @@ LL | |     }\n    = note: `-D clippy::match-single-binding` implied by `-D warnings`\n help: consider using `let` statement\n    |\n-LL |     let (x, y, z) = (a, b, c);\n-LL |     {\n-LL |         println!(\"{} {} {}\", x, y, z);\n-LL |     }\n+LL ~     let (x, y, z) = (a, b, c);\n+LL +     {\n+LL +         println!(\"{} {} {}\", x, y, z);\n+LL +     }\n    |\n \n error: this match could be written as a `let` statement\n@@ -27,8 +27,8 @@ LL | |     }\n    |\n help: consider using `let` statement\n    |\n-LL |     let (x, y, z) = (a, b, c);\n-LL |     println!(\"{} {} {}\", x, y, z);\n+LL ~     let (x, y, z) = (a, b, c);\n+LL +     println!(\"{} {} {}\", x, y, z);\n    |\n \n error: this match could be replaced by its body itself\n@@ -52,10 +52,10 @@ LL | |     }\n    |\n help: consider using the match body instead\n    |\n-LL |     {\n-LL |         let x = 29;\n-LL |         println!(\"x has a value of {}\", x);\n-LL |     }\n+LL ~     {\n+LL +         let x = 29;\n+LL +         println!(\"x has a value of {}\", x);\n+LL +     }\n    |\n \n error: this match could be replaced by its body itself\n@@ -72,12 +72,12 @@ LL | |     }\n    |\n help: consider using the match body instead\n    |\n-LL |     {\n-LL |         let e = 5 * a;\n-LL |         if e >= 5 {\n-LL |             println!(\"e is superior to 5\");\n-LL |         }\n-LL |     }\n+LL ~     {\n+LL +         let e = 5 * a;\n+LL +         if e >= 5 {\n+LL +             println!(\"e is superior to 5\");\n+LL +         }\n+LL +     }\n    |\n \n error: this match could be written as a `let` statement\n@@ -90,8 +90,8 @@ LL | |     }\n    |\n help: consider using `let` statement\n    |\n-LL |     let Point { x, y } = p;\n-LL |     println!(\"Coords: ({}, {})\", x, y);\n+LL ~     let Point { x, y } = p;\n+LL +     println!(\"Coords: ({}, {})\", x, y);\n    |\n \n error: this match could be written as a `let` statement\n@@ -104,8 +104,8 @@ LL | |     }\n    |\n help: consider using `let` statement\n    |\n-LL |     let Point { x: x1, y: y1 } = p;\n-LL |     println!(\"Coords: ({}, {})\", x1, y1);\n+LL ~     let Point { x: x1, y: y1 } = p;\n+LL +     println!(\"Coords: ({}, {})\", x1, y1);\n    |\n \n error: this match could be written as a `let` statement\n@@ -118,8 +118,8 @@ LL | |     }\n    |\n help: consider using `let` statement\n    |\n-LL |     let ref r = x;\n-LL |     println!(\"Got a reference to {}\", r);\n+LL ~     let ref r = x;\n+LL +     println!(\"Got a reference to {}\", r);\n    |\n \n error: this match could be written as a `let` statement\n@@ -132,8 +132,8 @@ LL | |     }\n    |\n help: consider using `let` statement\n    |\n-LL |     let ref mut mr = x;\n-LL |     println!(\"Got a mutable reference to {}\", mr);\n+LL ~     let ref mut mr = x;\n+LL +     println!(\"Got a mutable reference to {}\", mr);\n    |\n \n error: this match could be written as a `let` statement\n@@ -146,8 +146,8 @@ LL | |     };\n    |\n help: consider using `let` statement\n    |\n-LL |     let Point { x, y } = coords();\n-LL |     let product = x * y;\n+LL ~     let Point { x, y } = coords();\n+LL +     let product = x * y;\n    |\n \n error: this match could be written as a `let` statement\n@@ -161,10 +161,10 @@ LL | |         })\n    |\n help: consider using `let` statement\n    |\n-LL |         .map(|i| {\n-LL |             let unwrapped = i.unwrap();\n-LL |             unwrapped\n-LL |         })\n+LL ~         .map(|i| {\n+LL +             let unwrapped = i.unwrap();\n+LL +             unwrapped\n+LL ~         })\n    |\n \n error: aborting due to 11 previous errors"}, {"sha": "d34933194660132ae730112904dae0123d09b226", "filename": "tests/ui/match_single_binding2.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fmatch_single_binding2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fmatch_single_binding2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_single_binding2.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -10,10 +10,10 @@ LL | |             },\n    = note: `-D clippy::match-single-binding` implied by `-D warnings`\n help: consider using `let` statement\n    |\n-LL |             Some((iter, _item)) => {\n-LL |                 let (min, max) = iter.size_hint();\n-LL |                 (min.saturating_add(1), max.and_then(|max| max.checked_add(1)))\n-LL |             },\n+LL ~             Some((iter, _item)) => {\n+LL +                 let (min, max) = iter.size_hint();\n+LL +                 (min.saturating_add(1), max.and_then(|max| max.checked_add(1)))\n+LL ~             },\n    |\n \n error: this match could be written as a `let` statement\n@@ -26,8 +26,8 @@ LL | |             }\n    |\n help: consider using `let` statement\n    |\n-LL |             let (a, b) = get_tup();\n-LL |             println!(\"a {:?} and b {:?}\", a, b);\n+LL ~             let (a, b) = get_tup();\n+LL +             println!(\"a {:?} and b {:?}\", a, b);\n    |\n \n error: this match could be replaced by its scrutinee and body\n@@ -40,8 +40,8 @@ LL | |     }\n    |\n help: consider using the scrutinee and body instead\n    |\n-LL |     side_effects();\n-LL |     println!(\"Side effects\");\n+LL ~     side_effects();\n+LL +     println!(\"Side effects\");\n    |\n \n error: this match could be replaced by its scrutinee and body\n@@ -57,11 +57,11 @@ LL | |     }\n    |\n help: consider using the scrutinee and body instead\n    |\n-LL |     match x {\n-LL |         0 => 1,\n-LL |         _ => 2,\n-LL |     };\n-LL |     println!(\"Single branch\");\n+LL ~     match x {\n+LL +         0 => 1,\n+LL +         _ => 2,\n+LL +     };\n+LL +     println!(\"Single branch\");\n    |\n \n error: aborting due to 4 previous errors"}, {"sha": "a2e4e86ed6b8ca853f2a29adc978f74d54183c34", "filename": "tests/ui/min_rust_version_attr.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fmin_rust_version_attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fmin_rust_version_attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmin_rust_version_attr.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -12,8 +12,8 @@ LL |         if s.starts_with(\"hello, \") {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n help: try using the `strip_prefix` method\n    |\n-LL |         if let Some(<stripped>) = s.strip_prefix(\"hello, \") {\n-LL |             assert_eq!(<stripped>.to_uppercase(), \"WORLD!\");\n+LL ~         if let Some(<stripped>) = s.strip_prefix(\"hello, \") {\n+LL ~             assert_eq!(<stripped>.to_uppercase(), \"WORLD!\");\n    |\n \n error: stripping a prefix manually\n@@ -29,8 +29,8 @@ LL |         if s.starts_with(\"hello, \") {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n help: try using the `strip_prefix` method\n    |\n-LL |         if let Some(<stripped>) = s.strip_prefix(\"hello, \") {\n-LL |             assert_eq!(<stripped>.to_uppercase(), \"WORLD!\");\n+LL ~         if let Some(<stripped>) = s.strip_prefix(\"hello, \") {\n+LL ~             assert_eq!(<stripped>.to_uppercase(), \"WORLD!\");\n    |\n \n error: aborting due to 2 previous errors"}, {"sha": "3534b53282f9b435995c851a90b2c1ff8d13f444", "filename": "tests/ui/mismatched_target_os_unix.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fmismatched_target_os_unix.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fmismatched_target_os_unix.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmismatched_target_os_unix.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -169,15 +169,15 @@ LL | #[cfg(all(not(any(solaris, linux)), freebsd))]\n help: try\n    |\n LL | #[cfg(all(not(any(target_os = \"solaris\", linux)), freebsd))]\n-   |                   ^^^^^^^^^^^^^^^^^^^^^\n+   |                   ~~~~~~~~~~~~~~~~~~~~~\n help: try\n    |\n LL | #[cfg(all(not(any(solaris, target_os = \"linux\")), freebsd))]\n-   |                            ^^^^^^^^^^^^^^^^^^^\n+   |                            ~~~~~~~~~~~~~~~~~~~\n help: try\n    |\n LL | #[cfg(all(not(any(solaris, linux)), target_os = \"freebsd\"))]\n-   |                                     ^^^^^^^^^^^^^^^^^^^^^\n+   |                                     ~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to 17 previous errors\n "}, {"sha": "7a8137778b44607cd397c03b04205f43e27aeb84", "filename": "tests/ui/needless_borrow_pat.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fneedless_borrow_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fneedless_borrow_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow_pat.rs?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -7,7 +7,7 @@\n fn f1(_: &str) {}\n macro_rules! m1 {\n     ($e:expr) => {\n-        f1($e);\n+        f1($e)\n     };\n }\n macro_rules! m3 {"}, {"sha": "365ecd68d8ff2e9cabc8e0635670712e744d17b1", "filename": "tests/ui/needless_borrow_pat.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fneedless_borrow_pat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fneedless_borrow_pat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow_pat.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -15,7 +15,7 @@ LL |         Some(ref x) => *x,\n help: try this\n    |\n LL |         Some(x) => x,\n-   |              ^     ^\n+   |              ~     ~\n \n error: this pattern creates a reference to a reference\n   --> $DIR/needless_borrow_pat.rs:72:14\n@@ -25,9 +25,9 @@ LL |         Some(ref x) => {\n    |\n help: try this\n    |\n-LL |         Some(x) => {\n-LL |             f1(x);\n+LL ~         Some(x) => {\n LL |             f1(x);\n+LL ~             f1(x);\n    |\n \n error: this pattern creates a reference to a reference\n@@ -50,8 +50,8 @@ LL |     let (ref y,) = (&x,);\n    |\n help: try this\n    |\n-LL |     let (y,) = (&x,);\n-LL |     let _: &String = y;\n+LL ~     let (y,) = (&x,);\n+LL ~     let _: &String = y;\n    |\n \n error: this pattern creates a reference to a reference\n@@ -69,7 +69,7 @@ LL |         E::A(ref x) | E::B(ref x) => *x,\n help: try this\n    |\n LL |         E::A(x) | E::B(x) => x,\n-   |              ^         ^     ^\n+   |              ~         ~     ~\n \n error: this pattern creates a reference to a reference\n   --> $DIR/needless_borrow_pat.rs:118:21\n@@ -85,9 +85,9 @@ LL | fn f2<'a>(&ref x: &&'a String) -> &'a String {\n    |\n help: try this\n    |\n-LL | fn f2<'a>(&x: &&'a String) -> &'a String {\n+LL ~ fn f2<'a>(&x: &&'a String) -> &'a String {\n LL |     let _: &String = x;\n-LL |     x\n+LL ~     x\n    |\n \n error: this pattern creates a reference to a reference\n@@ -104,8 +104,8 @@ LL |     fn f(&ref x: &&String) {\n    |\n help: try this\n    |\n-LL |     fn f(&x: &&String) {\n-LL |         let _: &String = x;\n+LL ~     fn f(&x: &&String) {\n+LL ~         let _: &String = x;\n    |\n \n error: aborting due to 12 previous errors"}, {"sha": "0f5e78f91198c27dd50d74e25bce448c89207d37", "filename": "tests/ui/needless_collect_indirect.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fneedless_collect_indirect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fneedless_collect_indirect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_collect_indirect.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -9,8 +9,8 @@ LL |     indirect_iter.into_iter().map(|x| (x, x + 1)).collect::<HashMap<_, _>>(\n    = note: `-D clippy::needless-collect` implied by `-D warnings`\n help: use the original Iterator instead of collecting it and then producing a new one\n    |\n-LL |     \n-LL |     sample.iter().map(|x| (x, x + 1)).collect::<HashMap<_, _>>();\n+LL ~     \n+LL ~     sample.iter().map(|x| (x, x + 1)).collect::<HashMap<_, _>>();\n    |\n \n error: avoid using `collect()` when not needed\n@@ -23,8 +23,8 @@ LL |     indirect_len.len();\n    |\n help: take the original Iterator's count instead of collecting it and finding the length\n    |\n-LL |     \n-LL |     sample.iter().count();\n+LL ~     \n+LL ~     sample.iter().count();\n    |\n \n error: avoid using `collect()` when not needed\n@@ -37,8 +37,8 @@ LL |     indirect_empty.is_empty();\n    |\n help: check if the original Iterator has anything instead of collecting it and seeing if it's empty\n    |\n-LL |     \n-LL |     sample.iter().next().is_none();\n+LL ~     \n+LL ~     sample.iter().next().is_none();\n    |\n \n error: avoid using `collect()` when not needed\n@@ -51,8 +51,8 @@ LL |     indirect_contains.contains(&&5);\n    |\n help: check if the original Iterator contains an element instead of collecting then checking\n    |\n-LL |     \n-LL |     sample.iter().any(|x| x == &5);\n+LL ~     \n+LL ~     sample.iter().any(|x| x == &5);\n    |\n \n error: avoid using `collect()` when not needed\n@@ -65,8 +65,8 @@ LL |     non_copy_contains.contains(&a);\n    |\n help: check if the original Iterator contains an element instead of collecting then checking\n    |\n-LL |     \n-LL |     sample.into_iter().any(|x| x == a);\n+LL ~     \n+LL ~     sample.into_iter().any(|x| x == a);\n    |\n \n error: avoid using `collect()` when not needed\n@@ -79,8 +79,8 @@ LL |         buffer.len()\n    |\n help: take the original Iterator's count instead of collecting it and finding the length\n    |\n-LL |         \n-LL |         string.split('/').count()\n+LL ~         \n+LL ~         string.split('/').count()\n    |\n \n error: avoid using `collect()` when not needed\n@@ -93,8 +93,8 @@ LL |         indirect_len.len()\n    |\n help: take the original Iterator's count instead of collecting it and finding the length\n    |\n-LL |         \n-LL |         sample.iter().count()\n+LL ~         \n+LL ~         sample.iter().count()\n    |\n \n error: avoid using `collect()` when not needed\n@@ -107,8 +107,8 @@ LL |         indirect_len.len()\n    |\n help: take the original Iterator's count instead of collecting it and finding the length\n    |\n-LL |         \n-LL |         sample.iter().count()\n+LL ~         \n+LL ~         sample.iter().count()\n    |\n \n error: avoid using `collect()` when not needed\n@@ -121,8 +121,8 @@ LL |         indirect_len.len()\n    |\n help: take the original Iterator's count instead of collecting it and finding the length\n    |\n-LL |         \n-LL |         sample.iter().count()\n+LL ~         \n+LL ~         sample.iter().count()\n    |\n \n error: aborting due to 9 previous errors"}, {"sha": "6487e57266c71a7da8a65bc3f722cfffa30884b5", "filename": "tests/ui/needless_for_each_fixable.stderr", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fneedless_for_each_fixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fneedless_for_each_fixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_for_each_fixable.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -9,9 +9,9 @@ LL | |     });\n    = note: `-D clippy::needless-for-each` implied by `-D warnings`\n help: try\n    |\n-LL |     for elem in v.iter() {\n-LL |         acc += elem;\n-LL |     }\n+LL ~     for elem in v.iter() {\n+LL +         acc += elem;\n+LL +     }\n    |\n \n error: needless use of `for_each`\n@@ -24,9 +24,9 @@ LL | |     });\n    |\n help: try\n    |\n-LL |     for elem in v.into_iter() {\n-LL |         acc += elem;\n-LL |     }\n+LL ~     for elem in v.into_iter() {\n+LL +         acc += elem;\n+LL +     }\n    |\n \n error: needless use of `for_each`\n@@ -39,9 +39,9 @@ LL | |     });\n    |\n help: try\n    |\n-LL |     for elem in [1, 2, 3].iter() {\n-LL |         acc += elem;\n-LL |     }\n+LL ~     for elem in [1, 2, 3].iter() {\n+LL +         acc += elem;\n+LL +     }\n    |\n \n error: needless use of `for_each`\n@@ -54,9 +54,9 @@ LL | |     });\n    |\n help: try\n    |\n-LL |     for (k, v) in hash_map.iter() {\n-LL |         acc += k + v;\n-LL |     }\n+LL ~     for (k, v) in hash_map.iter() {\n+LL +         acc += k + v;\n+LL +     }\n    |\n \n error: needless use of `for_each`\n@@ -69,9 +69,9 @@ LL | |     });\n    |\n help: try\n    |\n-LL |     for (k, v) in hash_map.iter_mut() {\n-LL |         acc += *k + *v;\n-LL |     }\n+LL ~     for (k, v) in hash_map.iter_mut() {\n+LL +         acc += *k + *v;\n+LL +     }\n    |\n \n error: needless use of `for_each`\n@@ -84,9 +84,9 @@ LL | |     });\n    |\n help: try\n    |\n-LL |     for k in hash_map.keys() {\n-LL |         acc += k;\n-LL |     }\n+LL ~     for k in hash_map.keys() {\n+LL +         acc += k;\n+LL +     }\n    |\n \n error: needless use of `for_each`\n@@ -99,9 +99,9 @@ LL | |     });\n    |\n help: try\n    |\n-LL |     for v in hash_map.values() {\n-LL |         acc += v;\n-LL |     }\n+LL ~     for v in hash_map.values() {\n+LL +         acc += v;\n+LL +     }\n    |\n \n error: needless use of `for_each`\n@@ -114,9 +114,9 @@ LL | |     });\n    |\n help: try\n    |\n-LL |     for elem in my_vec().iter() {\n-LL |         acc += elem;\n-LL |     }\n+LL ~     for elem in my_vec().iter() {\n+LL +         acc += elem;\n+LL +     }\n    |\n \n error: aborting due to 8 previous errors"}, {"sha": "f607e0a430e24f195850f3291db21f986a66e817", "filename": "tests/ui/needless_for_each_unfixable.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fneedless_for_each_unfixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fneedless_for_each_unfixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_for_each_unfixable.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -13,17 +13,17 @@ LL | |     });\n    = note: `-D clippy::needless-for-each` implied by `-D warnings`\n help: try\n    |\n-LL |     for v in v.iter() {\n-LL |         if *v == 10 {\n-LL |             return;\n-LL |         } else {\n-LL |             println!(\"{}\", v);\n-LL |         }\n+LL ~     for v in v.iter() {\n+LL +         if *v == 10 {\n+LL +             return;\n+LL +         } else {\n+LL +             println!(\"{}\", v);\n+LL +         }\n  ...\n help: ...and replace `return` with `continue`\n    |\n LL |             continue;\n-   |             ^^^^^^^^\n+   |             ~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "2f61ba241c45dd64f2bb13c9e6a142ab342fd796", "filename": "tests/ui/needless_pass_by_value.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fneedless_pass_by_value.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fneedless_pass_by_value.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_pass_by_value.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -63,11 +63,11 @@ LL | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n help: consider changing the type to\n    |\n LL | fn issue_2114(s: String, t: &str, u: Vec<i32>, v: Vec<i32>) {\n-   |                             ^^^^\n+   |                             ~~~~\n help: change `t.clone()` to\n    |\n LL |     let _ = t.to_string();\n-   |             ^^^^^^^^^^^^^\n+   |             ~~~~~~~~~~~~~\n \n error: this argument is passed by value, but not consumed in the function body\n   --> $DIR/needless_pass_by_value.rs:81:40\n@@ -84,11 +84,11 @@ LL | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n help: consider changing the type to\n    |\n LL | fn issue_2114(s: String, t: String, u: Vec<i32>, v: &[i32]) {\n-   |                                                     ^^^^^^\n+   |                                                     ~~~~~~\n help: change `v.clone()` to\n    |\n LL |     let _ = v.to_owned();\n-   |             ^^^^^^^^^^^^\n+   |             ~~~~~~~~~~~~\n \n error: this argument is passed by value, but not consumed in the function body\n   --> $DIR/needless_pass_by_value.rs:94:12"}, {"sha": "a86cc69dfc5db19c933922488b8819a569d06e0a", "filename": "tests/ui/needless_range_loop.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fneedless_range_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fneedless_range_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_range_loop.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -8,7 +8,7 @@ LL |     for i in 0..vec.len() {\n help: consider using an iterator\n    |\n LL |     for <item> in &vec {\n-   |         ^^^^^^    ^^^^\n+   |         ~~~~~~    ~~~~\n \n error: the loop variable `i` is only used to index `vec`\n   --> $DIR/needless_range_loop.rs:19:14\n@@ -19,7 +19,7 @@ LL |     for i in 0..vec.len() {\n help: consider using an iterator\n    |\n LL |     for <item> in &vec {\n-   |         ^^^^^^    ^^^^\n+   |         ~~~~~~    ~~~~\n \n error: the loop variable `j` is only used to index `STATIC`\n   --> $DIR/needless_range_loop.rs:24:14\n@@ -30,7 +30,7 @@ LL |     for j in 0..4 {\n help: consider using an iterator\n    |\n LL |     for <item> in &STATIC {\n-   |         ^^^^^^    ^^^^^^^\n+   |         ~~~~~~    ~~~~~~~\n \n error: the loop variable `j` is only used to index `CONST`\n   --> $DIR/needless_range_loop.rs:28:14\n@@ -41,7 +41,7 @@ LL |     for j in 0..4 {\n help: consider using an iterator\n    |\n LL |     for <item> in &CONST {\n-   |         ^^^^^^    ^^^^^^\n+   |         ~~~~~~    ~~~~~~\n \n error: the loop variable `i` is used to index `vec`\n   --> $DIR/needless_range_loop.rs:32:14\n@@ -52,7 +52,7 @@ LL |     for i in 0..vec.len() {\n help: consider using an iterator\n    |\n LL |     for (i, <item>) in vec.iter().enumerate() {\n-   |         ^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^\n+   |         ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~\n \n error: the loop variable `i` is only used to index `vec2`\n   --> $DIR/needless_range_loop.rs:40:14\n@@ -63,7 +63,7 @@ LL |     for i in 0..vec.len() {\n help: consider using an iterator\n    |\n LL |     for <item> in vec2.iter().take(vec.len()) {\n-   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |         ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: the loop variable `i` is only used to index `vec`\n   --> $DIR/needless_range_loop.rs:44:14\n@@ -74,7 +74,7 @@ LL |     for i in 5..vec.len() {\n help: consider using an iterator\n    |\n LL |     for <item> in vec.iter().skip(5) {\n-   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^\n+   |         ~~~~~~    ~~~~~~~~~~~~~~~~~~\n \n error: the loop variable `i` is only used to index `vec`\n   --> $DIR/needless_range_loop.rs:48:14\n@@ -85,7 +85,7 @@ LL |     for i in 0..MAX_LEN {\n help: consider using an iterator\n    |\n LL |     for <item> in vec.iter().take(MAX_LEN) {\n-   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |         ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: the loop variable `i` is only used to index `vec`\n   --> $DIR/needless_range_loop.rs:52:14\n@@ -96,7 +96,7 @@ LL |     for i in 0..=MAX_LEN {\n help: consider using an iterator\n    |\n LL |     for <item> in vec.iter().take(MAX_LEN + 1) {\n-   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |         ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: the loop variable `i` is only used to index `vec`\n   --> $DIR/needless_range_loop.rs:56:14\n@@ -107,7 +107,7 @@ LL |     for i in 5..10 {\n help: consider using an iterator\n    |\n LL |     for <item> in vec.iter().take(10).skip(5) {\n-   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |         ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: the loop variable `i` is only used to index `vec`\n   --> $DIR/needless_range_loop.rs:60:14\n@@ -118,7 +118,7 @@ LL |     for i in 5..=10 {\n help: consider using an iterator\n    |\n LL |     for <item> in vec.iter().take(10 + 1).skip(5) {\n-   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |         ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: the loop variable `i` is used to index `vec`\n   --> $DIR/needless_range_loop.rs:64:14\n@@ -129,7 +129,7 @@ LL |     for i in 5..vec.len() {\n help: consider using an iterator\n    |\n LL |     for (i, <item>) in vec.iter().enumerate().skip(5) {\n-   |         ^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |         ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: the loop variable `i` is used to index `vec`\n   --> $DIR/needless_range_loop.rs:68:14\n@@ -140,7 +140,7 @@ LL |     for i in 5..10 {\n help: consider using an iterator\n    |\n LL |     for (i, <item>) in vec.iter().enumerate().take(10).skip(5) {\n-   |         ^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |         ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: the loop variable `i` is used to index `vec`\n   --> $DIR/needless_range_loop.rs:73:14\n@@ -151,7 +151,7 @@ LL |     for i in 0..vec.len() {\n help: consider using an iterator\n    |\n LL |     for (i, <item>) in vec.iter_mut().enumerate() {\n-   |         ^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |         ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to 14 previous errors\n "}, {"sha": "1e6ec5e667aa0839f716e1d8802ed2b726290153", "filename": "tests/ui/needless_range_loop2.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fneedless_range_loop2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fneedless_range_loop2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_range_loop2.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -8,7 +8,7 @@ LL |     for i in 3..10 {\n help: consider using an iterator\n    |\n LL |     for <item> in ns.iter().take(10).skip(3) {\n-   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |         ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: the loop variable `i` is only used to index `ms`\n   --> $DIR/needless_range_loop2.rs:31:14\n@@ -19,7 +19,7 @@ LL |     for i in 0..ms.len() {\n help: consider using an iterator\n    |\n LL |     for <item> in &mut ms {\n-   |         ^^^^^^    ^^^^^^^\n+   |         ~~~~~~    ~~~~~~~\n \n error: the loop variable `i` is only used to index `ms`\n   --> $DIR/needless_range_loop2.rs:37:14\n@@ -30,7 +30,7 @@ LL |     for i in 0..ms.len() {\n help: consider using an iterator\n    |\n LL |     for <item> in &mut ms {\n-   |         ^^^^^^    ^^^^^^^\n+   |         ~~~~~~    ~~~~~~~\n \n error: the loop variable `i` is only used to index `vec`\n   --> $DIR/needless_range_loop2.rs:61:14\n@@ -41,7 +41,7 @@ LL |     for i in x..x + 4 {\n help: consider using an iterator\n    |\n LL |     for <item> in vec.iter_mut().skip(x).take(4) {\n-   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |         ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: the loop variable `i` is only used to index `vec`\n   --> $DIR/needless_range_loop2.rs:68:14\n@@ -52,7 +52,7 @@ LL |     for i in x..=x + 4 {\n help: consider using an iterator\n    |\n LL |     for <item> in vec.iter_mut().skip(x).take(4 + 1) {\n-   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |         ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: the loop variable `i` is only used to index `arr`\n   --> $DIR/needless_range_loop2.rs:74:14\n@@ -63,7 +63,7 @@ LL |     for i in 0..3 {\n help: consider using an iterator\n    |\n LL |     for <item> in &arr {\n-   |         ^^^^^^    ^^^^\n+   |         ~~~~~~    ~~~~\n \n error: the loop variable `i` is only used to index `arr`\n   --> $DIR/needless_range_loop2.rs:78:14\n@@ -74,7 +74,7 @@ LL |     for i in 0..2 {\n help: consider using an iterator\n    |\n LL |     for <item> in arr.iter().take(2) {\n-   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^\n+   |         ~~~~~~    ~~~~~~~~~~~~~~~~~~\n \n error: the loop variable `i` is only used to index `arr`\n   --> $DIR/needless_range_loop2.rs:82:14\n@@ -85,7 +85,7 @@ LL |     for i in 1..3 {\n help: consider using an iterator\n    |\n LL |     for <item> in arr.iter().skip(1) {\n-   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^\n+   |         ~~~~~~    ~~~~~~~~~~~~~~~~~~\n \n error: aborting due to 8 previous errors\n "}, {"sha": "f49b23924efe8b5c52fb807098bf3fd5760c570b", "filename": "tests/ui/never_loop.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fnever_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fnever_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnever_loop.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -79,7 +79,7 @@ LL | |     }\n help: if you need the first element of the iterator, try writing\n    |\n LL |     if let Some(x) = (0..10).next() {\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: this loop never actually loops\n   --> $DIR/never_loop.rs:157:5"}, {"sha": "14ddb66f2324c18b6ddd10e5e9655015e5fd72a0", "filename": "tests/ui/new_without_default.stderr", "status": "modified", "additions": 36, "deletions": 36, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fnew_without_default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fnew_without_default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnew_without_default.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -9,11 +9,11 @@ LL | |     }\n    = note: `-D clippy::new-without-default` implied by `-D warnings`\n help: try adding this\n    |\n-LL | impl Default for Foo {\n-LL |     fn default() -> Self {\n-LL |         Self::new()\n-LL |     }\n-LL | }\n+LL + impl Default for Foo {\n+LL +     fn default() -> Self {\n+LL +         Self::new()\n+LL +     }\n+LL + }\n    |\n \n error: you should consider adding a `Default` implementation for `Bar`\n@@ -26,11 +26,11 @@ LL | |     }\n    |\n help: try adding this\n    |\n-LL | impl Default for Bar {\n-LL |     fn default() -> Self {\n-LL |         Self::new()\n-LL |     }\n-LL | }\n+LL + impl Default for Bar {\n+LL +     fn default() -> Self {\n+LL +         Self::new()\n+LL +     }\n+LL + }\n    |\n \n error: you should consider adding a `Default` implementation for `LtKo<'c>`\n@@ -43,11 +43,11 @@ LL | |     }\n    |\n help: try adding this\n    |\n-LL | impl<'c> Default for LtKo<'c> {\n-LL |     fn default() -> Self {\n-LL |         Self::new()\n-LL |     }\n-LL | }\n+LL + impl<'c> Default for LtKo<'c> {\n+LL +     fn default() -> Self {\n+LL +         Self::new()\n+LL +     }\n+LL + }\n    |\n \n error: you should consider adding a `Default` implementation for `NewNotEqualToDerive`\n@@ -60,11 +60,11 @@ LL | |     }\n    |\n help: try adding this\n    |\n-LL | impl Default for NewNotEqualToDerive {\n-LL |     fn default() -> Self {\n-LL |         Self::new()\n-LL |     }\n-LL | }\n+LL + impl Default for NewNotEqualToDerive {\n+LL +     fn default() -> Self {\n+LL +         Self::new()\n+LL +     }\n+LL + }\n    |\n \n error: you should consider adding a `Default` implementation for `FooGenerics<T>`\n@@ -77,11 +77,11 @@ LL | |     }\n    |\n help: try adding this\n    |\n-LL | impl<T> Default for FooGenerics<T> {\n-LL |     fn default() -> Self {\n-LL |         Self::new()\n-LL |     }\n-LL | }\n+LL + impl<T> Default for FooGenerics<T> {\n+LL +     fn default() -> Self {\n+LL +         Self::new()\n+LL +     }\n+LL + }\n    |\n \n error: you should consider adding a `Default` implementation for `BarGenerics<T>`\n@@ -94,11 +94,11 @@ LL | |     }\n    |\n help: try adding this\n    |\n-LL | impl<T: Copy> Default for BarGenerics<T> {\n-LL |     fn default() -> Self {\n-LL |         Self::new()\n-LL |     }\n-LL | }\n+LL + impl<T: Copy> Default for BarGenerics<T> {\n+LL +     fn default() -> Self {\n+LL +         Self::new()\n+LL +     }\n+LL + }\n    |\n \n error: you should consider adding a `Default` implementation for `Foo<T>`\n@@ -111,12 +111,12 @@ LL | |         }\n    |\n help: try adding this\n    |\n-LL |     impl<T> Default for Foo<T> {\n-LL |         fn default() -> Self {\n-LL |             Self::new()\n-LL |         }\n-LL |     }\n-LL | \n+LL ~     impl<T> Default for Foo<T> {\n+LL +         fn default() -> Self {\n+LL +             Self::new()\n+LL +         }\n+LL +     }\n+LL + \n  ...\n \n error: aborting due to 7 previous errors"}, {"sha": "1d39bce935db8cdb0dfedba0f9e6424613bc2249", "filename": "tests/ui/nonminimal_bool.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fnonminimal_bool.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fnonminimal_bool.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnonminimal_bool.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -51,9 +51,9 @@ LL |     let _ = a == b && c == 5 && a == b;\n help: try\n    |\n LL |     let _ = a == b && c == 5;\n-   |             ^^^^^^^^^^^^^^^^\n+   |             ~~~~~~~~~~~~~~~~\n LL |     let _ = !(a != b || c != 5);\n-   |             ^^^^^^^^^^^^^^^^^^^\n+   |             ~~~~~~~~~~~~~~~~~~~\n \n error: this boolean expression can be simplified\n   --> $DIR/nonminimal_bool.rs:28:13\n@@ -64,9 +64,9 @@ LL |     let _ = a == b || c == 5 || a == b;\n help: try\n    |\n LL |     let _ = a == b || c == 5;\n-   |             ^^^^^^^^^^^^^^^^\n+   |             ~~~~~~~~~~~~~~~~\n LL |     let _ = !(a != b && c != 5);\n-   |             ^^^^^^^^^^^^^^^^^^^\n+   |             ~~~~~~~~~~~~~~~~~~~\n \n error: this boolean expression can be simplified\n   --> $DIR/nonminimal_bool.rs:29:13\n@@ -77,9 +77,9 @@ LL |     let _ = a == b && c == 5 && b == a;\n help: try\n    |\n LL |     let _ = a == b && c == 5;\n-   |             ^^^^^^^^^^^^^^^^\n+   |             ~~~~~~~~~~~~~~~~\n LL |     let _ = !(a != b || c != 5);\n-   |             ^^^^^^^^^^^^^^^^^^^\n+   |             ~~~~~~~~~~~~~~~~~~~\n \n error: this boolean expression can be simplified\n   --> $DIR/nonminimal_bool.rs:30:13\n@@ -90,9 +90,9 @@ LL |     let _ = a != b || !(a != b || c == d);\n help: try\n    |\n LL |     let _ = a != b || c != d;\n-   |             ^^^^^^^^^^^^^^^^\n+   |             ~~~~~~~~~~~~~~~~\n LL |     let _ = !(a == b && c == d);\n-   |             ^^^^^^^^^^^^^^^^^^^\n+   |             ~~~~~~~~~~~~~~~~~~~\n \n error: this boolean expression can be simplified\n   --> $DIR/nonminimal_bool.rs:31:13\n@@ -103,9 +103,9 @@ LL |     let _ = a != b && !(a != b && c == d);\n help: try\n    |\n LL |     let _ = a != b && c != d;\n-   |             ^^^^^^^^^^^^^^^^\n+   |             ~~~~~~~~~~~~~~~~\n LL |     let _ = !(a == b || c == d);\n-   |             ^^^^^^^^^^^^^^^^^^^\n+   |             ~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to 12 previous errors\n "}, {"sha": "821099d8779dc1421b5f6625ad67e0b3e220f29f", "filename": "tests/ui/op_ref.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fop_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fop_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fop_ref.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -8,7 +8,7 @@ LL |     let foo = &5 - &6;\n help: use the values directly\n    |\n LL |     let foo = 5 - 6;\n-   |               ^   ^\n+   |               ~   ~\n \n error: taken reference of right operand\n   --> $DIR/op_ref.rs:57:13"}, {"sha": "099e49ef8e3dc5e9b7762645ba8a0e400ada3405", "filename": "tests/ui/option_if_let_else.stderr", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Foption_if_let_else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Foption_if_let_else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_if_let_else.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -36,10 +36,10 @@ LL | |     };\n    |\n help: try\n    |\n-LL |     let _ = num.as_mut().map_or(&mut 0, |s| {\n-LL |         *s += 1;\n-LL |         s\n-LL |     });\n+LL ~     let _ = num.as_mut().map_or(&mut 0, |s| {\n+LL +         *s += 1;\n+LL +         s\n+LL ~     });\n    |\n \n error: use Option::map_or instead of an if let/else\n@@ -62,10 +62,10 @@ LL | |     };\n    |\n help: try\n    |\n-LL |     let _ = num.map_or(0, |mut s| {\n-LL |         s += 1;\n-LL |         s\n-LL |     });\n+LL ~     let _ = num.map_or(0, |mut s| {\n+LL +         s += 1;\n+LL +         s\n+LL ~     });\n    |\n \n error: use Option::map_or instead of an if let/else\n@@ -82,10 +82,10 @@ LL | |     };\n    |\n help: try\n    |\n-LL |     let _ = num.as_mut().map_or(&mut 0, |s| {\n-LL |         *s += 1;\n-LL |         s\n-LL |     });\n+LL ~     let _ = num.as_mut().map_or(&mut 0, |s| {\n+LL +         *s += 1;\n+LL +         s\n+LL ~     });\n    |\n \n error: use Option::map_or instead of an if let/else\n@@ -101,10 +101,10 @@ LL | |     }\n    |\n help: try\n    |\n-LL |     arg.map_or(13, |x| {\n-LL |         let y = x * x;\n-LL |         y * y\n-LL |     })\n+LL ~     arg.map_or(13, |x| {\n+LL +         let y = x * x;\n+LL +         y * y\n+LL +     })\n    |\n \n error: use Option::map_or_else instead of an if let/else\n@@ -134,12 +134,12 @@ LL | |     };\n    |\n help: try\n    |\n-LL |     let _ = arg.map_or_else(|| {\n-LL |         let mut y = 1;\n-LL |         y = (y + 2 / y) / 2;\n-LL |         y = (y + 2 / y) / 2;\n-LL |         y\n-LL |     }, |x| x * x * x * x);\n+LL ~     let _ = arg.map_or_else(|| {\n+LL +         let mut y = 1;\n+LL +         y = (y + 2 / y) / 2;\n+LL +         y = (y + 2 / y) / 2;\n+LL +         y\n+LL ~     }, |x| x * x * x * x);\n    |\n \n error: use Option::map_or instead of an if let/else"}, {"sha": "27d68b85e6f81f853d59e6aa613e8c39904696ca", "filename": "tests/ui/option_map_or_none.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Foption_map_or_none.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Foption_map_or_none.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_map_or_none.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -17,9 +17,9 @@ LL | |                        });\n    |\n help: try using `and_then` instead\n    |\n-LL |     let _ = opt.and_then(|x| {\n-LL |                         Some(x + 1)\n-LL |                        });\n+LL ~     let _ = opt.and_then(|x| {\n+LL +                         Some(x + 1)\n+LL ~                        });\n    |\n \n error: aborting due to 2 previous errors"}, {"sha": "a10cac04411cc737cefd77015b105fe43615bf3e", "filename": "tests/ui/print_literal.stderr", "status": "modified", "additions": 33, "deletions": 22, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fprint_literal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fprint_literal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprint_literal.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -7,8 +7,9 @@ LL |     print!(\"Hello {}\", \"world\");\n    = note: `-D clippy::print-literal` implied by `-D warnings`\n help: try this\n    |\n-LL |     print!(\"Hello world\");\n-   |                   ^^^^^--\n+LL -     print!(\"Hello {}\", \"world\");\n+LL +     print!(\"Hello world\");\n+   | \n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:26:36\n@@ -18,8 +19,9 @@ LL |     println!(\"Hello {} {}\", world, \"world\");\n    |\n help: try this\n    |\n-LL |     println!(\"Hello {} world\", world);\n-   |                        ^^^^^       --\n+LL -     println!(\"Hello {} {}\", world, \"world\");\n+LL +     println!(\"Hello {} world\", world);\n+   | \n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:27:26\n@@ -29,8 +31,9 @@ LL |     println!(\"Hello {}\", \"world\");\n    |\n help: try this\n    |\n-LL |     println!(\"Hello world\");\n-   |                     ^^^^^--\n+LL -     println!(\"Hello {}\", \"world\");\n+LL +     println!(\"Hello world\");\n+   | \n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:32:25\n@@ -40,8 +43,9 @@ LL |     println!(\"{0} {1}\", \"hello\", \"world\");\n    |\n help: try this\n    |\n-LL |     println!(\"hello {1}\", \"world\");\n-   |               ^^^^^    --\n+LL -     println!(\"{0} {1}\", \"hello\", \"world\");\n+LL +     println!(\"hello {1}\", \"world\");\n+   | \n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:32:34\n@@ -51,8 +55,9 @@ LL |     println!(\"{0} {1}\", \"hello\", \"world\");\n    |\n help: try this\n    |\n-LL |     println!(\"{0} world\", \"hello\");\n-   |                   ^^^^^         --\n+LL -     println!(\"{0} {1}\", \"hello\", \"world\");\n+LL +     println!(\"{0} world\", \"hello\");\n+   | \n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:33:25\n@@ -62,8 +67,9 @@ LL |     println!(\"{1} {0}\", \"hello\", \"world\");\n    |\n help: try this\n    |\n-LL |     println!(\"{1} hello\", \"world\");\n-   |                   ^^^^^--\n+LL -     println!(\"{1} {0}\", \"hello\", \"world\");\n+LL +     println!(\"{1} hello\", \"world\");\n+   | \n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:33:34\n@@ -73,8 +79,9 @@ LL |     println!(\"{1} {0}\", \"hello\", \"world\");\n    |\n help: try this\n    |\n-LL |     println!(\"world {0}\", \"hello\");\n-   |               ^^^^^             --\n+LL -     println!(\"{1} {0}\", \"hello\", \"world\");\n+LL +     println!(\"world {0}\", \"hello\");\n+   | \n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:36:29\n@@ -84,8 +91,9 @@ LL |     println!(\"{foo} {bar}\", foo = \"hello\", bar = \"world\");\n    |\n help: try this\n    |\n-LL |     println!(\"hello {bar}\", bar = \"world\");\n-   |               ^^^^^      --\n+LL -     println!(\"{foo} {bar}\", foo = \"hello\", bar = \"world\");\n+LL +     println!(\"hello {bar}\", bar = \"world\");\n+   | \n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:36:44\n@@ -95,8 +103,9 @@ LL |     println!(\"{foo} {bar}\", foo = \"hello\", bar = \"world\");\n    |\n help: try this\n    |\n-LL |     println!(\"{foo} world\", foo = \"hello\");\n-   |                     ^^^^^               --\n+LL -     println!(\"{foo} {bar}\", foo = \"hello\", bar = \"world\");\n+LL +     println!(\"{foo} world\", foo = \"hello\");\n+   | \n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:37:29\n@@ -106,8 +115,9 @@ LL |     println!(\"{bar} {foo}\", foo = \"hello\", bar = \"world\");\n    |\n help: try this\n    |\n-LL |     println!(\"{bar} hello\", bar = \"world\");\n-   |                     ^^^^^--\n+LL -     println!(\"{bar} {foo}\", foo = \"hello\", bar = \"world\");\n+LL +     println!(\"{bar} hello\", bar = \"world\");\n+   | \n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:37:44\n@@ -117,8 +127,9 @@ LL |     println!(\"{bar} {foo}\", foo = \"hello\", bar = \"world\");\n    |\n help: try this\n    |\n-LL |     println!(\"world {foo}\", foo = \"hello\");\n-   |               ^^^^^                     --\n+LL -     println!(\"{bar} {foo}\", foo = \"hello\", bar = \"world\");\n+LL +     println!(\"world {foo}\", foo = \"hello\");\n+   | \n \n error: aborting due to 11 previous errors\n "}, {"sha": "d409bee30ece3a5b683d39ca9ef51f1d244d43f3", "filename": "tests/ui/print_with_newline.stderr", "status": "modified", "additions": 28, "deletions": 20, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fprint_with_newline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fprint_with_newline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprint_with_newline.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -7,8 +7,9 @@ LL |     print!(\"Hello/n\");\n    = note: `-D clippy::print-with-newline` implied by `-D warnings`\n help: use `println!` instead\n    |\n-LL |     println!(\"Hello\");\n-   |     ^^^^^^^       --\n+LL -     print!(\"Hello/n\");\n+LL +     println!(\"Hello\");\n+   | \n \n error: using `print!()` with a format string that ends in a single newline\n   --> $DIR/print_with_newline.rs:9:5\n@@ -18,8 +19,9 @@ LL |     print!(\"Hello {}/n\", \"world\");\n    |\n help: use `println!` instead\n    |\n-LL |     println!(\"Hello {}\", \"world\");\n-   |     ^^^^^^^          --\n+LL -     print!(\"Hello {}/n\", \"world\");\n+LL +     println!(\"Hello {}\", \"world\");\n+   | \n \n error: using `print!()` with a format string that ends in a single newline\n   --> $DIR/print_with_newline.rs:10:5\n@@ -29,8 +31,9 @@ LL |     print!(\"Hello {} {}/n\", \"world\", \"#2\");\n    |\n help: use `println!` instead\n    |\n-LL |     println!(\"Hello {} {}\", \"world\", \"#2\");\n-   |     ^^^^^^^             --\n+LL -     print!(\"Hello {} {}/n\", \"world\", \"#2\");\n+LL +     println!(\"Hello {} {}\", \"world\", \"#2\");\n+   | \n \n error: using `print!()` with a format string that ends in a single newline\n   --> $DIR/print_with_newline.rs:11:5\n@@ -40,8 +43,9 @@ LL |     print!(\"{}/n\", 1265);\n    |\n help: use `println!` instead\n    |\n-LL |     println!(\"{}\", 1265);\n-   |     ^^^^^^^    --\n+LL -     print!(\"{}/n\", 1265);\n+LL +     println!(\"{}\", 1265);\n+   | \n \n error: using `print!()` with a format string that ends in a single newline\n   --> $DIR/print_with_newline.rs:12:5\n@@ -51,8 +55,9 @@ LL |     print!(\"/n\");\n    |\n help: use `println!` instead\n    |\n-LL |     println!();\n-   |     ^^^^^^^ --\n+LL -     print!(\"/n\");\n+LL +     println!();\n+   | \n \n error: using `print!()` with a format string that ends in a single newline\n   --> $DIR/print_with_newline.rs:31:5\n@@ -62,8 +67,9 @@ LL |     print!(\"//n\"); // should fail\n    |\n help: use `println!` instead\n    |\n-LL |     println!(\"/\"); // should fail\n-   |     ^^^^^^^    --\n+LL -     print!(\"//n\"); // should fail\n+LL +     println!(\"/\"); // should fail\n+   | \n \n error: using `print!()` with a format string that ends in a single newline\n   --> $DIR/print_with_newline.rs:38:5\n@@ -76,8 +82,8 @@ LL | |     );\n    |\n help: use `println!` instead\n    |\n-LL |     println!(\n-LL |         \"\"\n+LL ~     println!(\n+LL ~         \"\"\n    |\n \n error: using `print!()` with a format string that ends in a single newline\n@@ -91,8 +97,8 @@ LL | |     );\n    |\n help: use `println!` instead\n    |\n-LL |     println!(\n-LL |         r\"\"\n+LL ~     println!(\n+LL ~         r\"\"\n    |\n \n error: using `print!()` with a format string that ends in a single newline\n@@ -103,8 +109,9 @@ LL |     print!(\"/r/n\"); //~ ERROR\n    |\n help: use `println!` instead\n    |\n-LL |     println!(\"/r\"); //~ ERROR\n-   |     ^^^^^^^     --\n+LL -     print!(\"/r/n\"); //~ ERROR\n+LL +     println!(\"/r\"); //~ ERROR\n+   | \n \n error: using `print!()` with a format string that ends in a single newline\n   --> $DIR/print_with_newline.rs:51:5\n@@ -114,8 +121,9 @@ LL |     print!(\"foo/rbar/n\") // ~ ERROR\n    |\n help: use `println!` instead\n    |\n-LL |     println!(\"foo/rbar\") // ~ ERROR\n-   |     ^^^^^^^          --\n+LL -     print!(\"foo/rbar/n\") // ~ ERROR\n+LL +     println!(\"foo/rbar\") // ~ ERROR\n+   | \n \n error: aborting due to 10 previous errors\n "}, {"sha": "64594eb870c2c5067b413095f6eabdeded968ebc", "filename": "tests/ui/ptr_arg.stderr", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fptr_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fptr_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fptr_arg.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -33,11 +33,11 @@ LL | fn cloned(x: &Vec<u8>) -> Vec<u8> {\n help: change this to\n    |\n LL | fn cloned(x: &[u8]) -> Vec<u8> {\n-   |              ^^^^^\n+   |              ~~~~~\n help: change `x.clone()` to\n    |\n LL |     let e = x.to_owned();\n-   |             ^^^^^^^^^^^^\n+   |             ~~~~~~~~~~~~\n help: change `x.clone()` to\n    |\n LL |     x.to_owned()\n@@ -52,15 +52,15 @@ LL | fn str_cloned(x: &String) -> String {\n help: change this to\n    |\n LL | fn str_cloned(x: &str) -> String {\n-   |                  ^^^^\n+   |                  ~~~~\n help: change `x.clone()` to\n    |\n LL |     let a = x.to_string();\n-   |             ^^^^^^^^^^^^^\n+   |             ~~~~~~~~~~~~~\n help: change `x.clone()` to\n    |\n LL |     let b = x.to_string();\n-   |             ^^^^^^^^^^^^^\n+   |             ~~~~~~~~~~~~~\n help: change `x.clone()` to\n    |\n LL |     x.to_string()\n@@ -75,15 +75,15 @@ LL | fn path_cloned(x: &PathBuf) -> PathBuf {\n help: change this to\n    |\n LL | fn path_cloned(x: &Path) -> PathBuf {\n-   |                   ^^^^^\n+   |                   ~~~~~\n help: change `x.clone()` to\n    |\n LL |     let a = x.to_path_buf();\n-   |             ^^^^^^^^^^^^^^^\n+   |             ~~~~~~~~~~~~~~~\n help: change `x.clone()` to\n    |\n LL |     let b = x.to_path_buf();\n-   |             ^^^^^^^^^^^^^^^\n+   |             ~~~~~~~~~~~~~~~\n help: change `x.clone()` to\n    |\n LL |     x.to_path_buf()\n@@ -98,15 +98,15 @@ LL | fn false_positive_capacity(x: &Vec<u8>, y: &String) {\n help: change this to\n    |\n LL | fn false_positive_capacity(x: &Vec<u8>, y: &str) {\n-   |                                            ^^^^\n+   |                                            ~~~~\n help: change `y.clone()` to\n    |\n LL |     let b = y.to_string();\n-   |             ^^^^^^^^^^^^^\n+   |             ~~~~~~~~~~~~~\n help: change `y.as_str()` to\n    |\n LL |     let c = y;\n-   |             ^\n+   |             ~\n \n error: using a reference to `Cow` is not recommended\n   --> $DIR/ptr_arg.rs:90:25\n@@ -123,15 +123,15 @@ LL |     fn foo_vec(vec: &Vec<u8>) {\n help: change this to\n    |\n LL |     fn foo_vec(vec: &[u8]) {\n-   |                     ^^^^^\n+   |                     ~~~~~\n help: change `vec.clone()` to\n    |\n LL |         let _ = vec.to_owned().pop();\n-   |                 ^^^^^^^^^^^^^^\n+   |                 ~~~~~~~~~~~~~~\n help: change `vec.clone()` to\n    |\n LL |         let _ = vec.to_owned().clone();\n-   |                 ^^^^^^^^^^^^^^\n+   |                 ~~~~~~~~~~~~~~\n \n error: writing `&PathBuf` instead of `&Path` involves a new object where a slice will do\n   --> $DIR/ptr_arg.rs:148:23\n@@ -142,15 +142,15 @@ LL |     fn foo_path(path: &PathBuf) {\n help: change this to\n    |\n LL |     fn foo_path(path: &Path) {\n-   |                       ^^^^^\n+   |                       ~~~~~\n help: change `path.clone()` to\n    |\n LL |         let _ = path.to_path_buf().pop();\n-   |                 ^^^^^^^^^^^^^^^^^^\n+   |                 ~~~~~~~~~~~~~~~~~~\n help: change `path.clone()` to\n    |\n LL |         let _ = path.to_path_buf().clone();\n-   |                 ^^^^^^^^^^^^^^^^^^\n+   |                 ~~~~~~~~~~~~~~~~~~\n \n error: writing `&PathBuf` instead of `&Path` involves a new object where a slice will do\n   --> $DIR/ptr_arg.rs:153:21\n@@ -161,15 +161,15 @@ LL |     fn foo_str(str: &PathBuf) {\n help: change this to\n    |\n LL |     fn foo_str(str: &Path) {\n-   |                     ^^^^^\n+   |                     ~~~~~\n help: change `str.clone()` to\n    |\n LL |         let _ = str.to_path_buf().pop();\n-   |                 ^^^^^^^^^^^^^^^^^\n+   |                 ~~~~~~~~~~~~~~~~~\n help: change `str.clone()` to\n    |\n LL |         let _ = str.to_path_buf().clone();\n-   |                 ^^^^^^^^^^^^^^^^^\n+   |                 ~~~~~~~~~~~~~~~~~\n \n error: aborting due to 12 previous errors\n "}, {"sha": "cd6db8ddc8864fd2a08de85ed9de26c8c31fd553", "filename": "tests/ui/ref_binding_to_reference.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fref_binding_to_reference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fref_binding_to_reference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fref_binding_to_reference.rs?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -7,7 +7,7 @@\n fn f1(_: &str) {}\n macro_rules! m2 {\n     ($e:expr) => {\n-        f1(*$e);\n+        f1(*$e)\n     };\n }\n macro_rules! m3 {"}, {"sha": "eb36cd516a246a9e4f581b7079efb0bacc8cc09d", "filename": "tests/ui/ref_binding_to_reference.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fref_binding_to_reference.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fref_binding_to_reference.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fref_binding_to_reference.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -8,7 +8,7 @@ LL |         Some(ref x) => x,\n help: try this\n    |\n LL |         Some(x) => &x,\n-   |              ^     ^^\n+   |              ~     ~~\n \n error: this pattern creates a reference to a reference\n   --> $DIR/ref_binding_to_reference.rs:37:14\n@@ -18,10 +18,10 @@ LL |         Some(ref x) => {\n    |\n help: try this\n    |\n-LL |         Some(x) => {\n+LL ~         Some(x) => {\n LL |             f1(x);\n-LL |             f1(x);\n-LL |             &x\n+LL ~             f1(x);\n+LL ~             &x\n    |\n \n error: this pattern creates a reference to a reference\n@@ -33,7 +33,7 @@ LL |         Some(ref x) => m2!(x),\n help: try this\n    |\n LL |         Some(x) => m2!(&x),\n-   |              ^         ^^\n+   |              ~         ~~\n \n error: this pattern creates a reference to a reference\n   --> $DIR/ref_binding_to_reference.rs:52:15\n@@ -43,8 +43,8 @@ LL |     let _ = |&ref x: &&String| {\n    |\n help: try this\n    |\n-LL |     let _ = |&x: &&String| {\n-LL |         let _: &&String = &x;\n+LL ~     let _ = |&x: &&String| {\n+LL ~         let _: &&String = &x;\n    |\n \n error: this pattern creates a reference to a reference\n@@ -55,9 +55,9 @@ LL | fn f2<'a>(&ref x: &&'a String) -> &'a String {\n    |\n help: try this\n    |\n-LL | fn f2<'a>(&x: &&'a String) -> &'a String {\n-LL |     let _: &&String = &x;\n-LL |     x\n+LL ~ fn f2<'a>(&x: &&'a String) -> &'a String {\n+LL ~     let _: &&String = &x;\n+LL ~     x\n    |\n \n error: this pattern creates a reference to a reference\n@@ -68,8 +68,8 @@ LL |     fn f(&ref x: &&String) {\n    |\n help: try this\n    |\n-LL |     fn f(&x: &&String) {\n-LL |         let _: &&String = &x;\n+LL ~     fn f(&x: &&String) {\n+LL ~         let _: &&String = &x;\n    |\n \n error: this pattern creates a reference to a reference\n@@ -80,8 +80,8 @@ LL |     fn f(&ref x: &&String) {\n    |\n help: try this\n    |\n-LL |     fn f(&x: &&String) {\n-LL |         let _: &&String = &x;\n+LL ~     fn f(&x: &&String) {\n+LL ~         let _: &&String = &x;\n    |\n \n error: aborting due to 7 previous errors"}, {"sha": "2d1bfe62c92368a980082148cfdcfc226bc229b2", "filename": "tests/ui/reversed_empty_ranges_fixable.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Freversed_empty_ranges_fixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Freversed_empty_ranges_fixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Freversed_empty_ranges_fixable.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -8,7 +8,7 @@ LL |     (42..=21).for_each(|x| println!(\"{}\", x));\n help: consider using the following if you are attempting to iterate over this range in reverse\n    |\n LL |     (21..=42).rev().for_each(|x| println!(\"{}\", x));\n-   |     ^^^^^^^^^^^^^^^\n+   |     ~~~~~~~~~~~~~~~\n \n error: this range is empty so it will yield no values\n   --> $DIR/reversed_empty_ranges_fixable.rs:10:13\n@@ -19,7 +19,7 @@ LL |     let _ = (ANSWER..21).filter(|x| x % 2 == 0).take(10).collect::<Vec<_>>(\n help: consider using the following if you are attempting to iterate over this range in reverse\n    |\n LL |     let _ = (21..ANSWER).rev().filter(|x| x % 2 == 0).take(10).collect::<Vec<_>>();\n-   |             ^^^^^^^^^^^^^^^^^^\n+   |             ~~~~~~~~~~~~~~~~~~\n \n error: this range is empty so it will yield no values\n   --> $DIR/reversed_empty_ranges_fixable.rs:12:14\n@@ -30,7 +30,7 @@ LL |     for _ in -21..=-42 {}\n help: consider using the following if you are attempting to iterate over this range in reverse\n    |\n LL |     for _ in (-42..=-21).rev() {}\n-   |              ^^^^^^^^^^^^^^^^^\n+   |              ~~~~~~~~~~~~~~~~~\n \n error: this range is empty so it will yield no values\n   --> $DIR/reversed_empty_ranges_fixable.rs:13:14\n@@ -41,7 +41,7 @@ LL |     for _ in 42u32..21u32 {}\n help: consider using the following if you are attempting to iterate over this range in reverse\n    |\n LL |     for _ in (21u32..42u32).rev() {}\n-   |              ^^^^^^^^^^^^^^^^^^^^\n+   |              ~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to 4 previous errors\n "}, {"sha": "a135da488ffd3ed26510433415faebf630d04fc2", "filename": "tests/ui/reversed_empty_ranges_loops_fixable.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Freversed_empty_ranges_loops_fixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Freversed_empty_ranges_loops_fixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Freversed_empty_ranges_loops_fixable.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -8,7 +8,7 @@ LL |     for i in 10..0 {\n help: consider using the following if you are attempting to iterate over this range in reverse\n    |\n LL |     for i in (0..10).rev() {\n-   |              ^^^^^^^^^^^^^\n+   |              ~~~~~~~~~~~~~\n \n error: this range is empty so it will yield no values\n   --> $DIR/reversed_empty_ranges_loops_fixable.rs:11:14\n@@ -19,7 +19,7 @@ LL |     for i in 10..=0 {\n help: consider using the following if you are attempting to iterate over this range in reverse\n    |\n LL |     for i in (0..=10).rev() {\n-   |              ^^^^^^^^^^^^^^\n+   |              ~~~~~~~~~~~~~~\n \n error: this range is empty so it will yield no values\n   --> $DIR/reversed_empty_ranges_loops_fixable.rs:15:14\n@@ -30,7 +30,7 @@ LL |     for i in MAX_LEN..0 {\n help: consider using the following if you are attempting to iterate over this range in reverse\n    |\n LL |     for i in (0..MAX_LEN).rev() {\n-   |              ^^^^^^^^^^^^^^^^^^\n+   |              ~~~~~~~~~~~~~~~~~~\n \n error: this range is empty so it will yield no values\n   --> $DIR/reversed_empty_ranges_loops_fixable.rs:34:14\n@@ -41,7 +41,7 @@ LL |     for i in (10..0).map(|x| x * 2) {\n help: consider using the following if you are attempting to iterate over this range in reverse\n    |\n LL |     for i in (0..10).rev().map(|x| x * 2) {\n-   |              ^^^^^^^^^^^^^\n+   |              ~~~~~~~~~~~~~\n \n error: this range is empty so it will yield no values\n   --> $DIR/reversed_empty_ranges_loops_fixable.rs:39:14\n@@ -52,7 +52,7 @@ LL |     for i in 10..5 + 4 {\n help: consider using the following if you are attempting to iterate over this range in reverse\n    |\n LL |     for i in (5 + 4..10).rev() {\n-   |              ^^^^^^^^^^^^^^^^^\n+   |              ~~~~~~~~~~~~~~~~~\n \n error: this range is empty so it will yield no values\n   --> $DIR/reversed_empty_ranges_loops_fixable.rs:43:14\n@@ -63,7 +63,7 @@ LL |     for i in (5 + 2)..(3 - 1) {\n help: consider using the following if you are attempting to iterate over this range in reverse\n    |\n LL |     for i in ((3 - 1)..(5 + 2)).rev() {\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to 6 previous errors\n "}, {"sha": "f52ca8c5a9b0c35c6cda340763ebc6e4ba74cb17", "filename": "tests/ui/single_element_loop.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fsingle_element_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fsingle_element_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_element_loop.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -9,10 +9,10 @@ LL | |     }\n    = note: `-D clippy::single-element-loop` implied by `-D warnings`\n help: try\n    |\n-LL |     {\n-LL |         let item = &item1;\n-LL |         println!(\"{}\", item);\n-LL |     }\n+LL ~     {\n+LL +         let item = &item1;\n+LL +         println!(\"{}\", item);\n+LL +     }\n    |\n \n error: for loop over a single element\n@@ -25,10 +25,10 @@ LL | |     }\n    |\n help: try\n    |\n-LL |     {\n-LL |         let item = &item1;\n-LL |         println!(\"{:?}\", item);\n-LL |     }\n+LL ~     {\n+LL +         let item = &item1;\n+LL +         println!(\"{:?}\", item);\n+LL +     }\n    |\n \n error: aborting due to 2 previous errors"}, {"sha": "c261b5111c8bf3edb40c7adf333968aadcb2b555", "filename": "tests/ui/single_match.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fsingle_match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fsingle_match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_match.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -12,9 +12,9 @@ LL | |     };\n    = note: `-D clippy::single-match` implied by `-D warnings`\n help: try this\n    |\n-LL |     if let Some(y) = x {\n-LL |         println!(\"{:?}\", y);\n-LL |     };\n+LL ~     if let Some(y) = x {\n+LL +         println!(\"{:?}\", y);\n+LL ~     };\n    |\n \n error: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`"}, {"sha": "c61d80a905c9f0d0d5b097641c4d6719c7c8dc08", "filename": "tests/ui/single_match_else.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fsingle_match_else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fsingle_match_else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_match_else.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -13,10 +13,10 @@ LL | |     }\n    = note: `-D clippy::single-match-else` implied by `-D warnings`\n help: try this\n    |\n-LL |     if let ExprNode::ExprAddrOf = ExprNode::Butterflies { Some(&NODE) } else {\n-LL |         let x = 5;\n-LL |         None\n-LL |     }\n+LL ~     if let ExprNode::ExprAddrOf = ExprNode::Butterflies { Some(&NODE) } else {\n+LL +         let x = 5;\n+LL +         None\n+LL +     }\n    |\n \n error: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n@@ -33,10 +33,10 @@ LL | |     }\n    |\n help: try this\n    |\n-LL |     if let Some(a) = Some(1) { println!(\"${:?}\", a) } else {\n-LL |         println!(\"else block\");\n-LL |         return\n-LL |     }\n+LL ~     if let Some(a) = Some(1) { println!(\"${:?}\", a) } else {\n+LL +         println!(\"else block\");\n+LL +         return\n+LL +     }\n    |\n \n error: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n@@ -53,10 +53,10 @@ LL | |     }\n    |\n help: try this\n    |\n-LL |     if let Some(a) = Some(1) { println!(\"${:?}\", a) } else {\n-LL |         println!(\"else block\");\n-LL |         return;\n-LL |     }\n+LL ~     if let Some(a) = Some(1) { println!(\"${:?}\", a) } else {\n+LL +         println!(\"else block\");\n+LL +         return;\n+LL +     }\n    |\n \n error: aborting due to 3 previous errors"}, {"sha": "e0ca511557c5b594981270097a7161909b6fb319", "filename": "tests/ui/strlen_on_c_strings.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fstrlen_on_c_strings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fstrlen_on_c_strings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstrlen_on_c_strings.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -8,7 +8,7 @@ LL |     let len = unsafe { libc::strlen(cstring.as_ptr()) };\n help: try this (you might also need to get rid of `unsafe` block in some cases):\n    |\n LL |     let len = unsafe { cstring.as_bytes().len() };\n-   |                        ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                        ~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: using `libc::strlen` on a `CString` or `CStr` value\n   --> $DIR/strlen_on_c_strings.rs:15:24\n@@ -19,7 +19,7 @@ LL |     let len = unsafe { libc::strlen(cstr.as_ptr()) };\n help: try this (you might also need to get rid of `unsafe` block in some cases):\n    |\n LL |     let len = unsafe { cstr.to_bytes().len() };\n-   |                        ^^^^^^^^^^^^^^^^^^^^^\n+   |                        ~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to 2 previous errors\n "}, {"sha": "5cfb367a7be80795eb5da98fd6b2b3ea4b4614fa", "filename": "tests/ui/unit_arg.stderr", "status": "modified", "additions": 38, "deletions": 38, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Funit_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Funit_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_arg.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -13,10 +13,10 @@ LL |         1\n    |\n help: or move the expression in front of the call and replace it with the unit literal `()`\n    |\n-LL |     {\n-LL |         1;\n-LL |     };\n-LL |     foo(());\n+LL ~     {\n+LL +         1;\n+LL +     };\n+LL ~     foo(());\n    |\n \n error: passing a unit value to a function\n@@ -27,8 +27,8 @@ LL |     foo(foo(1));\n    |\n help: move the expression in front of the call and replace it with the unit literal `()`\n    |\n-LL |     foo(1);\n-LL |     foo(());\n+LL ~     foo(1);\n+LL ~     foo(());\n    |\n \n error: passing a unit value to a function\n@@ -46,11 +46,11 @@ LL |         foo(2)\n    |\n help: or move the expression in front of the call and replace it with the unit literal `()`\n    |\n-LL |     {\n-LL |         foo(1);\n-LL |         foo(2);\n-LL |     };\n-LL |     foo(());\n+LL ~     {\n+LL +         foo(1);\n+LL +         foo(2);\n+LL +     };\n+LL ~     foo(());\n    |\n \n error: passing a unit value to a function\n@@ -67,10 +67,10 @@ LL |         1\n    |\n help: or move the expression in front of the call and replace it with the unit literal `()`\n    |\n-LL |     {\n-LL |         1;\n-LL |     };\n-LL |     b.bar(());\n+LL ~     {\n+LL +         1;\n+LL +     };\n+LL ~     b.bar(());\n    |\n \n error: passing unit values to a function\n@@ -81,9 +81,9 @@ LL |     taking_multiple_units(foo(0), foo(1));\n    |\n help: move the expressions in front of the call and replace them with the unit literal `()`\n    |\n-LL |     foo(0);\n-LL |     foo(1);\n-LL |     taking_multiple_units((), ());\n+LL ~     foo(0);\n+LL +     foo(1);\n+LL ~     taking_multiple_units((), ());\n    |\n \n error: passing unit values to a function\n@@ -101,12 +101,12 @@ LL |         foo(2)\n    |\n help: or move the expressions in front of the call and replace them with the unit literal `()`\n    |\n-LL |     foo(0);\n-LL |     {\n-LL |         foo(1);\n-LL |         foo(2);\n-LL |     };\n-LL |     taking_multiple_units((), ());\n+LL ~     foo(0);\n+LL +     {\n+LL +         foo(1);\n+LL +         foo(2);\n+LL +     };\n+LL ~     taking_multiple_units((), ());\n    |\n \n error: passing unit values to a function\n@@ -131,12 +131,12 @@ LL |             foo(3)\n    |\n help: or move the expressions in front of the call and replace them with the unit literal `()`\n    |\n-LL |     {\n-LL |         foo(0);\n-LL |         foo(1);\n-LL |     };\n-LL |     {\n-LL |         foo(2);\n+LL ~     {\n+LL +         foo(0);\n+LL +         foo(1);\n+LL +     };\n+LL +     {\n+LL +         foo(2);\n  ...\n \n error: passing a unit value to a function\n@@ -147,10 +147,10 @@ LL |     None.or(Some(foo(2)));\n    |\n help: move the expression in front of the call and replace it with the unit literal `()`\n    |\n-LL |     None.or({\n-LL |         foo(2);\n-LL |         Some(())\n-LL |     });\n+LL ~     None.or({\n+LL +         foo(2);\n+LL +         Some(())\n+LL ~     });\n    |\n \n error: passing a unit value to a function\n@@ -161,8 +161,8 @@ LL |     foo(foo(()));\n    |\n help: move the expression in front of the call and replace it with the unit literal `()`\n    |\n-LL |     foo(());\n-LL |     foo(());\n+LL ~     foo(());\n+LL ~     foo(());\n    |\n \n error: passing a unit value to a function\n@@ -173,8 +173,8 @@ LL |     Some(foo(1))\n    |\n help: move the expression in front of the call and replace it with the unit literal `()`\n    |\n-LL |     foo(1);\n-LL |     Some(())\n+LL ~     foo(1);\n+LL +     Some(())\n    |\n \n error: aborting due to 10 previous errors"}, {"sha": "39072c9a8cc0f0825756e4051d8988b0aaa639c5", "filename": "tests/ui/unit_arg_empty_blocks.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Funit_arg_empty_blocks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Funit_arg_empty_blocks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_arg_empty_blocks.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -24,8 +24,8 @@ LL |     taking_two_units({}, foo(0));\n    |\n help: move the expression in front of the call and replace it with the unit literal `()`\n    |\n-LL |     foo(0);\n-LL |     taking_two_units((), ());\n+LL ~     foo(0);\n+LL ~     taking_two_units((), ());\n    |\n \n error: passing unit values to a function\n@@ -36,9 +36,9 @@ LL |     taking_three_units({}, foo(0), foo(1));\n    |\n help: move the expressions in front of the call and replace them with the unit literal `()`\n    |\n-LL |     foo(0);\n-LL |     foo(1);\n-LL |     taking_three_units((), (), ());\n+LL ~     foo(0);\n+LL +     foo(1);\n+LL ~     taking_three_units((), (), ());\n    |\n \n error: aborting due to 4 previous errors"}, {"sha": "94cc7777acacd787a8aff6f64f48f66d4c9eb0e2", "filename": "tests/ui/unnecessary_clone.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Funnecessary_clone.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Funnecessary_clone.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_clone.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -54,11 +54,11 @@ LL |     let z: &Vec<_> = y.clone();\n help: try dereferencing it\n    |\n LL |     let z: &Vec<_> = &(*y).clone();\n-   |                      ^^^^^^^^^^^^^\n+   |                      ~~~~~~~~~~~~~\n help: or try being explicit if you are sure, that you want to clone a reference\n    |\n LL |     let z: &Vec<_> = <&std::vec::Vec<i32>>::clone(y);\n-   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: using `clone` on type `many_derefs::E` which implements the `Copy` trait\n   --> $DIR/unnecessary_clone.rs:84:20\n@@ -75,11 +75,11 @@ LL |         let _ = &mut encoded.clone();\n help: try dereferencing it\n    |\n LL |         let _ = &mut &(*encoded).clone();\n-   |                      ^^^^^^^^^^^^^^^^^^^\n+   |                      ~~~~~~~~~~~~~~~~~~~\n help: or try being explicit if you are sure, that you want to clone a reference\n    |\n LL |         let _ = &mut <&[u8]>::clone(encoded);\n-   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n+   |                      ~~~~~~~~~~~~~~~~~~~~~~~\n \n error: using `clone` on a double-reference; this will copy the reference of type `&[u8]` instead of cloning the inner type\n   --> $DIR/unnecessary_clone.rs:90:18\n@@ -90,11 +90,11 @@ LL |         let _ = &encoded.clone();\n help: try dereferencing it\n    |\n LL |         let _ = &&(*encoded).clone();\n-   |                  ^^^^^^^^^^^^^^^^^^^\n+   |                  ~~~~~~~~~~~~~~~~~~~\n help: or try being explicit if you are sure, that you want to clone a reference\n    |\n LL |         let _ = &<&[u8]>::clone(encoded);\n-   |                  ^^^^^^^^^^^^^^^^^^^^^^^\n+   |                  ~~~~~~~~~~~~~~~~~~~~~~~\n \n error: using `.clone()` on a ref-counted pointer\n   --> $DIR/unnecessary_clone.rs:108:14"}, {"sha": "8e31db3950247a6c699627f94cb87bab70e199d4", "filename": "tests/ui/unnecessary_wraps.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Funnecessary_wraps.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Funnecessary_wraps.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_wraps.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -14,14 +14,14 @@ LL | | }\n help: remove `Option` from the return type...\n    |\n LL | fn func1(a: bool, b: bool) -> i32 {\n-   |                               ^^^\n+   |                               ~~~\n help: ...and then change returning expressions\n    |\n-LL |         return 42;\n+LL ~         return 42;\n LL |     }\n LL |     if a {\n LL |         Some(-1);\n-LL |         2\n+LL ~         2\n LL |     } else {\n  ...\n \n@@ -39,12 +39,12 @@ LL | | }\n help: remove `Option` from the return type...\n    |\n LL | fn func2(a: bool, b: bool) -> i32 {\n-   |                               ^^^\n+   |                               ~~~\n help: ...and then change returning expressions\n    |\n-LL |         return 10;\n+LL ~         return 10;\n LL |     }\n-LL |     if a { 20 } else { 30 }\n+LL ~     if a { 20 } else { 30 }\n    |\n \n error: this function's return value is unnecessarily wrapped by `Option`\n@@ -58,7 +58,7 @@ LL | | }\n help: remove `Option` from the return type...\n    |\n LL | fn func5() -> i32 {\n-   |               ^^^\n+   |               ~~~\n help: ...and then change returning expressions\n    |\n LL |     1\n@@ -75,7 +75,7 @@ LL | | }\n help: remove `Result` from the return type...\n    |\n LL | fn func7() -> i32 {\n-   |               ^^^\n+   |               ~~~\n help: ...and then change returning expressions\n    |\n LL |     1\n@@ -92,7 +92,7 @@ LL | |     }\n help: remove `Option` from the return type...\n    |\n LL |     fn func12() -> i32 {\n-   |                    ^^^\n+   |                    ~~~\n help: ...and then change returning expressions\n    |\n LL |         1\n@@ -113,14 +113,14 @@ LL | | }\n help: remove the return type...\n    |\n LL | fn issue_6640_1(a: bool, b: bool) -> Option<()> {\n-   |                                      ^^^^^^^^^^\n+   |                                      ~~~~~~~~~~\n help: ...and then remove returned values\n    |\n-LL |         return ;\n+LL ~         return ;\n LL |     }\n LL |     if a {\n LL |         Some(());\n-LL |         \n+LL ~         \n LL |     } else {\n  ...\n \n@@ -139,15 +139,15 @@ LL | | }\n help: remove the return type...\n    |\n LL | fn issue_6640_2(a: bool, b: bool) -> Result<(), i32> {\n-   |                                      ^^^^^^^^^^^^^^^\n+   |                                      ~~~~~~~~~~~~~~~\n help: ...and then remove returned values\n    |\n-LL |         return ;\n+LL ~         return ;\n LL |     }\n LL |     if a {\n-LL |         \n+LL ~         \n LL |     } else {\n-LL |         return ;\n+LL ~         return ;\n    |\n \n error: aborting due to 7 previous errors"}, {"sha": "de424c3fdb8f2c628da68ce4eab5d39ab5523002", "filename": "tests/ui/unnested_or_patterns.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Funnested_or_patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Funnested_or_patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnested_or_patterns.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -8,7 +8,7 @@ LL |     if let box 0 | box 2 = Box::new(0) {}\n help: nest the patterns\n    |\n LL |     if let box (0 | 2) = Box::new(0) {}\n-   |            ^^^^^^^^^^^\n+   |            ~~~~~~~~~~~\n \n error: unnested or-patterns\n   --> $DIR/unnested_or_patterns.rs:10:12\n@@ -19,7 +19,7 @@ LL |     if let box ((0 | 1)) | box (2 | 3) | box 4 = Box::new(0) {}\n help: nest the patterns\n    |\n LL |     if let box (0 | 1 | 2 | 3 | 4) = Box::new(0) {}\n-   |            ^^^^^^^^^^^^^^^^^^^^^^^\n+   |            ~~~~~~~~~~~~~~~~~~~~~~~\n \n error: unnested or-patterns\n   --> $DIR/unnested_or_patterns.rs:12:12\n@@ -30,7 +30,7 @@ LL |     if let &0 | C0 | &2 = &0 {}\n help: nest the patterns\n    |\n LL |     if let &(0 | 2) | C0 = &0 {}\n-   |            ^^^^^^^^^^^^^\n+   |            ~~~~~~~~~~~~~\n \n error: unnested or-patterns\n   --> $DIR/unnested_or_patterns.rs:13:12\n@@ -41,7 +41,7 @@ LL |     if let &mut 0 | &mut 2 = &mut 0 {}\n help: nest the patterns\n    |\n LL |     if let &mut (0 | 2) = &mut 0 {}\n-   |            ^^^^^^^^^^^^\n+   |            ~~~~~~~~~~~~\n \n error: unnested or-patterns\n   --> $DIR/unnested_or_patterns.rs:14:12\n@@ -52,7 +52,7 @@ LL |     if let x @ 0 | x @ 2 = 0 {}\n help: nest the patterns\n    |\n LL |     if let x @ (0 | 2) = 0 {}\n-   |            ^^^^^^^^^^^\n+   |            ~~~~~~~~~~~\n \n error: unnested or-patterns\n   --> $DIR/unnested_or_patterns.rs:15:12\n@@ -63,7 +63,7 @@ LL |     if let (0, 1) | (0, 2) | (0, 3) = (0, 0) {}\n help: nest the patterns\n    |\n LL |     if let (0, 1 | 2 | 3) = (0, 0) {}\n-   |            ^^^^^^^^^^^^^^\n+   |            ~~~~~~~~~~~~~~\n \n error: unnested or-patterns\n   --> $DIR/unnested_or_patterns.rs:16:12\n@@ -74,7 +74,7 @@ LL |     if let (1, 0) | (2, 0) | (3, 0) = (0, 0) {}\n help: nest the patterns\n    |\n LL |     if let (1 | 2 | 3, 0) = (0, 0) {}\n-   |            ^^^^^^^^^^^^^^\n+   |            ~~~~~~~~~~~~~~\n \n error: unnested or-patterns\n   --> $DIR/unnested_or_patterns.rs:17:12\n@@ -85,7 +85,7 @@ LL |     if let (x, ..) | (x, 1) | (x, 2) = (0, 1) {}\n help: nest the patterns\n    |\n LL |     if let (x, ..) | (x, 1 | 2) = (0, 1) {}\n-   |            ^^^^^^^^^^^^^^^^^^^^\n+   |            ~~~~~~~~~~~~~~~~~~~~\n \n error: unnested or-patterns\n   --> $DIR/unnested_or_patterns.rs:18:12\n@@ -96,7 +96,7 @@ LL |     if let [0] | [1] = [0] {}\n help: nest the patterns\n    |\n LL |     if let [0 | 1] = [0] {}\n-   |            ^^^^^^^\n+   |            ~~~~~~~\n \n error: unnested or-patterns\n   --> $DIR/unnested_or_patterns.rs:19:12\n@@ -107,7 +107,7 @@ LL |     if let [x, 0] | [x, 1] = [0, 1] {}\n help: nest the patterns\n    |\n LL |     if let [x, 0 | 1] = [0, 1] {}\n-   |            ^^^^^^^^^^\n+   |            ~~~~~~~~~~\n \n error: unnested or-patterns\n   --> $DIR/unnested_or_patterns.rs:20:12\n@@ -118,7 +118,7 @@ LL |     if let [x, 0] | [x, 1] | [x, 2] = [0, 1] {}\n help: nest the patterns\n    |\n LL |     if let [x, 0 | 1 | 2] = [0, 1] {}\n-   |            ^^^^^^^^^^^^^^\n+   |            ~~~~~~~~~~~~~~\n \n error: unnested or-patterns\n   --> $DIR/unnested_or_patterns.rs:21:12\n@@ -129,7 +129,7 @@ LL |     if let [x, ..] | [x, 1] | [x, 2] = [0, 1] {}\n help: nest the patterns\n    |\n LL |     if let [x, ..] | [x, 1 | 2] = [0, 1] {}\n-   |            ^^^^^^^^^^^^^^^^^^^^\n+   |            ~~~~~~~~~~~~~~~~~~~~\n \n error: unnested or-patterns\n   --> $DIR/unnested_or_patterns.rs:23:12\n@@ -140,7 +140,7 @@ LL |     if let TS(0, x) | TS(1, x) = TS(0, 0) {}\n help: nest the patterns\n    |\n LL |     if let TS(0 | 1, x) = TS(0, 0) {}\n-   |            ^^^^^^^^^^^^\n+   |            ~~~~~~~~~~~~\n \n error: unnested or-patterns\n   --> $DIR/unnested_or_patterns.rs:24:12\n@@ -151,7 +151,7 @@ LL |     if let TS(1, 0) | TS(2, 0) | TS(3, 0) = TS(0, 0) {}\n help: nest the patterns\n    |\n LL |     if let TS(1 | 2 | 3, 0) = TS(0, 0) {}\n-   |            ^^^^^^^^^^^^^^^^\n+   |            ~~~~~~~~~~~~~~~~\n \n error: unnested or-patterns\n   --> $DIR/unnested_or_patterns.rs:25:12\n@@ -162,7 +162,7 @@ LL |     if let TS(x, ..) | TS(x, 1) | TS(x, 2) = TS(0, 0) {}\n help: nest the patterns\n    |\n LL |     if let TS(x, ..) | TS(x, 1 | 2) = TS(0, 0) {}\n-   |            ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |            ~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: unnested or-patterns\n   --> $DIR/unnested_or_patterns.rs:30:12\n@@ -173,7 +173,7 @@ LL |     if let S { x: 0, y } | S { y, x: 1 } = (S { x: 0, y: 1 }) {}\n help: nest the patterns\n    |\n LL |     if let S { x: 0 | 1, y } = (S { x: 0, y: 1 }) {}\n-   |            ^^^^^^^^^^^^^^^^^\n+   |            ~~~~~~~~~~~~~~~~~\n \n error: aborting due to 16 previous errors\n "}, {"sha": "41e8d3fc709244402cefdaddd58589dc63a8b20c", "filename": "tests/ui/unnested_or_patterns2.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Funnested_or_patterns2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Funnested_or_patterns2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnested_or_patterns2.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -8,7 +8,7 @@ LL |     if let Some(Some(0)) | Some(Some(1)) = None {}\n help: nest the patterns\n    |\n LL |     if let Some(Some(0 | 1)) = None {}\n-   |            ^^^^^^^^^^^^^^^^^\n+   |            ~~~~~~~~~~~~~~~~~\n \n error: unnested or-patterns\n   --> $DIR/unnested_or_patterns2.rs:10:12\n@@ -19,7 +19,7 @@ LL |     if let Some(Some(0)) | Some(Some(1) | Some(2)) = None {}\n help: nest the patterns\n    |\n LL |     if let Some(Some(0 | 1 | 2)) = None {}\n-   |            ^^^^^^^^^^^^^^^^^^^^^\n+   |            ~~~~~~~~~~~~~~~~~~~~~\n \n error: unnested or-patterns\n   --> $DIR/unnested_or_patterns2.rs:11:12\n@@ -30,7 +30,7 @@ LL |     if let Some(Some(0 | 1) | Some(2)) | Some(Some(3) | Some(4)) = None {}\n help: nest the patterns\n    |\n LL |     if let Some(Some(0 | 1 | 2 | 3 | 4)) = None {}\n-   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: unnested or-patterns\n   --> $DIR/unnested_or_patterns2.rs:12:12\n@@ -41,7 +41,7 @@ LL |     if let Some(Some(0) | Some(1 | 2)) = None {}\n help: nest the patterns\n    |\n LL |     if let Some(Some(0 | 1 | 2)) = None {}\n-   |            ^^^^^^^^^^^^^^^^^^^^^\n+   |            ~~~~~~~~~~~~~~~~~~~~~\n \n error: unnested or-patterns\n   --> $DIR/unnested_or_patterns2.rs:13:12\n@@ -52,7 +52,7 @@ LL |     if let ((0,),) | ((1,) | (2,),) = ((0,),) {}\n help: nest the patterns\n    |\n LL |     if let ((0 | 1 | 2,),) = ((0,),) {}\n-   |            ^^^^^^^^^^^^^^^\n+   |            ~~~~~~~~~~~~~~~\n \n error: unnested or-patterns\n   --> $DIR/unnested_or_patterns2.rs:14:12\n@@ -63,7 +63,7 @@ LL |     if let 0 | (1 | 2) = 0 {}\n help: nest the patterns\n    |\n LL |     if let 0 | 1 | 2 = 0 {}\n-   |            ^^^^^^^^^\n+   |            ~~~~~~~~~\n \n error: unnested or-patterns\n   --> $DIR/unnested_or_patterns2.rs:15:12\n@@ -74,7 +74,7 @@ LL |     if let box (0 | 1) | (box 2 | box (3 | 4)) = Box::new(0) {}\n help: nest the patterns\n    |\n LL |     if let box (0 | 1 | 2 | 3 | 4) = Box::new(0) {}\n-   |            ^^^^^^^^^^^^^^^^^^^^^^^\n+   |            ~~~~~~~~~~~~~~~~~~~~~~~\n \n error: unnested or-patterns\n   --> $DIR/unnested_or_patterns2.rs:16:12\n@@ -85,7 +85,7 @@ LL |     if let box box 0 | box (box 2 | box 4) = Box::new(Box::new(0)) {}\n help: nest the patterns\n    |\n LL |     if let box box (0 | 2 | 4) = Box::new(Box::new(0)) {}\n-   |            ^^^^^^^^^^^^^^^^^^^\n+   |            ~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to 8 previous errors\n "}, {"sha": "e0297c0023156ad7ef1952718fecf1a628de87be", "filename": "tests/ui/write_literal.stderr", "status": "modified", "additions": 33, "deletions": 22, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fwrite_literal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fwrite_literal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwrite_literal.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -7,8 +7,9 @@ LL |     write!(&mut v, \"Hello {}\", \"world\");\n    = note: `-D clippy::write-literal` implied by `-D warnings`\n help: try this\n    |\n-LL |     write!(&mut v, \"Hello world\");\n-   |                           ^^^^^--\n+LL -     write!(&mut v, \"Hello {}\", \"world\");\n+LL +     write!(&mut v, \"Hello world\");\n+   | \n \n error: literal with an empty format string\n   --> $DIR/write_literal.rs:31:44\n@@ -18,8 +19,9 @@ LL |     writeln!(&mut v, \"Hello {} {}\", world, \"world\");\n    |\n help: try this\n    |\n-LL |     writeln!(&mut v, \"Hello {} world\", world);\n-   |                                ^^^^^       --\n+LL -     writeln!(&mut v, \"Hello {} {}\", world, \"world\");\n+LL +     writeln!(&mut v, \"Hello {} world\", world);\n+   | \n \n error: literal with an empty format string\n   --> $DIR/write_literal.rs:32:34\n@@ -29,8 +31,9 @@ LL |     writeln!(&mut v, \"Hello {}\", \"world\");\n    |\n help: try this\n    |\n-LL |     writeln!(&mut v, \"Hello world\");\n-   |                             ^^^^^--\n+LL -     writeln!(&mut v, \"Hello {}\", \"world\");\n+LL +     writeln!(&mut v, \"Hello world\");\n+   | \n \n error: literal with an empty format string\n   --> $DIR/write_literal.rs:37:33\n@@ -40,8 +43,9 @@ LL |     writeln!(&mut v, \"{0} {1}\", \"hello\", \"world\");\n    |\n help: try this\n    |\n-LL |     writeln!(&mut v, \"hello {1}\", \"world\");\n-   |                       ^^^^^    --\n+LL -     writeln!(&mut v, \"{0} {1}\", \"hello\", \"world\");\n+LL +     writeln!(&mut v, \"hello {1}\", \"world\");\n+   | \n \n error: literal with an empty format string\n   --> $DIR/write_literal.rs:37:42\n@@ -51,8 +55,9 @@ LL |     writeln!(&mut v, \"{0} {1}\", \"hello\", \"world\");\n    |\n help: try this\n    |\n-LL |     writeln!(&mut v, \"{0} world\", \"hello\");\n-   |                           ^^^^^         --\n+LL -     writeln!(&mut v, \"{0} {1}\", \"hello\", \"world\");\n+LL +     writeln!(&mut v, \"{0} world\", \"hello\");\n+   | \n \n error: literal with an empty format string\n   --> $DIR/write_literal.rs:38:33\n@@ -62,8 +67,9 @@ LL |     writeln!(&mut v, \"{1} {0}\", \"hello\", \"world\");\n    |\n help: try this\n    |\n-LL |     writeln!(&mut v, \"{1} hello\", \"world\");\n-   |                           ^^^^^--\n+LL -     writeln!(&mut v, \"{1} {0}\", \"hello\", \"world\");\n+LL +     writeln!(&mut v, \"{1} hello\", \"world\");\n+   | \n \n error: literal with an empty format string\n   --> $DIR/write_literal.rs:38:42\n@@ -73,8 +79,9 @@ LL |     writeln!(&mut v, \"{1} {0}\", \"hello\", \"world\");\n    |\n help: try this\n    |\n-LL |     writeln!(&mut v, \"world {0}\", \"hello\");\n-   |                       ^^^^^             --\n+LL -     writeln!(&mut v, \"{1} {0}\", \"hello\", \"world\");\n+LL +     writeln!(&mut v, \"world {0}\", \"hello\");\n+   | \n \n error: literal with an empty format string\n   --> $DIR/write_literal.rs:41:37\n@@ -84,8 +91,9 @@ LL |     writeln!(&mut v, \"{foo} {bar}\", foo = \"hello\", bar = \"world\");\n    |\n help: try this\n    |\n-LL |     writeln!(&mut v, \"hello {bar}\", bar = \"world\");\n-   |                       ^^^^^      --\n+LL -     writeln!(&mut v, \"{foo} {bar}\", foo = \"hello\", bar = \"world\");\n+LL +     writeln!(&mut v, \"hello {bar}\", bar = \"world\");\n+   | \n \n error: literal with an empty format string\n   --> $DIR/write_literal.rs:41:52\n@@ -95,8 +103,9 @@ LL |     writeln!(&mut v, \"{foo} {bar}\", foo = \"hello\", bar = \"world\");\n    |\n help: try this\n    |\n-LL |     writeln!(&mut v, \"{foo} world\", foo = \"hello\");\n-   |                             ^^^^^               --\n+LL -     writeln!(&mut v, \"{foo} {bar}\", foo = \"hello\", bar = \"world\");\n+LL +     writeln!(&mut v, \"{foo} world\", foo = \"hello\");\n+   | \n \n error: literal with an empty format string\n   --> $DIR/write_literal.rs:42:37\n@@ -106,8 +115,9 @@ LL |     writeln!(&mut v, \"{bar} {foo}\", foo = \"hello\", bar = \"world\");\n    |\n help: try this\n    |\n-LL |     writeln!(&mut v, \"{bar} hello\", bar = \"world\");\n-   |                             ^^^^^--\n+LL -     writeln!(&mut v, \"{bar} {foo}\", foo = \"hello\", bar = \"world\");\n+LL +     writeln!(&mut v, \"{bar} hello\", bar = \"world\");\n+   | \n \n error: literal with an empty format string\n   --> $DIR/write_literal.rs:42:52\n@@ -117,8 +127,9 @@ LL |     writeln!(&mut v, \"{bar} {foo}\", foo = \"hello\", bar = \"world\");\n    |\n help: try this\n    |\n-LL |     writeln!(&mut v, \"world {foo}\", foo = \"hello\");\n-   |                       ^^^^^                     --\n+LL -     writeln!(&mut v, \"{bar} {foo}\", foo = \"hello\", bar = \"world\");\n+LL +     writeln!(&mut v, \"world {foo}\", foo = \"hello\");\n+   | \n \n error: aborting due to 11 previous errors\n "}, {"sha": "73c6b88581329a0ca5658647de0474dbf902ceff", "filename": "tests/ui/write_literal_2.stderr", "status": "modified", "additions": 23, "deletions": 18, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fwrite_literal_2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fwrite_literal_2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwrite_literal_2.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -7,8 +7,9 @@ LL |     writeln!(&mut v, \"{}\", \"{hello}\");\n    = note: `-D clippy::write-literal` implied by `-D warnings`\n help: try this\n    |\n-LL |     writeln!(&mut v, \"{{hello}}\");\n-   |                       ^^^^^^^^^--\n+LL -     writeln!(&mut v, \"{}\", \"{hello}\");\n+LL +     writeln!(&mut v, \"{{hello}}\");\n+   | \n \n error: literal with an empty format string\n   --> $DIR/write_literal_2.rs:10:29\n@@ -18,8 +19,9 @@ LL |     writeln!(&mut v, r\"{}\", r\"{hello}\");\n    |\n help: try this\n    |\n-LL |     writeln!(&mut v, r\"{{hello}}\");\n-   |                        ^^^^^^^^^--\n+LL -     writeln!(&mut v, r\"{}\", r\"{hello}\");\n+LL +     writeln!(&mut v, r\"{{hello}}\");\n+   | \n \n error: literal with an empty format string\n   --> $DIR/write_literal_2.rs:11:28\n@@ -29,8 +31,9 @@ LL |     writeln!(&mut v, \"{}\", '/'');\n    |\n help: try this\n    |\n-LL |     writeln!(&mut v, \"'\");\n-   |                       ^--\n+LL -     writeln!(&mut v, \"{}\", '/'');\n+LL +     writeln!(&mut v, \"'\");\n+   | \n \n error: literal with an empty format string\n   --> $DIR/write_literal_2.rs:12:28\n@@ -40,8 +43,9 @@ LL |     writeln!(&mut v, \"{}\", '\"');\n    |\n help: try this\n    |\n-LL |     writeln!(&mut v, \"/\"\");\n-   |                       ^^--\n+LL -     writeln!(&mut v, \"{}\", '\"');\n+LL +     writeln!(&mut v, \"/\"\");\n+   | \n \n error: literal with an empty format string\n   --> $DIR/write_literal_2.rs:14:29\n@@ -51,8 +55,9 @@ LL |     writeln!(&mut v, r\"{}\", '/'');\n    |\n help: try this\n    |\n-LL |     writeln!(&mut v, r\"'\");\n-   |                        ^--\n+LL -     writeln!(&mut v, r\"{}\", '/'');\n+LL +     writeln!(&mut v, r\"'\");\n+   | \n \n error: literal with an empty format string\n   --> $DIR/write_literal_2.rs:18:9\n@@ -63,8 +68,8 @@ LL | |         world!\"\n    |\n help: try this\n    |\n-LL |         \"some hello /\n-LL |         world!\"\n+LL ~         \"some hello /\n+LL ~         world!\"\n    |\n \n error: literal with an empty format string\n@@ -75,8 +80,8 @@ LL |         \"1\", \"2\", \"3\",\n    |\n help: try this\n    |\n-LL |         \"some 1/\n-LL |         {} / {}\", \"2\", \"3\",\n+LL ~         \"some 1/\n+LL ~         {} / {}\", \"2\", \"3\",\n    |\n \n error: literal with an empty format string\n@@ -87,8 +92,8 @@ LL |         \"1\", \"2\", \"3\",\n    |\n help: try this\n    |\n-LL |         2 / {}\",\n-LL |         \"1\", \"3\",\n+LL ~         2 / {}\",\n+LL ~         \"1\", \"3\",\n    |\n \n error: literal with an empty format string\n@@ -99,8 +104,8 @@ LL |         \"1\", \"2\", \"3\",\n    |\n help: try this\n    |\n-LL |         {} / 3\",\n-LL |         \"1\", \"2\",\n+LL ~         {} / 3\",\n+LL ~         \"1\", \"2\",\n    |\n \n error: aborting due to 9 previous errors"}, {"sha": "186459e50b64ce6a118bd5b4c3f9a1a90c565829", "filename": "tests/ui/write_with_newline.stderr", "status": "modified", "additions": 28, "deletions": 20, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fwrite_with_newline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7bfc26ec8e7a454786668e7e52ffe527fc649735/tests%2Fui%2Fwrite_with_newline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwrite_with_newline.stderr?ref=7bfc26ec8e7a454786668e7e52ffe527fc649735", "patch": "@@ -7,8 +7,9 @@ LL |     write!(&mut v, \"Hello/n\");\n    = note: `-D clippy::write-with-newline` implied by `-D warnings`\n help: use `writeln!()` instead\n    |\n-LL |     writeln!(&mut v, \"Hello\");\n-   |     ^^^^^^^               --\n+LL -     write!(&mut v, \"Hello/n\");\n+LL +     writeln!(&mut v, \"Hello\");\n+   | \n \n error: using `write!()` with a format string that ends in a single newline\n   --> $DIR/write_with_newline.rs:14:5\n@@ -18,8 +19,9 @@ LL |     write!(&mut v, \"Hello {}/n\", \"world\");\n    |\n help: use `writeln!()` instead\n    |\n-LL |     writeln!(&mut v, \"Hello {}\", \"world\");\n-   |     ^^^^^^^                  --\n+LL -     write!(&mut v, \"Hello {}/n\", \"world\");\n+LL +     writeln!(&mut v, \"Hello {}\", \"world\");\n+   | \n \n error: using `write!()` with a format string that ends in a single newline\n   --> $DIR/write_with_newline.rs:15:5\n@@ -29,8 +31,9 @@ LL |     write!(&mut v, \"Hello {} {}/n\", \"world\", \"#2\");\n    |\n help: use `writeln!()` instead\n    |\n-LL |     writeln!(&mut v, \"Hello {} {}\", \"world\", \"#2\");\n-   |     ^^^^^^^                     --\n+LL -     write!(&mut v, \"Hello {} {}/n\", \"world\", \"#2\");\n+LL +     writeln!(&mut v, \"Hello {} {}\", \"world\", \"#2\");\n+   | \n \n error: using `write!()` with a format string that ends in a single newline\n   --> $DIR/write_with_newline.rs:16:5\n@@ -40,8 +43,9 @@ LL |     write!(&mut v, \"{}/n\", 1265);\n    |\n help: use `writeln!()` instead\n    |\n-LL |     writeln!(&mut v, \"{}\", 1265);\n-   |     ^^^^^^^            --\n+LL -     write!(&mut v, \"{}/n\", 1265);\n+LL +     writeln!(&mut v, \"{}\", 1265);\n+   | \n \n error: using `write!()` with a format string that ends in a single newline\n   --> $DIR/write_with_newline.rs:17:5\n@@ -51,8 +55,9 @@ LL |     write!(&mut v, \"/n\");\n    |\n help: use `writeln!()` instead\n    |\n-LL |     writeln!(&mut v);\n-   |     ^^^^^^^       --\n+LL -     write!(&mut v, \"/n\");\n+LL +     writeln!(&mut v);\n+   | \n \n error: using `write!()` with a format string that ends in a single newline\n   --> $DIR/write_with_newline.rs:36:5\n@@ -62,8 +67,9 @@ LL |     write!(&mut v, \"//n\"); // should fail\n    |\n help: use `writeln!()` instead\n    |\n-LL |     writeln!(&mut v, \"/\"); // should fail\n-   |     ^^^^^^^            --\n+LL -     write!(&mut v, \"//n\"); // should fail\n+LL +     writeln!(&mut v, \"/\"); // should fail\n+   | \n \n error: using `write!()` with a format string that ends in a single newline\n   --> $DIR/write_with_newline.rs:43:5\n@@ -77,9 +83,9 @@ LL | |     );\n    |\n help: use `writeln!()` instead\n    |\n-LL |     writeln!(\n+LL ~     writeln!(\n LL |         &mut v,\n-LL |         \"\"\n+LL ~         \"\"\n    |\n \n error: using `write!()` with a format string that ends in a single newline\n@@ -94,9 +100,9 @@ LL | |     );\n    |\n help: use `writeln!()` instead\n    |\n-LL |     writeln!(\n+LL ~     writeln!(\n LL |         &mut v,\n-LL |         r\"\"\n+LL ~         r\"\"\n    |\n \n error: using `write!()` with a format string that ends in a single newline\n@@ -107,8 +113,9 @@ LL |     write!(&mut v, \"/r/n\"); //~ ERROR\n    |\n help: use `writeln!()` instead\n    |\n-LL |     writeln!(&mut v, \"/r\"); //~ ERROR\n-   |     ^^^^^^^             --\n+LL -     write!(&mut v, \"/r/n\"); //~ ERROR\n+LL +     writeln!(&mut v, \"/r\"); //~ ERROR\n+   | \n \n error: using `write!()` with a format string that ends in a single newline\n   --> $DIR/write_with_newline.rs:58:5\n@@ -118,8 +125,9 @@ LL |     write!(&mut v, \"foo/rbar/n\");\n    |\n help: use `writeln!()` instead\n    |\n-LL |     writeln!(&mut v, \"foo/rbar\");\n-   |     ^^^^^^^                  --\n+LL -     write!(&mut v, \"foo/rbar/n\");\n+LL +     writeln!(&mut v, \"foo/rbar\");\n+   | \n \n error: aborting due to 10 previous errors\n "}]}