{"sha": "5604a18a60fc99a4a7feb82a280546971adda52d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2MDRhMThhNjBmYzk5YTRhN2ZlYjgyYTI4MDU0Njk3MWFkZGE1MmQ=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-12-31T20:04:13Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-12-31T20:08:20Z"}, "message": "Add `@!has` checks to ensure private items don't have `pub`", "tree": {"sha": "6301b8a6fd9a838b0022e265237e89fc351ae0d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6301b8a6fd9a838b0022e265237e89fc351ae0d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5604a18a60fc99a4a7feb82a280546971adda52d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5604a18a60fc99a4a7feb82a280546971adda52d", "html_url": "https://github.com/rust-lang/rust/commit/5604a18a60fc99a4a7feb82a280546971adda52d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5604a18a60fc99a4a7feb82a280546971adda52d/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dda887a02c7df86f6e713d853b887d79be8cf803", "url": "https://api.github.com/repos/rust-lang/rust/commits/dda887a02c7df86f6e713d853b887d79be8cf803", "html_url": "https://github.com/rust-lang/rust/commit/dda887a02c7df86f6e713d853b887d79be8cf803"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "59427693c5a5d3c61fef6eaed72e9c87e9e99cbe", "filename": "src/test/rustdoc/visibility.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5604a18a60fc99a4a7feb82a280546971adda52d/src%2Ftest%2Frustdoc%2Fvisibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5604a18a60fc99a4a7feb82a280546971adda52d/src%2Ftest%2Frustdoc%2Fvisibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fvisibility.rs?ref=5604a18a60fc99a4a7feb82a280546971adda52d", "patch": "@@ -23,8 +23,10 @@ mod a {\n     // @has 'foo/a/struct.FooAInSuper.html' '//pre' 'pub(crate) struct FooAInSuper'\n     pub(in super) struct FooAInSuper;\n     // @has 'foo/a/struct.FooAInA.html' '//pre' 'struct FooAInA'\n+    // @!has 'foo/a/struct.FooAInA.html' '//pre' 'pub'\n     pub(in a) struct FooAInA;\n     // @has 'foo/a/struct.FooAPriv.html' '//pre' 'struct FooAPriv'\n+    // @!has 'foo/a/struct.FooAPriv.html' '//pre' 'pub'\n     struct FooAPriv;\n \n     mod b {\n@@ -33,8 +35,10 @@ mod a {\n         // @has 'foo/a/b/struct.FooBInSuperSuper.html' '//pre' 'pub(crate) struct FooBInSuperSuper'\n         pub(in super::super) struct FooBInSuperSuper;\n         // @has 'foo/a/b/struct.FooBInAB.html' '//pre' 'struct FooBInAB'\n+        // @!has 'foo/a/b/struct.FooBInAB.html' '//pre' 'pub'\n         pub(in a::b) struct FooBInAB;\n         // @has 'foo/a/b/struct.FooBPriv.html' '//pre' 'struct FooBPriv'\n+        // @!has 'foo/a/b/struct.FooBPriv.html' '//pre' 'pub'\n         struct FooBPriv;\n     }\n }"}]}