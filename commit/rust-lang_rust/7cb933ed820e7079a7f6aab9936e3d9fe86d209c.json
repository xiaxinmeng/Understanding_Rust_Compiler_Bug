{"sha": "7cb933ed820e7079a7f6aab9936e3d9fe86d209c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjYjkzM2VkODIwZTcwNzlhN2Y2YWFiOTkzNmUzZDlmZTg2ZDIwOWM=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-08-05T14:12:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-05T14:12:56Z"}, "message": "Rollup merge of #35289 - birryree:E0060_E0061_format_update, r=jonathandturner\n\nE0060 e0061 format update\n\nThis fixes #35215 and fixes #35216 as part of #35233\n\nA separate issue will be opened to track the bonus portion of the tickets as @jaredwy will be handling that part.\n\n?r @jonathandturner", "tree": {"sha": "cb1b848291504004457d7cd1ecf72348148f683e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb1b848291504004457d7cd1ecf72348148f683e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7cb933ed820e7079a7f6aab9936e3d9fe86d209c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7cb933ed820e7079a7f6aab9936e3d9fe86d209c", "html_url": "https://github.com/rust-lang/rust/commit/7cb933ed820e7079a7f6aab9936e3d9fe86d209c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7cb933ed820e7079a7f6aab9936e3d9fe86d209c/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da981cf94ddcc8f51cfffa8122b59fafa8128cef", "url": "https://api.github.com/repos/rust-lang/rust/commits/da981cf94ddcc8f51cfffa8122b59fafa8128cef", "html_url": "https://github.com/rust-lang/rust/commit/da981cf94ddcc8f51cfffa8122b59fafa8128cef"}, {"sha": "ded0d512dc663c774d849cd9836212ff69e56f5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ded0d512dc663c774d849cd9836212ff69e56f5c", "html_url": "https://github.com/rust-lang/rust/commit/ded0d512dc663c774d849cd9836212ff69e56f5c"}], "stats": {"total": 42, "additions": 33, "deletions": 9}, "files": [{"sha": "684be3e4877de7977f378c54c6b5b91e3406eec1", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7cb933ed820e7079a7f6aab9936e3d9fe86d209c/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cb933ed820e7079a7f6aab9936e3d9fe86d209c/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=7cb933ed820e7079a7f6aab9936e3d9fe86d209c", "patch": "@@ -2384,6 +2384,12 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                     arg_count,\n                     if arg_count == 1 {\" was\"} else {\"s were\"}),\n                 error_code);\n+\n+            err.span_label(sp, &format!(\"expected {}{} parameter{}\",\n+                                        if variadic {\"at least \"} else {\"\"},\n+                                        expected_count,\n+                                        if expected_count == 1 {\"\"} else {\"s\"}));\n+\n             let input_types = fn_inputs.iter().map(|i| format!(\"{:?}\", i)).collect::<Vec<String>>();\n             if input_types.len() > 0 {\n                 err.note(&format!(\"the following parameter type{} expected: {}\","}, {"sha": "e1f2618c180f6d54db60ae488094f0a166e15e87", "filename": "src/test/compile-fail/E0060.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7cb933ed820e7079a7f6aab9936e3d9fe86d209c/src%2Ftest%2Fcompile-fail%2FE0060.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cb933ed820e7079a7f6aab9936e3d9fe86d209c/src%2Ftest%2Fcompile-fail%2FE0060.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0060.rs?ref=7cb933ed820e7079a7f6aab9936e3d9fe86d209c", "patch": "@@ -13,5 +13,8 @@ extern \"C\" {\n }\n \n fn main() {\n-    unsafe { printf(); } //~ ERROR E0060\n+    unsafe { printf(); }\n+    //~^ ERROR E0060\n+    //~| NOTE expected at least 1 parameter\n+    //~| NOTE the following parameter type was expected\n }"}, {"sha": "ca04b059dc7f699cc0a576378b0ac94252a10d90", "filename": "src/test/compile-fail/E0061.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7cb933ed820e7079a7f6aab9936e3d9fe86d209c/src%2Ftest%2Fcompile-fail%2FE0061.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cb933ed820e7079a7f6aab9936e3d9fe86d209c/src%2Ftest%2Fcompile-fail%2FE0061.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0061.rs?ref=7cb933ed820e7079a7f6aab9936e3d9fe86d209c", "patch": "@@ -11,5 +11,8 @@\n fn f(a: u16, b: &str) {}\n \n fn main() {\n-    f(0); //~ ERROR E0061\n+    f(0);\n+    //~^ ERROR E0061\n+    //~| NOTE expected 2 parameters\n+    //~| NOTE the following parameter types were expected\n }"}, {"sha": "cf650460c3de11408e6acc898303b5964f2e18de", "filename": "src/test/compile-fail/issue-18819.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7cb933ed820e7079a7f6aab9936e3d9fe86d209c/src%2Ftest%2Fcompile-fail%2Fissue-18819.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cb933ed820e7079a7f6aab9936e3d9fe86d209c/src%2Ftest%2Fcompile-fail%2Fissue-18819.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-18819.rs?ref=7cb933ed820e7079a7f6aab9936e3d9fe86d209c", "patch": "@@ -23,6 +23,8 @@ fn print_x(_: &Foo<Item=bool>, extra: &str) {\n }\n \n fn main() {\n-    print_x(X);  //~error this function takes 2 parameters but 1 parameter was supplied\n-    //~^ NOTE the following parameter types were expected: &Foo<Item=bool>, &str\n+    print_x(X);\n+    //~^ ERROR this function takes 2 parameters but 1 parameter was supplied\n+    //~| NOTE the following parameter types were expected: &Foo<Item=bool>, &str\n+    //~| NOTE expected 2 parameters\n }"}, {"sha": "d19e3b2c7b0a8c40d8193ac10b497e8151d353ad", "filename": "src/test/compile-fail/issue-3044.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7cb933ed820e7079a7f6aab9936e3d9fe86d209c/src%2Ftest%2Fcompile-fail%2Fissue-3044.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cb933ed820e7079a7f6aab9936e3d9fe86d209c/src%2Ftest%2Fcompile-fail%2Fissue-3044.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3044.rs?ref=7cb933ed820e7079a7f6aab9936e3d9fe86d209c", "patch": "@@ -14,7 +14,7 @@ fn main() {\n     needlesArr.iter().fold(|x, y| {\n     });\n     //~^^ ERROR this function takes 2 parameters but 1 parameter was supplied\n-    //~^^^ NOTE the following parameter types were expected\n-    //\n+    //~| NOTE the following parameter types were expected\n+    //~| NOTE expected 2 parameters\n     // the first error is, um, non-ideal.\n }"}, {"sha": "58a84f3490b3c47f3b2f74a4da21fcb7900c00b6", "filename": "src/test/compile-fail/issue-4935.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7cb933ed820e7079a7f6aab9936e3d9fe86d209c/src%2Ftest%2Fcompile-fail%2Fissue-4935.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cb933ed820e7079a7f6aab9936e3d9fe86d209c/src%2Ftest%2Fcompile-fail%2Fissue-4935.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-4935.rs?ref=7cb933ed820e7079a7f6aab9936e3d9fe86d209c", "patch": "@@ -11,5 +11,7 @@\n // Regression test for issue #4935\n \n fn foo(a: usize) {}\n-fn main() { foo(5, 6) } //~ ERROR this function takes 1 parameter but 2 parameters were supplied\n-//~^ NOTE the following parameter type was expected\n+fn main() { foo(5, 6) }\n+//~^ ERROR this function takes 1 parameter but 2 parameters were supplied\n+//~| NOTE the following parameter type was expected\n+//~| NOTE expected 1 parameter"}, {"sha": "bcf676dbede6ff5bbd60c1cd209bc941de948936", "filename": "src/test/compile-fail/method-call-err-msg.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7cb933ed820e7079a7f6aab9936e3d9fe86d209c/src%2Ftest%2Fcompile-fail%2Fmethod-call-err-msg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cb933ed820e7079a7f6aab9936e3d9fe86d209c/src%2Ftest%2Fcompile-fail%2Fmethod-call-err-msg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmethod-call-err-msg.rs?ref=7cb933ed820e7079a7f6aab9936e3d9fe86d209c", "patch": "@@ -20,10 +20,13 @@ impl Foo {\n fn main() {\n     let x = Foo;\n     x.zero(0)   //~ ERROR this function takes 0 parameters but 1 parameter was supplied\n+     //~^ NOTE expected 0 parameters\n      .one()     //~ ERROR this function takes 1 parameter but 0 parameters were supplied\n      //~^ NOTE the following parameter type was expected\n+     //~| NOTE expected 1 parameter\n      .two(0);   //~ ERROR this function takes 2 parameters but 1 parameter was supplied\n      //~^ NOTE the following parameter types were expected\n+     //~| NOTE expected 2 parameters\n \n     let y = Foo;\n     y.zero()"}, {"sha": "f2f61fcaeec16d5fdd97b11c8243ecf8209cbdb3", "filename": "src/test/compile-fail/not-enough-arguments.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7cb933ed820e7079a7f6aab9936e3d9fe86d209c/src%2Ftest%2Fcompile-fail%2Fnot-enough-arguments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cb933ed820e7079a7f6aab9936e3d9fe86d209c/src%2Ftest%2Fcompile-fail%2Fnot-enough-arguments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnot-enough-arguments.rs?ref=7cb933ed820e7079a7f6aab9936e3d9fe86d209c", "patch": "@@ -19,5 +19,6 @@ fn foo(a: isize, b: isize, c: isize, d:isize) {\n fn main() {\n   foo(1, 2, 3);\n   //~^ ERROR this function takes 4 parameters but 3\n-  //~^^ NOTE the following parameter types were expected\n+  //~| NOTE the following parameter types were expected\n+  //~| NOTE expected 4 parameters\n }"}, {"sha": "5865d93e1282ffdbe28e397fa7bf4e93f8438996", "filename": "src/test/compile-fail/overloaded-calls-bad.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cb933ed820e7079a7f6aab9936e3d9fe86d209c/src%2Ftest%2Fcompile-fail%2Foverloaded-calls-bad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cb933ed820e7079a7f6aab9936e3d9fe86d209c/src%2Ftest%2Fcompile-fail%2Foverloaded-calls-bad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Foverloaded-calls-bad.rs?ref=7cb933ed820e7079a7f6aab9936e3d9fe86d209c", "patch": "@@ -42,7 +42,9 @@ fn main() {\n     let ans = s();\n     //~^ ERROR this function takes 1 parameter but 0 parameters were supplied\n     //~| NOTE the following parameter type was expected\n+    //~| NOTE expected 1 parameter\n     let ans = s(\"burma\", \"shave\");\n     //~^ ERROR this function takes 1 parameter but 2 parameters were supplied\n     //~| NOTE the following parameter type was expected\n+    //~| NOTE expected 1 parameter\n }"}, {"sha": "cc9a7c84eded46c495a185350591a4b48382d53a", "filename": "src/test/compile-fail/variadic-ffi-3.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cb933ed820e7079a7f6aab9936e3d9fe86d209c/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cb933ed820e7079a7f6aab9936e3d9fe86d209c/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi-3.rs?ref=7cb933ed820e7079a7f6aab9936e3d9fe86d209c", "patch": "@@ -18,8 +18,10 @@ fn main() {\n     unsafe {\n         foo(); //~ ERROR: this function takes at least 2 parameters but 0 parameters were supplied\n         //~^ NOTE the following parameter types were expected\n+        //~| NOTE expected at least 2 parameters\n         foo(1); //~ ERROR: this function takes at least 2 parameters but 1 parameter was supplied\n         //~^ NOTE the following parameter types were expected\n+        //~| NOTE expected at least 2 parameters\n \n         let x: unsafe extern \"C\" fn(f: isize, x: u8) = foo;\n         //~^ ERROR: mismatched types"}]}