{"sha": "2b3f4b258ce59285d8cd556ac8803eefd716ba49", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiM2Y0YjI1OGNlNTkyODVkOGNkNTU2YWM4ODAzZWVmZDcxNmJhNDk=", "commit": {"author": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2021-02-15T23:38:35Z"}, "committer": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2021-02-15T23:38:35Z"}, "message": "Add LanesAtMost64 bounds", "tree": {"sha": "bf72a0461c5480ba0bdef26eca68b2ff7039dfe3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf72a0461c5480ba0bdef26eca68b2ff7039dfe3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b3f4b258ce59285d8cd556ac8803eefd716ba49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b3f4b258ce59285d8cd556ac8803eefd716ba49", "html_url": "https://github.com/rust-lang/rust/commit/2b3f4b258ce59285d8cd556ac8803eefd716ba49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b3f4b258ce59285d8cd556ac8803eefd716ba49/comments", "author": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15dd0ae14f01bd6f12e2323c1cd36e1a5ed2b048", "url": "https://api.github.com/repos/rust-lang/rust/commits/15dd0ae14f01bd6f12e2323c1cd36e1a5ed2b048", "html_url": "https://github.com/rust-lang/rust/commit/15dd0ae14f01bd6f12e2323c1cd36e1a5ed2b048"}], "stats": {"total": 40, "additions": 37, "deletions": 3}, "files": [{"sha": "db90c4e3149bf017ea170665b03dbbba7ba5348b", "filename": "crates/core_simd/src/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b3f4b258ce59285d8cd556ac8803eefd716ba49/crates%2Fcore_simd%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b3f4b258ce59285d8cd556ac8803eefd716ba49/crates%2Fcore_simd%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fmacros.rs?ref=2b3f4b258ce59285d8cd556ac8803eefd716ba49", "patch": "@@ -141,7 +141,7 @@ macro_rules! impl_vector {\n             }\n         }\n \n-        impl <const LANES: usize> From<$name<LANES>> for [$type; LANES] {\n+        impl <const LANES: usize> From<$name<LANES>> for [$type; LANES] where $name<LANES>: crate::LanesAtMost64 {\n             fn from(vector: $name<LANES>) -> Self {\n                 vector.to_array()\n             }"}, {"sha": "2c74c02d48a0b842fc5fd2bb6c087b6eaee9d2cb", "filename": "crates/test_helpers/src/lib.rs", "status": "modified", "additions": 36, "deletions": 2, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/2b3f4b258ce59285d8cd556ac8803eefd716ba49/crates%2Ftest_helpers%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b3f4b258ce59285d8cd556ac8803eefd716ba49/crates%2Ftest_helpers%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftest_helpers%2Fsrc%2Flib.rs?ref=2b3f4b258ce59285d8cd556ac8803eefd716ba49", "patch": "@@ -241,7 +241,24 @@ macro_rules! test_lanes {\n             mod $test {\n                 use super::*;\n \n-                fn implementation<const $lanes: usize>() $body\n+                fn implementation<const $lanes: usize>()\n+                where\n+                    core_simd::SimdU8<$lanes>: core_simd::LanesAtMost64,\n+                    core_simd::SimdU16<$lanes>: core_simd::LanesAtMost64,\n+                    core_simd::SimdU32<$lanes>: core_simd::LanesAtMost64,\n+                    core_simd::SimdU64<$lanes>: core_simd::LanesAtMost64,\n+                    core_simd::SimdU128<$lanes>: core_simd::LanesAtMost64,\n+                    core_simd::SimdUsize<$lanes>: core_simd::LanesAtMost64,\n+                    core_simd::SimdI8<$lanes>: core_simd::LanesAtMost64,\n+                    core_simd::SimdI16<$lanes>: core_simd::LanesAtMost64,\n+                    core_simd::SimdI32<$lanes>: core_simd::LanesAtMost64,\n+                    core_simd::SimdI64<$lanes>: core_simd::LanesAtMost64,\n+                    core_simd::SimdI128<$lanes>: core_simd::LanesAtMost64,\n+                    core_simd::SimdIsize<$lanes>: core_simd::LanesAtMost64,\n+                    core_simd::SimdF32<$lanes>: core_simd::LanesAtMost64,\n+                    core_simd::SimdF64<$lanes>: core_simd::LanesAtMost64,\n+                    core_simd::BitMask<$lanes>: core_simd::LanesAtMost64,\n+                $body\n \n                 #[cfg(target_arch = \"wasm32\")]\n                 wasm_bindgen_test::wasm_bindgen_test_configure!(run_in_browser);\n@@ -302,7 +319,24 @@ macro_rules! test_lanes_panic {\n             mod $test {\n                 use super::*;\n \n-                fn implementation<const $lanes: usize>() $body\n+                fn implementation<const $lanes: usize>()\n+                where\n+                    core_simd::SimdU8<$lanes>: core_simd::LanesAtMost64,\n+                    core_simd::SimdU16<$lanes>: core_simd::LanesAtMost64,\n+                    core_simd::SimdU32<$lanes>: core_simd::LanesAtMost64,\n+                    core_simd::SimdU64<$lanes>: core_simd::LanesAtMost64,\n+                    core_simd::SimdU128<$lanes>: core_simd::LanesAtMost64,\n+                    core_simd::SimdUsize<$lanes>: core_simd::LanesAtMost64,\n+                    core_simd::SimdI8<$lanes>: core_simd::LanesAtMost64,\n+                    core_simd::SimdI16<$lanes>: core_simd::LanesAtMost64,\n+                    core_simd::SimdI32<$lanes>: core_simd::LanesAtMost64,\n+                    core_simd::SimdI64<$lanes>: core_simd::LanesAtMost64,\n+                    core_simd::SimdI128<$lanes>: core_simd::LanesAtMost64,\n+                    core_simd::SimdIsize<$lanes>: core_simd::LanesAtMost64,\n+                    core_simd::SimdF32<$lanes>: core_simd::LanesAtMost64,\n+                    core_simd::SimdF64<$lanes>: core_simd::LanesAtMost64,\n+                    core_simd::BitMask<$lanes>: core_simd::LanesAtMost64,\n+                $body\n \n                 #[test]\n                 #[should_panic]"}]}