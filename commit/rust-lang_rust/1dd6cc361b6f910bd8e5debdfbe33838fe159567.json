{"sha": "1dd6cc361b6f910bd8e5debdfbe33838fe159567", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkZDZjYzM2MWI2ZjkxMGJkOGU1ZGViZGZiZTMzODM4ZmUxNTk1Njc=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-12-18T17:05:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-12-18T17:05:00Z"}, "message": "Merge pull request #576 from solson/rustup3\n\nAdjust tests for funciton pointer changes", "tree": {"sha": "50d21e64159a56de36c829875994e22052ad5217", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50d21e64159a56de36c829875994e22052ad5217"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1dd6cc361b6f910bd8e5debdfbe33838fe159567", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcGSi8CRBK7hj4Ov3rIwAAdHIIADQACecJnpel74ZxIp3MRjV/\nFf9NMeuC+omnuDTNVV3pE3Urqc58sjlEGoypllZwZecSUq3r+DLQmYH7/u3vD866\nFkbv6H1DghH6lk7elSVGjQJYap0xCi9zI4jCuFcH8XZBCnUQ+zL1RQ4qNu3/C+v+\nAhU2ilM7GIdme+EqKFf/iZHq0GKLteOjUhYPVj/zxSky2xKLQ04UtumaEgdlB+1j\nlIfwZZEjAAxe7AAVycr4hLAEnvUDQYuItXEiRzi4lf5WBszq/kNCT+99s17h71Y7\nYsWAcJK7uIFkxt12J3yLoyYxeZ5tYfktIewapLl1TJFGVQUnffoJh6mVo7MUurQ=\n=/2Bd\n-----END PGP SIGNATURE-----\n", "payload": "tree 50d21e64159a56de36c829875994e22052ad5217\nparent 96b2c347d74cef4b93ddb681fb3244b98ab883f1\nparent 77ef84e1e8a48ffa1a7d63e858e3d158bc1a8ecb\nauthor Ralf Jung <post@ralfj.de> 1545152700 +0100\ncommitter GitHub <noreply@github.com> 1545152700 +0100\n\nMerge pull request #576 from solson/rustup3\n\nAdjust tests for funciton pointer changes"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1dd6cc361b6f910bd8e5debdfbe33838fe159567", "html_url": "https://github.com/rust-lang/rust/commit/1dd6cc361b6f910bd8e5debdfbe33838fe159567", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1dd6cc361b6f910bd8e5debdfbe33838fe159567/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96b2c347d74cef4b93ddb681fb3244b98ab883f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/96b2c347d74cef4b93ddb681fb3244b98ab883f1", "html_url": "https://github.com/rust-lang/rust/commit/96b2c347d74cef4b93ddb681fb3244b98ab883f1"}, {"sha": "77ef84e1e8a48ffa1a7d63e858e3d158bc1a8ecb", "url": "https://api.github.com/repos/rust-lang/rust/commits/77ef84e1e8a48ffa1a7d63e858e3d158bc1a8ecb", "html_url": "https://github.com/rust-lang/rust/commit/77ef84e1e8a48ffa1a7d63e858e3d158bc1a8ecb"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "6819a2af3ed8f9612d389853308010c5f4aa1271", "filename": "tests/run-pass/function_pointers.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1dd6cc361b6f910bd8e5debdfbe33838fe159567/tests%2Frun-pass%2Ffunction_pointers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1dd6cc361b6f910bd8e5debdfbe33838fe159567/tests%2Frun-pass%2Ffunction_pointers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ffunction_pointers.rs?ref=1dd6cc361b6f910bd8e5debdfbe33838fe159567", "patch": "@@ -10,12 +10,12 @@ fn h(i: i32, j: i32) -> i32 {\n     j * i * 7\n }\n \n-fn return_fn_ptr() -> fn() -> i32 {\n+fn return_fn_ptr(f: fn() -> i32) -> fn() -> i32 {\n     f\n }\n \n fn call_fn_ptr() -> i32 {\n-    return_fn_ptr()()\n+    return_fn_ptr(f)()\n }\n \n fn indirect<F: Fn() -> i32>(f: F) -> i32 { f() }\n@@ -41,6 +41,7 @@ fn main() {\n     assert_eq!(indirect3(h), 210);\n     assert_eq!(indirect_mut3(h), 210);\n     assert_eq!(indirect_once3(h), 210);\n-    assert!(return_fn_ptr() == f);\n-    assert!(return_fn_ptr() as unsafe fn() -> i32 == f as fn() -> i32 as unsafe fn() -> i32);\n+    let g = f as fn() -> i32;\n+    assert!(return_fn_ptr(g) == g);\n+    assert!(return_fn_ptr(g) as unsafe fn() -> i32 == g as fn() -> i32 as unsafe fn() -> i32);\n }"}, {"sha": "1dab492f9da3bfe4821e19cfc52a7fcf8f9e9d78", "filename": "tests/run-pass/mir_coercions.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1dd6cc361b6f910bd8e5debdfbe33838fe159567/tests%2Frun-pass%2Fmir_coercions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1dd6cc361b6f910bd8e5debdfbe33838fe159567/tests%2Frun-pass%2Fmir_coercions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fmir_coercions.rs?ref=1dd6cc361b6f910bd8e5debdfbe33838fe159567", "patch": "@@ -60,7 +60,10 @@ fn main() {\n     let a = [0,1,2];\n     let square_local : fn(u32) -> u32 = square;\n     let (f,g) = fn_coercions(&square_local);\n-    assert_eq!(f as *const (), square as *const());\n+    // cannot use `square as *const ()` because we can't know whether the compiler duplicates\n+    // functions, so two function pointers are only equal if they result from the same function\n+    // to function pointer cast\n+    assert_eq!(f as *const (), square_local as *const());\n     assert_eq!(g(4), 16);\n     assert_eq!(identity_coercion(g)(5), 25);\n "}]}