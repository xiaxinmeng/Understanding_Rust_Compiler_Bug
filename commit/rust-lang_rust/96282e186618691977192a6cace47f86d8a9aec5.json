{"sha": "96282e186618691977192a6cace47f86d8a9aec5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2MjgyZTE4NjYxODY5MTk3NzE5MmE2Y2FjZTQ3Zjg2ZDhhOWFlYzU=", "commit": {"author": {"name": "Son", "email": "leson.phung@gmail.com", "date": "2018-08-20T02:04:08Z"}, "committer": {"name": "Son", "email": "leson.phung@gmail.com", "date": "2018-08-20T02:04:08Z"}, "message": "Add doc for impl From for Error", "tree": {"sha": "f9b411ea11314007d504e56fa37e466ed250a4ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9b411ea11314007d504e56fa37e466ed250a4ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96282e186618691977192a6cace47f86d8a9aec5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96282e186618691977192a6cace47f86d8a9aec5", "html_url": "https://github.com/rust-lang/rust/commit/96282e186618691977192a6cace47f86d8a9aec5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96282e186618691977192a6cace47f86d8a9aec5/comments", "author": {"login": "phungleson", "id": 93457, "node_id": "MDQ6VXNlcjkzNDU3", "avatar_url": "https://avatars.githubusercontent.com/u/93457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phungleson", "html_url": "https://github.com/phungleson", "followers_url": "https://api.github.com/users/phungleson/followers", "following_url": "https://api.github.com/users/phungleson/following{/other_user}", "gists_url": "https://api.github.com/users/phungleson/gists{/gist_id}", "starred_url": "https://api.github.com/users/phungleson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phungleson/subscriptions", "organizations_url": "https://api.github.com/users/phungleson/orgs", "repos_url": "https://api.github.com/users/phungleson/repos", "events_url": "https://api.github.com/users/phungleson/events{/privacy}", "received_events_url": "https://api.github.com/users/phungleson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phungleson", "id": 93457, "node_id": "MDQ6VXNlcjkzNDU3", "avatar_url": "https://avatars.githubusercontent.com/u/93457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phungleson", "html_url": "https://github.com/phungleson", "followers_url": "https://api.github.com/users/phungleson/followers", "following_url": "https://api.github.com/users/phungleson/following{/other_user}", "gists_url": "https://api.github.com/users/phungleson/gists{/gist_id}", "starred_url": "https://api.github.com/users/phungleson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phungleson/subscriptions", "organizations_url": "https://api.github.com/users/phungleson/orgs", "repos_url": "https://api.github.com/users/phungleson/repos", "events_url": "https://api.github.com/users/phungleson/events{/privacy}", "received_events_url": "https://api.github.com/users/phungleson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bf6d50a6ff7685b4aa09172d9d09f03f250da9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bf6d50a6ff7685b4aa09172d9d09f03f250da9d", "html_url": "https://github.com/rust-lang/rust/commit/6bf6d50a6ff7685b4aa09172d9d09f03f250da9d"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "a6b46fa20b101adb04162bae615a700b74044a30", "filename": "src/libstd/io/error.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/96282e186618691977192a6cace47f86d8a9aec5/src%2Flibstd%2Fio%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96282e186618691977192a6cace47f86d8a9aec5/src%2Flibstd%2Fio%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Ferror.rs?ref=96282e186618691977192a6cace47f86d8a9aec5", "patch": "@@ -212,6 +212,12 @@ impl ErrorKind {\n /// the heap (for normal construction via Error::new) is too costly.\n #[stable(feature = \"io_error_from_errorkind\", since = \"1.14.0\")]\n impl From<ErrorKind> for Error {\n+    /// Converts a [`ErrorKind`] into a [`Error`].\n+    ///\n+    /// This conversion allocates a new error with simple repr.\n+    ///\n+    /// [`ErrorKind`]: enum.ErrorKind.html\n+    /// [`Error`]: struct.Error.html\n     #[inline]\n     fn from(kind: ErrorKind) -> Error {\n         Error {"}]}