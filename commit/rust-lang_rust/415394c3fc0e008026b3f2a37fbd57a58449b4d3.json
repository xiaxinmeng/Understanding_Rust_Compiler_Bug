{"sha": "415394c3fc0e008026b3f2a37fbd57a58449b4d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxNTM5NGMzZmMwZTAwODAyNmIzZjJhMzdmYmQ1N2E1ODQ0OWI0ZDM=", "commit": {"author": {"name": "pro-grammer1", "email": "1df0d0d3-eed4-45fc-bc60-43a85079f3f9@anonaddy.me", "date": "2020-12-01T09:44:43Z"}, "committer": {"name": "pro-grammer1", "email": "1df0d0d3-eed4-45fc-bc60-43a85079f3f9@anonaddy.me", "date": "2020-12-01T09:44:43Z"}, "message": "Fix false positive in write_literal and print_literal due to numeric literals", "tree": {"sha": "626c30cde21110cda9b5a8db051f9d828115fb68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/626c30cde21110cda9b5a8db051f9d828115fb68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/415394c3fc0e008026b3f2a37fbd57a58449b4d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/415394c3fc0e008026b3f2a37fbd57a58449b4d3", "html_url": "https://github.com/rust-lang/rust/commit/415394c3fc0e008026b3f2a37fbd57a58449b4d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/415394c3fc0e008026b3f2a37fbd57a58449b4d3/comments", "author": {"login": "pro-grammer1", "id": 75092787, "node_id": "MDQ6VXNlcjc1MDkyNzg3", "avatar_url": "https://avatars.githubusercontent.com/u/75092787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pro-grammer1", "html_url": "https://github.com/pro-grammer1", "followers_url": "https://api.github.com/users/pro-grammer1/followers", "following_url": "https://api.github.com/users/pro-grammer1/following{/other_user}", "gists_url": "https://api.github.com/users/pro-grammer1/gists{/gist_id}", "starred_url": "https://api.github.com/users/pro-grammer1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pro-grammer1/subscriptions", "organizations_url": "https://api.github.com/users/pro-grammer1/orgs", "repos_url": "https://api.github.com/users/pro-grammer1/repos", "events_url": "https://api.github.com/users/pro-grammer1/events{/privacy}", "received_events_url": "https://api.github.com/users/pro-grammer1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pro-grammer1", "id": 75092787, "node_id": "MDQ6VXNlcjc1MDkyNzg3", "avatar_url": "https://avatars.githubusercontent.com/u/75092787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pro-grammer1", "html_url": "https://github.com/pro-grammer1", "followers_url": "https://api.github.com/users/pro-grammer1/followers", "following_url": "https://api.github.com/users/pro-grammer1/following{/other_user}", "gists_url": "https://api.github.com/users/pro-grammer1/gists{/gist_id}", "starred_url": "https://api.github.com/users/pro-grammer1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pro-grammer1/subscriptions", "organizations_url": "https://api.github.com/users/pro-grammer1/orgs", "repos_url": "https://api.github.com/users/pro-grammer1/repos", "events_url": "https://api.github.com/users/pro-grammer1/events{/privacy}", "received_events_url": "https://api.github.com/users/pro-grammer1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68cf94f6a66e47234e3adefc6dfbe806cd6ad164", "url": "https://api.github.com/repos/rust-lang/rust/commits/68cf94f6a66e47234e3adefc6dfbe806cd6ad164", "html_url": "https://github.com/rust-lang/rust/commit/68cf94f6a66e47234e3adefc6dfbe806cd6ad164"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "78d23e1e0ef4393838f794259dd4116d7e349519", "filename": "clippy_lints/src/write.rs", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/415394c3fc0e008026b3f2a37fbd57a58449b4d3/clippy_lints%2Fsrc%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/415394c3fc0e008026b3f2a37fbd57a58449b4d3/clippy_lints%2Fsrc%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwrite.rs?ref=415394c3fc0e008026b3f2a37fbd57a58449b4d3", "patch": "@@ -2,7 +2,8 @@ use std::borrow::Cow;\n use std::ops::Range;\n \n use crate::utils::{snippet_with_applicability, span_lint, span_lint_and_sugg, span_lint_and_then};\n-use rustc_ast::ast::{Expr, ExprKind, Item, ItemKind, MacCall, StrLit, StrStyle};\n+use if_chain::if_chain;\n+use rustc_ast::ast::{Expr, ExprKind, Item, ItemKind, LitKind, MacCall, StrLit, StrStyle};\n use rustc_ast::token;\n use rustc_ast::tokenstream::TokenStream;\n use rustc_errors::Applicability;\n@@ -442,7 +443,12 @@ impl Write {\n                 return (Some(fmtstr), None);\n             };\n             match &token_expr.kind {\n-                ExprKind::Lit(_) => {\n+                ExprKind::Lit(lit)\n+                    if match lit.kind {\n+                        LitKind::Int(_, _) | LitKind::Float(_, _) => false,\n+                        _ => true,\n+                    } =>\n+                {\n                     let mut all_simple = true;\n                     let mut seen = false;\n                     for arg in &args {\n@@ -460,10 +466,16 @@ impl Write {\n                         span_lint(cx, lint, token_expr.span, \"literal with an empty format string\");\n                     }\n                     idx += 1;\n-                },\n+                }\n                 ExprKind::Assign(lhs, rhs, _) => {\n-                    if let ExprKind::Lit(_) = rhs.kind {\n-                        if let ExprKind::Path(_, p) = &lhs.kind {\n+                    if_chain! {\n+                        if let ExprKind::Lit(ref lit) = rhs.kind;\n+                        if match lit.kind {\n+                            LitKind::Int(_, _) | LitKind::Float(_, _) => false,\n+                            _ => true,\n+                        };\n+                        if let ExprKind::Path(_, p) = &lhs.kind;\n+                        then {\n                             let mut all_simple = true;\n                             let mut seen = false;\n                             for arg in &args {"}]}