{"sha": "2b3b115a4deac7b8c72d0028576cd4c6dbf036d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiM2IxMTVhNGRlYWM3YjhjNzJkMDAyODU3NmNkNGM2ZGJmMDM2ZDg=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-05-27T01:09:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-27T01:09:15Z"}, "message": "Rollup merge of #72548 - rossmacarthur:add-mcve-for-50687, r=nikomatsakis\n\nAdd test for old compiler ICE when using `Borrow`\n\nThe original issue was caused by implementing `Borrow` on a local type and using the tokio-reactor crate which had this impl: https://github.com/tokio-rs/tokio/blob/tokio-0.1.4/tokio-reactor/src/poll_evented.rs#L547-L577\n\nThis causes an ICE on Rust 1.27.0:\n\n```console\n$ RUSTUP_TOOLCHAIN=1.27.0 rustc src/test/ui/issues/issue-50687-ice-on-borrow.rs\nerror: internal compiler error: librustc/traits/structural_impls.rs:180: impossible case reached\n\nthread 'main' panicked at 'Box<Any>', librustc_errors/lib.rs:554:9\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\nerror: aborting due to previous error\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.27.0 (3eda71b00 2018-06-19) running on x86_64-apple-darwin\n```\n\nCloses #50687", "tree": {"sha": "781f39b8b4593661c710b6b39e8924c9871e1ac3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/781f39b8b4593661c710b6b39e8924c9871e1ac3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b3b115a4deac7b8c72d0028576cd4c6dbf036d8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJezb28CRBK7hj4Ov3rIwAAdHIIAGFP63gACiggD90jplH6V/+V\n9WuUr1IBNpsvDP8tBT/FRj+E0tf4t4lI/8eOnsYGzQ8Yxu8fBAV2dPsVAJAGP506\nyPGmq/UOWpkwafRHTwsg2Rx0zZHVUxSrqCN0VK0tXDvlRNVk4bli7YciYQ5TQhBE\nnPKBhHlq8GbxU+/Pj7v+J6uI8KVRlt+OJId9c84A9gOPHCH981RDdDe5gcvdOt8h\nNzLBS3TiH4xUUQrBq9vUARAOoE2YbWiUfoQGOTbevcKu1YJeuSmDmH8aG42sp67P\nFJ27kmzzEQGaRsbv4N4TH7RSQMTvQcHEuzdpz8sQC0oLVuJOQyPWWk/C420/wYY=\n=U/BE\n-----END PGP SIGNATURE-----\n", "payload": "tree 781f39b8b4593661c710b6b39e8924c9871e1ac3\nparent 8f95dc8d4e31f24185db831fc92b7d5752ba9d7f\nparent 4e4b1edda850157ea2e65b97ed77b2bef934cb85\nauthor Dylan DPC <dylan.dpc@gmail.com> 1590541755 +0200\ncommitter GitHub <noreply@github.com> 1590541755 +0200\n\nRollup merge of #72548 - rossmacarthur:add-mcve-for-50687, r=nikomatsakis\n\nAdd test for old compiler ICE when using `Borrow`\n\nThe original issue was caused by implementing `Borrow` on a local type and using the tokio-reactor crate which had this impl: https://github.com/tokio-rs/tokio/blob/tokio-0.1.4/tokio-reactor/src/poll_evented.rs#L547-L577\n\nThis causes an ICE on Rust 1.27.0:\n\n```console\n$ RUSTUP_TOOLCHAIN=1.27.0 rustc src/test/ui/issues/issue-50687-ice-on-borrow.rs\nerror: internal compiler error: librustc/traits/structural_impls.rs:180: impossible case reached\n\nthread 'main' panicked at 'Box<Any>', librustc_errors/lib.rs:554:9\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\nerror: aborting due to previous error\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.27.0 (3eda71b00 2018-06-19) running on x86_64-apple-darwin\n```\n\nCloses #50687\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b3b115a4deac7b8c72d0028576cd4c6dbf036d8", "html_url": "https://github.com/rust-lang/rust/commit/2b3b115a4deac7b8c72d0028576cd4c6dbf036d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b3b115a4deac7b8c72d0028576cd4c6dbf036d8/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f95dc8d4e31f24185db831fc92b7d5752ba9d7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f95dc8d4e31f24185db831fc92b7d5752ba9d7f", "html_url": "https://github.com/rust-lang/rust/commit/8f95dc8d4e31f24185db831fc92b7d5752ba9d7f"}, {"sha": "4e4b1edda850157ea2e65b97ed77b2bef934cb85", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e4b1edda850157ea2e65b97ed77b2bef934cb85", "html_url": "https://github.com/rust-lang/rust/commit/4e4b1edda850157ea2e65b97ed77b2bef934cb85"}], "stats": {"total": 57, "additions": 57, "deletions": 0}, "files": [{"sha": "7a8a12c2a93afb77069552dc1fedb5c327ea11c9", "filename": "src/test/ui/issues/issue-50687-ice-on-borrow.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/2b3b115a4deac7b8c72d0028576cd4c6dbf036d8/src%2Ftest%2Fui%2Fissues%2Fissue-50687-ice-on-borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b3b115a4deac7b8c72d0028576cd4c6dbf036d8/src%2Ftest%2Fui%2Fissues%2Fissue-50687-ice-on-borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-50687-ice-on-borrow.rs?ref=2b3b115a4deac7b8c72d0028576cd4c6dbf036d8", "patch": "@@ -0,0 +1,41 @@\n+// This previously caused an ICE at:\n+// librustc/traits/structural_impls.rs:180: impossible case reached\n+\n+#![no_main]\n+\n+use std::borrow::Borrow;\n+use std::io;\n+use std::io::Write;\n+\n+trait Constraint {}\n+\n+struct Container<T> {\n+    t: T,\n+}\n+\n+struct Borrowed;\n+struct Owned;\n+\n+impl<'a, T> Write for &'a Container<T>\n+where\n+    T: Constraint,\n+    &'a T: Write,\n+{\n+    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {\n+        Ok(buf.len())\n+    }\n+\n+    fn flush(&mut self) -> io::Result<()> {\n+        Ok(())\n+    }\n+}\n+\n+impl Borrow<Borrowed> for Owned {\n+    fn borrow(&self) -> &Borrowed {\n+        &Borrowed\n+    }\n+}\n+\n+fn func(owned: Owned) {\n+    let _: () = Borrow::borrow(&owned); //~ ERROR mismatched types\n+}"}, {"sha": "f6adfc87dad33ff496eb5501514dc259746f39f9", "filename": "src/test/ui/issues/issue-50687-ice-on-borrow.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2b3b115a4deac7b8c72d0028576cd4c6dbf036d8/src%2Ftest%2Fui%2Fissues%2Fissue-50687-ice-on-borrow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2b3b115a4deac7b8c72d0028576cd4c6dbf036d8/src%2Ftest%2Fui%2Fissues%2Fissue-50687-ice-on-borrow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-50687-ice-on-borrow.stderr?ref=2b3b115a4deac7b8c72d0028576cd4c6dbf036d8", "patch": "@@ -0,0 +1,16 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-50687-ice-on-borrow.rs:40:17\n+   |\n+LL |     let _: () = Borrow::borrow(&owned);\n+   |            --   ^^^^^^^^^^^^^^^^^^^^^^\n+   |            |    |\n+   |            |    expected `()`, found reference\n+   |            |    help: consider dereferencing the borrow: `*Borrow::borrow(&owned)`\n+   |            expected due to this\n+   |\n+   = note: expected unit type `()`\n+              found reference `&_`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}]}