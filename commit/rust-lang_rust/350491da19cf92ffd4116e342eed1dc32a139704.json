{"sha": "350491da19cf92ffd4116e342eed1dc32a139704", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1MDQ5MWRhMTljZjkyZmZkNDExNmUzNDJlZWQxZGMzMmExMzk3MDQ=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-02-28T00:55:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-28T00:55:35Z"}, "message": "Rollup merge of #69379 - jumbatm:llvm-sigsegv, r=pnkfelix\n\nFail on multiple declarations of `main`.\n\nCloses #67946.\n\nPreviously, when inserting the entry function, we only checked for\nduplicate _definitions_ of `main`.  However, it's possible to cause\nproblems even only having a duplicate _declaration_. For example,\nshadowing `main` using an extern block isn't caught by the current\ncheck, and causes an assertion failure down the line in in LLVM code.\n\nr? @pnkfelix", "tree": {"sha": "8bec39a51a86254747a13cd4bc1ab6230e3864bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8bec39a51a86254747a13cd4bc1ab6230e3864bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/350491da19cf92ffd4116e342eed1dc32a139704", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeWGUHCRBK7hj4Ov3rIwAAdHIIAA5MJb2ZrjhyUzkkBybCvtzS\nwJS/oUPYHe5UwW4iov1eimPHgv0wPCyth3Dn/3k8HzM3Zf9LwPDDdTDdoL0JXjEs\nOLg1a40nZfc6u55dCS0+UL1iTzAdSJRmRcUQrgS85ix5vL++Ew8mDnlJ6q+Om/1F\npQmuKqykFxx+Xz8hbRlhfzlukU4yjTfYWNV2mnpbj4HCsnMArRDY6aT/bFF15E84\noaRNsuIMqFVC57A9RUPMs3gOnDAIMfO4m1GrprhPm3SygPgA09UTj9U/8GzJv3rG\nB5O/KS6d5ST85c6lznvvP9Fn1QepzUOzxAjrwSBkcanTqbh2O3VLJhIiUwBN2WM=\n=8XeU\n-----END PGP SIGNATURE-----\n", "payload": "tree 8bec39a51a86254747a13cd4bc1ab6230e3864bb\nparent 6d69caba110c0c2fb90180df1cbc8be5033b91d4\nparent a796af7a7685a21e8c43f93aa5fb3007cd847253\nauthor Dylan DPC <dylan.dpc@gmail.com> 1582851335 +0100\ncommitter GitHub <noreply@github.com> 1582851335 +0100\n\nRollup merge of #69379 - jumbatm:llvm-sigsegv, r=pnkfelix\n\nFail on multiple declarations of `main`.\n\nCloses #67946.\n\nPreviously, when inserting the entry function, we only checked for\nduplicate _definitions_ of `main`.  However, it's possible to cause\nproblems even only having a duplicate _declaration_. For example,\nshadowing `main` using an extern block isn't caught by the current\ncheck, and causes an assertion failure down the line in in LLVM code.\n\nr? @pnkfelix\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/350491da19cf92ffd4116e342eed1dc32a139704", "html_url": "https://github.com/rust-lang/rust/commit/350491da19cf92ffd4116e342eed1dc32a139704", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/350491da19cf92ffd4116e342eed1dc32a139704/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d69caba110c0c2fb90180df1cbc8be5033b91d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d69caba110c0c2fb90180df1cbc8be5033b91d4", "html_url": "https://github.com/rust-lang/rust/commit/6d69caba110c0c2fb90180df1cbc8be5033b91d4"}, {"sha": "a796af7a7685a21e8c43f93aa5fb3007cd847253", "url": "https://api.github.com/repos/rust-lang/rust/commits/a796af7a7685a21e8c43f93aa5fb3007cd847253", "html_url": "https://github.com/rust-lang/rust/commit/a796af7a7685a21e8c43f93aa5fb3007cd847253"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "d6e1ab8909c5956e80d5723ca821eca6d6f628ca", "filename": "src/librustc_codegen_ssa/base.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/350491da19cf92ffd4116e342eed1dc32a139704/src%2Flibrustc_codegen_ssa%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/350491da19cf92ffd4116e342eed1dc32a139704/src%2Flibrustc_codegen_ssa%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fbase.rs?ref=350491da19cf92ffd4116e342eed1dc32a139704", "patch": "@@ -437,10 +437,10 @@ pub fn maybe_create_entry_wrapper<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>>(\n         // listing.\n         let main_ret_ty = cx.tcx().erase_regions(&main_ret_ty.no_bound_vars().unwrap());\n \n-        if cx.get_defined_value(\"main\").is_some() {\n+        if cx.get_declared_value(\"main\").is_some() {\n             // FIXME: We should be smart and show a better diagnostic here.\n             cx.sess()\n-                .struct_span_err(sp, \"entry symbol `main` defined multiple times\")\n+                .struct_span_err(sp, \"entry symbol `main` declared multiple times\")\n                 .help(\"did you use `#[no_mangle]` on `fn main`? Use `#[start]` instead\")\n                 .emit();\n             cx.sess().abort_if_errors();"}, {"sha": "633ca4c31895211b29856e17498a30e2dc910466", "filename": "src/test/ui/duplicate/dupe-symbols-7.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/350491da19cf92ffd4116e342eed1dc32a139704/src%2Ftest%2Fui%2Fduplicate%2Fdupe-symbols-7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/350491da19cf92ffd4116e342eed1dc32a139704/src%2Ftest%2Fui%2Fduplicate%2Fdupe-symbols-7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fduplicate%2Fdupe-symbols-7.rs?ref=350491da19cf92ffd4116e342eed1dc32a139704", "patch": "@@ -1,7 +1,7 @@\n // build-fail\n \n //\n-// error-pattern: entry symbol `main` defined multiple times\n+// error-pattern: entry symbol `main` declared multiple times\n \n // FIXME https://github.com/rust-lang/rust/issues/59774\n // normalize-stderr-test \"thread.*panicked.*Metadata module not compiled.*\\n\" -> \"\""}, {"sha": "2ea5521e0953327b3d7743ca1d34f9a3199acce3", "filename": "src/test/ui/duplicate/dupe-symbols-7.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/350491da19cf92ffd4116e342eed1dc32a139704/src%2Ftest%2Fui%2Fduplicate%2Fdupe-symbols-7.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/350491da19cf92ffd4116e342eed1dc32a139704/src%2Ftest%2Fui%2Fduplicate%2Fdupe-symbols-7.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fduplicate%2Fdupe-symbols-7.stderr?ref=350491da19cf92ffd4116e342eed1dc32a139704", "patch": "@@ -1,4 +1,4 @@\n-error: entry symbol `main` defined multiple times\n+error: entry symbol `main` declared multiple times\n   --> $DIR/dupe-symbols-7.rs:12:1\n    |\n LL | fn main(){}"}, {"sha": "ce7fa24a9fe6b5e5359e34fd5c0faf13c775e916", "filename": "src/test/ui/duplicate/dupe-symbols-8.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/350491da19cf92ffd4116e342eed1dc32a139704/src%2Ftest%2Fui%2Fduplicate%2Fdupe-symbols-8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/350491da19cf92ffd4116e342eed1dc32a139704/src%2Ftest%2Fui%2Fduplicate%2Fdupe-symbols-8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fduplicate%2Fdupe-symbols-8.rs?ref=350491da19cf92ffd4116e342eed1dc32a139704", "patch": "@@ -0,0 +1,12 @@\n+// build-fail\n+// error-pattern: entry symbol `main` declared multiple times\n+//\n+// See #67946.\n+\n+#![allow(warnings)]\n+fn main() {\n+    extern \"Rust\" {\n+     fn main();\n+    }\n+    unsafe { main(); }\n+}"}, {"sha": "f001201b8d0cf3d04b557482d7fba168306b1887", "filename": "src/test/ui/duplicate/dupe-symbols-8.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/350491da19cf92ffd4116e342eed1dc32a139704/src%2Ftest%2Fui%2Fduplicate%2Fdupe-symbols-8.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/350491da19cf92ffd4116e342eed1dc32a139704/src%2Ftest%2Fui%2Fduplicate%2Fdupe-symbols-8.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fduplicate%2Fdupe-symbols-8.stderr?ref=350491da19cf92ffd4116e342eed1dc32a139704", "patch": "@@ -0,0 +1,15 @@\n+error: entry symbol `main` declared multiple times\n+  --> $DIR/dupe-symbols-8.rs:7:1\n+   |\n+LL | / fn main() {\n+LL | |     extern \"Rust\" {\n+LL | |      fn main();\n+LL | |     }\n+LL | |     unsafe { main(); }\n+LL | | }\n+   | |_^\n+   |\n+   = help: did you use `#[no_mangle]` on `fn main`? Use `#[start]` instead\n+\n+error: aborting due to previous error\n+"}]}