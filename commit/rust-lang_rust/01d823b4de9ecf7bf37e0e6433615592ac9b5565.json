{"sha": "01d823b4de9ecf7bf37e0e6433615592ac9b5565", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxZDgyM2I0ZGU5ZWNmN2JmMzdlMGU2NDMzNjE1NTkyYWM5YjU1NjU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-03-28T09:43:31Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-03-28T22:50:32Z"}, "message": "install: Verify that installed compiler runs\n\nAnother sanity check. Can be disabled in `install.sh` via `--disable-verify`\nand `configure` with `--disable-verify-install`.", "tree": {"sha": "014c271db8f9ea9a9fabf90bac7c700d468754ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/014c271db8f9ea9a9fabf90bac7c700d468754ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01d823b4de9ecf7bf37e0e6433615592ac9b5565", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01d823b4de9ecf7bf37e0e6433615592ac9b5565", "html_url": "https://github.com/rust-lang/rust/commit/01d823b4de9ecf7bf37e0e6433615592ac9b5565", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01d823b4de9ecf7bf37e0e6433615592ac9b5565/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42e1003e4a2dd4d3a7e800c2f5b99bf77a4b635e", "url": "https://api.github.com/repos/rust-lang/rust/commits/42e1003e4a2dd4d3a7e800c2f5b99bf77a4b635e", "html_url": "https://github.com/rust-lang/rust/commit/42e1003e4a2dd4d3a7e800c2f5b99bf77a4b635e"}], "stats": {"total": 52, "additions": 48, "deletions": 4}, "files": [{"sha": "70776849df8b5738ecc31236322b0412df431168", "filename": "configure", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/01d823b4de9ecf7bf37e0e6433615592ac9b5565/configure", "raw_url": "https://github.com/rust-lang/rust/raw/01d823b4de9ecf7bf37e0e6433615592ac9b5565/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=01d823b4de9ecf7bf37e0e6433615592ac9b5565", "patch": "@@ -384,6 +384,7 @@ opt pax-flags 0 \"apply PaX flags to rustc binaries (required for GRSecurity/PaX-\n opt inject-std-version 1 \"inject the current compiler version of libstd into programs\"\n opt rpath 1 \"build rpaths into rustc itself\"\n opt nightly 0 \"build nightly packages\"\n+opt verify-install 1 \"verify installed binaries work\"\n valopt prefix \"/usr/local\" \"set installation prefix\"\n valopt local-rust-root \"/usr/local\" \"set prefix for local rust binary\"\n valopt llvm-root \"\" \"set LLVM root\""}, {"sha": "6b639c33cf8b7847f827b6c697b840627f559b68", "filename": "mk/install.mk", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/01d823b4de9ecf7bf37e0e6433615592ac9b5565/mk%2Finstall.mk", "raw_url": "https://github.com/rust-lang/rust/raw/01d823b4de9ecf7bf37e0e6433615592ac9b5565/mk%2Finstall.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Finstall.mk?ref=01d823b4de9ecf7bf37e0e6433615592ac9b5565", "patch": "@@ -8,14 +8,21 @@\n # option. This file may not be copied, modified, or distributed\n # except according to those terms.\n \n+ifdef CFG_DISABLE_VERIFY_INSTALL\n+MAYBE_DISABLE_VERIFY=--disable-verify\n+else\n+MAYBE_DISABLE_VERIFY=\n+endif\n \n install: dist-install-dir-$(CFG_BUILD)\n-\t$(Q)sh tmp/dist/$(PKG_NAME)-$(CFG_BUILD)/install.sh --prefix=\"$(CFG_PREFIX)\" --libdir=\"$(CFG_LIBDIR)\" --mandir=\"$(CFG_MANDIR)\"\n+\t$(Q)sh tmp/dist/$(PKG_NAME)-$(CFG_BUILD)/install.sh --prefix=\"$(CFG_PREFIX)\" --libdir=\"$(CFG_LIBDIR)\" --mandir=\"$(CFG_MANDIR)\" \"$(MAYBE_DISABLE_VERIFY)\"\n # Remove tmp files while we can because they may have been created under sudo\n \t$(Q)rm -R tmp/dist/$(PKG_NAME)-$(CFG_BUILD)\n \n uninstall: dist-install-dir-$(CFG_BUILD)\n \t$(Q)sh tmp/dist/$(PKG_NAME)-$(CFG_BUILD)/install.sh --uninstall --prefix=\"$(CFG_PREFIX)\" --libdir=\"$(CFG_LIBDIR)\" --mandir=\"$(CFG_MANDIR)\"\n+# Remove tmp files while we can because they may have been created under sudo\n+\t$(Q)rm -R tmp/dist/$(PKG_NAME)-$(CFG_BUILD)\n \n \n ######################################################################"}, {"sha": "12a70d5d30653225e84eff9d12dddd99d9510c54", "filename": "src/etc/install.sh", "status": "modified", "additions": 39, "deletions": 3, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/01d823b4de9ecf7bf37e0e6433615592ac9b5565/src%2Fetc%2Finstall.sh", "raw_url": "https://github.com/rust-lang/rust/raw/01d823b4de9ecf7bf37e0e6433615592ac9b5565/src%2Fetc%2Finstall.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Finstall.sh?ref=01d823b4de9ecf7bf37e0e6433615592ac9b5565", "patch": "@@ -212,6 +212,7 @@ BOOL_OPTIONS=\"\"\n VAL_OPTIONS=\"\"\n \n flag uninstall \"only uninstall from the installation prefix\"\n+opt verify 1 \"verify that the installed binaries run correctly\"\n valopt prefix \"/usr/local\" \"set installation prefix\"\n # NB This isn't quite the same definition as in `configure`.\n # just using 'lib' instead of CFG_LIBDIR_RELATIVE\n@@ -230,19 +231,36 @@ validate_opt\n \n # OK, let's get installing ...\n \n+# Sanity check: can we run the binaries?\n+if [ -z \"${CFG_DISABLE_VERIFY}\" ]\n+then\n+\t# Don't do this if uninstalling. Failure here won't help in any way.\n+\tif [ -z \"${CFG_UNINSTALL}\" ]\n+\tthen\n+\t\tmsg \"verifying platform can run binaries\"\n+\t\t\"${CFG_SRC_DIR}/bin/rustc\" --version > /dev/null\n+\t\tif [ $? -ne 0 ]\n+\t\tthen\n+\t\t\terr \"can't execute rustc binary on this platform\"\n+\t\tfi\n+\tfi\n+fi\n+\n # Sanity check: can we can write to the destination?\n+msg \"verifying destination is writable\"\n umask 022 && mkdir -p \"${CFG_LIBDIR}\"\n-need_ok \"can't write to destination. consider 'sudo'.\"\n-touch \"${CFG_LIBDIR}/rust-install-probe\" 2> /dev/null\n+need_ok \"can't write to destination. consider \\`sudo\\`.\"\n+touch \"${CFG_LIBDIR}/rust-install-probe\" > /dev/null\n if [ $? -ne 0 ]\n then\n-    err \"can't write to destination. consider 'sudo'.\"\n+    err \"can't write to destination. consider \\`sudo\\`.\"\n fi\n rm \"${CFG_LIBDIR}/rust-install-probe\"\n need_ok \"failed to remove install probe\"\n \n # Sanity check: don't install to the directory containing the installer.\n # That would surely cause chaos.\n+msg \"verifying destination is not the same as source\"\n INSTALLER_DIR=\"$(cd $(dirname $0) && pwd)\"\n PREFIX_DIR=\"$(cd ${CFG_PREFIX} && pwd)\"\n if [ \"${INSTALLER_DIR}\" = \"${PREFIX_DIR}\" ]\n@@ -273,6 +291,10 @@ then\n         fi\n     done < \"${INSTALLED_MANIFEST}\"\n \n+\t# TODO: Remove the manifest.\n+\t# If we fail to remove rustlib below, then the installed manifest will\n+\t# still be full; the installed manifest needs to be empty before install.\n+\n     # Remove 'rustlib' directory\n     rm -r \"${CFG_LIBDIR}/rustlib\"\n     if [ $? -ne 0 ]\n@@ -346,6 +368,20 @@ while read p; do\n # The manifest lists all files to install\n done < \"${CFG_SRC_DIR}/lib/rustlib/manifest.in\"\n \n+# Sanity check: can we run the installed binaries?\n+if [ -z \"${CFG_DISABLE_VERIFY}\" ]\n+then\n+    msg \"verifying installed binaries are executable\"\n+    \"${CFG_PREFIX}/bin/rustc\" --version > /dev/null\n+    if [ $? -ne 0 ]\n+    then\n+        err \"can't execute installed rustc binary. installation may be broken. \" \\\n+            \"if this is expected then rerun install.sh with \\`--disable-verify\\` \" \\\n+            \"or \\`make install\\` with \\`--disable-verify-install\\`\"\n+    fi\n+fi\n+\n+\n echo\n echo \"    Rust is ready to roll.\"\n echo"}]}