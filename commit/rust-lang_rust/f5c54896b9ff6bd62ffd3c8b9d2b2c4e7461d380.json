{"sha": "f5c54896b9ff6bd62ffd3c8b9d2b2c4e7461d380", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1YzU0ODk2YjlmZjZiZDYyZmZkM2M4YjlkMmIyYzRlNzQ2MWQzODA=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-06T02:28:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-06T02:28:11Z"}, "message": "Rollup merge of #66068 - euclio:null-emitter, r=estebank\n\nuse silent emitter for rustdoc highlighting pass\n\nPartially addresses #63284.", "tree": {"sha": "54e565376f1c1353187e785851d01369c059e386", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54e565376f1c1353187e785851d01369c059e386"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5c54896b9ff6bd62ffd3c8b9d2b2c4e7461d380", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdwi+7CRBK7hj4Ov3rIwAAdHIIADQbvbPY/tQNV33+okK611pv\nop9seWXqQx4tSeVXetmKCs+N1JJGNk4MII7JDQchzNCQI0mH9Z45799zN6KFppY6\njfhq/B0ZClKFKHzZADKgN4TJ1zflNxsXvlYfHxIwpesQd2zGQs0XAhSvJNrTi5lj\naTx2sW6uWY2SG5WAvuh0z+7xA1DPqZsETzD0g+6l9BlXnvszDzcYt+idgIH/+Wzt\nn/0s+nmyNyeqQJVCAGuiby7qW/bAUp1DnTk95jZ0ILaa6X2B4LnR6qRyfL+mPdPe\nldsmn+0aP+/4szj9ul+k89wyGEgfRF6fQTJClczq2dUab/FqM9y7UJTn1jD8gJo=\n=Da4A\n-----END PGP SIGNATURE-----\n", "payload": "tree 54e565376f1c1353187e785851d01369c059e386\nparent e5da1a12e745e0d92cfae421673faac4fd5e4069\nparent d06a4ded13b948a6a5b546514ccc7009097f145a\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1573007291 +0100\ncommitter GitHub <noreply@github.com> 1573007291 +0100\n\nRollup merge of #66068 - euclio:null-emitter, r=estebank\n\nuse silent emitter for rustdoc highlighting pass\n\nPartially addresses #63284.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5c54896b9ff6bd62ffd3c8b9d2b2c4e7461d380", "html_url": "https://github.com/rust-lang/rust/commit/f5c54896b9ff6bd62ffd3c8b9d2b2c4e7461d380", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5c54896b9ff6bd62ffd3c8b9d2b2c4e7461d380/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5da1a12e745e0d92cfae421673faac4fd5e4069", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5da1a12e745e0d92cfae421673faac4fd5e4069", "html_url": "https://github.com/rust-lang/rust/commit/e5da1a12e745e0d92cfae421673faac4fd5e4069"}, {"sha": "d06a4ded13b948a6a5b546514ccc7009097f145a", "url": "https://api.github.com/repos/rust-lang/rust/commits/d06a4ded13b948a6a5b546514ccc7009097f145a", "html_url": "https://github.com/rust-lang/rust/commit/d06a4ded13b948a6a5b546514ccc7009097f145a"}], "stats": {"total": 98, "additions": 19, "deletions": 79}, "files": [{"sha": "5f74df13fae216b240dcfdf7c72c3037a1c03d31", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f5c54896b9ff6bd62ffd3c8b9d2b2c4e7461d380/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5c54896b9ff6bd62ffd3c8b9d2b2c4e7461d380/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=f5c54896b9ff6bd62ffd3c8b9d2b2c4e7461d380", "patch": "@@ -424,6 +424,14 @@ impl Emitter for EmitterWriter {\n     }\n }\n \n+/// An emitter that does nothing when emitting a diagnostic.\n+pub struct SilentEmitter;\n+\n+impl Emitter for SilentEmitter {\n+    fn source_map(&self) -> Option<&Lrc<SourceMapperDyn>> { None }\n+    fn emit_diagnostic(&mut self, _: &Diagnostic) {}\n+}\n+\n /// maximum number of lines we will print for each error; arbitrary.\n pub const MAX_HIGHLIGHT_LINES: usize = 6;\n /// maximum number of suggestions to be shown"}, {"sha": "4e4d6d982fbc59498dd89c2bd3d645bf707d495f", "filename": "src/librustc_interface/interface.rs", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f5c54896b9ff6bd62ffd3c8b9d2b2c4e7461d380/src%2Flibrustc_interface%2Finterface.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5c54896b9ff6bd62ffd3c8b9d2b2c4e7461d380/src%2Flibrustc_interface%2Finterface.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Finterface.rs?ref=f5c54896b9ff6bd62ffd3c8b9d2b2c4e7461d380", "patch": "@@ -17,10 +17,9 @@ use std::sync::{Arc, Mutex};\n use syntax::{self, parse};\n use syntax::ast::{self, MetaItemKind};\n use syntax::parse::token;\n-use syntax::source_map::{FileName, FilePathMapping, FileLoader, SourceMap};\n+use syntax::source_map::{FileName, FileLoader, SourceMap};\n use syntax::sess::ParseSess;\n use syntax_pos::edition;\n-use rustc_errors::{Diagnostic, emitter::Emitter, Handler, SourceMapperDyn};\n \n pub type Result<T> = result::Result<T, ErrorReported>;\n \n@@ -63,18 +62,9 @@ impl Compiler {\n \n /// Converts strings provided as `--cfg [cfgspec]` into a `crate_cfg`.\n pub fn parse_cfgspecs(cfgspecs: Vec<String>) -> FxHashSet<(String, Option<String>)> {\n-    struct NullEmitter;\n-    impl Emitter for NullEmitter {\n-        fn emit_diagnostic(&mut self, _: &Diagnostic) {}\n-        fn source_map(&self) -> Option<&Lrc<SourceMapperDyn>> { None }\n-    }\n-\n     syntax::with_default_globals(move || {\n         let cfg = cfgspecs.into_iter().map(|s| {\n-\n-            let cm = Lrc::new(SourceMap::new(FilePathMapping::empty()));\n-            let handler = Handler::with_emitter(false, None, Box::new(NullEmitter));\n-            let sess = ParseSess::with_span_handler(handler, cm);\n+            let sess = ParseSess::with_silent_emitter();\n             let filename = FileName::cfg_spec_source_code(&s);\n             let mut parser = parse::new_parser_from_source_str(&sess, filename, s.to_string());\n "}, {"sha": "88ba13f2796a003a29eabfd0e59dbc311450c3e2", "filename": "src/librustdoc/html/highlight.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f5c54896b9ff6bd62ffd3c8b9d2b2c4e7461d380/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5c54896b9ff6bd62ffd3c8b9d2b2c4e7461d380/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs?ref=f5c54896b9ff6bd62ffd3c8b9d2b2c4e7461d380", "patch": "@@ -11,7 +11,7 @@ use std::fmt::Display;\n use std::io;\n use std::io::prelude::*;\n \n-use syntax::source_map::{SourceMap, FilePathMapping};\n+use syntax::source_map::SourceMap;\n use syntax::parse::lexer;\n use syntax::parse::token::{self, Token};\n use syntax::sess::ParseSess;\n@@ -33,7 +33,7 @@ pub fn render_with_highlighting(\n                class, tooltip).unwrap();\n     }\n \n-    let sess = ParseSess::new(FilePathMapping::empty());\n+    let sess = ParseSess::with_silent_emitter();\n     let fm = sess.source_map().new_source_file(\n         FileName::Custom(String::from(\"rustdoc-highlighting\")),\n         src.to_owned(),"}, {"sha": "30f8c56a05619c85c4d231ed0b9a70121baf1cc5", "filename": "src/libsyntax/sess.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f5c54896b9ff6bd62ffd3c8b9d2b2c4e7461d380/src%2Flibsyntax%2Fsess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5c54896b9ff6bd62ffd3c8b9d2b2c4e7461d380/src%2Flibsyntax%2Fsess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fsess.rs?ref=f5c54896b9ff6bd62ffd3c8b9d2b2c4e7461d380", "patch": "@@ -6,7 +6,7 @@ use crate::early_buffered_lints::{BufferedEarlyLint, BufferedEarlyLintId};\n use crate::source_map::{SourceMap, FilePathMapping};\n use crate::feature_gate::UnstableFeatures;\n \n-use errors::{Applicability, Handler, ColorConfig, DiagnosticBuilder};\n+use errors::{Applicability, emitter::SilentEmitter, Handler, ColorConfig, DiagnosticBuilder};\n use rustc_data_structures::fx::{FxHashSet, FxHashMap};\n use rustc_data_structures::sync::{Lrc, Lock, Once};\n use syntax_pos::{Symbol, Span, MultiSpan};\n@@ -107,6 +107,12 @@ impl ParseSess {\n         }\n     }\n \n+    pub fn with_silent_emitter() -> Self {\n+        let cm = Lrc::new(SourceMap::new(FilePathMapping::empty()));\n+        let handler = Handler::with_emitter(false, None, Box::new(SilentEmitter));\n+        ParseSess::with_span_handler(handler, cm)\n+    }\n+\n     #[inline]\n     pub fn source_map(&self) -> &SourceMap {\n         &self.source_map"}, {"sha": "84c10028fd1f937806cc3266de6ea2af3ebf45fa", "filename": "src/test/rustdoc-ui/invalid-syntax.stderr", "status": "modified", "additions": 0, "deletions": 64, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/f5c54896b9ff6bd62ffd3c8b9d2b2c4e7461d380/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f5c54896b9ff6bd62ffd3c8b9d2b2c4e7461d380/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.stderr?ref=f5c54896b9ff6bd62ffd3c8b9d2b2c4e7461d380", "patch": "@@ -222,67 +222,3 @@ warning: could not parse code block as Rust code\n LL | ///     \\____/\n    |         ^^^^^^\n \n-error: unknown start of token: \\\n- --> <rustdoc-highlighting>:1:1\n-  |\n-1 | \\____/\n-  | ^\n-\n-error: unknown start of token: \\\n- --> <rustdoc-highlighting>:1:1\n-  |\n-1 | \\_\n-  | ^\n-\n-error: unknown start of token: \\\n- --> <rustdoc-highlighting>:1:1\n-  |\n-1 | \\_\n-  | ^\n-\n-error: unknown start of token: `\n- --> <rustdoc-highlighting>:1:1\n-  |\n-1 | ```\n-  | ^\n-  |\n-help: Unicode character '`' (Grave Accent) looks like ''' (Single Quote), but it is not\n-  |\n-1 | '``\n-  | ^\n-\n-error: unknown start of token: \\\n- --> <rustdoc-highlighting>:2:1\n-  |\n-2 | \\_\n-  | ^\n-\n-error: unknown start of token: \\\n- --> <rustdoc-highlighting>:1:1\n-  |\n-1 | \\_\n-  | ^\n-\n-error: unknown start of token: \\\n- --> <rustdoc-highlighting>:1:1\n-  |\n-1 | \\_\n-  | ^\n-\n-error: unknown start of token: `\n- --> <rustdoc-highlighting>:3:30\n-  |\n-3 |    |     ^^^^^^ did you mean `baz::foobar`?\n-  |                              ^\n-  |\n-help: Unicode character '`' (Grave Accent) looks like ''' (Single Quote), but it is not\n-  |\n-3 |    |     ^^^^^^ did you mean 'baz::foobar`?\n-  |                              ^\n-\n-error: unknown start of token: \\\n- --> <rustdoc-highlighting>:1:1\n-  |\n-1 | \\__________pkt->size___________/          \\_result->size_/ \\__pkt->size__/\n-  | ^\n-"}]}