{"sha": "45052e13a5a1835974ca2c2a3e648416db9d38cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1MDUyZTEzYTVhMTgzNTk3NGNhMmMyYTNlNjQ4NDE2ZGI5ZDM4Y2M=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-12-06T19:08:23Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-12-06T19:08:23Z"}, "message": "test: Fix some compile-fail bustage. rs=bustage", "tree": {"sha": "08cf9703abbb655d4a120c9a9f95bf85f8d0e755", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08cf9703abbb655d4a120c9a9f95bf85f8d0e755"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45052e13a5a1835974ca2c2a3e648416db9d38cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45052e13a5a1835974ca2c2a3e648416db9d38cc", "html_url": "https://github.com/rust-lang/rust/commit/45052e13a5a1835974ca2c2a3e648416db9d38cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45052e13a5a1835974ca2c2a3e648416db9d38cc/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b27150ef82c65b3e827b0ffb2a22d3baf131a347", "url": "https://api.github.com/repos/rust-lang/rust/commits/b27150ef82c65b3e827b0ffb2a22d3baf131a347", "html_url": "https://github.com/rust-lang/rust/commit/b27150ef82c65b3e827b0ffb2a22d3baf131a347"}], "stats": {"total": 46, "additions": 10, "deletions": 36}, "files": [{"sha": "4ebc31a37391fbfb9faa40f33ca396350a6ca5c3", "filename": "src/test/compile-fail/borrowck-issue-2657-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45052e13a5a1835974ca2c2a3e648416db9d38cc/src%2Ftest%2Fcompile-fail%2Fborrowck-issue-2657-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45052e13a5a1835974ca2c2a3e648416db9d38cc/src%2Ftest%2Fcompile-fail%2Fborrowck-issue-2657-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-issue-2657-1.rs?ref=45052e13a5a1835974ca2c2a3e648416db9d38cc", "patch": "@@ -2,7 +2,7 @@ fn main() {\n let x = Some(~1);\n match x { //~ NOTE loan of immutable local variable granted here\n   Some(ref _y) => {\n-    let _a = move x; //~ ERROR moving out of immutable local variable prohibited due to outstanding loan\n+    let _a = x; //~ ERROR moving out of immutable local variable prohibited due to outstanding loan\n   }\n   _ => {}\n }"}, {"sha": "e7f9bf31798908bcbc3b0ad3bad6bca82809e92d", "filename": "src/test/compile-fail/borrowck-issue-2657-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45052e13a5a1835974ca2c2a3e648416db9d38cc/src%2Ftest%2Fcompile-fail%2Fborrowck-issue-2657-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45052e13a5a1835974ca2c2a3e648416db9d38cc/src%2Ftest%2Fcompile-fail%2Fborrowck-issue-2657-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-issue-2657-2.rs?ref=45052e13a5a1835974ca2c2a3e648416db9d38cc", "patch": "@@ -2,7 +2,7 @@ fn main() {\n let x = Some(~1);\n match x {\n   Some(ref y) => {\n-    let _b = move *y; //~ ERROR moving out of dereference of immutable & pointer\n+    let _b = *y; //~ ERROR moving out of dereference of immutable & pointer\n   }\n   _ => {}\n }"}, {"sha": "02e8b2480afc34ae48e5768b2a31d9a98933d6e1", "filename": "src/test/compile-fail/borrowck-loan-blocks-move.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/45052e13a5a1835974ca2c2a3e648416db9d38cc/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-blocks-move.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45052e13a5a1835974ca2c2a3e648416db9d38cc/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-blocks-move.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-blocks-move.rs?ref=45052e13a5a1835974ca2c2a3e648416db9d38cc", "patch": "@@ -1,10 +1,10 @@\n-fn take(-_v: ~int) {\n+fn take(_v: ~int) {\n }\n \n fn box_imm() {\n     let v = ~3;\n     let _w = &v; //~ NOTE loan of immutable local variable granted here\n-    take(move v); //~ ERROR moving out of immutable local variable prohibited due to outstanding loan\n+    take(v); //~ ERROR moving out of immutable local variable prohibited due to outstanding loan\n }\n \n fn main() {"}, {"sha": "0be10738435cf44194f4a2bbb2f9e06e03feaaa6", "filename": "src/test/compile-fail/borrowck-loan-rcvr-overloaded-op.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45052e13a5a1835974ca2c2a3e648416db9d38cc/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-rcvr-overloaded-op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45052e13a5a1835974ca2c2a3e648416db9d38cc/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-rcvr-overloaded-op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-rcvr-overloaded-op.rs?ref=45052e13a5a1835974ca2c2a3e648416db9d38cc", "patch": "@@ -4,7 +4,7 @@ struct Point {\n }\n \n impl Point : ops::Add<int,int> {\n-    pure fn add(z: &int) -> int {\n+    pure fn add(&self, z: &int) -> int {\n         self.x + self.y + (*z)\n     }\n }"}, {"sha": "51fd42f8dfd3a6b6a3983ac9182d2491226f30a7", "filename": "src/test/compile-fail/borrowck-no-cycle-in-exchange-heap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45052e13a5a1835974ca2c2a3e648416db9d38cc/src%2Ftest%2Fcompile-fail%2Fborrowck-no-cycle-in-exchange-heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45052e13a5a1835974ca2c2a3e648416db9d38cc/src%2Ftest%2Fcompile-fail%2Fborrowck-no-cycle-in-exchange-heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-no-cycle-in-exchange-heap.rs?ref=45052e13a5a1835974ca2c2a3e648416db9d38cc", "patch": "@@ -7,7 +7,7 @@ fn main() {\n     // Create a cycle!\n     match *x { //~ NOTE loan of immutable local variable granted here\n       node(ref y) => {\n-        y.a = move x; //~ ERROR moving out of immutable local variable prohibited due to outstanding loan\n+        y.a = x; //~ ERROR moving out of immutable local variable prohibited due to outstanding loan\n       }\n       empty => {}\n     };"}, {"sha": "9974828d8f7f0536a92ca79d5b91aa727d98f4bd", "filename": "src/test/compile-fail/borrowck-unary-move-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45052e13a5a1835974ca2c2a3e648416db9d38cc/src%2Ftest%2Fcompile-fail%2Fborrowck-unary-move-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45052e13a5a1835974ca2c2a3e648416db9d38cc/src%2Ftest%2Fcompile-fail%2Fborrowck-unary-move-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-unary-move-2.rs?ref=45052e13a5a1835974ca2c2a3e648416db9d38cc", "patch": "@@ -18,5 +18,5 @@ enum wrapper = noncopyable;\n \n fn main() {\n     let x1 = wrapper(noncopyable());\n-    let _x2 = move *x1; //~ ERROR moving out of enum content\n+    let _x2 = *x1; //~ ERROR moving out of enum content\n }"}, {"sha": "6f6b367f548bc6290e7f129e9070890ab40bb827", "filename": "src/test/compile-fail/borrowck-unary-move.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/45052e13a5a1835974ca2c2a3e648416db9d38cc/src%2Ftest%2Fcompile-fail%2Fborrowck-unary-move.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45052e13a5a1835974ca2c2a3e648416db9d38cc/src%2Ftest%2Fcompile-fail%2Fborrowck-unary-move.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-unary-move.rs?ref=45052e13a5a1835974ca2c2a3e648416db9d38cc", "patch": "@@ -1,11 +1,11 @@\n fn foo(+x: ~int) -> int {\n     let y = &*x; //~ NOTE loan of argument granted here\n-    free(move x); //~ ERROR moving out of argument prohibited due to outstanding loan\n+    free(x); //~ ERROR moving out of argument prohibited due to outstanding loan\n     *y\n }\n \n fn free(+_x: ~int) {\n }\n \n fn main() {\n-}\n\\ No newline at end of file\n+}"}, {"sha": "d8d2f82da97bf9336915f028107c8feb35b295d2", "filename": "src/test/compile-fail/issue-2587-2.rs", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/b27150ef82c65b3e827b0ffb2a22d3baf131a347/src%2Ftest%2Fcompile-fail%2Fissue-2587-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b27150ef82c65b3e827b0ffb2a22d3baf131a347/src%2Ftest%2Fcompile-fail%2Fissue-2587-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2587-2.rs?ref=b27150ef82c65b3e827b0ffb2a22d3baf131a347", "patch": "@@ -1,26 +0,0 @@\n-#[legacy_modes];\n-\n-fn foo<T: Copy>(+_t: T) { fail; }\n-\n-fn bar<T>(+_t: T) { fail; }\n-\n-struct S {\n-    x: int,\n-}\n-\n-impl S : Drop {\n-    fn finalize(&self) {}\n-}\n-\n-fn S(x: int) -> S { S { x: x } }\n-\n-impl S : Add<S, S> {\n-    pure fn add(rhs: &S) -> S {\n-        S { x: self.x + (*rhs).x }\n-    }\n-}\n-\n-fn main() {\n-   let v = S(5);\n-   let _y = v + (move v); //~ ERROR: copying a noncopyable value\n-}"}, {"sha": "a1837c6bb8b49119b8891d25e383b428ebc0a335", "filename": "src/test/compile-fail/issue-2590.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45052e13a5a1835974ca2c2a3e648416db9d38cc/src%2Ftest%2Fcompile-fail%2Fissue-2590.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45052e13a5a1835974ca2c2a3e648416db9d38cc/src%2Ftest%2Fcompile-fail%2Fissue-2590.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2590.rs?ref=45052e13a5a1835974ca2c2a3e648416db9d38cc", "patch": "@@ -10,7 +10,7 @@ trait parse {\n \n impl parser: parse {\n     fn parse() -> ~[int] {\n-        dvec::unwrap(move self.tokens) //~ ERROR moving out of immutable field\n+        dvec::unwrap(self.tokens) //~ ERROR moving out of immutable field\n     }\n }\n "}]}