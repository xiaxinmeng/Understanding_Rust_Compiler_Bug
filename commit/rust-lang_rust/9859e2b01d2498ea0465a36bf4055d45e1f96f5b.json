{"sha": "9859e2b01d2498ea0465a36bf4055d45e1f96f5b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4NTllMmIwMWQyNDk4ZWEwNDY1YTM2YmY0MDU1ZDQ1ZTFmOTZmNWI=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-04-13T02:06:15Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-05-11T16:55:31Z"}, "message": "Add test for memory layout information", "tree": {"sha": "015eb43264bd0cec26e710e28a6e622030b53c90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/015eb43264bd0cec26e710e28a6e622030b53c90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9859e2b01d2498ea0465a36bf4055d45e1f96f5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9859e2b01d2498ea0465a36bf4055d45e1f96f5b", "html_url": "https://github.com/rust-lang/rust/commit/9859e2b01d2498ea0465a36bf4055d45e1f96f5b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9859e2b01d2498ea0465a36bf4055d45e1f96f5b/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20b30acfa856309857e8914fb2bb5f831e991d0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/20b30acfa856309857e8914fb2bb5f831e991d0b", "html_url": "https://github.com/rust-lang/rust/commit/20b30acfa856309857e8914fb2bb5f831e991d0b"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "261f407a9063b0accb91ee7ddae68ddb7a1163a9", "filename": "src/test/rustdoc/type-layout.rs", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/9859e2b01d2498ea0465a36bf4055d45e1f96f5b/src%2Ftest%2Frustdoc%2Ftype-layout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9859e2b01d2498ea0465a36bf4055d45e1f96f5b/src%2Ftest%2Frustdoc%2Ftype-layout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftype-layout.rs?ref=9859e2b01d2498ea0465a36bf4055d45e1f96f5b", "patch": "@@ -0,0 +1,43 @@\n+// @has type_layout/struct.Foo.html 'Size: '\n+// @has - ' bytes'\n+pub struct Foo {\n+    pub a: usize,\n+    b: Vec<String>,\n+}\n+\n+// @has type_layout/enum.Bar.html 'Size: '\n+// @has - ' bytes'\n+pub enum Bar<'a> {\n+    A(String),\n+    B(&'a str, (std::collections::HashMap<String, usize>, Foo)),\n+}\n+\n+// @has type_layout/union.Baz.html 'Size: '\n+// @has - ' bytes'\n+pub union Baz {\n+    a: &'static str,\n+    b: usize,\n+    c: &'static [u8],\n+}\n+\n+// @has type_layout/struct.X.html 'Size: '\n+// @has - ' bytes'\n+pub struct X(usize);\n+\n+// @has type_layout/struct.Y.html 'Size: '\n+// @has - ' byte'\n+// @!has - ' bytes'\n+pub struct Y(u8);\n+\n+// @!has type_layout/struct.Generic.html 'Size: '\n+pub struct Generic<T>(T);\n+\n+// @has type_layout/struct.Unsized.html 'Size: '\n+// @has - '(unsized)'\n+pub struct Unsized([u8]);\n+\n+// @!has type_layout/type.TypeAlias.html 'Size: '\n+pub type TypeAlias = X;\n+\n+// @!has type_layout/trait.MyTrait.html 'Size: '\n+pub trait MyTrait {}"}]}