{"sha": "2a5aabdfc2c44112da2fd98661e03c559e057731", "node_id": "C_kwDOAAsO6NoAKDJhNWFhYmRmYzJjNDQxMTJkYTJmZDk4NjYxZTAzYzU1OWUwNTc3MzE", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-12-15T04:04:09Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-12-15T04:04:09Z"}, "message": "Remove `SimplifiedTypeGen::map_def`.\n\nIt's unused.", "tree": {"sha": "d79775dd257daff0244e2487035818d350f4d245", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d79775dd257daff0244e2487035818d350f4d245"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a5aabdfc2c44112da2fd98661e03c559e057731", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a5aabdfc2c44112da2fd98661e03c559e057731", "html_url": "https://github.com/rust-lang/rust/commit/2a5aabdfc2c44112da2fd98661e03c559e057731", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a5aabdfc2c44112da2fd98661e03c559e057731/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37d7de337903a558dbeb1e82c844fe915ab8ff25", "url": "https://api.github.com/repos/rust-lang/rust/commits/37d7de337903a558dbeb1e82c844fe915ab8ff25", "html_url": "https://github.com/rust-lang/rust/commit/37d7de337903a558dbeb1e82c844fe915ab8ff25"}], "stats": {"total": 30, "additions": 0, "deletions": 30}, "files": [{"sha": "4a9cd83d798e157293ffb2c253d63b14275ae4f4", "filename": "compiler/rustc_middle/src/ty/fast_reject.rs", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/2a5aabdfc2c44112da2fd98661e03c559e057731/compiler%2Frustc_middle%2Fsrc%2Fty%2Ffast_reject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a5aabdfc2c44112da2fd98661e03c559e057731/compiler%2Frustc_middle%2Fsrc%2Fty%2Ffast_reject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Ffast_reject.rs?ref=2a5aabdfc2c44112da2fd98661e03c559e057731", "patch": "@@ -153,36 +153,6 @@ impl<D: Copy + Debug + Eq> SimplifiedTypeGen<D> {\n             _ => None,\n         }\n     }\n-\n-    pub fn map_def<U, F>(self, map: F) -> SimplifiedTypeGen<U>\n-    where\n-        F: Fn(D) -> U,\n-        U: Copy + Debug + Eq,\n-    {\n-        match self {\n-            BoolSimplifiedType => BoolSimplifiedType,\n-            CharSimplifiedType => CharSimplifiedType,\n-            IntSimplifiedType(t) => IntSimplifiedType(t),\n-            UintSimplifiedType(t) => UintSimplifiedType(t),\n-            FloatSimplifiedType(t) => FloatSimplifiedType(t),\n-            AdtSimplifiedType(d) => AdtSimplifiedType(map(d)),\n-            ForeignSimplifiedType(d) => ForeignSimplifiedType(map(d)),\n-            StrSimplifiedType => StrSimplifiedType,\n-            ArraySimplifiedType => ArraySimplifiedType,\n-            SliceSimplifiedType => SliceSimplifiedType,\n-            RefSimplifiedType(m) => RefSimplifiedType(m),\n-            PtrSimplifiedType(m) => PtrSimplifiedType(m),\n-            NeverSimplifiedType => NeverSimplifiedType,\n-            MarkerTraitObjectSimplifiedType => MarkerTraitObjectSimplifiedType,\n-            TupleSimplifiedType(n) => TupleSimplifiedType(n),\n-            TraitSimplifiedType(d) => TraitSimplifiedType(map(d)),\n-            ClosureSimplifiedType(d) => ClosureSimplifiedType(map(d)),\n-            GeneratorSimplifiedType(d) => GeneratorSimplifiedType(map(d)),\n-            GeneratorWitnessSimplifiedType(n) => GeneratorWitnessSimplifiedType(n),\n-            FunctionSimplifiedType(n) => FunctionSimplifiedType(n),\n-            PlaceholderSimplifiedType => PlaceholderSimplifiedType,\n-        }\n-    }\n }\n \n /// Given generic arguments from an obligation and an impl,"}]}