{"sha": "52bd4f263b57faf987dc32d40642403e313e175a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyYmQ0ZjI2M2I1N2ZhZjk4N2RjMzJkNDA2NDI0MDNlMzEzZTE3NWE=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-04-14T17:05:21Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-06-12T21:07:13Z"}, "message": "Add a limit_rdylib_exports option and disable it for Solaris", "tree": {"sha": "009e1a7c156815cad6032fefbfb3a91a5b9a1b6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/009e1a7c156815cad6032fefbfb3a91a5b9a1b6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52bd4f263b57faf987dc32d40642403e313e175a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52bd4f263b57faf987dc32d40642403e313e175a", "html_url": "https://github.com/rust-lang/rust/commit/52bd4f263b57faf987dc32d40642403e313e175a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52bd4f263b57faf987dc32d40642403e313e175a/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "185dcebbff7f3c18fb94be82f76bdfd620cfb096", "url": "https://api.github.com/repos/rust-lang/rust/commits/185dcebbff7f3c18fb94be82f76bdfd620cfb096", "html_url": "https://github.com/rust-lang/rust/commit/185dcebbff7f3c18fb94be82f76bdfd620cfb096"}], "stats": {"total": 25, "additions": 18, "deletions": 7}, "files": [{"sha": "39ccf4f46b7bd1938b51bdb8ee20589bd7c38fe3", "filename": "src/librustc_codegen_ssa/back/linker.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/52bd4f263b57faf987dc32d40642403e313e175a/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52bd4f263b57faf987dc32d40642403e313e175a/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs?ref=52bd4f263b57faf987dc32d40642403e313e175a", "patch": "@@ -381,15 +381,12 @@ impl<'a> Linker for GccLinker<'a> {\n         // The object files have far more public symbols than we actually want to export,\n         // so we hide them all here.\n \n-        if crate_type == CrateType::ProcMacro {\n-            return\n+        if !self.sess.target.target.options.limit_rdylib_exports {\n+            return;\n         }\n \n-        // Symbol visibility takes care of this for the WebAssembly.\n-        // Additionally the only known linker, LLD, doesn't support the script\n-        // arguments just yet\n-        if self.sess.target.target.arch == \"wasm32\" {\n-            return;\n+        if crate_type == CrateType::ProcMacro {\n+            return\n         }\n \n         let mut arg = OsString::new();"}, {"sha": "329d3f2b2f3c4bd105a299893c24746f9bf88f3d", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/52bd4f263b57faf987dc32d40642403e313e175a/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52bd4f263b57faf987dc32d40642403e313e175a/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=52bd4f263b57faf987dc32d40642403e313e175a", "patch": "@@ -748,6 +748,9 @@ pub struct TargetOptions {\n     /// wasm32 where the whole program either has simd or not.\n     pub simd_types_indirect: bool,\n \n+    /// Pass a list of symbol which should be exported in the dylib to the linker.\n+    pub limit_rdylib_exports: bool,\n+\n     /// If set, have the linker export exactly these symbols, instead of using\n     /// the usual logic to figure this out from the crate itself.\n     pub override_export_symbols: Option<Vec<String>>,\n@@ -843,6 +846,7 @@ impl Default for TargetOptions {\n             emit_debug_gdb_scripts: true,\n             requires_uwtable: false,\n             simd_types_indirect: true,\n+            limit_rdylib_exports: true,\n             override_export_symbols: None,\n             merge_functions: MergeFunctions::Aliases,\n             target_mcount: \"mcount\".to_string(),\n@@ -1149,6 +1153,7 @@ impl Target {\n         key!(emit_debug_gdb_scripts, bool);\n         key!(requires_uwtable, bool);\n         key!(simd_types_indirect, bool);\n+        key!(limit_rdylib_exports, bool);\n         key!(override_export_symbols, opt_list);\n         key!(merge_functions, MergeFunctions)?;\n         key!(target_mcount);\n@@ -1364,6 +1369,7 @@ impl ToJson for Target {\n         target_option_val!(emit_debug_gdb_scripts);\n         target_option_val!(requires_uwtable);\n         target_option_val!(simd_types_indirect);\n+        target_option_val!(limit_rdylib_exports);\n         target_option_val!(override_export_symbols);\n         target_option_val!(merge_functions);\n         target_option_val!(target_mcount);"}, {"sha": "9e7eda037732b0a75c70da4d32ec1d2b44828aa9", "filename": "src/librustc_target/spec/solaris_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/52bd4f263b57faf987dc32d40642403e313e175a/src%2Flibrustc_target%2Fspec%2Fsolaris_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52bd4f263b57faf987dc32d40642403e313e175a/src%2Flibrustc_target%2Fspec%2Fsolaris_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fsolaris_base.rs?ref=52bd4f263b57faf987dc32d40642403e313e175a", "patch": "@@ -8,6 +8,7 @@ pub fn opts() -> TargetOptions {\n         has_rpath: true,\n         target_family: Some(\"unix\".to_string()),\n         is_like_solaris: true,\n+        limit_rdylib_exports: false, // Linker doesn't support this\n \n         .. Default::default()\n     }"}, {"sha": "39a8ce9282573aaa1e4dba529dcb9871ff1a2416", "filename": "src/librustc_target/spec/wasm32_base.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/52bd4f263b57faf987dc32d40642403e313e175a/src%2Flibrustc_target%2Fspec%2Fwasm32_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52bd4f263b57faf987dc32d40642403e313e175a/src%2Flibrustc_target%2Fspec%2Fwasm32_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fwasm32_base.rs?ref=52bd4f263b57faf987dc32d40642403e313e175a", "patch": "@@ -106,6 +106,11 @@ pub fn options() -> TargetOptions {\n         // no dynamic linking, no need for default visibility!\n         default_hidden_visibility: true,\n \n+        // Symbol visibility takes care of this for the WebAssembly.\n+        // Additionally the only known linker, LLD, doesn't support the script\n+        // arguments just yet\n+        limit_rdylib_exports: false,\n+\n         // we use the LLD shipped with the Rust toolchain by default\n         linker: Some(\"rust-lld\".to_owned()),\n         lld_flavor: LldFlavor::Wasm,"}, {"sha": "b802bee25ae7a04ee301dc597e6e1c048694452e", "filename": "src/librustc_target/spec/wasm32_experimental_emscripten.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/52bd4f263b57faf987dc32d40642403e313e175a/src%2Flibrustc_target%2Fspec%2Fwasm32_experimental_emscripten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52bd4f263b57faf987dc32d40642403e313e175a/src%2Flibrustc_target%2Fspec%2Fwasm32_experimental_emscripten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fwasm32_experimental_emscripten.rs?ref=52bd4f263b57faf987dc32d40642403e313e175a", "patch": "@@ -24,6 +24,7 @@ pub fn target() -> Result<Target, String> {\n         is_like_emscripten: true,\n         max_atomic_width: Some(32),\n         post_link_args,\n+        limit_rdylib_exports: false,\n         target_family: Some(\"unix\".to_string()),\n         .. Default::default()\n     };"}, {"sha": "e0df36884bf5629f6325948002fbf61ea6224cf7", "filename": "src/librustc_target/spec/wasm32_unknown_emscripten.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/52bd4f263b57faf987dc32d40642403e313e175a/src%2Flibrustc_target%2Fspec%2Fwasm32_unknown_emscripten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52bd4f263b57faf987dc32d40642403e313e175a/src%2Flibrustc_target%2Fspec%2Fwasm32_unknown_emscripten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fwasm32_unknown_emscripten.rs?ref=52bd4f263b57faf987dc32d40642403e313e175a", "patch": "@@ -26,6 +26,7 @@ pub fn target() -> Result<Target, String> {\n         is_like_emscripten: true,\n         max_atomic_width: Some(32),\n         post_link_args,\n+        limit_rdylib_exports: false,\n         target_family: Some(\"unix\".to_string()),\n         codegen_backend: \"emscripten\".to_string(),\n         .. Default::default()"}]}