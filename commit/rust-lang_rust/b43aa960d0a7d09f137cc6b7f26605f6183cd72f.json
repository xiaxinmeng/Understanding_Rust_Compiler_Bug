{"sha": "b43aa960d0a7d09f137cc6b7f26605f6183cd72f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0M2FhOTYwZDBhN2QwOWYxMzdjYzZiN2YyNjYwNWY2MTgzY2Q3MmY=", "commit": {"author": {"name": "johanngan", "email": "johanngan.us@gmail.com", "date": "2021-01-10T07:18:23Z"}, "committer": {"name": "johanngan", "email": "johanngan.us@gmail.com", "date": "2021-01-10T07:18:23Z"}, "message": "Print failure message on all tests that should panic, but don't\n\nThis already happens with should_panic tests without an expected\nmessage. This commit fixes should_panic tests with an expected message\nto have the same behavior.", "tree": {"sha": "c9b3984ccc52f78dd164c9e91fcaaf8ea4ee3a79", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9b3984ccc52f78dd164c9e91fcaaf8ea4ee3a79"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b43aa960d0a7d09f137cc6b7f26605f6183cd72f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b43aa960d0a7d09f137cc6b7f26605f6183cd72f", "html_url": "https://github.com/rust-lang/rust/commit/b43aa960d0a7d09f137cc6b7f26605f6183cd72f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b43aa960d0a7d09f137cc6b7f26605f6183cd72f/comments", "author": {"login": "johanngan", "id": 26724430, "node_id": "MDQ6VXNlcjI2NzI0NDMw", "avatar_url": "https://avatars.githubusercontent.com/u/26724430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johanngan", "html_url": "https://github.com/johanngan", "followers_url": "https://api.github.com/users/johanngan/followers", "following_url": "https://api.github.com/users/johanngan/following{/other_user}", "gists_url": "https://api.github.com/users/johanngan/gists{/gist_id}", "starred_url": "https://api.github.com/users/johanngan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johanngan/subscriptions", "organizations_url": "https://api.github.com/users/johanngan/orgs", "repos_url": "https://api.github.com/users/johanngan/repos", "events_url": "https://api.github.com/users/johanngan/events{/privacy}", "received_events_url": "https://api.github.com/users/johanngan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "johanngan", "id": 26724430, "node_id": "MDQ6VXNlcjI2NzI0NDMw", "avatar_url": "https://avatars.githubusercontent.com/u/26724430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johanngan", "html_url": "https://github.com/johanngan", "followers_url": "https://api.github.com/users/johanngan/followers", "following_url": "https://api.github.com/users/johanngan/following{/other_user}", "gists_url": "https://api.github.com/users/johanngan/gists{/gist_id}", "starred_url": "https://api.github.com/users/johanngan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johanngan/subscriptions", "organizations_url": "https://api.github.com/users/johanngan/orgs", "repos_url": "https://api.github.com/users/johanngan/repos", "events_url": "https://api.github.com/users/johanngan/events{/privacy}", "received_events_url": "https://api.github.com/users/johanngan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cf205610e1310897f43b35713a42459e8b40c64", "url": "https://api.github.com/repos/rust-lang/rust/commits/7cf205610e1310897f43b35713a42459e8b40c64", "html_url": "https://github.com/rust-lang/rust/commit/7cf205610e1310897f43b35713a42459e8b40c64"}], "stats": {"total": 41, "additions": 25, "deletions": 16}, "files": [{"sha": "598fb670bb4bf678242921f42d7c966a6866aa3d", "filename": "library/test/src/test_result.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b43aa960d0a7d09f137cc6b7f26605f6183cd72f/library%2Ftest%2Fsrc%2Ftest_result.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43aa960d0a7d09f137cc6b7f26605f6183cd72f/library%2Ftest%2Fsrc%2Ftest_result.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Ftest_result.rs?ref=b43aa960d0a7d09f137cc6b7f26605f6183cd72f", "patch": "@@ -63,7 +63,7 @@ pub fn calc_result<'a>(\n                 ))\n             }\n         }\n-        (&ShouldPanic::Yes, Ok(())) => {\n+        (&ShouldPanic::Yes, Ok(())) | (&ShouldPanic::YesWithMessage(_), Ok(())) => {\n             TestResult::TrFailedMsg(\"test did not panic as expected\".to_string())\n         }\n         _ if desc.allow_fail => TestResult::TrAllowedFail,"}, {"sha": "a629829b885145f4af02fb64e5985a13eb1c6836", "filename": "library/test/src/tests.rs", "status": "modified", "additions": 24, "deletions": 15, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/b43aa960d0a7d09f137cc6b7f26605f6183cd72f/library%2Ftest%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43aa960d0a7d09f137cc6b7f26605f6183cd72f/library%2Ftest%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Ftests.rs?ref=b43aa960d0a7d09f137cc6b7f26605f6183cd72f", "patch": "@@ -228,21 +228,30 @@ fn test_should_panic_non_string_message_type() {\n #[test]\n #[cfg(not(target_os = \"emscripten\"))]\n fn test_should_panic_but_succeeds() {\n-    fn f() {}\n-    let desc = TestDescAndFn {\n-        desc: TestDesc {\n-            name: StaticTestName(\"whatever\"),\n-            ignore: false,\n-            should_panic: ShouldPanic::Yes,\n-            allow_fail: false,\n-            test_type: TestType::Unknown,\n-        },\n-        testfn: DynTestFn(Box::new(f)),\n-    };\n-    let (tx, rx) = channel();\n-    run_test(&TestOpts::new(), false, desc, RunStrategy::InProcess, tx, Concurrent::No);\n-    let result = rx.recv().unwrap().result;\n-    assert_eq!(result, TrFailedMsg(\"test did not panic as expected\".to_string()));\n+    let should_panic_variants = [ShouldPanic::Yes, ShouldPanic::YesWithMessage(\"error message\")];\n+\n+    for &should_panic in should_panic_variants.iter() {\n+        fn f() {}\n+        let desc = TestDescAndFn {\n+            desc: TestDesc {\n+                name: StaticTestName(\"whatever\"),\n+                ignore: false,\n+                should_panic,\n+                allow_fail: false,\n+                test_type: TestType::Unknown,\n+            },\n+            testfn: DynTestFn(Box::new(f)),\n+        };\n+        let (tx, rx) = channel();\n+        run_test(&TestOpts::new(), false, desc, RunStrategy::InProcess, tx, Concurrent::No);\n+        let result = rx.recv().unwrap().result;\n+        assert_eq!(\n+            result,\n+            TrFailedMsg(\"test did not panic as expected\".to_string()),\n+            \"should_panic == {:?}\",\n+            should_panic\n+        );\n+    }\n }\n \n fn report_time_test_template(report_time: bool) -> Option<TestExecTime> {"}]}