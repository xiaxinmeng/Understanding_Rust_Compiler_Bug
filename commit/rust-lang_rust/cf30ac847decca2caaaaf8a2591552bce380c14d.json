{"sha": "cf30ac847decca2caaaaf8a2591552bce380c14d", "node_id": "C_kwDOAAsO6NoAKGNmMzBhYzg0N2RlY2NhMmNhYWFhZjhhMjU5MTU1MmJjZTM4MGMxNGQ", "commit": {"author": {"name": "DeveloperC", "email": "DeveloperC@protonmail.com", "date": "2021-10-08T21:02:31Z"}, "committer": {"name": "DeveloperC", "email": "DeveloperC@protonmail.com", "date": "2022-03-14T00:35:41Z"}, "message": "refactor: VecDeques Iter fields to private\n\nMade the fields of VecDeque's Iter private by creating a Iter::new(...) function to create a new instance of Iter and migrating usage to use Iter::new(...).", "tree": {"sha": "3380f79c3f5de901e178329c9f700e876c00ecd7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3380f79c3f5de901e178329c9f700e876c00ecd7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf30ac847decca2caaaaf8a2591552bce380c14d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf30ac847decca2caaaaf8a2591552bce380c14d", "html_url": "https://github.com/rust-lang/rust/commit/cf30ac847decca2caaaaf8a2591552bce380c14d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf30ac847decca2caaaaf8a2591552bce380c14d/comments", "author": {"login": "DeveloperC286", "id": 65925405, "node_id": "MDQ6VXNlcjY1OTI1NDA1", "avatar_url": "https://avatars.githubusercontent.com/u/65925405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DeveloperC286", "html_url": "https://github.com/DeveloperC286", "followers_url": "https://api.github.com/users/DeveloperC286/followers", "following_url": "https://api.github.com/users/DeveloperC286/following{/other_user}", "gists_url": "https://api.github.com/users/DeveloperC286/gists{/gist_id}", "starred_url": "https://api.github.com/users/DeveloperC286/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DeveloperC286/subscriptions", "organizations_url": "https://api.github.com/users/DeveloperC286/orgs", "repos_url": "https://api.github.com/users/DeveloperC286/repos", "events_url": "https://api.github.com/users/DeveloperC286/events{/privacy}", "received_events_url": "https://api.github.com/users/DeveloperC286/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DeveloperC286", "id": 65925405, "node_id": "MDQ6VXNlcjY1OTI1NDA1", "avatar_url": "https://avatars.githubusercontent.com/u/65925405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DeveloperC286", "html_url": "https://github.com/DeveloperC286", "followers_url": "https://api.github.com/users/DeveloperC286/followers", "following_url": "https://api.github.com/users/DeveloperC286/following{/other_user}", "gists_url": "https://api.github.com/users/DeveloperC286/gists{/gist_id}", "starred_url": "https://api.github.com/users/DeveloperC286/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DeveloperC286/subscriptions", "organizations_url": "https://api.github.com/users/DeveloperC286/orgs", "repos_url": "https://api.github.com/users/DeveloperC286/repos", "events_url": "https://api.github.com/users/DeveloperC286/events{/privacy}", "received_events_url": "https://api.github.com/users/DeveloperC286/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e95b10ba4ac4564ed25f7eef143e3182c33b3902", "url": "https://api.github.com/repos/rust-lang/rust/commits/e95b10ba4ac4564ed25f7eef143e3182c33b3902", "html_url": "https://github.com/rust-lang/rust/commit/e95b10ba4ac4564ed25f7eef143e3182c33b3902"}], "stats": {"total": 33, "additions": 17, "deletions": 16}, "files": [{"sha": "5139db7f451a5bd2869900f6f28216eee2278ca5", "filename": "library/alloc/src/collections/vec_deque/iter.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/cf30ac847decca2caaaaf8a2591552bce380c14d/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf30ac847decca2caaaaf8a2591552bce380c14d/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fiter.rs?ref=cf30ac847decca2caaaaf8a2591552bce380c14d", "patch": "@@ -13,9 +13,15 @@ use super::{count, wrap_index, RingSlices};\n /// [`iter`]: super::VecDeque::iter\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct Iter<'a, T: 'a> {\n-    pub(crate) ring: &'a [MaybeUninit<T>],\n-    pub(crate) tail: usize,\n-    pub(crate) head: usize,\n+    ring: &'a [MaybeUninit<T>],\n+    tail: usize,\n+    head: usize,\n+}\n+\n+impl<'a, T> Iter<'a, T> {\n+    pub(super) fn new(ring: &'a [MaybeUninit<T>], tail: usize, head: usize) -> Self {\n+        Iter { ring, tail, head }\n+    }\n }\n \n #[stable(feature = \"collection_debug\", since = \"1.17.0\")]"}, {"sha": "e1e0276fc8d86e06c60ee630b450a2e9b3dddad1", "filename": "library/alloc/src/collections/vec_deque/mod.rs", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/cf30ac847decca2caaaaf8a2591552bce380c14d/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf30ac847decca2caaaaf8a2591552bce380c14d/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs?ref=cf30ac847decca2caaaaf8a2591552bce380c14d", "patch": "@@ -1009,7 +1009,7 @@ impl<T, A: Allocator> VecDeque<T, A> {\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn iter(&self) -> Iter<'_, T> {\n-        Iter { tail: self.tail, head: self.head, ring: unsafe { self.buffer_as_slice() } }\n+        Iter::new(unsafe { self.buffer_as_slice() }, self.tail, self.head)\n     }\n \n     /// Returns a front-to-back iterator that returns mutable references.\n@@ -1188,12 +1188,8 @@ impl<T, A: Allocator> VecDeque<T, A> {\n         R: RangeBounds<usize>,\n     {\n         let (tail, head) = self.range_tail_head(range);\n-        Iter {\n-            tail,\n-            head,\n-            // The shared reference we have in &self is maintained in the '_ of Iter.\n-            ring: unsafe { self.buffer_as_slice() },\n-        }\n+        // The shared reference we have in &self is maintained in the '_ of Iter.\n+        Iter::new(unsafe { self.buffer_as_slice() }, tail, head)\n     }\n \n     /// Creates an iterator that covers the specified mutable range in the deque.\n@@ -1309,16 +1305,15 @@ impl<T, A: Allocator> VecDeque<T, A> {\n         self.head = drain_tail;\n \n         let deque = NonNull::from(&mut *self);\n-        let iter = Iter {\n-            tail: drain_tail,\n-            head: drain_head,\n+        unsafe {\n             // Crucially, we only create shared references from `self` here and read from\n             // it.  We do not write to `self` nor reborrow to a mutable reference.\n             // Hence the raw pointer we created above, for `deque`, remains valid.\n-            ring: unsafe { self.buffer_as_slice() },\n-        };\n+            let ring = self.buffer_as_slice();\n+            let iter = Iter::new(ring, drain_tail, drain_head);\n \n-        unsafe { Drain::new(drain_head, head, iter, deque) }\n+            Drain::new(drain_head, head, iter, deque)\n+        }\n     }\n \n     /// Clears the deque, removing all values."}]}