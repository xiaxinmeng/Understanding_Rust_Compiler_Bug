{"sha": "f809e2269779b5518e648cf63d9538399b00298e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4MDllMjI2OTc3OWI1NTE4ZTY0OGNmNjNkOTUzODM5OWIwMDI5OGU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-21T01:06:47Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-21T01:06:47Z"}, "message": "Represent unique creation as a unop in the AST instead of its own expr\n\nLike the box unop.\n\nIssue #409", "tree": {"sha": "c6cab9f354a64310b5274fb1e3e0aca9506fc5a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6cab9f354a64310b5274fb1e3e0aca9506fc5a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f809e2269779b5518e648cf63d9538399b00298e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f809e2269779b5518e648cf63d9538399b00298e", "html_url": "https://github.com/rust-lang/rust/commit/f809e2269779b5518e648cf63d9538399b00298e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f809e2269779b5518e648cf63d9538399b00298e/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ae251789ccd0a647e5abfc8085a8bd42359de65", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ae251789ccd0a647e5abfc8085a8bd42359de65", "html_url": "https://github.com/rust-lang/rust/commit/7ae251789ccd0a647e5abfc8085a8bd42359de65"}], "stats": {"total": 41, "additions": 21, "deletions": 20}, "files": [{"sha": "7d190ad89b1ec45438a4946199c4bbc182fb89f6", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f809e2269779b5518e648cf63d9538399b00298e/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f809e2269779b5518e648cf63d9538399b00298e/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=f809e2269779b5518e648cf63d9538399b00298e", "patch": "@@ -2183,6 +2183,9 @@ fn trans_unary(cx: @block_ctxt, op: ast::unop, e: @ast::expr,\n         let bcx = move_val_if_temp(sub.bcx, INIT, body, lv, e_ty);\n         ret rslt(bcx, sub.box);\n       }\n+      ast::uniq(_) {\n+        ret trans_uniq(cx, e, id);\n+      }\n       ast::deref. {\n         bcx_ccx(cx).sess.bug(\"deref expressions should have been \\\n                                  translated using trans_lval(), not \\\n@@ -4246,9 +4249,6 @@ fn trans_expr_out(cx: @block_ctxt, e: @ast::expr, output: out_method) ->\n         CondBr(cx, cond, then_cx.llbb, else_cx.llbb);\n         ret rslt(join_branches(cx, [check_res, els]), C_nil());\n       }\n-      ast::expr_uniq(contents) {\n-        ret trans_uniq(cx, contents, e.id);\n-      }\n       ast::expr_break. { ret trans_break(e.span, cx); }\n       ast::expr_cont. { ret trans_cont(e.span, cx); }\n       ast::expr_ret(ex) { ret trans_ret(cx, ex); }"}, {"sha": "9f2f13074783a9c75b900952f27d0732c6715a59", "filename": "src/comp/middle/tstate/pre_post_conditions.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f809e2269779b5518e648cf63d9538399b00298e/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f809e2269779b5518e648cf63d9538399b00298e/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs?ref=f809e2269779b5518e648cf63d9538399b00298e", "patch": "@@ -559,7 +559,6 @@ fn find_pre_post_expr(fcx: fn_ctxt, e: @expr) {\n           none. { clear_pp(expr_pp(fcx.ccx, e)); }\n         }\n       }\n-      expr_uniq(sub) { find_pre_post_exprs(fcx, [sub], e.id); }\n     }\n }\n "}, {"sha": "9997f6ad504c89d7698e3d668c5df63e5b94dde9", "filename": "src/comp/middle/tstate/states.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f809e2269779b5518e648cf63d9538399b00298e/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f809e2269779b5518e648cf63d9538399b00298e/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs?ref=f809e2269779b5518e648cf63d9538399b00298e", "patch": "@@ -608,7 +608,6 @@ fn find_pre_post_state_expr(fcx: fn_ctxt, pres: prestate, e: @expr) -> bool {\n           none. { ret pure_exp(fcx.ccx, e.id, pres); }\n         }\n       }\n-      expr_uniq(_) { ret pure_exp(fcx.ccx, e.id, pres); }\n     }\n }\n "}, {"sha": "c6d24802ecd90c6ec0362596a256193a16d6b316", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f809e2269779b5518e648cf63d9538399b00298e/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f809e2269779b5518e648cf63d9538399b00298e/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=f809e2269779b5518e648cf63d9538399b00298e", "patch": "@@ -1719,6 +1719,9 @@ fn check_expr_with_unifier(fcx: @fn_ctxt, expr: @ast::expr, unify: unifier,\n         let oper_t = expr_ty(tcx, oper);\n         alt unop {\n           ast::box(mut) { oper_t = ty::mk_box(tcx, {ty: oper_t, mut: mut}); }\n+          ast::uniq(mut) {\n+            oper_t = ty::mk_uniq(tcx, oper_t);\n+          }\n           ast::deref. {\n             alt structure_of(fcx, expr.span, oper_t) {\n               ty::ty_box(inner) { oper_t = inner.ty; }\n@@ -2349,11 +2352,6 @@ fn check_expr_with_unifier(fcx: @fn_ctxt, expr: @ast::expr, unify: unifier,\n         // Now remove the info from the stack.\n         vec::pop::<obj_info>(fcx.ccx.obj_infos);\n       }\n-      ast::expr_uniq(x) {\n-        let t = next_ty_var(fcx);\n-        check_expr_with(fcx, x, t);\n-        write::ty_only_fixup(fcx, id, ty::mk_uniq(tcx, t));\n-      }\n       _ { tcx.sess.unimpl(\"expr type in typeck::check_expr\"); }\n     }\n     if bot { write::ty_only_fixup(fcx, expr.id, ty::mk_bot(tcx)); }"}, {"sha": "ad6aacb1549db507b855f103b870155e2299a069", "filename": "src/comp/syntax/ast.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f809e2269779b5518e648cf63d9538399b00298e/src%2Fcomp%2Fsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f809e2269779b5518e648cf63d9538399b00298e/src%2Fcomp%2Fsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fast.rs?ref=f809e2269779b5518e648cf63d9538399b00298e", "patch": "@@ -124,7 +124,11 @@ tag binop {\n     gt;\n }\n \n-tag unop { box(mutability); deref; not; neg; }\n+tag unop {\n+    box(mutability);\n+    uniq(mutability);\n+    deref; not; neg;\n+}\n \n tag mode { by_ref; by_mut_ref; by_move; }\n \n@@ -215,7 +219,6 @@ tag expr_ {\n     expr_if_check(@expr, blk, option::t<@expr>);\n     expr_anon_obj(anon_obj);\n     expr_mac(mac);\n-    expr_uniq(@expr);\n }\n \n /*"}, {"sha": "8350ce9a8bbde3b063d58c29ac8bd7f4ca9c3eb5", "filename": "src/comp/syntax/ast_util.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f809e2269779b5518e648cf63d9538399b00298e/src%2Fcomp%2Fsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f809e2269779b5518e648cf63d9538399b00298e/src%2Fcomp%2Fsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fast_util.rs?ref=f809e2269779b5518e648cf63d9538399b00298e", "patch": "@@ -110,6 +110,7 @@ pure fn lazy_binop(b: binop) -> bool {\n fn unop_to_str(op: unop) -> str {\n     alt op {\n       box(mt) { if mt == mut { ret \"@mutable \"; } ret \"@\"; }\n+      uniq(mt) { if mt == mut { ret \"~mutable \"; } ret \"~\"; }\n       deref. { ret \"*\"; }\n       not. { ret \"!\"; }\n       neg. { ret \"-\"; }"}, {"sha": "c53176e24fb992ff791fe20ee53f163391ab505f", "filename": "src/comp/syntax/fold.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f809e2269779b5518e648cf63d9538399b00298e/src%2Fcomp%2Fsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f809e2269779b5518e648cf63d9538399b00298e/src%2Fcomp%2Fsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Ffold.rs?ref=f809e2269779b5518e648cf63d9538399b00298e", "patch": "@@ -424,7 +424,6 @@ fn noop_fold_expr(e: expr_, fld: ast_fold) -> expr_ {\n           }\n           expr_anon_obj(ao) { expr_anon_obj(fold_anon_obj(ao)) }\n           expr_mac(mac) { expr_mac(fold_mac(mac)) }\n-          expr_uniq(e) { expr_uniq(fld.fold_expr(e)) }\n         }\n }\n "}, {"sha": "6869dc6501d07ec0b66d92660f4ec94225000e13", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f809e2269779b5518e648cf63d9538399b00298e/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f809e2269779b5518e648cf63d9538399b00298e/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=f809e2269779b5518e648cf63d9538399b00298e", "patch": "@@ -886,9 +886,6 @@ fn parse_bottom_expr(p: parser) -> @ast::expr {\n     } else if p.peek() == token::ELLIPSIS {\n         p.bump();\n         ret mk_mac_expr(p, lo, p.get_hi_pos(), ast::mac_ellipsis);\n-    } else if p.peek() == token::TILDE {\n-        p.bump();\n-        ex = ast::expr_uniq(parse_expr(p));\n     } else if eat_word(p, \"obj\") {\n         // Anonymous object\n \n@@ -1145,6 +1142,13 @@ fn parse_prefix_expr(p: parser) -> @ast::expr {\n         hi = e.span.hi;\n         ex = ast::expr_unary(ast::box(m), e);\n       }\n+      token::TILDE. {\n+        p.bump();\n+        let m = parse_mutability(p);\n+        let e = parse_prefix_expr(p);\n+        hi = e.span.hi;\n+        ex = ast::expr_unary(ast::uniq(m), e);\n+      }\n       _ { ret parse_dot_or_call_expr(p); }\n     }\n     ret mk_expr(p, lo, hi, ex);"}, {"sha": "48031a295db96d1a2e3eb09c2a1d9b7ff44ff4b1", "filename": "src/comp/syntax/print/pprust.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f809e2269779b5518e648cf63d9538399b00298e/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f809e2269779b5518e648cf63d9538399b00298e/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs?ref=f809e2269779b5518e648cf63d9538399b00298e", "patch": "@@ -988,7 +988,6 @@ fn print_expr(s: ps, expr: @ast::expr) {\n         }\n         bclose(s, expr.span);\n       }\n-      ast::expr_uniq(expr) { word(s.s, \"~\"); print_expr(s, expr); }\n     }\n     s.ann.post(ann_node);\n     end(s);\n@@ -1001,7 +1000,7 @@ fn print_expr_parens_if_not_bot(s: ps, ex: @ast::expr) {\n       ast::expr_ternary(_, _, _) | ast::expr_move(_, _) |\n       ast::expr_copy(_) | ast::expr_assign(_, _) | ast::expr_be(_) |\n       ast::expr_assign_op(_, _, _) | ast::expr_swap(_, _) |\n-      ast::expr_log(_, _) | ast::expr_assert(_) | ast::expr_uniq(_) |\n+      ast::expr_log(_, _) | ast::expr_assert(_) |\n       ast::expr_check(_, _) { true }\n       _ { false }\n     };\n@@ -1658,7 +1657,7 @@ fn ends_in_lit_int(ex: @ast::expr) -> bool {\n       ast::expr_ternary(_, _, sub) | ast::expr_move(_, sub) |\n       ast::expr_copy(sub) | ast::expr_assign(_, sub) | ast::expr_be(sub) |\n       ast::expr_assign_op(_, _, sub) | ast::expr_swap(_, sub) |\n-      ast::expr_log(_, sub) | ast::expr_assert(sub) | ast::expr_uniq(sub) |\n+      ast::expr_log(_, sub) | ast::expr_assert(sub) |\n       ast::expr_check(_, sub) { ends_in_lit_int(sub) }\n       ast::expr_fail(osub) | ast::expr_ret(osub) | ast::expr_put(osub) {\n         alt osub {"}, {"sha": "387434edf156f147096979f57dafd4261a442bb2", "filename": "src/comp/syntax/visit.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f809e2269779b5518e648cf63d9538399b00298e/src%2Fcomp%2Fsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f809e2269779b5518e648cf63d9538399b00298e/src%2Fcomp%2Fsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fvisit.rs?ref=f809e2269779b5518e648cf63d9538399b00298e", "patch": "@@ -325,7 +325,6 @@ fn visit_expr<E>(ex: @expr, e: E, v: vt<E>) {\n         }\n       }\n       expr_mac(mac) { visit_mac(mac, e, v); }\n-      expr_uniq(x) { v.visit_expr(x, e, v); }\n     }\n }\n "}]}