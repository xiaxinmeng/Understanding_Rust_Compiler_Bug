{"sha": "d08e816333281b0c0fb5a99c2c15d8084312e41a", "node_id": "C_kwDOAAsO6NoAKGQwOGU4MTYzMzMyODFiMGMwZmI1YTk5YzJjMTVkODA4NDMxMmU0MWE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-01-29T13:04:51Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-01-29T13:04:51Z"}, "message": "Auto merge of #92312 - BGR360:needs-test, r=Mark-Simulacrum\n\nAdd tests for three old ICEs\n\nCloses #84044\nCloses #91594\nCloses #89066", "tree": {"sha": "69c56dd7cd2e809ab645d7f1e6500ea0d8367c26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69c56dd7cd2e809ab645d7f1e6500ea0d8367c26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d08e816333281b0c0fb5a99c2c15d8084312e41a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d08e816333281b0c0fb5a99c2c15d8084312e41a", "html_url": "https://github.com/rust-lang/rust/commit/d08e816333281b0c0fb5a99c2c15d8084312e41a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d08e816333281b0c0fb5a99c2c15d8084312e41a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca43894e0e350af2245ba7d9ad8b6e31e0d4786d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca43894e0e350af2245ba7d9ad8b6e31e0d4786d", "html_url": "https://github.com/rust-lang/rust/commit/ca43894e0e350af2245ba7d9ad8b6e31e0d4786d"}, {"sha": "3f849a8b1edb11762194ef6f0f153a0e672c9112", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f849a8b1edb11762194ef6f0f153a0e672c9112", "html_url": "https://github.com/rust-lang/rust/commit/3f849a8b1edb11762194ef6f0f153a0e672c9112"}], "stats": {"total": 118, "additions": 118, "deletions": 0}, "files": [{"sha": "aed7750f1b9dfdaa2ccce9f6464edbc0cdd5b88c", "filename": "src/test/ui/closures/issue-84044-drop-non-mut.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d08e816333281b0c0fb5a99c2c15d8084312e41a/src%2Ftest%2Fui%2Fclosures%2Fissue-84044-drop-non-mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d08e816333281b0c0fb5a99c2c15d8084312e41a/src%2Ftest%2Fui%2Fclosures%2Fissue-84044-drop-non-mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fissue-84044-drop-non-mut.rs?ref=d08e816333281b0c0fb5a99c2c15d8084312e41a", "patch": "@@ -0,0 +1,6 @@\n+// #84044: This used to ICE.\n+\n+fn main() {\n+    let f = || {};\n+    drop(&mut f); //~ ERROR cannot borrow `f` as mutable, as it is not declared as mutable\n+}"}, {"sha": "c0bfad263f1785723fcf547ab3d1923a51904a90", "filename": "src/test/ui/closures/issue-84044-drop-non-mut.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d08e816333281b0c0fb5a99c2c15d8084312e41a/src%2Ftest%2Fui%2Fclosures%2Fissue-84044-drop-non-mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d08e816333281b0c0fb5a99c2c15d8084312e41a/src%2Ftest%2Fui%2Fclosures%2Fissue-84044-drop-non-mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fissue-84044-drop-non-mut.stderr?ref=d08e816333281b0c0fb5a99c2c15d8084312e41a", "patch": "@@ -0,0 +1,11 @@\n+error[E0596]: cannot borrow `f` as mutable, as it is not declared as mutable\n+  --> $DIR/issue-84044-drop-non-mut.rs:5:10\n+   |\n+LL |     let f = || {};\n+   |         - help: consider changing this to be mutable: `mut f`\n+LL |     drop(&mut f);\n+   |          ^^^^^^ cannot borrow as mutable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0596`."}, {"sha": "2873f5237d4a1022871781aeb1662a5bd487cfd8", "filename": "src/test/ui/save-analysis/issue-89066.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/d08e816333281b0c0fb5a99c2c15d8084312e41a/src%2Ftest%2Fui%2Fsave-analysis%2Fissue-89066.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d08e816333281b0c0fb5a99c2c15d8084312e41a/src%2Ftest%2Fui%2Fsave-analysis%2Fissue-89066.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsave-analysis%2Fissue-89066.rs?ref=d08e816333281b0c0fb5a99c2c15d8084312e41a", "patch": "@@ -0,0 +1,28 @@\n+// compile-flags: -Zsave-analysis\n+\n+// Check that this does not ICE.\n+// Stolen from src/test/ui/const-generics/generic_arg_infer/infer-arg-test.rs\n+\n+#![feature(generic_arg_infer)]\n+\n+struct All<'a, T, const N: usize> {\n+  v: &'a T,\n+}\n+\n+struct BadInfer<_>;\n+//~^ ERROR expected identifier\n+//~| ERROR parameter `_` is never used\n+\n+fn all_fn<'a, T, const N: usize>() {}\n+\n+fn bad_infer_fn<_>() {}\n+//~^ ERROR expected identifier\n+\n+\n+fn main() {\n+  let a: All<_, _, _>;\n+  //~^ ERROR this struct takes 2 generic arguments but 3 generic arguments were supplied\n+  all_fn();\n+  let v: [u8; _];\n+  let v: [u8; 10] = [0; _];\n+}"}, {"sha": "a3ff1c02b2a0480e98580a980837659b24c9af6c", "filename": "src/test/ui/save-analysis/issue-89066.stderr", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/d08e816333281b0c0fb5a99c2c15d8084312e41a/src%2Ftest%2Fui%2Fsave-analysis%2Fissue-89066.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d08e816333281b0c0fb5a99c2c15d8084312e41a/src%2Ftest%2Fui%2Fsave-analysis%2Fissue-89066.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsave-analysis%2Fissue-89066.stderr?ref=d08e816333281b0c0fb5a99c2c15d8084312e41a", "patch": "@@ -0,0 +1,39 @@\n+error: expected identifier, found reserved identifier `_`\n+  --> $DIR/issue-89066.rs:12:17\n+   |\n+LL | struct BadInfer<_>;\n+   |                 ^ expected identifier, found reserved identifier\n+\n+error: expected identifier, found reserved identifier `_`\n+  --> $DIR/issue-89066.rs:18:17\n+   |\n+LL | fn bad_infer_fn<_>() {}\n+   |                 ^ expected identifier, found reserved identifier\n+\n+error[E0392]: parameter `_` is never used\n+  --> $DIR/issue-89066.rs:12:17\n+   |\n+LL | struct BadInfer<_>;\n+   |                 ^ unused parameter\n+   |\n+   = help: consider removing `_`, referring to it in a field, or using a marker such as `PhantomData`\n+   = help: if you intended `_` to be a const parameter, use `const _: usize` instead\n+\n+error[E0107]: this struct takes 2 generic arguments but 3 generic arguments were supplied\n+  --> $DIR/issue-89066.rs:23:10\n+   |\n+LL |   let a: All<_, _, _>;\n+   |          ^^^       - help: remove this generic argument\n+   |          |\n+   |          expected 2 generic arguments\n+   |\n+note: struct defined here, with 2 generic parameters: `T`, `N`\n+  --> $DIR/issue-89066.rs:8:8\n+   |\n+LL | struct All<'a, T, const N: usize> {\n+   |        ^^^     -        -\n+\n+error: aborting due to 4 previous errors\n+\n+Some errors have detailed explanations: E0107, E0392.\n+For more information about an error, try `rustc --explain E0107`."}, {"sha": "930f7f0c6ad6b363f8c05f93e25910086a07d1eb", "filename": "src/test/ui/traits/issue-91594.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/d08e816333281b0c0fb5a99c2c15d8084312e41a/src%2Ftest%2Fui%2Ftraits%2Fissue-91594.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d08e816333281b0c0fb5a99c2c15d8084312e41a/src%2Ftest%2Fui%2Ftraits%2Fissue-91594.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-91594.rs?ref=d08e816333281b0c0fb5a99c2c15d8084312e41a", "patch": "@@ -0,0 +1,17 @@\n+// #91594: This used to ICE.\n+\n+trait Component<M> {\n+    type Interface;\n+}\n+trait HasComponent<I> {}\n+\n+struct Foo;\n+\n+impl HasComponent<<Foo as Component<Foo>>::Interface> for Foo {}\n+//~^ ERROR the trait bound `Foo: HasComponent<()>` is not satisfied\n+\n+impl<M: HasComponent<()>> Component<M> for Foo {\n+    type Interface = u8;\n+}\n+\n+fn main() {}"}, {"sha": "10298a0c7037a04ded9b0a37ccaba579c46d2192", "filename": "src/test/ui/traits/issue-91594.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/d08e816333281b0c0fb5a99c2c15d8084312e41a/src%2Ftest%2Fui%2Ftraits%2Fissue-91594.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d08e816333281b0c0fb5a99c2c15d8084312e41a/src%2Ftest%2Fui%2Ftraits%2Fissue-91594.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-91594.stderr?ref=d08e816333281b0c0fb5a99c2c15d8084312e41a", "patch": "@@ -0,0 +1,17 @@\n+error[E0277]: the trait bound `Foo: HasComponent<()>` is not satisfied\n+  --> $DIR/issue-91594.rs:10:6\n+   |\n+LL | impl HasComponent<<Foo as Component<Foo>>::Interface> for Foo {}\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `HasComponent<()>` is not implemented for `Foo`\n+   |\n+   = help: the following implementations were found:\n+             <Foo as HasComponent<<Foo as Component<Foo>>::Interface>>\n+note: required because of the requirements on the impl of `Component<Foo>` for `Foo`\n+  --> $DIR/issue-91594.rs:13:27\n+   |\n+LL | impl<M: HasComponent<()>> Component<M> for Foo {\n+   |                           ^^^^^^^^^^^^     ^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}]}