{"sha": "56ab485fbe61add87ac8febea421e2a576edca26", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2YWI0ODVmYmU2MWFkZDg3YWM4ZmViZWE0MjFlMmE1NzZlZGNhMjY=", "commit": {"author": {"name": "Andreas Jonson", "email": "andjo403@users.noreply.github.com", "date": "2019-08-27T06:07:56Z"}, "committer": {"name": "Andreas Jonson", "email": "andjo403@users.noreply.github.com", "date": "2019-08-29T20:23:05Z"}, "message": "support rustdoc test from stdin to rustc", "tree": {"sha": "5c026b90c896931c2613e4dbbc4e7c737799f145", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c026b90c896931c2613e4dbbc4e7c737799f145"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56ab485fbe61add87ac8febea421e2a576edca26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56ab485fbe61add87ac8febea421e2a576edca26", "html_url": "https://github.com/rust-lang/rust/commit/56ab485fbe61add87ac8febea421e2a576edca26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56ab485fbe61add87ac8febea421e2a576edca26/comments", "author": {"login": "andjo403", "id": 844398, "node_id": "MDQ6VXNlcjg0NDM5OA==", "avatar_url": "https://avatars.githubusercontent.com/u/844398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andjo403", "html_url": "https://github.com/andjo403", "followers_url": "https://api.github.com/users/andjo403/followers", "following_url": "https://api.github.com/users/andjo403/following{/other_user}", "gists_url": "https://api.github.com/users/andjo403/gists{/gist_id}", "starred_url": "https://api.github.com/users/andjo403/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andjo403/subscriptions", "organizations_url": "https://api.github.com/users/andjo403/orgs", "repos_url": "https://api.github.com/users/andjo403/repos", "events_url": "https://api.github.com/users/andjo403/events{/privacy}", "received_events_url": "https://api.github.com/users/andjo403/received_events", "type": "User", "site_admin": false}, "committer": {"login": "andjo403", "id": 844398, "node_id": "MDQ6VXNlcjg0NDM5OA==", "avatar_url": "https://avatars.githubusercontent.com/u/844398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andjo403", "html_url": "https://github.com/andjo403", "followers_url": "https://api.github.com/users/andjo403/followers", "following_url": "https://api.github.com/users/andjo403/following{/other_user}", "gists_url": "https://api.github.com/users/andjo403/gists{/gist_id}", "starred_url": "https://api.github.com/users/andjo403/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andjo403/subscriptions", "organizations_url": "https://api.github.com/users/andjo403/orgs", "repos_url": "https://api.github.com/users/andjo403/repos", "events_url": "https://api.github.com/users/andjo403/events{/privacy}", "received_events_url": "https://api.github.com/users/andjo403/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fbdf1d2a71c89a731ed15d93af7abffa80176834", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbdf1d2a71c89a731ed15d93af7abffa80176834", "html_url": "https://github.com/rust-lang/rust/commit/fbdf1d2a71c89a731ed15d93af7abffa80176834"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "885e2fea26a10ec9e54eea42e092989f0ceb47a7", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/56ab485fbe61add87ac8febea421e2a576edca26/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56ab485fbe61add87ac8febea421e2a576edca26/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=56ab485fbe61add87ac8febea421e2a576edca26", "patch": "@@ -439,6 +439,15 @@ fn make_input(free_matches: &[String]) -> Option<(Input, Option<PathBuf>, Option\n             } else {\n                 None\n             };\n+            if let Ok(path) = env::var(\"UNSTABLE_RUSTDOC_TEST_PATH\") {\n+                let line = env::var(\"UNSTABLE_RUSTDOC_TEST_LINE\").\n+                            expect(\"when UNSTABLE_RUSTDOC_TEST_PATH is set \\\n+                                    UNSTABLE_RUSTDOC_TEST_LINE also needs to be set\");\n+                let line = isize::from_str_radix(&line, 10).\n+                            expect(\"UNSTABLE_RUSTDOC_TEST_LINE needs to be an number\");\n+                let file_name = FileName::doc_test_source_code(PathBuf::from(path), line);\n+                return Some((Input::Str { name: file_name, input: src }, None, err));\n+            }\n             Some((Input::Str { name: FileName::anon_source_code(&src), input: src },\n                   None, err))\n         } else {"}]}