{"sha": "bf7d7ae7fa2fca33dbe0becebbc75d198321c0a7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmN2Q3YWU3ZmEyZmNhMzNkYmUwYmVjZWJiYzc1ZDE5ODMyMWMwYTc=", "commit": {"author": {"name": "bluss", "email": "bluss@users.noreply.github.com", "date": "2016-12-22T05:27:31Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2016-12-22T05:27:31Z"}, "message": "use &str instead of String", "tree": {"sha": "18cbf225d0e5f09a33928ef2e40c2f40ad03a15d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18cbf225d0e5f09a33928ef2e40c2f40ad03a15d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf7d7ae7fa2fca33dbe0becebbc75d198321c0a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf7d7ae7fa2fca33dbe0becebbc75d198321c0a7", "html_url": "https://github.com/rust-lang/rust/commit/bf7d7ae7fa2fca33dbe0becebbc75d198321c0a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf7d7ae7fa2fca33dbe0becebbc75d198321c0a7/comments", "author": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08aa825eb86f762638ffb401c0387590ec13d20e", "url": "https://api.github.com/repos/rust-lang/rust/commits/08aa825eb86f762638ffb401c0387590ec13d20e", "html_url": "https://github.com/rust-lang/rust/commit/08aa825eb86f762638ffb401c0387590ec13d20e"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "5b8b2ecf95d3950ee4c4acb91c9136e15655a7e8", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bf7d7ae7fa2fca33dbe0becebbc75d198321c0a7/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf7d7ae7fa2fca33dbe0becebbc75d198321c0a7/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=bf7d7ae7fa2fca33dbe0becebbc75d198321c0a7", "patch": "@@ -2205,8 +2205,8 @@ impl Path {\n         }\n     }\n \n-    pub fn last_name(&self) -> String {\n-        self.segments.last().unwrap().name.clone()\n+    pub fn last_name(&self) -> &str {\n+        self.segments.last().unwrap().name\n     }\n }\n "}, {"sha": "5839c46d75d2a6b895e24ba6920580629091e337", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/bf7d7ae7fa2fca33dbe0becebbc75d198321c0a7/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf7d7ae7fa2fca33dbe0becebbc75d198321c0a7/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=bf7d7ae7fa2fca33dbe0becebbc75d198321c0a7", "patch": "@@ -2110,23 +2110,22 @@ fn item_trait(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,\n         <h2 id='implementors'>Implementors</h2>\n         <ul class='item-list' id='implementors-list'>\n     \")?;\n-    let mut implementor_count: FxHashMap<String, usize> = FxHashMap();\n-    for (_, implementors) in cache.implementors.iter() {\n+    if let Some(implementors) = cache.implementors.get(&it.def_id) {\n+        let mut implementor_count: FxHashMap<&str, usize> = FxHashMap();\n         for implementor in implementors {\n             if let clean::Type::ResolvedPath {ref path, ..} = implementor.impl_.for_ {\n                 *implementor_count.entry(path.last_name()).or_insert(0) += 1;\n             }\n         }\n-    }\n-    if let Some(implementors) = cache.implementors.get(&it.def_id) {\n-        for implementor in implementors.iter() {\n+\n+        for implementor in implementors {\n             write!(w, \"<li><code>\")?;\n             // If there's already another implementor that has the same abbridged name, use the\n             // full path, for example in `std::iter::ExactSizeIterator`\n             let dissambiguate = if let clean::Type::ResolvedPath {\n                 ref path, ..\n             } = implementor.impl_.for_ {\n-                *implementor_count.get(&path.last_name()).unwrap_or(&0) > 1\n+                implementor_count[path.last_name()] > 1\n             } else {\n                 false\n             };"}]}