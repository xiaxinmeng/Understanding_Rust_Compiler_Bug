{"sha": "b01550a7185574a7b97699aaf39e1a9cb6e60f72", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwMTU1MGE3MTg1NTc0YTdiOTc2OTlhYWYzOWUxYTljYjZlNjBmNzI=", "commit": {"author": {"name": "Basile Desloges", "email": "basile.desloges@gmail.com", "date": "2018-08-31T17:27:11Z"}, "committer": {"name": "Basile Desloges", "email": "basile.desloges@gmail.com", "date": "2018-09-01T10:58:18Z"}, "message": "Update tests", "tree": {"sha": "a3ec8d4a7f4a28482315a2aca896fbaa1f291461", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3ec8d4a7f4a28482315a2aca896fbaa1f291461"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b01550a7185574a7b97699aaf39e1a9cb6e60f72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b01550a7185574a7b97699aaf39e1a9cb6e60f72", "html_url": "https://github.com/rust-lang/rust/commit/b01550a7185574a7b97699aaf39e1a9cb6e60f72", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b01550a7185574a7b97699aaf39e1a9cb6e60f72/comments", "author": {"login": "zilbuz", "id": 434964, "node_id": "MDQ6VXNlcjQzNDk2NA==", "avatar_url": "https://avatars.githubusercontent.com/u/434964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zilbuz", "html_url": "https://github.com/zilbuz", "followers_url": "https://api.github.com/users/zilbuz/followers", "following_url": "https://api.github.com/users/zilbuz/following{/other_user}", "gists_url": "https://api.github.com/users/zilbuz/gists{/gist_id}", "starred_url": "https://api.github.com/users/zilbuz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zilbuz/subscriptions", "organizations_url": "https://api.github.com/users/zilbuz/orgs", "repos_url": "https://api.github.com/users/zilbuz/repos", "events_url": "https://api.github.com/users/zilbuz/events{/privacy}", "received_events_url": "https://api.github.com/users/zilbuz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zilbuz", "id": 434964, "node_id": "MDQ6VXNlcjQzNDk2NA==", "avatar_url": "https://avatars.githubusercontent.com/u/434964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zilbuz", "html_url": "https://github.com/zilbuz", "followers_url": "https://api.github.com/users/zilbuz/followers", "following_url": "https://api.github.com/users/zilbuz/following{/other_user}", "gists_url": "https://api.github.com/users/zilbuz/gists{/gist_id}", "starred_url": "https://api.github.com/users/zilbuz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zilbuz/subscriptions", "organizations_url": "https://api.github.com/users/zilbuz/orgs", "repos_url": "https://api.github.com/users/zilbuz/repos", "events_url": "https://api.github.com/users/zilbuz/events{/privacy}", "received_events_url": "https://api.github.com/users/zilbuz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e27bae09ca4947ea20520ba7a7f1737559f8dd0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e27bae09ca4947ea20520ba7a7f1737559f8dd0f", "html_url": "https://github.com/rust-lang/rust/commit/e27bae09ca4947ea20520ba7a7f1737559f8dd0f"}], "stats": {"total": 2211, "additions": 140, "deletions": 2071}, "files": [{"sha": "674d85d95911260ccb9e87fe9a821424733c1bb5", "filename": "src/test/ui/associated-types/associated-types-project-from-hrtb-in-fn-body.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-project-from-hrtb-in-fn-body.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-project-from-hrtb-in-fn-body.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-project-from-hrtb-in-fn-body.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/associated-types-project-from-hrtb-in-fn-body.rs:32:12\n-   |\n-LL |     let z: I::A = if cond { x } else { y };\n-   |            ^^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/associated-types-project-from-hrtb-in-fn-body.rs:32:29\n    |"}, {"sha": "b61ea27ebe19b9ab4eb664552397f01723720669", "filename": "src/test/ui/associated-types/cache/project-fn-ret-contravariant.krisskross.nll.stderr", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-contravariant.krisskross.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-contravariant.krisskross.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-contravariant.krisskross.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,15 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/project-fn-ret-contravariant.rs:53:16\n-   |\n-LL |    let a = bar(foo, y);\n-   |                ^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/project-fn-ret-contravariant.rs:54:16\n-   |\n-LL |    let b = bar(foo, x);\n-   |                ^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/project-fn-ret-contravariant.rs:53:12\n    |"}, {"sha": "b5cba945fb11ac6f6afbfbf16a7c2842b338c017", "filename": "src/test/ui/associated-types/cache/project-fn-ret-contravariant.transmute.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-contravariant.transmute.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-contravariant.transmute.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-contravariant.transmute.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/project-fn-ret-contravariant.rs:48:8\n-   |\n-LL |    bar(foo, x) //[transmute]~ ERROR E0495\n-   |        ^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/project-fn-ret-contravariant.rs:48:4\n    |"}, {"sha": "971448997e3f62673095043f51488fea2e6e79e5", "filename": "src/test/ui/associated-types/cache/project-fn-ret-invariant.krisskross.nll.stderr", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-invariant.krisskross.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-invariant.krisskross.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-invariant.krisskross.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,15 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/project-fn-ret-invariant.rs:63:16\n-   |\n-LL |    let a = bar(foo, y); //[krisskross]~ ERROR E0623\n-   |                ^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/project-fn-ret-invariant.rs:64:16\n-   |\n-LL |    let b = bar(foo, x);\n-   |                ^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/project-fn-ret-invariant.rs:63:12\n    |"}, {"sha": "a9c2bb3763988eed95e9c050aebf68d08962ecbf", "filename": "src/test/ui/associated-types/cache/project-fn-ret-invariant.oneuse.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-invariant.oneuse.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-invariant.oneuse.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-invariant.oneuse.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/project-fn-ret-invariant.rs:47:12\n-   |\n-LL |    let f = foo; // <-- No consistent type can be inferred for `f` here.\n-   |            ^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/project-fn-ret-invariant.rs:48:12\n    |"}, {"sha": "bb1be40980dad093b86df0ab0cc5dbafb1b4b7d5", "filename": "src/test/ui/associated-types/cache/project-fn-ret-invariant.transmute.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-invariant.transmute.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-invariant.transmute.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-invariant.transmute.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/project-fn-ret-invariant.rs:58:8\n-   |\n-LL |    bar(foo, x) //[transmute]~ ERROR E0495\n-   |        ^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/project-fn-ret-invariant.rs:58:4\n    |"}, {"sha": "e3211f83850995bcec44f76564fe98ba503f69e4", "filename": "src/test/ui/borrowck/borrowck-reborrow-from-shorter-lived-andmut.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-reborrow-from-shorter-lived-andmut.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-reborrow-from-shorter-lived-andmut.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-reborrow-from-shorter-lived-andmut.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/borrowck-reborrow-from-shorter-lived-andmut.rs:19:18\n-   |\n-LL |     S { pointer: &mut *p.pointer }\n-   |                  ^^^^^^^^^^^^^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/borrowck-reborrow-from-shorter-lived-andmut.rs:19:5\n    |"}, {"sha": "18411b528a3e30d2455b51cbd20587f4ed5d75de", "filename": "src/test/ui/borrowck/issue-45983.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fborrowck%2Fissue-45983.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fborrowck%2Fissue-45983.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-45983.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/issue-45983.rs:36:27\n-   |\n-LL |     give_any(|y| x = Some(y));\n-   |                           ^\n-\n error: borrowed data escapes outside of closure\n   --> $DIR/issue-45983.rs:36:18\n    |"}, {"sha": "ec2a2887127ad005e981ada4a83f70e9a24e6cc2", "filename": "src/test/ui/borrowck/issue-45983.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fborrowck%2Fissue-45983.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fborrowck%2Fissue-45983.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-45983.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -36,7 +36,6 @@ fn main() {\n     give_any(|y| x = Some(y));\n     //[ast]~^ ERROR borrowed data cannot be stored outside of its closure\n     //[migrate]~^^ ERROR borrowed data cannot be stored outside of its closure\n-    //[nll]~^^^ WARN not reporting region error due to nll\n-    //[nll]~| ERROR borrowed data escapes outside of closure\n+    //[nll]~^^^ ERROR borrowed data escapes outside of closure\n     //[nll]~| ERROR cannot assign to `x`, as it is not declared as mutable\n }"}, {"sha": "372df61d78c45bdd511d0a0a0cc1dce8859add49", "filename": "src/test/ui/borrowck/issue-7573.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fborrowck%2Fissue-7573.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fborrowck%2Fissue-7573.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-7573.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/issue-7573.rs:27:31\n-   |\n-LL |     let mut lines_to_use: Vec<&CrateId> = Vec::new();\n-   |                               ^\n-\n error: borrowed data escapes outside of closure\n   --> $DIR/issue-7573.rs:32:9\n    |"}, {"sha": "787fc4d872996d66f61ceb57f4b7e52ab259b3b1", "filename": "src/test/ui/borrowck/regions-escape-bound-fn-2.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fborrowck%2Fregions-escape-bound-fn-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fborrowck%2Fregions-escape-bound-fn-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fregions-escape-bound-fn-2.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-escape-bound-fn-2.rs:18:27\n-   |\n-LL |     with_int(|y| x = Some(y));\n-   |                           ^\n-\n error: borrowed data escapes outside of closure\n   --> $DIR/regions-escape-bound-fn-2.rs:18:18\n    |"}, {"sha": "91f1f00ce30ffc207b954c30711a0a3b06000fae", "filename": "src/test/ui/borrowck/regions-escape-bound-fn.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fborrowck%2Fregions-escape-bound-fn.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fborrowck%2Fregions-escape-bound-fn.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fregions-escape-bound-fn.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-escape-bound-fn.rs:18:22\n-   |\n-LL |     with_int(|y| x = Some(y));\n-   |                      ^^^^^^^\n-\n error: borrowed data escapes outside of closure\n   --> $DIR/regions-escape-bound-fn.rs:18:18\n    |"}, {"sha": "44e7018fdd76487c84a0411c581d091d507f0097", "filename": "src/test/ui/borrowck/regions-escape-unboxed-closure.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fborrowck%2Fregions-escape-unboxed-closure.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fborrowck%2Fregions-escape-unboxed-closure.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fregions-escape-unboxed-closure.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-escape-unboxed-closure.rs:16:27\n-   |\n-LL |     with_int(&mut |y| x = Some(y));\n-   |                           ^^^^^^^\n-\n error: borrowed data escapes outside of closure\n   --> $DIR/regions-escape-unboxed-closure.rs:16:23\n    |"}, {"sha": "ae3e3a262b5adc2d803a353ed9d94c42043e1d59", "filename": "src/test/ui/closure-expected-type/expect-fn-supply-fn.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fclosure-expected-type%2Fexpect-fn-supply-fn.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fclosure-expected-type%2Fexpect-fn-supply-fn.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosure-expected-type%2Fexpect-fn-supply-fn.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/expect-fn-supply-fn.rs:24:52\n-   |\n-LL |     with_closure_expecting_fn_with_free_region(|x: fn(&'x u32), y| {});\n-   |                                                    ^^^^^^^^^^^\n-\n error[E0631]: type mismatch in closure arguments\n   --> $DIR/expect-fn-supply-fn.rs:40:5\n    |"}, {"sha": "4bc5034f93e4d548777573f9f302329f4ca7b5f0", "filename": "src/test/ui/closures/closure-bounds-static-cant-capture-borrowed.nll.stderr", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fclosures%2Fclosure-bounds-static-cant-capture-borrowed.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fclosures%2Fclosure-bounds-static-cant-capture-borrowed.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fclosure-bounds-static-cant-capture-borrowed.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,13 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/closure-bounds-static-cant-capture-borrowed.rs:15:9\n-   |\n-LL |       bar(|| {\n-   |  _________^\n-LL | |         //~^ ERROR explicit lifetime required in the type of `x` [E0621]\n-LL | |         let _ = x;\n-LL | |     })\n-   | |_____^\n-\n error[E0621]: explicit lifetime required in the type of `x`\n   --> $DIR/closure-bounds-static-cant-capture-borrowed.rs:15:5\n    |"}, {"sha": "7f842c40ece5af87f01ab3024d0865cd83fee9c3", "filename": "src/test/ui/closures/closure-expected-type/expect-region-supply-region.nll.stderr", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fclosures%2Fclosure-expected-type%2Fexpect-region-supply-region.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fclosures%2Fclosure-expected-type%2Fexpect-region-supply-region.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fclosure-expected-type%2Fexpect-region-supply-region.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,27 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/expect-region-supply-region.rs:28:13\n-   |\n-LL |         f = Some(x); //~ ERROR borrowed data cannot be stored outside of its closure\n-   |             ^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/expect-region-supply-region.rs:38:13\n-   |\n-LL |         f = Some(x); //~ ERROR borrowed data cannot be stored outside of its closure\n-   |             ^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/expect-region-supply-region.rs:47:33\n-   |\n-LL |     closure_expecting_bound(|x: &'x u32| {\n-   |                                 ^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/expect-region-supply-region.rs:52:13\n-   |\n-LL |         f = Some(x);\n-   |             ^^^^^^^\n-\n error: borrowed data escapes outside of closure\n   --> $DIR/expect-region-supply-region.rs:28:9\n    |"}, {"sha": "65008380f9e1771b8c21fd1aa23e3916cd8ded27", "filename": "src/test/ui/error-codes/E0621-does-not-trigger-for-closures.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Ferror-codes%2FE0621-does-not-trigger-for-closures.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Ferror-codes%2FE0621-does-not-trigger-for-closures.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0621-does-not-trigger-for-closures.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/E0621-does-not-trigger-for-closures.rs:25:5\n-   |\n-LL |     invoke(&x, |a, b| if a > b { a } else { b }); //~ ERROR E0495\n-   |     ^^^^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/E0621-does-not-trigger-for-closures.rs:25:45\n    |"}, {"sha": "a480f54ac187385f7088bea0aab1134f752d97f9", "filename": "src/test/ui/existential_types/generic_type_does_not_live_long_enough.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_type_does_not_live_long_enough.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_type_does_not_live_long_enough.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_type_does_not_live_long_enough.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -7,12 +7,6 @@ LL |     let z: i32 = x; //~ ERROR mismatched types\n    = note: expected type `i32`\n               found type `WrongGeneric::<&{integer}>`\n \n-warning: not reporting region error due to nll\n-  --> $DIR/generic_type_does_not_live_long_enough.rs:19:1\n-   |\n-LL | existential type WrongGeneric<T>: 'static;\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0308`."}, {"sha": "cadb552697e651f2b657b45f8d1ff69f1eafc780", "filename": "src/test/ui/hr-subtype/hr-subtype.free_inv_x_vs_free_inv_y.nll.stderr", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fhr-subtype%2Fhr-subtype.free_inv_x_vs_free_inv_y.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fhr-subtype%2Fhr-subtype.free_inv_x_vs_free_inv_y.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhr-subtype%2Fhr-subtype.free_inv_x_vs_free_inv_y.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,23 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/hr-subtype.rs:43:26\n-   |\n-LL |               gimme::<$t2>(None::<$t1>);\n-   |                            ^^^^^^^^^^^\n-...\n-LL | / check! { free_inv_x_vs_free_inv_y: (fn(Inv<'x>),\n-LL | |                                     fn(Inv<'y>)) }\n-   | |__________________________________________________- in this macro invocation\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/hr-subtype.rs:49:26\n-   |\n-LL |               gimme::<$t1>(None::<$t2>);\n-   |                            ^^^^^^^^^^^\n-...\n-LL | / check! { free_inv_x_vs_free_inv_y: (fn(Inv<'x>),\n-LL | |                                     fn(Inv<'y>)) }\n-   | |__________________________________________________- in this macro invocation\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/hr-subtype.rs:43:13\n    |"}, {"sha": "c1bcd146b34896f81879143b37d6c202ee089572", "filename": "src/test/ui/hr-subtype/hr-subtype.free_x_vs_free_y.nll.stderr", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fhr-subtype%2Fhr-subtype.free_x_vs_free_y.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fhr-subtype%2Fhr-subtype.free_x_vs_free_y.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhr-subtype%2Fhr-subtype.free_x_vs_free_y.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,13 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/hr-subtype.rs:49:26\n-   |\n-LL |               gimme::<$t1>(None::<$t2>);\n-   |                            ^^^^^^^^^^^\n-...\n-LL | / check! { free_x_vs_free_y: (fn(&'x u32),\n-LL | |                             fn(&'y u32)) }\n-   | |__________________________________________- in this macro invocation\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/hr-subtype.rs:49:13\n    |"}, {"sha": "45ee808950e25795f71b2f6e7ac92e4274eaa7c9", "filename": "src/test/ui/impl-header-lifetime-elision/dyn-trait.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fdyn-trait.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fdyn-trait.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fdyn-trait.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/dyn-trait.rs:32:16\n-   |\n-LL |     static_val(x); //~ ERROR cannot infer\n-   |                ^\n-\n error: borrowed data escapes outside of function\n   --> $DIR/dyn-trait.rs:32:5\n    |"}, {"sha": "1e3e997b111ace1bf9505c1552335042eee99f36", "filename": "src/test/ui/impl-trait/must_outlive_least_region_or_bound.nll.stderr", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fimpl-trait%2Fmust_outlive_least_region_or_bound.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fimpl-trait%2Fmust_outlive_least_region_or_bound.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fmust_outlive_least_region_or_bound.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,33 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/must_outlive_least_region_or_bound.rs:13:35\n-   |\n-LL | fn elided(x: &i32) -> impl Copy { x }\n-   |                                   ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/must_outlive_least_region_or_bound.rs:16:44\n-   |\n-LL | fn explicit<'a>(x: &'a i32) -> impl Copy { x }\n-   |                                            ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/must_outlive_least_region_or_bound.rs:22:69\n-   |\n-LL | fn with_bound<'a>(x: &'a i32) -> impl LifetimeTrait<'a> + 'static { x }\n-   |                                                                     ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/must_outlive_least_region_or_bound.rs:29:5\n-   |\n-LL |     move |_| println!(\"{}\", y)\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/must_outlive_least_region_or_bound.rs:32:51\n-   |\n-LL | fn ty_param_wont_outlive_static<T:Debug>(x: T) -> impl Debug + 'static {\n-   |                                                   ^^^^^^^^^^^^^^^^^^^^\n-\n error[E0621]: explicit lifetime required in the type of `x`\n   --> $DIR/must_outlive_least_region_or_bound.rs:13:35\n    |"}, {"sha": "2568eb2ed3fc154149c727b90d0396c3be01eacb", "filename": "src/test/ui/impl-trait/static-return-lifetime-infered.nll.stderr", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fimpl-trait%2Fstatic-return-lifetime-infered.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fimpl-trait%2Fstatic-return-lifetime-infered.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fstatic-return-lifetime-infered.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,15 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/static-return-lifetime-infered.rs:17:16\n-   |\n-LL |         self.x.iter().map(|a| a.0)\n-   |                ^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/static-return-lifetime-infered.rs:21:16\n-   |\n-LL |         self.x.iter().map(|a| a.0)\n-   |                ^^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/static-return-lifetime-infered.rs:17:9\n    |"}, {"sha": "3c2c86fffded025d18052621061cb0aeb0d9f1dd", "filename": "src/test/ui/impl-trait/type_parameters_captured.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fimpl-trait%2Ftype_parameters_captured.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fimpl-trait%2Ftype_parameters_captured.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Ftype_parameters_captured.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/type_parameters_captured.rs:17:20\n-   |\n-LL | fn foo<T>(x: T) -> impl Any + 'static {\n-   |                    ^^^^^^^^^^^^^^^^^^\n-\n error[E0310]: the parameter type `T` may not live long enough\n   --> $DIR/type_parameters_captured.rs:19:5\n    |"}, {"sha": "c8b2f849b32a79902279a704d47b78fa5d41aa25", "filename": "src/test/ui/in-band-lifetimes/mismatched.nll.stderr", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,15 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/mismatched.rs:14:42\n-   |\n-LL | fn foo(x: &'a u32, y: &u32) -> &'a u32 { y } //~ ERROR explicit lifetime required\n-   |                                          ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/mismatched.rs:16:46\n-   |\n-LL | fn foo2(x: &'a u32, y: &'b u32) -> &'a u32 { y } //~ ERROR lifetime mismatch\n-   |                                              ^\n-\n error[E0621]: explicit lifetime required in the type of `y`\n   --> $DIR/mismatched.rs:14:42\n    |"}, {"sha": "a01f3219dc5e4f9026da9c16faafc83d1e5968b8", "filename": "src/test/ui/in-band-lifetimes/mismatched_trait.nll.stderr", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e27bae09ca4947ea20520ba7a7f1737559f8dd0f/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched_trait.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e27bae09ca4947ea20520ba7a7f1737559f8dd0f/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched_trait.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched_trait.nll.stderr?ref=e27bae09ca4947ea20520ba7a7f1737559f8dd0f", "patch": "@@ -1,17 +0,0 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/mismatched_trait.rs:16:9\n-   |\n-LL |         y //~ ERROR explicit lifetime required\n-   |         ^\n-\n-error[E0621]: explicit lifetime required in the type of `y`\n-  --> $DIR/mismatched_trait.rs:16:9\n-   |\n-LL |     fn baz(&self, x: &'a u32, y: &u32) -> &'a u32 {\n-   |                                  ---- help: add explicit lifetime `'a` to the type of `y`: `&'a u32`\n-LL |         y //~ ERROR explicit lifetime required\n-   |         ^ lifetime `'a` required\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0621`."}, {"sha": "d19c4d880c7c84da692612e0c78323513a1c860e", "filename": "src/test/ui/issues/issue-10291.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fissues%2Fissue-10291.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fissues%2Fissue-10291.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-10291.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/issue-10291.rs:13:9\n-   |\n-LL |         x //~ ERROR E0312\n-   |         ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/issue-10291.rs:12:5\n    |"}, {"sha": "33c0eefbfaa289758d5a0a1d81b20e3d5750b64a", "filename": "src/test/ui/issues/issue-13058.nll.stderr", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fissues%2Fissue-13058.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fissues%2Fissue-13058.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-13058.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,15 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/issue-13058.rs:24:21\n-   |\n-LL |     let cont_iter = cont.iter();\n-   |                     ^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/issue-13058.rs:24:26\n-   |\n-LL |     let cont_iter = cont.iter();\n-   |                          ^^^^\n-\n error[E0308]: mismatched types\n   --> $DIR/issue-13058.rs:36:11\n    |"}, {"sha": "cf3e44f7874aa8007ca2e6945bbc121471aa91ea", "filename": "src/test/ui/issues/issue-14285.nll.stderr", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e27bae09ca4947ea20520ba7a7f1737559f8dd0f/src%2Ftest%2Fui%2Fissues%2Fissue-14285.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e27bae09ca4947ea20520ba7a7f1737559f8dd0f/src%2Ftest%2Fui%2Fissues%2Fissue-14285.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-14285.nll.stderr?ref=e27bae09ca4947ea20520ba7a7f1737559f8dd0f", "patch": "@@ -1,17 +0,0 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/issue-14285.rs:22:7\n-   |\n-LL |     B(a)    //~ ERROR 22:5: 22:9: explicit lifetime required in the type of `a` [E0621]\n-   |       ^\n-\n-error[E0621]: explicit lifetime required in the type of `a`\n-  --> $DIR/issue-14285.rs:22:5\n-   |\n-LL | fn foo<'a>(a: &Foo) -> B<'a> {\n-   |               ---- help: add explicit lifetime `'a` to the type of `a`: `&'a (dyn Foo + 'a)`\n-LL |     B(a)    //~ ERROR 22:5: 22:9: explicit lifetime required in the type of `a` [E0621]\n-   |     ^^^^ lifetime `'a` required\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0621`."}, {"sha": "aa5ceabfb11748648f0f20a1757ac22b8c7a466d", "filename": "src/test/ui/issues/issue-15034.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fissues%2Fissue-15034.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fissues%2Fissue-15034.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-15034.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/issue-15034.rs:27:9\n-   |\n-LL |         Parser { lexer: lexer }\n-   |         ^^^^^^\n-\n error[E0621]: explicit lifetime required in the type of `lexer`\n   --> $DIR/issue-15034.rs:27:9\n    |"}, {"sha": "29d9948f61a428fe89dd4d0ec1a1635f12367e8e", "filename": "src/test/ui/issues/issue-16683.nll.stderr", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fissues%2Fissue-16683.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fissues%2Fissue-16683.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-16683.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,15 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/issue-16683.rs:14:9\n-   |\n-LL |         self.a(); //~ ERROR cannot infer\n-   |         ^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/issue-16683.rs:14:14\n-   |\n-LL |         self.a(); //~ ERROR cannot infer\n-   |              ^\n-\n error: borrowed data escapes outside of function\n   --> $DIR/issue-16683.rs:14:9\n    |"}, {"sha": "3406d534896600aac3fc7ddd15e8047e17577c9d", "filename": "src/test/ui/issues/issue-16922.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fissues%2Fissue-16922.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fissues%2Fissue-16922.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-16922.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/issue-16922.rs:14:14\n-   |\n-LL |     Box::new(value) as Box<Any>\n-   |              ^^^^^\n-\n error[E0621]: explicit lifetime required in the type of `value`\n   --> $DIR/issue-16922.rs:14:5\n    |"}, {"sha": "2cb6f831d85684b6d383f02a7e571f9f5a9fe792", "filename": "src/test/ui/issues/issue-17728.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fissues%2Fissue-17728.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fissues%2Fissue-17728.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17728.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/issue-17728.rs:23:49\n-   |\n-LL |         let maybe_room = room.direction_to_room.get(&direction);\n-   |                                                 ^^^\n-\n error[E0308]: match arms have incompatible types\n   --> $DIR/issue-17728.rs:110:5\n    |"}, {"sha": "87e01ace64a1b5fe2b5b3d52444439536a9b18b5", "filename": "src/test/ui/issues/issue-17758.nll.stderr", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fissues%2Fissue-17758.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fissues%2Fissue-17758.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17758.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,15 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/issue-17758.rs:17:9\n-   |\n-LL |         self.foo();\n-   |         ^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/issue-17758.rs:17:14\n-   |\n-LL |         self.foo();\n-   |              ^^^\n-\n error: borrowed data escapes outside of function\n   --> $DIR/issue-17758.rs:17:9\n    |"}, {"sha": "f28b06540990637895334b7c19c3a4565a8a78ca", "filename": "src/test/ui/issues/issue-26217.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fissues%2Fissue-26217.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fissues%2Fissue-26217.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-26217.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/issue-26217.rs:14:5\n-   |\n-LL |     foo::<&'a i32>();\n-   |     ^^^^^^^^^^^^^^\n-\n error[E0131]: `main` function is not allowed to have generic parameters\n   --> $DIR/issue-26217.rs:13:8\n    |"}, {"sha": "3cd7ce8cd54092d3f0cf328efd9ac53a375c79a0", "filename": "src/test/ui/issues/issue-3154.nll.stderr", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/e27bae09ca4947ea20520ba7a7f1737559f8dd0f/src%2Ftest%2Fui%2Fissues%2Fissue-3154.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e27bae09ca4947ea20520ba7a7f1737559f8dd0f/src%2Ftest%2Fui%2Fissues%2Fissue-3154.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-3154.nll.stderr?ref=e27bae09ca4947ea20520ba7a7f1737559f8dd0f", "patch": "@@ -1,23 +0,0 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/issue-3154.rs:16:15\n-   |\n-LL |     thing{ x: x } //~ ERROR 16:5: 16:18: explicit lifetime required in the type of `x` [E0621]\n-   |               ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/issue-3154.rs:16:5\n-   |\n-LL |     thing{ x: x } //~ ERROR 16:5: 16:18: explicit lifetime required in the type of `x` [E0621]\n-   |     ^^^^^\n-\n-error[E0621]: explicit lifetime required in the type of `x`\n-  --> $DIR/issue-3154.rs:16:5\n-   |\n-LL | fn thing<'a,Q>(x: &Q) -> thing<'a,Q> {\n-   |                   -- help: add explicit lifetime `'a` to the type of `x`: `&'a Q`\n-LL |     thing{ x: x } //~ ERROR 16:5: 16:18: explicit lifetime required in the type of `x` [E0621]\n-   |     ^^^^^^^^^^^^^ lifetime `'a` required\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0621`."}, {"sha": "e15e4e86dbcbf460f6a7d755d56595dc6b14d141", "filename": "src/test/ui/issues/issue-40288-2.nll.stderr", "status": "modified", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fissues%2Fissue-40288-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fissues%2Fissue-40288-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-40288-2.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,39 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/issue-40288-2.rs:17:20\n-   |\n-LL |         slice[0] = y;\n-   |                    ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/issue-40288-2.rs:16:20\n-   |\n-LL |         let slice: &mut [_] = &mut out;\n-   |                    ^^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/issue-40288-2.rs:14:19\n-   |\n-LL |     let mut out = [x];\n-   |                   ^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/issue-40288-2.rs:32:20\n-   |\n-LL |         dst.head = y;\n-   |                    ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/issue-40288-2.rs:31:18\n-   |\n-LL |         let dst: &mut Struct<_, [()]> = &mut out;\n-   |                  ^^^^^^^^^^^^^^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/issue-40288-2.rs:29:19\n-   |\n-LL |     let mut out = Struct { head: x, _tail: [()] };\n-   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n error[E0621]: explicit lifetime required in the type of `y`\n   --> $DIR/issue-40288-2.rs:17:9\n    |"}, {"sha": "dab3fd866ba64bcef97d51a0413ae50b77ea5442", "filename": "src/test/ui/issues/issue-52213.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fissues%2Fissue-52213.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fissues%2Fissue-52213.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-52213.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/issue-52213.rs:12:11\n-   |\n-LL |     match (&t,) { //~ ERROR cannot infer an appropriate lifetime\n-   |           ^^^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/issue-52213.rs:13:20\n    |"}, {"sha": "cc5f4df79f8f566dd78fe5060765700c279bd601", "filename": "src/test/ui/issues/issue-52533-1.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fissues%2Fissue-52533-1.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fissues%2Fissue-52533-1.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-52533-1.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/issue-52533-1.rs:19:18\n-   |\n-LL |     gimme(|x, y| y)\n-   |                  ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/issue-52533-1.rs:19:18\n    |"}, {"sha": "37ab2a3b84d2f3fafc2f098c950449ba8490e143", "filename": "src/test/ui/issues/issue-52533.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fissues%2Fissue-52533.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fissues%2Fissue-52533.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-52533.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/issue-52533.rs:15:16\n-   |\n-LL |     foo(|a, b| b)\n-   |                ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/issue-52533.rs:15:16\n    |"}, {"sha": "d484632f4c34e336507b4ec832a909f84bbd61db", "filename": "src/test/ui/kindck/kindck-impl-type-params.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fkindck%2Fkindck-impl-type-params.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fkindck%2Fkindck-impl-type-params.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fkindck%2Fkindck-impl-type-params.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -40,12 +40,6 @@ LL |     let a: &Gettable<T> = &t;\n    = note: required because of the requirements on the impl of `Gettable<T>` for `S<T>`\n    = note: required for the cast to the object type `dyn Gettable<T>`\n \n-warning: not reporting region error due to nll\n-  --> $DIR/kindck-impl-type-params.rs:42:13\n-   |\n-LL |     let a = &t as &Gettable<&'a isize>;\n-   |             ^^\n-\n error[E0277]: the trait bound `std::string::String: std::marker::Copy` is not satisfied\n   --> $DIR/kindck-impl-type-params.rs:48:13\n    |"}, {"sha": "a45ba157bf9a34913c0c48f169c721def057293c", "filename": "src/test/ui/kindck/kindck-send-object1.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fkindck%2Fkindck-send-object1.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fkindck%2Fkindck-send-object1.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fkindck%2Fkindck-send-object1.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -12,12 +12,6 @@ note: required by `assert_send`\n LL | fn assert_send<T:Send+'static>() { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: not reporting region error due to nll\n-  --> $DIR/kindck-send-object1.rs:24:5\n-   |\n-LL |     assert_send::<&'a (Dummy+Sync)>();\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n error[E0277]: `(dyn Dummy + 'a)` cannot be sent between threads safely\n   --> $DIR/kindck-send-object1.rs:39:5\n    |"}, {"sha": "bc15df264cc3b1d895c4d473621e1e17589a1301", "filename": "src/test/ui/lifetimes/lifetime-bound-will-change-warning.nll.stderr", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-bound-will-change-warning.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-bound-will-change-warning.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-bound-will-change-warning.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,15 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/lifetime-bound-will-change-warning.rs:44:13\n-   |\n-LL |     ref_obj(x) //~ ERROR mismatched types\n-   |             ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/lifetime-bound-will-change-warning.rs:49:18\n-   |\n-LL |     lib::ref_obj(x) //~ ERROR mismatched types\n-   |                  ^\n-\n error: borrowed data escapes outside of function\n   --> $DIR/lifetime-bound-will-change-warning.rs:44:5\n    |"}, {"sha": "3fb0252315cbfe4cc6c0a66eaf9883a02a0bc866", "filename": "src/test/ui/lifetimes/lifetime-errors/42701_one_named_and_one_anonymous.nll.stderr", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e27bae09ca4947ea20520ba7a7f1737559f8dd0f/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2F42701_one_named_and_one_anonymous.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e27bae09ca4947ea20520ba7a7f1737559f8dd0f/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2F42701_one_named_and_one_anonymous.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2F42701_one_named_and_one_anonymous.nll.stderr?ref=e27bae09ca4947ea20520ba7a7f1737559f8dd0f", "patch": "@@ -1,18 +0,0 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/42701_one_named_and_one_anonymous.rs:20:9\n-   |\n-LL |         &*x //~ ERROR explicit lifetime\n-   |         ^^^\n-\n-error[E0621]: explicit lifetime required in the type of `x`\n-  --> $DIR/42701_one_named_and_one_anonymous.rs:20:9\n-   |\n-LL | fn foo2<'a>(a: &'a Foo, x: &i32) -> &'a i32 {\n-   |                            ---- help: add explicit lifetime `'a` to the type of `x`: `&'a i32`\n-...\n-LL |         &*x //~ ERROR explicit lifetime\n-   |         ^^^ lifetime `'a` required\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0621`."}, {"sha": "817d7c8736375e063aa73ff406131d7fd47e5a14", "filename": "src/test/ui/lifetimes/lifetime-errors/ex1-return-one-existing-name-early-bound-in-struct.nll.stderr", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e27bae09ca4947ea20520ba7a7f1737559f8dd0f/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-early-bound-in-struct.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e27bae09ca4947ea20520ba7a7f1737559f8dd0f/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-early-bound-in-struct.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-early-bound-in-struct.nll.stderr?ref=e27bae09ca4947ea20520ba7a7f1737559f8dd0f", "patch": "@@ -1,18 +0,0 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex1-return-one-existing-name-early-bound-in-struct.rs:21:21\n-   |\n-LL |                     other //~ ERROR explicit lifetime\n-   |                     ^^^^^\n-\n-error[E0621]: explicit lifetime required in the type of `other`\n-  --> $DIR/ex1-return-one-existing-name-early-bound-in-struct.rs:21:21\n-   |\n-LL |     fn bar(&self, other: Foo) -> Foo<'a> {\n-   |                          --- help: add explicit lifetime `'a` to the type of `other`: `Foo<'a>`\n-...\n-LL |                     other //~ ERROR explicit lifetime\n-   |                     ^^^^^ lifetime `'a` required\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0621`."}, {"sha": "a10c38a88d4c4f8f4d527cacd8bf08ceebbd9ba4", "filename": "src/test/ui/lifetimes/lifetime-errors/ex1-return-one-existing-name-if-else-2.nll.stderr", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e27bae09ca4947ea20520ba7a7f1737559f8dd0f/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e27bae09ca4947ea20520ba7a7f1737559f8dd0f/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-2.nll.stderr?ref=e27bae09ca4947ea20520ba7a7f1737559f8dd0f", "patch": "@@ -1,17 +0,0 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex1-return-one-existing-name-if-else-2.rs:12:16\n-   |\n-LL |     if x > y { x } else { y } //~ ERROR explicit lifetime\n-   |                ^\n-\n-error[E0621]: explicit lifetime required in the type of `x`\n-  --> $DIR/ex1-return-one-existing-name-if-else-2.rs:12:16\n-   |\n-LL | fn foo<'a>(x: &i32, y: &'a i32) -> &'a i32 {\n-   |               ---- help: add explicit lifetime `'a` to the type of `x`: `&'a i32`\n-LL |     if x > y { x } else { y } //~ ERROR explicit lifetime\n-   |                ^ lifetime `'a` required\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0621`."}, {"sha": "e33b89c56d5d803cba229847747e24b85c1ed2d0", "filename": "src/test/ui/lifetimes/lifetime-errors/ex1-return-one-existing-name-if-else-3.nll.stderr", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e27bae09ca4947ea20520ba7a7f1737559f8dd0f/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-3.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e27bae09ca4947ea20520ba7a7f1737559f8dd0f/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-3.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-3.nll.stderr?ref=e27bae09ca4947ea20520ba7a7f1737559f8dd0f", "patch": "@@ -1,17 +0,0 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex1-return-one-existing-name-if-else-3.rs:12:27\n-   |\n-LL |     if x > y { x } else { y } //~ ERROR explicit lifetime\n-   |                           ^\n-\n-error[E0621]: explicit lifetime required in parameter type\n-  --> $DIR/ex1-return-one-existing-name-if-else-3.rs:12:27\n-   |\n-LL | fn foo<'a>((x, y): (&'a i32, &i32)) -> &'a i32 {\n-   |                    --------------- help: add explicit lifetime `'a` to type: `(&'a i32, &'a i32)`\n-LL |     if x > y { x } else { y } //~ ERROR explicit lifetime\n-   |                           ^ lifetime `'a` required\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0621`."}, {"sha": "a3b2c3f6f19c322add0f1144a0aff6f5c27d2320", "filename": "src/test/ui/lifetimes/lifetime-errors/ex1-return-one-existing-name-if-else-using-impl-2.nll.stderr", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e27bae09ca4947ea20520ba7a7f1737559f8dd0f/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-using-impl-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e27bae09ca4947ea20520ba7a7f1737559f8dd0f/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-using-impl-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-using-impl-2.nll.stderr?ref=e27bae09ca4947ea20520ba7a7f1737559f8dd0f", "patch": "@@ -1,17 +0,0 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex1-return-one-existing-name-if-else-using-impl-2.rs:14:15\n-   |\n-LL |    if x > y { x } else { y } //~ ERROR explicit lifetime\n-   |               ^\n-\n-error[E0621]: explicit lifetime required in the type of `x`\n-  --> $DIR/ex1-return-one-existing-name-if-else-using-impl-2.rs:14:15\n-   |\n-LL | fn foo<'a>(x: &i32, y: &'a i32) -> &'a i32 {\n-   |               ---- help: add explicit lifetime `'a` to the type of `x`: `&'a i32`\n-LL |    if x > y { x } else { y } //~ ERROR explicit lifetime\n-   |               ^ lifetime `'a` required\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0621`."}, {"sha": "e13a710508d05757d6b92d3c2fdbe1f90088f42a", "filename": "src/test/ui/lifetimes/lifetime-errors/ex1-return-one-existing-name-if-else-using-impl-3.nll.stderr", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e27bae09ca4947ea20520ba7a7f1737559f8dd0f/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-using-impl-3.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e27bae09ca4947ea20520ba7a7f1737559f8dd0f/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-using-impl-3.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-using-impl-3.nll.stderr?ref=e27bae09ca4947ea20520ba7a7f1737559f8dd0f", "patch": "@@ -1,18 +0,0 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex1-return-one-existing-name-if-else-using-impl-3.rs:18:36\n-   |\n-LL |     if true { &self.field } else { x } //~ ERROR explicit lifetime\n-   |                                    ^\n-\n-error[E0621]: explicit lifetime required in the type of `x`\n-  --> $DIR/ex1-return-one-existing-name-if-else-using-impl-3.rs:18:36\n-   |\n-LL |   fn foo<'a>(&'a self, x: &i32) -> &i32 {\n-   |                           ---- help: add explicit lifetime `'a` to the type of `x`: `&'a i32`\n-LL | \n-LL |     if true { &self.field } else { x } //~ ERROR explicit lifetime\n-   |                                    ^ lifetime `'a` required\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0621`."}, {"sha": "4e3193ccbfd5cb4632ca466a1505dfb7c1f81c8d", "filename": "src/test/ui/lifetimes/lifetime-errors/ex1-return-one-existing-name-if-else-using-impl.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-using-impl.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-using-impl.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-using-impl.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex1-return-one-existing-name-if-else-using-impl.rs:21:20\n-   |\n-LL |         if x > y { x } else { y } //~ ERROR lifetime mismatch\n-   |                    ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/ex1-return-one-existing-name-if-else-using-impl.rs:21:20\n    |"}, {"sha": "5b4b28acee7c8c6698fcfe1dbd47767f731569e9", "filename": "src/test/ui/lifetimes/lifetime-errors/ex1-return-one-existing-name-if-else.nll.stderr", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e27bae09ca4947ea20520ba7a7f1737559f8dd0f/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-if-else.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e27bae09ca4947ea20520ba7a7f1737559f8dd0f/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-if-else.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-if-else.nll.stderr?ref=e27bae09ca4947ea20520ba7a7f1737559f8dd0f", "patch": "@@ -1,17 +0,0 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex1-return-one-existing-name-if-else.rs:12:27\n-   |\n-LL |     if x > y { x } else { y } //~ ERROR explicit lifetime\n-   |                           ^\n-\n-error[E0621]: explicit lifetime required in the type of `y`\n-  --> $DIR/ex1-return-one-existing-name-if-else.rs:12:27\n-   |\n-LL | fn foo<'a>(x: &'a i32, y: &i32) -> &'a i32 {\n-   |                           ---- help: add explicit lifetime `'a` to the type of `y`: `&'a i32`\n-LL |     if x > y { x } else { y } //~ ERROR explicit lifetime\n-   |                           ^ lifetime `'a` required\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0621`."}, {"sha": "3413203fa7f06291e8fbb15845dcb86a2e14ebc2", "filename": "src/test/ui/lifetimes/lifetime-errors/ex1-return-one-existing-name-return-type-is-anon.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-return-type-is-anon.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-return-type-is-anon.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-return-type-is-anon.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex1-return-one-existing-name-return-type-is-anon.rs:18:5\n-   |\n-LL |     x //~ ERROR lifetime mismatch\n-   |     ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/ex1-return-one-existing-name-return-type-is-anon.rs:18:5\n    |"}, {"sha": "239419967f6c1cfa3bf491478a666b00db071dd0", "filename": "src/test/ui/lifetimes/lifetime-errors/ex1-return-one-existing-name-self-is-anon.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-self-is-anon.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-self-is-anon.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1-return-one-existing-name-self-is-anon.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex1-return-one-existing-name-self-is-anon.rs:18:30\n-   |\n-LL |         if true { x } else { self } //~ ERROR lifetime mismatch\n-   |                              ^^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/ex1-return-one-existing-name-self-is-anon.rs:18:30\n    |"}, {"sha": "709d9f84db3f9d98a2aadac1d7a75756e2bece7f", "filename": "src/test/ui/lifetimes/lifetime-errors/ex2a-push-one-existing-name-2.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex2a-push-one-existing-name-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex2a-push-one-existing-name-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex2a-push-one-existing-name-2.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex2a-push-one-existing-name-2.rs:16:12\n-   |\n-LL |     y.push(x); //~ ERROR explicit lifetime\n-   |            ^\n-\n error[E0621]: explicit lifetime required in the type of `x`\n   --> $DIR/ex2a-push-one-existing-name-2.rs:16:5\n    |"}, {"sha": "1e608fe16e41361965f66ce487220dbc79893f44", "filename": "src/test/ui/lifetimes/lifetime-errors/ex2a-push-one-existing-name-early-bound.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex2a-push-one-existing-name-early-bound.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex2a-push-one-existing-name-early-bound.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex2a-push-one-existing-name-early-bound.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex2a-push-one-existing-name-early-bound.rs:17:12\n-   |\n-LL |     x.push(y); //~ ERROR explicit lifetime required\n-   |            ^\n-\n error[E0621]: explicit lifetime required in the type of `y`\n   --> $DIR/ex2a-push-one-existing-name-early-bound.rs:17:5\n    |"}, {"sha": "14194352093954719524b08628e239122ab5a2b3", "filename": "src/test/ui/lifetimes/lifetime-errors/ex2a-push-one-existing-name.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex2a-push-one-existing-name.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex2a-push-one-existing-name.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex2a-push-one-existing-name.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex2a-push-one-existing-name.rs:16:12\n-   |\n-LL |     x.push(y); //~ ERROR explicit lifetime\n-   |            ^\n-\n error[E0621]: explicit lifetime required in the type of `y`\n   --> $DIR/ex2a-push-one-existing-name.rs:16:5\n    |"}, {"sha": "fc5f02fbc721de7e468b38b3c1e50c91d9208351", "filename": "src/test/ui/lifetimes/lifetime-errors/ex2b-push-no-existing-names.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex2b-push-no-existing-names.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex2b-push-no-existing-names.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex2b-push-no-existing-names.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex2b-push-no-existing-names.rs:16:12\n-   |\n-LL |     x.push(y); //~ ERROR lifetime mismatch\n-   |            ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/ex2b-push-no-existing-names.rs:16:5\n    |"}, {"sha": "a5053244dc1f0fd0bbcf00aac0680bb4501da539", "filename": "src/test/ui/lifetimes/lifetime-errors/ex2c-push-inference-variable.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex2c-push-inference-variable.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex2c-push-inference-variable.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex2c-push-inference-variable.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex2c-push-inference-variable.rs:16:13\n-   |\n-LL |     let z = Ref { data: y.data };\n-   |             ^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/ex2c-push-inference-variable.rs:17:5\n    |"}, {"sha": "361fb708d4013b81f6c41c5e6e2e8649347edae7", "filename": "src/test/ui/lifetimes/lifetime-errors/ex2d-push-inference-variable-2.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex2d-push-inference-variable-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex2d-push-inference-variable-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex2d-push-inference-variable-2.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex2d-push-inference-variable-2.rs:17:13\n-   |\n-LL |     let b = Ref { data: y.data };\n-   |             ^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/ex2d-push-inference-variable-2.rs:18:5\n    |"}, {"sha": "5d0f07054dfed6c965f0cda0d2b3f481147ee187", "filename": "src/test/ui/lifetimes/lifetime-errors/ex2e-push-inference-variable-3.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex2e-push-inference-variable-3.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex2e-push-inference-variable-3.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex2e-push-inference-variable-3.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex2e-push-inference-variable-3.rs:17:13\n-   |\n-LL |     let b = Ref { data: y.data };\n-   |             ^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/ex2e-push-inference-variable-3.rs:18:5\n    |"}, {"sha": "017c3e977475ccab1b722002090ddf7bcb65d0de", "filename": "src/test/ui/lifetimes/lifetime-errors/ex3-both-anon-regions-2.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-2.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex3-both-anon-regions-2.rs:12:10\n-   |\n-LL |     *v = x; //~ ERROR lifetime mismatch\n-   |          ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-2.rs:12:5\n    |"}, {"sha": "e1872dcf777ec9da06272ee75454fed1229fc165", "filename": "src/test/ui/lifetimes/lifetime-errors/ex3-both-anon-regions-3.nll.stderr", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-3.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-3.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-3.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,15 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex3-both-anon-regions-3.rs:12:13\n-   |\n-LL |     z.push((x,y)); //~ ERROR lifetime mismatch\n-   |             ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/ex3-both-anon-regions-3.rs:12:15\n-   |\n-LL |     z.push((x,y)); //~ ERROR lifetime mismatch\n-   |               ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-3.rs:12:5\n    |"}, {"sha": "b8e1b483081bac4ed047b0cbd72cc73289a76a54", "filename": "src/test/ui/lifetimes/lifetime-errors/ex3-both-anon-regions-both-are-structs-2.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-2.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex3-both-anon-regions-both-are-structs-2.rs:16:11\n-   |\n-LL |     x.b = y.b; //~ ERROR lifetime mismatch\n-   |           ^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-both-are-structs-2.rs:16:5\n    |"}, {"sha": "4b7352fe2249134e0ccd3a30b323f8f2aec04a53", "filename": "src/test/ui/lifetimes/lifetime-errors/ex3-both-anon-regions-both-are-structs-3.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-3.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-3.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-3.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex3-both-anon-regions-both-are-structs-3.rs:16:11\n-   |\n-LL |     x.a = x.b; //~ ERROR lifetime mismatch\n-   |           ^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-both-are-structs-3.rs:16:5\n    |"}, {"sha": "53a2fef4806713e8b46514553b555665b0f85c3c", "filename": "src/test/ui/lifetimes/lifetime-errors/ex3-both-anon-regions-both-are-structs-4.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-4.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-4.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-4.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex3-both-anon-regions-both-are-structs-4.rs:16:11\n-   |\n-LL |     x.a = x.b; //~ ERROR lifetime mismatch\n-   |           ^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-both-are-structs-4.rs:16:5\n    |"}, {"sha": "7f814b730fff538e83b6f28c0ad55adf72e3072a", "filename": "src/test/ui/lifetimes/lifetime-errors/ex3-both-anon-regions-both-are-structs-earlybound-regions.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-earlybound-regions.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-earlybound-regions.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-earlybound-regions.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex3-both-anon-regions-both-are-structs-earlybound-regions.rs:18:12\n-   |\n-LL |     x.push(y); //~ ERROR lifetime mismatch\n-   |            ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-both-are-structs-earlybound-regions.rs:18:5\n    |"}, {"sha": "f38dceb331bfb12021f361dc224f3fe9d01b1027", "filename": "src/test/ui/lifetimes/lifetime-errors/ex3-both-anon-regions-both-are-structs-latebound-regions.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-latebound-regions.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-latebound-regions.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-latebound-regions.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex3-both-anon-regions-both-are-structs-latebound-regions.rs:15:12\n-   |\n-LL |     x.push(y); //~ ERROR lifetime mismatch\n-   |            ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-both-are-structs-latebound-regions.rs:15:5\n    |"}, {"sha": "39a7154c8e9555e29dcff7563f38c50b5d1bcb3c", "filename": "src/test/ui/lifetimes/lifetime-errors/ex3-both-anon-regions-both-are-structs.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex3-both-anon-regions-both-are-structs.rs:15:12\n-   |\n-LL |     x.push(y); //~ ERROR lifetime mismatch\n-   |            ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-both-are-structs.rs:15:5\n    |"}, {"sha": "d59480cefcc698a788a42884ce7fa2dd6f4c00e2", "filename": "src/test/ui/lifetimes/lifetime-errors/ex3-both-anon-regions-latebound-regions.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-latebound-regions.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-latebound-regions.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-latebound-regions.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex3-both-anon-regions-latebound-regions.rs:12:12\n-   |\n-LL |     x.push(y); //~ ERROR lifetime mismatch\n-   |            ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-latebound-regions.rs:12:5\n    |"}, {"sha": "749b576092967e9553dd99172c1fe7a1a7b1fa60", "filename": "src/test/ui/lifetimes/lifetime-errors/ex3-both-anon-regions-one-is-struct-2.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-one-is-struct-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-one-is-struct-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-one-is-struct-2.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex3-both-anon-regions-one-is-struct-2.rs:14:9\n-   |\n-LL |     y = x.b; //~ ERROR lifetime mismatch\n-   |         ^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-one-is-struct-2.rs:14:5\n    |"}, {"sha": "d098354d98393cb71bd246d6c1f4fee886fb1c48", "filename": "src/test/ui/lifetimes/lifetime-errors/ex3-both-anon-regions-one-is-struct-3.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-one-is-struct-3.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-one-is-struct-3.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-one-is-struct-3.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex3-both-anon-regions-one-is-struct-3.rs:14:11\n-   |\n-LL |     y.b = x; //~ ERROR lifetime mismatch\n-   |           ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-one-is-struct-3.rs:14:5\n    |"}, {"sha": "17a70aa85beeb5aa852692833ed8f5fce5d1a71d", "filename": "src/test/ui/lifetimes/lifetime-errors/ex3-both-anon-regions-one-is-struct-4.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-one-is-struct-4.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-one-is-struct-4.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-one-is-struct-4.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex3-both-anon-regions-one-is-struct-4.rs:14:11\n-   |\n-LL |     y.b = x; //~ ERROR lifetime mismatch\n-   |           ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-one-is-struct-4.rs:14:5\n    |"}, {"sha": "2ebdedddc5075c9580af45ff1dd0dcf61699f695", "filename": "src/test/ui/lifetimes/lifetime-errors/ex3-both-anon-regions-one-is-struct.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-one-is-struct.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-one-is-struct.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-one-is-struct.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex3-both-anon-regions-one-is-struct.rs:17:11\n-   |\n-LL |     x.b = y; //~ ERROR lifetime mismatch\n-   |           ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-one-is-struct.rs:17:5\n    |"}, {"sha": "898f997779d1db29e25074b5f94ebf045788fbf2", "filename": "src/test/ui/lifetimes/lifetime-errors/ex3-both-anon-regions-return-type-is-anon.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-return-type-is-anon.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-return-type-is-anon.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-return-type-is-anon.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex3-both-anon-regions-return-type-is-anon.rs:17:5\n-   |\n-LL |     x //~ ERROR lifetime mismatch\n-   |     ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-return-type-is-anon.rs:17:5\n    |"}, {"sha": "bdb9b306cdaea7c5433a6936b019c8cf0f2bb505", "filename": "src/test/ui/lifetimes/lifetime-errors/ex3-both-anon-regions-self-is-anon.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-self-is-anon.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-self-is-anon.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-self-is-anon.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex3-both-anon-regions-self-is-anon.rs:17:19\n-   |\n-LL |         if true { x } else { self } //~ ERROR lifetime mismatch\n-   |                   ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-self-is-anon.rs:17:19\n    |"}, {"sha": "2e4df170d6cd5936a2a5e9b0db21db2701746104", "filename": "src/test/ui/lifetimes/lifetime-errors/ex3-both-anon-regions-using-fn-items.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-using-fn-items.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-using-fn-items.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-using-fn-items.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex3-both-anon-regions-using-fn-items.rs:11:10\n-   |\n-LL |   y.push(z); //~ ERROR lifetime mismatch\n-   |          ^\n-\n error[E0596]: cannot borrow `y` as mutable, as it is not declared as mutable\n   --> $DIR/ex3-both-anon-regions-using-fn-items.rs:11:3\n    |"}, {"sha": "8d743608438ba06653ebd5d46d1b2a13d14b5bb6", "filename": "src/test/ui/lifetimes/lifetime-errors/ex3-both-anon-regions-using-impl-items.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-using-impl-items.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-using-impl-items.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-using-impl-items.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex3-both-anon-regions-using-impl-items.rs:15:16\n-   |\n-LL |         x.push(y); //~ ERROR lifetime mismatch\n-   |                ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions-using-impl-items.rs:15:9\n    |"}, {"sha": "a2dc0e4bda3b797bdaa85c565a5a6855c8580445", "filename": "src/test/ui/lifetimes/lifetime-errors/ex3-both-anon-regions-using-trait-objects.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-using-trait-objects.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-using-trait-objects.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions-using-trait-objects.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex3-both-anon-regions-using-trait-objects.rs:11:10\n-   |\n-LL |   y.push(z); //~ ERROR lifetime mismatch\n-   |          ^\n-\n error[E0596]: cannot borrow `y` as mutable, as it is not declared as mutable\n   --> $DIR/ex3-both-anon-regions-using-trait-objects.rs:11:3\n    |"}, {"sha": "0d674162eea05372e8cc3855f789edb9d554193f", "filename": "src/test/ui/lifetimes/lifetime-errors/ex3-both-anon-regions.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex3-both-anon-regions.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ex3-both-anon-regions.rs:12:12\n-   |\n-LL |     x.push(y); //~ ERROR lifetime mismatch\n-   |            ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/ex3-both-anon-regions.rs:12:5\n    |"}, {"sha": "2405e30a8cd005db3a69bab6c1b20eedac7bbcc1", "filename": "src/test/ui/lub-if.nll.stderr", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flub-if.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flub-if.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flub-if.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,15 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/lub-if.rs:38:9\n-   |\n-LL |         s  //~ ERROR E0312\n-   |         ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/lub-if.rs:45:9\n-   |\n-LL |         s  //~ ERROR E0312\n-   |         ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/lub-if.rs:38:9\n    |"}, {"sha": "5a39dd14e4c42f51b94c46605e5a80bd60ea360f", "filename": "src/test/ui/lub-match.nll.stderr", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flub-match.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Flub-match.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flub-match.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,15 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/lub-match.rs:40:13\n-   |\n-LL |             s //~ ERROR E0312\n-   |             ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/lub-match.rs:49:13\n-   |\n-LL |             s //~ ERROR E0312\n-   |             ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/lub-match.rs:40:13\n    |"}, {"sha": "d5167bbaeab07233eae4bc69d1a7b3a04f2b3636", "filename": "src/test/ui/match/match-ref-mut-invariance.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fmatch%2Fmatch-ref-mut-invariance.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fmatch%2Fmatch-ref-mut-invariance.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fmatch-ref-mut-invariance.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/match-ref-mut-invariance.rs:20:37\n-   |\n-LL |         match self.0 { ref mut x => x } //~ ERROR mismatched types\n-   |                                     ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/match-ref-mut-invariance.rs:20:9\n    |"}, {"sha": "54915865d8899a0526fa25c98f9b4294659c1286", "filename": "src/test/ui/match/match-ref-mut-let-invariance.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fmatch%2Fmatch-ref-mut-let-invariance.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fmatch%2Fmatch-ref-mut-let-invariance.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fmatch-ref-mut-let-invariance.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/match-ref-mut-let-invariance.rs:21:9\n-   |\n-LL |         x //~ ERROR mismatched types\n-   |         ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/match-ref-mut-let-invariance.rs:21:9\n    |"}, {"sha": "3c417493bc5791157f7abb29f4a5d48fa0827a58", "filename": "src/test/ui/nll/closure-requirements/escape-argument-callee.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fescape-argument-callee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fescape-argument-callee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fescape-argument-callee.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -35,7 +35,6 @@ fn test() {\n         let y = 22;\n         let mut closure = expect_sig(|p, y| *p = y);\n         //~^ ERROR\n-        //~| WARNING not reporting region error due to nll\n         closure(&mut p, &y);\n     }\n "}, {"sha": "72b60188c4c6c8822405b99a2d022bafe3b53dc4", "filename": "src/test/ui/nll/closure-requirements/escape-argument-callee.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fescape-argument-callee.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fescape-argument-callee.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fescape-argument-callee.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/escape-argument-callee.rs:36:50\n-   |\n-LL |         let mut closure = expect_sig(|p, y| *p = y);\n-   |                                                  ^\n-\n note: No external requirements\n   --> $DIR/escape-argument-callee.rs:36:38\n    |"}, {"sha": "4f2ec80b0d2515c2f1f460822739c52713fc7a90", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-fail-no-postdom.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-fail-no-postdom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-fail-no-postdom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-fail-no-postdom.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -53,7 +53,6 @@ fn supply<'a, 'b, 'c>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>, cell_c: Cell\n         |_outlives1, _outlives2, _outlives3, x, y| {\n             // Only works if 'x: 'y:\n             let p = x.get();\n-            //~^ WARN not reporting region error due to nll\n             demand_y(x, y, p) //~ ERROR\n         },\n     );"}, {"sha": "892910686433a584d081d4300a81891a86c7e708", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-fail-no-postdom.stderr", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-fail-no-postdom.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-fail-no-postdom.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-fail-no-postdom.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,16 +1,9 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/propagate-approximated-fail-no-postdom.rs:55:21\n-   |\n-LL |             let p = x.get();\n-   |                     ^^^^^^^\n-\n note: No external requirements\n   --> $DIR/propagate-approximated-fail-no-postdom.rs:53:9\n    |\n LL | /         |_outlives1, _outlives2, _outlives3, x, y| {\n LL | |             // Only works if 'x: 'y:\n LL | |             let p = x.get();\n-LL | |             //~^ WARN not reporting region error due to nll\n LL | |             demand_y(x, y, p) //~ ERROR\n LL | |         },\n    | |_________^\n@@ -21,7 +14,7 @@ LL | |         },\n            ]\n \n error: unsatisfied lifetime constraints\n-  --> $DIR/propagate-approximated-fail-no-postdom.rs:57:13\n+  --> $DIR/propagate-approximated-fail-no-postdom.rs:56:13\n    |\n LL |         |_outlives1, _outlives2, _outlives3, x, y| {\n    |          ----------              ---------- has type `std::cell::Cell<&'2 &u32>`"}, {"sha": "700c0dffb70115e70d6dfa5969307258414c7c91", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -54,7 +54,7 @@ fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n         //~^ ERROR unsatisfied lifetime constraints\n \n         // Only works if 'x: 'y:\n-        demand_y(x, y, x.get()) //~ WARNING not reporting region error due to nll\n+        demand_y(x, y, x.get())\n     });\n }\n "}, {"sha": "1ff9374c2126778b887f18f1d9606ea3a0f6ad2f", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-ref.stderr", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/propagate-approximated-ref.rs:57:9\n-   |\n-LL |         demand_y(x, y, x.get()) //~ WARNING not reporting region error due to nll\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^\n-\n note: External requirements\n   --> $DIR/propagate-approximated-ref.rs:53:47\n    |\n@@ -12,7 +6,7 @@ LL |       establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x,\n LL | |         //~^ ERROR unsatisfied lifetime constraints\n LL | |\n LL | |         // Only works if 'x: 'y:\n-LL | |         demand_y(x, y, x.get()) //~ WARNING not reporting region error due to nll\n+LL | |         demand_y(x, y, x.get())\n LL | |     });\n    | |_____^\n    |\n@@ -48,7 +42,7 @@ LL | /     establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x,\n LL | |         //~^ ERROR unsatisfied lifetime constraints\n LL | |\n LL | |         // Only works if 'x: 'y:\n-LL | |         demand_y(x, y, x.get()) //~ WARNING not reporting region error due to nll\n+LL | |         demand_y(x, y, x.get())\n LL | |     });\n    | |______^ argument requires that `'a` must outlive `'b`\n "}, {"sha": "54f9453797e6d410c35247784e5f86a7a91b1424", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-comparing-against-free.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-comparing-against-free.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-comparing-against-free.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-comparing-against-free.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -29,7 +29,6 @@ fn case1() {\n     let a = 0;\n     let cell = Cell::new(&a);\n     foo(cell, |cell_a, cell_x| {\n-        //~^ WARNING not reporting region error due to nll\n         cell_a.set(cell_x.get()); // forces 'x: 'a, error in closure\n         //~^ ERROR\n     })"}, {"sha": "c855cee3c606ae9e72326b67bc5f07f59ae734a0", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-comparing-against-free.stderr", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-comparing-against-free.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-comparing-against-free.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-comparing-against-free.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,15 +1,8 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/propagate-approximated-shorter-to-static-comparing-against-free.rs:31:5\n-   |\n-LL |     foo(cell, |cell_a, cell_x| {\n-   |     ^^^\n-\n note: No external requirements\n   --> $DIR/propagate-approximated-shorter-to-static-comparing-against-free.rs:31:15\n    |\n LL |       foo(cell, |cell_a, cell_x| {\n    |  _______________^\n-LL | |         //~^ WARNING not reporting region error due to nll\n LL | |         cell_a.set(cell_x.get()); // forces 'x: 'a, error in closure\n LL | |         //~^ ERROR\n LL | |     })\n@@ -21,13 +14,12 @@ LL | |     })\n            ]\n \n error: borrowed data escapes outside of closure\n-  --> $DIR/propagate-approximated-shorter-to-static-comparing-against-free.rs:33:9\n+  --> $DIR/propagate-approximated-shorter-to-static-comparing-against-free.rs:32:9\n    |\n LL |     foo(cell, |cell_a, cell_x| {\n    |                ------  ------ `cell_x` is a reference that is only valid in the closure body\n    |                |\n    |                `cell_a` is declared here, outside of the closure body\n-LL |         //~^ WARNING not reporting region error due to nll\n LL |         cell_a.set(cell_x.get()); // forces 'x: 'a, error in closure\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^ `cell_x` escapes the closure body here\n \n@@ -46,7 +38,7 @@ LL | | }\n    = note: defining type: DefId(0/0:5 ~ propagate_approximated_shorter_to_static_comparing_against_free[317d]::case1[0]) with substs []\n \n note: External requirements\n-  --> $DIR/propagate-approximated-shorter-to-static-comparing-against-free.rs:46:15\n+  --> $DIR/propagate-approximated-shorter-to-static-comparing-against-free.rs:45:15\n    |\n LL |       foo(cell, |cell_a, cell_x| {\n    |  _______________^\n@@ -62,7 +54,7 @@ LL | |     })\n    = note: where '_#1r: '_#0r\n \n note: No external requirements\n-  --> $DIR/propagate-approximated-shorter-to-static-comparing-against-free.rs:39:1\n+  --> $DIR/propagate-approximated-shorter-to-static-comparing-against-free.rs:38:1\n    |\n LL | / fn case2() {\n LL | |     let a = 0;\n@@ -76,7 +68,7 @@ LL | | }\n    = note: defining type: DefId(0/0:6 ~ propagate_approximated_shorter_to_static_comparing_against_free[317d]::case2[0]) with substs []\n \n error[E0597]: `a` does not live long enough\n-  --> $DIR/propagate-approximated-shorter-to-static-comparing-against-free.rs:41:26\n+  --> $DIR/propagate-approximated-shorter-to-static-comparing-against-free.rs:40:26\n    |\n LL |     let cell = Cell::new(&a);\n    |                          ^^ borrowed value does not live long enough"}, {"sha": "e32a4395f88e1e317721e9833191cdd5cfbbe85b", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-no-bound.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -46,7 +46,7 @@ fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n         //~^ ERROR\n \n         // Only works if 'x: 'y:\n-        demand_y(x, y, x.get()) //~ WARNING not reporting region error due to nll\n+        demand_y(x, y, x.get())\n     });\n }\n "}, {"sha": "0d4793563048410014301e94fa2aa0c12fe92d89", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-no-bound.stderr", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/propagate-approximated-shorter-to-static-no-bound.rs:49:9\n-   |\n-LL |         demand_y(x, y, x.get()) //~ WARNING not reporting region error due to nll\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^\n-\n note: External requirements\n   --> $DIR/propagate-approximated-shorter-to-static-no-bound.rs:45:47\n    |\n@@ -12,7 +6,7 @@ LL |       establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {\n LL | |         //~^ ERROR\n LL | |\n LL | |         // Only works if 'x: 'y:\n-LL | |         demand_y(x, y, x.get()) //~ WARNING not reporting region error due to nll\n+LL | |         demand_y(x, y, x.get())\n LL | |     });\n    | |_____^\n    |\n@@ -46,7 +40,7 @@ LL | /     establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {\n LL | |         //~^ ERROR\n LL | |\n LL | |         // Only works if 'x: 'y:\n-LL | |         demand_y(x, y, x.get()) //~ WARNING not reporting region error due to nll\n+LL | |         demand_y(x, y, x.get())\n LL | |     });\n    | |______^ `cell_a` escapes the function body here\n "}, {"sha": "0334f9ffd86fcc67872c26bb2312903e4745b755", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-wrong-bound.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -49,7 +49,6 @@ fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n         //~^ ERROR\n         // Only works if 'x: 'y:\n         demand_y(x, y, x.get())\n-        //~^ WARNING not reporting region error due to nll\n     });\n }\n "}, {"sha": "88743169fcbeeb1174c4e31fe56c004ff8c6d879", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-wrong-bound.stderr", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/propagate-approximated-shorter-to-static-wrong-bound.rs:51:9\n-   |\n-LL |         demand_y(x, y, x.get())\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^\n-\n note: External requirements\n   --> $DIR/propagate-approximated-shorter-to-static-wrong-bound.rs:48:47\n    |\n@@ -12,7 +6,6 @@ LL |       establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x,\n LL | |         //~^ ERROR\n LL | |         // Only works if 'x: 'y:\n LL | |         demand_y(x, y, x.get())\n-LL | |         //~^ WARNING not reporting region error due to nll\n LL | |     });\n    | |_____^\n    |\n@@ -30,7 +23,7 @@ LL | / fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n LL | |     establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n LL | |         //~^ ERROR\n LL | |         // Only works if 'x: 'y:\n-...  |\n+LL | |         demand_y(x, y, x.get())\n LL | |     });\n LL | | }\n    | |_^\n@@ -46,7 +39,6 @@ LL | /     establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x,\n LL | |         //~^ ERROR\n LL | |         // Only works if 'x: 'y:\n LL | |         demand_y(x, y, x.get())\n-LL | |         //~^ WARNING not reporting region error due to nll\n LL | |     });\n    | |______^ `cell_a` escapes the function body here\n "}, {"sha": "75641943f2fac9bda57f92827d686f46114251a9", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-val.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -47,7 +47,7 @@ fn test<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n         //~^ ERROR unsatisfied lifetime constraints\n \n         // Only works if 'x: 'y:\n-        demand_y(outlives1, outlives2, x.get()) //~ WARNING not reporting region error due to nll\n+        demand_y(outlives1, outlives2, x.get())\n     });\n }\n "}, {"sha": "71dbc412fef4cde59c81dca0e81815a23328a07a", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-val.stderr", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/propagate-approximated-val.rs:50:9\n-   |\n-LL |         demand_y(outlives1, outlives2, x.get()) //~ WARNING not reporting region error due to nll\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n note: External requirements\n   --> $DIR/propagate-approximated-val.rs:46:45\n    |\n@@ -12,7 +6,7 @@ LL |       establish_relationships(cell_a, cell_b, |outlives1, outlives2, x, y|\n LL | |         //~^ ERROR unsatisfied lifetime constraints\n LL | |\n LL | |         // Only works if 'x: 'y:\n-LL | |         demand_y(outlives1, outlives2, x.get()) //~ WARNING not reporting region error due to nll\n+LL | |         demand_y(outlives1, outlives2, x.get())\n LL | |     });\n    | |_____^\n    |\n@@ -48,7 +42,7 @@ LL | /     establish_relationships(cell_a, cell_b, |outlives1, outlives2, x, y|\n LL | |         //~^ ERROR unsatisfied lifetime constraints\n LL | |\n LL | |         // Only works if 'x: 'y:\n-LL | |         demand_y(outlives1, outlives2, x.get()) //~ WARNING not reporting region error due to nll\n+LL | |         demand_y(outlives1, outlives2, x.get())\n LL | |     });\n    | |______^ argument requires that `'a` must outlive `'b`\n "}, {"sha": "d189385213fa11aee94ee2c50d8379075fd9203e", "filename": "src/test/ui/nll/closure-requirements/propagate-despite-same-free-region.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-despite-same-free-region.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-despite-same-free-region.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-despite-same-free-region.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/propagate-despite-same-free-region.rs:54:21\n-   |\n-LL |             let p = x.get();\n-   |                     ^^^^^^^\n-\n note: External requirements\n   --> $DIR/propagate-despite-same-free-region.rs:52:9\n    |"}, {"sha": "31f38abf2802230a861aeea0f0c8ee64c6b9a0a6", "filename": "src/test/ui/nll/closure-requirements/propagate-fail-to-approximate-longer-no-bounds.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-no-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-no-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-no-bounds.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -45,8 +45,7 @@ fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n     establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {\n         // Only works if 'x: 'y:\n         demand_y(x, y, x.get())\n-        //~^ WARN not reporting region error due to nll\n-        //~| ERROR\n+        //~^ ERROR\n     });\n }\n "}, {"sha": "a63c6b1670837ccfc4b48b8ec292eb84fc48b5a6", "filename": "src/test/ui/nll/closure-requirements/propagate-fail-to-approximate-longer-no-bounds.stderr", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-no-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-no-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-no-bounds.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,18 +1,11 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/propagate-fail-to-approximate-longer-no-bounds.rs:47:9\n-   |\n-LL |         demand_y(x, y, x.get())\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^\n-\n note: No external requirements\n   --> $DIR/propagate-fail-to-approximate-longer-no-bounds.rs:45:47\n    |\n LL |       establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {\n    |  _______________________________________________^\n LL | |         // Only works if 'x: 'y:\n LL | |         demand_y(x, y, x.get())\n-LL | |         //~^ WARN not reporting region error due to nll\n-LL | |         //~| ERROR\n+LL | |         //~^ ERROR\n LL | |     });\n    | |_____^\n    |\n@@ -39,7 +32,7 @@ LL | / fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n LL | |     establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {\n LL | |         // Only works if 'x: 'y:\n LL | |         demand_y(x, y, x.get())\n-...  |\n+LL | |         //~^ ERROR\n LL | |     });\n LL | | }\n    | |_^"}, {"sha": "a4ff408b76625cd961854e165576de8cfba0e3ee", "filename": "src/test/ui/nll/closure-requirements/propagate-fail-to-approximate-longer-wrong-bounds.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-wrong-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-wrong-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-wrong-bounds.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -49,8 +49,7 @@ fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n     establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n         // Only works if 'x: 'y:\n         demand_y(x, y, x.get())\n-        //~^ WARN not reporting region error due to nll\n-        //~| ERROR\n+        //~^ ERROR\n     });\n }\n "}, {"sha": "67510a5a81f11f9ffd5fffbd7eccb78860d3873a", "filename": "src/test/ui/nll/closure-requirements/propagate-fail-to-approximate-longer-wrong-bounds.stderr", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-wrong-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-wrong-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-wrong-bounds.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,18 +1,11 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/propagate-fail-to-approximate-longer-wrong-bounds.rs:51:9\n-   |\n-LL |         demand_y(x, y, x.get())\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^\n-\n note: No external requirements\n   --> $DIR/propagate-fail-to-approximate-longer-wrong-bounds.rs:49:47\n    |\n LL |       establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n    |  _______________________________________________^\n LL | |         // Only works if 'x: 'y:\n LL | |         demand_y(x, y, x.get())\n-LL | |         //~^ WARN not reporting region error due to nll\n-LL | |         //~| ERROR\n+LL | |         //~^ ERROR\n LL | |     });\n    | |_____^\n    |\n@@ -39,7 +32,7 @@ LL | / fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n LL | |     establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n LL | |         // Only works if 'x: 'y:\n LL | |         demand_y(x, y, x.get())\n-...  |\n+LL | |         //~^ ERROR\n LL | |     });\n LL | | }\n    | |_^"}, {"sha": "a6542d73fdb557244474007c16330996c8a4282f", "filename": "src/test/ui/nll/closure-requirements/propagate-from-trait-match.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-from-trait-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-from-trait-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-from-trait-match.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -53,7 +53,6 @@ where\n         // The latter does not hold.\n \n         require(value);\n-        //~^ WARNING not reporting region error due to nll\n     });\n }\n "}, {"sha": "fda9743fb6b9beeea309f181b46a5a38c4ad8355", "filename": "src/test/ui/nll/closure-requirements/propagate-from-trait-match.stderr", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-from-trait-match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-from-trait-match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-from-trait-match.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/propagate-from-trait-match.rs:55:9\n-   |\n-LL |         require(value);\n-   |         ^^^^^^^\n-\n note: External requirements\n   --> $DIR/propagate-from-trait-match.rs:42:36\n    |\n@@ -13,7 +7,7 @@ LL | |         //~^ ERROR the parameter type `T` may not live long enough\n LL | |\n LL | |         // This function call requires that\n ...  |\n-LL | |         //~^ WARNING not reporting region error due to nll\n+LL | |         require(value);\n LL | |     });\n    | |_____^\n    |\n@@ -52,7 +46,7 @@ LL | |         //~^ ERROR the parameter type `T` may not live long enough\n LL | |\n LL | |         // This function call requires that\n ...  |\n-LL | |         //~^ WARNING not reporting region error due to nll\n+LL | |         require(value);\n LL | |     });\n    | |_____^\n    |"}, {"sha": "4382be05f031b8db9a0ff71e8ad1f03c7c2a958e", "filename": "src/test/ui/nll/closure-requirements/region-lbr-anon-does-not-outlive-static.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr-anon-does-not-outlive-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr-anon-does-not-outlive-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr-anon-does-not-outlive-static.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -17,8 +17,7 @@\n \n fn foo(x: &u32) -> &'static u32 {\n     &*x\n-        //~^ WARN not reporting region error due to nll\n-        //~| ERROR explicit lifetime required in the type of `x`\n+        //~^ ERROR explicit lifetime required in the type of `x`\n }\n \n fn main() { }"}, {"sha": "9962e801653b3011b13c858aa0310ee8ba3d0974", "filename": "src/test/ui/nll/closure-requirements/region-lbr-anon-does-not-outlive-static.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr-anon-does-not-outlive-static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr-anon-does-not-outlive-static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr-anon-does-not-outlive-static.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/region-lbr-anon-does-not-outlive-static.rs:19:5\n-   |\n-LL |     &*x\n-   |     ^^^\n-\n error[E0621]: explicit lifetime required in the type of `x`\n   --> $DIR/region-lbr-anon-does-not-outlive-static.rs:19:5\n    |"}, {"sha": "d2dcfd86ac096641c40023dbf3555ef76a4c99e4", "filename": "src/test/ui/nll/closure-requirements/region-lbr-named-does-not-outlive-static.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr-named-does-not-outlive-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr-named-does-not-outlive-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr-named-does-not-outlive-static.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -17,8 +17,7 @@\n \n fn foo<'a>(x: &'a u32) -> &'static u32 {\n     &*x\n-        //~^ WARN not reporting region error due to nll\n-        //~| ERROR\n+        //~^ ERROR\n }\n \n fn main() { }"}, {"sha": "ff36017c3d0e581f7b3eade1df69daa4b4635426", "filename": "src/test/ui/nll/closure-requirements/region-lbr-named-does-not-outlive-static.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr-named-does-not-outlive-static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr-named-does-not-outlive-static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr-named-does-not-outlive-static.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/region-lbr-named-does-not-outlive-static.rs:19:5\n-   |\n-LL |     &*x\n-   |     ^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/region-lbr-named-does-not-outlive-static.rs:19:5\n    |"}, {"sha": "d793b0ba0be58fecd0466cef2e8a07e0c1af450f", "filename": "src/test/ui/nll/closure-requirements/region-lbr1-does-not-outlive-ebr2.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr1-does-not-outlive-ebr2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr1-does-not-outlive-ebr2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr1-does-not-outlive-ebr2.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -17,8 +17,7 @@\n \n fn foo<'a, 'b>(x: &'a u32, y: &'b u32) -> &'b u32 {\n     &*x\n-        //~^ WARN not reporting region error due to nll\n-        //~| ERROR unsatisfied lifetime constraints\n+        //~^ ERROR unsatisfied lifetime constraints\n }\n \n fn main() { }"}, {"sha": "2392e75538d37948e05b6d01c39277415604f7d9", "filename": "src/test/ui/nll/closure-requirements/region-lbr1-does-not-outlive-ebr2.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr1-does-not-outlive-ebr2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr1-does-not-outlive-ebr2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr1-does-not-outlive-ebr2.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/region-lbr1-does-not-outlive-ebr2.rs:19:5\n-   |\n-LL |     &*x\n-   |     ^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/region-lbr1-does-not-outlive-ebr2.rs:19:5\n    |"}, {"sha": "d45b7182305a8a1d944c8d02a67b0c1a1f0c4693", "filename": "src/test/ui/nll/closure-requirements/return-wrong-bound-region.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Freturn-wrong-bound-region.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Freturn-wrong-bound-region.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Freturn-wrong-bound-region.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -19,8 +19,7 @@\n #[rustc_regions]\n fn test() {\n     expect_sig(|a, b| b); // ought to return `a`\n-    //~^ WARN not reporting region error due to nll\n-    //~| ERROR\n+    //~^ ERROR\n }\n \n fn expect_sig<F>(f: F) -> F"}, {"sha": "d3eb3d46d21e78893d9ba0f8fafa7ab797fbc7f9", "filename": "src/test/ui/nll/closure-requirements/return-wrong-bound-region.stderr", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Freturn-wrong-bound-region.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Freturn-wrong-bound-region.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Freturn-wrong-bound-region.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/return-wrong-bound-region.rs:21:23\n-   |\n-LL |     expect_sig(|a, b| b); // ought to return `a`\n-   |                       ^\n-\n note: No external requirements\n   --> $DIR/return-wrong-bound-region.rs:21:16\n    |\n@@ -29,8 +23,7 @@ note: No external requirements\n    |\n LL | / fn test() {\n LL | |     expect_sig(|a, b| b); // ought to return `a`\n-LL | |     //~^ WARN not reporting region error due to nll\n-LL | |     //~| ERROR\n+LL | |     //~^ ERROR\n LL | | }\n    | |_^\n    |"}, {"sha": "577fdd7b548645109cee27ce9abaca76670374d5", "filename": "src/test/ui/nll/mir_check_cast_closure.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_closure.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -15,8 +15,7 @@\n fn bar<'a, 'b>() -> fn(&'a u32, &'b u32) -> &'a u32 {\n     let g: fn(_, _) -> _ = |_x, y| y;\n     g\n-    //~^ WARNING not reporting region error due to nll\n-    //~^^ ERROR unsatisfied lifetime constraints\n+    //~^ ERROR unsatisfied lifetime constraints\n }\n \n fn main() {}"}, {"sha": "6433668031b9806b7c27758a3f92de67c5d3433b", "filename": "src/test/ui/nll/mir_check_cast_closure.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_closure.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/mir_check_cast_closure.rs:17:5\n-   |\n-LL |     g\n-   |     ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/mir_check_cast_closure.rs:17:5\n    |"}, {"sha": "93f10b96c222097c9ea52ab7fad7551258cb8a25", "filename": "src/test/ui/nll/mir_check_cast_reify.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_reify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_reify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_reify.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -44,7 +44,6 @@ fn bar<'a>(x: &'a u32) -> &'static u32 {\n     // The MIR type checker must therefore relate `'?0` to `'?1` and `'?2`\n     // as part of checking the `ReifyFnPointer`.\n     let f: fn(_) -> _ = foo;\n-    //~^ WARNING not reporting region error due to nll\n     f(x)\n     //~^ ERROR\n }"}, {"sha": "fdb71b17287d9a8b57f243dd93310c4cf448cdbc", "filename": "src/test/ui/nll/mir_check_cast_reify.stderr", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_reify.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_reify.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_reify.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,11 +1,5 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/mir_check_cast_reify.rs:46:25\n-   |\n-LL |     let f: fn(_) -> _ = foo;\n-   |                         ^^^\n-\n error: unsatisfied lifetime constraints\n-  --> $DIR/mir_check_cast_reify.rs:48:5\n+  --> $DIR/mir_check_cast_reify.rs:47:5\n    |\n LL | fn bar<'a>(x: &'a u32) -> &'static u32 {\n    |        -- lifetime `'a` defined here"}, {"sha": "71dcfc8886cc55ee3ad6ece3a7d130abe1ef3181", "filename": "src/test/ui/nll/mir_check_cast_unsafe_fn.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsafe_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsafe_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsafe_fn.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -16,7 +16,6 @@ fn bar<'a>(input: &'a u32, f: fn(&'a u32) -> &'a u32) -> &'static u32 {\n     // Here the NLL checker must relate the types in `f` to the types\n     // in `g`. These are related via the `UnsafeFnPointer` cast.\n     let g: unsafe fn(_) -> _ = f;\n-    //~^ WARNING not reporting region error due to nll\n     unsafe { g(input) }\n     //~^ ERROR\n }"}, {"sha": "c14fb93a525e5bd4ef7de01384362c218561fbbb", "filename": "src/test/ui/nll/mir_check_cast_unsafe_fn.stderr", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsafe_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsafe_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsafe_fn.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,11 +1,5 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/mir_check_cast_unsafe_fn.rs:18:32\n-   |\n-LL |     let g: unsafe fn(_) -> _ = f;\n-   |                                ^\n-\n error: unsatisfied lifetime constraints\n-  --> $DIR/mir_check_cast_unsafe_fn.rs:20:14\n+  --> $DIR/mir_check_cast_unsafe_fn.rs:19:14\n    |\n LL | fn bar<'a>(input: &'a u32, f: fn(&'a u32) -> &'a u32) -> &'static u32 {\n    |        -- lifetime `'a` defined here"}, {"sha": "b1889b8aab2fe979bea8a69163a052ec3cf4edca", "filename": "src/test/ui/nll/mir_check_cast_unsize.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsize.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -17,7 +17,6 @@ use std::fmt::Debug;\n fn bar<'a>(x: &'a u32) -> &'static dyn Debug {\n     x\n     //~^ ERROR unsatisfied lifetime constraints\n-    //~| WARNING not reporting region error due to nll\n }\n \n fn main() {}"}, {"sha": "526dfb6013386b222d020be4eb648aafe7100a97", "filename": "src/test/ui/nll/mir_check_cast_unsize.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsize.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsize.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsize.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/mir_check_cast_unsize.rs:18:5\n-   |\n-LL |     x\n-   |     ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/mir_check_cast_unsize.rs:18:5\n    |"}, {"sha": "3d9b194484565b0401b428e04e9b8c46acbac89a", "filename": "src/test/ui/nll/ty-outlives/impl-trait-captures.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fimpl-trait-captures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fimpl-trait-captures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fimpl-trait-captures.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -19,8 +19,7 @@ impl<'a, T> Foo<'a> for T { }\n \n fn foo<'a, T>(x: &T) -> impl Foo<'a> {\n     x\n-        //~^ WARNING not reporting region error due to nll\n-        //~| ERROR explicit lifetime required in the type of `x` [E0621]\n+        //~^ ERROR explicit lifetime required in the type of `x` [E0621]\n }\n \n fn main() {}"}, {"sha": "7cf24a1967701b865520e21df594b4933dfaefe8", "filename": "src/test/ui/nll/ty-outlives/impl-trait-captures.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fimpl-trait-captures.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fimpl-trait-captures.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fimpl-trait-captures.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/impl-trait-captures.rs:21:5\n-   |\n-LL |     x\n-   |     ^\n-\n error[E0621]: explicit lifetime required in the type of `x`\n   --> $DIR/impl-trait-captures.rs:21:5\n    |"}, {"sha": "4366636589223fc3808100311e8536f5b59cc5f1", "filename": "src/test/ui/nll/ty-outlives/impl-trait-outlives.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fimpl-trait-outlives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fimpl-trait-outlives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fimpl-trait-outlives.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -15,7 +15,6 @@\n use std::fmt::Debug;\n \n fn no_region<'a, T>(x: Box<T>) -> impl Debug + 'a\n-    //~^ WARNING not reporting region error due to nll\n where\n     T: Debug,\n {\n@@ -31,7 +30,6 @@ where\n }\n \n fn wrong_region<'a, 'b, T>(x: Box<T>) -> impl Debug + 'a\n-    //~^ WARNING not reporting region error due to nll\n where\n     T: 'b + Debug,\n {"}, {"sha": "05b674f8a9db5207a731cd247a25ac46a9966697", "filename": "src/test/ui/nll/ty-outlives/impl-trait-outlives.stderr", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fimpl-trait-outlives.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fimpl-trait-outlives.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fimpl-trait-outlives.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,25 +1,13 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/impl-trait-outlives.rs:17:35\n-   |\n-LL | fn no_region<'a, T>(x: Box<T>) -> impl Debug + 'a\n-   |                                   ^^^^^^^^^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/impl-trait-outlives.rs:33:42\n-   |\n-LL | fn wrong_region<'a, 'b, T>(x: Box<T>) -> impl Debug + 'a\n-   |                                          ^^^^^^^^^^^^^^^\n-\n error[E0309]: the parameter type `T` may not live long enough\n-  --> $DIR/impl-trait-outlives.rs:22:5\n+  --> $DIR/impl-trait-outlives.rs:21:5\n    |\n LL |     x\n    |     ^\n    |\n    = help: consider adding an explicit lifetime bound `T: ReEarlyBound(0, 'a)`...\n \n error[E0309]: the parameter type `T` may not live long enough\n-  --> $DIR/impl-trait-outlives.rs:38:5\n+  --> $DIR/impl-trait-outlives.rs:36:5\n    |\n LL |     x\n    |     ^"}, {"sha": "1509ac8abd93d153edb942bd451a52e1302ed693", "filename": "src/test/ui/nll/ty-outlives/projection-implied-bounds.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-implied-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-implied-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-implied-bounds.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -43,8 +43,7 @@ where\n #[rustc_errors]\n fn generic2<T: Iterator>(value: T) {\n     twice(value, |value_ref, item| invoke2(value_ref, item));\n-    //~^ WARNING not reporting region error due to nll\n-    //~| ERROR the parameter type `T` may not live long enough\n+    //~^ ERROR the parameter type `T` may not live long enough\n }\n \n fn invoke2<'a, T, U>(a: &T, b: Cell<&'a Option<U>>)"}, {"sha": "17de9f79e3231d978932406fc7be993dc25a92f5", "filename": "src/test/ui/nll/ty-outlives/projection-implied-bounds.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-implied-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-implied-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-implied-bounds.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/projection-implied-bounds.rs:45:36\n-   |\n-LL |     twice(value, |value_ref, item| invoke2(value_ref, item));\n-   |                                    ^^^^^^^\n-\n error[E0310]: the parameter type `T` may not live long enough\n   --> $DIR/projection-implied-bounds.rs:45:18\n    |"}, {"sha": "d61bbf27809dc8b07bcba076805d397cc3dd8583", "filename": "src/test/ui/nll/ty-outlives/projection-no-regions-closure.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-no-regions-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-no-regions-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-no-regions-closure.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -33,8 +33,7 @@ where\n     T: Iterator,\n {\n     with_signature(x, |mut y| Box::new(y.next()))\n-    //~^ WARNING not reporting region error due to nll\n-    //~| ERROR the associated type `<T as std::iter::Iterator>::Item` may not live long enough\n+    //~^ ERROR the associated type `<T as std::iter::Iterator>::Item` may not live long enough\n }\n \n #[rustc_regions]\n@@ -51,8 +50,7 @@ where\n     T: 'b + Iterator,\n {\n     with_signature(x, |mut y| Box::new(y.next()))\n-    //~^ WARNING not reporting region error due to nll\n-    //~| ERROR the associated type `<T as std::iter::Iterator>::Item` may not live long enough\n+    //~^ ERROR the associated type `<T as std::iter::Iterator>::Item` may not live long enough\n }\n \n #[rustc_regions]"}, {"sha": "61e9794b76e2e88fccbbcc49d221283586acf12c", "filename": "src/test/ui/nll/ty-outlives/projection-no-regions-closure.stderr", "status": "modified", "additions": 11, "deletions": 23, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-no-regions-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-no-regions-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-no-regions-closure.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,15 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/projection-no-regions-closure.rs:35:31\n-   |\n-LL |     with_signature(x, |mut y| Box::new(y.next()))\n-   |                               ^^^^^^^^^^^^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/projection-no-regions-closure.rs:53:31\n-   |\n-LL |     with_signature(x, |mut y| Box::new(y.next()))\n-   |                               ^^^^^^^^^^^^^^^^^^\n-\n note: External requirements\n   --> $DIR/projection-no-regions-closure.rs:35:23\n    |\n@@ -32,8 +20,8 @@ LL | / fn no_region<'a, T>(x: Box<T>) -> Box<dyn Anything + 'a>\n LL | | where\n LL | |     T: Iterator,\n LL | | {\n-...  |\n-LL | |     //~| ERROR the associated type `<T as std::iter::Iterator>::Item` may not live long enough\n+LL | |     with_signature(x, |mut y| Box::new(y.next()))\n+LL | |     //~^ ERROR the associated type `<T as std::iter::Iterator>::Item` may not live long enough\n LL | | }\n    | |_^\n    |\n@@ -51,7 +39,7 @@ LL |     with_signature(x, |mut y| Box::new(y.next()))\n    = help: consider adding an explicit lifetime bound `<T as std::iter::Iterator>::Item: ReEarlyBound(0, 'a)`...\n \n note: External requirements\n-  --> $DIR/projection-no-regions-closure.rs:45:23\n+  --> $DIR/projection-no-regions-closure.rs:44:23\n    |\n LL |     with_signature(x, |mut y| Box::new(y.next()))\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -66,7 +54,7 @@ LL |     with_signature(x, |mut y| Box::new(y.next()))\n    = note: where <T as std::iter::Iterator>::Item: '_#2r\n \n note: No external requirements\n-  --> $DIR/projection-no-regions-closure.rs:41:1\n+  --> $DIR/projection-no-regions-closure.rs:40:1\n    |\n LL | / fn correct_region<'a, T>(x: Box<T>) -> Box<dyn Anything + 'a>\n LL | | where\n@@ -82,7 +70,7 @@ LL | | }\n            ]\n \n note: External requirements\n-  --> $DIR/projection-no-regions-closure.rs:53:23\n+  --> $DIR/projection-no-regions-closure.rs:52:23\n    |\n LL |     with_signature(x, |mut y| Box::new(y.next()))\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -98,14 +86,14 @@ LL |     with_signature(x, |mut y| Box::new(y.next()))\n    = note: where <T as std::iter::Iterator>::Item: '_#3r\n \n note: No external requirements\n-  --> $DIR/projection-no-regions-closure.rs:49:1\n+  --> $DIR/projection-no-regions-closure.rs:48:1\n    |\n LL | / fn wrong_region<'a, 'b, T>(x: Box<T>) -> Box<dyn Anything + 'a>\n LL | | where\n LL | |     T: 'b + Iterator,\n LL | | {\n-...  |\n-LL | |     //~| ERROR the associated type `<T as std::iter::Iterator>::Item` may not live long enough\n+LL | |     with_signature(x, |mut y| Box::new(y.next()))\n+LL | |     //~^ ERROR the associated type `<T as std::iter::Iterator>::Item` may not live long enough\n LL | | }\n    | |_^\n    |\n@@ -116,15 +104,15 @@ LL | | }\n            ]\n \n error[E0309]: the associated type `<T as std::iter::Iterator>::Item` may not live long enough\n-  --> $DIR/projection-no-regions-closure.rs:53:23\n+  --> $DIR/projection-no-regions-closure.rs:52:23\n    |\n LL |     with_signature(x, |mut y| Box::new(y.next()))\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider adding an explicit lifetime bound `<T as std::iter::Iterator>::Item: ReEarlyBound(0, 'a)`...\n \n note: External requirements\n-  --> $DIR/projection-no-regions-closure.rs:64:23\n+  --> $DIR/projection-no-regions-closure.rs:62:23\n    |\n LL |     with_signature(x, |mut y| Box::new(y.next()))\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -140,7 +128,7 @@ LL |     with_signature(x, |mut y| Box::new(y.next()))\n    = note: where <T as std::iter::Iterator>::Item: '_#3r\n \n note: No external requirements\n-  --> $DIR/projection-no-regions-closure.rs:59:1\n+  --> $DIR/projection-no-regions-closure.rs:57:1\n    |\n LL | / fn outlives_region<'a, 'b, T>(x: Box<T>) -> Box<dyn Anything + 'a>\n LL | | where"}, {"sha": "286aa6ca6e0333f72fcef359afc4b9a9f9374789", "filename": "src/test/ui/nll/ty-outlives/projection-no-regions-fn.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-no-regions-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-no-regions-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-no-regions-fn.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -21,8 +21,7 @@ where\n     T: Iterator,\n {\n     Box::new(x.next())\n-    //~^ WARNING not reporting region error due to nll\n-    //~| the associated type `<T as std::iter::Iterator>::Item` may not live long enough\n+    //~^ ERROR the associated type `<T as std::iter::Iterator>::Item` may not live long enough\n }\n \n fn correct_region<'a, T>(mut x: T) -> Box<dyn Anything + 'a>\n@@ -37,8 +36,7 @@ where\n     T: 'b + Iterator,\n {\n     Box::new(x.next())\n-    //~^ WARNING not reporting region error due to nll\n-    //~| the associated type `<T as std::iter::Iterator>::Item` may not live long enough\n+    //~^ ERROR the associated type `<T as std::iter::Iterator>::Item` may not live long enough\n }\n \n fn outlives_region<'a, 'b, T>(mut x: T) -> Box<dyn Anything + 'a>"}, {"sha": "5f365557ae2589a3ef05b3d1529b86ad4fada56d", "filename": "src/test/ui/nll/ty-outlives/projection-no-regions-fn.stderr", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-no-regions-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-no-regions-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-no-regions-fn.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,15 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/projection-no-regions-fn.rs:23:5\n-   |\n-LL |     Box::new(x.next())\n-   |     ^^^^^^^^^^^^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/projection-no-regions-fn.rs:39:5\n-   |\n-LL |     Box::new(x.next())\n-   |     ^^^^^^^^^^^^^^^^^^\n-\n error[E0309]: the associated type `<T as std::iter::Iterator>::Item` may not live long enough\n   --> $DIR/projection-no-regions-fn.rs:23:5\n    |\n@@ -19,7 +7,7 @@ LL |     Box::new(x.next())\n    = help: consider adding an explicit lifetime bound `<T as std::iter::Iterator>::Item: ReEarlyBound(0, 'a)`...\n \n error[E0309]: the associated type `<T as std::iter::Iterator>::Item` may not live long enough\n-  --> $DIR/projection-no-regions-fn.rs:39:5\n+  --> $DIR/projection-no-regions-fn.rs:38:5\n    |\n LL |     Box::new(x.next())\n    |     ^^^^^^^^^^^^^^^^^^"}, {"sha": "995c4d6dc8133c398350f55e3e9aa462ce20d1d1", "filename": "src/test/ui/nll/ty-outlives/projection-one-region-closure.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-closure.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -53,8 +53,7 @@ where\n     T: Anything<'b>,\n {\n     with_signature(cell, t, |cell, t| require(cell, t));\n-    //~^ WARNING not reporting region error due to nll\n-    //~| ERROR the parameter type `T` may not live long enough\n+    //~^ ERROR the parameter type `T` may not live long enough\n     //~| ERROR\n }\n \n@@ -65,8 +64,7 @@ where\n     'a: 'a,\n {\n     with_signature(cell, t, |cell, t| require(cell, t));\n-    //~^ WARNING not reporting region error due to nll\n-    //~| ERROR the parameter type `T` may not live long enough\n+    //~^ ERROR the parameter type `T` may not live long enough\n     //~| ERROR\n }\n \n@@ -87,8 +85,7 @@ where\n     // can do better here with a more involved verification step.\n \n     with_signature(cell, t, |cell, t| require(cell, t));\n-    //~^ WARNING not reporting region error due to nll\n-    //~| ERROR the parameter type `T` may not live long enough\n+    //~^ ERROR the parameter type `T` may not live long enough\n     //~| ERROR\n }\n "}, {"sha": "918cf53cf36fa6c176b4dd104fc8d9c6246c2898", "filename": "src/test/ui/nll/ty-outlives/projection-one-region-closure.stderr", "status": "modified", "additions": 10, "deletions": 28, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-closure.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,21 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/projection-one-region-closure.rs:55:39\n-   |\n-LL |     with_signature(cell, t, |cell, t| require(cell, t));\n-   |                                       ^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/projection-one-region-closure.rs:67:39\n-   |\n-LL |     with_signature(cell, t, |cell, t| require(cell, t));\n-   |                                       ^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/projection-one-region-closure.rs:89:39\n-   |\n-LL |     with_signature(cell, t, |cell, t| require(cell, t));\n-   |                                       ^^^^^^^\n-\n note: External requirements\n   --> $DIR/projection-one-region-closure.rs:55:29\n    |\n@@ -69,7 +51,7 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    = help: consider adding an explicit lifetime bound `T: ReFree(DefId(0/0:8 ~ projection_one_region_closure[317d]::no_relationships_late[0]), BrNamed(crate0:DefIndex(1:16), 'a))`...\n \n note: External requirements\n-  --> $DIR/projection-one-region-closure.rs:67:29\n+  --> $DIR/projection-one-region-closure.rs:66:29\n    |\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -86,7 +68,7 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    = note: where '_#2r: '_#3r\n \n note: No external requirements\n-  --> $DIR/projection-one-region-closure.rs:62:1\n+  --> $DIR/projection-one-region-closure.rs:61:1\n    |\n LL | / fn no_relationships_early<'a, 'b, T>(cell: Cell<&'a ()>, t: T)\n LL | | where\n@@ -104,7 +86,7 @@ LL | | }\n            ]\n \n error: unsatisfied lifetime constraints\n-  --> $DIR/projection-one-region-closure.rs:67:5\n+  --> $DIR/projection-one-region-closure.rs:66:5\n    |\n LL | fn no_relationships_early<'a, 'b, T>(cell: Cell<&'a ()>, t: T)\n    |                           --  -- lifetime `'b` defined here\n@@ -115,15 +97,15 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ argument requires that `'b` must outlive `'a`\n \n error[E0309]: the parameter type `T` may not live long enough\n-  --> $DIR/projection-one-region-closure.rs:67:29\n+  --> $DIR/projection-one-region-closure.rs:66:29\n    |\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider adding an explicit lifetime bound `T: ReEarlyBound(0, 'a)`...\n \n note: External requirements\n-  --> $DIR/projection-one-region-closure.rs:89:29\n+  --> $DIR/projection-one-region-closure.rs:87:29\n    |\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -140,7 +122,7 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    = note: where '_#2r: '_#3r\n \n note: No external requirements\n-  --> $DIR/projection-one-region-closure.rs:74:1\n+  --> $DIR/projection-one-region-closure.rs:72:1\n    |\n LL | / fn projection_outlives<'a, 'b, T>(cell: Cell<&'a ()>, t: T)\n LL | | where\n@@ -158,7 +140,7 @@ LL | | }\n            ]\n \n error: unsatisfied lifetime constraints\n-  --> $DIR/projection-one-region-closure.rs:89:5\n+  --> $DIR/projection-one-region-closure.rs:87:5\n    |\n LL | fn projection_outlives<'a, 'b, T>(cell: Cell<&'a ()>, t: T)\n    |                        --  -- lifetime `'b` defined here\n@@ -169,15 +151,15 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ argument requires that `'b` must outlive `'a`\n \n error[E0309]: the parameter type `T` may not live long enough\n-  --> $DIR/projection-one-region-closure.rs:89:29\n+  --> $DIR/projection-one-region-closure.rs:87:29\n    |\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider adding an explicit lifetime bound `T: ReEarlyBound(0, 'a)`...\n \n note: External requirements\n-  --> $DIR/projection-one-region-closure.rs:102:29\n+  --> $DIR/projection-one-region-closure.rs:99:29\n    |\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -194,7 +176,7 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    = note: where '_#2r: '_#3r\n \n note: No external requirements\n-  --> $DIR/projection-one-region-closure.rs:96:1\n+  --> $DIR/projection-one-region-closure.rs:93:1\n    |\n LL | / fn elements_outlive<'a, 'b, T>(cell: Cell<&'a ()>, t: T)\n LL | | where"}, {"sha": "923faadc29618703cf7da8b8eb415f6e9f685406", "filename": "src/test/ui/nll/ty-outlives/projection-one-region-trait-bound-closure.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-closure.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -45,8 +45,7 @@ where\n     T: Anything<'b>,\n {\n     with_signature(cell, t, |cell, t| require(cell, t));\n-    //~^ WARNING not reporting region error due to nll\n-    //~| ERROR\n+    //~^ ERROR\n }\n \n #[rustc_regions]\n@@ -56,8 +55,7 @@ where\n     'a: 'a,\n {\n     with_signature(cell, t, |cell, t| require(cell, t));\n-    //~^ WARNING not reporting region error due to nll\n-    //~| ERROR\n+    //~^ ERROR\n }\n \n #[rustc_regions]\n@@ -77,8 +75,7 @@ where\n     // can do better here with a more involved verification step.\n \n     with_signature(cell, t, |cell, t| require(cell, t));\n-    //~^ WARNING not reporting region error due to nll\n-    //~| ERROR\n+    //~^ ERROR\n }\n \n #[rustc_regions]"}, {"sha": "ab1ad42f2a97ee83c9b285e487d22cc8fac751b4", "filename": "src/test/ui/nll/ty-outlives/projection-one-region-trait-bound-closure.stderr", "status": "modified", "additions": 14, "deletions": 32, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-closure.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,21 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/projection-one-region-trait-bound-closure.rs:47:39\n-   |\n-LL |     with_signature(cell, t, |cell, t| require(cell, t));\n-   |                                       ^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/projection-one-region-trait-bound-closure.rs:58:39\n-   |\n-LL |     with_signature(cell, t, |cell, t| require(cell, t));\n-   |                                       ^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/projection-one-region-trait-bound-closure.rs:79:39\n-   |\n-LL |     with_signature(cell, t, |cell, t| require(cell, t));\n-   |                                       ^^^^^^^\n-\n note: External requirements\n   --> $DIR/projection-one-region-trait-bound-closure.rs:47:29\n    |\n@@ -38,8 +20,8 @@ LL | / fn no_relationships_late<'a, 'b, T>(cell: Cell<&'a ()>, t: T)\n LL | | where\n LL | |     T: Anything<'b>,\n LL | | {\n-...  |\n-LL | |     //~| ERROR\n+LL | |     with_signature(cell, t, |cell, t| require(cell, t));\n+LL | |     //~^ ERROR\n LL | | }\n    | |_^\n    |\n@@ -60,7 +42,7 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ argument requires that `'b` must outlive `'a`\n \n note: External requirements\n-  --> $DIR/projection-one-region-trait-bound-closure.rs:58:29\n+  --> $DIR/projection-one-region-trait-bound-closure.rs:57:29\n    |\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -76,14 +58,14 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    = note: where '_#2r: '_#3r\n \n note: No external requirements\n-  --> $DIR/projection-one-region-trait-bound-closure.rs:53:1\n+  --> $DIR/projection-one-region-trait-bound-closure.rs:52:1\n    |\n LL | / fn no_relationships_early<'a, 'b, T>(cell: Cell<&'a ()>, t: T)\n LL | | where\n LL | |     T: Anything<'b>,\n LL | |     'a: 'a,\n ...  |\n-LL | |     //~| ERROR\n+LL | |     //~^ ERROR\n LL | | }\n    | |_^\n    |\n@@ -94,7 +76,7 @@ LL | | }\n            ]\n \n error: unsatisfied lifetime constraints\n-  --> $DIR/projection-one-region-trait-bound-closure.rs:58:5\n+  --> $DIR/projection-one-region-trait-bound-closure.rs:57:5\n    |\n LL | fn no_relationships_early<'a, 'b, T>(cell: Cell<&'a ()>, t: T)\n    |                           --  -- lifetime `'b` defined here\n@@ -105,7 +87,7 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ argument requires that `'b` must outlive `'a`\n \n note: External requirements\n-  --> $DIR/projection-one-region-trait-bound-closure.rs:79:29\n+  --> $DIR/projection-one-region-trait-bound-closure.rs:77:29\n    |\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -121,14 +103,14 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    = note: where '_#2r: '_#3r\n \n note: No external requirements\n-  --> $DIR/projection-one-region-trait-bound-closure.rs:64:1\n+  --> $DIR/projection-one-region-trait-bound-closure.rs:62:1\n    |\n LL | / fn projection_outlives<'a, 'b, T>(cell: Cell<&'a ()>, t: T)\n LL | | where\n LL | |     T: Anything<'b>,\n LL | |     T::AssocType: 'a,\n ...  |\n-LL | |     //~| ERROR\n+LL | |     //~^ ERROR\n LL | | }\n    | |_^\n    |\n@@ -139,7 +121,7 @@ LL | | }\n            ]\n \n error: unsatisfied lifetime constraints\n-  --> $DIR/projection-one-region-trait-bound-closure.rs:79:5\n+  --> $DIR/projection-one-region-trait-bound-closure.rs:77:5\n    |\n LL | fn projection_outlives<'a, 'b, T>(cell: Cell<&'a ()>, t: T)\n    |                        --  -- lifetime `'b` defined here\n@@ -150,7 +132,7 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ argument requires that `'b` must outlive `'a`\n \n note: External requirements\n-  --> $DIR/projection-one-region-trait-bound-closure.rs:90:29\n+  --> $DIR/projection-one-region-trait-bound-closure.rs:87:29\n    |\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -166,7 +148,7 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    = note: where '_#2r: '_#3r\n \n note: No external requirements\n-  --> $DIR/projection-one-region-trait-bound-closure.rs:85:1\n+  --> $DIR/projection-one-region-trait-bound-closure.rs:82:1\n    |\n LL | / fn elements_outlive<'a, 'b, T>(cell: Cell<&'a ()>, t: T)\n LL | | where\n@@ -184,7 +166,7 @@ LL | | }\n            ]\n \n note: External requirements\n-  --> $DIR/projection-one-region-trait-bound-closure.rs:102:29\n+  --> $DIR/projection-one-region-trait-bound-closure.rs:99:29\n    |\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -199,7 +181,7 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    = note: where '_#1r: '_#2r\n \n note: No external requirements\n-  --> $DIR/projection-one-region-trait-bound-closure.rs:94:1\n+  --> $DIR/projection-one-region-trait-bound-closure.rs:91:1\n    |\n LL | / fn one_region<'a, T>(cell: Cell<&'a ()>, t: T)\n LL | | where"}, {"sha": "72c1a631396be00d66611a10161594a483b571b3", "filename": "src/test/ui/nll/ty-outlives/projection-two-region-trait-bound-closure.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -46,8 +46,7 @@ where\n     T: Anything<'b, 'c>,\n {\n     with_signature(cell, t, |cell, t| require(cell, t));\n-    //~^ WARNING not reporting region error due to nll\n-    //~| ERROR associated type `<T as Anything<'_#6r, '_#7r>>::AssocType` may not live long enough\n+    //~^ ERROR associated type `<T as Anything<'_#6r, '_#7r>>::AssocType` may not live long enough\n }\n \n #[rustc_regions]\n@@ -57,8 +56,7 @@ where\n     'a: 'a,\n {\n     with_signature(cell, t, |cell, t| require(cell, t));\n-    //~^ WARNING not reporting region error due to nll\n-    //~| ERROR associated type `<T as Anything<'_#7r, '_#8r>>::AssocType` may not live long enough\n+    //~^ ERROR associated type `<T as Anything<'_#7r, '_#8r>>::AssocType` may not live long enough\n }\n \n #[rustc_regions]\n@@ -78,8 +76,7 @@ where\n     // can do better here with a more involved verification step.\n \n     with_signature(cell, t, |cell, t| require(cell, t));\n-    //~^ WARNING not reporting region error due to nll\n-    //~| ERROR associated type `<T as Anything<'_#7r, '_#8r>>::AssocType` may not live long enough\n+    //~^ ERROR associated type `<T as Anything<'_#7r, '_#8r>>::AssocType` may not live long enough\n }\n \n #[rustc_regions]\n@@ -106,8 +103,7 @@ where\n     T: Anything<'b, 'b>,\n {\n     with_signature(cell, t, |cell, t| require(cell, t));\n-    //~^ WARNING not reporting region error due to nll\n-    //~| ERROR\n+    //~^ ERROR\n }\n \n #[rustc_regions]"}, {"sha": "9cabd29b12dc4fa86250d62068af071472d81d4a", "filename": "src/test/ui/nll/ty-outlives/projection-two-region-trait-bound-closure.stderr", "status": "modified", "additions": 23, "deletions": 47, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,27 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/projection-two-region-trait-bound-closure.rs:48:39\n-   |\n-LL |     with_signature(cell, t, |cell, t| require(cell, t));\n-   |                                       ^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/projection-two-region-trait-bound-closure.rs:59:39\n-   |\n-LL |     with_signature(cell, t, |cell, t| require(cell, t));\n-   |                                       ^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/projection-two-region-trait-bound-closure.rs:80:39\n-   |\n-LL |     with_signature(cell, t, |cell, t| require(cell, t));\n-   |                                       ^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/projection-two-region-trait-bound-closure.rs:108:39\n-   |\n-LL |     with_signature(cell, t, |cell, t| require(cell, t));\n-   |                                       ^^^^^^^\n-\n note: External requirements\n   --> $DIR/projection-two-region-trait-bound-closure.rs:48:29\n    |\n@@ -45,8 +21,8 @@ LL | / fn no_relationships_late<'a, 'b, 'c, T>(cell: Cell<&'a ()>, t: T)\n LL | | where\n LL | |     T: Anything<'b, 'c>,\n LL | | {\n-...  |\n-LL | |     //~| ERROR associated type `<T as Anything<'_#6r, '_#7r>>::AssocType` may not live long enough\n+LL | |     with_signature(cell, t, |cell, t| require(cell, t));\n+LL | |     //~^ ERROR associated type `<T as Anything<'_#6r, '_#7r>>::AssocType` may not live long enough\n LL | | }\n    | |_^\n    |\n@@ -65,7 +41,7 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    = help: consider adding an explicit lifetime bound `<T as Anything<'_#6r, '_#7r>>::AssocType: ReFree(DefId(0/0:8 ~ projection_two_region_trait_bound_closure[317d]::no_relationships_late[0]), BrNamed(crate0:DefIndex(1:18), 'a))`...\n \n note: External requirements\n-  --> $DIR/projection-two-region-trait-bound-closure.rs:59:29\n+  --> $DIR/projection-two-region-trait-bound-closure.rs:58:29\n    |\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -82,14 +58,14 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    = note: where <T as Anything<ReClosureBound('_#2r), ReClosureBound('_#3r)>>::AssocType: '_#4r\n \n note: No external requirements\n-  --> $DIR/projection-two-region-trait-bound-closure.rs:54:1\n+  --> $DIR/projection-two-region-trait-bound-closure.rs:53:1\n    |\n LL | / fn no_relationships_early<'a, 'b, 'c, T>(cell: Cell<&'a ()>, t: T)\n LL | | where\n LL | |     T: Anything<'b, 'c>,\n LL | |     'a: 'a,\n ...  |\n-LL | |     //~| ERROR associated type `<T as Anything<'_#7r, '_#8r>>::AssocType` may not live long enough\n+LL | |     //~^ ERROR associated type `<T as Anything<'_#7r, '_#8r>>::AssocType` may not live long enough\n LL | | }\n    | |_^\n    |\n@@ -101,15 +77,15 @@ LL | | }\n            ]\n \n error[E0309]: the associated type `<T as Anything<'_#7r, '_#8r>>::AssocType` may not live long enough\n-  --> $DIR/projection-two-region-trait-bound-closure.rs:59:29\n+  --> $DIR/projection-two-region-trait-bound-closure.rs:58:29\n    |\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider adding an explicit lifetime bound `<T as Anything<'_#7r, '_#8r>>::AssocType: ReEarlyBound(0, 'a)`...\n \n note: External requirements\n-  --> $DIR/projection-two-region-trait-bound-closure.rs:80:29\n+  --> $DIR/projection-two-region-trait-bound-closure.rs:78:29\n    |\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -126,14 +102,14 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    = note: where <T as Anything<ReClosureBound('_#2r), ReClosureBound('_#3r)>>::AssocType: '_#4r\n \n note: No external requirements\n-  --> $DIR/projection-two-region-trait-bound-closure.rs:65:1\n+  --> $DIR/projection-two-region-trait-bound-closure.rs:63:1\n    |\n LL | / fn projection_outlives<'a, 'b, 'c, T>(cell: Cell<&'a ()>, t: T)\n LL | | where\n LL | |     T: Anything<'b, 'c>,\n LL | |     T::AssocType: 'a,\n ...  |\n-LL | |     //~| ERROR associated type `<T as Anything<'_#7r, '_#8r>>::AssocType` may not live long enough\n+LL | |     //~^ ERROR associated type `<T as Anything<'_#7r, '_#8r>>::AssocType` may not live long enough\n LL | | }\n    | |_^\n    |\n@@ -145,15 +121,15 @@ LL | | }\n            ]\n \n error[E0309]: the associated type `<T as Anything<'_#7r, '_#8r>>::AssocType` may not live long enough\n-  --> $DIR/projection-two-region-trait-bound-closure.rs:80:29\n+  --> $DIR/projection-two-region-trait-bound-closure.rs:78:29\n    |\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider adding an explicit lifetime bound `<T as Anything<'_#7r, '_#8r>>::AssocType: ReEarlyBound(0, 'a)`...\n \n note: External requirements\n-  --> $DIR/projection-two-region-trait-bound-closure.rs:91:29\n+  --> $DIR/projection-two-region-trait-bound-closure.rs:88:29\n    |\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -170,7 +146,7 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    = note: where <T as Anything<ReClosureBound('_#2r), ReClosureBound('_#3r)>>::AssocType: '_#4r\n \n note: No external requirements\n-  --> $DIR/projection-two-region-trait-bound-closure.rs:86:1\n+  --> $DIR/projection-two-region-trait-bound-closure.rs:83:1\n    |\n LL | / fn elements_outlive1<'a, 'b, 'c, T>(cell: Cell<&'a ()>, t: T)\n LL | | where\n@@ -189,7 +165,7 @@ LL | | }\n            ]\n \n note: External requirements\n-  --> $DIR/projection-two-region-trait-bound-closure.rs:100:29\n+  --> $DIR/projection-two-region-trait-bound-closure.rs:97:29\n    |\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -206,7 +182,7 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    = note: where <T as Anything<ReClosureBound('_#2r), ReClosureBound('_#3r)>>::AssocType: '_#4r\n \n note: No external requirements\n-  --> $DIR/projection-two-region-trait-bound-closure.rs:95:1\n+  --> $DIR/projection-two-region-trait-bound-closure.rs:92:1\n    |\n LL | / fn elements_outlive2<'a, 'b, 'c, T>(cell: Cell<&'a ()>, t: T)\n LL | | where\n@@ -225,7 +201,7 @@ LL | | }\n            ]\n \n note: External requirements\n-  --> $DIR/projection-two-region-trait-bound-closure.rs:108:29\n+  --> $DIR/projection-two-region-trait-bound-closure.rs:105:29\n    |\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -240,14 +216,14 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    = note: where <T as Anything<ReClosureBound('_#1r), ReClosureBound('_#1r)>>::AssocType: '_#2r\n \n note: No external requirements\n-  --> $DIR/projection-two-region-trait-bound-closure.rs:104:1\n+  --> $DIR/projection-two-region-trait-bound-closure.rs:101:1\n    |\n LL | / fn two_regions<'a, 'b, T>(cell: Cell<&'a ()>, t: T)\n LL | | where\n LL | |     T: Anything<'b, 'b>,\n LL | | {\n-...  |\n-LL | |     //~| ERROR\n+LL | |     with_signature(cell, t, |cell, t| require(cell, t));\n+LL | |     //~^ ERROR\n LL | | }\n    | |_^\n    |\n@@ -257,7 +233,7 @@ LL | | }\n            ]\n \n error: unsatisfied lifetime constraints\n-  --> $DIR/projection-two-region-trait-bound-closure.rs:108:5\n+  --> $DIR/projection-two-region-trait-bound-closure.rs:105:5\n    |\n LL | fn two_regions<'a, 'b, T>(cell: Cell<&'a ()>, t: T)\n    |                --  -- lifetime `'b` defined here\n@@ -268,7 +244,7 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ argument requires that `'b` must outlive `'a`\n \n note: External requirements\n-  --> $DIR/projection-two-region-trait-bound-closure.rs:119:29\n+  --> $DIR/projection-two-region-trait-bound-closure.rs:115:29\n    |\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -284,7 +260,7 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    = note: where <T as Anything<ReClosureBound('_#2r), ReClosureBound('_#2r)>>::AssocType: '_#3r\n \n note: No external requirements\n-  --> $DIR/projection-two-region-trait-bound-closure.rs:114:1\n+  --> $DIR/projection-two-region-trait-bound-closure.rs:110:1\n    |\n LL | / fn two_regions_outlive<'a, 'b, T>(cell: Cell<&'a ()>, t: T)\n LL | | where\n@@ -302,7 +278,7 @@ LL | | }\n            ]\n \n note: External requirements\n-  --> $DIR/projection-two-region-trait-bound-closure.rs:131:29\n+  --> $DIR/projection-two-region-trait-bound-closure.rs:127:29\n    |\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -317,7 +293,7 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    = note: where <T as Anything<ReClosureBound('_#1r), ReClosureBound('_#1r)>>::AssocType: '_#2r\n \n note: No external requirements\n-  --> $DIR/projection-two-region-trait-bound-closure.rs:123:1\n+  --> $DIR/projection-two-region-trait-bound-closure.rs:119:1\n    |\n LL | / fn one_region<'a, T>(cell: Cell<&'a ()>, t: T)\n LL | | where"}, {"sha": "ec6914f2630b1aa96f5f45eca35f69e4f1ff5b1e", "filename": "src/test/ui/nll/ty-outlives/ty-param-closure-approximate-lower-bound.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-approximate-lower-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-approximate-lower-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-approximate-lower-bound.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -32,17 +32,12 @@ where\n fn generic<T>(value: T) {\n     let cell = Cell::new(&());\n     twice(cell, value, |a, b| invoke(a, b));\n-    //~^ WARNING not reporting region error\n-    //\n-    // This error from the old region solver looks bogus.\n }\n \n #[rustc_regions]\n fn generic_fail<'a, T>(cell: Cell<&'a ()>, value: T) {\n     twice(cell, value, |a, b| invoke(a, b));\n-    //~^ WARNING not reporting region error\n-    //~| WARNING not reporting region error\n-    //~| ERROR the parameter type `T` may not live long enough\n+    //~^ ERROR the parameter type `T` may not live long enough\n }\n \n fn invoke<'a, 'x, T>(x: Option<Cell<&'x &'a ()>>, y: &T)"}, {"sha": "6050e627c71fdb813f3207e71da4a14fb9085294", "filename": "src/test/ui/nll/ty-outlives/ty-param-closure-approximate-lower-bound.stderr", "status": "modified", "additions": 4, "deletions": 27, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-approximate-lower-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-approximate-lower-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-approximate-lower-bound.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,21 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ty-param-closure-approximate-lower-bound.rs:34:31\n-   |\n-LL |     twice(cell, value, |a, b| invoke(a, b));\n-   |                               ^^^^^^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/ty-param-closure-approximate-lower-bound.rs:42:31\n-   |\n-LL |     twice(cell, value, |a, b| invoke(a, b));\n-   |                               ^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/ty-param-closure-approximate-lower-bound.rs:42:31\n-   |\n-LL |     twice(cell, value, |a, b| invoke(a, b));\n-   |                               ^^^^^^^^^^^^\n-\n note: External requirements\n   --> $DIR/ty-param-closure-approximate-lower-bound.rs:34:24\n    |\n@@ -36,9 +18,6 @@ note: No external requirements\n LL | / fn generic<T>(value: T) {\n LL | |     let cell = Cell::new(&());\n LL | |     twice(cell, value, |a, b| invoke(a, b));\n-LL | |     //~^ WARNING not reporting region error\n-LL | |     //\n-LL | |     // This error from the old region solver looks bogus.\n LL | | }\n    | |_^\n    |\n@@ -47,7 +26,7 @@ LL | | }\n            ]\n \n note: External requirements\n-  --> $DIR/ty-param-closure-approximate-lower-bound.rs:42:24\n+  --> $DIR/ty-param-closure-approximate-lower-bound.rs:39:24\n    |\n LL |     twice(cell, value, |a, b| invoke(a, b));\n    |                        ^^^^^^^^^^^^^^^^^^^\n@@ -61,13 +40,11 @@ LL |     twice(cell, value, |a, b| invoke(a, b));\n    = note: where T: '_#1r\n \n note: No external requirements\n-  --> $DIR/ty-param-closure-approximate-lower-bound.rs:41:1\n+  --> $DIR/ty-param-closure-approximate-lower-bound.rs:38:1\n    |\n LL | / fn generic_fail<'a, T>(cell: Cell<&'a ()>, value: T) {\n LL | |     twice(cell, value, |a, b| invoke(a, b));\n-LL | |     //~^ WARNING not reporting region error\n-LL | |     //~| WARNING not reporting region error\n-LL | |     //~| ERROR the parameter type `T` may not live long enough\n+LL | |     //~^ ERROR the parameter type `T` may not live long enough\n LL | | }\n    | |_^\n    |\n@@ -76,7 +53,7 @@ LL | | }\n            ]\n \n error[E0309]: the parameter type `T` may not live long enough\n-  --> $DIR/ty-param-closure-approximate-lower-bound.rs:42:24\n+  --> $DIR/ty-param-closure-approximate-lower-bound.rs:39:24\n    |\n LL |     twice(cell, value, |a, b| invoke(a, b));\n    |                        ^^^^^^^^^^^^^^^^^^^"}, {"sha": "cd47cc524d4ab2372a2635ff9525f03cbc4b605e", "filename": "src/test/ui/nll/ty-outlives/ty-param-closure-outlives-from-return-type.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-outlives-from-return-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-outlives-from-return-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-outlives-from-return-type.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -34,8 +34,7 @@ where\n     // `'a` (and subsequently reports an error).\n \n     with_signature(x, |y| y)\n-    //~^ WARNING not reporting region error due to nll\n-    //~| ERROR the parameter type `T` may not live long enough\n+    //~^ ERROR the parameter type `T` may not live long enough\n }\n \n fn correct_region<'a, T>(x: Box<T>) -> Box<Debug + 'a>\n@@ -50,8 +49,7 @@ where\n     T: 'b + Debug,\n {\n     x\n-    //~^ WARNING not reporting region error due to nll\n-    //~| ERROR the parameter type `T` may not live long enough\n+    //~^ ERROR the parameter type `T` may not live long enough\n }\n \n fn outlives_region<'a, 'b, T>(x: Box<T>) -> Box<Debug + 'a>"}, {"sha": "5215f6a52771198b0a8e6a859110bce9f37326f8", "filename": "src/test/ui/nll/ty-outlives/ty-param-closure-outlives-from-return-type.stderr", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-outlives-from-return-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-outlives-from-return-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-outlives-from-return-type.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,15 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ty-param-closure-outlives-from-return-type.rs:36:27\n-   |\n-LL |     with_signature(x, |y| y)\n-   |                           ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/ty-param-closure-outlives-from-return-type.rs:52:5\n-   |\n-LL |     x\n-   |     ^\n-\n note: External requirements\n   --> $DIR/ty-param-closure-outlives-from-return-type.rs:36:23\n    |\n@@ -33,7 +21,7 @@ LL | | where\n LL | |     T: Debug,\n LL | | {\n ...  |\n-LL | |     //~| ERROR the parameter type `T` may not live long enough\n+LL | |     //~^ ERROR the parameter type `T` may not live long enough\n LL | | }\n    | |_^\n    |\n@@ -51,7 +39,7 @@ LL |     with_signature(x, |y| y)\n    = help: consider adding an explicit lifetime bound `T: ReEarlyBound(0, 'a)`...\n \n error[E0309]: the parameter type `T` may not live long enough\n-  --> $DIR/ty-param-closure-outlives-from-return-type.rs:52:5\n+  --> $DIR/ty-param-closure-outlives-from-return-type.rs:51:5\n    |\n LL |     x\n    |     ^"}, {"sha": "aadf56e1fd088b308a7b46c90d118e392dad19d7", "filename": "src/test/ui/nll/ty-outlives/ty-param-closure-outlives-from-where-clause.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-outlives-from-where-clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-outlives-from-where-clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-outlives-from-where-clause.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -42,7 +42,6 @@ fn no_region<'a, T>(a: Cell<&'a ()>, b: T) {\n         // function, there is no where clause *anywhere*, and hence we\n         // get an error (but reported by the closure creator).\n         require(&x, &y)\n-        //~^ WARNING not reporting region error due to nll\n     })\n }\n \n@@ -76,7 +75,6 @@ where\n         //~^ ERROR the parameter type `T` may not live long enough\n         // See `correct_region`\n         require(&x, &y)\n-        //~^ WARNING not reporting region error due to nll\n     })\n }\n "}, {"sha": "7129ec397de75c3d3476391b099e22bb44e756d3", "filename": "src/test/ui/nll/ty-outlives/ty-param-closure-outlives-from-where-clause.stderr", "status": "modified", "additions": 9, "deletions": 23, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-outlives-from-where-clause.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-outlives-from-where-clause.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-outlives-from-where-clause.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,15 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ty-param-closure-outlives-from-where-clause.rs:44:9\n-   |\n-LL |         require(&x, &y)\n-   |         ^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/ty-param-closure-outlives-from-where-clause.rs:78:9\n-   |\n-LL |         require(&x, &y)\n-   |         ^^^^^^^\n-\n note: External requirements\n   --> $DIR/ty-param-closure-outlives-from-where-clause.rs:37:26\n    |\n@@ -19,7 +7,7 @@ LL | |         //~^ ERROR the parameter type `T` may not live long enough\n LL | |         //\n LL | |         // See `correct_region`, which explains the point of this\n ...  |\n-LL | |         //~^ WARNING not reporting region error due to nll\n+LL | |         require(&x, &y)\n LL | |     })\n    | |_____^\n    |\n@@ -56,14 +44,14 @@ LL | |         //~^ ERROR the parameter type `T` may not live long enough\n LL | |         //\n LL | |         // See `correct_region`, which explains the point of this\n ...  |\n-LL | |         //~^ WARNING not reporting region error due to nll\n+LL | |         require(&x, &y)\n LL | |     })\n    | |_____^\n    |\n    = help: consider adding an explicit lifetime bound `T: ReFree(DefId(0/0:6 ~ ty_param_closure_outlives_from_where_clause[317d]::no_region[0]), BrNamed(crate0:DefIndex(1:14), 'a))`...\n \n note: External requirements\n-  --> $DIR/ty-param-closure-outlives-from-where-clause.rs:54:26\n+  --> $DIR/ty-param-closure-outlives-from-where-clause.rs:53:26\n    |\n LL |       with_signature(a, b, |x, y| {\n    |  __________________________^\n@@ -85,7 +73,7 @@ LL | |     })\n    = note: where T: '_#2r\n \n note: No external requirements\n-  --> $DIR/ty-param-closure-outlives-from-where-clause.rs:50:1\n+  --> $DIR/ty-param-closure-outlives-from-where-clause.rs:49:1\n    |\n LL | / fn correct_region<'a, T>(a: Cell<&'a ()>, b: T)\n LL | | where\n@@ -102,14 +90,13 @@ LL | | }\n            ]\n \n note: External requirements\n-  --> $DIR/ty-param-closure-outlives-from-where-clause.rs:75:26\n+  --> $DIR/ty-param-closure-outlives-from-where-clause.rs:74:26\n    |\n LL |       with_signature(a, b, |x, y| {\n    |  __________________________^\n LL | |         //~^ ERROR the parameter type `T` may not live long enough\n LL | |         // See `correct_region`\n LL | |         require(&x, &y)\n-LL | |         //~^ WARNING not reporting region error due to nll\n LL | |     })\n    | |_____^\n    |\n@@ -123,7 +110,7 @@ LL | |     })\n    = note: where T: '_#2r\n \n note: No external requirements\n-  --> $DIR/ty-param-closure-outlives-from-where-clause.rs:71:1\n+  --> $DIR/ty-param-closure-outlives-from-where-clause.rs:70:1\n    |\n LL | / fn wrong_region<'a, 'b, T>(a: Cell<&'a ()>, b: T)\n LL | | where\n@@ -140,21 +127,20 @@ LL | | }\n            ]\n \n error[E0309]: the parameter type `T` may not live long enough\n-  --> $DIR/ty-param-closure-outlives-from-where-clause.rs:75:26\n+  --> $DIR/ty-param-closure-outlives-from-where-clause.rs:74:26\n    |\n LL |       with_signature(a, b, |x, y| {\n    |  __________________________^\n LL | |         //~^ ERROR the parameter type `T` may not live long enough\n LL | |         // See `correct_region`\n LL | |         require(&x, &y)\n-LL | |         //~^ WARNING not reporting region error due to nll\n LL | |     })\n    | |_____^\n    |\n    = help: consider adding an explicit lifetime bound `T: ReFree(DefId(0/0:8 ~ ty_param_closure_outlives_from_where_clause[317d]::wrong_region[0]), BrNamed(crate0:DefIndex(1:20), 'a))`...\n \n note: External requirements\n-  --> $DIR/ty-param-closure-outlives-from-where-clause.rs:89:26\n+  --> $DIR/ty-param-closure-outlives-from-where-clause.rs:87:26\n    |\n LL |       with_signature(a, b, |x, y| {\n    |  __________________________^\n@@ -174,7 +160,7 @@ LL | |     })\n    = note: where T: '_#3r\n \n note: No external requirements\n-  --> $DIR/ty-param-closure-outlives-from-where-clause.rs:84:1\n+  --> $DIR/ty-param-closure-outlives-from-where-clause.rs:82:1\n    |\n LL | / fn outlives_region<'a, 'b, T>(a: Cell<&'a ()>, b: T)\n LL | | where"}, {"sha": "10709327684cd2d8dac7f7cc9910ad63985ebf8e", "filename": "src/test/ui/nll/ty-outlives/ty-param-fn-body.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-fn-body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-fn-body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-fn-body.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -27,8 +27,7 @@ fn region_within_body<T>(t: T) {\n // Error here, because T: 'a is not satisfied.\n fn region_static<'a, T>(cell: Cell<&'a usize>, t: T) {\n     outlives(cell, t)\n-    //~^ WARNING not reporting region error due to nll\n-    //~| ERROR the parameter type `T` may not live long enough\n+    //~^ ERROR the parameter type `T` may not live long enough\n }\n \n fn outlives<'a, T>(x: Cell<&'a usize>, y: T)"}, {"sha": "d6caae090a4b537aa1f395c0cfb792a5339d52f8", "filename": "src/test/ui/nll/ty-outlives/ty-param-fn-body.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-fn-body.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-fn-body.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-fn-body.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ty-param-fn-body.rs:29:5\n-   |\n-LL |     outlives(cell, t)\n-   |     ^^^^^^^^\n-\n error[E0309]: the parameter type `T` may not live long enough\n   --> $DIR/ty-param-fn-body.rs:29:5\n    |"}, {"sha": "1e49f7e5b19a366d78f05584a3212f6bfe53d496", "filename": "src/test/ui/nll/ty-outlives/ty-param-fn.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-fn.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -19,8 +19,7 @@ where\n     T: Debug,\n {\n     x\n-    //~^ WARNING not reporting region error due to nll\n-    //~| the parameter type `T` may not live long enough\n+    //~^ ERROR the parameter type `T` may not live long enough\n }\n \n fn correct_region<'a, T>(x: Box<T>) -> Box<Debug + 'a>\n@@ -35,8 +34,7 @@ where\n     T: 'b + Debug,\n {\n     x\n-    //~^ WARNING not reporting region error due to nll\n-    //~| the parameter type `T` may not live long enough\n+    //~^ ERROR the parameter type `T` may not live long enough\n }\n \n fn outlives_region<'a, 'b, T>(x: Box<T>) -> Box<Debug + 'a>"}, {"sha": "7f137dcf05c81b4f6823de9740a2fc2866e5fab6", "filename": "src/test/ui/nll/ty-outlives/ty-param-fn.stderr", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-fn.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,15 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/ty-param-fn.rs:21:5\n-   |\n-LL |     x\n-   |     ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/ty-param-fn.rs:37:5\n-   |\n-LL |     x\n-   |     ^\n-\n error[E0309]: the parameter type `T` may not live long enough\n   --> $DIR/ty-param-fn.rs:21:5\n    |\n@@ -19,7 +7,7 @@ LL |     x\n    = help: consider adding an explicit lifetime bound `T: 'a`...\n \n error[E0309]: the parameter type `T` may not live long enough\n-  --> $DIR/ty-param-fn.rs:37:5\n+  --> $DIR/ty-param-fn.rs:36:5\n    |\n LL |     x\n    |     ^"}, {"sha": "0cadc802d06e7dd6b1578b968b08a8d265c73d3e", "filename": "src/test/ui/nll/where_clauses_in_functions.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fwhere_clauses_in_functions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fwhere_clauses_in_functions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fwhere_clauses_in_functions.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -22,7 +22,6 @@ where\n fn bar<'a, 'b>(x: &'a u32, y: &'b u32) -> (&'a u32, &'b u32) {\n     foo(x, y)\n     //~^ ERROR unsatisfied lifetime constraints\n-    //~| WARNING not reporting region error due to nll\n }\n \n fn main() {}"}, {"sha": "0c6913911ed5c995bcbba94c710566b86c353a33", "filename": "src/test/ui/nll/where_clauses_in_functions.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fwhere_clauses_in_functions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fwhere_clauses_in_functions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fwhere_clauses_in_functions.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/where_clauses_in_functions.rs:23:5\n-   |\n-LL |     foo(x, y)\n-   |     ^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/where_clauses_in_functions.rs:23:5\n    |"}, {"sha": "4b5a49dfae7073cb469d971a27a9c6108c290716", "filename": "src/test/ui/nll/where_clauses_in_structs.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fwhere_clauses_in_structs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fwhere_clauses_in_structs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fwhere_clauses_in_structs.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -22,7 +22,6 @@ struct Foo<'a: 'b, 'b> {\n fn bar<'a, 'b>(x: Cell<&'a u32>, y: Cell<&'b u32>) {\n     Foo { x, y };\n     //~^ ERROR unsatisfied lifetime constraints\n-    //~| WARNING not reporting region error due to nll\n }\n \n fn main() {}"}, {"sha": "636498eae927c63ee33b3da8ca2662905bab3fde", "filename": "src/test/ui/nll/where_clauses_in_structs.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fwhere_clauses_in_structs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fnll%2Fwhere_clauses_in_structs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fwhere_clauses_in_structs.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/where_clauses_in_structs.rs:23:5\n-   |\n-LL |     Foo { x, y };\n-   |     ^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/where_clauses_in_structs.rs:23:11\n    |"}, {"sha": "e132ec67b9632d4acfe3b868d01d18c911e4b93a", "filename": "src/test/ui/object-lifetime/object-lifetime-default-elision.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-elision.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-elision.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-elision.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/object-lifetime-default-elision.rs:81:5\n-   |\n-LL |     ss\n-   |     ^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/object-lifetime-default-elision.rs:81:5\n    |"}, {"sha": "e0c291928283ce3fc9468acce53f5afc37000372", "filename": "src/test/ui/object-lifetime/object-lifetime-default-from-box-error.nll.stderr", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-box-error.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-box-error.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-box-error.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,15 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/object-lifetime-default-from-box-error.rs:28:5\n-   |\n-LL |     ss.r //~ ERROR explicit lifetime required in the type of `ss` [E0621]\n-   |     ^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/object-lifetime-default-from-box-error.rs:41:12\n-   |\n-LL |     ss.r = b; //~ ERROR 41:12: 41:13: explicit lifetime required in the type of `ss` [E0621]\n-   |            ^\n-\n error[E0621]: explicit lifetime required in the type of `ss`\n   --> $DIR/object-lifetime-default-from-box-error.rs:28:5\n    |"}, {"sha": "e62b9b070213df6e5cf20d2a728d29ee7b47ab5f", "filename": "src/test/ui/object-lifetime/object-lifetime-default-from-rptr-box-error.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-rptr-box-error.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-rptr-box-error.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-rptr-box-error.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/object-lifetime-default-from-rptr-box-error.rs:25:12\n-   |\n-LL |     ss.t = t; //~ ERROR mismatched types\n-   |            ^\n-\n error: borrowed data escapes outside of function\n   --> $DIR/object-lifetime-default-from-rptr-box-error.rs:25:5\n    |"}, {"sha": "803f9d3fd7e5c27086209211b57ced335843c26c", "filename": "src/test/ui/object-lifetime/object-lifetime-default-from-rptr-struct-error.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-rptr-struct-error.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-rptr-struct-error.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-rptr-struct-error.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/object-lifetime-default-from-rptr-struct-error.rs:31:12\n-   |\n-LL |     ss.t = t; //~ ERROR mismatched types\n-   |            ^\n-\n error: borrowed data escapes outside of function\n   --> $DIR/object-lifetime-default-from-rptr-struct-error.rs:31:5\n    |"}, {"sha": "41988b31e9745bd37157ac3a602222af284641a4", "filename": "src/test/ui/object-lifetime/object-lifetime-default-mybox.nll.stderr", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-mybox.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-mybox.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-mybox.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,15 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/object-lifetime-default-mybox.rs:37:5\n-   |\n-LL |     a //~ ERROR lifetime mismatch\n-   |     ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/object-lifetime-default-mybox.rs:41:11\n-   |\n-LL |     load0(ss) //~ ERROR mismatched types\n-   |           ^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/object-lifetime-default-mybox.rs:37:5\n    |"}, {"sha": "c9714de1f097509e9038f1797b037d14b7e78072", "filename": "src/test/ui/regions/region-invariant-static-error-reporting.nll.stderr", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregion-invariant-static-error-reporting.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregion-invariant-static-error-reporting.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregion-invariant-static-error-reporting.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,14 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/region-invariant-static-error-reporting.rs:24:15\n-   |\n-LL |       let bad = if x.is_some() {\n-   |  _______________^\n-LL | |         x.unwrap()\n-LL | |     } else {\n-LL | |         mk_static()\n-LL | |     };\n-   | |_____^\n-\n error: borrowed data escapes outside of function\n   --> $DIR/region-invariant-static-error-reporting.rs:25:9\n    |"}, {"sha": "01bc022acb1cb24b6a05aa5af2a5c871ca80ce75", "filename": "src/test/ui/regions/region-lifetime-bounds-on-fns-where-clause.nll.stderr", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregion-lifetime-bounds-on-fns-where-clause.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregion-lifetime-bounds-on-fns-where-clause.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregion-lifetime-bounds-on-fns-where-clause.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,15 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/region-lifetime-bounds-on-fns-where-clause.rs:18:10\n-   |\n-LL |     *x = *y; //~ ERROR E0623\n-   |          ^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/region-lifetime-bounds-on-fns-where-clause.rs:24:5\n-   |\n-LL |     a(x, y); //~ ERROR 24:7: 24:8: lifetime mismatch [E0623]\n-   |     ^\n-\n error[E0308]: mismatched types\n   --> $DIR/region-lifetime-bounds-on-fns-where-clause.rs:30:43\n    |"}, {"sha": "44f8f9e46f3fe39651669104afcd27b8bcd72678", "filename": "src/test/ui/regions/region-multiple-lifetime-bounds-on-fns-where-clause.nll.stderr", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregion-multiple-lifetime-bounds-on-fns-where-clause.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregion-multiple-lifetime-bounds-on-fns-where-clause.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregion-multiple-lifetime-bounds-on-fns-where-clause.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,21 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/region-multiple-lifetime-bounds-on-fns-where-clause.rs:19:10\n-   |\n-LL |     *x = *y; //~ ERROR E0623\n-   |          ^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/region-multiple-lifetime-bounds-on-fns-where-clause.rs:20:10\n-   |\n-LL |     *z = *y; //~ ERROR E0623\n-   |          ^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/region-multiple-lifetime-bounds-on-fns-where-clause.rs:26:5\n-   |\n-LL |     a(x, y, z); //~ ERROR 26:7: 26:8: lifetime mismatch [E0623]\n-   |     ^\n-\n error[E0308]: mismatched types\n   --> $DIR/region-multiple-lifetime-bounds-on-fns-where-clause.rs:32:56\n    |"}, {"sha": "4e1b8b7e1a076d2650f23d2f0ad1200cb86d3c68", "filename": "src/test/ui/regions/region-object-lifetime-2.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregion-object-lifetime-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregion-object-lifetime-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregion-object-lifetime-2.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/region-object-lifetime-2.rs:20:7\n-   |\n-LL |     x.borrowed() //~ ERROR cannot infer\n-   |       ^^^^^^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/region-object-lifetime-2.rs:20:5\n    |"}, {"sha": "5f1f70dfe1935b1cd63295b22aac1f304a4e0e80", "filename": "src/test/ui/regions/region-object-lifetime-4.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregion-object-lifetime-4.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregion-object-lifetime-4.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregion-object-lifetime-4.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/region-object-lifetime-4.rs:22:7\n-   |\n-LL |     x.borrowed() //~ ERROR cannot infer\n-   |       ^^^^^^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/region-object-lifetime-4.rs:22:5\n    |"}, {"sha": "e8c1d7e74a038a9477acfcac8bc8d962397cdfae", "filename": "src/test/ui/regions/region-object-lifetime-in-coercion.nll.stderr", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregion-object-lifetime-in-coercion.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregion-object-lifetime-in-coercion.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregion-object-lifetime-in-coercion.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,27 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/region-object-lifetime-in-coercion.rs:18:42\n-   |\n-LL |     let x: Box<Foo + 'static> = Box::new(v);\n-   |                                          ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/region-object-lifetime-in-coercion.rs:24:14\n-   |\n-LL |     Box::new(v)\n-   |              ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/region-object-lifetime-in-coercion.rs:31:14\n-   |\n-LL |     Box::new(v)\n-   |              ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/region-object-lifetime-in-coercion.rs:36:14\n-   |\n-LL |     Box::new(v)\n-   |              ^\n-\n error[E0621]: explicit lifetime required in the type of `v`\n   --> $DIR/region-object-lifetime-in-coercion.rs:18:33\n    |"}, {"sha": "18578a1813445c8f3abb7ecb013fd13c53c7e2a7", "filename": "src/test/ui/regions/regions-addr-of-self.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-addr-of-self.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-addr-of-self.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-addr-of-self.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-addr-of-self.rs:17:37\n-   |\n-LL |         let p: &'static mut usize = &mut self.cats_chased; //~ ERROR cannot infer\n-   |                                     ^^^^^^^^^^^^^^^^^^^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/regions-addr-of-self.rs:17:37\n    |"}, {"sha": "d20cf12f4161a170c3d6772925c75f7a45b3f75e", "filename": "src/test/ui/regions/regions-addr-of-upvar-self.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-addr-of-upvar-self.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-addr-of-upvar-self.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-addr-of-upvar-self.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-addr-of-upvar-self.rs:20:41\n-   |\n-LL |             let p: &'static mut usize = &mut self.food; //~ ERROR cannot infer\n-   |                                         ^^^^^^^^^^^^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/regions-addr-of-upvar-self.rs:20:41\n    |"}, {"sha": "a292bacc674bf5e1a70279741d84255a4f9bec54", "filename": "src/test/ui/regions/regions-bounded-method-type-parameters-cross-crate.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-bounded-method-type-parameters-cross-crate.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-bounded-method-type-parameters-cross-crate.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-bounded-method-type-parameters-cross-crate.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-bounded-method-type-parameters-cross-crate.rs:30:7\n-   |\n-LL |     a.bigger_region(b) //~ ERROR 30:7: 30:20: lifetime mismatch [E0623]\n-   |       ^^^^^^^^^^^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/regions-bounded-method-type-parameters-cross-crate.rs:30:5\n    |"}, {"sha": "99c31783acdcc405a8f901528c4f7d479b81cb4f", "filename": "src/test/ui/regions/regions-bounded-method-type-parameters-trait-bound.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-bounded-method-type-parameters-trait-bound.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-bounded-method-type-parameters-trait-bound.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-bounded-method-type-parameters-trait-bound.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-bounded-method-type-parameters-trait-bound.rs:30:7\n-   |\n-LL |     f.method(b); //~ ERROR 30:7: 30:13: lifetime mismatch [E0623]\n-   |       ^^^^^^\n-\n error: borrowed data escapes outside of function\n   --> $DIR/regions-bounded-method-type-parameters-trait-bound.rs:30:5\n    |"}, {"sha": "e50e806da12a30b361e7465f8b4baccceeadf7e0", "filename": "src/test/ui/regions/regions-bounds.nll.stderr", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-bounds.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-bounds.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-bounds.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,15 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-bounds.rs:19:12\n-   |\n-LL |     return e; //~ ERROR mismatched types\n-   |            ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-bounds.rs:23:12\n-   |\n-LL |     return e; //~ ERROR mismatched types\n-   |            ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/regions-bounds.rs:19:12\n    |"}, {"sha": "90d38a49c4a8259f0ff407abee329bf8812c5532", "filename": "src/test/ui/regions/regions-close-associated-type-into-object.nll.stderr", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-close-associated-type-into-object.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-close-associated-type-into-object.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-close-associated-type-into-object.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,27 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-close-associated-type-into-object.rs:25:5\n-   |\n-LL |     Box::new(item) //~ ERROR associated type `<T as Iter>::Item` may not live long enough\n-   |     ^^^^^^^^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-close-associated-type-into-object.rs:32:5\n-   |\n-LL |     Box::new(item) //~ ERROR associated type `<T as Iter>::Item` may not live long enough\n-   |     ^^^^^^^^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-close-associated-type-into-object.rs:38:5\n-   |\n-LL |     Box::new(item) //~ ERROR associated type `<T as Iter>::Item` may not live long enough\n-   |     ^^^^^^^^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-close-associated-type-into-object.rs:45:5\n-   |\n-LL |     Box::new(item) //~ ERROR associated type `<T as Iter>::Item` may not live long enough\n-   |     ^^^^^^^^^^^^^^\n-\n error[E0310]: the associated type `<T as Iter>::Item` may not live long enough\n   --> $DIR/regions-close-associated-type-into-object.rs:25:5\n    |"}, {"sha": "c073e3728e70571c7febf98ccfdf2e5160a6a311", "filename": "src/test/ui/regions/regions-close-object-into-object-2.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-2.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-close-object-into-object-2.rs:20:11\n-   |\n-LL |     box B(&*v) as Box<X> //~ ERROR cannot infer\n-   |           ^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/regions-close-object-into-object-2.rs:20:5\n    |"}, {"sha": "4b47b951d77173fcaba3511fd4e900fb0a38fb40", "filename": "src/test/ui/regions/regions-close-object-into-object-4.nll.stderr", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-4.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-4.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-4.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,33 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-close-object-into-object-4.rs:20:5\n-   |\n-LL |     box B(&*v) as Box<X> //~ ERROR cannot infer\n-   |     ^^^^^^^^^^^^^^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-close-object-into-object-4.rs:20:11\n-   |\n-LL |     box B(&*v) as Box<X> //~ ERROR cannot infer\n-   |           ^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-close-object-into-object-4.rs:20:9\n-   |\n-LL |     box B(&*v) as Box<X> //~ ERROR cannot infer\n-   |         ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-close-object-into-object-4.rs:20:9\n-   |\n-LL |     box B(&*v) as Box<X> //~ ERROR cannot infer\n-   |         ^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-close-object-into-object-4.rs:20:5\n-   |\n-LL |     box B(&*v) as Box<X> //~ ERROR cannot infer\n-   |     ^^^^^^^^^^\n-\n error[E0310]: the parameter type `U` may not live long enough\n   --> $DIR/regions-close-object-into-object-4.rs:20:5\n    |"}, {"sha": "8ef80fd775bfa765178e00ad0e4e48c107c31bc7", "filename": "src/test/ui/regions/regions-close-object-into-object-5.nll.stderr", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-5.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-5.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-5.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,33 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-close-object-into-object-5.rs:27:5\n-   |\n-LL |     box B(&*v) as Box<X>\n-   |     ^^^^^^^^^^^^^^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-close-object-into-object-5.rs:27:11\n-   |\n-LL |     box B(&*v) as Box<X>\n-   |           ^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-close-object-into-object-5.rs:27:9\n-   |\n-LL |     box B(&*v) as Box<X>\n-   |         ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-close-object-into-object-5.rs:27:9\n-   |\n-LL |     box B(&*v) as Box<X>\n-   |         ^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-close-object-into-object-5.rs:27:5\n-   |\n-LL |     box B(&*v) as Box<X>\n-   |     ^^^^^^^^^^\n-\n error[E0310]: the parameter type `T` may not live long enough\n   --> $DIR/regions-close-object-into-object-5.rs:27:5\n    |"}, {"sha": "6b8406cdb6e5e68831052f8976f8292f6ab77b89", "filename": "src/test/ui/regions/regions-close-over-type-parameter-1.nll.stderr", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-close-over-type-parameter-1.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-close-over-type-parameter-1.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-close-over-type-parameter-1.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,27 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-close-over-type-parameter-1.rs:20:5\n-   |\n-LL |     box v as Box<SomeTrait+'static>\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-close-over-type-parameter-1.rs:20:5\n-   |\n-LL |     box v as Box<SomeTrait+'static>\n-   |     ^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-close-over-type-parameter-1.rs:30:5\n-   |\n-LL |     box v as Box<SomeTrait+'b>\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-close-over-type-parameter-1.rs:30:5\n-   |\n-LL |     box v as Box<SomeTrait+'b>\n-   |     ^^^^^\n-\n error[E0310]: the parameter type `A` may not live long enough\n   --> $DIR/regions-close-over-type-parameter-1.rs:20:5\n    |"}, {"sha": "017e912688849f6ee8f9df8ed2eab4d974914bc6", "filename": "src/test/ui/regions/regions-close-over-type-parameter-multiple.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-close-over-type-parameter-multiple.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-close-over-type-parameter-multiple.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-close-over-type-parameter-multiple.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-close-over-type-parameter-multiple.rs:30:5\n-   |\n-LL |     box v as Box<SomeTrait+'a> //~ ERROR cannot infer an appropriate lifetime\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n error[E0309]: the parameter type `A` may not live long enough\n   --> $DIR/regions-close-over-type-parameter-multiple.rs:30:5\n    |"}, {"sha": "c1c7e1b71c98681526befc367b067417d75a05e3", "filename": "src/test/ui/regions/regions-close-param-into-object.nll.stderr", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-close-param-into-object.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-close-param-into-object.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-close-param-into-object.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,27 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-close-param-into-object.rs:16:5\n-   |\n-LL |     Box::new(v) //~ ERROR parameter type `T` may not live long enough\n-   |     ^^^^^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-close-param-into-object.rs:22:5\n-   |\n-LL |     Box::new(v) //~ ERROR parameter type `T` may not live long enough\n-   |     ^^^^^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-close-param-into-object.rs:28:5\n-   |\n-LL |     Box::new(v) //~ ERROR parameter type `T` may not live long enough\n-   |     ^^^^^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-close-param-into-object.rs:34:5\n-   |\n-LL |     Box::new(v) //~ ERROR parameter type `T` may not live long enough\n-   |     ^^^^^^^^^^^\n-\n error[E0310]: the parameter type `T` may not live long enough\n   --> $DIR/regions-close-param-into-object.rs:16:5\n    |"}, {"sha": "aeb4fc67f55ed4b19276b3c4f75b99d3ec9466b9", "filename": "src/test/ui/regions/regions-creating-enums3.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-creating-enums3.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-creating-enums3.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-creating-enums3.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-creating-enums3.rs:17:5\n-   |\n-LL |     ast::add(x, y) //~ ERROR 17:5: 17:19: lifetime mismatch [E0623]\n-   |     ^^^^^^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/regions-creating-enums3.rs:17:5\n    |"}, {"sha": "9c68c9bca49f28a7f2ee7045da9dfdab530bc417", "filename": "src/test/ui/regions/regions-creating-enums4.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-creating-enums4.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-creating-enums4.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-creating-enums4.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-creating-enums4.rs:17:5\n-   |\n-LL |     ast::add(x, y) //~ ERROR cannot infer\n-   |     ^^^^^^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/regions-creating-enums4.rs:17:5\n    |"}, {"sha": "e6c60b301a041667b3cbe542dc36dbe87a18ac6a", "filename": "src/test/ui/regions/regions-early-bound-error-method.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-early-bound-error-method.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-early-bound-error-method.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-early-bound-error-method.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-early-bound-error-method.rs:30:9\n-   |\n-LL |         g2.get()\n-   |         ^^^^^^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/regions-early-bound-error-method.rs:30:9\n    |"}, {"sha": "3c95e977fb366512e438ca71046981b5519a9342", "filename": "src/test/ui/regions/regions-early-bound-error.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-early-bound-error.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-early-bound-error.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-early-bound-error.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-early-bound-error.rs:29:5\n-   |\n-LL |     g1.get()\n-   |     ^^^^^^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/regions-early-bound-error.rs:29:5\n    |"}, {"sha": "ffcd1b6bd7b33beb87f17a76543ab61811dff981", "filename": "src/test/ui/regions/regions-escape-method.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-escape-method.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-escape-method.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-escape-method.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-escape-method.rs:25:13\n-   |\n-LL |     s.f(|p| p) //~ ERROR cannot infer\n-   |             ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/regions-escape-method.rs:25:13\n    |"}, {"sha": "36a79d52fd0022218b8eb2ad04447c14e9a20593", "filename": "src/test/ui/regions/regions-escape-via-trait-or-not.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-escape-via-trait-or-not.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-escape-via-trait-or-not.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-escape-via-trait-or-not.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-escape-via-trait-or-not.rs:28:14\n-   |\n-LL |     with(|o| o) //~ ERROR cannot infer\n-   |              ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/regions-escape-via-trait-or-not.rs:28:14\n    |"}, {"sha": "98a4dc29ae7e707f3a91d30e0350070edb8638af", "filename": "src/test/ui/regions/regions-free-region-ordering-callee.nll.stderr", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-free-region-ordering-callee.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-free-region-ordering-callee.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-free-region-ordering-callee.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,15 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-free-region-ordering-callee.rs:23:5\n-   |\n-LL |     &*y //~ ERROR 23:5: 23:8: lifetime mismatch [E0623]\n-   |     ^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-free-region-ordering-callee.rs:28:24\n-   |\n-LL |     let z: &'b usize = &*x;\n-   |                        ^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/regions-free-region-ordering-callee.rs:23:5\n    |"}, {"sha": "10259ccf270e8b496e9cfd1bd13a3a0863763c23", "filename": "src/test/ui/regions/regions-free-region-ordering-incorrect.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-free-region-ordering-incorrect.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-free-region-ordering-incorrect.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-free-region-ordering-incorrect.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-free-region-ordering-incorrect.rs:27:15\n-   |\n-LL |       None => &self.val //~ ERROR cannot infer\n-   |               ^^^^^^^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/regions-free-region-ordering-incorrect.rs:25:5\n    |"}, {"sha": "a82ce96bfbfbf6c6fd6725048330b9e74e5c2476", "filename": "src/test/ui/regions/regions-glb-free-free.nll.stderr", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/e27bae09ca4947ea20520ba7a7f1737559f8dd0f/src%2Ftest%2Fui%2Fregions%2Fregions-glb-free-free.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e27bae09ca4947ea20520ba7a7f1737559f8dd0f/src%2Ftest%2Fui%2Fregions%2Fregions-glb-free-free.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-glb-free-free.nll.stderr?ref=e27bae09ca4947ea20520ba7a7f1737559f8dd0f", "patch": "@@ -1,22 +0,0 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-glb-free-free.rs:25:13\n-   |\n-LL |             Flag { //~ ERROR 25:13: 30:14: explicit lifetime required in the type of `s` [E0621]\n-   |             ^^^^\n-\n-error[E0621]: explicit lifetime required in the type of `s`\n-  --> $DIR/regions-glb-free-free.rs:25:13\n-   |\n-LL |           pub fn set_desc(self, s: &str) -> Flag<'a> {\n-   |                                    ---- help: add explicit lifetime `'a` to the type of `s`: `&'a str`\n-LL | /             Flag { //~ ERROR 25:13: 30:14: explicit lifetime required in the type of `s` [E0621]\n-LL | |                 name: self.name,\n-LL | |                 desc: s,\n-LL | |                 max_count: self.max_count,\n-LL | |                 value: self.value\n-LL | |             }\n-   | |_____________^ lifetime `'a` required\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0621`."}, {"sha": "6bc3dafea51f4c2cbbf9c365a56215e01a621788", "filename": "src/test/ui/regions/regions-infer-at-fn-not-param.nll.stderr", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e27bae09ca4947ea20520ba7a7f1737559f8dd0f/src%2Ftest%2Fui%2Fregions%2Fregions-infer-at-fn-not-param.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e27bae09ca4947ea20520ba7a7f1737559f8dd0f/src%2Ftest%2Fui%2Fregions%2Fregions-infer-at-fn-not-param.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-infer-at-fn-not-param.nll.stderr?ref=e27bae09ca4947ea20520ba7a7f1737559f8dd0f", "patch": "@@ -1,17 +0,0 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-infer-at-fn-not-param.rs:23:57\n-   |\n-LL | fn take1<'a>(p: parameterized1) -> parameterized1<'a> { p }\n-   |                                                         ^\n-\n-error[E0621]: explicit lifetime required in the type of `p`\n-  --> $DIR/regions-infer-at-fn-not-param.rs:23:57\n-   |\n-LL | fn take1<'a>(p: parameterized1) -> parameterized1<'a> { p }\n-   |                 --------------                          ^ lifetime `'a` required\n-   |                 |\n-   |                 help: add explicit lifetime `'a` to the type of `p`: `parameterized1<'a>`\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0621`."}, {"sha": "9fc58273c941ea05062d3296f6af3b5754e933a3", "filename": "src/test/ui/regions/regions-infer-bound-from-trait-self.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-infer-bound-from-trait-self.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-infer-bound-from-trait-self.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-infer-bound-from-trait-self.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-infer-bound-from-trait-self.rs:56:9\n-   |\n-LL |         check_bound(x, self)\n-   |         ^^^^^^^^^^^\n-\n error[E0309]: the parameter type `Self` may not live long enough\n   --> $DIR/regions-infer-bound-from-trait-self.rs:56:9\n    |"}, {"sha": "ace8f14c734a09605aac11d0987b7d0cda16501d", "filename": "src/test/ui/regions/regions-infer-bound-from-trait.nll.stderr", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-infer-bound-from-trait.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-infer-bound-from-trait.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-infer-bound-from-trait.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,15 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-infer-bound-from-trait.rs:43:5\n-   |\n-LL |     check_bound(x, a) //~ ERROR parameter type `A` may not live long enough\n-   |     ^^^^^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-infer-bound-from-trait.rs:47:5\n-   |\n-LL |     check_bound(x, a) //~ ERROR parameter type `A` may not live long enough\n-   |     ^^^^^^^^^^^\n-\n error[E0309]: the parameter type `A` may not live long enough\n   --> $DIR/regions-infer-bound-from-trait.rs:43:5\n    |"}, {"sha": "30b892d3710f224f02a95fd34224eeff15d84177", "filename": "src/test/ui/regions/regions-infer-call-3.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-infer-call-3.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-infer-call-3.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-infer-call-3.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-infer-call-3.rs:18:24\n-   |\n-LL |     let z = with(|y| { select(x, y) });\n-   |                        ^^^^^^^^^^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/regions-infer-call-3.rs:18:24\n    |"}, {"sha": "23a719e5503a1fe1df9bf182e45382a0b9a8730a", "filename": "src/test/ui/regions/regions-infer-invariance-due-to-decl.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-infer-invariance-due-to-decl.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-infer-invariance-due-to-decl.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-infer-invariance-due-to-decl.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-infer-invariance-due-to-decl.rs:22:5\n-   |\n-LL |     b_isize //~ ERROR mismatched types\n-   |     ^^^^^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/regions-infer-invariance-due-to-decl.rs:22:5\n    |"}, {"sha": "ff0a6adec049da7d523116bf02ae45579c414be8", "filename": "src/test/ui/regions/regions-infer-invariance-due-to-mutability-3.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-infer-invariance-due-to-mutability-3.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-infer-invariance-due-to-mutability-3.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-infer-invariance-due-to-mutability-3.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-infer-invariance-due-to-mutability-3.rs:21:5\n-   |\n-LL |     b_isize //~ ERROR mismatched types\n-   |     ^^^^^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/regions-infer-invariance-due-to-mutability-3.rs:21:5\n    |"}, {"sha": "c296397954a766437f352a9eb36910d50bf3af17", "filename": "src/test/ui/regions/regions-infer-invariance-due-to-mutability-4.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-infer-invariance-due-to-mutability-4.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-infer-invariance-due-to-mutability-4.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-infer-invariance-due-to-mutability-4.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-infer-invariance-due-to-mutability-4.rs:21:5\n-   |\n-LL |     b_isize //~ ERROR mismatched types\n-   |     ^^^^^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/regions-infer-invariance-due-to-mutability-4.rs:21:5\n    |"}, {"sha": "faeaa5eda02c6dc533c23d4cf1a0bc4f177080a0", "filename": "src/test/ui/regions/regions-infer-not-param.nll.stderr", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-infer-not-param.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-infer-not-param.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-infer-not-param.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,15 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-infer-not-param.rs:25:54\n-   |\n-LL | fn take_direct<'a,'b>(p: direct<'a>) -> direct<'b> { p } //~ ERROR mismatched types\n-   |                                                      ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-infer-not-param.rs:29:63\n-   |\n-LL | fn take_indirect2<'a,'b>(p: indirect2<'a>) -> indirect2<'b> { p } //~ ERROR mismatched types\n-   |                                                               ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/regions-infer-not-param.rs:25:54\n    |"}, {"sha": "8e29e77713ba566838679247a43980011a9c285f", "filename": "src/test/ui/regions/regions-infer-paramd-indirect.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-infer-paramd-indirect.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-infer-paramd-indirect.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-infer-paramd-indirect.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-infer-paramd-indirect.rs:33:18\n-   |\n-LL |         self.f = b;\n-   |                  ^\n-\n error: borrowed data escapes outside of function\n   --> $DIR/regions-infer-paramd-indirect.rs:33:9\n    |"}, {"sha": "d1d98a26a41fac246dc46f2e9d77b553f878913d", "filename": "src/test/ui/regions/regions-lifetime-bounds-on-fns.nll.stderr", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-lifetime-bounds-on-fns.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-lifetime-bounds-on-fns.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-lifetime-bounds-on-fns.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,15 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-lifetime-bounds-on-fns.rs:18:10\n-   |\n-LL |     *x = *y; //~ ERROR E0623\n-   |          ^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-lifetime-bounds-on-fns.rs:24:5\n-   |\n-LL |     a(x, y); //~ ERROR 24:7: 24:8: lifetime mismatch [E0623]\n-   |     ^\n-\n error[E0308]: mismatched types\n   --> $DIR/regions-lifetime-bounds-on-fns.rs:30:43\n    |"}, {"sha": "9e6c57f67332a6dc2b8e6e1163eff52080804d1d", "filename": "src/test/ui/regions/regions-nested-fns.nll.stderr", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-nested-fns.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-nested-fns.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-nested-fns.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,15 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-nested-fns.rs:24:27\n-   |\n-LL |         if false { return x; } //~ ERROR E0312\n-   |                           ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-nested-fns.rs:15:18\n-   |\n-LL |     let mut ay = &y; //~ ERROR E0495\n-   |                  ^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/regions-nested-fns.rs:20:9\n    |"}, {"sha": "6db1f6f4e78a4cf23aa011b4a0f9f0ab4622d3fc", "filename": "src/test/ui/regions/regions-outlives-projection-container-hrtb.nll.stderr", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-outlives-projection-container-hrtb.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-outlives-projection-container-hrtb.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-outlives-projection-container-hrtb.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,15 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-outlives-projection-container-hrtb.rs:42:12\n-   |\n-LL |     let _: &'a WithHrAssoc<TheType<'b>> = loop { };\n-   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-outlives-projection-container-hrtb.rs:63:12\n-   |\n-LL |     let _: &'a WithHrAssocSub<TheType<'b>> = loop { };\n-   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n error: compilation successful\n   --> $DIR/regions-outlives-projection-container-hrtb.rs:68:1\n    |"}, {"sha": "f19feed175272661108e4a5a0b7bb1a2a2967062", "filename": "src/test/ui/regions/regions-proc-bound-capture.nll.stderr", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e27bae09ca4947ea20520ba7a7f1737559f8dd0f/src%2Ftest%2Fui%2Fregions%2Fregions-proc-bound-capture.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e27bae09ca4947ea20520ba7a7f1737559f8dd0f/src%2Ftest%2Fui%2Fregions%2Fregions-proc-bound-capture.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-proc-bound-capture.nll.stderr?ref=e27bae09ca4947ea20520ba7a7f1737559f8dd0f", "patch": "@@ -1,18 +0,0 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-proc-bound-capture.rs:19:14\n-   |\n-LL |     Box::new(move|| { *x }) //~ ERROR explicit lifetime required in the type of `x` [E0621]\n-   |              ^^^^^^^^^^^^^\n-\n-error[E0621]: explicit lifetime required in the type of `x`\n-  --> $DIR/regions-proc-bound-capture.rs:19:5\n-   |\n-LL | fn static_proc(x: &isize) -> Box<FnMut()->(isize) + 'static> {\n-   |                   ------ help: add explicit lifetime `'static` to the type of `x`: `&'static isize`\n-LL |     // This is illegal, because the region bound on `proc` is 'static.\n-LL |     Box::new(move|| { *x }) //~ ERROR explicit lifetime required in the type of `x` [E0621]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^ lifetime `'static` required\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0621`."}, {"sha": "48cd2d5a60bc1de874b8f77e656ec6e32c65abd6", "filename": "src/test/ui/regions/regions-reborrow-from-shorter-mut-ref-mut-ref.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-reborrow-from-shorter-mut-ref-mut-ref.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-reborrow-from-shorter-mut-ref-mut-ref.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-reborrow-from-shorter-mut-ref-mut-ref.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-reborrow-from-shorter-mut-ref-mut-ref.rs:14:5\n-   |\n-LL |     &mut ***p //~ ERROR 14:5: 14:14: lifetime mismatch [E0623]\n-   |     ^^^^^^^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/regions-reborrow-from-shorter-mut-ref-mut-ref.rs:14:5\n    |"}, {"sha": "02c7ce33aabac5d8b3cc215891a45aafa21bb3b5", "filename": "src/test/ui/regions/regions-reborrow-from-shorter-mut-ref.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-reborrow-from-shorter-mut-ref.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-reborrow-from-shorter-mut-ref.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-reborrow-from-shorter-mut-ref.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-reborrow-from-shorter-mut-ref.rs:16:5\n-   |\n-LL |     &mut **p //~ ERROR 16:5: 16:13: lifetime mismatch [E0623]\n-   |     ^^^^^^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/regions-reborrow-from-shorter-mut-ref.rs:16:5\n    |"}, {"sha": "5df6bca72fa0aa4278526f8f2dc4cd2744f142e1", "filename": "src/test/ui/regions/regions-ret-borrowed-1.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-ret-borrowed-1.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-ret-borrowed-1.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-ret-borrowed-1.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-ret-borrowed-1.rs:20:14\n-   |\n-LL |     with(|o| o)\n-   |              ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/regions-ret-borrowed-1.rs:20:14\n    |"}, {"sha": "b36191ada61c773d2809ded5019d32e14e38e4bb", "filename": "src/test/ui/regions/regions-ret-borrowed.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-ret-borrowed.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-ret-borrowed.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-ret-borrowed.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-ret-borrowed.rs:23:14\n-   |\n-LL |     with(|o| o)\n-   |              ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/regions-ret-borrowed.rs:23:14\n    |"}, {"sha": "35c1da61ae28fba30b4e3297d90cdaf73fd75853", "filename": "src/test/ui/regions/regions-return-ref-to-upvar-issue-17403.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-return-ref-to-upvar-issue-17403.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-return-ref-to-upvar-issue-17403.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-return-ref-to-upvar-issue-17403.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-return-ref-to-upvar-issue-17403.rs:17:24\n-   |\n-LL |         let mut f = || &mut x; //~ ERROR cannot infer\n-   |                        ^^^^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/regions-return-ref-to-upvar-issue-17403.rs:17:24\n    |"}, {"sha": "462fbe8ee19bd19585653f6400157c16c330b8c3", "filename": "src/test/ui/regions/regions-static-bound.ll.nll.stderr", "status": "modified", "additions": 2, "deletions": 20, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-static-bound.ll.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-static-bound.ll.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-static-bound.ll.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,21 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-static-bound.rs:19:5\n-   |\n-LL |     t //[ll]~ ERROR E0312\n-   |     ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-static-bound.rs:25:5\n-   |\n-LL |     static_id(&u); //[ll]~ ERROR explicit lifetime required in the type of `u` [E0621]\n-   |     ^^^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-static-bound.rs:28:5\n-   |\n-LL |     static_id_indirect(&v); //[ll]~ ERROR explicit lifetime required in the type of `v` [E0621]\n-   |     ^^^^^^^^^^^^^^^^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/regions-static-bound.rs:19:5\n    |\n@@ -25,15 +7,15 @@ LL |     t //[ll]~ ERROR E0312\n    |     ^ returning this value requires that `'a` must outlive `'static`\n \n error[E0621]: explicit lifetime required in the type of `u`\n-  --> $DIR/regions-static-bound.rs:25:5\n+  --> $DIR/regions-static-bound.rs:24:5\n    |\n LL | fn error(u: &(), v: &()) {\n    |             --- help: add explicit lifetime `'static` to the type of `u`: `&'static ()`\n LL |     static_id(&u); //[ll]~ ERROR explicit lifetime required in the type of `u` [E0621]\n    |     ^^^^^^^^^^^^^ lifetime `'static` required\n \n error[E0621]: explicit lifetime required in the type of `v`\n-  --> $DIR/regions-static-bound.rs:28:5\n+  --> $DIR/regions-static-bound.rs:26:5\n    |\n LL | fn error(u: &(), v: &()) {\n    |                     --- help: add explicit lifetime `'static` to the type of `v`: `&'static ()`"}, {"sha": "cf291279210c9e6c829ee149170df50f65a22f35", "filename": "src/test/ui/regions/regions-static-bound.ll.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-static-bound.ll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-static-bound.ll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-static-bound.ll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -12,15 +12,15 @@ LL | fn static_id_wrong_way<'a>(t: &'a ()) -> &'static () where 'static: 'a {\n    |                        ^^\n \n error[E0621]: explicit lifetime required in the type of `u`\n-  --> $DIR/regions-static-bound.rs:25:5\n+  --> $DIR/regions-static-bound.rs:24:5\n    |\n LL | fn error(u: &(), v: &()) {\n    |             --- help: add explicit lifetime `'static` to the type of `u`: `&'static ()`\n LL |     static_id(&u); //[ll]~ ERROR explicit lifetime required in the type of `u` [E0621]\n    |     ^^^^^^^^^ lifetime `'static` required\n \n error[E0621]: explicit lifetime required in the type of `v`\n-  --> $DIR/regions-static-bound.rs:28:5\n+  --> $DIR/regions-static-bound.rs:26:5\n    |\n LL | fn error(u: &(), v: &()) {\n    |                     --- help: add explicit lifetime `'static` to the type of `v`: `&'static ()`"}, {"sha": "462fbe8ee19bd19585653f6400157c16c330b8c3", "filename": "src/test/ui/regions/regions-static-bound.nll.stderr", "status": "modified", "additions": 2, "deletions": 20, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-static-bound.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-static-bound.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-static-bound.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,21 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-static-bound.rs:19:5\n-   |\n-LL |     t //[ll]~ ERROR E0312\n-   |     ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-static-bound.rs:25:5\n-   |\n-LL |     static_id(&u); //[ll]~ ERROR explicit lifetime required in the type of `u` [E0621]\n-   |     ^^^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-static-bound.rs:28:5\n-   |\n-LL |     static_id_indirect(&v); //[ll]~ ERROR explicit lifetime required in the type of `v` [E0621]\n-   |     ^^^^^^^^^^^^^^^^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/regions-static-bound.rs:19:5\n    |\n@@ -25,15 +7,15 @@ LL |     t //[ll]~ ERROR E0312\n    |     ^ returning this value requires that `'a` must outlive `'static`\n \n error[E0621]: explicit lifetime required in the type of `u`\n-  --> $DIR/regions-static-bound.rs:25:5\n+  --> $DIR/regions-static-bound.rs:24:5\n    |\n LL | fn error(u: &(), v: &()) {\n    |             --- help: add explicit lifetime `'static` to the type of `u`: `&'static ()`\n LL |     static_id(&u); //[ll]~ ERROR explicit lifetime required in the type of `u` [E0621]\n    |     ^^^^^^^^^^^^^ lifetime `'static` required\n \n error[E0621]: explicit lifetime required in the type of `v`\n-  --> $DIR/regions-static-bound.rs:28:5\n+  --> $DIR/regions-static-bound.rs:26:5\n    |\n LL | fn error(u: &(), v: &()) {\n    |                     --- help: add explicit lifetime `'static` to the type of `v`: `&'static ()`"}, {"sha": "c5dc6000e839c270172a53a56472e9a3cb3165a6", "filename": "src/test/ui/regions/regions-static-bound.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-static-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-static-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-static-bound.rs?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -17,17 +17,14 @@ fn static_id_indirect<'a,'b>(t: &'a ()) -> &'static ()\n     where 'a: 'b, 'b: 'static { t }\n fn static_id_wrong_way<'a>(t: &'a ()) -> &'static () where 'static: 'a {\n     t //[ll]~ ERROR E0312\n-        //[nll]~^ WARNING not reporting region error due to nll\n-        //[nll]~| ERROR unsatisfied lifetime constraints\n+        //[nll]~^ ERROR unsatisfied lifetime constraints\n }\n \n fn error(u: &(), v: &()) {\n     static_id(&u); //[ll]~ ERROR explicit lifetime required in the type of `u` [E0621]\n-    //[nll]~^ WARNING not reporting region error due to nll\n-    //[nll]~| ERROR explicit lifetime required in the type of `u` [E0621]\n+    //[nll]~^ ERROR explicit lifetime required in the type of `u` [E0621]\n     static_id_indirect(&v); //[ll]~ ERROR explicit lifetime required in the type of `v` [E0621]\n-    //[nll]~^ WARNING not reporting region error due to nll\n-    //[nll]~| ERROR explicit lifetime required in the type of `v` [E0621]\n+    //[nll]~^ ERROR explicit lifetime required in the type of `v` [E0621]\n }\n \n fn main() {}"}, {"sha": "d4140242c01de773bf102d0655bb74d6b4c0c9b9", "filename": "src/test/ui/regions/regions-trait-object-subtyping.nll.stderr", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-trait-object-subtyping.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fregions%2Fregions-trait-object-subtyping.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-trait-object-subtyping.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,15 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-trait-object-subtyping.rs:25:5\n-   |\n-LL |     x //~ ERROR lifetime bound not satisfied\n-   |     ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/regions-trait-object-subtyping.rs:32:5\n-   |\n-LL |     x //~ ERROR mismatched types\n-   |     ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/regions-trait-object-subtyping.rs:25:5\n    |"}, {"sha": "a3501290cd607d5b0df07aa7ca343560d45e7a50", "filename": "src/test/ui/unboxed-closures/unboxed-closures-infer-argument-types-two-region-pointers.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-infer-argument-types-two-region-pointers.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-infer-argument-types-two-region-pointers.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-infer-argument-types-two-region-pointers.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/unboxed-closures-infer-argument-types-two-region-pointers.rs:27:15\n-   |\n-LL |         x.set(y); //~ ERROR E0312\n-   |               ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/unboxed-closures-infer-argument-types-two-region-pointers.rs:27:9\n    |"}, {"sha": "7adb195b7d0225d68304b023191927b6d3b760e6", "filename": "src/test/ui/underscore-lifetime/dyn-trait-underscore.nll.stderr", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,27 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/dyn-trait-underscore.rs:18:14\n-   |\n-LL |     Box::new(items.iter()) //~ ERROR cannot infer an appropriate lifetime\n-   |              ^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/dyn-trait-underscore.rs:18:20\n-   |\n-LL |     Box::new(items.iter()) //~ ERROR cannot infer an appropriate lifetime\n-   |                    ^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/dyn-trait-underscore.rs:18:5\n-   |\n-LL |     Box::new(items.iter()) //~ ERROR cannot infer an appropriate lifetime\n-   |     ^^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/dyn-trait-underscore.rs:18:5\n-   |\n-LL |     Box::new(items.iter()) //~ ERROR cannot infer an appropriate lifetime\n-   |     ^^^^^^^^^^^^^^^^^^^^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/dyn-trait-underscore.rs:18:5\n    |"}, {"sha": "eedbfbf5f61a7ab6005b76f4a2c752fcdd59364a", "filename": "src/test/ui/underscore-lifetime/underscore-lifetime-elison-mismatch.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Funderscore-lifetime%2Funderscore-lifetime-elison-mismatch.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Funderscore-lifetime%2Funderscore-lifetime-elison-mismatch.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-lifetime%2Funderscore-lifetime-elison-mismatch.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/underscore-lifetime-elison-mismatch.rs:11:49\n-   |\n-LL | fn foo(x: &mut Vec<&'_ u8>, y: &'_ u8) { x.push(y); } //~ ERROR lifetime mismatch\n-   |                                                 ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/underscore-lifetime-elison-mismatch.rs:11:42\n    |"}, {"sha": "f09dcdf25dac96a125848dacbf3a7aebe3d6cc38", "filename": "src/test/ui/variance/variance-btree-invariant-types.nll.stderr", "status": "modified", "additions": 0, "deletions": 72, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fvariance%2Fvariance-btree-invariant-types.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fvariance%2Fvariance-btree-invariant-types.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-btree-invariant-types.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,75 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/variance-btree-invariant-types.rs:16:5\n-   |\n-LL |     v //~ ERROR mismatched types\n-   |     ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/variance-btree-invariant-types.rs:19:5\n-   |\n-LL |     v //~ ERROR mismatched types\n-   |     ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/variance-btree-invariant-types.rs:22:5\n-   |\n-LL |     v //~ ERROR mismatched types\n-   |     ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/variance-btree-invariant-types.rs:25:5\n-   |\n-LL |     v //~ ERROR mismatched types\n-   |     ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/variance-btree-invariant-types.rs:30:5\n-   |\n-LL |     v //~ ERROR mismatched types\n-   |     ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/variance-btree-invariant-types.rs:34:5\n-   |\n-LL |     v //~ ERROR mismatched types\n-   |     ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/variance-btree-invariant-types.rs:38:5\n-   |\n-LL |     v //~ ERROR mismatched types\n-   |     ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/variance-btree-invariant-types.rs:42:5\n-   |\n-LL |     v //~ ERROR mismatched types\n-   |     ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/variance-btree-invariant-types.rs:47:5\n-   |\n-LL |     v //~ ERROR mismatched types\n-   |     ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/variance-btree-invariant-types.rs:51:5\n-   |\n-LL |     v //~ ERROR mismatched types\n-   |     ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/variance-btree-invariant-types.rs:55:5\n-   |\n-LL |     v //~ ERROR mismatched types\n-   |     ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/variance-btree-invariant-types.rs:59:5\n-   |\n-LL |     v //~ ERROR mismatched types\n-   |     ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/variance-btree-invariant-types.rs:16:5\n    |"}, {"sha": "4ef45edc24246f4151405a735bcb739c08999946", "filename": "src/test/ui/variance/variance-contravariant-arg-object.nll.stderr", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fvariance%2Fvariance-contravariant-arg-object.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fvariance%2Fvariance-contravariant-arg-object.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-contravariant-arg-object.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,15 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/variance-contravariant-arg-object.rs:24:5\n-   |\n-LL |     v //~ ERROR mismatched types\n-   |     ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/variance-contravariant-arg-object.rs:32:5\n-   |\n-LL |     v //~ ERROR mismatched types\n-   |     ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/variance-contravariant-arg-object.rs:24:5\n    |"}, {"sha": "3105ebaf03117d1025fcab00f5c75a58ad3aa5e2", "filename": "src/test/ui/variance/variance-covariant-arg-object.nll.stderr", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fvariance%2Fvariance-covariant-arg-object.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fvariance%2Fvariance-covariant-arg-object.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-covariant-arg-object.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,15 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/variance-covariant-arg-object.rs:25:5\n-   |\n-LL |     v //~ ERROR mismatched types\n-   |     ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/variance-covariant-arg-object.rs:32:5\n-   |\n-LL |     v //~ ERROR mismatched types\n-   |     ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/variance-covariant-arg-object.rs:25:5\n    |"}, {"sha": "54ad4f4c5fbe63f97483d8b15fc643b80c336641", "filename": "src/test/ui/variance/variance-invariant-arg-object.nll.stderr", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fvariance%2Fvariance-invariant-arg-object.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fvariance%2Fvariance-invariant-arg-object.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-invariant-arg-object.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,15 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/variance-invariant-arg-object.rs:21:5\n-   |\n-LL |     v //~ ERROR mismatched types\n-   |     ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/variance-invariant-arg-object.rs:28:5\n-   |\n-LL |     v //~ ERROR mismatched types\n-   |     ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/variance-invariant-arg-object.rs:21:5\n    |"}, {"sha": "14b42585d6e2afd408fbdc832e2d988f6f5d4337", "filename": "src/test/ui/variance/variance-trait-matching.nll.stderr", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fvariance%2Fvariance-trait-matching.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fvariance%2Fvariance-trait-matching.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-trait-matching.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,21 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/variance-trait-matching.rs:34:10\n-   |\n-LL |     pick(get, &22) //~ ERROR 34:5: 34:9: explicit lifetime required in the type of `get` [E0621]\n-   |          ^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/variance-trait-matching.rs:34:5\n-   |\n-LL |     pick(get, &22) //~ ERROR 34:5: 34:9: explicit lifetime required in the type of `get` [E0621]\n-   |     ^^^^^^^^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/variance-trait-matching.rs:34:5\n-   |\n-LL |     pick(get, &22) //~ ERROR 34:5: 34:9: explicit lifetime required in the type of `get` [E0621]\n-   |     ^^^^\n-\n error[E0621]: explicit lifetime required in the type of `get`\n   --> $DIR/variance-trait-matching.rs:34:5\n    |"}, {"sha": "37604af5063224774309fd55ac24e06bd45f9236", "filename": "src/test/ui/variance/variance-use-contravariant-struct-1.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fvariance%2Fvariance-use-contravariant-struct-1.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fvariance%2Fvariance-use-contravariant-struct-1.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-use-contravariant-struct-1.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/variance-use-contravariant-struct-1.rs:22:5\n-   |\n-LL |     v //~ ERROR mismatched types\n-   |     ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/variance-use-contravariant-struct-1.rs:22:5\n    |"}, {"sha": "c7fd60301c834a798c8c9bf1b4295b68501f7c04", "filename": "src/test/ui/variance/variance-use-covariant-struct-1.nll.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fvariance%2Fvariance-use-covariant-struct-1.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fvariance%2Fvariance-use-covariant-struct-1.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-use-covariant-struct-1.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,9 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/variance-use-covariant-struct-1.rs:20:5\n-   |\n-LL |     v //~ ERROR mismatched types\n-   |     ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/variance-use-covariant-struct-1.rs:20:5\n    |"}, {"sha": "1638d5ec4fb7a53d9bd8af805cd2553c15b858d0", "filename": "src/test/ui/variance/variance-use-invariant-struct-1.nll.stderr", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fvariance%2Fvariance-use-invariant-struct-1.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fvariance%2Fvariance-use-invariant-struct-1.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-use-invariant-struct-1.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,15 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/variance-use-invariant-struct-1.rs:22:5\n-   |\n-LL |     v //~ ERROR mismatched types\n-   |     ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/variance-use-invariant-struct-1.rs:29:5\n-   |\n-LL |     v //~ ERROR mismatched types\n-   |     ^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/variance-use-invariant-struct-1.rs:22:5\n    |"}, {"sha": "51aec2a949f998f51d9248a25715443c30ba0035", "filename": "src/test/ui/wf/wf-static-method.nll.stderr", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fwf%2Fwf-static-method.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b01550a7185574a7b97699aaf39e1a9cb6e60f72/src%2Ftest%2Fui%2Fwf%2Fwf-static-method.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwf%2Fwf-static-method.nll.stderr?ref=b01550a7185574a7b97699aaf39e1a9cb6e60f72", "patch": "@@ -1,33 +1,3 @@\n-warning: not reporting region error due to nll\n-  --> $DIR/wf-static-method.rs:27:9\n-   |\n-LL |         u //~ ERROR E0312\n-   |         ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/wf-static-method.rs:36:18\n-   |\n-LL |         let me = Self::make_me(); //~ ERROR lifetime bound not satisfied\n-   |                  ^^^^^^^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/wf-static-method.rs:43:9\n-   |\n-LL |         u //~ ERROR E0312\n-   |         ^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/wf-static-method.rs:51:5\n-   |\n-LL |     <()>::static_evil(b) //~ ERROR cannot infer an appropriate lifetime\n-   |     ^^^^^^^^^^^^^^^^^\n-\n-warning: not reporting region error due to nll\n-  --> $DIR/wf-static-method.rs:55:5\n-   |\n-LL |     <IndirectEvil>::static_evil(b)\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n error: unsatisfied lifetime constraints\n   --> $DIR/wf-static-method.rs:27:9\n    |"}]}