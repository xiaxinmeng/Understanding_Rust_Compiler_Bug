{"sha": "7b94d6cf19d1a9af23483d366217b010ed66b78d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiOTRkNmNmMTlkMWE5YWYyMzQ4M2QzNjYyMTdiMDEwZWQ2NmI3OGQ=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-05-04T15:53:24Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-05-04T15:53:24Z"}, "message": "Simplify types in `std::option` doc comment example.", "tree": {"sha": "4863350e309ddbec0c97419bf97152a5f5a24888", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4863350e309ddbec0c97419bf97152a5f5a24888"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b94d6cf19d1a9af23483d366217b010ed66b78d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b94d6cf19d1a9af23483d366217b010ed66b78d", "html_url": "https://github.com/rust-lang/rust/commit/7b94d6cf19d1a9af23483d366217b010ed66b78d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b94d6cf19d1a9af23483d366217b010ed66b78d/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b16c7a235fa0f57fed6b7ec13ffd3cff1bcdd9ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/b16c7a235fa0f57fed6b7ec13ffd3cff1bcdd9ad", "html_url": "https://github.com/rust-lang/rust/commit/b16c7a235fa0f57fed6b7ec13ffd3cff1bcdd9ad"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "515f49d6f0bddc35aa41352a8675e3c8aa819572", "filename": "src/libcore/option.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7b94d6cf19d1a9af23483d366217b010ed66b78d/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b94d6cf19d1a9af23483d366217b010ed66b78d/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=7b94d6cf19d1a9af23483d366217b010ed66b78d", "patch": "@@ -66,14 +66,14 @@\n //! not ([`None`]).\n //!\n //! ```\n-//! let optional: Option<Box<i32>> = None;\n-//! check_optional(&optional);\n+//! let optional = None;\n+//! check_optional(optional);\n //!\n-//! let optional: Option<Box<i32>> = Some(Box::new(9000));\n-//! check_optional(&optional);\n+//! let optional = Some(Box::new(9000));\n+//! check_optional(optional);\n //!\n-//! fn check_optional(optional: &Option<Box<i32>>) {\n-//!     match *optional {\n+//! fn check_optional(optional: Option<Box<i32>>) {\n+//!     match optional {\n //!         Some(ref p) => println!(\"has value {}\", p),\n //!         None => println!(\"has no value\"),\n //!     }"}]}