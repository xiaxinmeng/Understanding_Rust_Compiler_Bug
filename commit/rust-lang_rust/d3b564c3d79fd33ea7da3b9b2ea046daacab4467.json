{"sha": "d3b564c3d79fd33ea7da3b9b2ea046daacab4467", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzYjU2NGMzZDc5ZmQzM2VhN2RhM2I5YjJlYTA0NmRhYWNhYjQ0Njc=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-02-17T12:34:58Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-02-25T11:47:58Z"}, "message": "Pick the injected prelude based on the edition.", "tree": {"sha": "4676fe9f32d1c9f96a3b971da3e7921ef5687cdb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4676fe9f32d1c9f96a3b971da3e7921ef5687cdb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3b564c3d79fd33ea7da3b9b2ea046daacab4467", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3b564c3d79fd33ea7da3b9b2ea046daacab4467", "html_url": "https://github.com/rust-lang/rust/commit/d3b564c3d79fd33ea7da3b9b2ea046daacab4467", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3b564c3d79fd33ea7da3b9b2ea046daacab4467/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ab9fe5d44860050232438967bbbf9bdc35dbde1", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ab9fe5d44860050232438967bbbf9bdc35dbde1", "html_url": "https://github.com/rust-lang/rust/commit/1ab9fe5d44860050232438967bbbf9bdc35dbde1"}], "stats": {"total": 33, "additions": 22, "deletions": 11}, "files": [{"sha": "efda731330721920afc76641035f61e8bd567159", "filename": "compiler/rustc_builtin_macros/src/standard_library_imports.rs", "status": "modified", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/d3b564c3d79fd33ea7da3b9b2ea046daacab4467/compiler%2Frustc_builtin_macros%2Fsrc%2Fstandard_library_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3b564c3d79fd33ea7da3b9b2ea046daacab4467/compiler%2Frustc_builtin_macros%2Fsrc%2Fstandard_library_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fstandard_library_imports.rs?ref=d3b564c3d79fd33ea7da3b9b2ea046daacab4467", "patch": "@@ -3,7 +3,7 @@ use rustc_ast::ptr::P;\n use rustc_expand::base::{ExtCtxt, ResolverExpand};\n use rustc_expand::expand::ExpansionConfig;\n use rustc_session::Session;\n-use rustc_span::edition::Edition;\n+use rustc_span::edition::Edition::*;\n use rustc_span::hygiene::AstPass;\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n use rustc_span::DUMMY_SP;\n@@ -14,7 +14,7 @@ pub fn inject(\n     sess: &Session,\n     alt_std_name: Option<Symbol>,\n ) -> ast::Crate {\n-    let rust_2018 = sess.parse_sess.edition >= Edition::Edition2018;\n+    let edition = sess.parse_sess.edition;\n \n     // the first name in this list is the crate name of the crate with the prelude\n     let names: &[Symbol] = if sess.contains_name(&krate.attrs, sym::no_core) {\n@@ -43,7 +43,11 @@ pub fn inject(\n \n     // .rev() to preserve ordering above in combination with insert(0, ...)\n     for &name in names.iter().rev() {\n-        let ident = if rust_2018 { Ident::new(name, span) } else { Ident::new(name, call_site) };\n+        let ident = if edition >= Edition2018 {\n+            Ident::new(name, span)\n+        } else {\n+            Ident::new(name, call_site)\n+        };\n         krate.items.insert(\n             0,\n             cx.item(\n@@ -59,14 +63,18 @@ pub fn inject(\n     // the one with the prelude.\n     let name = names[0];\n \n-    let import_path = if rust_2018 {\n-        [name, sym::prelude, sym::v1].iter().map(|symbol| Ident::new(*symbol, span)).collect()\n-    } else {\n-        [kw::PathRoot, name, sym::prelude, sym::v1]\n-            .iter()\n-            .map(|symbol| Ident::new(*symbol, span))\n-            .collect()\n-    };\n+    let root = (edition == Edition2015).then(|| kw::PathRoot);\n+\n+    let import_path = root\n+        .iter()\n+        .chain(&[name, sym::prelude])\n+        .chain(&[match edition {\n+            Edition2015 => sym::rust_2015,\n+            Edition2018 => sym::rust_2018,\n+            Edition2021 => sym::rust_2021,\n+        }])\n+        .map(|&symbol| Ident::new(symbol, span))\n+        .collect();\n \n     let use_item = cx.item(\n         span,"}, {"sha": "7b85c964dfd2d14e20da6d4d16e35673340da117", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d3b564c3d79fd33ea7da3b9b2ea046daacab4467/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3b564c3d79fd33ea7da3b9b2ea046daacab4467/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=d3b564c3d79fd33ea7da3b9b2ea046daacab4467", "patch": "@@ -944,8 +944,11 @@ symbols! {\n         rt,\n         rtm_target_feature,\n         rust,\n+        rust_2015,\n         rust_2015_preview,\n+        rust_2018,\n         rust_2018_preview,\n+        rust_2021,\n         rust_2021_preview,\n         rust_begin_unwind,\n         rust_eh_catch_typeinfo,"}]}