{"sha": "6ea97c457ac12d9d8c00d7d1e64db2ecc26b468b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlYTk3YzQ1N2FjMTJkOWQ4YzAwZDdkMWU2NGRiMmVjYzI2YjQ2OGI=", "commit": {"author": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2015-02-22T23:49:07Z"}, "committer": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2015-02-22T23:49:07Z"}, "message": "runtest: update slicing syntax where [] becomes [..]", "tree": {"sha": "f6f03d7b154fa395aac305dadc04e3713da9343f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6f03d7b154fa395aac305dadc04e3713da9343f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ea97c457ac12d9d8c00d7d1e64db2ecc26b468b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ea97c457ac12d9d8c00d7d1e64db2ecc26b468b", "html_url": "https://github.com/rust-lang/rust/commit/6ea97c457ac12d9d8c00d7d1e64db2ecc26b468b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ea97c457ac12d9d8c00d7d1e64db2ecc26b468b/comments", "author": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dcc6ce2c772cb851ac35cbc2ddafcae9bf2fa9fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/dcc6ce2c772cb851ac35cbc2ddafcae9bf2fa9fd", "html_url": "https://github.com/rust-lang/rust/commit/dcc6ce2c772cb851ac35cbc2ddafcae9bf2fa9fd"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "e62cb851fb79d6e4aa220c417ff311bf671bf56d", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6ea97c457ac12d9d8c00d7d1e64db2ecc26b468b/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ea97c457ac12d9d8c00d7d1e64db2ecc26b468b/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=6ea97c457ac12d9d8c00d7d1e64db2ecc26b468b", "patch": "@@ -89,7 +89,7 @@ fn run_cfail_test(config: &Config, props: &TestProps, testfile: &Path) {\n     let proc_res = compile_test(config, props, testfile);\n \n     if proc_res.status.success() {\n-        fatal_proc_rec(&format!(\"{} test compiled successfully!\", config.mode)[],\n+        fatal_proc_rec(&format!(\"{} test compiled successfully!\", config.mode)[..],\n                       &proc_res);\n     }\n \n@@ -398,7 +398,7 @@ fn run_debuginfo_gdb_test(config: &Config, props: &TestProps, testfile: &Path) {\n             for line in breakpoint_lines.iter() {\n                 script_str.push_str(&format!(\"break {:?}:{}\\n\",\n                                              testfile.filename_display(),\n-                                             *line)[]);\n+                                             *line)[..]);\n             }\n             script_str.push_str(&cmds);\n             script_str.push_str(\"quit\\n\");\n@@ -553,17 +553,17 @@ fn run_debuginfo_gdb_test(config: &Config, props: &TestProps, testfile: &Path) {\n             script_str.push_str(\"set print pretty off\\n\");\n \n             // Add the pretty printer directory to GDB's source-file search path\n-            script_str.push_str(&format!(\"directory {}\\n\", rust_pp_module_abs_path)[]);\n+            script_str.push_str(&format!(\"directory {}\\n\", rust_pp_module_abs_path)[..]);\n \n             // Load the target executable\n             script_str.push_str(&format!(\"file {}\\n\",\n-                                         exe_file.as_str().unwrap().replace(\"\\\\\", \"\\\\\\\\\"))[]);\n+                                         exe_file.as_str().unwrap().replace(\"\\\\\", \"\\\\\\\\\"))[..]);\n \n             // Add line breakpoints\n             for line in &breakpoint_lines {\n                 script_str.push_str(&format!(\"break '{}':{}\\n\",\n                                              testfile.filename_display(),\n-                                             *line)[]);\n+                                             *line)[..]);\n             }\n \n             script_str.push_str(&cmds);\n@@ -689,7 +689,7 @@ fn run_debuginfo_lldb_test(config: &Config, props: &TestProps, testfile: &Path)\n                                                .unwrap()\n                                                .to_string();\n \n-    script_str.push_str(&format!(\"command script import {}\\n\", &rust_pp_module_abs_path[..])[]);\n+    script_str.push_str(&format!(\"command script import {}\\n\", &rust_pp_module_abs_path[..])[..]);\n     script_str.push_str(\"type summary add --no-value \");\n     script_str.push_str(\"--python-function lldb_rust_formatters.print_val \");\n     script_str.push_str(\"-x \\\".*\\\" --category Rust\\n\");"}]}