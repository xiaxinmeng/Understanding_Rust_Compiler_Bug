{"sha": "80d535966c93136fff0de7f30539b19c5f7e2d3d", "node_id": "C_kwDOAAsO6NoAKDgwZDUzNTk2NmM5MzEzNmZmZjBkZTdmMzA1MzliMTljNWY3ZTJkM2Q", "commit": {"author": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2022-11-04T11:58:07Z"}, "committer": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2022-11-16T09:01:07Z"}, "message": "normalize source paths from sysroot in compiletest", "tree": {"sha": "e7fcff89dcb13b14a7934d479968759e1fe8db80", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7fcff89dcb13b14a7934d479968759e1fe8db80"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80d535966c93136fff0de7f30539b19c5f7e2d3d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEMycKYjxLY0eb13b7zXazX3c0dp4FAmN0ptMACgkQzXazX3c0\ndp4gIRAAiA7a8h+66UFUjvFINd1/BbmLefLf4cpfvAXhGRXA954nvXlZ/NF9C1a4\nOdLLMAPoBwWqXYrtWQhTj0UO/aZzk2R1bB2J4pphWiiRJ+kaCenZrfrvR6qFFuTi\nNrxfK7u/d4SxQyY5RDluHDTv6n0LnhesipEmU70R9HK60uhuQxni/zoKwNQK0Py9\nyTnn59B8/dgSofS62oFMmHxVf40wz0S5RFwfBdwl3OVljyy/Fg6Dez0PMojmWvzA\n5hcCZAYgtQ7bxPUTRg/TvdSR6yb8imAgrdIf9HlMG3arztaQKgEKS2J2Ocy6Olfj\nD/883BX5VC/LLnKQX0Rap+7mHPIAfLyCYpdC4MeBnx4N4fFM3alMiZGX9Q6iwddM\nw4hoHdGGhEjn2n+cBJhzgG8kys/UVCx9F9jebiuQmHfphYoWopPx7HlwG7VzJWhz\nXbPRaPK0QiIaOIkjHg3vNkioOtWqypLn8GcaVHq1/E8gxvoWt0guJq5a02G6e49K\n0dJSPRv30hGZljYDHFRfCnvdbXKAiwn6d9L+aR/WOCI51K/IEHibBchNKKREVnL9\n3pglnCR3HXbLIqpWLcspYb2j2TxQMc3punCQJW2lq04bekQzhALQ0gHVTCFp5EKQ\nuGCGJEW2fhKIqyTMIKws4jq32EhQT1pLx6OTyuo0iSYGyO8BIjA=\n=oIJg\n-----END PGP SIGNATURE-----", "payload": "tree e7fcff89dcb13b14a7934d479968759e1fe8db80\nparent 357f66072959f494d5fa2e6a269c6100eed703c1\nauthor Pietro Albini <pietro.albini@ferrous-systems.com> 1667563087 +0100\ncommitter Pietro Albini <pietro.albini@ferrous-systems.com> 1668589267 +0100\n\nnormalize source paths from sysroot in compiletest\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80d535966c93136fff0de7f30539b19c5f7e2d3d", "html_url": "https://github.com/rust-lang/rust/commit/80d535966c93136fff0de7f30539b19c5f7e2d3d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80d535966c93136fff0de7f30539b19c5f7e2d3d/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "357f66072959f494d5fa2e6a269c6100eed703c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/357f66072959f494d5fa2e6a269c6100eed703c1", "html_url": "https://github.com/rust-lang/rust/commit/357f66072959f494d5fa2e6a269c6100eed703c1"}], "stats": {"total": 40, "additions": 24, "deletions": 16}, "files": [{"sha": "d40452a94a3d6ddc0b84ee493bb0aa2113f1b552", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/80d535966c93136fff0de7f30539b19c5f7e2d3d/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80d535966c93136fff0de7f30539b19c5f7e2d3d/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=80d535966c93136fff0de7f30539b19c5f7e2d3d", "patch": "@@ -1401,6 +1401,7 @@ note: if you're sure you want to do this, please open an issue as to why. In the\n \n         cmd.arg(\"--src-base\").arg(builder.src.join(\"src/test\").join(suite));\n         cmd.arg(\"--build-base\").arg(testdir(builder, compiler.host).join(suite));\n+        cmd.arg(\"--sysroot-base\").arg(builder.sysroot(compiler));\n         cmd.arg(\"--stage-id\").arg(format!(\"stage{}-{}\", compiler.stage, target));\n         cmd.arg(\"--suite\").arg(suite);\n         cmd.arg(\"--mode\").arg(mode);"}, {"sha": "07b80b8baac1639ee9270142114cbb3f271246b3", "filename": "src/tools/compiletest/src/common.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/80d535966c93136fff0de7f30539b19c5f7e2d3d/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80d535966c93136fff0de7f30539b19c5f7e2d3d/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs?ref=80d535966c93136fff0de7f30539b19c5f7e2d3d", "patch": "@@ -230,6 +230,9 @@ pub struct Config {\n     /// The directory where programs should be built\n     pub build_base: PathBuf,\n \n+    /// The directory containing the compiler sysroot\n+    pub sysroot_base: PathBuf,\n+\n     /// The name of the stage being built (stage1, etc)\n     pub stage_id: String,\n "}, {"sha": "e42b8c5240842a1387a490dfdbb02569a22e18e7", "filename": "src/tools/compiletest/src/header/tests.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/80d535966c93136fff0de7f30539b19c5f7e2d3d/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80d535966c93136fff0de7f30539b19c5f7e2d3d/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Ftests.rs?ref=80d535966c93136fff0de7f30539b19c5f7e2d3d", "patch": "@@ -46,6 +46,7 @@ fn config() -> Config {\n         \"--jsondocck-path=\",\n         \"--src-base=\",\n         \"--build-base=\",\n+        \"--sysroot-base=\",\n         \"--stage-id=stage2\",\n         \"--cc=c\",\n         \"--cxx=c++\","}, {"sha": "519da685f940a24a6b18a2ab5780ad20db66146f", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/80d535966c93136fff0de7f30539b19c5f7e2d3d/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80d535966c93136fff0de7f30539b19c5f7e2d3d/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=80d535966c93136fff0de7f30539b19c5f7e2d3d", "patch": "@@ -69,6 +69,7 @@ pub fn parse_config(args: Vec<String>) -> Config {\n         .optopt(\"\", \"llvm-filecheck\", \"path to LLVM's FileCheck binary\", \"DIR\")\n         .reqopt(\"\", \"src-base\", \"directory to scan for test files\", \"PATH\")\n         .reqopt(\"\", \"build-base\", \"directory to deposit test outputs\", \"PATH\")\n+        .reqopt(\"\", \"sysroot-base\", \"directory containing the compiler sysroot\", \"PATH\")\n         .reqopt(\"\", \"stage-id\", \"the target-stage identifier\", \"stageN-TARGET\")\n         .reqopt(\n             \"\",\n@@ -234,6 +235,7 @@ pub fn parse_config(args: Vec<String>) -> Config {\n         llvm_bin_dir: matches.opt_str(\"llvm-bin-dir\").map(PathBuf::from),\n         src_base,\n         build_base: opt_path(matches, \"build-base\"),\n+        sysroot_base: opt_path(matches, \"sysroot-base\"),\n         stage_id: matches.opt_str(\"stage-id\").unwrap(),\n         mode,\n         suite: matches.opt_str(\"suite\").unwrap(),"}, {"sha": "d085023a27e9684e52b7b421246c63c0a4545460", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 17, "deletions": 16, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/80d535966c93136fff0de7f30539b19c5f7e2d3d/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80d535966c93136fff0de7f30539b19c5f7e2d3d/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=80d535966c93136fff0de7f30539b19c5f7e2d3d", "patch": "@@ -3529,22 +3529,23 @@ impl<'test> TestCx<'test> {\n         let parent_dir = self.testpaths.file.parent().unwrap();\n         normalize_path(parent_dir, \"$DIR\");\n \n-        // Paths into the libstd/libcore\n-        let base_dir = self.config.src_base.parent().unwrap().parent().unwrap().parent().unwrap();\n-        let src_dir = base_dir.join(\"library\");\n-        normalize_path(&src_dir, \"$SRC_DIR\");\n-\n-        // `ui-fulldeps` tests can show paths to the compiler source when testing macros from\n-        // `rustc_macros`\n-        // eg. /home/user/rust/compiler\n-        let compiler_src_dir = base_dir.join(\"compiler\");\n-        normalize_path(&compiler_src_dir, \"$COMPILER_DIR\");\n-\n-        if let Some(virtual_rust_source_base_dir) =\n-            option_env!(\"CFG_VIRTUAL_RUST_SOURCE_BASE_DIR\").map(PathBuf::from)\n-        {\n-            normalize_path(&virtual_rust_source_base_dir.join(\"library\"), \"$SRC_DIR\");\n-            normalize_path(&virtual_rust_source_base_dir.join(\"compiler\"), \"$COMPILER_DIR\");\n+        let source_bases = &[\n+            // Source base on the current filesystem (calculated as parent of `src/test/$suite`):\n+            Some(self.config.src_base.parent().unwrap().parent().unwrap().parent().unwrap().into()),\n+            // Source base on the sysroot (from the src components downloaded by `download-rustc`):\n+            Some(self.config.sysroot_base.join(\"lib\").join(\"rustlib\").join(\"src\").join(\"rust\")),\n+            // Virtual `/rustc/$sha` remapped paths (if `remap-debuginfo` is enabled):\n+            option_env!(\"CFG_VIRTUAL_RUST_SOURCE_BASE_DIR\").map(PathBuf::from),\n+        ];\n+        for base_dir in source_bases {\n+            if let Some(base_dir) = base_dir {\n+                // Paths into the libstd/libcore\n+                normalize_path(&base_dir.join(\"library\"), \"$SRC_DIR\");\n+                // `ui-fulldeps` tests can show paths to the compiler source when testing macros from\n+                // `rustc_macros`\n+                // eg. /home/user/rust/compiler\n+                normalize_path(&base_dir.join(\"compiler\"), \"$COMPILER_DIR\");\n+            }\n         }\n \n         // Paths into the build directory"}]}