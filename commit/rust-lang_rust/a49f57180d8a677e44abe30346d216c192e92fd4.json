{"sha": "a49f57180d8a677e44abe30346d216c192e92fd4", "node_id": "C_kwDOAAsO6NoAKGE0OWY1NzE4MGQ4YTY3N2U0NGFiZTMwMzQ2ZDIxNmMxOTJlOTJmZDQ", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-01-17T08:09:51Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-01-17T08:09:51Z"}, "message": "Add a tidy check to check for \". \\w\"", "tree": {"sha": "af5eb861bd896fe304001416bc9e747609cdf56c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af5eb861bd896fe304001416bc9e747609cdf56c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a49f57180d8a677e44abe30346d216c192e92fd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a49f57180d8a677e44abe30346d216c192e92fd4", "html_url": "https://github.com/rust-lang/rust/commit/a49f57180d8a677e44abe30346d216c192e92fd4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a49f57180d8a677e44abe30346d216c192e92fd4/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a28fb42a8b8f1f67fe854c2206148171e434d73", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a28fb42a8b8f1f67fe854c2206148171e434d73", "html_url": "https://github.com/rust-lang/rust/commit/6a28fb42a8b8f1f67fe854c2206148171e434d73"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "ae7e3d8d702a88980ffddc0b8120ebe31e4465ba", "filename": "src/tools/tidy/src/style.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a49f57180d8a677e44abe30346d216c192e92fd4/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a49f57180d8a677e44abe30346d216c192e92fd4/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs?ref=a49f57180d8a677e44abe30346d216c192e92fd4", "patch": "@@ -45,6 +45,9 @@ C++ code used llvm_unreachable, which triggers undefined behavior\n when executed when assertions are disabled.\n Use llvm::report_fatal_error for increased robustness.\";\n \n+const DOUBLE_SPACE_AFTER_DOT: &str = r\"\\\n+Use a single space after dots in comments.\";\n+\n const ANNOTATIONS_TO_IGNORE: &[&str] = &[\n     \"// @!has\",\n     \"// @has\",\n@@ -405,6 +408,19 @@ pub fn check(path: &Path, bad: &mut bool) {\n             if filename.ends_with(\".cpp\") && line.contains(\"llvm_unreachable\") {\n                 err(LLVM_UNREACHABLE_INFO);\n             }\n+\n+            // For now only enforce in compiler\n+            let is_compiler = || file.components().any(|c| c.as_os_str() == \"compiler\");\n+            if is_compiler()\n+                && line.contains(\"//\")\n+                && line\n+                    .chars()\n+                    .collect::<Vec<_>>()\n+                    .windows(4)\n+                    .any(|cs| matches!(cs, ['.', ' ', ' ', last] if last.is_alphabetic()))\n+            {\n+                err(DOUBLE_SPACE_AFTER_DOT)\n+            }\n         }\n         if leading_new_lines {\n             let mut err = |_| {"}]}