{"sha": "1f991d00e0268976111dc21d8ec82425b9dd5186", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmOTkxZDAwZTAyNjg5NzYxMTFkYzIxZDhlYzgyNDI1YjlkZDUxODY=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-07-26T23:15:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-07-26T23:15:53Z"}, "message": "Merge pull request #1822 from topecongiro/issue-1172\n\nRemove newlines between list elements for expressions", "tree": {"sha": "c0ebba5b647983f8ce376e69210f3d28eb1a6fa1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0ebba5b647983f8ce376e69210f3d28eb1a6fa1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f991d00e0268976111dc21d8ec82425b9dd5186", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f991d00e0268976111dc21d8ec82425b9dd5186", "html_url": "https://github.com/rust-lang/rust/commit/1f991d00e0268976111dc21d8ec82425b9dd5186", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f991d00e0268976111dc21d8ec82425b9dd5186/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bca0dd9a7685c090b3de9751751f2438105cb65d", "url": "https://api.github.com/repos/rust-lang/rust/commits/bca0dd9a7685c090b3de9751751f2438105cb65d", "html_url": "https://github.com/rust-lang/rust/commit/bca0dd9a7685c090b3de9751751f2438105cb65d"}, {"sha": "7c9aee78f05446c647675fbfc408bc1eb0c19bc2", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c9aee78f05446c647675fbfc408bc1eb0c19bc2", "html_url": "https://github.com/rust-lang/rust/commit/7c9aee78f05446c647675fbfc408bc1eb0c19bc2"}], "stats": {"total": 71, "additions": 70, "deletions": 1}, "files": [{"sha": "68272f5af84288fcd2d51a79d680a99f01aefb3a", "filename": "src/expr.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1f991d00e0268976111dc21d8ec82425b9dd5186/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f991d00e0268976111dc21d8ec82425b9dd5186/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=1f991d00e0268976111dc21d8ec82425b9dd5186", "patch": "@@ -527,6 +527,7 @@ where\n         },\n         shape: nested_shape,\n         ends_with_newline: ends_with_newline,\n+        preserve_newline: false,\n         config: context.config,\n     };\n     let list_str = try_opt!(write_list(&items, &fmt));\n@@ -602,6 +603,7 @@ fn rewrite_closure_fn_decl(\n         trailing_separator: SeparatorTactic::Never,\n         shape: arg_shape,\n         ends_with_newline: false,\n+        preserve_newline: true,\n         config: context.config,\n     };\n     let list_str = try_opt!(write_list(&item_vec, &fmt));\n@@ -1673,6 +1675,7 @@ fn rewrite_match_pattern(\n         trailing_separator: SeparatorTactic::Never,\n         shape: pat_shape,\n         ends_with_newline: false,\n+        preserve_newline: false,\n         config: context.config,\n     };\n     let pats_str = try_opt!(write_list(&items, &fmt));\n@@ -2165,6 +2168,7 @@ where\n         },\n         shape: shape,\n         ends_with_newline: context.use_block_indent() && tactic == DefinitiveListTactic::Vertical,\n+        preserve_newline: false,\n         config: context.config,\n     };\n \n@@ -2760,6 +2764,7 @@ where\n         trailing_separator: SeparatorTactic::Never,\n         shape: shape,\n         ends_with_newline: false,\n+        preserve_newline: false,\n         config: context.config,\n     };\n     let list_str = try_opt!(write_list(&item_vec, &fmt));"}, {"sha": "00b6711cf9bbef6547c752bfde1a2de88c787035", "filename": "src/imports.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f991d00e0268976111dc21d8ec82425b9dd5186/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f991d00e0268976111dc21d8ec82425b9dd5186/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=1f991d00e0268976111dc21d8ec82425b9dd5186", "patch": "@@ -478,6 +478,7 @@ fn rewrite_use_list(\n         },\n         shape: nested_shape,\n         ends_with_newline: ends_with_newline,\n+        preserve_newline: true,\n         config: context.config,\n     };\n     let list_str = try_opt!(write_list(&items[first_index..], &fmt));"}, {"sha": "cd2cdf28fe6487bb3aaf5c57bc01112a21bf8373", "filename": "src/items.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1f991d00e0268976111dc21d8ec82425b9dd5186/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f991d00e0268976111dc21d8ec82425b9dd5186/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=1f991d00e0268976111dc21d8ec82425b9dd5186", "patch": "@@ -477,6 +477,7 @@ impl<'a> FmtVisitor<'a> {\n             trailing_separator: self.config.trailing_comma(),\n             shape: shape,\n             ends_with_newline: true,\n+            preserve_newline: true,\n             config: self.config,\n         };\n \n@@ -2252,6 +2253,7 @@ fn rewrite_args(\n         },\n         shape: Shape::legacy(budget, indent),\n         ends_with_newline: tactic.ends_with_newline(context.config.fn_args_layout()),\n+        preserve_newline: true,\n         config: context.config,\n     };\n \n@@ -2425,6 +2427,7 @@ where\n         },\n         shape: shape,\n         ends_with_newline: tactic.ends_with_newline(context.config.generics_indent()),\n+        preserve_newline: true,\n         config: context.config,\n     };\n \n@@ -2538,6 +2541,7 @@ fn rewrite_where_clause_rfc_style(\n         trailing_separator: comma_tactic,\n         shape: clause_shape,\n         ends_with_newline: true,\n+        preserve_newline: true,\n         config: context.config,\n     };\n     let preds_str = try_opt!(write_list(&items.collect::<Vec<_>>(), &fmt));\n@@ -2639,6 +2643,7 @@ fn rewrite_where_clause(\n         trailing_separator: comma_tactic,\n         shape: Shape::legacy(budget, offset),\n         ends_with_newline: tactic.ends_with_newline(context.config.where_pred_indent()),\n+        preserve_newline: true,\n         config: context.config,\n     };\n     let preds_str = try_opt!(write_list(&item_vec, &fmt));"}, {"sha": "5a6225a5903a49c603829c51757646a71c501453", "filename": "src/lists.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1f991d00e0268976111dc21d8ec82425b9dd5186/src%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f991d00e0268976111dc21d8ec82425b9dd5186/src%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flists.rs?ref=1f991d00e0268976111dc21d8ec82425b9dd5186", "patch": "@@ -65,6 +65,8 @@ pub struct ListFormatting<'a> {\n     // Non-expressions, e.g. items, will have a new line at the end of the list.\n     // Important for comment styles.\n     pub ends_with_newline: bool,\n+    // Remove newlines between list elements for expressions.\n+    pub preserve_newline: bool,\n     pub config: &'a Config,\n }\n \n@@ -342,7 +344,9 @@ where\n             item_max_width = None;\n         }\n \n-        if !last && tactic == DefinitiveListTactic::Vertical && item.new_lines {\n+        if formatting.preserve_newline && !last && tactic == DefinitiveListTactic::Vertical &&\n+            item.new_lines\n+        {\n             item_max_width = None;\n             result.push('\\n');\n         }\n@@ -675,6 +679,7 @@ pub fn struct_lit_formatting<'a>(\n         },\n         shape: shape,\n         ends_with_newline: ends_with_newline,\n+        preserve_newline: true,\n         config: context.config,\n     }\n }"}, {"sha": "71e6bcdcd1893d56d9df35073fe572cac55c3b6b", "filename": "src/types.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f991d00e0268976111dc21d8ec82425b9dd5186/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f991d00e0268976111dc21d8ec82425b9dd5186/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=1f991d00e0268976111dc21d8ec82425b9dd5186", "patch": "@@ -360,6 +360,7 @@ where\n         },\n         shape: list_shape,\n         ends_with_newline: tactic.ends_with_newline(context.config.fn_call_style()),\n+        preserve_newline: true,\n         config: context.config,\n     };\n "}, {"sha": "57876d644c23e777fa586d9520620ad2d517ec57", "filename": "src/vertical.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f991d00e0268976111dc21d8ec82425b9dd5186/src%2Fvertical.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f991d00e0268976111dc21d8ec82425b9dd5186/src%2Fvertical.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvertical.rs?ref=1f991d00e0268976111dc21d8ec82425b9dd5186", "patch": "@@ -229,6 +229,7 @@ fn rewrite_aligned_items_inner<T: AlignedItem>(\n         trailing_separator: context.config.trailing_comma(),\n         shape: item_shape,\n         ends_with_newline: true,\n+        preserve_newline: true,\n         config: context.config,\n     };\n     write_list(&items, &fmt)"}, {"sha": "cb94ea9a6dc7a3d954a0f400a49157c1b310acbf", "filename": "src/visitor.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f991d00e0268976111dc21d8ec82425b9dd5186/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f991d00e0268976111dc21d8ec82425b9dd5186/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=1f991d00e0268976111dc21d8ec82425b9dd5186", "patch": "@@ -819,6 +819,7 @@ impl Rewrite for ast::MetaItem {\n                     trailing_separator: SeparatorTactic::Never,\n                     shape: item_shape,\n                     ends_with_newline: false,\n+                    preserve_newline: false,\n                     config: context.config,\n                 };\n                 format!(\"{}({})\", name, try_opt!(write_list(&item_vec, &fmt)))"}, {"sha": "799bfe724322209d5bac06f956d2ca4d7a2a9651", "filename": "tests/source/expr.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/1f991d00e0268976111dc21d8ec82425b9dd5186/tests%2Fsource%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f991d00e0268976111dc21d8ec82425b9dd5186/tests%2Fsource%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fexpr.rs?ref=1f991d00e0268976111dc21d8ec82425b9dd5186", "patch": "@@ -327,3 +327,31 @@ fn issue1749() {\n         }\n     }\n }\n+\n+// #1172\n+fn newlines_between_list_like_expr() {\n+    foo(\n+        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\n+\n+        yyyyyyyyyyyyyyyyyyyyyyyyyyyyyy,\n+\n+        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz,\n+    );\n+\n+    vec![\n+        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\n+\n+        yyyyyyyyyyyyyyyyyyyyyyyyyyyyyy,\n+\n+        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz,\n+    ];\n+\n+    match x {\n+        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx |\n+\n+        yyyyyyyyyyyyyyyyyyyyyyyyyyyyyy |\n+\n+        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz => foo(a, b, c),\n+        _ => bar(),\n+    };\n+}"}, {"sha": "0c05334eca3b15729b4c0ed0a2099e4ddb4d6e91", "filename": "tests/target/expr.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/1f991d00e0268976111dc21d8ec82425b9dd5186/tests%2Ftarget%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f991d00e0268976111dc21d8ec82425b9dd5186/tests%2Ftarget%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr.rs?ref=1f991d00e0268976111dc21d8ec82425b9dd5186", "patch": "@@ -391,3 +391,25 @@ fn issue1749() {\n         }\n     }\n }\n+\n+// #1172\n+fn newlines_between_list_like_expr() {\n+    foo(\n+        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\n+        yyyyyyyyyyyyyyyyyyyyyyyyyyyyyy,\n+        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz,\n+    );\n+\n+    vec![\n+        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\n+        yyyyyyyyyyyyyyyyyyyyyyyyyyyyyy,\n+        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz,\n+    ];\n+\n+    match x {\n+        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx |\n+        yyyyyyyyyyyyyyyyyyyyyyyyyyyyyy |\n+        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz => foo(a, b, c),\n+        _ => bar(),\n+    };\n+}"}]}