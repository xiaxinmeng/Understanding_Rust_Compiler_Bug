{"sha": "05d6e55fab21e76627b3e5e793c062ad4d2b485a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1ZDZlNTVmYWIyMWU3NjYyN2IzZTVlNzkzYzA2MmFkNGQyYjQ4NWE=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2018-07-10T22:08:15Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2018-07-10T22:08:15Z"}, "message": "use the adjusted type for cat_pattern in tuple patterns\n\nThis looks like a typo introduced in #51686.\n\nFixes #52213.", "tree": {"sha": "469b163f1d3cf8ec4c56e20cace87358e2e341d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/469b163f1d3cf8ec4c56e20cace87358e2e341d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05d6e55fab21e76627b3e5e793c062ad4d2b485a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05d6e55fab21e76627b3e5e793c062ad4d2b485a", "html_url": "https://github.com/rust-lang/rust/commit/05d6e55fab21e76627b3e5e793c062ad4d2b485a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05d6e55fab21e76627b3e5e793c062ad4d2b485a/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6807bb1b282e0c5398aa4e659dbc165b6f3c81b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6807bb1b282e0c5398aa4e659dbc165b6f3c81b", "html_url": "https://github.com/rust-lang/rust/commit/c6807bb1b282e0c5398aa4e659dbc165b6f3c81b"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "3b89a9d2de512fbdabf268db97fc85ec1a162b7e", "filename": "src/librustc/middle/mem_categorization.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/05d6e55fab21e76627b3e5e793c062ad4d2b485a/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05d6e55fab21e76627b3e5e793c062ad4d2b485a/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs?ref=05d6e55fab21e76627b3e5e793c062ad4d2b485a", "patch": "@@ -1347,7 +1347,7 @@ impl<'a, 'gcx, 'tcx> MemCategorizationContext<'a, 'gcx, 'tcx> {\n                 ref ty => span_bug!(pat.span, \"tuple pattern unexpected type {:?}\", ty),\n             };\n             for (i, subpat) in subpats.iter().enumerate_and_adjust(expected_len, ddpos) {\n-                let subpat_ty = self.pat_ty_unadjusted(&subpat)?; // see (*2)\n+                let subpat_ty = self.pat_ty_adjusted(&subpat)?; // see (*2)\n                 let interior = InteriorField(FieldIndex(i, Name::intern(&i.to_string())));\n                 let subcmt = Rc::new(self.cat_imm_interior(pat, cmt.clone(), subpat_ty, interior));\n                 self.cat_pattern_(subcmt, &subpat, op)?;"}]}