{"sha": "df37678b768a6329e6aa418e59bfe07d32580ca5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmMzc2NzhiNzY4YTYzMjllNmFhNDE4ZTU5YmZlMDdkMzI1ODBjYTU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-09-10T18:06:50Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-09-10T18:12:20Z"}, "message": "add FIXME related to `ref x` bindings", "tree": {"sha": "d2a2ca9645e05472e6479d5edce67072b55f34ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2a2ca9645e05472e6479d5edce67072b55f34ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df37678b768a6329e6aa418e59bfe07d32580ca5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df37678b768a6329e6aa418e59bfe07d32580ca5", "html_url": "https://github.com/rust-lang/rust/commit/df37678b768a6329e6aa418e59bfe07d32580ca5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df37678b768a6329e6aa418e59bfe07d32580ca5/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b6f9664ed7b648c0cccb04f6c67629b167ff11c", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b6f9664ed7b648c0cccb04f6c67629b167ff11c", "html_url": "https://github.com/rust-lang/rust/commit/2b6f9664ed7b648c0cccb04f6c67629b167ff11c"}], "stats": {"total": 30, "additions": 16, "deletions": 14}, "files": [{"sha": "cef1fb77e5c9e68ade18b997619af33cf5a4e207", "filename": "src/librustc_mir/build/matches/mod.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/df37678b768a6329e6aa418e59bfe07d32580ca5/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df37678b768a6329e6aa418e59bfe07d32580ca5/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs?ref=df37678b768a6329e6aa418e59bfe07d32580ca5", "patch": "@@ -475,7 +475,7 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n     pub fn visit_bindings(\n         &mut self,\n         pattern: &Pattern<'tcx>,\n-        pattern_user_ty: Option<CanonicalTy<'tcx>>,\n+        mut pattern_user_ty: Option<CanonicalTy<'tcx>>,\n         f: &mut impl FnMut(\n             &mut Self,\n             Mutability,\n@@ -497,6 +497,19 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n                 ref subpattern,\n                 ..\n             } => {\n+                match mode {\n+                    BindingMode::ByValue => { }\n+                    BindingMode::ByRef(..) => {\n+                        // If this is a `ref` binding (e.g., `let ref\n+                        // x: T = ..`), then the type of `x` is not\n+                        // `T` but rather `&T`, so ignore\n+                        // `pattern_user_ty` for now.\n+                        //\n+                        // FIXME(#47184): extract or handle `pattern_user_ty` somehow\n+                        pattern_user_ty = None;\n+                    }\n+                }\n+\n                 f(self, mutability, name, mode, var, pattern.span, ty, pattern_user_ty);\n                 if let Some(subpattern) = subpattern.as_ref() {\n                     self.visit_bindings(subpattern, pattern_user_ty, f);"}, {"sha": "53d97360c869e3b034ece137fc2143743e1d53ea", "filename": "src/test/ui/nll/user-annotations/patterns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/df37678b768a6329e6aa418e59bfe07d32580ca5/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df37678b768a6329e6aa418e59bfe07d32580ca5/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fpatterns.rs?ref=df37678b768a6329e6aa418e59bfe07d32580ca5", "patch": "@@ -20,7 +20,7 @@ fn ref_with_ascribed_static_type() -> u32 {\n     // Check the behavior in some wacky cases.\n     let x = 22;\n     let y = &x; //~ ERROR\n-    let ref z: &'static u32 = y; //~ ERROR\n+    let ref z: &'static u32 = y;\n     **z\n }\n "}, {"sha": "563de1a9e02e0caf99742ee945905e31b18eca4d", "filename": "src/test/ui/nll/user-annotations/patterns.stderr", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/df37678b768a6329e6aa418e59bfe07d32580ca5/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fpatterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/df37678b768a6329e6aa418e59bfe07d32580ca5/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fpatterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fpatterns.stderr?ref=df37678b768a6329e6aa418e59bfe07d32580ca5", "patch": "@@ -19,17 +19,6 @@ LL | }\n    |\n    = note: borrowed value must be valid for the static lifetime...\n \n-error[E0597]: `y` does not live long enough\n-  --> $DIR/patterns.rs:23:9\n-   |\n-LL |     let ref z: &'static u32 = y; //~ ERROR\n-   |         ^^^^^ borrowed value does not live long enough\n-LL |     **z\n-LL | }\n-   | - `y` dropped here while still borrowed\n-   |\n-   = note: borrowed value must be valid for the static lifetime...\n-\n error[E0597]: `x` does not live long enough\n   --> $DIR/patterns.rs:46:27\n    |\n@@ -149,6 +138,6 @@ LL | fn a_to_static_then_static<'a>(x: &'a u32) -> &'static u32 {\n LL |     let (y, _z): (&'static u32, u32) = (x, 44); //~ ERROR\n    |                                        ^^^^^^^ requires that `'a` must outlive `'static`\n \n-error: aborting due to 15 previous errors\n+error: aborting due to 14 previous errors\n \n For more information about this error, try `rustc --explain E0597`."}]}