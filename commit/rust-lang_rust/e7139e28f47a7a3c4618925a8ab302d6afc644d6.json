{"sha": "e7139e28f47a7a3c4618925a8ab302d6afc644d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3MTM5ZTI4ZjQ3YTdhM2M0NjE4OTI1YThhYjMwMmQ2YWZjNjQ0ZDY=", "commit": {"author": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2011-08-08T20:23:42Z"}, "committer": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2011-08-15T22:35:27Z"}, "message": "Add a layer of boxing as a hack; this code can segfault otherwise.", "tree": {"sha": "605033431facc4cb07521f059b3a6b16443743d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/605033431facc4cb07521f059b3a6b16443743d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7139e28f47a7a3c4618925a8ab302d6afc644d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7139e28f47a7a3c4618925a8ab302d6afc644d6", "html_url": "https://github.com/rust-lang/rust/commit/e7139e28f47a7a3c4618925a8ab302d6afc644d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7139e28f47a7a3c4618925a8ab302d6afc644d6/comments", "author": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d39be465f77992d969a428befaa3ffcea9fe0da", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d39be465f77992d969a428befaa3ffcea9fe0da", "html_url": "https://github.com/rust-lang/rust/commit/6d39be465f77992d969a428befaa3ffcea9fe0da"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "a934df34618114f603c2898c999956e6399f829c", "filename": "src/comp/syntax/ext/simplext.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e7139e28f47a7a3c4618925a8ab302d6afc644d6/src%2Fcomp%2Fsyntax%2Fext%2Fsimplext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7139e28f47a7a3c4618925a8ab302d6afc644d6/src%2Fcomp%2Fsyntax%2Fext%2Fsimplext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fext%2Fsimplext.rs?ref=e7139e28f47a7a3c4618925a8ab302d6afc644d6", "patch": "@@ -659,7 +659,7 @@ fn add_new_extension(cx: &ext_ctxt, sp: span, arg: @expr,\n     };\n \n     let macro_name: option::t[str] = none;\n-    let clauses: [clause] = ~[];\n+    let clauses: [@clause] = ~[];\n     for arg: @expr  in args {\n         alt arg.node {\n           expr_vec(elts, mut, seq_kind) {\n@@ -691,8 +691,9 @@ fn add_new_extension(cx: &ext_ctxt, sp: span, arg: @expr,\n                                       \"macro name must not be a path\");\n                       }\n                     }\n-                    clauses += ~[{params: pattern_to_selectors(cx, invoc_arg),\n-                                  body: elts.(1u)}];\n+                    clauses +=\n+                        ~[@{params: pattern_to_selectors(cx, invoc_arg),\n+                            body: elts.(1u)}];\n                     // FIXME: check duplicates (or just simplify\n                     // the macro arg situation)\n                   }\n@@ -726,8 +727,8 @@ fn add_new_extension(cx: &ext_ctxt, sp: span, arg: @expr,\n          ext: normal(ext)};\n \n     fn generic_extension(cx: &ext_ctxt, sp: span, arg: @expr,\n-                         body: option::t[str], clauses: [clause]) -> @expr {\n-        for c: clause  in clauses {\n+                         body: option::t[str], clauses: [@clause]) -> @expr {\n+        for c: @clause in clauses {\n             alt use_selectors_to_bind(c.params, arg) {\n               some(bindings) {\n                 ret transcribe(cx, bindings, c.body)"}]}