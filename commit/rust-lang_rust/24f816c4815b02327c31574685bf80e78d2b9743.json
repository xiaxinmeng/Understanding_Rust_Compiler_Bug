{"sha": "24f816c4815b02327c31574685bf80e78d2b9743", "node_id": "C_kwDOAAsO6NoAKDI0ZjgxNmM0ODE1YjAyMzI3YzMxNTc0Njg1YmY4MGU3OGQyYjk3NDM", "commit": {"author": {"name": "Alex Veber", "email": "alexveber@gmail.com", "date": "2021-11-21T00:39:22Z"}, "committer": {"name": "Alex Veber", "email": "alexveber@gmail.com", "date": "2021-11-21T00:39:22Z"}, "message": "fix: better `Fn` traits formatting", "tree": {"sha": "9b07668a01107a6e080752f93d7e0ea4c30c8a1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b07668a01107a6e080752f93d7e0ea4c30c8a1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24f816c4815b02327c31574685bf80e78d2b9743", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24f816c4815b02327c31574685bf80e78d2b9743", "html_url": "https://github.com/rust-lang/rust/commit/24f816c4815b02327c31574685bf80e78d2b9743", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24f816c4815b02327c31574685bf80e78d2b9743/comments", "author": {"login": "veber-alex", "id": 29788806, "node_id": "MDQ6VXNlcjI5Nzg4ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/29788806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/veber-alex", "html_url": "https://github.com/veber-alex", "followers_url": "https://api.github.com/users/veber-alex/followers", "following_url": "https://api.github.com/users/veber-alex/following{/other_user}", "gists_url": "https://api.github.com/users/veber-alex/gists{/gist_id}", "starred_url": "https://api.github.com/users/veber-alex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/veber-alex/subscriptions", "organizations_url": "https://api.github.com/users/veber-alex/orgs", "repos_url": "https://api.github.com/users/veber-alex/repos", "events_url": "https://api.github.com/users/veber-alex/events{/privacy}", "received_events_url": "https://api.github.com/users/veber-alex/received_events", "type": "User", "site_admin": false}, "committer": {"login": "veber-alex", "id": 29788806, "node_id": "MDQ6VXNlcjI5Nzg4ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/29788806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/veber-alex", "html_url": "https://github.com/veber-alex", "followers_url": "https://api.github.com/users/veber-alex/followers", "following_url": "https://api.github.com/users/veber-alex/following{/other_user}", "gists_url": "https://api.github.com/users/veber-alex/gists{/gist_id}", "starred_url": "https://api.github.com/users/veber-alex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/veber-alex/subscriptions", "organizations_url": "https://api.github.com/users/veber-alex/orgs", "repos_url": "https://api.github.com/users/veber-alex/repos", "events_url": "https://api.github.com/users/veber-alex/events{/privacy}", "received_events_url": "https://api.github.com/users/veber-alex/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4566414789310acb2617543f4b50beab4bb48e06", "url": "https://api.github.com/repos/rust-lang/rust/commits/4566414789310acb2617543f4b50beab4bb48e06", "html_url": "https://github.com/rust-lang/rust/commit/4566414789310acb2617543f4b50beab4bb48e06"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "e2424dd6d9e86eb617dfc1b9a6ba753b77c0ee4e", "filename": "crates/hir_ty/src/display.rs", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/24f816c4815b02327c31574685bf80e78d2b9743/crates%2Fhir_ty%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24f816c4815b02327c31574685bf80e78d2b9743/crates%2Fhir_ty%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdisplay.rs?ref=24f816c4815b02327c31574685bf80e78d2b9743", "patch": "@@ -1164,10 +1164,23 @@ impl HirDisplay for Path {\n                 // Do we actually format expressions?\n                 if generic_args.desugared_from_fn {\n                     // First argument will be a tuple, which already includes the parentheses.\n-                    generic_args.args[0].hir_fmt(f)?;\n+                    // If the tuple only contains 1 item, write it manually to avoid the trailing `,`.\n+                    if let hir_def::path::GenericArg::Type(TypeRef::Tuple(v)) =\n+                        &generic_args.args[0]\n+                    {\n+                        if v.len() == 1 {\n+                            write!(f, \"(\")?;\n+                            v[0].hir_fmt(f)?;\n+                            write!(f, \")\")?;\n+                        } else {\n+                            generic_args.args[0].hir_fmt(f)?;\n+                        }\n+                    }\n                     if let Some(ret) = &generic_args.bindings[0].type_ref {\n-                        write!(f, \" -> \")?;\n-                        ret.hir_fmt(f)?;\n+                        if !matches!(ret, TypeRef::Tuple(v) if v.is_empty()) {\n+                            write!(f, \" -> \")?;\n+                            ret.hir_fmt(f)?;\n+                        }\n                     }\n                     return Ok(());\n                 }"}]}