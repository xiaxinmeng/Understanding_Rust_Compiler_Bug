{"sha": "854b78fe22af2ed010cc4367c3456eccf427b6dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1NGI3OGZlMjJhZjJlZDAxMGNjNDM2N2MzNDU2ZWNjZjQyN2I2ZGM=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-03-22T22:36:54Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-03-22T22:36:54Z"}, "message": "Normalize wording of privacy access labels", "tree": {"sha": "ba28904fbb2de8e40498a9f397499d7856294742", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba28904fbb2de8e40498a9f397499d7856294742"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/854b78fe22af2ed010cc4367c3456eccf427b6dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/854b78fe22af2ed010cc4367c3456eccf427b6dc", "html_url": "https://github.com/rust-lang/rust/commit/854b78fe22af2ed010cc4367c3456eccf427b6dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/854b78fe22af2ed010cc4367c3456eccf427b6dc/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94bbd46682fdf37aae7fe661e9f925649d439c36", "url": "https://api.github.com/repos/rust-lang/rust/commits/94bbd46682fdf37aae7fe661e9f925649d439c36", "html_url": "https://github.com/rust-lang/rust/commit/94bbd46682fdf37aae7fe661e9f925649d439c36"}], "stats": {"total": 702, "additions": 370, "deletions": 332}, "files": [{"sha": "d680b9e002678167dcace9bf00a54233ffb02c63", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -1038,7 +1038,7 @@ impl<'a, 'tcx> NamePrivacyVisitor<'a, 'tcx> {\n                 def.variant_descr(),\n                 self.tcx.def_path_str(def.did)\n             )\n-            .span_label(span, format!(\"field `{}` is private\", field.ident))\n+            .span_label(span, \"private field\")\n             .emit();\n         }\n     }\n@@ -1180,7 +1180,11 @@ impl<'a, 'tcx> TypePrivacyVisitor<'a, 'tcx> {\n     fn check_def_id(&mut self, def_id: DefId, kind: &str, descr: &dyn fmt::Display) -> bool {\n         let is_error = !self.item_is_accessible(def_id);\n         if is_error {\n-            self.tcx.sess.span_err(self.span, &format!(\"{} `{}` is private\", kind, descr));\n+            self.tcx\n+                .sess\n+                .struct_span_err(self.span, &format!(\"{} `{}` is private\", kind, descr))\n+                .span_label(self.span, &format!(\"private {}\", kind))\n+                .emit();\n         }\n         is_error\n     }\n@@ -1313,8 +1317,12 @@ impl<'a, 'tcx> Visitor<'tcx> for TypePrivacyVisitor<'a, 'tcx> {\n                     hir::QPath::Resolved(_, ref path) => path.to_string(),\n                     hir::QPath::TypeRelative(_, ref segment) => segment.ident.to_string(),\n                 };\n-                let msg = format!(\"{} `{}` is private\", kind.descr(def_id), name);\n-                self.tcx.sess.span_err(span, &msg);\n+                let kind = kind.descr(def_id);\n+                self.tcx\n+                    .sess\n+                    .struct_span_err(span, &format!(\"{} `{}` is private\", kind, name))\n+                    .span_label(span, &format!(\"private {}\", kind))\n+                    .emit();\n                 return;\n             }\n         }"}, {"sha": "cf9730022d0aa637169e2c3499b6d1699d231880", "filename": "src/librustc_resolve/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Flibrustc_resolve%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Flibrustc_resolve%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdiagnostics.rs?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -952,7 +952,7 @@ impl<'a> Resolver<'a> {\n         let descr = get_descr(binding);\n         let mut err =\n             struct_span_err!(self.session, ident.span, E0603, \"{} `{}` is private\", descr, ident);\n-        err.span_label(ident.span, &format!(\"this {} is private\", descr));\n+        err.span_label(ident.span, &format!(\"private {}\", descr));\n         if let Some(span) = ctor_fields_span {\n             err.span_label(span, \"a constructor is private if any of the fields is private\");\n         }"}, {"sha": "a8d4e7ce5f6ba6cc84b803e43468b5ac9c004adb", "filename": "src/librustc_resolve/late/diagnostics.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -506,10 +506,10 @@ impl<'a> LateResolutionVisitor<'a, '_, '_> {\n \n         match (res, source) {\n             (Res::Def(DefKind::Macro(MacroKind::Bang), _), _) => {\n-                err.span_suggestion(\n-                    span,\n+                err.span_suggestion_verbose(\n+                    span.shrink_to_hi(),\n                     \"use `!` to invoke the macro\",\n-                    format!(\"{}!\", path_str),\n+                    \"!\".to_string(),\n                     Applicability::MaybeIncorrect,\n                 );\n                 if path_str == \"try\" && span.rust_2015() {"}, {"sha": "e00322c739fb189a6cc0e7d69c1ce3c384c7745b", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -1452,8 +1452,13 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n             .expect(\"missing associated type\");\n \n         if !assoc_ty.vis.is_accessible_from(def_scope, tcx) {\n-            let msg = format!(\"associated type `{}` is private\", binding.item_name);\n-            tcx.sess.span_err(binding.span, &msg);\n+            tcx.sess\n+                .struct_span_err(\n+                    binding.span,\n+                    &format!(\"associated type `{}` is private\", binding.item_name),\n+                )\n+                .span_label(binding.span, \"private associated type\")\n+                .emit();\n         }\n         tcx.check_stability(assoc_ty.def_id, Some(hir_ref_id), binding.span);\n \n@@ -2316,8 +2321,12 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n \n         let kind = DefKind::AssocTy;\n         if !item.vis.is_accessible_from(def_scope, tcx) {\n-            let msg = format!(\"{} `{}` is private\", kind.descr(item.def_id), assoc_ident);\n-            tcx.sess.span_err(span, &msg);\n+            let kind = kind.descr(item.def_id);\n+            let msg = format!(\"{} `{}` is private\", kind, assoc_ident);\n+            tcx.sess\n+                .struct_span_err(span, &msg)\n+                .span_label(span, &format!(\"private {}\", kind))\n+                .emit();\n         }\n         tcx.check_stability(item.def_id, Some(hir_ref_id), span);\n "}, {"sha": "f46c43c78dbc599ecc85b9de7fc35405a2cdf81c", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -769,14 +769,16 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             }\n \n             MethodError::PrivateMatch(kind, def_id, out_of_scope_traits) => {\n+                let kind = kind.descr(def_id);\n                 let mut err = struct_span_err!(\n                     self.tcx.sess,\n                     span,\n                     E0624,\n                     \"{} `{}` is private\",\n-                    kind.descr(def_id),\n+                    kind,\n                     item_name\n                 );\n+                err.span_label(span, &format!(\"private {}\", kind));\n                 self.suggest_valid_traits(&mut err, out_of_scope_traits);\n                 err.emit();\n             }"}, {"sha": "305f41433acb6369f1798f5e740fef5cb2eed655", "filename": "src/test/ui/associated-const/associated-const-private-impl.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fassociated-const%2Fassociated-const-private-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fassociated-const%2Fassociated-const-private-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-const%2Fassociated-const-private-impl.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0624]: associated constant `ID` is private\n   --> $DIR/associated-const-private-impl.rs:13:19\n    |\n LL |     assert_eq!(1, bar1::Foo::ID);\n-   |                   ^^^^^^^^^^^^^\n+   |                   ^^^^^^^^^^^^^ private associated constant\n \n error: aborting due to previous error\n "}, {"sha": "bb92c23e0f600b613f77d39fb6453eaa8d29f182", "filename": "src/test/ui/error-codes/E0451.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Ferror-codes%2FE0451.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Ferror-codes%2FE0451.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0451.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,13 +2,13 @@ error[E0451]: field `b` of struct `bar::Foo` is private\n   --> $DIR/E0451.rs:14:21\n    |\n LL |     let bar::Foo{a, b} = foo;\n-   |                     ^ field `b` is private\n+   |                     ^ private field\n \n error[E0451]: field `b` of struct `bar::Foo` is private\n   --> $DIR/E0451.rs:18:29\n    |\n LL |     let f = bar::Foo{ a: 0, b: 0 };\n-   |                             ^^^^ field `b` is private\n+   |                             ^^^^ private field\n \n error: aborting due to 2 previous errors\n "}, {"sha": "ee902584f56dac23028d5be6ef1a01c840a5223e", "filename": "src/test/ui/error-codes/E0603.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Ferror-codes%2FE0603.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Ferror-codes%2FE0603.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0603.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0603]: constant `PRIVATE` is private\n   --> $DIR/E0603.rs:6:17\n    |\n LL |     SomeModule::PRIVATE;\n-   |                 ^^^^^^^ this constant is private\n+   |                 ^^^^^^^ private constant\n    |\n note: the constant `PRIVATE` is defined here\n   --> $DIR/E0603.rs:2:5"}, {"sha": "1d3336fb181a06778af862ecf457850ae2f1c893", "filename": "src/test/ui/error-codes/E0624.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Ferror-codes%2FE0624.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Ferror-codes%2FE0624.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0624.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0624]: associated function `method` is private\n   --> $DIR/E0624.rs:11:9\n    |\n LL |     foo.method();\n-   |         ^^^^^^\n+   |         ^^^^^^ private associated function\n \n error: aborting due to previous error\n "}, {"sha": "7f524230ef00633a7ecc45a9a0273a596744be5c", "filename": "src/test/ui/error-festival.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Ferror-festival.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Ferror-festival.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-festival.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -8,7 +8,7 @@ error[E0603]: constant `FOO` is private\n   --> $DIR/error-festival.rs:22:10\n    |\n LL |     foo::FOO;\n-   |          ^^^ this constant is private\n+   |          ^^^ private constant\n    |\n note: the constant `FOO` is defined here\n   --> $DIR/error-festival.rs:7:5"}, {"sha": "1855c0b14379d0a96d435695743d080d46eca27a", "filename": "src/test/ui/explore-issue-38412.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fexplore-issue-38412.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fexplore-issue-38412.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexplore-issue-38412.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -83,19 +83,19 @@ error[E0624]: associated function `pub_crate` is private\n   --> $DIR/explore-issue-38412.rs:50:7\n    |\n LL |     r.pub_crate();\n-   |       ^^^^^^^^^\n+   |       ^^^^^^^^^ private associated function\n \n error[E0624]: associated function `pub_mod` is private\n   --> $DIR/explore-issue-38412.rs:51:7\n    |\n LL |     r.pub_mod();\n-   |       ^^^^^^^\n+   |       ^^^^^^^ private associated function\n \n error[E0624]: associated function `private` is private\n   --> $DIR/explore-issue-38412.rs:52:7\n    |\n LL |     r.private();\n-   |       ^^^^^^^\n+   |       ^^^^^^^ private associated function\n \n error[E0658]: use of unstable library feature 'unstable_undeclared'\n   --> $DIR/explore-issue-38412.rs:57:7\n@@ -119,19 +119,19 @@ error[E0624]: associated function `pub_crate` is private\n   --> $DIR/explore-issue-38412.rs:63:7\n    |\n LL |     t.pub_crate();\n-   |       ^^^^^^^^^\n+   |       ^^^^^^^^^ private associated function\n \n error[E0624]: associated function `pub_mod` is private\n   --> $DIR/explore-issue-38412.rs:64:7\n    |\n LL |     t.pub_mod();\n-   |       ^^^^^^^\n+   |       ^^^^^^^ private associated function\n \n error[E0624]: associated function `private` is private\n   --> $DIR/explore-issue-38412.rs:65:7\n    |\n LL |     t.private();\n-   |       ^^^^^^^\n+   |       ^^^^^^^ private associated function\n \n error: aborting due to 19 previous errors\n "}, {"sha": "753424c7f88b893000a3a3c9827582a04abded1f", "filename": "src/test/ui/export-import.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fexport-import.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fexport-import.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexport-import.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0603]: function `unexported` is private\n   --> $DIR/export-import.rs:1:8\n    |\n LL | use m::unexported;\n-   |        ^^^^^^^^^^ this function is private\n+   |        ^^^^^^^^^^ private function\n    |\n note: the function `unexported` is defined here\n   --> $DIR/export-import.rs:7:5"}, {"sha": "f73bd454d35922495ee755c3d999e1ce1acc3a81", "filename": "src/test/ui/export-tag-variant.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fexport-tag-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fexport-tag-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexport-tag-variant.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0603]: enum `Y` is private\n   --> $DIR/export-tag-variant.rs:7:26\n    |\n LL | fn main() { let z = foo::Y::Y1; }\n-   |                          ^ this enum is private\n+   |                          ^ private enum\n    |\n note: the enum `Y` is defined here\n   --> $DIR/export-tag-variant.rs:4:5"}, {"sha": "23c29b31c6a8eeb8fb34b6cc073f3b7994e1852f", "filename": "src/test/ui/export.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fexport.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fexport.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexport.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -26,7 +26,7 @@ error[E0603]: function `z` is private\n   --> $DIR/export.rs:10:18\n    |\n LL | fn main() { foo::z(10); }\n-   |                  ^ this function is private\n+   |                  ^ private function\n    |\n note: the function `z` is defined here\n   --> $DIR/export.rs:5:5"}, {"sha": "9eeb83ae1a73f48252f8d8538b10a29f9db58a7c", "filename": "src/test/ui/extern/extern-crate-visibility.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fextern%2Fextern-crate-visibility.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fextern%2Fextern-crate-visibility.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern%2Fextern-crate-visibility.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0603]: crate import `core` is private\n   --> $DIR/extern-crate-visibility.rs:6:10\n    |\n LL | use foo::core::cell;\n-   |          ^^^^ this crate import is private\n+   |          ^^^^ private crate import\n    |\n note: the crate import `core` is defined here\n   --> $DIR/extern-crate-visibility.rs:2:5\n@@ -14,7 +14,7 @@ error[E0603]: crate import `core` is private\n   --> $DIR/extern-crate-visibility.rs:9:10\n    |\n LL |     foo::core::cell::Cell::new(0);\n-   |          ^^^^ this crate import is private\n+   |          ^^^^ private crate import\n    |\n note: the crate import `core` is defined here\n   --> $DIR/extern-crate-visibility.rs:2:5"}, {"sha": "19703fc99fd27070c58802df4301adfe2e3483ed", "filename": "src/test/ui/functional-struct-update/functional-struct-update-respects-privacy.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Ffunctional-struct-update%2Ffunctional-struct-update-respects-privacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Ffunctional-struct-update%2Ffunctional-struct-update-respects-privacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffunctional-struct-update%2Ffunctional-struct-update-respects-privacy.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0451]: field `secret_uid` of struct `foo::S` is private\n   --> $DIR/functional-struct-update-respects-privacy.rs:28:49\n    |\n LL |     let s_2 = foo::S { b: format!(\"ess two\"), ..s_1 }; // FRU ...\n-   |                                                 ^^^ field `secret_uid` is private\n+   |                                                 ^^^ private field\n \n error: aborting due to previous error\n "}, {"sha": "6d784408016f5c88c6ee4b4eaf201979d97db25b", "filename": "src/test/ui/hygiene/fields.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fhygiene%2Ffields.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fhygiene%2Ffields.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Ffields.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error: type `foo::S` is private\n   --> $DIR/fields.rs:15:17\n    |\n LL |         let s = S { x: 0 };\n-   |                 ^^^^^^^^^^\n+   |                 ^^^^^^^^^^ private type\n ...\n LL |     let s = foo::m!(S, x);\n    |             ------------- in this macro invocation\n@@ -13,7 +13,7 @@ error: type `foo::S` is private\n   --> $DIR/fields.rs:16:17\n    |\n LL |         let _ = s.x;\n-   |                 ^\n+   |                 ^ private type\n ...\n LL |     let s = foo::m!(S, x);\n    |             ------------- in this macro invocation\n@@ -24,7 +24,7 @@ error: type `foo::T` is private\n   --> $DIR/fields.rs:18:17\n    |\n LL |         let t = T(0);\n-   |                 ^^^^\n+   |                 ^^^^ private type\n ...\n LL |     let s = foo::m!(S, x);\n    |             ------------- in this macro invocation\n@@ -35,7 +35,7 @@ error: type `foo::T` is private\n   --> $DIR/fields.rs:19:17\n    |\n LL |         let _ = t.0;\n-   |                 ^\n+   |                 ^ private type\n ...\n LL |     let s = foo::m!(S, x);\n    |             ------------- in this macro invocation"}, {"sha": "8ac59263cf21a247d029aee8a80a0000ce45aed3", "filename": "src/test/ui/hygiene/impl_items.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fhygiene%2Fimpl_items.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fhygiene%2Fimpl_items.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fimpl_items.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error: type `for<'r> fn(&'r foo::S) {foo::S::f}` is private\n   --> $DIR/impl_items.rs:12:23\n    |\n LL |         let _: () = S.f();\n-   |                       ^\n+   |                       ^ private type\n ...\n LL |     foo::m!();\n    |     ---------- in this macro invocation"}, {"sha": "c27ba74a263e01b858f60d1971a76d4db98412b8", "filename": "src/test/ui/hygiene/intercrate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fhygiene%2Fintercrate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fhygiene%2Fintercrate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fintercrate.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error: type `fn() -> u32 {intercrate::foo::bar::f}` is private\n   --> $DIR/intercrate.rs:10:16\n    |\n LL |     assert_eq!(intercrate::foo::m!(), 1);\n-   |                ^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^^^^^^ private type\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "70a24304dda3338dcb73714bc0247566e0560249", "filename": "src/test/ui/hygiene/privacy.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fhygiene%2Fprivacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fhygiene%2Fprivacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fprivacy.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0603]: function `f` is private\n   --> $DIR/privacy.rs:16:14\n    |\n LL |         foo::f()\n-   |              ^ this function is private\n+   |              ^ private function\n    |\n note: the function `f` is defined here\n   --> $DIR/privacy.rs:4:5"}, {"sha": "024ce8207601e9db8c01e33b9d85d12976659e3e", "filename": "src/test/ui/hygiene/rustc-macro-transparency.stderr", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fhygiene%2Frustc-macro-transparency.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fhygiene%2Frustc-macro-transparency.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Frustc-macro-transparency.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -8,13 +8,23 @@ error[E0423]: expected value, found macro `semitransparent`\n   --> $DIR/rustc-macro-transparency.rs:29:5\n    |\n LL |     semitransparent;\n-   |     ^^^^^^^^^^^^^^^ help: use `!` to invoke the macro: `semitransparent!`\n+   |     ^^^^^^^^^^^^^^^\n+   |\n+help: use `!` to invoke the macro\n+   |\n+LL |     semitransparent!;\n+   |                    ^\n \n error[E0423]: expected value, found macro `opaque`\n   --> $DIR/rustc-macro-transparency.rs:30:5\n    |\n LL |     opaque;\n-   |     ^^^^^^ help: use `!` to invoke the macro: `opaque!`\n+   |     ^^^^^^\n+   |\n+help: use `!` to invoke the macro\n+   |\n+LL |     opaque!;\n+   |           ^\n \n error: aborting due to 3 previous errors\n "}, {"sha": "797712e2db99e92f0af176e0a94f534fe1579eae", "filename": "src/test/ui/import.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fimport.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fimport.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimport.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -17,7 +17,7 @@ error[E0603]: unresolved item import `foo` is private\n   --> $DIR/import.rs:15:10\n    |\n LL |     zed::foo();\n-   |          ^^^ this unresolved item import is private\n+   |          ^^^ private unresolved item import\n    |\n note: the unresolved item import `foo` is defined here\n   --> $DIR/import.rs:10:9"}, {"sha": "5adbc4b66d1336ba5270b7dbf0fd89faadccd9ff", "filename": "src/test/ui/imports/issue-55884-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fimports%2Fissue-55884-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fimports%2Fissue-55884-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fissue-55884-2.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0603]: struct import `ParseOptions` is private\n   --> $DIR/issue-55884-2.rs:12:17\n    |\n LL | pub use parser::ParseOptions;\n-   |                 ^^^^^^^^^^^^ this struct import is private\n+   |                 ^^^^^^^^^^^^ private struct import\n    |\n note: the struct import `ParseOptions` is defined here...\n   --> $DIR/issue-55884-2.rs:9:9"}, {"sha": "79c8e1130c87afe576e2fa9d5408713350892ad8", "filename": "src/test/ui/imports/reexports.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fimports%2Freexports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fimports%2Freexports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Freexports.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -14,7 +14,7 @@ error[E0603]: module import `foo` is private\n   --> $DIR/reexports.rs:33:15\n    |\n LL |     use b::a::foo::S;\n-   |               ^^^ this module import is private\n+   |               ^^^ private module import\n    |\n note: the module import `foo` is defined here...\n   --> $DIR/reexports.rs:21:17\n@@ -31,7 +31,7 @@ error[E0603]: module import `foo` is private\n   --> $DIR/reexports.rs:34:15\n    |\n LL |     use b::b::foo::S as T;\n-   |               ^^^ this module import is private\n+   |               ^^^ private module import\n    |\n note: the module import `foo` is defined here...\n   --> $DIR/reexports.rs:26:17"}, {"sha": "ddf3608933909d7f6bfb6d28f360aa3b0e05624c", "filename": "src/test/ui/imports/unresolved-imports-used.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fimports%2Funresolved-imports-used.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fimports%2Funresolved-imports-used.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Funresolved-imports-used.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -38,7 +38,7 @@ error[E0603]: function `quz` is private\n   --> $DIR/unresolved-imports-used.rs:9:10\n    |\n LL | use qux::quz;\n-   |          ^^^ this function is private\n+   |          ^^^ private function\n    |\n note: the function `quz` is defined here\n   --> $DIR/unresolved-imports-used.rs:5:4"}, {"sha": "f1da33eaba1c35062393659f1a8139033deda121", "filename": "src/test/ui/issues/issue-10545.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fissues%2Fissue-10545.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fissues%2Fissue-10545.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-10545.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0603]: struct `S` is private\n   --> $DIR/issue-10545.rs:6:14\n    |\n LL | fn foo(_: a::S) {\n-   |              ^ this struct is private\n+   |              ^ private struct\n    |\n note: the struct `S` is defined here\n   --> $DIR/issue-10545.rs:2:5"}, {"sha": "aa9768b1885a23c13915d5ef0683769aa3c96552", "filename": "src/test/ui/issues/issue-11593.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fissues%2Fissue-11593.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fissues%2Fissue-11593.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-11593.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0603]: trait `Foo` is private\n   --> $DIR/issue-11593.rs:7:24\n    |\n LL | impl private_trait_xc::Foo for Bar {}\n-   |                        ^^^ this trait is private\n+   |                        ^^^ private trait\n    |\n note: the trait `Foo` is defined here\n   --> $DIR/auxiliary/private-trait-xc.rs:1:1"}, {"sha": "ea224af8ed7e246a9c2dde58e04448ba3bec9066", "filename": "src/test/ui/issues/issue-11680.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fissues%2Fissue-11680.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fissues%2Fissue-11680.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-11680.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0603]: enum `Foo` is private\n   --> $DIR/issue-11680.rs:6:21\n    |\n LL |     let _b = other::Foo::Bar(1);\n-   |                     ^^^ this enum is private\n+   |                     ^^^ private enum\n    |\n note: the enum `Foo` is defined here\n   --> $DIR/auxiliary/issue-11680.rs:1:1\n@@ -14,7 +14,7 @@ error[E0603]: enum `Foo` is private\n   --> $DIR/issue-11680.rs:9:27\n    |\n LL |     let _b = other::test::Foo::Bar(1);\n-   |                           ^^^ this enum is private\n+   |                           ^^^ private enum\n    |\n note: the enum `Foo` is defined here\n   --> $DIR/auxiliary/issue-11680.rs:6:5"}, {"sha": "f30b6cdeaf073d4686258b481b26906481513544", "filename": "src/test/ui/issues/issue-13407.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fissues%2Fissue-13407.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fissues%2Fissue-13407.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-13407.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0603]: unit struct `C` is private\n   --> $DIR/issue-13407.rs:6:8\n    |\n LL |     A::C = 1;\n-   |        ^ this unit struct is private\n+   |        ^ private unit struct\n    |\n note: the unit struct `C` is defined here\n   --> $DIR/issue-13407.rs:2:5"}, {"sha": "cdd0772d39fb04625891a318375c095c803db37f", "filename": "src/test/ui/issues/issue-13641.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fissues%2Fissue-13641.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fissues%2Fissue-13641.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-13641.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0603]: struct `Foo` is private\n   --> $DIR/issue-13641.rs:9:8\n    |\n LL |     a::Foo::new();\n-   |        ^^^ this struct is private\n+   |        ^^^ private struct\n    |\n note: the struct `Foo` is defined here\n   --> $DIR/issue-13641.rs:2:5\n@@ -14,7 +14,7 @@ error[E0603]: enum `Bar` is private\n   --> $DIR/issue-13641.rs:11:8\n    |\n LL |     a::Bar::new();\n-   |        ^^^ this enum is private\n+   |        ^^^ private enum\n    |\n note: the enum `Bar` is defined here\n   --> $DIR/issue-13641.rs:4:5"}, {"sha": "84359803bbae7c7ceb0d4a0e78f20b218a4b2e53", "filename": "src/test/ui/issues/issue-16725.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fissues%2Fissue-16725.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fissues%2Fissue-16725.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-16725.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0603]: function `bar` is private\n   --> $DIR/issue-16725.rs:6:19\n    |\n LL |     unsafe { foo::bar(); }\n-   |                   ^^^ this function is private\n+   |                   ^^^ private function\n    |\n note: the function `bar` is defined here\n   --> $DIR/auxiliary/issue-16725.rs:2:5"}, {"sha": "d4595be749034b5a7d774299998500ad71422459", "filename": "src/test/ui/issues/issue-17718-const-privacy.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fissues%2Fissue-17718-const-privacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fissues%2Fissue-17718-const-privacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17718-const-privacy.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0603]: constant `B` is private\n   --> $DIR/issue-17718-const-privacy.rs:5:8\n    |\n LL | use a::B;\n-   |        ^ this constant is private\n+   |        ^ private constant\n    |\n note: the constant `B` is defined here\n   --> $DIR/issue-17718-const-privacy.rs:13:5\n@@ -14,7 +14,7 @@ error[E0603]: constant `BAR` is private\n   --> $DIR/issue-17718-const-privacy.rs:8:5\n    |\n LL |     BAR,\n-   |     ^^^ this constant is private\n+   |     ^^^ private constant\n    |\n note: the constant `BAR` is defined here\n   --> $DIR/auxiliary/issue-17718-const-privacy.rs:4:1"}, {"sha": "421ed0a5a9389f9a6304c0d10e5c459261e7ea1c", "filename": "src/test/ui/issues/issue-21202.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fissues%2Fissue-21202.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fissues%2Fissue-21202.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-21202.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0624]: associated function `foo` is private\n   --> $DIR/issue-21202.rs:10:9\n    |\n LL |         Foo::foo(&f);\n-   |         ^^^^^^^^\n+   |         ^^^^^^^^ private associated function\n \n error: aborting due to previous error\n "}, {"sha": "1afaf622be7da3557ddc76aed7ea989b6a9f1cd6", "filename": "src/test/ui/issues/issue-28388-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fissues%2Fissue-28388-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fissues%2Fissue-28388-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-28388-2.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0603]: module `n` is private\n   --> $DIR/issue-28388-2.rs:7:8\n    |\n LL | use m::n::{};\n-   |        ^ this module is private\n+   |        ^ private module\n    |\n note: the module `n` is defined here\n   --> $DIR/issue-28388-2.rs:4:5"}, {"sha": "7ce95e4b0df8b616cbff95907ec6223631a9c230", "filename": "src/test/ui/issues/issue-29161.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fissues%2Fissue-29161.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fissues%2Fissue-29161.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-29161.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -8,7 +8,7 @@ error[E0603]: struct `A` is private\n   --> $DIR/issue-29161.rs:13:8\n    |\n LL |     a::A::default();\n-   |        ^ this struct is private\n+   |        ^ private struct\n    |\n note: the struct `A` is defined here\n   --> $DIR/issue-29161.rs:2:5"}, {"sha": "b63967bb9dce3e9819ba5638b7f02a7572f746b0", "filename": "src/test/ui/issues/issue-3763.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fissues%2Fissue-3763.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fissues%2Fissue-3763.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-3763.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -14,13 +14,13 @@ error[E0624]: associated function `happyfun` is private\n   --> $DIR/issue-3763.rs:24:18\n    |\n LL |     (&my_struct).happyfun();\n-   |                  ^^^^^^^^\n+   |                  ^^^^^^^^ private associated function\n \n error[E0624]: associated function `happyfun` is private\n   --> $DIR/issue-3763.rs:26:27\n    |\n LL |     (Box::new(my_struct)).happyfun();\n-   |                           ^^^^^^^^\n+   |                           ^^^^^^^^ private associated function\n \n error[E0616]: field `priv_field` of struct `my_mod::MyStruct` is private\n   --> $DIR/issue-3763.rs:27:26"}, {"sha": "1a287e94bafd3d51cb7caaaa50bc29ba2c1a0910", "filename": "src/test/ui/issues/issue-38857.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fissues%2Fissue-38857.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fissues%2Fissue-38857.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-38857.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -8,7 +8,7 @@ error[E0603]: module `sys` is private\n   --> $DIR/issue-38857.rs:7:18\n    |\n LL |     let a = std::sys::imp::process::process_common::StdioPipes { ..panic!() };\n-   |                  ^^^ this module is private\n+   |                  ^^^ private module\n    |\n note: the module `sys` is defined here\n   --> $SRC_DIR/libstd/lib.rs:LL:COL"}, {"sha": "deecf7a9d752ca3e938f715abb759a06b120d2b4", "filename": "src/test/ui/issues/issue-3993.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fissues%2Fissue-3993.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fissues%2Fissue-3993.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-3993.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0603]: function `fly` is private\n   --> $DIR/issue-3993.rs:1:10\n    |\n LL | use zoo::fly;\n-   |          ^^^ this function is private\n+   |          ^^^ private function\n    |\n note: the function `fly` is defined here\n   --> $DIR/issue-3993.rs:4:5"}, {"sha": "973e6c12aa151480c747759cc8f1ea78df3fbe3b", "filename": "src/test/ui/issues/issue-53498.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fissues%2Fissue-53498.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fissues%2Fissue-53498.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-53498.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0624]: associated function `foo` is private\n   --> $DIR/issue-53498.rs:16:5\n    |\n LL |     test::Foo::<test::B>::foo();\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^ private associated function\n \n error: aborting due to previous error\n "}, {"sha": "3092d76c268adaa36f009d7a2d46e913525b9061", "filename": "src/test/ui/macros/macro-local-data-key-priv.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fmacros%2Fmacro-local-data-key-priv.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fmacros%2Fmacro-local-data-key-priv.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-local-data-key-priv.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0603]: constant `baz` is private\n   --> $DIR/macro-local-data-key-priv.rs:8:10\n    |\n LL |     bar::baz.with(|_| ());\n-   |          ^^^ this constant is private\n+   |          ^^^ private constant\n    |\n note: the constant `baz` is defined here\n   --> $DIR/macro-local-data-key-priv.rs:4:5"}, {"sha": "1c5613ac986c438f1f71f4affa08790700fb63b6", "filename": "src/test/ui/parser/macro/pub-item-macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fpub-item-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fpub-item-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fpub-item-macro.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -14,7 +14,7 @@ error[E0603]: static `x` is private\n   --> $DIR/pub-item-macro.rs:20:23\n    |\n LL |     let y: u32 = foo::x;\n-   |                       ^ this static is private\n+   |                       ^ private static\n    |\n note: the static `x` is defined here\n   --> $DIR/pub-item-macro.rs:5:9"}, {"sha": "1e94e7c620d033d93ae001d967ce1c65b069e3ad", "filename": "src/test/ui/privacy/associated-item-privacy-inherent.stderr", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fassociated-item-privacy-inherent.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fassociated-item-privacy-inherent.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fassociated-item-privacy-inherent.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error: type `for<'r> fn(&'r priv_nominal::Pub) {priv_nominal::Pub::method}` is p\n   --> $DIR/associated-item-privacy-inherent.rs:13:21\n    |\n LL |         let value = Pub::method;\n-   |                     ^^^^^^^^^^^\n+   |                     ^^^^^^^^^^^ private type\n ...\n LL |     priv_nominal::mac!();\n    |     --------------------- in this macro invocation\n@@ -13,7 +13,7 @@ error: type `for<'r> fn(&'r priv_nominal::Pub) {priv_nominal::Pub::method}` is p\n   --> $DIR/associated-item-privacy-inherent.rs:15:9\n    |\n LL |         value;\n-   |         ^^^^^\n+   |         ^^^^^ private type\n ...\n LL |     priv_nominal::mac!();\n    |     --------------------- in this macro invocation\n@@ -24,7 +24,7 @@ error: type `for<'r> fn(&'r priv_nominal::Pub) {priv_nominal::Pub::method}` is p\n   --> $DIR/associated-item-privacy-inherent.rs:17:13\n    |\n LL |         Pub.method();\n-   |             ^^^^^^\n+   |             ^^^^^^ private type\n ...\n LL |     priv_nominal::mac!();\n    |     --------------------- in this macro invocation\n@@ -35,7 +35,7 @@ error: associated constant `CONST` is private\n   --> $DIR/associated-item-privacy-inherent.rs:19:9\n    |\n LL |         Pub::CONST;\n-   |         ^^^^^^^^^^\n+   |         ^^^^^^^^^^ private associated constant\n ...\n LL |     priv_nominal::mac!();\n    |     --------------------- in this macro invocation\n@@ -46,7 +46,7 @@ error: type `priv_signature::Priv` is private\n   --> $DIR/associated-item-privacy-inherent.rs:37:21\n    |\n LL |         let value = Pub::method;\n-   |                     ^^^^^^^^^^^\n+   |                     ^^^^^^^^^^^ private type\n ...\n LL |     priv_signature::mac!();\n    |     ----------------------- in this macro invocation\n@@ -57,7 +57,7 @@ error: type `priv_signature::Priv` is private\n   --> $DIR/associated-item-privacy-inherent.rs:39:9\n    |\n LL |         value;\n-   |         ^^^^^\n+   |         ^^^^^ private type\n ...\n LL |     priv_signature::mac!();\n    |     ----------------------- in this macro invocation\n@@ -68,7 +68,7 @@ error: type `priv_signature::Priv` is private\n   --> $DIR/associated-item-privacy-inherent.rs:41:13\n    |\n LL |         Pub.method(loop {});\n-   |             ^^^^^^\n+   |             ^^^^^^ private type\n ...\n LL |     priv_signature::mac!();\n    |     ----------------------- in this macro invocation\n@@ -79,7 +79,7 @@ error: type `priv_substs::Priv` is private\n   --> $DIR/associated-item-privacy-inherent.rs:57:21\n    |\n LL |         let value = Pub::method::<Priv>;\n-   |                     ^^^^^^^^^^^^^^^^^^^\n+   |                     ^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_substs::mac!();\n    |     -------------------- in this macro invocation\n@@ -90,7 +90,7 @@ error: type `priv_substs::Priv` is private\n   --> $DIR/associated-item-privacy-inherent.rs:59:9\n    |\n LL |         value;\n-   |         ^^^^^\n+   |         ^^^^^ private type\n ...\n LL |     priv_substs::mac!();\n    |     -------------------- in this macro invocation\n@@ -101,7 +101,7 @@ error: type `priv_substs::Priv` is private\n   --> $DIR/associated-item-privacy-inherent.rs:61:9\n    |\n LL |         Pub.method::<Priv>();\n-   |         ^^^^^^^^^^^^^^^^^^^^\n+   |         ^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_substs::mac!();\n    |     -------------------- in this macro invocation\n@@ -112,7 +112,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-inherent.rs:80:21\n    |\n LL |         let value = <Pub>::method;\n-   |                     ^^^^^^^^^^^^^\n+   |                     ^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation\n@@ -123,7 +123,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-inherent.rs:82:9\n    |\n LL |         value;\n-   |         ^^^^^\n+   |         ^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation\n@@ -134,7 +134,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-inherent.rs:84:21\n    |\n LL |         let value = Pub::method;\n-   |                     ^^^^^^^^^^^\n+   |                     ^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation\n@@ -145,7 +145,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-inherent.rs:86:9\n    |\n LL |         value;\n-   |         ^^^^^\n+   |         ^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation\n@@ -156,7 +156,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-inherent.rs:88:21\n    |\n LL |         let value = <Pub>::static_method;\n-   |                     ^^^^^^^^^^^^^^^^^^^^\n+   |                     ^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation\n@@ -167,7 +167,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-inherent.rs:90:9\n    |\n LL |         value;\n-   |         ^^^^^\n+   |         ^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation\n@@ -178,7 +178,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-inherent.rs:92:21\n    |\n LL |         let value = Pub::static_method;\n-   |                     ^^^^^^^^^^^^^^^^^^\n+   |                     ^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation\n@@ -189,7 +189,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-inherent.rs:94:9\n    |\n LL |         value;\n-   |         ^^^^^\n+   |         ^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation\n@@ -200,7 +200,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-inherent.rs:96:19\n    |\n LL |         Pub(Priv).method();\n-   |                   ^^^^^^\n+   |                   ^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation\n@@ -211,7 +211,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-inherent.rs:99:10\n    |\n LL |         <Pub>::CONST;\n-   |          ^^^\n+   |          ^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation\n@@ -222,7 +222,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-inherent.rs:101:9\n    |\n LL |         Pub::CONST;\n-   |         ^^^^^^^^^^\n+   |         ^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation"}, {"sha": "c30cc947d450869bbe4d19437d5cfbafd2e3eca6", "filename": "src/test/ui/privacy/associated-item-privacy-trait.stderr", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fassociated-item-privacy-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fassociated-item-privacy-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fassociated-item-privacy-trait.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error: type `for<'r> fn(&'r priv_trait::Pub) {<priv_trait::Pub as priv_trait::Pr\n   --> $DIR/associated-item-privacy-trait.rs:17:21\n    |\n LL |         let value = <Pub as PrivTr>::method;\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_trait::mac!();\n    |     ------------------- in this macro invocation\n@@ -13,7 +13,7 @@ error: type `for<'r> fn(&'r priv_trait::Pub) {<priv_trait::Pub as priv_trait::Pr\n   --> $DIR/associated-item-privacy-trait.rs:19:9\n    |\n LL |         value;\n-   |         ^^^^^\n+   |         ^^^^^ private type\n ...\n LL |     priv_trait::mac!();\n    |     ------------------- in this macro invocation\n@@ -24,7 +24,7 @@ error: type `for<'r> fn(&'r Self) {<Self as priv_trait::PrivTr>::method}` is pri\n   --> $DIR/associated-item-privacy-trait.rs:21:13\n    |\n LL |         Pub.method();\n-   |             ^^^^^^\n+   |             ^^^^^^ private type\n ...\n LL |     priv_trait::mac!();\n    |     ------------------- in this macro invocation\n@@ -35,7 +35,7 @@ error: associated constant `PrivTr::CONST` is private\n   --> $DIR/associated-item-privacy-trait.rs:23:9\n    |\n LL |         <Pub as PrivTr>::CONST;\n-   |         ^^^^^^^^^^^^^^^^^^^^^^\n+   |         ^^^^^^^^^^^^^^^^^^^^^^ private associated constant\n ...\n LL |     priv_trait::mac!();\n    |     ------------------- in this macro invocation\n@@ -46,7 +46,7 @@ error: associated type `PrivTr::AssocTy` is private\n   --> $DIR/associated-item-privacy-trait.rs:25:16\n    |\n LL |         let _: <Pub as PrivTr>::AssocTy;\n-   |                ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^^^^^^^^^ private associated type\n ...\n LL |     priv_trait::mac!();\n    |     ------------------- in this macro invocation\n@@ -57,7 +57,7 @@ error: trait `priv_trait::PrivTr` is private\n   --> $DIR/associated-item-privacy-trait.rs:27:34\n    |\n LL |         pub type InSignatureTy = <Pub as PrivTr>::AssocTy;\n-   |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                                  ^^^^^^^^^^^^^^^^^^^^^^^^ private trait\n ...\n LL |     priv_trait::mac!();\n    |     ------------------- in this macro invocation\n@@ -68,7 +68,7 @@ error: trait `priv_trait::PrivTr` is private\n   --> $DIR/associated-item-privacy-trait.rs:29:34\n    |\n LL |         pub trait InSignatureTr: PrivTr {}\n-   |                                  ^^^^^^\n+   |                                  ^^^^^^ private trait\n ...\n LL |     priv_trait::mac!();\n    |     ------------------- in this macro invocation\n@@ -79,7 +79,7 @@ error: trait `priv_trait::PrivTr` is private\n   --> $DIR/associated-item-privacy-trait.rs:31:14\n    |\n LL |         impl PrivTr for u8 {}\n-   |              ^^^^^^\n+   |              ^^^^^^ private trait\n ...\n LL |     priv_trait::mac!();\n    |     ------------------- in this macro invocation\n@@ -90,7 +90,7 @@ error: type `priv_signature::Priv` is private\n   --> $DIR/associated-item-privacy-trait.rs:48:21\n    |\n LL |         let value = <Pub as PubTr>::method;\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_signature::mac!();\n    |     ----------------------- in this macro invocation\n@@ -101,7 +101,7 @@ error: type `priv_signature::Priv` is private\n   --> $DIR/associated-item-privacy-trait.rs:50:9\n    |\n LL |         value;\n-   |         ^^^^^\n+   |         ^^^^^ private type\n ...\n LL |     priv_signature::mac!();\n    |     ----------------------- in this macro invocation\n@@ -112,7 +112,7 @@ error: type `priv_signature::Priv` is private\n   --> $DIR/associated-item-privacy-trait.rs:52:13\n    |\n LL |         Pub.method(loop {});\n-   |             ^^^^^^\n+   |             ^^^^^^ private type\n ...\n LL |     priv_signature::mac!();\n    |     ----------------------- in this macro invocation\n@@ -123,7 +123,7 @@ error: type `priv_substs::Priv` is private\n   --> $DIR/associated-item-privacy-trait.rs:69:21\n    |\n LL |         let value = <Pub as PubTr>::method::<Priv>;\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_substs::mac!();\n    |     -------------------- in this macro invocation\n@@ -134,7 +134,7 @@ error: type `priv_substs::Priv` is private\n   --> $DIR/associated-item-privacy-trait.rs:71:9\n    |\n LL |         value;\n-   |         ^^^^^\n+   |         ^^^^^ private type\n ...\n LL |     priv_substs::mac!();\n    |     -------------------- in this macro invocation\n@@ -145,7 +145,7 @@ error: type `priv_substs::Priv` is private\n   --> $DIR/associated-item-privacy-trait.rs:73:9\n    |\n LL |         Pub.method::<Priv>();\n-   |         ^^^^^^^^^^^^^^^^^^^^\n+   |         ^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_substs::mac!();\n    |     -------------------- in this macro invocation\n@@ -156,7 +156,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-trait.rs:93:21\n    |\n LL |         let value = <Pub as PubTr>::method;\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation\n@@ -167,7 +167,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-trait.rs:95:9\n    |\n LL |         value;\n-   |         ^^^^^\n+   |         ^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation\n@@ -178,7 +178,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-trait.rs:97:21\n    |\n LL |         let value = <Pub as PubTr<_>>::method;\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation\n@@ -189,7 +189,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-trait.rs:99:9\n    |\n LL |         value;\n-   |         ^^^^^\n+   |         ^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation\n@@ -200,7 +200,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-trait.rs:101:9\n    |\n LL |         Pub.method();\n-   |         ^^^^^^^^^^^^\n+   |         ^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation\n@@ -211,7 +211,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-trait.rs:104:21\n    |\n LL |         let value = <Priv as PubTr<_>>::method;\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation\n@@ -222,7 +222,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-trait.rs:106:9\n    |\n LL |         value;\n-   |         ^^^^^\n+   |         ^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation\n@@ -233,7 +233,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-trait.rs:108:9\n    |\n LL |         Priv.method();\n-   |         ^^^^^^^^^^^^^\n+   |         ^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation\n@@ -244,7 +244,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-trait.rs:111:9\n    |\n LL |         <Pub as PubTr>::CONST;\n-   |         ^^^^^^^^^^^^^^^^^^^^^\n+   |         ^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation\n@@ -255,7 +255,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-trait.rs:113:9\n    |\n LL |         <Pub as PubTr<_>>::CONST;\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation\n@@ -266,7 +266,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-trait.rs:115:9\n    |\n LL |         <Priv as PubTr<_>>::CONST;\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation\n@@ -277,7 +277,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-trait.rs:119:30\n    |\n LL |         let _: <Pub as PubTr<_>>::AssocTy;\n-   |                              ^\n+   |                              ^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation\n@@ -288,7 +288,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-trait.rs:121:17\n    |\n LL |         let _: <Priv as PubTr<_>>::AssocTy;\n-   |                 ^^^^\n+   |                 ^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation\n@@ -299,7 +299,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-trait.rs:124:35\n    |\n LL |         pub type InSignatureTy1 = <Pub as PubTr>::AssocTy;\n-   |                                   ^^^^^^^^^^^^^^^^^^^^^^^\n+   |                                   ^^^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation\n@@ -310,7 +310,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-trait.rs:126:35\n    |\n LL |         pub type InSignatureTy2 = <Priv as PubTr<Pub>>::AssocTy;\n-   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation\n@@ -321,7 +321,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-trait.rs:128:14\n    |\n LL |         impl PubTr for u8 {}\n-   |              ^^^^^\n+   |              ^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation"}, {"sha": "d8515ccb66920e1d4180c2d7af4f5c855bc1c5c7", "filename": "src/test/ui/privacy/associated-item-privacy-type-binding.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fassociated-item-privacy-type-binding.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fassociated-item-privacy-type-binding.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fassociated-item-privacy-type-binding.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error: trait `priv_trait::PrivTr` is private\n   --> $DIR/associated-item-privacy-type-binding.rs:11:13\n    |\n LL |         let _: Box<dyn PubTr<AssocTy = u8>>;\n-   |             ^\n+   |             ^ private trait\n ...\n LL |     priv_trait::mac1!();\n    |     -------------------- in this macro invocation\n@@ -13,7 +13,7 @@ error: trait `priv_trait::PrivTr` is private\n   --> $DIR/associated-item-privacy-type-binding.rs:11:16\n    |\n LL |         let _: Box<dyn PubTr<AssocTy = u8>>;\n-   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private trait\n ...\n LL |     priv_trait::mac1!();\n    |     -------------------- in this macro invocation\n@@ -24,7 +24,7 @@ error: trait `priv_trait::PrivTr` is private\n   --> $DIR/associated-item-privacy-type-binding.rs:14:31\n    |\n LL |         type InSignatureTy2 = Box<dyn PubTr<AssocTy = u8>>;\n-   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private trait\n ...\n LL |     priv_trait::mac1!();\n    |     -------------------- in this macro invocation\n@@ -35,7 +35,7 @@ error: trait `priv_trait::PrivTr` is private\n   --> $DIR/associated-item-privacy-type-binding.rs:16:31\n    |\n LL |         trait InSignatureTr2: PubTr<AssocTy = u8> {}\n-   |                               ^^^^^^^^^^^^^^^^^^^\n+   |                               ^^^^^^^^^^^^^^^^^^^ private trait\n ...\n LL |     priv_trait::mac1!();\n    |     -------------------- in this macro invocation\n@@ -46,7 +46,7 @@ error: trait `priv_trait::PrivTr` is private\n   --> $DIR/associated-item-privacy-type-binding.rs:20:13\n    |\n LL |         let _: Box<dyn PrivTr<AssocTy = u8>>;\n-   |             ^\n+   |             ^ private trait\n ...\n LL |     priv_trait::mac2!();\n    |     -------------------- in this macro invocation\n@@ -57,7 +57,7 @@ error: trait `priv_trait::PrivTr` is private\n   --> $DIR/associated-item-privacy-type-binding.rs:20:16\n    |\n LL |         let _: Box<dyn PrivTr<AssocTy = u8>>;\n-   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private trait\n ...\n LL |     priv_trait::mac2!();\n    |     -------------------- in this macro invocation\n@@ -68,7 +68,7 @@ error: trait `priv_trait::PrivTr` is private\n   --> $DIR/associated-item-privacy-type-binding.rs:23:31\n    |\n LL |         type InSignatureTy1 = Box<dyn PrivTr<AssocTy = u8>>;\n-   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private trait\n ...\n LL |     priv_trait::mac2!();\n    |     -------------------- in this macro invocation\n@@ -79,7 +79,7 @@ error: trait `priv_trait::PrivTr` is private\n   --> $DIR/associated-item-privacy-type-binding.rs:25:31\n    |\n LL |         trait InSignatureTr1: PrivTr<AssocTy = u8> {}\n-   |                               ^^^^^^^^^^^^^^^^^^^^\n+   |                               ^^^^^^^^^^^^^^^^^^^^ private trait\n ...\n LL |     priv_trait::mac2!();\n    |     -------------------- in this macro invocation\n@@ -90,7 +90,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-type-binding.rs:44:13\n    |\n LL |         let _: Box<dyn PubTrWithParam<AssocTy = u8>>;\n-   |             ^\n+   |             ^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation\n@@ -101,7 +101,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-type-binding.rs:44:16\n    |\n LL |         let _: Box<dyn PubTrWithParam<AssocTy = u8>>;\n-   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation\n@@ -112,7 +112,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-type-binding.rs:47:13\n    |\n LL |         let _: Box<dyn PubTr<AssocTy = u8>>;\n-   |             ^\n+   |             ^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation\n@@ -123,7 +123,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-type-binding.rs:47:16\n    |\n LL |         let _: Box<dyn PubTr<AssocTy = u8>>;\n-   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation\n@@ -134,7 +134,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-type-binding.rs:50:35\n    |\n LL |         pub type InSignatureTy1 = Box<dyn PubTrWithParam<AssocTy = u8>>;\n-   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation\n@@ -145,7 +145,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-type-binding.rs:52:35\n    |\n LL |         pub type InSignatureTy2 = Box<dyn PubTr<AssocTy = u8>>;\n-   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation\n@@ -156,7 +156,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-type-binding.rs:54:31\n    |\n LL |         trait InSignatureTr1: PubTrWithParam<AssocTy = u8> {}\n-   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation\n@@ -167,7 +167,7 @@ error: type `priv_parent_substs::Priv` is private\n   --> $DIR/associated-item-privacy-type-binding.rs:56:31\n    |\n LL |         trait InSignatureTr2: PubTr<AssocTy = u8> {}\n-   |                               ^^^^^^^^^^^^^^^^^^^\n+   |                               ^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n    |     --------------------------- in this macro invocation"}, {"sha": "5bc6f07fffac3e95d4687617ad14af7d2b43b94d", "filename": "src/test/ui/privacy/decl-macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fdecl-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fdecl-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fdecl-macro.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0603]: macro `mac` is private\n   --> $DIR/decl-macro.rs:8:8\n    |\n LL |     m::mac!();\n-   |        ^^^ this macro is private\n+   |        ^^^ private macro\n    |\n note: the macro `mac` is defined here\n   --> $DIR/decl-macro.rs:4:5"}, {"sha": "2eb3ebb51c20a2ea69ee288dd3ec2b42fcded4ea", "filename": "src/test/ui/privacy/privacy-in-paths.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-in-paths.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-in-paths.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-in-paths.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0603]: module `bar` is private\n   --> $DIR/privacy-in-paths.rs:24:16\n    |\n LL |         ::foo::bar::baz::f();\n-   |                ^^^ this module is private\n+   |                ^^^ private module\n    |\n note: the module `bar` is defined here\n   --> $DIR/privacy-in-paths.rs:3:5\n@@ -14,7 +14,7 @@ error[E0603]: module `bar` is private\n   --> $DIR/privacy-in-paths.rs:25:16\n    |\n LL |         ::foo::bar::S::f();\n-   |                ^^^ this module is private\n+   |                ^^^ private module\n    |\n note: the module `bar` is defined here\n   --> $DIR/privacy-in-paths.rs:3:5\n@@ -26,7 +26,7 @@ error[E0603]: trait `T` is private\n   --> $DIR/privacy-in-paths.rs:26:23\n    |\n LL |         <() as ::foo::T>::Assoc::f();\n-   |                       ^ this trait is private\n+   |                       ^ private trait\n    |\n note: the trait `T` is defined here\n   --> $DIR/privacy-in-paths.rs:8:5"}, {"sha": "0c826147a1ca7df46628890d4db9ef3a844dd813", "filename": "src/test/ui/privacy/privacy-ns2.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns2.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -58,7 +58,7 @@ error[E0603]: trait `Bar` is private\n   --> $DIR/privacy-ns2.rs:63:15\n    |\n LL |     use foo3::Bar;\n-   |               ^^^ this trait is private\n+   |               ^^^ private trait\n    |\n note: the trait `Bar` is defined here\n   --> $DIR/privacy-ns2.rs:55:5\n@@ -70,7 +70,7 @@ error[E0603]: trait `Bar` is private\n   --> $DIR/privacy-ns2.rs:67:15\n    |\n LL |     use foo3::Bar;\n-   |               ^^^ this trait is private\n+   |               ^^^ private trait\n    |\n note: the trait `Bar` is defined here\n   --> $DIR/privacy-ns2.rs:55:5\n@@ -82,7 +82,7 @@ error[E0603]: trait `Bar` is private\n   --> $DIR/privacy-ns2.rs:74:16\n    |\n LL |     use foo3::{Bar,Baz};\n-   |                ^^^ this trait is private\n+   |                ^^^ private trait\n    |\n note: the trait `Bar` is defined here\n   --> $DIR/privacy-ns2.rs:55:5"}, {"sha": "e93a458ce6cb6889caafc55cc8529461927a1945", "filename": "src/test/ui/privacy/privacy-ufcs.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ufcs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ufcs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ufcs.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0603]: trait `Bar` is private\n   --> $DIR/privacy-ufcs.rs:12:20\n    |\n LL |     <i32 as ::foo::Bar>::baz();\n-   |                    ^^^ this trait is private\n+   |                    ^^^ private trait\n    |\n note: the trait `Bar` is defined here\n   --> $DIR/privacy-ufcs.rs:4:5"}, {"sha": "fee6f8d5639f52cfa3565b03e9cad844439c2ed0", "filename": "src/test/ui/privacy/privacy1.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivacy1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivacy1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy1.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0603]: module `baz` is private\n   --> $DIR/privacy1.rs:132:18\n    |\n LL |         use bar::baz::{foo, bar};\n-   |                  ^^^ this module is private\n+   |                  ^^^ private module\n    |\n note: the module `baz` is defined here\n   --> $DIR/privacy1.rs:50:5\n@@ -14,7 +14,7 @@ error[E0603]: module `baz` is private\n   --> $DIR/privacy1.rs:132:18\n    |\n LL |         use bar::baz::{foo, bar};\n-   |                  ^^^ this module is private\n+   |                  ^^^ private module\n    |\n note: the module `baz` is defined here\n   --> $DIR/privacy1.rs:50:5\n@@ -26,7 +26,7 @@ error[E0603]: module `baz` is private\n   --> $DIR/privacy1.rs:141:18\n    |\n LL |         use bar::baz;\n-   |                  ^^^ this module is private\n+   |                  ^^^ private module\n    |\n note: the module `baz` is defined here\n   --> $DIR/privacy1.rs:50:5\n@@ -38,7 +38,7 @@ error[E0603]: module `i` is private\n   --> $DIR/privacy1.rs:165:20\n    |\n LL |     use self::foo::i::A;\n-   |                    ^ this module is private\n+   |                    ^ private module\n    |\n note: the module `i` is defined here\n   --> $DIR/privacy1.rs:170:9\n@@ -50,7 +50,7 @@ error[E0603]: module `baz` is private\n   --> $DIR/privacy1.rs:104:16\n    |\n LL |         ::bar::baz::A::foo();\n-   |                ^^^ this module is private\n+   |                ^^^ private module\n    |\n note: the module `baz` is defined here\n   --> $DIR/privacy1.rs:50:5\n@@ -62,7 +62,7 @@ error[E0603]: module `baz` is private\n   --> $DIR/privacy1.rs:105:16\n    |\n LL |         ::bar::baz::A::bar();\n-   |                ^^^ this module is private\n+   |                ^^^ private module\n    |\n note: the module `baz` is defined here\n   --> $DIR/privacy1.rs:50:5\n@@ -74,7 +74,7 @@ error[E0603]: module `baz` is private\n   --> $DIR/privacy1.rs:107:16\n    |\n LL |         ::bar::baz::A.foo2();\n-   |                ^^^ this module is private\n+   |                ^^^ private module\n    |\n note: the module `baz` is defined here\n   --> $DIR/privacy1.rs:50:5\n@@ -86,7 +86,7 @@ error[E0603]: module `baz` is private\n   --> $DIR/privacy1.rs:108:16\n    |\n LL |         ::bar::baz::A.bar2();\n-   |                ^^^ this module is private\n+   |                ^^^ private module\n    |\n note: the module `baz` is defined here\n   --> $DIR/privacy1.rs:50:5\n@@ -98,7 +98,7 @@ error[E0603]: trait `B` is private\n   --> $DIR/privacy1.rs:112:16\n    |\n LL |         ::bar::B::foo();\n-   |                ^ this trait is private\n+   |                ^ private trait\n    |\n note: the trait `B` is defined here\n   --> $DIR/privacy1.rs:40:5\n@@ -110,7 +110,7 @@ error[E0603]: function `epriv` is private\n   --> $DIR/privacy1.rs:118:20\n    |\n LL |             ::bar::epriv();\n-   |                    ^^^^^ this function is private\n+   |                    ^^^^^ private function\n    |\n note: the function `epriv` is defined here\n   --> $DIR/privacy1.rs:65:9\n@@ -122,7 +122,7 @@ error[E0603]: module `baz` is private\n   --> $DIR/privacy1.rs:127:16\n    |\n LL |         ::bar::baz::foo();\n-   |                ^^^ this module is private\n+   |                ^^^ private module\n    |\n note: the module `baz` is defined here\n   --> $DIR/privacy1.rs:50:5\n@@ -134,7 +134,7 @@ error[E0603]: module `baz` is private\n   --> $DIR/privacy1.rs:128:16\n    |\n LL |         ::bar::baz::bar();\n-   |                ^^^ this module is private\n+   |                ^^^ private module\n    |\n note: the module `baz` is defined here\n   --> $DIR/privacy1.rs:50:5\n@@ -146,7 +146,7 @@ error[E0603]: trait `B` is private\n   --> $DIR/privacy1.rs:157:17\n    |\n LL |     impl ::bar::B for f32 { fn foo() -> f32 { 1.0 } }\n-   |                 ^ this trait is private\n+   |                 ^ private trait\n    |\n note: the trait `B` is defined here\n   --> $DIR/privacy1.rs:40:5\n@@ -158,31 +158,31 @@ error[E0624]: associated function `bar` is private\n   --> $DIR/privacy1.rs:77:9\n    |\n LL |         self::baz::A::bar();\n-   |         ^^^^^^^^^^^^^^^^^\n+   |         ^^^^^^^^^^^^^^^^^ private associated function\n \n error[E0624]: associated function `bar` is private\n   --> $DIR/privacy1.rs:95:5\n    |\n LL |     bar::A::bar();\n-   |     ^^^^^^^^^^^\n+   |     ^^^^^^^^^^^ private associated function\n \n error[E0624]: associated function `bar` is private\n   --> $DIR/privacy1.rs:102:9\n    |\n LL |         ::bar::A::bar();\n-   |         ^^^^^^^^^^^^^\n+   |         ^^^^^^^^^^^^^ private associated function\n \n error[E0624]: associated function `bar` is private\n   --> $DIR/privacy1.rs:105:9\n    |\n LL |         ::bar::baz::A::bar();\n-   |         ^^^^^^^^^^^^^^^^^^\n+   |         ^^^^^^^^^^^^^^^^^^ private associated function\n \n error[E0624]: associated function `bar2` is private\n   --> $DIR/privacy1.rs:108:23\n    |\n LL |         ::bar::baz::A.bar2();\n-   |                       ^^^^\n+   |                       ^^^^ private associated function\n \n error: aborting due to 18 previous errors\n "}, {"sha": "c2a33ce1f59b38549e5fd6196863f26ff25481ea", "filename": "src/test/ui/privacy/privacy2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivacy2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivacy2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy2.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -8,7 +8,7 @@ error[E0603]: function import `foo` is private\n   --> $DIR/privacy2.rs:23:20\n    |\n LL |     use bar::glob::foo;\n-   |                    ^^^ this function import is private\n+   |                    ^^^ private function import\n    |\n note: the function import `foo` is defined here...\n   --> $DIR/privacy2.rs:10:13"}, {"sha": "7552fa71a3a3a664e5feceddabd0a0f0050ee0a7", "filename": "src/test/ui/privacy/privacy4.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivacy4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivacy4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy4.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0603]: module `glob` is private\n   --> $DIR/privacy4.rs:21:14\n    |\n LL |     use bar::glob::gpriv;\n-   |              ^^^^ this module is private\n+   |              ^^^^ private module\n    |\n note: the module `glob` is defined here\n   --> $DIR/privacy4.rs:13:5"}, {"sha": "216abfc68b812c41b5e40eaadd2803d418c9795a", "filename": "src/test/ui/privacy/privacy5.stderr", "status": "modified", "additions": 48, "deletions": 48, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivacy5.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivacy5.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy5.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -5,7 +5,7 @@ LL |     pub struct A(());\n    |                  -- a constructor is private if any of the fields is private\n ...\n LL |     let a = a::A(());\n-   |                ^ this tuple struct constructor is private\n+   |                ^ private tuple struct constructor\n    |\n note: the tuple struct constructor `A` is defined here\n   --> $DIR/privacy5.rs:6:5\n@@ -20,7 +20,7 @@ LL |     pub struct B(isize);\n    |                  ----- a constructor is private if any of the fields is private\n ...\n LL |     let b = a::B(2);\n-   |                ^ this tuple struct constructor is private\n+   |                ^ private tuple struct constructor\n    |\n note: the tuple struct constructor `B` is defined here\n   --> $DIR/privacy5.rs:7:5\n@@ -35,7 +35,7 @@ LL |     pub struct C(pub isize, isize);\n    |                  ---------------- a constructor is private if any of the fields is private\n ...\n LL |     let c = a::C(2, 3);\n-   |                ^ this tuple struct constructor is private\n+   |                ^ private tuple struct constructor\n    |\n note: the tuple struct constructor `C` is defined here\n   --> $DIR/privacy5.rs:8:5\n@@ -50,7 +50,7 @@ LL |     pub struct A(());\n    |                  -- a constructor is private if any of the fields is private\n ...\n LL |     let a::A(()) = a;\n-   |            ^ this tuple struct constructor is private\n+   |            ^ private tuple struct constructor\n    |\n note: the tuple struct constructor `A` is defined here\n   --> $DIR/privacy5.rs:6:5\n@@ -65,7 +65,7 @@ LL |     pub struct A(());\n    |                  -- a constructor is private if any of the fields is private\n ...\n LL |     let a::A(_) = a;\n-   |            ^ this tuple struct constructor is private\n+   |            ^ private tuple struct constructor\n    |\n note: the tuple struct constructor `A` is defined here\n   --> $DIR/privacy5.rs:6:5\n@@ -80,7 +80,7 @@ LL |     pub struct A(());\n    |                  -- a constructor is private if any of the fields is private\n ...\n LL |     match a { a::A(()) => {} }\n-   |                  ^ this tuple struct constructor is private\n+   |                  ^ private tuple struct constructor\n    |\n note: the tuple struct constructor `A` is defined here\n   --> $DIR/privacy5.rs:6:5\n@@ -95,7 +95,7 @@ LL |     pub struct A(());\n    |                  -- a constructor is private if any of the fields is private\n ...\n LL |     match a { a::A(_) => {} }\n-   |                  ^ this tuple struct constructor is private\n+   |                  ^ private tuple struct constructor\n    |\n note: the tuple struct constructor `A` is defined here\n   --> $DIR/privacy5.rs:6:5\n@@ -110,7 +110,7 @@ LL |     pub struct B(isize);\n    |                  ----- a constructor is private if any of the fields is private\n ...\n LL |     let a::B(_) = b;\n-   |            ^ this tuple struct constructor is private\n+   |            ^ private tuple struct constructor\n    |\n note: the tuple struct constructor `B` is defined here\n   --> $DIR/privacy5.rs:7:5\n@@ -125,7 +125,7 @@ LL |     pub struct B(isize);\n    |                  ----- a constructor is private if any of the fields is private\n ...\n LL |     let a::B(_b) = b;\n-   |            ^ this tuple struct constructor is private\n+   |            ^ private tuple struct constructor\n    |\n note: the tuple struct constructor `B` is defined here\n   --> $DIR/privacy5.rs:7:5\n@@ -140,7 +140,7 @@ LL |     pub struct B(isize);\n    |                  ----- a constructor is private if any of the fields is private\n ...\n LL |     match b { a::B(_) => {} }\n-   |                  ^ this tuple struct constructor is private\n+   |                  ^ private tuple struct constructor\n    |\n note: the tuple struct constructor `B` is defined here\n   --> $DIR/privacy5.rs:7:5\n@@ -155,7 +155,7 @@ LL |     pub struct B(isize);\n    |                  ----- a constructor is private if any of the fields is private\n ...\n LL |     match b { a::B(_b) => {} }\n-   |                  ^ this tuple struct constructor is private\n+   |                  ^ private tuple struct constructor\n    |\n note: the tuple struct constructor `B` is defined here\n   --> $DIR/privacy5.rs:7:5\n@@ -170,7 +170,7 @@ LL |     pub struct B(isize);\n    |                  ----- a constructor is private if any of the fields is private\n ...\n LL |     match b { a::B(1) => {} a::B(_) => {} }\n-   |                  ^ this tuple struct constructor is private\n+   |                  ^ private tuple struct constructor\n    |\n note: the tuple struct constructor `B` is defined here\n   --> $DIR/privacy5.rs:7:5\n@@ -185,7 +185,7 @@ LL |     pub struct B(isize);\n    |                  ----- a constructor is private if any of the fields is private\n ...\n LL |     match b { a::B(1) => {} a::B(_) => {} }\n-   |                                ^ this tuple struct constructor is private\n+   |                                ^ private tuple struct constructor\n    |\n note: the tuple struct constructor `B` is defined here\n   --> $DIR/privacy5.rs:7:5\n@@ -200,7 +200,7 @@ LL |     pub struct C(pub isize, isize);\n    |                  ---------------- a constructor is private if any of the fields is private\n ...\n LL |     let a::C(_, _) = c;\n-   |            ^ this tuple struct constructor is private\n+   |            ^ private tuple struct constructor\n    |\n note: the tuple struct constructor `C` is defined here\n   --> $DIR/privacy5.rs:8:5\n@@ -215,7 +215,7 @@ LL |     pub struct C(pub isize, isize);\n    |                  ---------------- a constructor is private if any of the fields is private\n ...\n LL |     let a::C(_a, _) = c;\n-   |            ^ this tuple struct constructor is private\n+   |            ^ private tuple struct constructor\n    |\n note: the tuple struct constructor `C` is defined here\n   --> $DIR/privacy5.rs:8:5\n@@ -230,7 +230,7 @@ LL |     pub struct C(pub isize, isize);\n    |                  ---------------- a constructor is private if any of the fields is private\n ...\n LL |     let a::C(_, _b) = c;\n-   |            ^ this tuple struct constructor is private\n+   |            ^ private tuple struct constructor\n    |\n note: the tuple struct constructor `C` is defined here\n   --> $DIR/privacy5.rs:8:5\n@@ -245,7 +245,7 @@ LL |     pub struct C(pub isize, isize);\n    |                  ---------------- a constructor is private if any of the fields is private\n ...\n LL |     let a::C(_a, _b) = c;\n-   |            ^ this tuple struct constructor is private\n+   |            ^ private tuple struct constructor\n    |\n note: the tuple struct constructor `C` is defined here\n   --> $DIR/privacy5.rs:8:5\n@@ -260,7 +260,7 @@ LL |     pub struct C(pub isize, isize);\n    |                  ---------------- a constructor is private if any of the fields is private\n ...\n LL |     match c { a::C(_, _) => {} }\n-   |                  ^ this tuple struct constructor is private\n+   |                  ^ private tuple struct constructor\n    |\n note: the tuple struct constructor `C` is defined here\n   --> $DIR/privacy5.rs:8:5\n@@ -275,7 +275,7 @@ LL |     pub struct C(pub isize, isize);\n    |                  ---------------- a constructor is private if any of the fields is private\n ...\n LL |     match c { a::C(_a, _) => {} }\n-   |                  ^ this tuple struct constructor is private\n+   |                  ^ private tuple struct constructor\n    |\n note: the tuple struct constructor `C` is defined here\n   --> $DIR/privacy5.rs:8:5\n@@ -290,7 +290,7 @@ LL |     pub struct C(pub isize, isize);\n    |                  ---------------- a constructor is private if any of the fields is private\n ...\n LL |     match c { a::C(_, _b) => {} }\n-   |                  ^ this tuple struct constructor is private\n+   |                  ^ private tuple struct constructor\n    |\n note: the tuple struct constructor `C` is defined here\n   --> $DIR/privacy5.rs:8:5\n@@ -305,7 +305,7 @@ LL |     pub struct C(pub isize, isize);\n    |                  ---------------- a constructor is private if any of the fields is private\n ...\n LL |     match c { a::C(_a, _b) => {} }\n-   |                  ^ this tuple struct constructor is private\n+   |                  ^ private tuple struct constructor\n    |\n note: the tuple struct constructor `C` is defined here\n   --> $DIR/privacy5.rs:8:5\n@@ -320,7 +320,7 @@ LL |     pub struct A(());\n    |                  -- a constructor is private if any of the fields is private\n ...\n LL |     let a2 = a::A;\n-   |                 ^ this tuple struct constructor is private\n+   |                 ^ private tuple struct constructor\n    |\n note: the tuple struct constructor `A` is defined here\n   --> $DIR/privacy5.rs:6:5\n@@ -335,7 +335,7 @@ LL |     pub struct B(isize);\n    |                  ----- a constructor is private if any of the fields is private\n ...\n LL |     let b2 = a::B;\n-   |                 ^ this tuple struct constructor is private\n+   |                 ^ private tuple struct constructor\n    |\n note: the tuple struct constructor `B` is defined here\n   --> $DIR/privacy5.rs:7:5\n@@ -350,7 +350,7 @@ LL |     pub struct C(pub isize, isize);\n    |                  ---------------- a constructor is private if any of the fields is private\n ...\n LL |     let c2 = a::C;\n-   |                 ^ this tuple struct constructor is private\n+   |                 ^ private tuple struct constructor\n    |\n note: the tuple struct constructor `C` is defined here\n   --> $DIR/privacy5.rs:8:5\n@@ -362,7 +362,7 @@ error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:90:20\n    |\n LL |     let a = other::A(());\n-   |                    ^ this tuple struct constructor is private\n+   |                    ^ private tuple struct constructor\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:1:14\n    |\n@@ -379,7 +379,7 @@ error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:91:20\n    |\n LL |     let b = other::B(2);\n-   |                    ^ this tuple struct constructor is private\n+   |                    ^ private tuple struct constructor\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:2:14\n    |\n@@ -396,7 +396,7 @@ error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:92:20\n    |\n LL |     let c = other::C(2, 3);\n-   |                    ^ this tuple struct constructor is private\n+   |                    ^ private tuple struct constructor\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n@@ -413,7 +413,7 @@ error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:95:16\n    |\n LL |     let other::A(()) = a;\n-   |                ^ this tuple struct constructor is private\n+   |                ^ private tuple struct constructor\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:1:14\n    |\n@@ -430,7 +430,7 @@ error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:96:16\n    |\n LL |     let other::A(_) = a;\n-   |                ^ this tuple struct constructor is private\n+   |                ^ private tuple struct constructor\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:1:14\n    |\n@@ -447,7 +447,7 @@ error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:97:22\n    |\n LL |     match a { other::A(()) => {} }\n-   |                      ^ this tuple struct constructor is private\n+   |                      ^ private tuple struct constructor\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:1:14\n    |\n@@ -464,7 +464,7 @@ error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:98:22\n    |\n LL |     match a { other::A(_) => {} }\n-   |                      ^ this tuple struct constructor is private\n+   |                      ^ private tuple struct constructor\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:1:14\n    |\n@@ -481,7 +481,7 @@ error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:100:16\n    |\n LL |     let other::B(_) = b;\n-   |                ^ this tuple struct constructor is private\n+   |                ^ private tuple struct constructor\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:2:14\n    |\n@@ -498,7 +498,7 @@ error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:101:16\n    |\n LL |     let other::B(_b) = b;\n-   |                ^ this tuple struct constructor is private\n+   |                ^ private tuple struct constructor\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:2:14\n    |\n@@ -515,7 +515,7 @@ error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:102:22\n    |\n LL |     match b { other::B(_) => {} }\n-   |                      ^ this tuple struct constructor is private\n+   |                      ^ private tuple struct constructor\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:2:14\n    |\n@@ -532,7 +532,7 @@ error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:103:22\n    |\n LL |     match b { other::B(_b) => {} }\n-   |                      ^ this tuple struct constructor is private\n+   |                      ^ private tuple struct constructor\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:2:14\n    |\n@@ -549,7 +549,7 @@ error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:104:22\n    |\n LL |     match b { other::B(1) => {}\n-   |                      ^ this tuple struct constructor is private\n+   |                      ^ private tuple struct constructor\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:2:14\n    |\n@@ -566,7 +566,7 @@ error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:105:16\n    |\n LL |         other::B(_) => {} }\n-   |                ^ this tuple struct constructor is private\n+   |                ^ private tuple struct constructor\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:2:14\n    |\n@@ -583,7 +583,7 @@ error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:107:16\n    |\n LL |     let other::C(_, _) = c;\n-   |                ^ this tuple struct constructor is private\n+   |                ^ private tuple struct constructor\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n@@ -600,7 +600,7 @@ error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:108:16\n    |\n LL |     let other::C(_a, _) = c;\n-   |                ^ this tuple struct constructor is private\n+   |                ^ private tuple struct constructor\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n@@ -617,7 +617,7 @@ error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:109:16\n    |\n LL |     let other::C(_, _b) = c;\n-   |                ^ this tuple struct constructor is private\n+   |                ^ private tuple struct constructor\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n@@ -634,7 +634,7 @@ error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:110:16\n    |\n LL |     let other::C(_a, _b) = c;\n-   |                ^ this tuple struct constructor is private\n+   |                ^ private tuple struct constructor\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n@@ -651,7 +651,7 @@ error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:111:22\n    |\n LL |     match c { other::C(_, _) => {} }\n-   |                      ^ this tuple struct constructor is private\n+   |                      ^ private tuple struct constructor\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n@@ -668,7 +668,7 @@ error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:112:22\n    |\n LL |     match c { other::C(_a, _) => {} }\n-   |                      ^ this tuple struct constructor is private\n+   |                      ^ private tuple struct constructor\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n@@ -685,7 +685,7 @@ error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:113:22\n    |\n LL |     match c { other::C(_, _b) => {} }\n-   |                      ^ this tuple struct constructor is private\n+   |                      ^ private tuple struct constructor\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n@@ -702,7 +702,7 @@ error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:114:22\n    |\n LL |     match c { other::C(_a, _b) => {} }\n-   |                      ^ this tuple struct constructor is private\n+   |                      ^ private tuple struct constructor\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |\n@@ -719,7 +719,7 @@ error[E0603]: tuple struct constructor `A` is private\n   --> $DIR/privacy5.rs:122:21\n    |\n LL |     let a2 = other::A;\n-   |                     ^ this tuple struct constructor is private\n+   |                     ^ private tuple struct constructor\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:1:14\n    |\n@@ -736,7 +736,7 @@ error[E0603]: tuple struct constructor `B` is private\n   --> $DIR/privacy5.rs:123:21\n    |\n LL |     let b2 = other::B;\n-   |                     ^ this tuple struct constructor is private\n+   |                     ^ private tuple struct constructor\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:2:14\n    |\n@@ -753,7 +753,7 @@ error[E0603]: tuple struct constructor `C` is private\n   --> $DIR/privacy5.rs:124:21\n    |\n LL |     let c2 = other::C;\n-   |                     ^ this tuple struct constructor is private\n+   |                     ^ private tuple struct constructor\n    | \n   ::: $DIR/auxiliary/privacy_tuple_struct.rs:3:14\n    |"}, {"sha": "444b9180b3f5977334777f201560760d100b870b", "filename": "src/test/ui/privacy/private-impl-method.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivate-impl-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivate-impl-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivate-impl-method.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0624]: associated function `foo` is private\n   --> $DIR/private-impl-method.rs:20:7\n    |\n LL |     s.foo();\n-   |       ^^^\n+   |       ^^^ private associated function\n \n error: aborting due to previous error\n "}, {"sha": "1b6d143b93217d415182094a3bb47a7dca740048", "filename": "src/test/ui/privacy/private-in-public-non-principal-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivate-in-public-non-principal-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivate-in-public-non-principal-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivate-in-public-non-principal-2.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error: trait `m::PrivNonPrincipal` is private\n   --> $DIR/private-in-public-non-principal-2.rs:11:5\n    |\n LL |     m::leak_dyn_nonprincipal();\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ private trait\n \n error: aborting due to previous error\n "}, {"sha": "576498b2cf8ef5ee7dfc4b952c2f3d87c3898375", "filename": "src/test/ui/privacy/private-inferred-type-1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivate-inferred-type-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivate-inferred-type-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivate-inferred-type-1.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,13 +2,13 @@ error: type `m::Priv` is private\n   --> $DIR/private-inferred-type-1.rs:16:5\n    |\n LL |     [].arr0_secret();\n-   |     ^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^ private type\n \n error: type `m::Priv` is private\n   --> $DIR/private-inferred-type-1.rs:17:5\n    |\n LL |     None.ty_param_secret();\n-   |     ^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^ private type\n \n error: aborting due to 2 previous errors\n "}, {"sha": "f19e367ef110e11bdcea480ccb82190bbc8db898", "filename": "src/test/ui/privacy/private-inferred-type-2.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivate-inferred-type-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivate-inferred-type-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivate-inferred-type-2.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,19 +2,19 @@ error: type `m::Priv` is private\n   --> $DIR/private-inferred-type-2.rs:16:5\n    |\n LL |     m::Pub::get_priv;\n-   |     ^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^ private type\n \n error: type `m::Priv` is private\n   --> $DIR/private-inferred-type-2.rs:17:5\n    |\n LL |     m::Pub::static_method;\n-   |     ^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^ private type\n \n error: type `ext::Priv` is private\n   --> $DIR/private-inferred-type-2.rs:18:5\n    |\n LL |     ext::Pub::static_method;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^ private type\n \n error: aborting due to 3 previous errors\n "}, {"sha": "39ef6472526c3b6916cc743c4d3b19f46bf5300d", "filename": "src/test/ui/privacy/private-inferred-type-3.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivate-inferred-type-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivate-inferred-type-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivate-inferred-type-3.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,55 +2,55 @@ error: type `fn() {ext::priv_fn}` is private\n   --> $DIR/private-inferred-type-3.rs:16:5\n    |\n LL |     ext::m!();\n-   |     ^^^^^^^^^^\n+   |     ^^^^^^^^^^ private type\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: static `PRIV_STATIC` is private\n   --> $DIR/private-inferred-type-3.rs:16:5\n    |\n LL |     ext::m!();\n-   |     ^^^^^^^^^^\n+   |     ^^^^^^^^^^ private static\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `ext::PrivEnum` is private\n   --> $DIR/private-inferred-type-3.rs:16:5\n    |\n LL |     ext::m!();\n-   |     ^^^^^^^^^^\n+   |     ^^^^^^^^^^ private type\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `fn() {<u8 as ext::PrivTrait>::method}` is private\n   --> $DIR/private-inferred-type-3.rs:16:5\n    |\n LL |     ext::m!();\n-   |     ^^^^^^^^^^\n+   |     ^^^^^^^^^^ private type\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `fn(u8) -> ext::PrivTupleStruct {ext::PrivTupleStruct}` is private\n   --> $DIR/private-inferred-type-3.rs:16:5\n    |\n LL |     ext::m!();\n-   |     ^^^^^^^^^^\n+   |     ^^^^^^^^^^ private type\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `fn(u8) -> ext::PubTupleStruct {ext::PubTupleStruct}` is private\n   --> $DIR/private-inferred-type-3.rs:16:5\n    |\n LL |     ext::m!();\n-   |     ^^^^^^^^^^\n+   |     ^^^^^^^^^^ private type\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `for<'r> fn(&'r ext::Pub<u8>) {ext::Pub::<u8>::priv_method}` is private\n   --> $DIR/private-inferred-type-3.rs:16:5\n    |\n LL |     ext::m!();\n-   |     ^^^^^^^^^^\n+   |     ^^^^^^^^^^ private type\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "7d1f794bfe4596fe2191020d6acdc7f8ed719744", "filename": "src/test/ui/privacy/private-inferred-type.stderr", "status": "modified", "additions": 31, "deletions": 31, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivate-inferred-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivate-inferred-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivate-inferred-type.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -20,97 +20,97 @@ error: type `m::Priv` is private\n   --> $DIR/private-inferred-type.rs:97:9\n    |\n LL |     let _: m::Alias;\n-   |         ^\n+   |         ^ private type\n \n error: type `m::Priv` is private\n   --> $DIR/private-inferred-type.rs:97:12\n    |\n LL |     let _: m::Alias;\n-   |            ^^^^^^^^\n+   |            ^^^^^^^^ private type\n \n error: type `m::Priv` is private\n   --> $DIR/private-inferred-type.rs:99:13\n    |\n LL |     let _: <m::Alias as m::TraitWithAssocTy>::AssocTy;\n-   |             ^^^^^^^^\n+   |             ^^^^^^^^ private type\n \n error: type `m::Priv` is private\n   --> $DIR/private-inferred-type.rs:100:5\n    |\n LL |     m::Alias {};\n-   |     ^^^^^^^^^^^\n+   |     ^^^^^^^^^^^ private type\n \n error: type `m::Priv` is private\n   --> $DIR/private-inferred-type.rs:101:5\n    |\n LL |     m::Pub { 0: m::Alias {} };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n \n error: type `m::Priv` is private\n   --> $DIR/private-inferred-type.rs:103:5\n    |\n LL |     m::Pub::static_method;\n-   |     ^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^ private type\n \n error: type `m::Priv` is private\n   --> $DIR/private-inferred-type.rs:104:5\n    |\n LL |     m::Pub::INHERENT_ASSOC_CONST;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n \n error: type `m::Priv` is private\n   --> $DIR/private-inferred-type.rs:105:5\n    |\n LL |     m::Pub(0u8).method_with_substs::<m::Alias>();\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n \n error: type `m::Priv` is private\n   --> $DIR/private-inferred-type.rs:106:17\n    |\n LL |     m::Pub(0u8).method_with_priv_params(loop{});\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^^ private type\n \n error: type `m::Priv` is private\n   --> $DIR/private-inferred-type.rs:107:5\n    |\n LL |     <m::Alias as m::TraitWithAssocConst>::TRAIT_ASSOC_CONST;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n \n error: type `m::Priv` is private\n   --> $DIR/private-inferred-type.rs:108:6\n    |\n LL |     <m::Pub<m::Alias>>::INHERENT_ASSOC_CONST;\n-   |      ^^^^^^^^^^^^^^^^\n+   |      ^^^^^^^^^^^^^^^^ private type\n \n error: type `m::Priv` is private\n   --> $DIR/private-inferred-type.rs:109:5\n    |\n LL |     <m::Pub<m::Alias>>::INHERENT_ASSOC_CONST_GENERIC_SELF;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n \n error: type `m::Priv` is private\n   --> $DIR/private-inferred-type.rs:110:5\n    |\n LL |     <m::Pub<m::Alias>>::static_method_generic_self;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n \n error: type `m::Priv` is private\n   --> $DIR/private-inferred-type.rs:112:5\n    |\n LL |     u8::pub_method;\n-   |     ^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^ private type\n \n error: type `adjust::S2` is private\n   --> $DIR/private-inferred-type.rs:114:5\n    |\n LL |     adjust::S1.method_s3();\n-   |     ^^^^^^^^^^\n+   |     ^^^^^^^^^^ private type\n \n error: type `fn() {m::priv_fn}` is private\n   --> $DIR/private-inferred-type.rs:39:9\n    |\n LL |         priv_fn;\n-   |         ^^^^^^^\n+   |         ^^^^^^^ private type\n ...\n LL |     m::m!();\n    |     -------- in this macro invocation\n@@ -121,7 +121,7 @@ error: type `m::PrivEnum` is private\n   --> $DIR/private-inferred-type.rs:41:9\n    |\n LL |         PrivEnum::Variant;\n-   |         ^^^^^^^^^^^^^^^^^\n+   |         ^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     m::m!();\n    |     -------- in this macro invocation\n@@ -132,7 +132,7 @@ error: type `fn() {<u8 as m::PrivTrait>::method}` is private\n   --> $DIR/private-inferred-type.rs:43:9\n    |\n LL |         <u8 as PrivTrait>::method;\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     m::m!();\n    |     -------- in this macro invocation\n@@ -143,7 +143,7 @@ error: type `fn(u8) -> m::PrivTupleStruct {m::PrivTupleStruct}` is private\n   --> $DIR/private-inferred-type.rs:45:9\n    |\n LL |         PrivTupleStruct;\n-   |         ^^^^^^^^^^^^^^^\n+   |         ^^^^^^^^^^^^^^^ private type\n ...\n LL |     m::m!();\n    |     -------- in this macro invocation\n@@ -154,7 +154,7 @@ error: type `fn(u8) -> m::PubTupleStruct {m::PubTupleStruct}` is private\n   --> $DIR/private-inferred-type.rs:47:9\n    |\n LL |         PubTupleStruct;\n-   |         ^^^^^^^^^^^^^^\n+   |         ^^^^^^^^^^^^^^ private type\n ...\n LL |     m::m!();\n    |     -------- in this macro invocation\n@@ -165,7 +165,7 @@ error: type `for<'r> fn(&'r m::Pub<u8>) {m::Pub::<u8>::priv_method}` is private\n   --> $DIR/private-inferred-type.rs:49:18\n    |\n LL |         Pub(0u8).priv_method();\n-   |                  ^^^^^^^^^^^\n+   |                  ^^^^^^^^^^^ private type\n ...\n LL |     m::m!();\n    |     -------- in this macro invocation\n@@ -176,61 +176,61 @@ error: trait `m::Trait` is private\n   --> $DIR/private-inferred-type.rs:118:5\n    |\n LL |     m::leak_anon1();\n-   |     ^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^ private trait\n \n error: type `m::Priv` is private\n   --> $DIR/private-inferred-type.rs:119:5\n    |\n LL |     m::leak_anon2();\n-   |     ^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^ private type\n \n error: type `m::Priv` is private\n   --> $DIR/private-inferred-type.rs:120:5\n    |\n LL |     m::leak_anon3();\n-   |     ^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^ private type\n \n error: trait `m::Trait` is private\n   --> $DIR/private-inferred-type.rs:122:5\n    |\n LL |     m::leak_dyn1();\n-   |     ^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^ private trait\n \n error: type `m::Priv` is private\n   --> $DIR/private-inferred-type.rs:123:5\n    |\n LL |     m::leak_dyn2();\n-   |     ^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^ private type\n \n error: type `m::Priv` is private\n   --> $DIR/private-inferred-type.rs:124:5\n    |\n LL |     m::leak_dyn3();\n-   |     ^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^ private type\n \n error: type `m::Priv` is private\n   --> $DIR/private-inferred-type.rs:127:13\n    |\n LL |     let a = m::Alias {};\n-   |             ^^^^^^^^^^^\n+   |             ^^^^^^^^^^^ private type\n \n error: type `m::Priv` is private\n   --> $DIR/private-inferred-type.rs:128:17\n    |\n LL |     let mut b = a;\n-   |                 ^\n+   |                 ^ private type\n \n error: type `m::Priv` is private\n   --> $DIR/private-inferred-type.rs:129:9\n    |\n LL |     b = a;\n-   |         ^\n+   |         ^ private type\n \n error: type `m::Priv` is private\n   --> $DIR/private-inferred-type.rs:130:11\n    |\n LL |     match a {\n-   |           ^\n+   |           ^ private type\n \n error: aborting due to 33 previous errors\n "}, {"sha": "e3d90150e2e3eb36f489219ba30ad8761d87c017", "filename": "src/test/ui/privacy/private-item-simple.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivate-item-simple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivate-item-simple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivate-item-simple.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0603]: function `f` is private\n   --> $DIR/private-item-simple.rs:6:8\n    |\n LL |     a::f();\n-   |        ^ this function is private\n+   |        ^ private function\n    |\n note: the function `f` is defined here\n   --> $DIR/private-item-simple.rs:2:5"}, {"sha": "8a47846d667e34c8a687e190979e33c3b9f644b4", "filename": "src/test/ui/privacy/private-method-cross-crate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivate-method-cross-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivate-method-cross-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivate-method-cross-crate.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0624]: associated function `nap` is private\n   --> $DIR/private-method-cross-crate.rs:7:8\n    |\n LL |   nyan.nap();\n-   |        ^^^\n+   |        ^^^ private associated function\n \n error: aborting due to previous error\n "}, {"sha": "8083b197a5d78e0facf8b1a24de0f87a0e80adb1", "filename": "src/test/ui/privacy/private-method-inherited.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivate-method-inherited.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivate-method-inherited.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivate-method-inherited.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0624]: associated function `f` is private\n   --> $DIR/private-method-inherited.rs:13:7\n    |\n LL |     x.f();\n-   |       ^\n+   |       ^ private associated function\n \n error: aborting due to previous error\n "}, {"sha": "a15fce46877ceb8c3e35cefc43f96a16a97dabdb", "filename": "src/test/ui/privacy/private-method.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivate-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivate-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivate-method.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0624]: associated function `nap` is private\n   --> $DIR/private-method.rs:22:8\n    |\n LL |   nyan.nap();\n-   |        ^^^\n+   |        ^^^ private associated function\n \n error: aborting due to previous error\n "}, {"sha": "7c32ebc2cf7b98b07a2b2a28c55bb8fc16d54a70", "filename": "src/test/ui/privacy/private-struct-field-ctor.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivate-struct-field-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivate-struct-field-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivate-struct-field-ctor.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0451]: field `x` of struct `a::Foo` is private\n   --> $DIR/private-struct-field-ctor.rs:8:22\n    |\n LL |     let s = a::Foo { x: 1 };\n-   |                      ^^^^ field `x` is private\n+   |                      ^^^^ private field\n \n error: aborting due to previous error\n "}, {"sha": "9190317403ec1da017417c0e1dcbfc6d57c63533", "filename": "src/test/ui/privacy/private-struct-field-pattern.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivate-struct-field-pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivate-struct-field-pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivate-struct-field-pattern.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0451]: field `x` of struct `a::Foo` is private\n   --> $DIR/private-struct-field-pattern.rs:15:15\n    |\n LL |         Foo { x: _ } => {}\n-   |               ^^^^ field `x` is private\n+   |               ^^^^ private field\n \n error: aborting due to previous error\n "}, {"sha": "ea89035c3d00671ec961690b29e811060ae08c1f", "filename": "src/test/ui/privacy/private-type-in-interface.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivate-type-in-interface.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Fprivate-type-in-interface.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivate-type-in-interface.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,55 +2,55 @@ error: type `m::Priv` is private\n   --> $DIR/private-type-in-interface.rs:15:9\n    |\n LL | fn f(_: m::Alias) {}\n-   |         ^^^^^^^^\n+   |         ^^^^^^^^ private type\n \n error: type `m::Priv` is private\n   --> $DIR/private-type-in-interface.rs:15:6\n    |\n LL | fn f(_: m::Alias) {}\n-   |      ^\n+   |      ^ private type\n \n error: type `ext::Priv` is private\n   --> $DIR/private-type-in-interface.rs:17:13\n    |\n LL | fn f_ext(_: ext::Alias) {}\n-   |             ^^^^^^^^^^\n+   |             ^^^^^^^^^^ private type\n \n error: type `ext::Priv` is private\n   --> $DIR/private-type-in-interface.rs:17:10\n    |\n LL | fn f_ext(_: ext::Alias) {}\n-   |          ^\n+   |          ^ private type\n \n error: type `m::Priv` is private\n   --> $DIR/private-type-in-interface.rs:21:6\n    |\n LL | impl m::Alias {}\n-   |      ^^^^^^^^\n+   |      ^^^^^^^^ private type\n \n error: type `ext::Priv` is private\n   --> $DIR/private-type-in-interface.rs:22:14\n    |\n LL | impl Tr1 for ext::Alias {}\n-   |              ^^^^^^^^^^\n+   |              ^^^^^^^^^^ private type\n \n error: type `m::Priv` is private\n   --> $DIR/private-type-in-interface.rs:23:10\n    |\n LL | type A = <m::Alias as m::Trait>::X;\n-   |          ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |          ^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n \n error: type `m::Priv` is private\n   --> $DIR/private-type-in-interface.rs:27:11\n    |\n LL | fn g() -> impl Tr2<m::Alias> { 0 }\n-   |           ^^^^^^^^^^^^^^^^^^\n+   |           ^^^^^^^^^^^^^^^^^^ private type\n \n error: type `ext::Priv` is private\n   --> $DIR/private-type-in-interface.rs:28:15\n    |\n LL | fn g_ext() -> impl Tr2<ext::Alias> { 0 }\n-   |               ^^^^^^^^^^^^^^^^^^^^\n+   |               ^^^^^^^^^^^^^^^^^^^^ private type\n \n error: aborting due to 9 previous errors\n "}, {"sha": "591980dc3450ddc503621ddfb30580a241df3f0c", "filename": "src/test/ui/privacy/restricted/struct-literal-field.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Frestricted%2Fstruct-literal-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Frestricted%2Fstruct-literal-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Frestricted%2Fstruct-literal-field.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0451]: field `x` of struct `foo::bar::S` is private\n   --> $DIR/struct-literal-field.rs:18:9\n    |\n LL |     S { x: 0 };\n-   |         ^^^^ field `x` is private\n+   |         ^^^^ private field\n \n error: aborting due to previous error\n "}, {"sha": "5bcccc6d69c4b288c327fc109a39aefad5910855", "filename": "src/test/ui/privacy/restricted/test.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Frestricted%2Ftest.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Frestricted%2Ftest.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Frestricted%2Ftest.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -26,7 +26,7 @@ error[E0603]: struct `Crate` is private\n   --> $DIR/test.rs:38:25\n    |\n LL |     use pub_restricted::Crate;\n-   |                         ^^^^^ this struct is private\n+   |                         ^^^^^ private struct\n    |\n note: the struct `Crate` is defined here\n   --> $DIR/auxiliary/pub_restricted.rs:3:1\n@@ -38,7 +38,7 @@ error[E0603]: function `f` is private\n   --> $DIR/test.rs:30:19\n    |\n LL |     use foo::bar::f;\n-   |                   ^ this function is private\n+   |                   ^ private function\n    |\n note: the function `f` is defined here\n   --> $DIR/test.rs:8:9\n@@ -56,13 +56,13 @@ error[E0624]: associated function `f` is private\n   --> $DIR/test.rs:32:18\n    |\n LL |     S::default().f();\n-   |                  ^\n+   |                  ^ private associated function\n \n error[E0624]: associated function `g` is private\n   --> $DIR/test.rs:33:5\n    |\n LL |     S::g();\n-   |     ^^^^\n+   |     ^^^^ private associated function\n \n error[E0616]: field `y` of struct `pub_restricted::Universe` is private\n   --> $DIR/test.rs:42:15\n@@ -80,13 +80,13 @@ error[E0624]: associated function `g` is private\n   --> $DIR/test.rs:45:7\n    |\n LL |     u.g();\n-   |       ^\n+   |       ^ private associated function\n \n error[E0624]: associated function `h` is private\n   --> $DIR/test.rs:46:7\n    |\n LL |     u.h();\n-   |       ^\n+   |       ^ private associated function\n \n error: aborting due to 12 previous errors\n "}, {"sha": "15096eb1139667224eaf2742c445f24eecc545dc", "filename": "src/test/ui/privacy/union-field-privacy-1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Funion-field-privacy-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fprivacy%2Funion-field-privacy-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Funion-field-privacy-1.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,13 +2,13 @@ error[E0451]: field `c` of union `m::U` is private\n   --> $DIR/union-field-privacy-1.rs:12:20\n    |\n LL |     let u = m::U { c: 0 };\n-   |                    ^^^^ field `c` is private\n+   |                    ^^^^ private field\n \n error[E0451]: field `c` of union `m::U` is private\n   --> $DIR/union-field-privacy-1.rs:16:16\n    |\n LL |     let m::U { c } = u;\n-   |                ^ field `c` is private\n+   |                ^ private field\n \n error: aborting due to 2 previous errors\n "}, {"sha": "ff7ddcde6e0c4194fc13ddd26dce87c978a206af", "filename": "src/test/ui/proc-macro/disappearing-resolution.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fproc-macro%2Fdisappearing-resolution.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fproc-macro%2Fdisappearing-resolution.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fdisappearing-resolution.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -8,7 +8,7 @@ error[E0603]: derive macro import `Empty` is private\n   --> $DIR/disappearing-resolution.rs:11:8\n    |\n LL | use m::Empty;\n-   |        ^^^^^ this derive macro import is private\n+   |        ^^^^^ private derive macro import\n    |\n note: the derive macro import `Empty` is defined here\n   --> $DIR/disappearing-resolution.rs:9:9"}, {"sha": "6c27a2756f7fb79ac10bcf8bd1209a79e8aac08b", "filename": "src/test/ui/reachable/unreachable-variant.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Freachable%2Funreachable-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Freachable%2Funreachable-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Funreachable-variant.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0603]: module `super_sekrit` is private\n   --> $DIR/unreachable-variant.rs:6:21\n    |\n LL |     let _x = other::super_sekrit::sooper_sekrit::baz;\n-   |                     ^^^^^^^^^^^^ this module is private\n+   |                     ^^^^^^^^^^^^ private module\n    |\n note: the module `super_sekrit` is defined here\n   --> $DIR/auxiliary/unreachable_variant.rs:1:1"}, {"sha": "37a9ff7bd1be5b66e81af8d3207de15fa3d87efb", "filename": "src/test/ui/resolve/privacy-enum-ctor.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fresolve%2Fprivacy-enum-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fresolve%2Fprivacy-enum-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fprivacy-enum-ctor.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -253,7 +253,7 @@ error[E0603]: enum `Z` is private\n   --> $DIR/privacy-enum-ctor.rs:57:22\n    |\n LL |     let _: Z = m::n::Z;\n-   |                      ^ this enum is private\n+   |                      ^ private enum\n    |\n note: the enum `Z` is defined here\n   --> $DIR/privacy-enum-ctor.rs:11:9\n@@ -265,7 +265,7 @@ error[E0603]: enum `Z` is private\n   --> $DIR/privacy-enum-ctor.rs:61:22\n    |\n LL |     let _: Z = m::n::Z::Fn;\n-   |                      ^ this enum is private\n+   |                      ^ private enum\n    |\n note: the enum `Z` is defined here\n   --> $DIR/privacy-enum-ctor.rs:11:9\n@@ -277,7 +277,7 @@ error[E0603]: enum `Z` is private\n   --> $DIR/privacy-enum-ctor.rs:64:22\n    |\n LL |     let _: Z = m::n::Z::Struct;\n-   |                      ^ this enum is private\n+   |                      ^ private enum\n    |\n note: the enum `Z` is defined here\n   --> $DIR/privacy-enum-ctor.rs:11:9\n@@ -289,7 +289,7 @@ error[E0603]: enum `Z` is private\n   --> $DIR/privacy-enum-ctor.rs:68:22\n    |\n LL |     let _: Z = m::n::Z::Unit {};\n-   |                      ^ this enum is private\n+   |                      ^ private enum\n    |\n note: the enum `Z` is defined here\n   --> $DIR/privacy-enum-ctor.rs:11:9"}, {"sha": "baf7dd84eb09dfc318782d584c35818034f7585c", "filename": "src/test/ui/resolve/privacy-struct-ctor.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -45,7 +45,7 @@ LL |         pub(in m) struct Z(pub(in m::n) u8);\n    |                            --------------- a constructor is private if any of the fields is private\n ...\n LL |         n::Z;\n-   |            ^ this tuple struct constructor is private\n+   |            ^ private tuple struct constructor\n    |\n note: the tuple struct constructor `Z` is defined here\n   --> $DIR/privacy-struct-ctor.rs:12:9\n@@ -60,7 +60,7 @@ LL |     pub struct S(u8);\n    |                  -- a constructor is private if any of the fields is private\n ...\n LL |     m::S;\n-   |        ^ this tuple struct constructor is private\n+   |        ^ private tuple struct constructor\n    |\n note: the tuple struct constructor `S` is defined here\n   --> $DIR/privacy-struct-ctor.rs:6:5\n@@ -75,7 +75,7 @@ LL |     pub struct S(u8);\n    |                  -- a constructor is private if any of the fields is private\n ...\n LL |     let _: S = m::S(2);\n-   |                   ^ this tuple struct constructor is private\n+   |                   ^ private tuple struct constructor\n    |\n note: the tuple struct constructor `S` is defined here\n   --> $DIR/privacy-struct-ctor.rs:6:5\n@@ -90,7 +90,7 @@ LL |         pub(in m) struct Z(pub(in m::n) u8);\n    |                            --------------- a constructor is private if any of the fields is private\n ...\n LL |     m::n::Z;\n-   |           ^ this tuple struct constructor is private\n+   |           ^ private tuple struct constructor\n    |\n note: the tuple struct constructor `Z` is defined here\n   --> $DIR/privacy-struct-ctor.rs:12:9\n@@ -102,7 +102,7 @@ error[E0603]: tuple struct constructor `S` is private\n   --> $DIR/privacy-struct-ctor.rs:41:16\n    |\n LL |     xcrate::m::S;\n-   |                ^ this tuple struct constructor is private\n+   |                ^ private tuple struct constructor\n    | \n   ::: $DIR/auxiliary/privacy-struct-ctor.rs:2:18\n    |\n@@ -119,7 +119,7 @@ error[E0603]: tuple struct constructor `Z` is private\n   --> $DIR/privacy-struct-ctor.rs:45:19\n    |\n LL |     xcrate::m::n::Z;\n-   |                   ^ this tuple struct constructor is private\n+   |                   ^ private tuple struct constructor\n    | \n   ::: $DIR/auxiliary/privacy-struct-ctor.rs:5:28\n    |"}, {"sha": "361da4cc78e0074fedbc050d5ac73a3b2593e4b3", "filename": "src/test/ui/resolve/resolve-hint-macro.stderr", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fresolve%2Fresolve-hint-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fresolve%2Fresolve-hint-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-hint-macro.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,12 @@ error[E0423]: expected function, found macro `assert`\n   --> $DIR/resolve-hint-macro.rs:2:5\n    |\n LL |     assert(true);\n-   |     ^^^^^^ help: use `!` to invoke the macro: `assert!`\n+   |     ^^^^^^\n+   |\n+help: use `!` to invoke the macro\n+   |\n+LL |     assert!(true);\n+   |           ^\n \n error: aborting due to previous error\n "}, {"sha": "4e91e7bff34b2477a8520537ed47e8383ba9b53b", "filename": "src/test/ui/rfc-2008-non-exhaustive/struct.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fstruct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fstruct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fstruct.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -14,7 +14,7 @@ error[E0603]: tuple struct constructor `TupleStruct` is private\n   --> $DIR/struct.rs:23:32\n    |\n LL |     let ts_explicit = structs::TupleStruct(640, 480);\n-   |                                ^^^^^^^^^^^ this tuple struct constructor is private\n+   |                                ^^^^^^^^^^^ private tuple struct constructor\n    | \n   ::: $DIR/auxiliary/structs.rs:11:24\n    |\n@@ -31,7 +31,7 @@ error[E0603]: unit struct `UnitStruct` is private\n   --> $DIR/struct.rs:32:32\n    |\n LL |     let us_explicit = structs::UnitStruct;\n-   |                                ^^^^^^^^^^ this unit struct is private\n+   |                                ^^^^^^^^^^ private unit struct\n    |\n note: the unit struct `UnitStruct` is defined here\n   --> $DIR/auxiliary/structs.rs:8:1"}, {"sha": "ae4f6aff11a02d021f8ad365fc06ea9c8ccc0bcd", "filename": "src/test/ui/rfc-2008-non-exhaustive/variant.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fvariant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fvariant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fvariant.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0603]: tuple variant `Tuple` is private\n   --> $DIR/variant.rs:11:48\n    |\n LL |     let variant_tuple = NonExhaustiveVariants::Tuple(640);\n-   |                                                ^^^^^ this tuple variant is private\n+   |                                                ^^^^^ private tuple variant\n    |\n note: the tuple variant `Tuple` is defined here\n   --> $DIR/auxiliary/variants.rs:5:23\n@@ -14,7 +14,7 @@ error[E0603]: unit variant `Unit` is private\n   --> $DIR/variant.rs:14:47\n    |\n LL |     let variant_unit = NonExhaustiveVariants::Unit;\n-   |                                               ^^^^ this unit variant is private\n+   |                                               ^^^^ private unit variant\n    |\n note: the unit variant `Unit` is defined here\n   --> $DIR/auxiliary/variants.rs:4:23\n@@ -26,7 +26,7 @@ error[E0603]: unit variant `Unit` is private\n   --> $DIR/variant.rs:18:32\n    |\n LL |         NonExhaustiveVariants::Unit => \"\",\n-   |                                ^^^^ this unit variant is private\n+   |                                ^^^^ private unit variant\n    |\n note: the unit variant `Unit` is defined here\n   --> $DIR/auxiliary/variants.rs:4:23\n@@ -38,7 +38,7 @@ error[E0603]: tuple variant `Tuple` is private\n   --> $DIR/variant.rs:20:32\n    |\n LL |         NonExhaustiveVariants::Tuple(fe_tpl) => \"\",\n-   |                                ^^^^^ this tuple variant is private\n+   |                                ^^^^^ private tuple variant\n    |\n note: the tuple variant `Tuple` is defined here\n   --> $DIR/auxiliary/variants.rs:5:23\n@@ -50,7 +50,7 @@ error[E0603]: tuple variant `Tuple` is private\n   --> $DIR/variant.rs:26:35\n    |\n LL |     if let NonExhaustiveVariants::Tuple(fe_tpl) = variant_struct {\n-   |                                   ^^^^^ this tuple variant is private\n+   |                                   ^^^^^ private tuple variant\n    |\n note: the tuple variant `Tuple` is defined here\n   --> $DIR/auxiliary/variants.rs:5:23"}, {"sha": "1a642ae6e8ed8d7205dd2e32908f9524846da955", "filename": "src/test/ui/shadowed/shadowed-use-visibility.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fshadowed%2Fshadowed-use-visibility.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fshadowed%2Fshadowed-use-visibility.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fshadowed%2Fshadowed-use-visibility.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0603]: module import `bar` is private\n   --> $DIR/shadowed-use-visibility.rs:9:14\n    |\n LL |     use foo::bar::f as g;\n-   |              ^^^ this module import is private\n+   |              ^^^ private module import\n    |\n note: the module import `bar` is defined here...\n   --> $DIR/shadowed-use-visibility.rs:4:9\n@@ -19,7 +19,7 @@ error[E0603]: module import `f` is private\n   --> $DIR/shadowed-use-visibility.rs:15:10\n    |\n LL | use bar::f::f;\n-   |          ^ this module import is private\n+   |          ^ private module import\n    |\n note: the module import `f` is defined here...\n   --> $DIR/shadowed-use-visibility.rs:11:9"}, {"sha": "35a09b21995916bfc051e66fe0397810ce66d196", "filename": "src/test/ui/stability-in-private-module.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fstability-in-private-module.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fstability-in-private-module.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-in-private-module.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0603]: module `thread_info` is private\n   --> $DIR/stability-in-private-module.rs:7:26\n    |\n LL |     let _ = std::thread::thread_info::current_thread();\n-   |                          ^^^^^^^^^^^ this module is private\n+   |                          ^^^^^^^^^^^ private module\n    |\n note: the module `thread_info` is defined here\n   --> $SRC_DIR/libstd/thread/mod.rs:LL:COL"}, {"sha": "bc35b4067a810b801c9fec5cb72198edfc508322", "filename": "src/test/ui/static/static-method-privacy.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fstatic%2Fstatic-method-privacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fstatic%2Fstatic-method-privacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstatic%2Fstatic-method-privacy.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0624]: associated function `new` is private\n   --> $DIR/static-method-privacy.rs:9:13\n    |\n LL |     let _ = a::S::new();\n-   |             ^^^^^^^^^\n+   |             ^^^^^^^^^ private associated function\n \n error: aborting due to previous error\n "}, {"sha": "d731da79246ee643589b4bc8613ebbf213b7424c", "filename": "src/test/ui/static/static-priv-by-default2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fstatic%2Fstatic-priv-by-default2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fstatic%2Fstatic-priv-by-default2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstatic%2Fstatic-priv-by-default2.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0603]: static `private` is private\n   --> $DIR/static-priv-by-default2.rs:15:30\n    |\n LL |     use child::childs_child::private;\n-   |                              ^^^^^^^ this static is private\n+   |                              ^^^^^^^ private static\n    |\n note: the static `private` is defined here\n   --> $DIR/static-priv-by-default2.rs:7:9\n@@ -14,7 +14,7 @@ error[E0603]: static `private` is private\n   --> $DIR/static-priv-by-default2.rs:23:33\n    |\n LL |     use static_priv_by_default::private;\n-   |                                 ^^^^^^^ this static is private\n+   |                                 ^^^^^^^ private static\n    |\n note: the static `private` is defined here\n   --> $DIR/auxiliary/static_priv_by_default.rs:3:1"}, {"sha": "4e022cef1b2d3f8238eae38e37f579c7747af761", "filename": "src/test/ui/structs/struct-variant-privacy-xc.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fstructs%2Fstruct-variant-privacy-xc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fstructs%2Fstruct-variant-privacy-xc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Fstruct-variant-privacy-xc.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0603]: enum `Bar` is private\n   --> $DIR/struct-variant-privacy-xc.rs:4:33\n    |\n LL | fn f(b: struct_variant_privacy::Bar) {\n-   |                                 ^^^ this enum is private\n+   |                                 ^^^ private enum\n    |\n note: the enum `Bar` is defined here\n   --> $DIR/auxiliary/struct_variant_privacy.rs:1:1\n@@ -14,7 +14,7 @@ error[E0603]: enum `Bar` is private\n   --> $DIR/struct-variant-privacy-xc.rs:6:33\n    |\n LL |         struct_variant_privacy::Bar::Baz { a: _a } => {}\n-   |                                 ^^^ this enum is private\n+   |                                 ^^^ private enum\n    |\n note: the enum `Bar` is defined here\n   --> $DIR/auxiliary/struct_variant_privacy.rs:1:1"}, {"sha": "a6bc381ff6b384fc22edb0d645a42a098ca01afb", "filename": "src/test/ui/structs/struct-variant-privacy.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fstructs%2Fstruct-variant-privacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fstructs%2Fstruct-variant-privacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Fstruct-variant-privacy.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0603]: enum `Bar` is private\n   --> $DIR/struct-variant-privacy.rs:7:14\n    |\n LL | fn f(b: foo::Bar) {\n-   |              ^^^ this enum is private\n+   |              ^^^ private enum\n    |\n note: the enum `Bar` is defined here\n   --> $DIR/struct-variant-privacy.rs:2:5\n@@ -14,7 +14,7 @@ error[E0603]: enum `Bar` is private\n   --> $DIR/struct-variant-privacy.rs:9:14\n    |\n LL |         foo::Bar::Baz { a: _a } => {}\n-   |              ^^^ this enum is private\n+   |              ^^^ private enum\n    |\n note: the enum `Bar` is defined here\n   --> $DIR/struct-variant-privacy.rs:2:5"}, {"sha": "f8ffc949b067e080111588697423aa570c2d9038", "filename": "src/test/ui/traits/trait-item-privacy.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Ftraits%2Ftrait-item-privacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Ftraits%2Ftrait-item-privacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-item-privacy.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -40,7 +40,7 @@ error[E0624]: associated function `a` is private\n   --> $DIR/trait-item-privacy.rs:72:7\n    |\n LL |     c.a();\n-   |       ^\n+   |       ^ private associated function\n \n error[E0599]: no function or associated item named `a` found for struct `S` in the current scope\n   --> $DIR/trait-item-privacy.rs:78:8\n@@ -77,7 +77,7 @@ error[E0624]: associated function `a` is private\n   --> $DIR/trait-item-privacy.rs:84:5\n    |\n LL |     C::a(&S);\n-   |     ^^^^\n+   |     ^^^^ private associated function\n \n error[E0599]: no associated item named `A` found for struct `S` in the current scope\n   --> $DIR/trait-item-privacy.rs:97:8\n@@ -114,7 +114,7 @@ error[E0624]: associated constant `A` is private\n   --> $DIR/trait-item-privacy.rs:101:5\n    |\n LL |     C::A;\n-   |     ^^^^\n+   |     ^^^^ private associated constant\n \n error[E0038]: the trait `assoc_const::C` cannot be made into an object\n   --> $DIR/trait-item-privacy.rs:101:5\n@@ -159,13 +159,13 @@ error: associated type `A` is private\n   --> $DIR/trait-item-privacy.rs:119:12\n    |\n LL |     let _: T::A;\n-   |            ^^^^\n+   |            ^^^^ private associated type\n \n error: associated type `A` is private\n   --> $DIR/trait-item-privacy.rs:128:9\n    |\n LL |         A = u8,\n-   |         ^^^^^^\n+   |         ^^^^^^ private associated type\n \n error: aborting due to 15 previous errors\n "}, {"sha": "c33673aea4d795bfe060b54d5b721a3c66eb499a", "filename": "src/test/ui/traits/trait-method-private.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Ftraits%2Ftrait-method-private.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Ftraits%2Ftrait-method-private.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-method-private.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0624]: associated function `method` is private\n   --> $DIR/trait-method-private.rs:19:9\n    |\n LL |     foo.method();\n-   |         ^^^^^^\n+   |         ^^^^^^ private associated function\n    |\n    = help: items from traits can only be used if the trait is in scope\n help: the following trait is implemented but not in scope; perhaps add a `use` for it:"}, {"sha": "fe870ab737cc8fd5d69b7bbb6623d714fc5a5e04", "filename": "src/test/ui/try-block/try-block-in-edition2015.stderr", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-edition2015.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-edition2015.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-edition2015.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -11,9 +11,13 @@ error[E0574]: expected struct, variant or union type, found macro `try`\n   --> $DIR/try-block-in-edition2015.rs:4:33\n    |\n LL |     let try_result: Option<_> = try {\n-   |                                 ^^^ help: use `!` to invoke the macro: `try!`\n+   |                                 ^^^\n    |\n    = note: if you want the `try` keyword, you need to be in the 2018 edition\n+help: use `!` to invoke the macro\n+   |\n+LL |     let try_result: Option<_> = try! {\n+   |                                    ^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "37b4e61c8085eff21382a40efe79ac63fac4290f", "filename": "src/test/ui/use/use-from-trait-xc.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fuse%2Fuse-from-trait-xc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fuse%2Fuse-from-trait-xc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-from-trait-xc.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -44,7 +44,7 @@ error[E0603]: struct `Foo` is private\n   --> $DIR/use-from-trait-xc.rs:14:24\n    |\n LL | use use_from_trait_xc::Foo::new;\n-   |                        ^^^ this struct is private\n+   |                        ^^^ private struct\n    |\n note: the struct `Foo` is defined here\n   --> $DIR/auxiliary/use-from-trait-xc.rs:9:1\n@@ -56,7 +56,7 @@ error[E0603]: struct `Foo` is private\n   --> $DIR/use-from-trait-xc.rs:17:24\n    |\n LL | use use_from_trait_xc::Foo::C;\n-   |                        ^^^ this struct is private\n+   |                        ^^^ private struct\n    |\n note: the struct `Foo` is defined here\n   --> $DIR/auxiliary/use-from-trait-xc.rs:9:1"}, {"sha": "1b12b3c6fa09a262c7d2ef24cd0888f043900e50", "filename": "src/test/ui/use/use-mod/use-mod-3.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-3.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0603]: module `bar` is private\n   --> $DIR/use-mod-3.rs:1:10\n    |\n LL | use foo::bar::{\n-   |          ^^^ this module is private\n+   |          ^^^ private module\n    |\n note: the module `bar` is defined here\n   --> $DIR/use-mod-3.rs:9:5\n@@ -14,7 +14,7 @@ error[E0603]: module `bar` is private\n   --> $DIR/use-mod-3.rs:4:10\n    |\n LL | use foo::bar::{\n-   |          ^^^ this module is private\n+   |          ^^^ private module\n    |\n note: the module `bar` is defined here\n   --> $DIR/use-mod-3.rs:9:5"}, {"sha": "902998cf0c110493552bc3e439ca5a705623b8f1", "filename": "src/test/ui/xc-private-method.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fxc-private-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fxc-private-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fxc-private-method.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,13 +2,13 @@ error[E0624]: associated function `static_meth_struct` is private\n   --> $DIR/xc-private-method.rs:6:13\n    |\n LL |     let _ = xc_private_method_lib::Struct::static_meth_struct();\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private associated function\n \n error[E0624]: associated function `static_meth_enum` is private\n   --> $DIR/xc-private-method.rs:9:13\n    |\n LL |     let _ = xc_private_method_lib::Enum::static_meth_enum();\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private associated function\n \n error: aborting due to 2 previous errors\n "}, {"sha": "0ebdb0a06d82b45340ec2ecf3c4c1d9a2f55f37a", "filename": "src/test/ui/xc-private-method2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fxc-private-method2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fxc-private-method2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fxc-private-method2.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,13 +2,13 @@ error[E0624]: associated function `meth_struct` is private\n   --> $DIR/xc-private-method2.rs:6:52\n    |\n LL |     let _ = xc_private_method_lib::Struct{ x: 10 }.meth_struct();\n-   |                                                    ^^^^^^^^^^^\n+   |                                                    ^^^^^^^^^^^ private associated function\n \n error[E0624]: associated function `meth_enum` is private\n   --> $DIR/xc-private-method2.rs:9:55\n    |\n LL |     let _ = xc_private_method_lib::Enum::Variant1(20).meth_enum();\n-   |                                                       ^^^^^^^^^\n+   |                                                       ^^^^^^^^^ private associated function\n \n error: aborting due to 2 previous errors\n "}, {"sha": "a97f55de5f8330fcfac88d7fff883f01c2313c84", "filename": "src/test/ui/xcrate/xcrate-private-by-default.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fxcrate%2Fxcrate-private-by-default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/854b78fe22af2ed010cc4367c3456eccf427b6dc/src%2Ftest%2Fui%2Fxcrate%2Fxcrate-private-by-default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fxcrate%2Fxcrate-private-by-default.stderr?ref=854b78fe22af2ed010cc4367c3456eccf427b6dc", "patch": "@@ -2,7 +2,7 @@ error[E0603]: static `j` is private\n   --> $DIR/xcrate-private-by-default.rs:23:29\n    |\n LL |     static_priv_by_default::j;\n-   |                             ^ this static is private\n+   |                             ^ private static\n    |\n note: the static `j` is defined here\n   --> $DIR/auxiliary/static_priv_by_default.rs:47:1\n@@ -14,7 +14,7 @@ error[E0603]: function `k` is private\n   --> $DIR/xcrate-private-by-default.rs:25:29\n    |\n LL |     static_priv_by_default::k;\n-   |                             ^ this function is private\n+   |                             ^ private function\n    |\n note: the function `k` is defined here\n   --> $DIR/auxiliary/static_priv_by_default.rs:48:1\n@@ -26,7 +26,7 @@ error[E0603]: unit struct `l` is private\n   --> $DIR/xcrate-private-by-default.rs:27:29\n    |\n LL |     static_priv_by_default::l;\n-   |                             ^ this unit struct is private\n+   |                             ^ private unit struct\n    |\n note: the unit struct `l` is defined here\n   --> $DIR/auxiliary/static_priv_by_default.rs:49:1\n@@ -38,7 +38,7 @@ error[E0603]: enum `m` is private\n   --> $DIR/xcrate-private-by-default.rs:29:35\n    |\n LL |     foo::<static_priv_by_default::m>();\n-   |                                   ^ this enum is private\n+   |                                   ^ private enum\n    |\n note: the enum `m` is defined here\n   --> $DIR/auxiliary/static_priv_by_default.rs:50:1\n@@ -50,7 +50,7 @@ error[E0603]: type alias `n` is private\n   --> $DIR/xcrate-private-by-default.rs:31:35\n    |\n LL |     foo::<static_priv_by_default::n>();\n-   |                                   ^ this type alias is private\n+   |                                   ^ private type alias\n    |\n note: the type alias `n` is defined here\n   --> $DIR/auxiliary/static_priv_by_default.rs:51:1\n@@ -62,7 +62,7 @@ error[E0603]: module `foo` is private\n   --> $DIR/xcrate-private-by-default.rs:35:29\n    |\n LL |     static_priv_by_default::foo::a;\n-   |                             ^^^ this module is private\n+   |                             ^^^ private module\n    |\n note: the module `foo` is defined here\n   --> $DIR/auxiliary/static_priv_by_default.rs:12:1\n@@ -74,7 +74,7 @@ error[E0603]: module `foo` is private\n   --> $DIR/xcrate-private-by-default.rs:37:29\n    |\n LL |     static_priv_by_default::foo::b;\n-   |                             ^^^ this module is private\n+   |                             ^^^ private module\n    |\n note: the module `foo` is defined here\n   --> $DIR/auxiliary/static_priv_by_default.rs:12:1\n@@ -86,7 +86,7 @@ error[E0603]: module `foo` is private\n   --> $DIR/xcrate-private-by-default.rs:39:29\n    |\n LL |     static_priv_by_default::foo::c;\n-   |                             ^^^ this module is private\n+   |                             ^^^ private module\n    |\n note: the module `foo` is defined here\n   --> $DIR/auxiliary/static_priv_by_default.rs:12:1\n@@ -98,7 +98,7 @@ error[E0603]: module `foo` is private\n   --> $DIR/xcrate-private-by-default.rs:41:35\n    |\n LL |     foo::<static_priv_by_default::foo::d>();\n-   |                                   ^^^ this module is private\n+   |                                   ^^^ private module\n    |\n note: the module `foo` is defined here\n   --> $DIR/auxiliary/static_priv_by_default.rs:12:1\n@@ -110,7 +110,7 @@ error[E0603]: module `foo` is private\n   --> $DIR/xcrate-private-by-default.rs:43:35\n    |\n LL |     foo::<static_priv_by_default::foo::e>();\n-   |                                   ^^^ this module is private\n+   |                                   ^^^ private module\n    |\n note: the module `foo` is defined here\n   --> $DIR/auxiliary/static_priv_by_default.rs:12:1"}]}