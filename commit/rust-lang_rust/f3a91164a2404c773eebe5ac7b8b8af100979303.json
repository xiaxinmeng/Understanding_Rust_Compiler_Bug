{"sha": "f3a91164a2404c773eebe5ac7b8b8af100979303", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzYTkxMTY0YTI0MDRjNzczZWViZTVhYzdiOGI4YWYxMDA5NzkzMDM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-07-02T17:48:03Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-07-02T17:48:03Z"}, "message": "Rustup to rustc 1.46.0-nightly (f781babf8 2020-07-01)", "tree": {"sha": "7cf756baf5b4d69ae94af9768e0c1b2026848a4d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7cf756baf5b4d69ae94af9768e0c1b2026848a4d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3a91164a2404c773eebe5ac7b8b8af100979303", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3a91164a2404c773eebe5ac7b8b8af100979303", "html_url": "https://github.com/rust-lang/rust/commit/f3a91164a2404c773eebe5ac7b8b8af100979303", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3a91164a2404c773eebe5ac7b8b8af100979303/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a299d0e632772718a7e0bae3f0964a7a3aa7c2e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/a299d0e632772718a7e0bae3f0964a7a3aa7c2e0", "html_url": "https://github.com/rust-lang/rust/commit/a299d0e632772718a7e0bae3f0964a7a3aa7c2e0"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "f7bd624a014a1d6d10da234474dcf97fbd0dcfb2", "filename": "build_sysroot/Cargo.lock", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f3a91164a2404c773eebe5ac7b8b8af100979303/build_sysroot%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/f3a91164a2404c773eebe5ac7b8b8af100979303/build_sysroot%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_sysroot%2FCargo.lock?ref=f3a91164a2404c773eebe5ac7b8b8af100979303", "patch": "@@ -51,9 +51,9 @@ dependencies = [\n \n [[package]]\n name = \"cc\"\n-version = \"1.0.56\"\n+version = \"1.0.57\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"77c1f1d60091c1b73e2b1f4560ab419204b178e625fa945ded7b660becd2bd46\"\n+checksum = \"0fde55d2a2bfaa4c9668bbc63f531fbdeee3ffe188f4662511ce2c22b3eedebe\"\n \n [[package]]\n name = \"cfg-if\""}, {"sha": "a8db81fa06d595e3ef5e89d5a0afc77a76a3aad3", "filename": "example/mini_core.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3a91164a2404c773eebe5ac7b8b8af100979303/example%2Fmini_core.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3a91164a2404c773eebe5ac7b8b8af100979303/example%2Fmini_core.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/example%2Fmini_core.rs?ref=f3a91164a2404c773eebe5ac7b8b8af100979303", "patch": "@@ -1,7 +1,7 @@\n #![feature(\n     no_core, lang_items, intrinsics, unboxed_closures, type_ascription, extern_types,\n     untagged_unions, decl_macro, rustc_attrs, transparent_unions, optin_builtin_traits,\n-    thread_local, track_caller\n+    thread_local,\n )]\n #![no_core]\n #![allow(dead_code)]"}, {"sha": "93bab17e46b27c4dec994bd9346507db8f708dde", "filename": "example/track-caller-attribute.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f3a91164a2404c773eebe5ac7b8b8af100979303/example%2Ftrack-caller-attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3a91164a2404c773eebe5ac7b8b8af100979303/example%2Ftrack-caller-attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/example%2Ftrack-caller-attribute.rs?ref=f3a91164a2404c773eebe5ac7b8b8af100979303", "patch": "@@ -2,8 +2,6 @@\n \n // run-pass\n \n-#![feature(track_caller)]\n-\n use std::panic::Location;\n \n #[track_caller]\n@@ -22,21 +20,21 @@ fn nested_tracked() -> &'static Location<'static> {\n fn main() {\n     let location = Location::caller();\n     assert_eq!(location.file(), file!());\n-    assert_eq!(location.line(), 23);\n+    assert_eq!(location.line(), 21);\n     assert_eq!(location.column(), 20);\n \n     let tracked = tracked();\n     assert_eq!(tracked.file(), file!());\n-    assert_eq!(tracked.line(), 28);\n+    assert_eq!(tracked.line(), 26);\n     assert_eq!(tracked.column(), 19);\n \n     let nested = nested_intrinsic();\n     assert_eq!(nested.file(), file!());\n-    assert_eq!(nested.line(), 15);\n+    assert_eq!(nested.line(), 13);\n     assert_eq!(nested.column(), 5);\n \n     let contained = nested_tracked();\n     assert_eq!(contained.file(), file!());\n-    assert_eq!(contained.line(), 19);\n+    assert_eq!(contained.line(), 17);\n     assert_eq!(contained.column(), 5);\n }"}, {"sha": "066aa78c0074cc23b488224fbd1ca7758410b77a", "filename": "rust-toolchain", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3a91164a2404c773eebe5ac7b8b8af100979303/rust-toolchain", "raw_url": "https://github.com/rust-lang/rust/raw/f3a91164a2404c773eebe5ac7b8b8af100979303/rust-toolchain", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-toolchain?ref=f3a91164a2404c773eebe5ac7b8b8af100979303", "patch": "@@ -1 +1 @@\n-nightly-2020-06-30\n+nightly-2020-07-02"}, {"sha": "00f5f0336a8698ce744c7e995f32581f206b3149", "filename": "src/abi/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3a91164a2404c773eebe5ac7b8b8af100979303/src%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3a91164a2404c773eebe5ac7b8b8af100979303/src%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi%2Fmod.rs?ref=f3a91164a2404c773eebe5ac7b8b8af100979303", "patch": "@@ -37,7 +37,7 @@ pub(crate) fn fn_sig_for_fn_abi<'tcx>(tcx: TyCtxt<'tcx>, instance: Instance<'tcx\n \n             let env_ty = tcx.closure_env_ty(def_id, substs).unwrap();\n             sig.map_bound(|sig| tcx.mk_fn_sig(\n-                std::iter::once(*env_ty.skip_binder()).chain(sig.inputs().iter().cloned()),\n+                std::iter::once(env_ty.skip_binder()).chain(sig.inputs().iter().cloned()),\n                 sig.output(),\n                 sig.c_variadic,\n                 sig.unsafety,"}]}