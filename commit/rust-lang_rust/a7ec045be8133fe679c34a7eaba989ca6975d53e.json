{"sha": "a7ec045be8133fe679c34a7eaba989ca6975d53e", "node_id": "C_kwDOAAsO6NoAKGE3ZWMwNDViZTgxMzNmZTY3OWMzNGE3ZWFiYTk4OWNhNjk3NWQ1M2U", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2023-03-21T15:38:40Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2023-03-21T15:38:40Z"}, "message": "disable global caching during coherence", "tree": {"sha": "402ed65cf6f70b0054b26e9443d6568967e11b55", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/402ed65cf6f70b0054b26e9443d6568967e11b55"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7ec045be8133fe679c34a7eaba989ca6975d53e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7ec045be8133fe679c34a7eaba989ca6975d53e", "html_url": "https://github.com/rust-lang/rust/commit/a7ec045be8133fe679c34a7eaba989ca6975d53e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7ec045be8133fe679c34a7eaba989ca6975d53e/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "938434ab82609c8de83028fa80bde4d6d28c282a", "url": "https://api.github.com/repos/rust-lang/rust/commits/938434ab82609c8de83028fa80bde4d6d28c282a", "html_url": "https://github.com/rust-lang/rust/commit/938434ab82609c8de83028fa80bde4d6d28c282a"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "219890b9dc42c1726110306d19a2800d87fedae5", "filename": "compiler/rustc_trait_selection/src/solve/search_graph/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a7ec045be8133fe679c34a7eaba989ca6975d53e/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fsearch_graph%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7ec045be8133fe679c34a7eaba989ca6975d53e/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fsearch_graph%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fsearch_graph%2Fmod.rs?ref=a7ec045be8133fe679c34a7eaba989ca6975d53e", "patch": "@@ -254,7 +254,8 @@ impl<'tcx> SearchGraph<'tcx> {\n             // dependencies, our non-root goal may no longer appear as child of the root goal.\n             //\n             // See https://github.com/rust-lang/rust/pull/108071 for some additional context.\n-            let should_cache_globally = !self.overflow_data.did_overflow() || self.stack.is_empty();\n+            let should_cache_globally = matches!(self.solver_mode(), SolverMode::Normal)\n+                && (!self.overflow_data.did_overflow() || self.stack.is_empty());\n             if should_cache_globally {\n                 tcx.new_solver_evaluation_cache.insert(\n                     current_goal.goal,"}]}