{"sha": "8ebe2acb7bd2919cfd7cd583d258e9bd95a81391", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlYmUyYWNiN2JkMjkxOWNmZDdjZDU4M2QyNThlOWJkOTVhODEzOTE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-03-19T14:16:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-03-19T14:16:55Z"}, "message": "Rollup merge of #59116 - estebank:comma-sugg, r=petrochenkov\n\nBe more discerning on when to attempt suggesting a comma in a macro invocation\n\nFix #58796.", "tree": {"sha": "4767aca80de9d6bdf69ecdceb77d624279a75711", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4767aca80de9d6bdf69ecdceb77d624279a75711"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ebe2acb7bd2919cfd7cd583d258e9bd95a81391", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJckPnXCRBK7hj4Ov3rIwAAdHIIAE4aNCWavk3Y3CvoLSkLP6fl\nxjo0nrtaYGtbsXtJfXZaAjfRF75pOP4UCD4GFAC0ehCnqbe4l41+EJLaaa1su1GF\nPRQ/9cz3RJtRn1KEisjYqg12syaWrYE4XT4jp6jA88nl07KHruXcXJE2mSqanpZZ\nIs/T+tjMuZnq3zA/lpbvvLjxdZvWcbR+sQ/XcZxc+hdpFI7RkL64aXDOSpblV8vU\n5KZ3owCrR3KARnhc3F1sGY0THO3VjR5LnN8OhoEIR+Bf1Cp0AQL/iuDCx0M2/ejj\nXyJvX1vx13MbmUgxKZFIEAWhApkSsUeVHYILCdy4OYFXBvqRWqEM9qnMpqWWBjM=\n=urxQ\n-----END PGP SIGNATURE-----\n", "payload": "tree 4767aca80de9d6bdf69ecdceb77d624279a75711\nparent 61ff887919ba03d869e2b91aba1a9e64f6bf9a73\nparent 27abd52170b2d2769f5fbed665795bdb9a3facef\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1553005015 +0100\ncommitter GitHub <noreply@github.com> 1553005015 +0100\n\nRollup merge of #59116 - estebank:comma-sugg, r=petrochenkov\n\nBe more discerning on when to attempt suggesting a comma in a macro invocation\n\nFix #58796.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ebe2acb7bd2919cfd7cd583d258e9bd95a81391", "html_url": "https://github.com/rust-lang/rust/commit/8ebe2acb7bd2919cfd7cd583d258e9bd95a81391", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ebe2acb7bd2919cfd7cd583d258e9bd95a81391/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61ff887919ba03d869e2b91aba1a9e64f6bf9a73", "url": "https://api.github.com/repos/rust-lang/rust/commits/61ff887919ba03d869e2b91aba1a9e64f6bf9a73", "html_url": "https://github.com/rust-lang/rust/commit/61ff887919ba03d869e2b91aba1a9e64f6bf9a73"}, {"sha": "27abd52170b2d2769f5fbed665795bdb9a3facef", "url": "https://api.github.com/repos/rust-lang/rust/commits/27abd52170b2d2769f5fbed665795bdb9a3facef", "html_url": "https://github.com/rust-lang/rust/commit/27abd52170b2d2769f5fbed665795bdb9a3facef"}], "stats": {"total": 36, "additions": 27, "deletions": 9}, "files": [{"sha": "80a7bde606afa7e7dfbff028a51d96961ec46219", "filename": "src/libsyntax/tokenstream.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8ebe2acb7bd2919cfd7cd583d258e9bd95a81391/src%2Flibsyntax%2Ftokenstream.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ebe2acb7bd2919cfd7cd583d258e9bd95a81391/src%2Flibsyntax%2Ftokenstream.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftokenstream.rs?ref=8ebe2acb7bd2919cfd7cd583d258e9bd95a81391", "patch": "@@ -178,9 +178,11 @@ impl TokenStream {\n             while let Some((pos, ts)) = iter.next() {\n                 if let Some((_, next)) = iter.peek() {\n                     let sp = match (&ts, &next) {\n-                        ((TokenTree::Token(_, token::Token::Comma), NonJoint), _) |\n-                        (_, (TokenTree::Token(_, token::Token::Comma), NonJoint)) => continue,\n-                        ((TokenTree::Token(sp, _), NonJoint), _) => *sp,\n+                        (_, (TokenTree::Token(_, token::Token::Comma), _)) => continue,\n+                        ((TokenTree::Token(sp, token_left), NonJoint),\n+                         (TokenTree::Token(_, token_right), _))\n+                        if (token_left.is_ident() || token_left.is_lit()) &&\n+                            (token_right.is_ident() || token_right.is_lit()) => *sp,\n                         ((TokenTree::Delimited(sp, ..), NonJoint), _) => sp.entire(),\n                         _ => continue,\n                     };"}, {"sha": "2b411aba8a2eec557600f12c66343cb4c56da8e7", "filename": "src/test/ui/macros/missing-comma.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8ebe2acb7bd2919cfd7cd583d258e9bd95a81391/src%2Ftest%2Fui%2Fmacros%2Fmissing-comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ebe2acb7bd2919cfd7cd583d258e9bd95a81391/src%2Ftest%2Fui%2Fmacros%2Fmissing-comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmissing-comma.rs?ref=8ebe2acb7bd2919cfd7cd583d258e9bd95a81391", "patch": "@@ -6,6 +6,11 @@ macro_rules! foo {\n     ($a:ident, $b:ident, $c:ident, $d:ident, $e:ident) => ();\n }\n \n+macro_rules! bar {\n+    ($lvl:expr, $($arg:tt)+) => {}\n+}\n+\n+\n fn main() {\n     println!(\"{}\" a);\n     //~^ ERROR expected token: `,`\n@@ -17,4 +22,6 @@ fn main() {\n     //~^ ERROR no rules expected the token `d`\n     foo!(a, b, c d e);\n     //~^ ERROR no rules expected the token `d`\n+    bar!(Level::Error, );\n+    //~^ ERROR unexpected end of macro invocation\n }"}, {"sha": "424fefd00f87381e7fa0944fa8838a4de51801b4", "filename": "src/test/ui/macros/missing-comma.stderr", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/8ebe2acb7bd2919cfd7cd583d258e9bd95a81391/src%2Ftest%2Fui%2Fmacros%2Fmissing-comma.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8ebe2acb7bd2919cfd7cd583d258e9bd95a81391/src%2Ftest%2Fui%2Fmacros%2Fmissing-comma.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmissing-comma.stderr?ref=8ebe2acb7bd2919cfd7cd583d258e9bd95a81391", "patch": "@@ -1,11 +1,11 @@\n error: expected token: `,`\n-  --> $DIR/missing-comma.rs:10:19\n+  --> $DIR/missing-comma.rs:15:19\n    |\n LL |     println!(\"{}\" a);\n    |                   ^\n \n error: no rules expected the token `b`\n-  --> $DIR/missing-comma.rs:12:12\n+  --> $DIR/missing-comma.rs:17:12\n    |\n LL | macro_rules! foo {\n    | ---------------- when calling this macro\n@@ -16,7 +16,7 @@ LL |     foo!(a b);\n    |           help: missing comma here\n \n error: no rules expected the token `e`\n-  --> $DIR/missing-comma.rs:14:21\n+  --> $DIR/missing-comma.rs:19:21\n    |\n LL | macro_rules! foo {\n    | ---------------- when calling this macro\n@@ -27,7 +27,7 @@ LL |     foo!(a, b, c, d e);\n    |                    help: missing comma here\n \n error: no rules expected the token `d`\n-  --> $DIR/missing-comma.rs:16:18\n+  --> $DIR/missing-comma.rs:21:18\n    |\n LL | macro_rules! foo {\n    | ---------------- when calling this macro\n@@ -38,13 +38,22 @@ LL |     foo!(a, b, c d, e);\n    |                 help: missing comma here\n \n error: no rules expected the token `d`\n-  --> $DIR/missing-comma.rs:18:18\n+  --> $DIR/missing-comma.rs:23:18\n    |\n LL | macro_rules! foo {\n    | ---------------- when calling this macro\n ...\n LL |     foo!(a, b, c d e);\n    |                  ^ no rules expected this token in macro call\n \n-error: aborting due to 5 previous errors\n+error: unexpected end of macro invocation\n+  --> $DIR/missing-comma.rs:25:23\n+   |\n+LL | macro_rules! bar {\n+   | ---------------- when calling this macro\n+...\n+LL |     bar!(Level::Error, );\n+   |                       ^ missing tokens in macro arguments\n+\n+error: aborting due to 6 previous errors\n "}]}