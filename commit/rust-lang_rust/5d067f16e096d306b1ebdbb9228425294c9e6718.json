{"sha": "5d067f16e096d306b1ebdbb9228425294c9e6718", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkMDY3ZjE2ZTA5NmQzMDZiMWViZGJiOTIyODQyNTI5NGM5ZTY3MTg=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-05-23T14:30:07Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-05-23T14:30:07Z"}, "message": "Format code block with sharp prefix\n\nby hiding lines with a leading `#` behind a custom comment.", "tree": {"sha": "34ea64652f1a8bbb888d1fbbd1f337589c9acced", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34ea64652f1a8bbb888d1fbbd1f337589c9acced"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d067f16e096d306b1ebdbb9228425294c9e6718", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d067f16e096d306b1ebdbb9228425294c9e6718", "html_url": "https://github.com/rust-lang/rust/commit/5d067f16e096d306b1ebdbb9228425294c9e6718", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d067f16e096d306b1ebdbb9228425294c9e6718/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1974e2209092ed69d99144ab14fae036c50c72d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1974e2209092ed69d99144ab14fae036c50c72d", "html_url": "https://github.com/rust-lang/rust/commit/f1974e2209092ed69d99144ab14fae036c50c72d"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "cbb1bd36f0050cd4ceedf0ba4ee9b203ac1b2b8b", "filename": "src/comment.rs", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/5d067f16e096d306b1ebdbb9228425294c9e6718/src%2Fcomment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d067f16e096d306b1ebdbb9228425294c9e6718/src%2Fcomment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomment.rs?ref=5d067f16e096d306b1ebdbb9228425294c9e6718", "patch": "@@ -387,14 +387,18 @@ fn rewrite_comment_inner(\n             if line.starts_with(\"```\") {\n                 inside_code_block = false;\n                 result.push_str(&comment_line_separator);\n-                let code_block = ::format_code_block(&code_block_buffer, config)\n-                    .unwrap_or_else(|| code_block_buffer.to_owned());\n+                let code_block = {\n+                    let mut config = config.clone();\n+                    config.set().wrap_comments(false);\n+                    ::format_code_block(&code_block_buffer, &config)\n+                        .map_or_else(|| code_block_buffer.to_owned(), trim_custom_comment_prefix)\n+                };\n                 result.push_str(&join_code_block_with_comment_line_separator(&code_block));\n                 code_block_buffer.clear();\n                 result.push_str(&comment_line_separator);\n                 result.push_str(line);\n             } else {\n-                code_block_buffer.push_str(line);\n+                code_block_buffer.push_str(&hide_sharp_behind_comment(line));\n                 code_block_buffer.push('\\n');\n \n                 if is_last {\n@@ -491,6 +495,23 @@ fn rewrite_comment_inner(\n     Some(result)\n }\n \n+const RUSTFMT_CUSTOM_COMMENT_PREFIX: &str = \"//#### \";\n+\n+fn hide_sharp_behind_comment<'a>(s: &'a str) -> Cow<'a, str> {\n+    if s.trim_left().starts_with('#') {\n+        Cow::from(format!(\"{}{}\", RUSTFMT_CUSTOM_COMMENT_PREFIX, s))\n+    } else {\n+        Cow::from(s)\n+    }\n+}\n+\n+fn trim_custom_comment_prefix(s: String) -> String {\n+    s.lines()\n+        .map(|line| line.trim_left_matches(RUSTFMT_CUSTOM_COMMENT_PREFIX))\n+        .collect::<Vec<_>>()\n+        .join(\"\\n\")\n+}\n+\n /// Returns true if the given string MAY include URLs or alike.\n fn has_url(s: &str) -> bool {\n     // This function may return false positive, but should get its job done in most cases."}]}