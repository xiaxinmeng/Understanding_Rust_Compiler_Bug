{"sha": "7ab92cde55c142024c95ca9d4ff9586456262f76", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhYjkyY2RlNTVjMTQyMDI0Yzk1Y2E5ZDRmZjk1ODY0NTYyNjJmNzY=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-04-22T20:08:52Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-04-26T20:35:10Z"}, "message": "Use visit_terminator_kind when possible", "tree": {"sha": "7355aeee84c64b02a31485e7966aeaf7c41443b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7355aeee84c64b02a31485e7966aeaf7c41443b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ab92cde55c142024c95ca9d4ff9586456262f76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ab92cde55c142024c95ca9d4ff9586456262f76", "html_url": "https://github.com/rust-lang/rust/commit/7ab92cde55c142024c95ca9d4ff9586456262f76", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ab92cde55c142024c95ca9d4ff9586456262f76/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0eeab6b9a674ec3ede6ff0bcf93ae26f525ca20c", "url": "https://api.github.com/repos/rust-lang/rust/commits/0eeab6b9a674ec3ede6ff0bcf93ae26f525ca20c", "html_url": "https://github.com/rust-lang/rust/commit/0eeab6b9a674ec3ede6ff0bcf93ae26f525ca20c"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "804983447b5927a09bdddab0fe8ba451daaa41cd", "filename": "src/librustc_mir/borrow_check/nll/invalidation.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7ab92cde55c142024c95ca9d4ff9586456262f76/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Finvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ab92cde55c142024c95ca9d4ff9586456262f76/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Finvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Finvalidation.rs?ref=7ab92cde55c142024c95ca9d4ff9586456262f76", "patch": "@@ -14,7 +14,7 @@ use rustc::ty::TyCtxt;\n use rustc::mir::visit::Visitor;\n use rustc::mir::{BasicBlock, Location, Mir, Place, PlaceBase, Rvalue};\n use rustc::mir::{Statement, StatementKind};\n-use rustc::mir::{Terminator, TerminatorKind};\n+use rustc::mir::TerminatorKind;\n use rustc::mir::{Operand, BorrowKind};\n use rustc_data_structures::graph::dominators::Dominators;\n \n@@ -136,14 +136,14 @@ impl<'cx, 'tcx, 'gcx> Visitor<'tcx> for InvalidationGenerator<'cx, 'tcx, 'gcx> {\n         self.super_statement(statement, location);\n     }\n \n-    fn visit_terminator(\n+    fn visit_terminator_kind(\n         &mut self,\n-        kind: &Terminator<'tcx>,\n+        kind: &TerminatorKind<'tcx>,\n         location: Location\n     ) {\n         self.check_activations(location);\n \n-        match terminator.kind {\n+        match kind {\n             TerminatorKind::SwitchInt {\n                 ref discr,\n                 switch_ty: _,\n@@ -256,7 +256,7 @@ impl<'cx, 'tcx, 'gcx> Visitor<'tcx> for InvalidationGenerator<'cx, 'tcx, 'gcx> {\n             }\n         }\n \n-        self.super_terminator(terminator, location);\n+        self.super_terminator_kind(kind, location);\n     }\n }\n "}, {"sha": "648f4e65b0d076b9a6b8fa1c1609e10c872a2496", "filename": "src/librustc_mir/transform/no_landing_pads.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7ab92cde55c142024c95ca9d4ff9586456262f76/src%2Flibrustc_mir%2Ftransform%2Fno_landing_pads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ab92cde55c142024c95ca9d4ff9586456262f76/src%2Flibrustc_mir%2Ftransform%2Fno_landing_pads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fno_landing_pads.rs?ref=7ab92cde55c142024c95ca9d4ff9586456262f76", "patch": "@@ -24,12 +24,12 @@ pub fn no_landing_pads<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, mir: &mut Mir<'tcx\n }\n \n impl<'tcx> MutVisitor<'tcx> for NoLandingPads {\n-    fn visit_terminator(&mut self,\n-                        terminator: &mut Terminator<'tcx>,\n+    fn visit_terminator_kind(&mut self,\n+                        kind: &mut TerminatorKind<'tcx>,\n                         location: Location) {\n-        if let Some(unwind) = terminator.kind.unwind_mut() {\n+        if let Some(unwind) = kind.unwind_mut() {\n             unwind.take();\n         }\n-        self.super_terminator(terminator, location);\n+        self.super_terminator_kind(kind, location);\n     }\n }"}]}