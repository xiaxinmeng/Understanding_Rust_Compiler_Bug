{"sha": "fb540e3de45571ac85c610475031449993c19277", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiNTQwZTNkZTQ1NTcxYWM4NWM2MTA0NzUwMzE0NDk5OTNjMTkyNzc=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2017-09-11T14:51:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-09-11T14:51:28Z"}, "message": "Update comment to properly describe static promotion restrictions", "tree": {"sha": "a57204233c840046b0448d159c3149dfda66fcbe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a57204233c840046b0448d159c3149dfda66fcbe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb540e3de45571ac85c610475031449993c19277", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb540e3de45571ac85c610475031449993c19277", "html_url": "https://github.com/rust-lang/rust/commit/fb540e3de45571ac85c610475031449993c19277", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb540e3de45571ac85c610475031449993c19277/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "813b323bdcece529a5cc7e5d69aa596253c484e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/813b323bdcece529a5cc7e5d69aa596253c484e6", "html_url": "https://github.com/rust-lang/rust/commit/813b323bdcece529a5cc7e5d69aa596253c484e6"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "547d63fc3d4aa68f58b400bc7aa9b7a14b3a4767", "filename": "src/librustc_passes/consts.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/fb540e3de45571ac85c610475031449993c19277/src%2Flibrustc_passes%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb540e3de45571ac85c610475031449993c19277/src%2Flibrustc_passes%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fconsts.rs?ref=fb540e3de45571ac85c610475031449993c19277", "patch": "@@ -336,9 +336,10 @@ fn check_expr<'a, 'tcx>(v: &mut CheckCrateVisitor<'a, 'tcx>, e: &hir::Expr, node\n                 Def::VariantCtor(..) | Def::StructCtor(..) |\n                 Def::Fn(..) | Def::Method(..) =>  {}\n \n-                // References to a static are inherently promotable,\n-                // with the exception of \"#[thread_loca]\" statics.\n-                // The latter may not outlive the current function\n+                // References to a static that are themselves within a static\n+                // are inherently promotable with the exception\n+                //  of \"#[thread_loca]\" statics, which may not\n+                // outlive the current function\n                 Def::Static(did, _) => {\n \n                     if v.in_static {"}]}