{"sha": "4ff4fc1bc93f54839e6dfa56bc2e87b686a74094", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmZjRmYzFiYzkzZjU0ODM5ZTZkZmE1NmJjMmU4N2I2ODZhNzQwOTQ=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-12-05T22:54:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-12-05T22:54:30Z"}, "message": "Rollup merge of #56452 - sinkuu:redundant_clone, r=nikic\n\nRemove redundant clones", "tree": {"sha": "9dc5781601c1222a6d1d3e291e18d07ebd8b20d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9dc5781601c1222a6d1d3e291e18d07ebd8b20d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ff4fc1bc93f54839e6dfa56bc2e87b686a74094", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcCFcnCRBK7hj4Ov3rIwAAdHIIAHPNLw9jWHpYI2JXZTaAuG9+\nPpbGu+KtcM5YmJwPb9TvLb9CnUkppwlSe0hhxo925mkchiyZGOhrmKLO2IIfWBL2\nUnDSpKOUBEicFZ5hl/qne6BpfBqkVSNLvTwBqSY+KMtLX12NqwylNY0+zmfg6QMo\navRTYpaGMdgI/oXEMRmz8a+jPb8dsKUg6AozJZaqbk+GsunjeTY8Qy1rVfTtaOF3\nB5Y2saQH4biwTVKPbjBQMqwkztuqWKCkbGlB7Fvhh70afw4OSkpO2AblWh6MRDCn\nthrgnSWDex4fxCu/obRJ5E5qxYGZpumnDDxe8nobZcsVIkhQNZ+qe5dQDJ6u9WY=\n=WA/K\n-----END PGP SIGNATURE-----\n", "payload": "tree 9dc5781601c1222a6d1d3e291e18d07ebd8b20d8\nparent 21ba28f1c626e650c886c822efc318084644f1e8\nparent bc7c3dc71de785da813784bafaa490f12d4d7cfe\nauthor Pietro Albini <pietro@pietroalbini.org> 1544050470 +0100\ncommitter GitHub <noreply@github.com> 1544050470 +0100\n\nRollup merge of #56452 - sinkuu:redundant_clone, r=nikic\n\nRemove redundant clones\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ff4fc1bc93f54839e6dfa56bc2e87b686a74094", "html_url": "https://github.com/rust-lang/rust/commit/4ff4fc1bc93f54839e6dfa56bc2e87b686a74094", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ff4fc1bc93f54839e6dfa56bc2e87b686a74094/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21ba28f1c626e650c886c822efc318084644f1e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/21ba28f1c626e650c886c822efc318084644f1e8", "html_url": "https://github.com/rust-lang/rust/commit/21ba28f1c626e650c886c822efc318084644f1e8"}, {"sha": "bc7c3dc71de785da813784bafaa490f12d4d7cfe", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc7c3dc71de785da813784bafaa490f12d4d7cfe", "html_url": "https://github.com/rust-lang/rust/commit/bc7c3dc71de785da813784bafaa490f12d4d7cfe"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "528942df29fee5da3fc824147aa72e837551a97f", "filename": "src/librustc_mir/monomorphize/partitioning.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4ff4fc1bc93f54839e6dfa56bc2e87b686a74094/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff4fc1bc93f54839e6dfa56bc2e87b686a74094/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs?ref=4ff4fc1bc93f54839e6dfa56bc2e87b686a74094", "patch": "@@ -585,7 +585,7 @@ fn merge_codegen_units<'tcx>(tcx: TyCtxt<'_, 'tcx, 'tcx>,\n     // smallest into each other) we're sure to start off with a deterministic\n     // order (sorted by name). This'll mean that if two cgus have the same size\n     // the stable sort below will keep everything nice and deterministic.\n-    codegen_units.sort_by_key(|cgu| cgu.name().clone());\n+    codegen_units.sort_by_key(|cgu| *cgu.name());\n \n     // Merge the two smallest codegen units until the target size is reached.\n     while codegen_units.len() > target_cgu_count {\n@@ -985,7 +985,7 @@ fn collect_and_partition_mono_items<'a, 'tcx>(\n                 output.push_str(\" @@\");\n                 let mut empty = Vec::new();\n                 let cgus = item_to_cgus.get_mut(i).unwrap_or(&mut empty);\n-                cgus.as_mut_slice().sort_by_cached_key(|&(ref name, _)| name.clone());\n+                cgus.sort_by_key(|(name, _)| *name);\n                 cgus.dedup();\n                 for &(ref cgu_name, (linkage, _)) in cgus.iter() {\n                     output.push_str(\" \");"}, {"sha": "da4cd73923ede1914d3cfeb96ef4903c828eca8f", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff4fc1bc93f54839e6dfa56bc2e87b686a74094/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff4fc1bc93f54839e6dfa56bc2e87b686a74094/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=4ff4fc1bc93f54839e6dfa56bc2e87b686a74094", "patch": "@@ -318,7 +318,7 @@ impl<'a, 'cl> Resolver<'a, 'cl> {\n                         // This particular use tree\n                         &tree, id, &prefix, true,\n                         // The whole `use` item\n-                        parent_scope.clone(), item, ty::Visibility::Invisible, root_span,\n+                        parent_scope, item, ty::Visibility::Invisible, root_span,\n                     );\n                 }\n             }"}, {"sha": "68d94b43dba2c8e6d0813d2bbf3b567b92646997", "filename": "src/libsyntax/ext/tt/macro_parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff4fc1bc93f54839e6dfa56bc2e87b686a74094/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff4fc1bc93f54839e6dfa56bc2e87b686a74094/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs?ref=4ff4fc1bc93f54839e6dfa56bc2e87b686a74094", "patch": "@@ -309,7 +309,7 @@ fn create_matches(len: usize) -> Box<[Rc<NamedMatchVec>]> {\n         vec![]\n     } else {\n         let empty_matches = Rc::new(SmallVec::new());\n-        vec![empty_matches.clone(); len]\n+        vec![empty_matches; len]\n     }.into_boxed_slice()\n }\n "}]}