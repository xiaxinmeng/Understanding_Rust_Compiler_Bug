{"sha": "6eef7cc01aa1f24c3a2462123cb4590a641bcd4c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlZWY3Y2MwMWFhMWYyNGMzYTI0NjIxMjNjYjQ1OTBhNjQxYmNkNGM=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-21T09:19:48Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-21T09:19:48Z"}, "message": "Make mir::Rvalue handling exhaustive (some still unimplemented).", "tree": {"sha": "773ecadabdd1f646c8320db12e6c88e9e80a0484", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/773ecadabdd1f646c8320db12e6c88e9e80a0484"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6eef7cc01aa1f24c3a2462123cb4590a641bcd4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6eef7cc01aa1f24c3a2462123cb4590a641bcd4c", "html_url": "https://github.com/rust-lang/rust/commit/6eef7cc01aa1f24c3a2462123cb4590a641bcd4c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6eef7cc01aa1f24c3a2462123cb4590a641bcd4c/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "936537ea84934469a82ce768510966fd95f7977b", "url": "https://api.github.com/repos/rust-lang/rust/commits/936537ea84934469a82ce768510966fd95f7977b", "html_url": "https://github.com/rust-lang/rust/commit/936537ea84934469a82ce768510966fd95f7977b"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "8584b1af3cfbbaa2f8e409a4729a35007a1fbadd", "filename": "src/interpreter.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6eef7cc01aa1f24c3a2462123cb4590a641bcd4c/src%2Finterpreter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6eef7cc01aa1f24c3a2462123cb4590a641bcd4c/src%2Finterpreter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter.rs?ref=6eef7cc01aa1f24c3a2462123cb4590a641bcd4c", "patch": "@@ -540,6 +540,8 @@ impl<'a, 'tcx: 'a, 'arena> Interpreter<'a, 'tcx, 'arena> {\n                 }\n             }\n \n+            Repeat(_, _) => unimplemented!(),\n+\n             Len(ref lvalue) => {\n                 let src = try!(self.eval_lvalue(lvalue));\n                 let ty = self.lvalue_ty(lvalue);\n@@ -604,7 +606,8 @@ impl<'a, 'tcx: 'a, 'arena> Interpreter<'a, 'tcx, 'arena> {\n                 }\n             }\n \n-            ref r => panic!(\"can't handle rvalue: {:?}\", r),\n+            Slice { .. } => unimplemented!(),\n+            InlineAsm(_) => unimplemented!(),\n         }\n \n         Ok(())"}]}