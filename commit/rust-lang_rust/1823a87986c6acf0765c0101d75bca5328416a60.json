{"sha": "1823a87986c6acf0765c0101d75bca5328416a60", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4MjNhODc5ODZjNmFjZjA3NjVjMDEwMWQ3NWJjYTUzMjg0MTZhNjA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-11-23T04:47:25Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-11-23T04:47:25Z"}, "message": "Auto merge of #76226 - CDirkx:const-ipaddr, r=dtolnay\n\nStabilize `IpAddr::is_ipv4` and `is_ipv6` as const\n\nInsta-stabilize the methods `is_ipv4` and `is_ipv6` of `std::net::IpAddr` as const, in the same way as [PR#76198](https://github.com/rust-lang/rust/pull/76198).\n\nPossible because of the recent stabilization of const control flow.\n\nPart of #76225 and #76205.", "tree": {"sha": "b44fb72ecd0d71180f089f3a8637be72f0f98e0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b44fb72ecd0d71180f089f3a8637be72f0f98e0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1823a87986c6acf0765c0101d75bca5328416a60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1823a87986c6acf0765c0101d75bca5328416a60", "html_url": "https://github.com/rust-lang/rust/commit/1823a87986c6acf0765c0101d75bca5328416a60", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1823a87986c6acf0765c0101d75bca5328416a60/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f32459c7ba767e7f26e3c4c4bd6be326d83bcb78", "url": "https://api.github.com/repos/rust-lang/rust/commits/f32459c7ba767e7f26e3c4c4bd6be326d83bcb78", "html_url": "https://github.com/rust-lang/rust/commit/f32459c7ba767e7f26e3c4c4bd6be326d83bcb78"}, {"sha": "4613bc96a4dd8b492623aac79d91314041d17af0", "url": "https://api.github.com/repos/rust-lang/rust/commits/4613bc96a4dd8b492623aac79d91314041d17af0", "html_url": "https://github.com/rust-lang/rust/commit/4613bc96a4dd8b492623aac79d91314041d17af0"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "87bbd33bc0145a3c4846f488ec1a339058c5ad7a", "filename": "library/std/src/net/ip.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1823a87986c6acf0765c0101d75bca5328416a60/library%2Fstd%2Fsrc%2Fnet%2Fip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1823a87986c6acf0765c0101d75bca5328416a60/library%2Fstd%2Fsrc%2Fnet%2Fip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fnet%2Fip.rs?ref=1823a87986c6acf0765c0101d75bca5328416a60", "patch": "@@ -263,8 +263,9 @@ impl IpAddr {\n     /// assert_eq!(IpAddr::V4(Ipv4Addr::new(203, 0, 113, 6)).is_ipv4(), true);\n     /// assert_eq!(IpAddr::V6(Ipv6Addr::new(0x2001, 0xdb8, 0, 0, 0, 0, 0, 0)).is_ipv4(), false);\n     /// ```\n+    #[rustc_const_stable(feature = \"const_ip\", since = \"1.50.0\")]\n     #[stable(feature = \"ipaddr_checker\", since = \"1.16.0\")]\n-    pub fn is_ipv4(&self) -> bool {\n+    pub const fn is_ipv4(&self) -> bool {\n         matches!(self, IpAddr::V4(_))\n     }\n \n@@ -281,8 +282,9 @@ impl IpAddr {\n     /// assert_eq!(IpAddr::V4(Ipv4Addr::new(203, 0, 113, 6)).is_ipv6(), false);\n     /// assert_eq!(IpAddr::V6(Ipv6Addr::new(0x2001, 0xdb8, 0, 0, 0, 0, 0, 0)).is_ipv6(), true);\n     /// ```\n+    #[rustc_const_stable(feature = \"const_ip\", since = \"1.50.0\")]\n     #[stable(feature = \"ipaddr_checker\", since = \"1.16.0\")]\n-    pub fn is_ipv6(&self) -> bool {\n+    pub const fn is_ipv6(&self) -> bool {\n         matches!(self, IpAddr::V6(_))\n     }\n }"}, {"sha": "6730946577d515e6fc8522e66731c57548560d46", "filename": "src/test/ui/consts/std/net/ip.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1823a87986c6acf0765c0101d75bca5328416a60/src%2Ftest%2Fui%2Fconsts%2Fstd%2Fnet%2Fip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1823a87986c6acf0765c0101d75bca5328416a60/src%2Ftest%2Fui%2Fconsts%2Fstd%2Fnet%2Fip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fstd%2Fnet%2Fip.rs?ref=1823a87986c6acf0765c0101d75bca5328416a60", "patch": "@@ -0,0 +1,13 @@\n+// run-pass\n+\n+use std::net::{IpAddr, Ipv4Addr};\n+\n+fn main() {\n+    const IP_ADDRESS : IpAddr = IpAddr::V4(Ipv4Addr::LOCALHOST);\n+\n+    const IS_IP_V4 : bool = IP_ADDRESS.is_ipv4();\n+    assert!(IS_IP_V4);\n+\n+    const IS_IP_V6 : bool = IP_ADDRESS.is_ipv6();\n+    assert!(!IS_IP_V6);\n+}"}]}