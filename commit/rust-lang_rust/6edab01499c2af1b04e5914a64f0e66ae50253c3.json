{"sha": "6edab01499c2af1b04e5914a64f0e66ae50253c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlZGFiMDE0OTljMmFmMWIwNGU1OTE0YTY0ZjBlNjZhZTUwMjUzYzM=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-03-31T20:48:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-03-31T20:48:26Z"}, "message": "Rollup merge of #40763 - pirate:patch-2, r=steveklabnik\n\nAdd helpful hint in io docs about how ? is not allowed in main()\n\nThis is my effort to help alleviate the confusion caused by the error message:\n```rust\nerror[E0277]: the trait bound `(): std::ops::Carrier` is not satisfied\n  --> hello_world.rs:72:5\n   |\n72 |     io::stdin().read_line(&mut d_input)?;\n   |     ------------------------------------\n   |     |\n   |     the trait `std::ops::Carrier` is not implemented for `()`\n   |     in this macro invocation\n   |\n   = note: required by `std::ops::Carrier::from_error`\n\nerror: aborting due to previous error\n```\nThis has been discussed at length in https://github.com/rust-lang/rust/issues/35946, but I figured it would be helpful to mention in the docs.\nReading user input is one of the first things beginners will look up in the docs, so my thinking was they'd see this warning here and not have to deal with the [tricky error message](https://blog.rust-lang.org/2017/03/02/lang-ergonomics.html).\n\nIf you think this isn't the right place to put this in the docs, that's understandable, I'm open to suggestions for putting it elsewhere or removing it entirely.", "tree": {"sha": "6e1d0900b6179462d02c1a456403481ea1bd851f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e1d0900b6179462d02c1a456403481ea1bd851f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6edab01499c2af1b04e5914a64f0e66ae50253c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6edab01499c2af1b04e5914a64f0e66ae50253c3", "html_url": "https://github.com/rust-lang/rust/commit/6edab01499c2af1b04e5914a64f0e66ae50253c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6edab01499c2af1b04e5914a64f0e66ae50253c3/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6e25127050da09cde3d48d0dbda48ddad99c24d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6e25127050da09cde3d48d0dbda48ddad99c24d", "html_url": "https://github.com/rust-lang/rust/commit/c6e25127050da09cde3d48d0dbda48ddad99c24d"}, {"sha": "cd2ec7eded8d65b88b4c2fdb26efe1b3c505bd6f", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd2ec7eded8d65b88b4c2fdb26efe1b3c505bd6f", "html_url": "https://github.com/rust-lang/rust/commit/cd2ec7eded8d65b88b4c2fdb26efe1b3c505bd6f"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "8ebc5c0a8fe2d9443f14613f19b9648502e3afc8", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6edab01499c2af1b04e5914a64f0e66ae50253c3/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6edab01499c2af1b04e5914a64f0e66ae50253c3/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=6edab01499c2af1b04e5914a64f0e66ae50253c3", "patch": "@@ -145,6 +145,18 @@\n //! # }\n //! ```\n //!\n+//! Note that you cannot use the `?` operator in functions that do not return\n+//! a `Result<T, E>` (e.g. `main`). Instead, you can call `.unwrap()` or `match`\n+//! on the return value to catch any possible errors:\n+//!\n+//! ```\n+//! use std::io;\n+//!\n+//! let mut input = String::new();\n+//!\n+//! io::stdin().read_line(&mut input).unwrap();\n+//! ```\n+//!\n //! And a very common source of output is standard output:\n //!\n //! ```"}]}