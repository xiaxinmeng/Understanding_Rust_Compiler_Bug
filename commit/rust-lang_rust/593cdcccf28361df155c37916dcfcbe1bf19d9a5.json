{"sha": "593cdcccf28361df155c37916dcfcbe1bf19d9a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5M2NkY2NjZjI4MzYxZGYxNTVjMzc5MTZkY2ZjYmUxYmYxOWQ5YTU=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-10-16T19:22:23Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-10-16T19:22:23Z"}, "message": "Lint only on single element overlap", "tree": {"sha": "5ebe8d47bc6ee696b4f301081d79a08fffa35845", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ebe8d47bc6ee696b4f301081d79a08fffa35845"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/593cdcccf28361df155c37916dcfcbe1bf19d9a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/593cdcccf28361df155c37916dcfcbe1bf19d9a5", "html_url": "https://github.com/rust-lang/rust/commit/593cdcccf28361df155c37916dcfcbe1bf19d9a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/593cdcccf28361df155c37916dcfcbe1bf19d9a5/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73d6efc43e0629b2028e7d031306088f44f84782", "url": "https://api.github.com/repos/rust-lang/rust/commits/73d6efc43e0629b2028e7d031306088f44f84782", "html_url": "https://github.com/rust-lang/rust/commit/73d6efc43e0629b2028e7d031306088f44f84782"}], "stats": {"total": 79, "additions": 20, "deletions": 59}, "files": [{"sha": "1d83b104177e23ead5bbcc9df2439ef66970f0aa", "filename": "src/librustc_mir/hair/pattern/_match.rs", "status": "modified", "additions": 10, "deletions": 25, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/593cdcccf28361df155c37916dcfcbe1bf19d9a5/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/593cdcccf28361df155c37916dcfcbe1bf19d9a5/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs?ref=593cdcccf28361df155c37916dcfcbe1bf19d9a5", "patch": "@@ -1077,35 +1077,20 @@ impl<'tcx> IntRange<'tcx> {\n     }\n \n     fn suspicious_intersection(&self, other: &Self) -> bool {\n-        let (lo, hi) = (*self.range.start(), *self.range.end());\n-        let (other_lo, other_hi) = (*other.range.start(), *other.range.end());\n-\n         // `false` in the following cases:\n-        // 1     ----\n-        // 2  ----------\n-        //\n-        // 1  ----------\n-        // 2     ----\n+        // 1     ----      // 1  ----------   // 1 ----        // 1       ----\n+        // 2  ----------   // 2     ----      // 2       ----  // 2 ----\n         //\n-        // 1 ----\n-        // 2       ----\n+        // The following are currently `false`, but could be `true` in the future (#64007):\n+        // 1 ---------       // 1     ---------\n+        // 2     ----------  // 2 ----------\n         //\n-        // 1       ----\n-        // 2 ----\n-\n         // `true` in the following cases:\n-        // 1 ---------\n-        // 2     ----------\n-        lo < other_lo && hi > other_lo && hi < other_hi ||\n-            // 1     ---------\n-            // 2  ----------\n-            lo > other_lo && lo < other_hi && hi > other_hi ||\n-            // 1  ----\n-            // 2     ----\n-            lo == other_hi && other_lo < lo ||\n-            // 1     ----\n-            // 2 -----\n-            hi == other_lo && lo < other_lo\n+        // 1 -------          // 1       -------\n+        // 2       --------   // 2 -------\n+        let (lo, hi) = (*self.range.start(), *self.range.end());\n+        let (other_lo, other_hi) = (*other.range.start(), *other.range.end());\n+        (lo == other_hi || hi == other_lo)\n     }\n }\n "}, {"sha": "59f749198971b5a1931817cdc9a91e48380d1476", "filename": "src/test/ui/exhaustive_integer_patterns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/593cdcccf28361df155c37916dcfcbe1bf19d9a5/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/593cdcccf28361df155c37916dcfcbe1bf19d9a5/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.rs?ref=593cdcccf28361df155c37916dcfcbe1bf19d9a5", "patch": "@@ -19,7 +19,7 @@ fn main() {\n         0 ..= 32 => {}\n         33 => {}\n         34 .. 128 => {}\n-        100 ..= 200 => {} //~ ERROR multiple patterns covering the same range\n+        100 ..= 200 => {}\n         200 => {} //~ ERROR unreachable pattern\n         201 ..= 255 => {}\n     }"}, {"sha": "7a3a36a820c65cfc1540aae208b095030f99d11c", "filename": "src/test/ui/exhaustive_integer_patterns.stderr", "status": "modified", "additions": 7, "deletions": 15, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/593cdcccf28361df155c37916dcfcbe1bf19d9a5/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/593cdcccf28361df155c37916dcfcbe1bf19d9a5/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexhaustive_integer_patterns.stderr?ref=593cdcccf28361df155c37916dcfcbe1bf19d9a5", "patch": "@@ -1,17 +1,3 @@\n-error: multiple patterns covering the same range\n-  --> $DIR/exhaustive_integer_patterns.rs:22:9\n-   |\n-LL |         34 .. 128 => {}\n-   |         --------- this range overlaps on `100u8..=127u8`\n-LL |         100 ..= 200 => {}\n-   |         ^^^^^^^^^^^ overlapping patterns\n-   |\n-note: lint level defined here\n-  --> $DIR/exhaustive_integer_patterns.rs:4:9\n-   |\n-LL | #![deny(overlapping_patterns)]\n-   |         ^^^^^^^^^^^^^^^^^^^^\n-\n error: unreachable pattern\n   --> $DIR/exhaustive_integer_patterns.rs:23:9\n    |\n@@ -101,6 +87,12 @@ LL |         0 .. 2 => {}\n    |         ------ this range overlaps on `1u8`\n LL |         1 ..= 2 => {}\n    |         ^^^^^^^ overlapping patterns\n+   |\n+note: lint level defined here\n+  --> $DIR/exhaustive_integer_patterns.rs:4:9\n+   |\n+LL | #![deny(overlapping_patterns)]\n+   |         ^^^^^^^^^^^^^^^^^^^^\n \n error[E0004]: non-exhaustive patterns: `std::u128::MAX` not covered\n   --> $DIR/exhaustive_integer_patterns.rs:146:11\n@@ -126,6 +118,6 @@ LL |     match 0u128 {\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n-error: aborting due to 15 previous errors\n+error: aborting due to 14 previous errors\n \n For more information about this error, try `rustc --explain E0004`."}, {"sha": "9510aae77534158245da2265c6bf2d22fae18340", "filename": "src/test/ui/issues/issue-13867.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/593cdcccf28361df155c37916dcfcbe1bf19d9a5/src%2Ftest%2Fui%2Fissues%2Fissue-13867.rs", "raw_url": "https://github.com/rust-lang/rust/raw/593cdcccf28361df155c37916dcfcbe1bf19d9a5/src%2Ftest%2Fui%2Fissues%2Fissue-13867.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-13867.rs?ref=593cdcccf28361df155c37916dcfcbe1bf19d9a5", "patch": "@@ -1,8 +1,6 @@\n // run-pass\n // Test that codegen works correctly when there are multiple refutable\n // patterns in match expression.\n-#![allow(overlapping_patterns)]\n-\n \n enum Foo {\n     FooUint(usize),"}, {"sha": "54aeb8616d959f4bb02f601e13627cab2e808304", "filename": "src/test/ui/precise_pointer_size_matching.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/593cdcccf28361df155c37916dcfcbe1bf19d9a5/src%2Ftest%2Fui%2Fprecise_pointer_size_matching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/593cdcccf28361df155c37916dcfcbe1bf19d9a5/src%2Ftest%2Fui%2Fprecise_pointer_size_matching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprecise_pointer_size_matching.rs?ref=593cdcccf28361df155c37916dcfcbe1bf19d9a5", "patch": "@@ -28,6 +28,6 @@ fn main() {\n \n     match 0usize { //~ ERROR non-exhaustive patterns\n         1 ..= 8 => {}\n-        5 ..= 20 => {} //~ ERROR multiple patterns covering the same range\n+        5 ..= 20 => {}\n     }\n }"}, {"sha": "2c2c2aa04c233e4296f279dedbabdd768d2b2157", "filename": "src/test/ui/precise_pointer_size_matching.stderr", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/593cdcccf28361df155c37916dcfcbe1bf19d9a5/src%2Ftest%2Fui%2Fprecise_pointer_size_matching.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/593cdcccf28361df155c37916dcfcbe1bf19d9a5/src%2Ftest%2Fui%2Fprecise_pointer_size_matching.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprecise_pointer_size_matching.stderr?ref=593cdcccf28361df155c37916dcfcbe1bf19d9a5", "patch": "@@ -6,20 +6,6 @@ LL |     match 0isize {\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n-error: multiple patterns covering the same range\n-  --> $DIR/precise_pointer_size_matching.rs:31:9\n-   |\n-LL |         1 ..= 8 => {}\n-   |         ------- this range overlaps on `5usize..=8usize`\n-LL |         5 ..= 20 => {}\n-   |         ^^^^^^^^ overlapping patterns\n-   |\n-note: lint level defined here\n-  --> $DIR/precise_pointer_size_matching.rs:11:31\n-   |\n-LL | #![deny(unreachable_patterns, overlapping_patterns)]\n-   |                               ^^^^^^^^^^^^^^^^^^^^\n-\n error[E0004]: non-exhaustive patterns: `0usize` and `21usize..=std::usize::MAX` not covered\n   --> $DIR/precise_pointer_size_matching.rs:29:11\n    |\n@@ -28,6 +14,6 @@ LL |     match 0usize {\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0004`."}]}