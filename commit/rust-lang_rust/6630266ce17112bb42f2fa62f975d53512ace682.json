{"sha": "6630266ce17112bb42f2fa62f975d53512ace682", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2MzAyNjZjZTE3MTEyYmI0MmYyZmE2MmY5NzVkNTM1MTJhY2U2ODI=", "commit": {"author": {"name": "unexge", "email": "unexge@gmail.com", "date": "2021-04-21T13:20:08Z"}, "committer": {"name": "unexge", "email": "unexge@gmail.com", "date": "2021-04-21T13:20:08Z"}, "message": "Add multi file test for \"Convert to named struct\" assist", "tree": {"sha": "585df87694126e402bd185f65e5601cf43bfffb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/585df87694126e402bd185f65e5601cf43bfffb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6630266ce17112bb42f2fa62f975d53512ace682", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6630266ce17112bb42f2fa62f975d53512ace682", "html_url": "https://github.com/rust-lang/rust/commit/6630266ce17112bb42f2fa62f975d53512ace682", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6630266ce17112bb42f2fa62f975d53512ace682/comments", "author": {"login": "unexge", "id": 16212576, "node_id": "MDQ6VXNlcjE2MjEyNTc2", "avatar_url": "https://avatars.githubusercontent.com/u/16212576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unexge", "html_url": "https://github.com/unexge", "followers_url": "https://api.github.com/users/unexge/followers", "following_url": "https://api.github.com/users/unexge/following{/other_user}", "gists_url": "https://api.github.com/users/unexge/gists{/gist_id}", "starred_url": "https://api.github.com/users/unexge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unexge/subscriptions", "organizations_url": "https://api.github.com/users/unexge/orgs", "repos_url": "https://api.github.com/users/unexge/repos", "events_url": "https://api.github.com/users/unexge/events{/privacy}", "received_events_url": "https://api.github.com/users/unexge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "unexge", "id": 16212576, "node_id": "MDQ6VXNlcjE2MjEyNTc2", "avatar_url": "https://avatars.githubusercontent.com/u/16212576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unexge", "html_url": "https://github.com/unexge", "followers_url": "https://api.github.com/users/unexge/followers", "following_url": "https://api.github.com/users/unexge/following{/other_user}", "gists_url": "https://api.github.com/users/unexge/gists{/gist_id}", "starred_url": "https://api.github.com/users/unexge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unexge/subscriptions", "organizations_url": "https://api.github.com/users/unexge/orgs", "repos_url": "https://api.github.com/users/unexge/repos", "events_url": "https://api.github.com/users/unexge/events{/privacy}", "received_events_url": "https://api.github.com/users/unexge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96d694062bfbb94592dfdef7517c500aedcb9185", "url": "https://api.github.com/repos/rust-lang/rust/commits/96d694062bfbb94592dfdef7517c500aedcb9185", "html_url": "https://github.com/rust-lang/rust/commit/96d694062bfbb94592dfdef7517c500aedcb9185"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "0df96be0313247b35784e0f3366453b01f0729fa", "filename": "crates/ide_assists/src/handlers/convert_tuple_struct_to_named_struct.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/6630266ce17112bb42f2fa62f975d53512ace682/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_tuple_struct_to_named_struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6630266ce17112bb42f2fa62f975d53512ace682/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_tuple_struct_to_named_struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_tuple_struct_to_named_struct.rs?ref=6630266ce17112bb42f2fa62f975d53512ace682", "patch": "@@ -384,6 +384,39 @@ impl A {\n         );\n     }\n \n+    #[test]\n+    fn convert_struct_with_multi_file_references() {\n+        check_assist(\n+            convert_tuple_struct_to_named_struct,\n+            r#\"\n+//- /main.rs\n+struct Inner;\n+struct A$0(Inner);\n+\n+mod foo;\n+\n+//- /foo.rs\n+use crate::{A, Inner};\n+fn f() {\n+    let a = A(Inner);\n+}\n+\"#,\n+            r#\"\n+//- /main.rs\n+struct Inner;\n+struct A { field1: Inner }\n+\n+mod foo;\n+\n+//- /foo.rs\n+use crate::{A, Inner};\n+fn f() {\n+    let a = A { field1: Inner };\n+}\n+\"#,\n+        );\n+    }\n+\n     #[test]\n     fn convert_struct_with_where_clause() {\n         check_assist("}]}