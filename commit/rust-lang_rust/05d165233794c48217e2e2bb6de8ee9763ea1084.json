{"sha": "05d165233794c48217e2e2bb6de8ee9763ea1084", "node_id": "C_kwDOAAsO6NoAKDA1ZDE2NTIzMzc5NGM0ODIxN2UyZTJiYjZkZThlZTk3NjNlYTEwODQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-02-13T15:12:21Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-02-13T15:12:21Z"}, "message": "Auto merge of #93685 - Mark-Simulacrum:drop-time, r=Mark-Simulacrum\n\nDrop time dependency from bootstrap\n\nThis was only used for the inclusion of 'current' dates into our manpages, but\nit is not clear that this is practically necessary. The manpage is essentially\nnever updated, and so we can likely afford to keep a manual date in these files.\nIt also seems possible to just omit it, but that may cause other tools trouble,\nso avoid doing that for now.\n\nThis is largely done to reduce bootstrap complexity; the time crate is not particularly\nsmall and in #92480 would have started pulling in num-threads, which does runtime\nthread count detection. I would prefer to avoid that, so filing this to just drop the nearly\nunused dependency entirely.\n\nr? `@pietroalbini`", "tree": {"sha": "cb0afa3ae67e0b84aa76fd489aef11f4ed221d1e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb0afa3ae67e0b84aa76fd489aef11f4ed221d1e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05d165233794c48217e2e2bb6de8ee9763ea1084", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05d165233794c48217e2e2bb6de8ee9763ea1084", "html_url": "https://github.com/rust-lang/rust/commit/05d165233794c48217e2e2bb6de8ee9763ea1084", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05d165233794c48217e2e2bb6de8ee9763ea1084/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f4681ad7a132755452c32a987ad0f0d075aa6aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f4681ad7a132755452c32a987ad0f0d075aa6aa", "html_url": "https://github.com/rust-lang/rust/commit/1f4681ad7a132755452c32a987ad0f0d075aa6aa"}, {"sha": "2a8c7509d4d4f30d9f468f33b26aad1fc4295156", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a8c7509d4d4f30d9f468f33b26aad1fc4295156", "html_url": "https://github.com/rust-lang/rust/commit/2a8c7509d4d4f30d9f468f33b26aad1fc4295156"}], "stats": {"total": 62, "additions": 16, "deletions": 46}, "files": [{"sha": "47cc635b952e955a4d56464e72466fc68d78c02d", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/05d165233794c48217e2e2bb6de8ee9763ea1084/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/05d165233794c48217e2e2bb6de8ee9763ea1084/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=05d165233794c48217e2e2bb6de8ee9763ea1084", "patch": "@@ -227,7 +227,6 @@ dependencies = [\n  \"pretty_assertions\",\n  \"serde\",\n  \"serde_json\",\n- \"time\",\n  \"toml\",\n  \"winapi\",\n ]"}, {"sha": "592a137e379dea7a77e041124fd319d0d7d73cba", "filename": "src/bootstrap/Cargo.toml", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/05d165233794c48217e2e2bb6de8ee9763ea1084/src%2Fbootstrap%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/05d165233794c48217e2e2bb6de8ee9763ea1084/src%2Fbootstrap%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2FCargo.toml?ref=05d165233794c48217e2e2bb6de8ee9763ea1084", "patch": "@@ -44,14 +44,22 @@ libc = \"0.2\"\n serde = { version = \"1.0.8\", features = [\"derive\"] }\n serde_json = \"1.0.2\"\n toml = \"0.5\"\n-time = \"0.1\"\n ignore = \"0.4.10\"\n opener = \"0.5\"\n once_cell = \"1.7.2\"\n \n [target.'cfg(windows)'.dependencies.winapi]\n version = \"0.3\"\n-features = [\"fileapi\", \"ioapiset\", \"jobapi2\", \"handleapi\", \"winioctl\", \"psapi\", \"impl-default\"]\n+features = [\n+    \"fileapi\",\n+    \"ioapiset\",\n+    \"jobapi2\",\n+    \"handleapi\",\n+    \"winioctl\",\n+    \"psapi\",\n+    \"impl-default\",\n+    \"timezoneapi\",\n+]\n \n [dev-dependencies]\n pretty_assertions = \"0.7\""}, {"sha": "472ee3fb01474da2ff69965455cae41e7d187220", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 3, "deletions": 22, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/05d165233794c48217e2e2bb6de8ee9763ea1084/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05d165233794c48217e2e2bb6de8ee9763ea1084/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=05d165233794c48217e2e2bb6de8ee9763ea1084", "patch": "@@ -24,7 +24,6 @@ use crate::tarball::{GeneratedTarball, OverlayKind, Tarball};\n use crate::tool::{self, Tool};\n use crate::util::{exe, is_dylib, timeit};\n use crate::{Compiler, DependencyType, Mode, LLVM_TOOLS};\n-use time::{self, Timespec};\n \n pub fn pkgname(builder: &Builder<'_>, component: &str) -> String {\n     format!(\"{}-{}\", component, builder.rust_package_vers())\n@@ -422,33 +421,15 @@ impl Step for Rustc {\n             let man_src = builder.src.join(\"src/doc/man\");\n             let man_dst = image.join(\"share/man/man1\");\n \n-            // Reproducible builds: If SOURCE_DATE_EPOCH is set, use that as the time.\n-            let time = env::var(\"SOURCE_DATE_EPOCH\")\n-                .map(|timestamp| {\n-                    let epoch = timestamp\n-                        .parse()\n-                        .map_err(|err| format!(\"could not parse SOURCE_DATE_EPOCH: {}\", err))\n-                        .unwrap();\n-\n-                    time::at(Timespec::new(epoch, 0))\n-                })\n-                .unwrap_or_else(|_| time::now());\n-\n-            let month_year = t!(time::strftime(\"%B %Y\", &time));\n             // don't use our `bootstrap::util::{copy, cp_r}`, because those try\n             // to hardlink, and we don't want to edit the source templates\n             for file_entry in builder.read_dir(&man_src) {\n                 let page_src = file_entry.path();\n                 let page_dst = man_dst.join(file_entry.file_name());\n+                let src_text = t!(std::fs::read_to_string(&page_src));\n+                let new_text = src_text.replace(\"<INSERT VERSION HERE>\", &builder.version);\n+                t!(std::fs::write(&page_dst, &new_text));\n                 t!(fs::copy(&page_src, &page_dst));\n-                // template in month/year and version number\n-                builder.replace_in_file(\n-                    &page_dst,\n-                    &[\n-                        (\"<INSERT DATE HERE>\", &month_year),\n-                        (\"<INSERT VERSION HERE>\", &builder.version),\n-                    ],\n-                );\n             }\n \n             // Debugger scripts"}, {"sha": "6f010cc9f8c18cd74334424c04a42ac5a7869500", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/05d165233794c48217e2e2bb6de8ee9763ea1084/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05d165233794c48217e2e2bb6de8ee9763ea1084/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=05d165233794c48217e2e2bb6de8ee9763ea1084", "patch": "@@ -106,8 +106,7 @@\n use std::cell::{Cell, RefCell};\n use std::collections::{HashMap, HashSet};\n use std::env;\n-use std::fs::{self, File, OpenOptions};\n-use std::io::{Read, Seek, SeekFrom, Write};\n+use std::fs::{self, File};\n use std::path::{Path, PathBuf};\n use std::process::{self, Command};\n use std::str;\n@@ -1335,23 +1334,6 @@ impl Build {\n         }\n     }\n \n-    /// Search-and-replaces within a file. (Not maximally efficiently: allocates a\n-    /// new string for each replacement.)\n-    pub fn replace_in_file(&self, path: &Path, replacements: &[(&str, &str)]) {\n-        if self.config.dry_run {\n-            return;\n-        }\n-        let mut contents = String::new();\n-        let mut file = t!(OpenOptions::new().read(true).write(true).open(path));\n-        t!(file.read_to_string(&mut contents));\n-        for &(target, replacement) in replacements {\n-            contents = contents.replace(target, replacement);\n-        }\n-        t!(file.seek(SeekFrom::Start(0)));\n-        t!(file.set_len(0));\n-        t!(file.write_all(contents.as_bytes()));\n-    }\n-\n     /// Copies the `src` directory recursively to `dst`. Both are assumed to exist\n     /// when this function is called.\n     pub fn cp_r(&self, src: &Path, dst: &Path) {"}, {"sha": "4e7170806d47b0db97261bef8df9112375f604e5", "filename": "src/doc/man/rustc.1", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/05d165233794c48217e2e2bb6de8ee9763ea1084/src%2Fdoc%2Fman%2Frustc.1", "raw_url": "https://github.com/rust-lang/rust/raw/05d165233794c48217e2e2bb6de8ee9763ea1084/src%2Fdoc%2Fman%2Frustc.1", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fman%2Frustc.1?ref=05d165233794c48217e2e2bb6de8ee9763ea1084", "patch": "@@ -1,4 +1,4 @@\n-.TH RUSTC \"1\" \"<INSERT DATE HERE>\" \"rustc <INSERT VERSION HERE>\" \"User Commands\"\n+.TH RUSTC \"1\" \"April 2019\" \"rustc <INSERT VERSION HERE>\" \"User Commands\"\n .SH NAME\n rustc \\- The Rust compiler\n .SH SYNOPSIS"}, {"sha": "e6185347972827c90427f88d8460a4e0e20416b8", "filename": "src/doc/man/rustdoc.1", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/05d165233794c48217e2e2bb6de8ee9763ea1084/src%2Fdoc%2Fman%2Frustdoc.1", "raw_url": "https://github.com/rust-lang/rust/raw/05d165233794c48217e2e2bb6de8ee9763ea1084/src%2Fdoc%2Fman%2Frustdoc.1", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fman%2Frustdoc.1?ref=05d165233794c48217e2e2bb6de8ee9763ea1084", "patch": "@@ -1,4 +1,4 @@\n-.TH RUSTDOC \"1\" \"<INSERT DATE HERE>\" \"rustdoc <INSERT VERSION HERE>\" \"User Commands\"\n+.TH RUSTDOC \"1\" \"July 2018\" \"rustdoc <INSERT VERSION HERE>\" \"User Commands\"\n .SH NAME\n rustdoc \\- generate documentation from Rust source code\n .SH SYNOPSIS"}]}