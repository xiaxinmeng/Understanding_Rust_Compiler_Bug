{"sha": "7061b1c0933efc2321d9e30413a746610c8e5e8c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwNjFiMWMwOTMzZWZjMjMyMWQ5ZTMwNDEzYTc0NjYxMGM4ZTVlOGM=", "commit": {"author": {"name": "Ryan1729", "email": "Ryan1729@gmail.com", "date": "2020-08-03T05:17:11Z"}, "committer": {"name": "Ryan1729", "email": "Ryan1729@gmail.com", "date": "2020-08-06T10:24:24Z"}, "message": "write currently failing test for transmutes_expressible_as_ptr_casts\n\nThere are 5 errors, when there should be 7.", "tree": {"sha": "ffe24185b3a1a757073ae877aa597feba5aa8159", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ffe24185b3a1a757073ae877aa597feba5aa8159"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7061b1c0933efc2321d9e30413a746610c8e5e8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7061b1c0933efc2321d9e30413a746610c8e5e8c", "html_url": "https://github.com/rust-lang/rust/commit/7061b1c0933efc2321d9e30413a746610c8e5e8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7061b1c0933efc2321d9e30413a746610c8e5e8c/comments", "author": {"login": "Ryan1729", "id": 2133026, "node_id": "MDQ6VXNlcjIxMzMwMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2133026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ryan1729", "html_url": "https://github.com/Ryan1729", "followers_url": "https://api.github.com/users/Ryan1729/followers", "following_url": "https://api.github.com/users/Ryan1729/following{/other_user}", "gists_url": "https://api.github.com/users/Ryan1729/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ryan1729/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ryan1729/subscriptions", "organizations_url": "https://api.github.com/users/Ryan1729/orgs", "repos_url": "https://api.github.com/users/Ryan1729/repos", "events_url": "https://api.github.com/users/Ryan1729/events{/privacy}", "received_events_url": "https://api.github.com/users/Ryan1729/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ryan1729", "id": 2133026, "node_id": "MDQ6VXNlcjIxMzMwMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2133026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ryan1729", "html_url": "https://github.com/Ryan1729", "followers_url": "https://api.github.com/users/Ryan1729/followers", "following_url": "https://api.github.com/users/Ryan1729/following{/other_user}", "gists_url": "https://api.github.com/users/Ryan1729/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ryan1729/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ryan1729/subscriptions", "organizations_url": "https://api.github.com/users/Ryan1729/orgs", "repos_url": "https://api.github.com/users/Ryan1729/repos", "events_url": "https://api.github.com/users/Ryan1729/events{/privacy}", "received_events_url": "https://api.github.com/users/Ryan1729/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4e6e7047817ac12a0330060d2e176a40809c91b", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4e6e7047817ac12a0330060d2e176a40809c91b", "html_url": "https://github.com/rust-lang/rust/commit/b4e6e7047817ac12a0330060d2e176a40809c91b"}], "stats": {"total": 55, "additions": 54, "deletions": 1}, "files": [{"sha": "e6b9dddd342165f9903626dd8e8db140e37b87b1", "filename": "src/tools/clippy/tests/ui/transmutes_expressible_as_ptr_casts.rs", "status": "modified", "additions": 53, "deletions": 1, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/7061b1c0933efc2321d9e30413a746610c8e5e8c/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftransmutes_expressible_as_ptr_casts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7061b1c0933efc2321d9e30413a746610c8e5e8c/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftransmutes_expressible_as_ptr_casts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftransmutes_expressible_as_ptr_casts.rs?ref=7061b1c0933efc2321d9e30413a746610c8e5e8c", "patch": "@@ -1,5 +1,57 @@\n #![warn(clippy::transmutes_expressible_as_ptr_casts)]\n \n+// rustc_typeck::check::cast contains documentation about when a cast `e as U` is \n+// valid, which we quote from below.\n+use std::mem::transmute;\n+\n fn main() {\n-    // test code goes here\n+    // e is an integer and U is *U_0, while U_0: Sized; addr-ptr-cast\n+    let ptr_i32_transmute = unsafe {\n+        transmute::<isize, *const i32>(-1)\n+    };\n+    let ptr_i32 = -1isize as *const i32;\n+\n+    // e has type *T, U is *U_0, and either U_0: Sized ...\n+    let ptr_i8_transmute = unsafe {\n+        transmute::<*const i32, *const i8>(ptr_i32)\n+    };\n+    let ptr_i8 = ptr_i32 as *const i8;\n+\n+    let slice_ptr = &[0,1,2,3] as *const [i32];\n+\n+    // ... or pointer_kind(T) = pointer_kind(U_0); ptr-ptr-cast\n+    let ptr_to_unsized_transmute = unsafe {\n+        transmute::<*const [i32], *const [u16]>(slice_ptr)\n+    };\n+    let ptr_to_unsized = slice_ptr as *const [u16];\n+    // TODO: We could try testing vtable casts here too, but maybe\n+    // we should wait until std::raw::TraitObject is stabilized?\n+\n+    // e has type *T and U is a numeric type, while T: Sized; ptr-addr-cast\n+    let usize_from_int_ptr_transmute = unsafe {\n+        transmute::<*const i32, usize>(ptr_i32)\n+    };\n+    let usize_from_int_ptr = ptr_i32 as usize;\n+\n+    let array_ref: &[i32; 4] = &[1,2,3,4];\n+\n+    // e has type &[T; n] and U is *const T; array-ptr-cast\n+    let array_ptr_transmute = unsafe {\n+        transmute::<&[i32; 4], *const [i32; 4]>(array_ref)\n+    };\n+    let array_ptr = array_ref as *const [i32; 4];\n+\n+    fn foo(_: usize) -> u8 { 42 }\n+\n+    // e is a function pointer type and U has type *T, while T: Sized; fptr-ptr-cast\n+    let usize_ptr_transmute = unsafe {\n+        transmute::<fn(usize) -> u8, *const usize>(foo)\n+    };\n+    let usize_ptr_transmute = foo as *const usize;\n+\n+    // e is a function pointer type and U is an integer; fptr-addr-cast\n+    let usize_from_fn_ptr_transmute = unsafe {\n+        transmute::<fn(usize) -> u8, usize>(foo)\n+    };\n+    let usize_from_fn_ptr = foo as *const usize;\n }"}, {"sha": "6bae1fa1b4fc6458c1b4454c5910c089e763f0be", "filename": "src/tools/clippy/tests/ui/transmutes_expressible_as_ptr_casts.stderr", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7061b1c0933efc2321d9e30413a746610c8e5e8c/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftransmutes_expressible_as_ptr_casts.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7061b1c0933efc2321d9e30413a746610c8e5e8c/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftransmutes_expressible_as_ptr_casts.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftransmutes_expressible_as_ptr_casts.stderr?ref=7061b1c0933efc2321d9e30413a746610c8e5e8c", "patch": "@@ -0,0 +1 @@\n+Should have 7 errors, one for each transmute"}]}