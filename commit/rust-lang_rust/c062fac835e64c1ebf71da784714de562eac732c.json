{"sha": "c062fac835e64c1ebf71da784714de562eac732c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwNjJmYWM4MzVlNjRjMWViZjcxZGE3ODQ3MTRkZTU2MmVhYzczMmM=", "commit": {"author": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2014-12-29T12:52:43Z"}, "committer": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2015-01-04T22:16:14Z"}, "message": "Put negative trait implemtations behind a feature gate", "tree": {"sha": "3075cf76bce0387becc1d852354303b45fbf72ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3075cf76bce0387becc1d852354303b45fbf72ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c062fac835e64c1ebf71da784714de562eac732c", "comment_count": 7, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c062fac835e64c1ebf71da784714de562eac732c", "html_url": "https://github.com/rust-lang/rust/commit/c062fac835e64c1ebf71da784714de562eac732c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c062fac835e64c1ebf71da784714de562eac732c/comments", "author": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b883ab2681e34ef94575f45c6c0e6c2bca23ab7", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b883ab2681e34ef94575f45c6c0e6c2bca23ab7", "html_url": "https://github.com/rust-lang/rust/commit/8b883ab2681e34ef94575f45c6c0e6c2bca23ab7"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "f8ac34cfe29202a90594f1d00dfe4b057cf45f97", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c062fac835e64c1ebf71da784714de562eac732c/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c062fac835e64c1ebf71da784714de562eac732c/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=c062fac835e64c1ebf71da784714de562eac732c", "patch": "@@ -84,6 +84,9 @@ static KNOWN_FEATURES: &'static [(&'static str, Status)] = &[\n     // A way to temporarily opt out of the new orphan rules. This will *never* be accepted.\n     (\"old_orphan_check\", Deprecated),\n \n+    // OIBIT specific features\n+    (\"optin_builtin_traits\", Active),\n+\n     // These are used to test this portion of the compiler, they don't actually\n     // mean anything\n     (\"test_accepted_feature\", Accepted),\n@@ -291,7 +294,17 @@ impl<'a, 'v> Visitor<'v> for PostExpansionVisitor<'a> {\n                 }\n             }\n \n-            ast::ItemImpl(_, _, _, _, _, ref items) => {\n+            ast::ItemImpl(_, polarity, _, _, _, ref items) => {\n+                match polarity {\n+                    ast::ImplPolarity::Negative => {\n+                        self.gate_feature(\"optin_builtin_traits\",\n+                                          i.span,\n+                                          \"negative trait bounds are not yet fully implemented; \\\n+                                          use marker types for now\");\n+                    },\n+                    _ => {}\n+                }\n+\n                 if attr::contains_name(i.attrs[],\n                                        \"unsafe_destructor\") {\n                     self.gate_feature(\"unsafe_destructor\","}, {"sha": "e6dc712137f4218f96a3491a189f8cd56cf239d1", "filename": "src/test/compile-fail/syntax-trait-polarity-feature-gate.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c062fac835e64c1ebf71da784714de562eac732c/src%2Ftest%2Fcompile-fail%2Fsyntax-trait-polarity-feature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c062fac835e64c1ebf71da784714de562eac732c/src%2Ftest%2Fcompile-fail%2Fsyntax-trait-polarity-feature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsyntax-trait-polarity-feature-gate.rs?ref=c062fac835e64c1ebf71da784714de562eac732c", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::kinds::Send;\n+\n+struct TestType;\n+\n+trait TestTrait {}\n+\n+unsafe impl !Send for TestType {}\n+//~^ ERROR negative trait bounds\n+\n+fn main() {}"}, {"sha": "3c84bc26298fdc23b3e948551c761268ff824c6c", "filename": "src/test/compile-fail/syntax-trait-polarity.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c062fac835e64c1ebf71da784714de562eac732c/src%2Ftest%2Fcompile-fail%2Fsyntax-trait-polarity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c062fac835e64c1ebf71da784714de562eac732c/src%2Ftest%2Fcompile-fail%2Fsyntax-trait-polarity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsyntax-trait-polarity.rs?ref=c062fac835e64c1ebf71da784714de562eac732c", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(optin_builtin_traits)]\n+\n use std::kinds::Send;\n \n struct TestType;"}, {"sha": "47c36ac7a40de711c103ced414ed555e6ebe6588", "filename": "src/test/pretty/trait-polarity.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c062fac835e64c1ebf71da784714de562eac732c/src%2Ftest%2Fpretty%2Ftrait-polarity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c062fac835e64c1ebf71da784714de562eac732c/src%2Ftest%2Fpretty%2Ftrait-polarity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Ftrait-polarity.rs?ref=c062fac835e64c1ebf71da784714de562eac732c", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(optin_builtin_traits)]\n+\n // pp-exact\n \n trait UnsafeTrait {"}, {"sha": "021cfedf06f96c337e73ee815d4e4474ee495e06", "filename": "src/test/run-pass/syntax-trait-polarity.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c062fac835e64c1ebf71da784714de562eac732c/src%2Ftest%2Frun-pass%2Fsyntax-trait-polarity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c062fac835e64c1ebf71da784714de562eac732c/src%2Ftest%2Frun-pass%2Fsyntax-trait-polarity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsyntax-trait-polarity.rs?ref=c062fac835e64c1ebf71da784714de562eac732c", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(optin_builtin_traits)]\n+\n use std::kinds::Send;\n \n struct TestType;"}]}