{"sha": "0ec40c1704a16c6d491dc747573f71fabbe79ed2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlYzQwYzE3MDRhMTZjNmQ0OTFkYzc0NzU3M2Y3MWZhYmJlNzllZDI=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-11-01T05:32:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-11-01T05:32:19Z"}, "message": "Rollup merge of #45660 - Cldfire:suggest-rename-import, r=estebank\n\nSuggest renaming import if names clash\n\nCloses https://github.com/rust-lang/rust/issues/32354.\n\nThe output for the example in the issue looks like this:\n\n```\n~/p/local-rust-dev-testing \u276f\u276f\u276f cargo +local-s1 build\n   Compiling local-rust-dev-testing v0.1.0 (file:///home/cldfire/programming_projects/local-rust-dev-testing)\nerror[E0252]: the name `ConstructorExtension` is defined multiple times\n  --> src/main.rs:49:5\n   |\n48 | use extension1::ConstructorExtension;\n   |     -------------------------------- previous import of the trait `ConstructorExtension` here\n49 | use extension2::ConstructorExtension;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `ConstructorExtension` reimported here\n   |\n   = note: `ConstructorExtension` must be defined only once in the type namespace of this module\nhelp: You can use `as` to change the binding name of the import\n   |\n49 | use extension2::ConstructorExtension as OtherConstructorExtension;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n...\n```\n\nThis is my first PR that touches the compiler in any way, so if there's something else I need to do here (e.g. add a test), please let me know :).", "tree": {"sha": "4a43313d0683a31739bfb5eae32337e4870ee4c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a43313d0683a31739bfb5eae32337e4870ee4c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ec40c1704a16c6d491dc747573f71fabbe79ed2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ec40c1704a16c6d491dc747573f71fabbe79ed2", "html_url": "https://github.com/rust-lang/rust/commit/0ec40c1704a16c6d491dc747573f71fabbe79ed2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ec40c1704a16c6d491dc747573f71fabbe79ed2/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63ad1293cc806e941d00fc356200a6bb43621312", "url": "https://api.github.com/repos/rust-lang/rust/commits/63ad1293cc806e941d00fc356200a6bb43621312", "html_url": "https://github.com/rust-lang/rust/commit/63ad1293cc806e941d00fc356200a6bb43621312"}, {"sha": "61396a8286cde05bea720f5738eb939cc32b8d34", "url": "https://api.github.com/repos/rust-lang/rust/commits/61396a8286cde05bea720f5738eb939cc32b8d34", "html_url": "https://github.com/rust-lang/rust/commit/61396a8286cde05bea720f5738eb939cc32b8d34"}], "stats": {"total": 64, "additions": 61, "deletions": 3}, "files": [{"sha": "3b27890013a227f28a1c9dd7db6b5b62b6d6ac57", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/0ec40c1704a16c6d491dc747573f71fabbe79ed2/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ec40c1704a16c6d491dc747573f71fabbe79ed2/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=0ec40c1704a16c6d491dc747573f71fabbe79ed2", "patch": "@@ -3606,12 +3606,12 @@ impl<'a> Resolver<'a> {\n         }\n     }\n \n-    fn report_conflict(&mut self,\n+    fn report_conflict<'b>(&mut self,\n                        parent: Module,\n                        ident: Ident,\n                        ns: Namespace,\n-                       new_binding: &NameBinding,\n-                       old_binding: &NameBinding) {\n+                       new_binding: &NameBinding<'b>,\n+                       old_binding: &NameBinding<'b>) {\n         // Error on the second of two conflicting names\n         if old_binding.span.lo() > new_binding.span.lo() {\n             return self.report_conflict(parent, ident, ns, old_binding, new_binding);\n@@ -3683,6 +3683,26 @@ impl<'a> Resolver<'a> {\n                                                       old_noun, old_kind, name));\n         }\n \n+        // See https://github.com/rust-lang/rust/issues/32354\n+        if old_binding.is_import() || new_binding.is_import() {\n+            let binding = if new_binding.is_import() {\n+                new_binding\n+            } else {\n+                old_binding\n+            };\n+\n+            let cm = self.session.codemap();\n+            let rename_msg = \"You can use `as` to change the binding name of the import\";\n+\n+            if let Ok(snippet) = cm.span_to_snippet(binding.span) {\n+                err.span_suggestion(binding.span,\n+                                    rename_msg,\n+                                    format!(\"{} as Other{}\", snippet, name));\n+            } else {\n+                err.span_label(binding.span, rename_msg);\n+            }\n+        }\n+\n         err.emit();\n         self.name_already_seen.insert(name, span);\n     }"}, {"sha": "51aba27498f881beb907f95cb2fc28738f6bd0ec", "filename": "src/test/ui/suggestions/issue-32354-suggest-import-rename.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0ec40c1704a16c6d491dc747573f71fabbe79ed2/src%2Ftest%2Fui%2Fsuggestions%2Fissue-32354-suggest-import-rename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ec40c1704a16c6d491dc747573f71fabbe79ed2/src%2Ftest%2Fui%2Fsuggestions%2Fissue-32354-suggest-import-rename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-32354-suggest-import-rename.rs?ref=0ec40c1704a16c6d491dc747573f71fabbe79ed2", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod extension1 {\n+    pub trait ConstructorExtension {}\n+}\n+\n+pub mod extension2 {\n+    pub trait ConstructorExtension {}\n+}\n+\n+use extension1::ConstructorExtension;\n+use extension2::ConstructorExtension;\n+\n+fn main() {}"}, {"sha": "07985191284740d201fe47d6cc5d494de766cdc7", "filename": "src/test/ui/suggestions/issue-32354-suggest-import-rename.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0ec40c1704a16c6d491dc747573f71fabbe79ed2/src%2Ftest%2Fui%2Fsuggestions%2Fissue-32354-suggest-import-rename.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0ec40c1704a16c6d491dc747573f71fabbe79ed2/src%2Ftest%2Fui%2Fsuggestions%2Fissue-32354-suggest-import-rename.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-32354-suggest-import-rename.stderr?ref=0ec40c1704a16c6d491dc747573f71fabbe79ed2", "patch": "@@ -0,0 +1,16 @@\n+error[E0252]: the name `ConstructorExtension` is defined multiple times\n+  --> $DIR/issue-32354-suggest-import-rename.rs:20:5\n+   |\n+19 | use extension1::ConstructorExtension;\n+   |     -------------------------------- previous import of the trait `ConstructorExtension` here\n+20 | use extension2::ConstructorExtension;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `ConstructorExtension` reimported here\n+   |\n+   = note: `ConstructorExtension` must be defined only once in the type namespace of this module\n+help: You can use `as` to change the binding name of the import\n+   |\n+20 | use extension2::ConstructorExtension as OtherConstructorExtension;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}]}