{"sha": "784636f1c15c2b29d9cbdb5b40acfdc519cc601d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4NDYzNmYxYzE1YzJiMjlkOWNiZGI1YjQwYWNmZGM1MTljYzYwMWQ=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-03-12T19:51:08Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-03-12T19:51:29Z"}, "message": "Simplify a bit", "tree": {"sha": "f36391dfb670f7ce5ac4b7bbddcb59bf6d045c02", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f36391dfb670f7ce5ac4b7bbddcb59bf6d045c02"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/784636f1c15c2b29d9cbdb5b40acfdc519cc601d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/784636f1c15c2b29d9cbdb5b40acfdc519cc601d", "html_url": "https://github.com/rust-lang/rust/commit/784636f1c15c2b29d9cbdb5b40acfdc519cc601d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/784636f1c15c2b29d9cbdb5b40acfdc519cc601d/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05814e542fe6a303aa2a0d23411391d904d1fa26", "url": "https://api.github.com/repos/rust-lang/rust/commits/05814e542fe6a303aa2a0d23411391d904d1fa26", "html_url": "https://github.com/rust-lang/rust/commit/05814e542fe6a303aa2a0d23411391d904d1fa26"}], "stats": {"total": 15, "additions": 5, "deletions": 10}, "files": [{"sha": "1a2a3a8c7f1fa8a2d8b0be1c0ebf3449d0027f03", "filename": "crates/hir_ty/src/traits/chalk.rs", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/784636f1c15c2b29d9cbdb5b40acfdc519cc601d/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/784636f1c15c2b29d9cbdb5b40acfdc519cc601d/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk.rs?ref=784636f1c15c2b29d9cbdb5b40acfdc519cc601d", "patch": "@@ -487,19 +487,14 @@ pub(crate) fn struct_datum_query(\n     struct_id: AdtId,\n ) -> Arc<StructDatum> {\n     debug!(\"struct_datum {:?}\", struct_id);\n-    let type_ctor = Ty::Adt(struct_id, Substs::empty());\n     let chalk_ir::AdtId(adt_id) = struct_id;\n-    debug!(\"struct {:?} = {:?}\", struct_id, type_ctor);\n     let num_params = generics(db.upcast(), adt_id.into()).len();\n     let upstream = adt_id.module(db.upcast()).krate() != krate;\n-    let where_clauses = type_ctor\n-        .as_generic_def()\n-        .map(|generic_def| {\n-            let generic_params = generics(db.upcast(), generic_def);\n-            let bound_vars = Substs::bound_vars(&generic_params, DebruijnIndex::INNERMOST);\n-            convert_where_clauses(db, generic_def, &bound_vars)\n-        })\n-        .unwrap_or_else(Vec::new);\n+    let where_clauses = {\n+        let generic_params = generics(db.upcast(), adt_id.into());\n+        let bound_vars = Substs::bound_vars(&generic_params, DebruijnIndex::INNERMOST);\n+        convert_where_clauses(db, adt_id.into(), &bound_vars)\n+    };\n     let flags = rust_ir::AdtFlags {\n         upstream,\n         // FIXME set fundamental and phantom_data flags correctly"}]}