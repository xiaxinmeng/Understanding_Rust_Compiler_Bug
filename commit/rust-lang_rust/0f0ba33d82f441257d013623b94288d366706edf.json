{"sha": "0f0ba33d82f441257d013623b94288d366706edf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmMGJhMzNkODJmNDQxMjU3ZDAxMzYyM2I5NDI4OGQzNjY3MDZlZGY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-22T18:37:02Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-22T20:52:30Z"}, "message": "Factor alloc_uniq from trans_uniq\n\nIssue #409", "tree": {"sha": "5d3970829d62380e08dd3af423f48632ca14f696", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d3970829d62380e08dd3af423f48632ca14f696"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f0ba33d82f441257d013623b94288d366706edf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f0ba33d82f441257d013623b94288d366706edf", "html_url": "https://github.com/rust-lang/rust/commit/0f0ba33d82f441257d013623b94288d366706edf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f0ba33d82f441257d013623b94288d366706edf/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2b49b830967e2a185040d2ad76e2d02da88136d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2b49b830967e2a185040d2ad76e2d02da88136d", "html_url": "https://github.com/rust-lang/rust/commit/f2b49b830967e2a185040d2ad76e2d02da88136d"}], "stats": {"total": 27, "additions": 21, "deletions": 6}, "files": [{"sha": "8655dd283605e8861c814a482dbd0c8f1721da95", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/0f0ba33d82f441257d013623b94288d366706edf/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f0ba33d82f441257d013623b94288d366706edf/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=0f0ba33d82f441257d013623b94288d366706edf", "patch": "@@ -2041,7 +2041,7 @@ fn copy_val_no_check(cx: @block_ctxt, action: copy_action, dst: ValueRef,\n         ret take_ty(bcx, dst, t);\n     }\n     if type_is_structural_or_param(ccx.tcx, t) || ty::type_is_vec(ccx.tcx, t)\n-       {\n+        {\n         let bcx = cx;\n         if action == DROP_EXISTING { bcx = drop_ty(cx, dst, t); }\n         bcx = memmove_ty(bcx, dst, src, t).bcx;\n@@ -4518,7 +4518,24 @@ fn trans_uniq(cx: @block_ctxt, contents: @ast::expr,\n     let lv = trans_lval(bcx, contents);\n     bcx = lv.bcx;\n \n-    let contents_ty = ty::expr_ty(bcx_tcx(bcx), contents);\n+    let uniq_ty = node_id_type(bcx_ccx(cx), node_id);\n+    let {bcx, val: llptr} = alloc_uniq(bcx, uniq_ty);\n+\n+    bcx = move_val_if_temp(bcx, INIT, llptr, lv,\n+                           ty_uniq_contents(bcx, uniq_ty));\n+\n+    ret rslt(bcx, llptr);\n+}\n+\n+fn ty_uniq_contents(cx: @block_ctxt, uniq_ty: ty::t) -> ty::t {\n+    alt ty::struct(bcx_tcx(cx), uniq_ty) {\n+      ty::ty_uniq({ty: ct, _}) { ct }\n+    }\n+}\n+\n+fn alloc_uniq(cx: @block_ctxt, uniq_ty: ty::t) -> result {\n+    let bcx = cx;\n+    let contents_ty = ty_uniq_contents(cx, uniq_ty);\n     let r = size_of(bcx, contents_ty);\n     bcx = r.bcx;\n     let llsz = r.val;\n@@ -4529,11 +4546,9 @@ fn trans_uniq(cx: @block_ctxt, contents: @ast::expr,\n     bcx = r.bcx;\n     let llptr = r.val;\n \n-    bcx = move_val_if_temp(bcx, INIT, llptr, lv, contents_ty);\n+    add_clean_temp(bcx, llptr, uniq_ty);\n \n-    let uniq_ty = node_id_type(bcx_ccx(cx), node_id);\n-    add_clean_temp(r.bcx, llptr, uniq_ty);\n-    ret rslt(r.bcx, llptr);\n+    ret rslt(bcx, llptr);\n }\n \n fn trans_break_cont(sp: span, cx: @block_ctxt, to_end: bool) -> result {"}]}