{"sha": "5099914a16a215794ad243df0cc7a05d91d168e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwOTk5MTRhMTZhMjE1Nzk0YWQyNDNkZjBjYzdhMDVkOTFkMTY4ZTA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-09-08T16:01:26Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-09-08T16:01:26Z"}, "message": "Auto merge of #76332 - Mark-Simulacrum:bootstrap-llvm, r=pietroalbini\n\nAdd rust-dev component to support rustc development\n\nThis is preparatory work for permitting rustc developers to use CI-built LLVM rather than building it locally. Unlike distro-built LLVM, CI built LLVM is essentially guaranteed to behave perfectly for local development -- it is fully up to date, and carries all necessary patches.\n\nThis is a separate PR from #76349 because it needs to land before that one, since we want a master build with the full CI LLVM to be available for easier testing.", "tree": {"sha": "3b9831a5336b49aaba3e06a1bb2a1d4bd7f51a07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b9831a5336b49aaba3e06a1bb2a1d4bd7f51a07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5099914a16a215794ad243df0cc7a05d91d168e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5099914a16a215794ad243df0cc7a05d91d168e0", "html_url": "https://github.com/rust-lang/rust/commit/5099914a16a215794ad243df0cc7a05d91d168e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5099914a16a215794ad243df0cc7a05d91d168e0/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bc0bf72545f5d6ac6d9639391da875d5e147d9a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bc0bf72545f5d6ac6d9639391da875d5e147d9a", "html_url": "https://github.com/rust-lang/rust/commit/7bc0bf72545f5d6ac6d9639391da875d5e147d9a"}, {"sha": "aa4554f42deec0d81f89251960f6abb5acc2f6e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa4554f42deec0d81f89251960f6abb5acc2f6e2", "html_url": "https://github.com/rust-lang/rust/commit/aa4554f42deec0d81f89251960f6abb5acc2f6e2"}], "stats": {"total": 83, "additions": 83, "deletions": 0}, "files": [{"sha": "04b90bba1aec548465d02ef65b1e4b6b42ed4bbd", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5099914a16a215794ad243df0cc7a05d91d168e0/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5099914a16a215794ad243df0cc7a05d91d168e0/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=5099914a16a215794ad243df0cc7a05d91d168e0", "patch": "@@ -471,6 +471,7 @@ impl<'a> Builder<'a> {\n                 dist::Clippy,\n                 dist::Miri,\n                 dist::LlvmTools,\n+                dist::RustDev,\n                 dist::Extended,\n                 dist::HashSign\n             ),"}, {"sha": "579bacb0d90384efb907a45cc11bd15a8e09b4e9", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/5099914a16a215794ad243df0cc7a05d91d168e0/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5099914a16a215794ad243df0cc7a05d91d168e0/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=5099914a16a215794ad243df0cc7a05d91d168e0", "patch": "@@ -2499,3 +2499,85 @@ impl Step for LlvmTools {\n         Some(distdir(builder).join(format!(\"{}-{}.tar.gz\", name, target.triple)))\n     }\n }\n+\n+// Tarball intended for internal consumption to ease rustc/std development.\n+//\n+// Should not be considered stable by end users.\n+#[derive(Clone, Debug, Eq, Hash, PartialEq)]\n+pub struct RustDev {\n+    pub target: TargetSelection,\n+}\n+\n+impl Step for RustDev {\n+    type Output = Option<PathBuf>;\n+    const DEFAULT: bool = true;\n+    const ONLY_HOSTS: bool = true;\n+\n+    fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n+        run.path(\"rust-dev\")\n+    }\n+\n+    fn make_run(run: RunConfig<'_>) {\n+        run.builder.ensure(RustDev { target: run.target });\n+    }\n+\n+    fn run(self, builder: &Builder<'_>) -> Option<PathBuf> {\n+        let target = self.target;\n+\n+        builder.info(&format!(\"Dist RustDev ({})\", target));\n+        let _time = timeit(builder);\n+        let src = builder.src.join(\"src/llvm-project/llvm\");\n+        let name = pkgname(builder, \"rust-dev\");\n+\n+        let tmp = tmpdir(builder);\n+        let image = tmp.join(\"rust-dev-image\");\n+        drop(fs::remove_dir_all(&image));\n+\n+        // Prepare the image directory\n+        let dst_bindir = image.join(\"bin\");\n+        t!(fs::create_dir_all(&dst_bindir));\n+        let exe = builder.llvm_out(target).join(\"bin\").join(exe(\"llvm-config\", target));\n+        builder.install(&exe, &dst_bindir, 0o755);\n+        builder.install(&builder.llvm_filecheck(target), &dst_bindir, 0o755);\n+\n+        // Copy the include directory as well; needed mostly to build\n+        // librustc_llvm properly (e.g., llvm-config.h is in here). But also\n+        // just broadly useful to be able to link against the bundled LLVM.\n+        builder.cp_r(&builder.llvm_out(target).join(\"include\"), &image.join(\"include\"));\n+\n+        // Copy libLLVM.so to the target lib dir as well, so the RPATH like\n+        // `$ORIGIN/../lib` can find it. It may also be used as a dependency\n+        // of `rustc-dev` to support the inherited `-lLLVM` when using the\n+        // compiler libraries.\n+        maybe_install_llvm(builder, target, &image.join(\"lib\"));\n+\n+        // Prepare the overlay\n+        let overlay = tmp.join(\"rust-dev-overlay\");\n+        drop(fs::remove_dir_all(&overlay));\n+        builder.create_dir(&overlay);\n+        builder.install(&src.join(\"README.txt\"), &overlay, 0o644);\n+        builder.install(&src.join(\"LICENSE.TXT\"), &overlay, 0o644);\n+        builder.create(&overlay.join(\"version\"), &builder.rust_version());\n+\n+        // Generate the installer tarball\n+        let mut cmd = rust_installer(builder);\n+        cmd.arg(\"generate\")\n+            .arg(\"--product-name=Rust\")\n+            .arg(\"--rel-manifest-dir=rustlib\")\n+            .arg(\"--success-message=rust-dev-installed.\")\n+            .arg(\"--image-dir\")\n+            .arg(&image)\n+            .arg(\"--work-dir\")\n+            .arg(&tmpdir(builder))\n+            .arg(\"--output-dir\")\n+            .arg(&distdir(builder))\n+            .arg(\"--non-installed-overlay\")\n+            .arg(&overlay)\n+            .arg(format!(\"--package-name={}-{}\", name, target.triple))\n+            .arg(\"--legacy-manifest-dirs=rustlib,cargo\")\n+            .arg(\"--component-name=rust-dev\");\n+\n+        builder.run(&mut cmd);\n+        Some(distdir(builder).join(format!(\"{}-{}.tar.gz\", name, target.triple)))\n+    }\n+}"}]}