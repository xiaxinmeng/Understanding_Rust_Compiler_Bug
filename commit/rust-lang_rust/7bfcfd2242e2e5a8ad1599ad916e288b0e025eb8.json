{"sha": "7bfcfd2242e2e5a8ad1599ad916e288b0e025eb8", "node_id": "C_kwDOAAsO6NoAKDdiZmNmZDIyNDJlMmU1YThhZDE1OTlhZDkxNmUyODhiMGUwMjVlYjg", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-08-10T04:13:31Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-08-10T04:18:12Z"}, "message": "Fix failing test\n\nFor some reason, adding some text to match against makes this test pass.\nBefore, when it was *more* general, it was failing!\n\nThis seems very likely to be a bug in htmldocck, which I'm going to\ninvestigate.", "tree": {"sha": "82012d254706e2fb712c1ea26197c7eb592dd230", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82012d254706e2fb712c1ea26197c7eb592dd230"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7bfcfd2242e2e5a8ad1599ad916e288b0e025eb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7bfcfd2242e2e5a8ad1599ad916e288b0e025eb8", "html_url": "https://github.com/rust-lang/rust/commit/7bfcfd2242e2e5a8ad1599ad916e288b0e025eb8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7bfcfd2242e2e5a8ad1599ad916e288b0e025eb8/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fcbdf08a86216291ff747500b7cfe4d11feb92ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/fcbdf08a86216291ff747500b7cfe4d11feb92ad", "html_url": "https://github.com/rust-lang/rust/commit/fcbdf08a86216291ff747500b7cfe4d11feb92ad"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "a7bc1c6a29f51535c5acb69b8e3e5635f2e55578", "filename": "src/test/rustdoc/intra-doc/assoc-reexport-super.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bfcfd2242e2e5a8ad1599ad916e288b0e025eb8/src%2Ftest%2Frustdoc%2Fintra-doc%2Fassoc-reexport-super.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bfcfd2242e2e5a8ad1599ad916e288b0e025eb8/src%2Ftest%2Frustdoc%2Fintra-doc%2Fassoc-reexport-super.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fassoc-reexport-super.rs?ref=7bfcfd2242e2e5a8ad1599ad916e288b0e025eb8", "patch": "@@ -14,7 +14,7 @@ pub use generated::MyNewType;\n mod prelude {\n     impl super::MyNewType {\n         /// An alias for [`Self::FOO`].\n-        // @has 'foo/struct.MyNewType.html' '//a[@href=\"struct.MyNewType.html#associatedconstant.FOO\"]'\n+        // @has 'foo/struct.MyNewType.html' '//a[@href=\"struct.MyNewType.html#associatedconstant.FOO\"]' 'Self::FOO'\n         pub const FOO2: Self = Self::FOO;\n     }\n }"}]}