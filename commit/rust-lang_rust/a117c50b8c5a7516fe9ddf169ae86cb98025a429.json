{"sha": "a117c50b8c5a7516fe9ddf169ae86cb98025a429", "node_id": "C_kwDOAAsO6NoAKGExMTdjNTBiOGM1YTc1MTZmZTlkZGYxNjlhZTg2Y2I5ODAyNWE0Mjk", "commit": {"author": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2023-02-17T22:47:16Z"}, "committer": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2023-02-17T22:50:42Z"}, "message": "Implement `AsHandle`/`AsSocket` for `Arc`/`Rc`/`Box` on Windows\n\nImplement the Windows counterpart to #97437 and #107317: Implement\n`AsHandle` and `AsSocket` for `Arc<T>`, `Rc<T>`, and `Box<T>`.", "tree": {"sha": "307ce970aec0fe5576b4260232d60aae171a46a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/307ce970aec0fe5576b4260232d60aae171a46a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a117c50b8c5a7516fe9ddf169ae86cb98025a429", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a117c50b8c5a7516fe9ddf169ae86cb98025a429", "html_url": "https://github.com/rust-lang/rust/commit/a117c50b8c5a7516fe9ddf169ae86cb98025a429", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a117c50b8c5a7516fe9ddf169ae86cb98025a429/comments", "author": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9aa5c24b7d763fb98d998819571128ff2eb8a3ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/9aa5c24b7d763fb98d998819571128ff2eb8a3ca", "html_url": "https://github.com/rust-lang/rust/commit/9aa5c24b7d763fb98d998819571128ff2eb8a3ca"}], "stats": {"total": 72, "additions": 72, "deletions": 0}, "files": [{"sha": "e9a42545dad01c4ca56179872daca8115ebbb6b1", "filename": "library/std/src/os/windows/io/handle.rs", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/a117c50b8c5a7516fe9ddf169ae86cb98025a429/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a117c50b8c5a7516fe9ddf169ae86cb98025a429/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs?ref=a117c50b8c5a7516fe9ddf169ae86cb98025a429", "patch": "@@ -437,6 +437,42 @@ impl<T: AsHandle> AsHandle for &mut T {\n     }\n }\n \n+#[stable(feature = \"as_windows_ptrs\", since = \"CURRENT_RUSTC_VERSION\")]\n+/// This impl allows implementing traits that require `AsHandle` on Arc.\n+/// ```\n+/// # #[cfg(windows)] mod group_cfg {\n+/// # use std::os::windows::io::AsHandle;\n+/// use std::fs::File;\n+/// use std::sync::Arc;\n+///\n+/// trait MyTrait: AsHandle {}\n+/// impl MyTrait for Arc<File> {}\n+/// impl MyTrait for Box<File> {}\n+/// # }\n+/// ```\n+impl<T: AsHandle> AsHandle for crate::sync::Arc<T> {\n+    #[inline]\n+    fn as_handle(&self) -> BorrowedHandle<'_> {\n+        (**self).as_handle()\n+    }\n+}\n+\n+#[stable(feature = \"as_windows_ptrs\", since = \"CURRENT_RUSTC_VERSION\")]\n+impl<T: AsHandle> AsHandle for crate::rc::Rc<T> {\n+    #[inline]\n+    fn as_handle(&self) -> BorrowedHandle<'_> {\n+        (**self).as_handle()\n+    }\n+}\n+\n+#[stable(feature = \"as_windows_ptrs\", since = \"CURRENT_RUSTC_VERSION\")]\n+impl<T: AsHandle> AsHandle for Box<T> {\n+    #[inline]\n+    fn as_handle(&self) -> BorrowedHandle<'_> {\n+        (**self).as_handle()\n+    }\n+}\n+\n #[stable(feature = \"io_safety\", since = \"1.63.0\")]\n impl AsHandle for BorrowedHandle<'_> {\n     #[inline]"}, {"sha": "bd0c7a9792af057fdb19cafcc68b7ef3aa8ac339", "filename": "library/std/src/os/windows/io/socket.rs", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/a117c50b8c5a7516fe9ddf169ae86cb98025a429/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fsocket.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a117c50b8c5a7516fe9ddf169ae86cb98025a429/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fsocket.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fsocket.rs?ref=a117c50b8c5a7516fe9ddf169ae86cb98025a429", "patch": "@@ -247,6 +247,42 @@ impl<T: AsSocket> AsSocket for &mut T {\n     }\n }\n \n+#[stable(feature = \"as_windows_ptrs\", since = \"CURRENT_RUSTC_VERSION\")]\n+/// This impl allows implementing traits that require `AsSocket` on Arc.\n+/// ```\n+/// # #[cfg(windows)] mod group_cfg {\n+/// # use std::os::windows::io::AsSocket;\n+/// use std::net::UdpSocket;\n+/// use std::sync::Arc;\n+///\n+/// trait MyTrait: AsSocket {}\n+/// impl MyTrait for Arc<UdpSocket> {}\n+/// impl MyTrait for Box<UdpSocket> {}\n+/// # }\n+/// ```\n+impl<T: AsSocket> AsSocket for crate::sync::Arc<T> {\n+    #[inline]\n+    fn as_socket(&self) -> BorrowedSocket<'_> {\n+        (**self).as_socket()\n+    }\n+}\n+\n+#[stable(feature = \"as_windows_ptrs\", since = \"CURRENT_RUSTC_VERSION\")]\n+impl<T: AsSocket> AsSocket for crate::rc::Rc<T> {\n+    #[inline]\n+    fn as_socket(&self) -> BorrowedSocket<'_> {\n+        (**self).as_socket()\n+    }\n+}\n+\n+#[stable(feature = \"as_windows_ptrs\", since = \"CURRENT_RUSTC_VERSION\")]\n+impl<T: AsSocket> AsSocket for Box<T> {\n+    #[inline]\n+    fn as_socket(&self) -> BorrowedSocket<'_> {\n+        (**self).as_socket()\n+    }\n+}\n+\n #[stable(feature = \"io_safety\", since = \"1.63.0\")]\n impl AsSocket for BorrowedSocket<'_> {\n     #[inline]"}]}