{"sha": "84d10c68fb893d32f0a2bf4d4f7eb05511023776", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0ZDEwYzY4ZmI4OTNkMzJmMGEyYmY0ZDRmN2ViMDU1MTEwMjM3NzY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-10-02T01:03:09Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-10-02T02:24:48Z"}, "message": "docs: Task tutorial cleanup", "tree": {"sha": "a6af51589229b80c29314abc175d1ed29af334e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6af51589229b80c29314abc175d1ed29af334e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84d10c68fb893d32f0a2bf4d4f7eb05511023776", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84d10c68fb893d32f0a2bf4d4f7eb05511023776", "html_url": "https://github.com/rust-lang/rust/commit/84d10c68fb893d32f0a2bf4d4f7eb05511023776", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84d10c68fb893d32f0a2bf4d4f7eb05511023776/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa010a6ee45f5ca106a4a475e06f4fa75d0c0970", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa010a6ee45f5ca106a4a475e06f4fa75d0c0970", "html_url": "https://github.com/rust-lang/rust/commit/fa010a6ee45f5ca106a4a475e06f4fa75d0c0970"}], "stats": {"total": 37, "additions": 27, "deletions": 10}, "files": [{"sha": "f81311d89a37f7a73d8e95e7273ccf39364bde26", "filename": "doc/tutorial-tasks.md", "status": "modified", "additions": 27, "deletions": 10, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/84d10c68fb893d32f0a2bf4d4f7eb05511023776/doc%2Ftutorial-tasks.md", "raw_url": "https://github.com/rust-lang/rust/raw/84d10c68fb893d32f0a2bf4d4f7eb05511023776/doc%2Ftutorial-tasks.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial-tasks.md?ref=84d10c68fb893d32f0a2bf4d4f7eb05511023776", "patch": "@@ -168,7 +168,6 @@ do spawn {\n \n some_other_expensive_computation();\n let result = port.recv();\n-\n # fn some_expensive_computation() -> int { 42 }\n # fn some_other_expensive_computation() {}\n ~~~~\n@@ -189,10 +188,10 @@ spawns the child task.\n \n ~~~~\n # use task::{spawn};\n-# use comm::{Port, Chan};\n+# use task::spawn;\n+# use pipes::{stream, Port, Chan};\n # fn some_expensive_computation() -> int { 42 }\n-# let port = Port();\n-# let chan = port.chan();\n+# let (chan, port) = stream();\n do spawn {\n     let result = some_expensive_computation();\n     chan.send(result);\n@@ -221,10 +220,29 @@ let result = port.recv();\n The `Port` and `Chan` pair created by `stream` enable efficient\n communication between a single sender and a single receiver, but\n multiple senders cannot use a single `Chan`, nor can multiple\n-receivers use a single `Port`. What if our example needed to\n-perform multiple computations across a number of tasks? In that\n-case we might use a `SharedChan`, a type that allows a single\n-`Chan` to be used by multiple senders.\n+receivers use a single `Port`.  What if our example needed to perform\n+multiple computations across a number of tasks? The following cannot\n+be written:\n+\n+~~~ {.xfail-test}\n+# use task::{spawn};\n+# use pipes::{stream, Port, Chan};\n+# fn some_expensive_computation() -> int { 42 }\n+let (chan, port) = stream();\n+\n+do spawn {\n+    chan.send(some_expensive_computation());\n+}\n+\n+// ERROR! The previous spawn statement already owns the channel,\n+// so the compiler will not allow it to be captured again\n+do spawn {\n+    chan.send(some_expensive_computation());\n+}\n+~~~\n+\n+Instead we can use a `SharedChan`, a type that allows a single\n+`Chan` to be shared by multiple senders.\n \n ~~~\n # use task::spawn;\n@@ -263,13 +281,12 @@ might look like the example below.\n # use task::spawn;\n # use pipes::{stream, Port, Chan};\n \n+// Create a vector of ports, one for each child task\n let ports = do vec::from_fn(3) |init_val| {\n     let (chan, port) = stream();\n-\n     do spawn {\n         chan.send(some_expensive_computation(init_val));\n     }\n-\n     port\n };\n "}]}