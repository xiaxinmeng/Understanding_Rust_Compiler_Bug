{"sha": "828461b4b27c4a955587887936e54057efc5e2c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyODQ2MWI0YjI3YzRhOTU1NTg3ODg3OTM2ZTU0MDU3ZWZjNWUyYzE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-11-22T13:10:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-11-22T13:10:15Z"}, "message": "Auto merge of #78816 - SkiFire13:fix-slice-pointer-provenance, r=RalfJung\n\n<[T]>::reverse: Fix pointer provenance rules\n\nShould fix #78749", "tree": {"sha": "cee4721e3cb3e4f9a5a224ef0f5e814f0827ab92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cee4721e3cb3e4f9a5a224ef0f5e814f0827ab92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/828461b4b27c4a955587887936e54057efc5e2c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/828461b4b27c4a955587887936e54057efc5e2c1", "html_url": "https://github.com/rust-lang/rust/commit/828461b4b27c4a955587887936e54057efc5e2c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/828461b4b27c4a955587887936e54057efc5e2c1/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d5ff84130da0d74c6ece368dbe821d8f83fa526", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d5ff84130da0d74c6ece368dbe821d8f83fa526", "html_url": "https://github.com/rust-lang/rust/commit/5d5ff84130da0d74c6ece368dbe821d8f83fa526"}, {"sha": "23d82761f7e4b273b2b299904279e45ced3e5a1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/23d82761f7e4b273b2b299904279e45ced3e5a1f", "html_url": "https://github.com/rust-lang/rust/commit/23d82761f7e4b273b2b299904279e45ced3e5a1f"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "d3af6b9ae6b46200142ed965c40a94aacc52abae", "filename": "library/core/src/slice/mod.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/828461b4b27c4a955587887936e54057efc5e2c1/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828461b4b27c4a955587887936e54057efc5e2c1/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs?ref=828461b4b27c4a955587887936e54057efc5e2c1", "patch": "@@ -605,8 +605,9 @@ impl<T> [T] {\n                 //     many bytes away from the end of `self`.\n                 //   - Any initialized memory is valid `usize`.\n                 unsafe {\n-                    let pa: *mut T = self.get_unchecked_mut(i);\n-                    let pb: *mut T = self.get_unchecked_mut(ln - i - chunk);\n+                    let ptr = self.as_mut_ptr();\n+                    let pa = ptr.add(i);\n+                    let pb = ptr.add(ln - i - chunk);\n                     let va = ptr::read_unaligned(pa as *mut usize);\n                     let vb = ptr::read_unaligned(pb as *mut usize);\n                     ptr::write_unaligned(pa as *mut usize, vb.swap_bytes());\n@@ -635,8 +636,9 @@ impl<T> [T] {\n                 // always respected, ensuring the `pb` pointer can be used\n                 // safely.\n                 unsafe {\n-                    let pa: *mut T = self.get_unchecked_mut(i);\n-                    let pb: *mut T = self.get_unchecked_mut(ln - i - chunk);\n+                    let ptr = self.as_mut_ptr();\n+                    let pa = ptr.add(i);\n+                    let pb = ptr.add(ln - i - chunk);\n                     let va = ptr::read_unaligned(pa as *mut u32);\n                     let vb = ptr::read_unaligned(pb as *mut u32);\n                     ptr::write_unaligned(pa as *mut u32, vb.rotate_left(16));\n@@ -654,8 +656,9 @@ impl<T> [T] {\n             // aligned, and can be read from and written to.\n             unsafe {\n                 // Unsafe swap to avoid the bounds check in safe swap.\n-                let pa: *mut T = self.get_unchecked_mut(i);\n-                let pb: *mut T = self.get_unchecked_mut(ln - i - 1);\n+                let ptr = self.as_mut_ptr();\n+                let pa = ptr.add(i);\n+                let pb = ptr.add(ln - i - 1);\n                 ptr::swap(pa, pb);\n             }\n             i += 1;"}]}