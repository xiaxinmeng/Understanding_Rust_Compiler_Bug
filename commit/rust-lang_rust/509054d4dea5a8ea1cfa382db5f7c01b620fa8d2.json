{"sha": "509054d4dea5a8ea1cfa382db5f7c01b620fa8d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwOTA1NGQ0ZGVhNWE4ZWExY2ZhMzgyZGI1ZjdjMDFiNjIwZmE4ZDI=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-11-06T18:49:33Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-11-06T18:49:33Z"}, "message": "Fix ICE", "tree": {"sha": "18424417e47367a6c80c82e5d6e0d3bdf13dc5d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18424417e47367a6c80c82e5d6e0d3bdf13dc5d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/509054d4dea5a8ea1cfa382db5f7c01b620fa8d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/509054d4dea5a8ea1cfa382db5f7c01b620fa8d2", "html_url": "https://github.com/rust-lang/rust/commit/509054d4dea5a8ea1cfa382db5f7c01b620fa8d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/509054d4dea5a8ea1cfa382db5f7c01b620fa8d2/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b66df42496201e6512f53cde83ba444a5990567", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b66df42496201e6512f53cde83ba444a5990567", "html_url": "https://github.com/rust-lang/rust/commit/9b66df42496201e6512f53cde83ba444a5990567"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "e038df2272f899740f8ddb448b0108076ae40ab4", "filename": "src/discriminant.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/509054d4dea5a8ea1cfa382db5f7c01b620fa8d2/src%2Fdiscriminant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/509054d4dea5a8ea1cfa382db5f7c01b620fa8d2/src%2Fdiscriminant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdiscriminant.rs?ref=509054d4dea5a8ea1cfa382db5f7c01b620fa8d2", "patch": "@@ -26,12 +26,15 @@ pub(crate) fn codegen_set_discriminant<'tcx>(\n             variants: _,\n         } => {\n             let ptr = place.place_field(fx, mir::Field::new(tag_field));\n-            let to = layout\n-                .ty\n-                .discriminant_for_variant(fx.tcx, variant_index)\n-                .unwrap()\n-                .val\n-                .into();\n+            let to = ty::ScalarInt::try_from_uint(\n+                layout\n+                    .ty\n+                    .discriminant_for_variant(fx.tcx, variant_index)\n+                    .unwrap()\n+                    .val,\n+                ptr.layout().size,\n+            )\n+            .unwrap();\n             let discr = CValue::const_val(fx, ptr.layout(), to);\n             ptr.write_cvalue(fx, discr);\n         }"}]}