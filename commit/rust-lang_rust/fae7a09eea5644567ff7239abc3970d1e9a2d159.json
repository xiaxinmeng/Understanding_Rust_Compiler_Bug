{"sha": "fae7a09eea5644567ff7239abc3970d1e9a2d159", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhZTdhMDllZWE1NjQ0NTY3ZmY3MjM5YWJjMzk3MGQxZTlhMmQxNTk=", "commit": {"author": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2021-07-01T10:35:16Z"}, "committer": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2021-07-01T10:38:30Z"}, "message": "match_wildcard_for_single_variants: don't produce bad suggestion\n\nThis fixes a bug where match_wildcard_for_single_variants produced a\nbad suggestion where besides the missing variant, one or more hidden\nvariants were left.\n\nThis also adds tests to the ui-tests match_wildcard_for_single_variants\nand wildcard_enum_match_arm to make sure that the correct suggestion is\nproduced.", "tree": {"sha": "98279d9bdb3909ffc426d20c9010d2abfdc149b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98279d9bdb3909ffc426d20c9010d2abfdc149b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fae7a09eea5644567ff7239abc3970d1e9a2d159", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEij1UXJ/PQTcb99vTHKDfKvWdaKUFAmDdm5sACgkQHKDfKvWd\naKVLyg/+OO4Z9VWIny24r3R8aA79emo6KOPs9XDgVjasqEsWo8Hnao/17oZMJlTw\nUifL7jhlCgxENmmgB+lpVChhfFHNkLIGec12PeKPX0s2+ZO1ozSVjIFhkbpbt/8f\nNpXlB4huSKaT/1tv2aea5gASMWrH2GRKtPgfcVlIC/wghl7H10PXNhzlC8dZSemt\n6zEnHYHRvxyTUBMCgKjQ8TxMYogPshy7otGRMaOX1agQeX3UNSwPZJYCHIQjxfy8\nT20OGRhK5qk/INtqcX2M5n1YZ6T6zNvKvILTDTAWe7MTkXmCmKAdF+cVJOSv2JwO\nL3n0RwnFQkfgrjYaYPvBPpCccHAUGnA+cMJKrQIZI+46P0r13L1/ScFI4CNyjebq\nR1kKMKZKGn09kzFNVv4rmqcjy8jgi4oJnYmKDqexRjjkmpJ5qLfemp+PhNHdif68\nmDVk8/8WJIHerMs7tZj1l8o0kz6UaZV8a9sMCeauW326L0JkKUhX4T8nUNBocwS3\nI9zS/po3VickiAHuRcM6JjKCLiywymULoWUDcav4KLAwSuXO7CAuMmiNAYLGCkH7\nSrvX2SxdP6dRipIEHlgPF84EuFch8SxzWpm5OiWUDELEasFMBt4E0vmNb3H5+HyR\nBd/Mea7ZXHfoh04dGXYoQS3IQ+AuA7MseRMXAMjVbSThUD38w14=\n=6nKC\n-----END PGP SIGNATURE-----", "payload": "tree 98279d9bdb3909ffc426d20c9010d2abfdc149b3\nparent 0ffba7a68442767cb9ddcc1cc4224d17800f7f63\nauthor flip1995 <philipp.krones@embecosm.com> 1625135716 +0200\ncommitter flip1995 <philipp.krones@embecosm.com> 1625135910 +0200\n\nmatch_wildcard_for_single_variants: don't produce bad suggestion\n\nThis fixes a bug where match_wildcard_for_single_variants produced a\nbad suggestion where besides the missing variant, one or more hidden\nvariants were left.\n\nThis also adds tests to the ui-tests match_wildcard_for_single_variants\nand wildcard_enum_match_arm to make sure that the correct suggestion is\nproduced.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fae7a09eea5644567ff7239abc3970d1e9a2d159", "html_url": "https://github.com/rust-lang/rust/commit/fae7a09eea5644567ff7239abc3970d1e9a2d159", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fae7a09eea5644567ff7239abc3970d1e9a2d159/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ffba7a68442767cb9ddcc1cc4224d17800f7f63", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ffba7a68442767cb9ddcc1cc4224d17800f7f63", "html_url": "https://github.com/rust-lang/rust/commit/0ffba7a68442767cb9ddcc1cc4224d17800f7f63"}], "stats": {"total": 55, "additions": 52, "deletions": 3}, "files": [{"sha": "4c90b95a42b6749e70b17570622ea187cae996fc", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fae7a09eea5644567ff7239abc3970d1e9a2d159/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fae7a09eea5644567ff7239abc3970d1e9a2d159/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=fae7a09eea5644567ff7239abc3970d1e9a2d159", "patch": "@@ -1033,6 +1033,7 @@ fn check_wild_enum_match(cx: &LateContext<'_>, ex: &Expr<'_>, arms: &[Arm<'_>])\n \n     // Accumulate the variants which should be put in place of the wildcard because they're not\n     // already covered.\n+    let has_hidden = adt_def.variants.iter().any(|x| is_hidden(cx, x));\n     let mut missing_variants: Vec<_> = adt_def.variants.iter().filter(|x| !is_hidden(cx, x)).collect();\n \n     let mut path_prefix = CommonPrefixSearcher::None;\n@@ -1118,7 +1119,7 @@ fn check_wild_enum_match(cx: &LateContext<'_>, ex: &Expr<'_>, arms: &[Arm<'_>])\n \n     match missing_variants.as_slice() {\n         [] => (),\n-        [x] if !adt_def.is_variant_list_non_exhaustive() => span_lint_and_sugg(\n+        [x] if !adt_def.is_variant_list_non_exhaustive() && !has_hidden => span_lint_and_sugg(\n             cx,\n             MATCH_WILDCARD_FOR_SINGLE_VARIANTS,\n             wildcard_span,\n@@ -1129,7 +1130,7 @@ fn check_wild_enum_match(cx: &LateContext<'_>, ex: &Expr<'_>, arms: &[Arm<'_>])\n         ),\n         variants => {\n             let mut suggestions: Vec<_> = variants.iter().copied().map(format_suggestion).collect();\n-            let message = if adt_def.is_variant_list_non_exhaustive() {\n+            let message = if adt_def.is_variant_list_non_exhaustive() || has_hidden {\n                 suggestions.push(\"_\".into());\n                 \"wildcard matches known variants and will also match future added variants\"\n             } else {"}, {"sha": "e675c183ea7117c646b99e04438c524f07fec3dc", "filename": "tests/ui/match_wildcard_for_single_variants.fixed", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/fae7a09eea5644567ff7239abc3970d1e9a2d159/tests%2Fui%2Fmatch_wildcard_for_single_variants.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/fae7a09eea5644567ff7239abc3970d1e9a2d159/tests%2Fui%2Fmatch_wildcard_for_single_variants.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_wildcard_for_single_variants.fixed?ref=fae7a09eea5644567ff7239abc3970d1e9a2d159", "patch": "@@ -115,9 +115,16 @@ fn main() {\n         pub enum Enum {\n             A,\n             B,\n+            C,\n             #[doc(hidden)]\n             __Private,\n         }\n+        match Enum::A {\n+            Enum::A => (),\n+            Enum::B => (),\n+            Enum::C => (),\n+            _ => (),\n+        }\n         match Enum::A {\n             Enum::A => (),\n             Enum::B => (),"}, {"sha": "38c3ffc00c71b4bc8cad9251ad1aa4b674899203", "filename": "tests/ui/match_wildcard_for_single_variants.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/fae7a09eea5644567ff7239abc3970d1e9a2d159/tests%2Fui%2Fmatch_wildcard_for_single_variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fae7a09eea5644567ff7239abc3970d1e9a2d159/tests%2Fui%2Fmatch_wildcard_for_single_variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_wildcard_for_single_variants.rs?ref=fae7a09eea5644567ff7239abc3970d1e9a2d159", "patch": "@@ -115,9 +115,16 @@ fn main() {\n         pub enum Enum {\n             A,\n             B,\n+            C,\n             #[doc(hidden)]\n             __Private,\n         }\n+        match Enum::A {\n+            Enum::A => (),\n+            Enum::B => (),\n+            Enum::C => (),\n+            _ => (),\n+        }\n         match Enum::A {\n             Enum::A => (),\n             Enum::B => (),"}, {"sha": "3ee4ab48ac84b215c6a21d34e4be0e85f74fa414", "filename": "tests/ui/wildcard_enum_match_arm.fixed", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fae7a09eea5644567ff7239abc3970d1e9a2d159/tests%2Fui%2Fwildcard_enum_match_arm.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/fae7a09eea5644567ff7239abc3970d1e9a2d159/tests%2Fui%2Fwildcard_enum_match_arm.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_enum_match_arm.fixed?ref=fae7a09eea5644567ff7239abc3970d1e9a2d159", "patch": "@@ -87,4 +87,18 @@ fn main() {\n         ErrorKind::PermissionDenied => {},\n         _ => {},\n     }\n+\n+    {\n+        #![allow(clippy::manual_non_exhaustive)]\n+        pub enum Enum {\n+            A,\n+            B,\n+            #[doc(hidden)]\n+            __Private,\n+        }\n+        match Enum::A {\n+            Enum::A => (),\n+            Enum::B | _ => (),\n+        }\n+    }\n }"}, {"sha": "46886550453308a340353c5a8c9c8b143a0877a9", "filename": "tests/ui/wildcard_enum_match_arm.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fae7a09eea5644567ff7239abc3970d1e9a2d159/tests%2Fui%2Fwildcard_enum_match_arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fae7a09eea5644567ff7239abc3970d1e9a2d159/tests%2Fui%2Fwildcard_enum_match_arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_enum_match_arm.rs?ref=fae7a09eea5644567ff7239abc3970d1e9a2d159", "patch": "@@ -87,4 +87,18 @@ fn main() {\n         ErrorKind::PermissionDenied => {},\n         _ => {},\n     }\n+\n+    {\n+        #![allow(clippy::manual_non_exhaustive)]\n+        pub enum Enum {\n+            A,\n+            B,\n+            #[doc(hidden)]\n+            __Private,\n+        }\n+        match Enum::A {\n+            Enum::A => (),\n+            _ => (),\n+        }\n+    }\n }"}, {"sha": "d63f2090353151a55ec431d50b814d8e2c6c7bc2", "filename": "tests/ui/wildcard_enum_match_arm.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fae7a09eea5644567ff7239abc3970d1e9a2d159/tests%2Fui%2Fwildcard_enum_match_arm.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fae7a09eea5644567ff7239abc3970d1e9a2d159/tests%2Fui%2Fwildcard_enum_match_arm.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_enum_match_arm.stderr?ref=fae7a09eea5644567ff7239abc3970d1e9a2d159", "patch": "@@ -34,5 +34,11 @@ error: wildcard matches known variants and will also match future added variants\n LL |         _ => {},\n    |         ^ help: try this: `ErrorKind::PermissionDenied | _`\n \n-error: aborting due to 5 previous errors\n+error: wildcard matches known variants and will also match future added variants\n+  --> $DIR/wildcard_enum_match_arm.rs:101:13\n+   |\n+LL |             _ => (),\n+   |             ^ help: try this: `Enum::B | _`\n+\n+error: aborting due to 6 previous errors\n "}]}