{"sha": "f604ff5b2f72a593e23953ed8be7e9cbeba5d287", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2MDRmZjViMmY3MmE1OTNlMjM5NTNlZDhiZTdlOWNiZWJhNWQyODc=", "commit": {"author": {"name": "csmoe", "email": "csmoe@msn.com", "date": "2019-01-04T13:29:00Z"}, "committer": {"name": "csmoe", "email": "csmoe@msn.com", "date": "2019-01-04T13:29:00Z"}, "message": "parse doc comment for items", "tree": {"sha": "a084598dfd0c70fed03f1ac556be9b7eed5fb43d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a084598dfd0c70fed03f1ac556be9b7eed5fb43d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f604ff5b2f72a593e23953ed8be7e9cbeba5d287", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f604ff5b2f72a593e23953ed8be7e9cbeba5d287", "html_url": "https://github.com/rust-lang/rust/commit/f604ff5b2f72a593e23953ed8be7e9cbeba5d287", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f604ff5b2f72a593e23953ed8be7e9cbeba5d287/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a6d6ac1326ed522004350ae5700ef3ca10c8230", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a6d6ac1326ed522004350ae5700ef3ca10c8230", "html_url": "https://github.com/rust-lang/rust/commit/8a6d6ac1326ed522004350ae5700ef3ca10c8230"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "1e26a2889347fa33a11a4ee9aec9911261cefb22", "filename": "crates/ra_analysis/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f604ff5b2f72a593e23953ed8be7e9cbeba5d287/crates%2Fra_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f604ff5b2f72a593e23953ed8be7e9cbeba5d287/crates%2Fra_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Flib.rs?ref=f604ff5b2f72a593e23953ed8be7e9cbeba5d287", "patch": "@@ -394,7 +394,7 @@ impl Analysis {\n     pub fn doc_text_for(&self, nav: NavigationTarget) -> Cancelable<Option<String>> {\n         self.db.doc_text_for(nav)\n     }\n-    /// Returns a `mod name;` declaration whihc created the current module.\n+    /// Returns a `mod name;` declaration which created the current module.\n     pub fn parent_module(&self, position: FilePosition) -> Cancelable<Vec<NavigationTarget>> {\n         self.db.parent_module(position)\n     }"}, {"sha": "859778024a4aa81e9cde50ef5d54a903eadc9881", "filename": "crates/ra_analysis/tests/test/main.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f604ff5b2f72a593e23953ed8be7e9cbeba5d287/crates%2Fra_analysis%2Ftests%2Ftest%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f604ff5b2f72a593e23953ed8be7e9cbeba5d287/crates%2Fra_analysis%2Ftests%2Ftest%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Ftests%2Ftest%2Fmain.rs?ref=f604ff5b2f72a593e23953ed8be7e9cbeba5d287", "patch": "@@ -249,7 +249,8 @@ fn bar() {\n fn test_fn_signature_with_docs_simple() {\n     let (desc, param) = get_signature(\n         r#\"\n-// test\n+/// test\n+// non-doc-comment\n fn foo(j: u32) -> u32 {\n     j\n }"}, {"sha": "c5273a7a26aeac2f8579fc161ade336776247c29", "filename": "crates/ra_syntax/src/ast.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f604ff5b2f72a593e23953ed8be7e9cbeba5d287/crates%2Fra_syntax%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f604ff5b2f72a593e23953ed8be7e9cbeba5d287/crates%2Fra_syntax%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast.rs?ref=f604ff5b2f72a593e23953ed8be7e9cbeba5d287", "patch": "@@ -115,6 +115,7 @@ pub trait DocCommentsOwner<'a>: AstNode<'a> {\n     /// That is, strips leading `///` and joins lines\n     fn doc_comment_text(self) -> RustString {\n         self.doc_comments()\n+            .filter(|comment| comment.is_doc_comment())\n             .map(|comment| {\n                 let prefix = comment.prefix();\n                 let trimmed = comment\n@@ -206,6 +207,10 @@ impl<'a> Comment<'a> {\n         }\n     }\n \n+    pub fn is_doc_comment(&self) -> bool {\n+        self.flavor().is_doc_comment()\n+    }\n+\n     pub fn prefix(&self) -> &'static str {\n         self.flavor().prefix()\n     }\n@@ -237,6 +242,13 @@ impl CommentFlavor {\n             Multiline => \"/*\",\n         }\n     }\n+\n+    pub fn is_doc_comment(&self) -> bool {\n+        match self {\n+            CommentFlavor::Doc | CommentFlavor::ModuleDoc => true,\n+            _ => false,\n+        }\n+    }\n }\n \n impl<'a> Whitespace<'a> {"}]}