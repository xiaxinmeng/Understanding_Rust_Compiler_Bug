{"sha": "3cb200a2bacc1dc9cb83cf065235d28c2e2681a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjYjIwMGEyYmFjYzFkYzljYjgzY2YwNjUyMzVkMjhjMmUyNjgxYTk=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-21T10:18:30Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-21T10:18:30Z"}, "message": "Add tests involving Rc, Arc, and Cell.", "tree": {"sha": "fef32b598f82b2d8924aefac1e8df843786eded9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fef32b598f82b2d8924aefac1e8df843786eded9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3cb200a2bacc1dc9cb83cf065235d28c2e2681a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3cb200a2bacc1dc9cb83cf065235d28c2e2681a9", "html_url": "https://github.com/rust-lang/rust/commit/3cb200a2bacc1dc9cb83cf065235d28c2e2681a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3cb200a2bacc1dc9cb83cf065235d28c2e2681a9/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11c78fbdc8289e31b11a4ebda9f4930794de16bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/11c78fbdc8289e31b11a4ebda9f4930794de16bb", "html_url": "https://github.com/rust-lang/rust/commit/11c78fbdc8289e31b11a4ebda9f4930794de16bb"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "916a85bc1a57385cd0c751df086ae3213c5e5466", "filename": "test/std.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/3cb200a2bacc1dc9cb83cf065235d28c2e2681a9/test%2Fstd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cb200a2bacc1dc9cb83cf065235d28c2e2681a9/test%2Fstd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test%2Fstd.rs?ref=3cb200a2bacc1dc9cb83cf065235d28c2e2681a9", "patch": "@@ -0,0 +1,19 @@\n+#![feature(custom_attribute, box_syntax)]\n+#![allow(dead_code, unused_attributes)]\n+\n+#[miri_run]\n+fn rc_cell() -> i32 {\n+    use std::rc::Rc;\n+    use std::cell::Cell;\n+    let r = Rc::new(Cell::new(42));\n+    let x = r.get();\n+    r.set(x + x);\n+    r.get()\n+}\n+\n+#[miri_run]\n+fn arc() -> i32 {\n+    use std::sync::Arc;\n+    let a = Arc::new(42);\n+    *a\n+}"}]}